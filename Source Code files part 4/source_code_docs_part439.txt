stFramework.LiveService.Notification.UserMsgFolder.AddSentMessage(ServerTestFramework.LiveService.Notification.UserMessage)">
            <summary>
            Manually add a message to the collection.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.Load">
            <summary>
            Enumerate messages from server
            </summary>
            <returns>Number of messages present </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.Load2">
            <summary>
            Enumerate messages from server using new enum2 message type
            </summary>
            <returns>Number of messages present </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.LoadEx">
            <summary>
            Enumerate messages from server using new enum2 message type if the user is
            a xenon user or enumerate using old API for xbox 1 user.
            </summary>
            <returns>Number of messages present </returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.FindBySender(System.Byte,System.UInt64)">
            <summary>
            Finds messages in folder that match given criteria
            </summary>
            <param name="type">Messsage type</param>
            <param name="senderId">User ID of sender</param>
            <returns>Array of messages that match</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.FindByContext(System.Byte,System.UInt64)">
            <summary>
            Finds messages in folder that match given criteria
            </summary>
            <param name="type">Messsage type</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <returns>Array of messages that match</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.Find(System.Byte,System.UInt64,System.UInt64)">
            <summary>
            Finds messages in folder that match given criteria
            </summary>
            <param name="type">Messsage type</param>
            <param name="senderId">User ID of sender</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <returns>Array of messages that match</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.WaitForMsgBySender(System.Byte,System.UInt64,System.UInt16)">
            <summary>
            Waits for a message that matches given criteria
            </summary>
            <param name="type">Message type</param>
            <param name="senderId">User ID of sender</param>
            <param name="waitSec">Seconds to wait</param>
            <returns>The first message found that matches</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.WaitForMsgByContext(System.Byte,System.UInt64,System.UInt16)">
            <summary>
            Waits for a message that matches given criteria
            </summary>
            <param name="type">Message type</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <param name="waitSec">Seconds to wait</param>
            <returns>The first message found that matches</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.WaitForMsg(System.Byte,System.UInt64,System.UInt64,System.UInt16)">
            <summary>
            Waits for a message that matches given criteria
            </summary>
            <param name="type">Message type</param>
            <param name="senderId">User ID of sender</param>
            <param name="context">Message type specific context (ie. comp ID)</param>
            <param name="waitSec">Seconds to wait</param>
            <returns>The first message found that matches</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Notification.UserMsgFolder.ValidateContainsMessage(System.UInt32,ServerTestFramework.LiveService.Notification.UserMessage)">
             <summary>
             Look for a message matching the ID with parameters matching the input
             template.
            
             This method does not do any waiting so it is best to pair with something like
             WaitForNewMessage() on the PNUser to get the message ID.
             </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.Notification.UserMsgFolder.Item(System.UInt32)">
            <summary>
            Indexer to sent message table
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.MsgTime">
            <summary>
            Messaging protocol time is a shortened offset from 1/1/2003
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.UserMsgSummary">
            <summary>
            Message summary data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Notification.UserMsgSummary2">
            <summary>
            Message summary data
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState">
            <summary>
            Create a multi-value wait state where all conditions must be
            met for the wait to complete.
            </summary>
            <summary>
            Create a multi-value wait state where all conditions must be
            met for the wait to complete.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.#ctor">
            <summary>
            Create a new conditional wait state for a target user. A default of 5 seconds
            will be used for the wait timeout.
            </summary>
            <param name="user">User to act as the target</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.#ctor(System.UInt32)">
            <summary>
            Create a new conditional wait state for a target user.
            </summary>
            <param name="user">User to act as the target</param>
            <param name="maxTimeoutSeconds">Timeout in seconds for the wait state</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredNotification(xonline.common.community.DATA_TYPES,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required qflag that should arive based on the action of 
            a certain sender.
            </summary>
            <param name="qFlagMask">Bits to wait on, usually this will be a single bit. See XonPresNoti for bit definitions.</param>
            <param name="sender">Initiator of the action.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.ToString">
            <summary>
            Build a condition string.
            </summary>
            <returns>A string representing all conditions currently unsatisfied</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.WaitOnConditions(System.Boolean)">
            <summary>
            Wait on all conditions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredQFlag(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required qflag that should arive based on the action of 
            a certain sender.
            </summary>
            <param name="qFlagMask">Bits to wait on, usually this will be a single bit. See XonPresNoti for bit definitions.</param>
            <param name="sender">Initiator of the action.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredMessageType(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required messaging qval that should arive based on the action
            of the sender. Match the type of the message.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredMessageData(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required messaging qval that should arive based on the action
            of the sender. Match the data flags in the message
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.AddRequiredDeletedMessageId(System.UInt32,ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a new required deleted messaging qval that should arive based on the action
            of the sender.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.QFlagCondition">
            <summary>
            Condition class that wraps a qflag change on a user. This condition
            will be satisified when that qflag is delivered to the user.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.MessagingCondition">
            <summary>
            Condition class that wraps a messaging qval change.
            will be satisified when that qval data is delivered to the user.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Presence.PNConditionalWaitState.DeletedMessagingCondition">
            <summary>
            Condition class that wraps a deleted message qval change.
            will be satisified when that qval data is delivered to the user.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.SGADDR">
            <summary>
            Unique SG session Identifier
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XNADDR">
            <summary>
            Part of Online Socket Library client endpoint desciptors (from winsockx.h)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XNADDR.Check(ServerTestFramework.LiveService.PresNotiCommon.XNADDR)">
            <summary>
            Validates given value agaist current state
            </summary>
            <param name="xnAddr">Test value</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XNKID">
            <summary>
            Part of Online Socket Library client endpoint desciptors (from winsockx.h)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XNKID.Check(ServerTestFramework.LiveService.PresNotiCommon.XNKID)">
            <summary>
            Validates given value agaist current state
            </summary>
            <param name="xnKID">Test value</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XNKEY">
            <summary>
            Part of Online Socket Library client endpoint desciptors (from winsockx.h)
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgHdr">
            <summary>
            Common header for Pres and Noti messages (BASE_MSG_HEADER)
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsg">
            <summary>
            Common wrapper for commom Presence and notication message header and custom data.
            (Duplicates Read and Write stream semantics without derivation or specific
            overloading becuse the Wiredata constructor did not like some of the stuff
            that needed to be ddone here. The PresNoti protocol is not very stream friendly.)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsg.ReadStream(System.IO.Stream)">
            <summary>
            Loads known Pres and Noit reply messaages from a data stream.
            </summary>
            <param name="stream">Reply message data stream</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsg.WriteStream(System.IO.Stream)">
            <summary>
            Serializes Pres and Noti request messages to a data stream.
            </summary>
            <param name="stream">Request message data stream</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNBaseAckReplyMsgData">
            <summary>
            Message data specific to the common Base Ack Reply
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadSG">
            <summary>
            Inform the servers that the given SG just went offline, so any users who were on 
            this SG should be considered offline also.  
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadSG.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNDeadSGMsgData">
            <summary>
            Message data specific to Dead SG request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadUser">
             <summary>
             Inform the presence or notification server that the given user just went offline.
             Format is the same for both Presence and Notification
            
             DeadUser is a forged user message, it requires a valid auth data response from the
             SG but the user ID cannot be in the ticket.
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadUser.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Constructor
            </summary>
            <param name="user">User that is offline</param>
            <param name="service">Presence or Notificaion</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNDeadUserMsgData">
            <summary>
            Message data specific to Dead User request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadXbox">
            <summary>
            Inform the servers that the given XBox just went offline. Any users who were on this 
            XBox should be considered offline also. Notification will consider items pertaining 
            to this address no longer relevant and delete them.
            Format is the same for both Presence and Notification
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgDeadXbox.#ctor(ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Constructor
            </summary>
            <param name="xbox">Xbox going offiline</param>
            <param name="service">Presence or Notificaion</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNDeadXboxMsgData">
            <summary>
            Message data specific to Dead Xbox request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNMsgHello">
            <summary>
            Must be the first message sent between servers after establishing a TCP connection.
            Format is the same for both Presence and Notification
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNMsgHello.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNHelloMsgData">
            <summary>
            Message data specific to Hello request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser">
            <summary>
            Simulation state for a user in the the presence and notificatiion system.
            This is state storage, the methods here to not attempt to maintain consistency
            or correctness of User state data.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.PresNotiCommon.PNUser.HQV_ReadMessages">
            <summary>
            Enumerated flags passed or'd together can be passed
            to HandleQValPacket to control how qval data is processed
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor">
            <summary>
            Creates an user with default data.
            Intended for PN testing only. (Real users get there Ids from UACS.)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor(System.String,System.UInt64)">
            <summary>
            Create with name raw values provided
            </summary>
            <param name="name">User's gamertag</param>
            <param name="userId">User's PUID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor(System.String,System.UInt64,ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Create with name raw values provided, link user to provided console
            </summary>
            <param name="name">User's gamertag</param>
            <param name="userId">User's PUID</param>
            <param name="xbox">Linked console</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.#ctor(ServerTestFramework.Database.PuidName)">
            <summary>
            Create with users made using framework's UODB stuff
            </summary>
            <param name="puidName"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Connect(ServerTestFramework.LiveService.PresNotiCommon.PNXbox)">
            <summary>
            Establish connection with FakeSG so it will start collecting QVals
            for this user
            </summary>
            <param name="xbox">Xbox that user will connect to FakeSG through</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Reconnect">
            <summary>
            Manually reconnect a user to an xbox
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Disconnect">
            <summary>
            Remove association with fake SG, QVal reply will start reporting this
            user as not found
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Invalidate">
            <summary>
            Reload the online presence record.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ClearState">
            <summary>
            Cleans out user login state
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Alive">
            <summary>
            Build and send alive msg, then update state with default presecne flags and buddy
            and block list info returned
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Dead">
            <summary>
            Send dead user message to presence and notification clusters
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetAuthData">
            <summary>
            Generate HTTP auth data block for this user
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send a request to add a buddy.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User being asked to be a buddy</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AcceptBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send accept of a buddy request.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User that asked to be buddies</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send reject of a buddy request.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User that asked to be buddies</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Send reject of a buddy request.
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">User that asked to be buddies</param>
            <param name="never">Never see buddy request from that user again</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send delete of requested buddy (accepted or not).
            Buddy list update happens if/when notificaiton is handled
            </summary>
            <param name="buddy">Buddy being deleted</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteAllBuddies">
            <summary>
            Send delete to all buddies and make sure all buddy lists (theirs and
            ours) get updated by waiting for and handling notifications.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetBuddyInfo(System.UInt64)">
            <summary>
            Lookup buddy information for any buddy state by the associated
            buddies user ID.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddPeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Add a user to the list of peer subscribed users.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddPeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Add an array of users to the list of peer subscribed users.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemovePeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Remove one of the users that is subscribed and update subscriptions
            on server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemovePeerSubscription(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Remove an array of users that are subscribed and update subscriptions
            on server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribe(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Peer subscribe to a single user. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribe(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Peer subscribe to a list of users. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribeEx(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Peer subscribe to a single user. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribeEx(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Peer subscribe to a list of users. Replaces any subscriptions.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerSubscribeEx(ServerTestFramework.LiveService.PresNotiCommon.PNUser[],ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Add Peer subscription to an add list of users. Remove any subscriptions from the delete list.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerUnsubscribe">
            <summary>
            Tear down any existing peer subscriptions on server.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsPeerSubscribed(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Test peer subscription state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsPeerSubscribed(System.UInt64)">
            <summary>
            Test peer subscription state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPeerInfo(System.UInt64)">
            <summary>
            Lookup a peer info tracking struct.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ExpectInviteBlip">
            <summary>
            Tell WaitForInviteBlip that you are waiting for an additional
            invite. (Stores current invite sequence number)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForInviteBlip">
            <summary>
            Wait for the invite count to go above the last stored invite 
            blip count (see ExpectInviteBlip()).
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Invite(ServerTestFramework.LiveService.PresNotiCommon.PNUser[],System.UInt64)">
            <summary>
            Send game session invitation to one or more users
            </summary>
            <param name="invited">Users to invite</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Invite2(ServerTestFramework.LiveService.PresNotiCommon.PNUser[],System.UInt64,System.UInt64,System.UInt32,ServerTestFramework.LiveService.Notification.MsgDetails)">
            <summary>
            Send game session invitation to one or more users with extra
            messaging parameters and/or competition/team data.
            </summary>
            <param name="invited">Users to invite</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AcceptInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send acceptance of invitation to game session
            </summary>
            <param name="host">User that sent the invitations</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetInvitationInfo(System.UInt64)">
            <summary>
            Lookup an invite tracking struct by host user ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPendingOwnedInvite">
            <summary>
            Lookup an invite tracking struct by that is being hosted
            by this user. There can be only one.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsInvitedFromBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Check to see if an invite is pending from a buddy.
            </summary>
            <param name="host">User that might have sent the invitation</param>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsInvitedFromPeer(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Check to see if an invite is pending from a peer.
            </summary>
            <param name="host">User that might have sent the invitation</param>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsInvited(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Check to see if an invite is pending from anyone at all.
            </summary>
            <param name="host">User that might have sent the invitation</param>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.HasUnAnsweredInvite">
            <summary>
            Look for unanswereqd pending invite
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send rejection of invitation to game session
            </summary>
            <param name="host">User that sent the invitations</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RejectInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Boolean)">
            <summary>
            Reject a pending invite.
            </summary>
            <param name="host">User that sent the invitations</param>
            <param name="never">Add host to user's never list</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.CancelInvite(ServerTestFramework.LiveService.PresNotiCommon.PNUser[])">
            <summary>
            Send revocation of game session invitation to one or more users
            </summary>
            <param name="invited">Users no longer invited</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.EnterSession(System.UInt64,System.Boolean)">
            <summary>
            If we are not already in a session this will cause this user
            to appear to enter a session.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.EnterSessionWithObserver(System.UInt64,System.Boolean,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Enter session and wait for the observer to receive a notification
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.LeaveSession">
            <summary>
            Make it appear to presence and reporting that we have left any session
            that we might have been a part of
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetMessageInfo(System.UInt32)">
            <summary>
            Lookup a stored message tracking struct by the message ID.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetMessageInfoFrom(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Lookup all stored message tracking structs by the sending user ID.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetMessageInfoTypeFrom(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Lookup all stored message tracking structs by the sending user ID and message type.
            If the message type is 0 all messages from this user will be returned.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteMessage(System.UInt32)">
            <summary>
            Delete a message by it's ID. Also removes any tracking structs.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemoveDeletedMessages">
            <summary>
            Remove messages that have been revoked or deleted on the server (we have received
            a deleted message qval for this message ID)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DeleteAllMessages">
            <summary>
            For all tracking message structs delete the message on the server. Also
            removes tracking struct and returns the array of hresults returned from
            DeleteMessage().
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.RemoveMessageInfo(System.UInt32)">
            <summary>
            Remove a message tracking struct.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Mute(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send addition to list of voice blocked users
            </summary>
            <param name="block">User to shut up</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.UnMute(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Send deletion from list of voice blocked users
            </summary>
            <param name="unblock">User to listen to again</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.UnMuteAll">
            <summary>
            Send deletion from all voice blocked users
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.AddConsoleStateInfo(System.UInt32@)">
            <summary>
            Sets the Console Type Bits in the Local State
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData">
            <summary>
            Send current state flags, match session and Title data to server
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.UInt32)">
            <summary>
            Store new value(s). Then send current state flags, match session and Title
            data to server
            </summary>
            <param name="state">New state flags</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.UInt64)">
            <summary>
            Store new value(s). Then send current state flags, match session and Title
            data to server
            </summary>
            <param name="matchId">New match session ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.Byte[])">
            <summary>
            Store new value(s). Then send current state flags, match session and Title
            data to server
            </summary>
            <param name="titleStuff">New title data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleData(System.UInt32,System.UInt64,System.Byte[])">
            <summary>
            Store new value(s). Then send current state flags, match session and Title
            data to server
            </summary>
            <param name="state">New state flags</param>
            <param name="matchId">New match session ID</param>
            <param name="titleStuff">New title data</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.SetTitleDataWait(System.UInt32,System.UInt64,ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Store new value(s). Then send current state flags, match session and Title
            data to server. The observer subscribes to the user and waits to receive a notification
            that state has changed.
            </summary>
            <param name="state">New state flags</param>
            <param name="matchId">New match session ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetWebFriends">
            <summary>
            Get web friends direct from FD (not webcache)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsLimitedPresence">
            <summary>
            Get web friends direct from FD (not webcache)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsNoPresence">
            <summary>
            Get web friends direct from FD (not webcache)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsList(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Get web friends direct from FD (not webcache)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsList(System.UInt64,System.UInt64,xonline.common.protocol.socialquery.GetFriendSortType,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Get a user's friends list directly from social query FD and matches the passed in HR.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsList(xonline.common.protocol.socialquery.GetFriendSortType,System.Int32,System.Int32)">
            <summary>
            Get a user's friends list directly from social query FD
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsList(System.UInt64,System.Int32,System.Int32)">
            <summary>
            Request another user's friends list directly from social query FD
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetFriendsList(System.UInt64,xonline.common.protocol.socialquery.GetFriendSortType,System.Int32,System.Int32)">
            <summary>
            Request another user's friends list sorted by parameter directly from social query FD
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPresenceInfo(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Use datacenter port to query presence info for a target.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetPeerSession(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo@)" -->
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatusPending(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for outgoing buddy request
            </summary>
            <param name="buddy">User being checked</param>
            <returns>A request has been sent to buddy</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatusRequested(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for incoming buddy request
            </summary>
            <param name="buddy">User being checked</param>
            <returns>A request has come from buddy</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatusOK(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for established buddy relationship
            </summary>
            <param name="buddy">User being checked</param>
            <returns>User is a fully accepted buddy</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyStatus(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Checks for specified buddy stats
            </summary>
            <param name="buddy">User being checked</param>
            <param name="status">Status being checked for</param>
            <returns>Is a user a buddy with the given status</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.IsBuddy(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Checks for existence of buddy list entry (regardless of Status)
            </summary>
            <param name="buddy">User being checked</param>
            <returns>User is in buddy list</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusPending(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for a buddy request to a user to be confirmed
            </summary>
            <param name="buddy">User request was sent to</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusRequested(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for a buddy request from a user to come in
            </summary>
            <param name="buddy">User that made request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusOK(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for an accepted buddy request to be confirmed
            </summary>
            <param name="buddy">User that either made or accepted the request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatusDeleted(ServerTestFramework.LiveService.PresNotiCommon.PNUser)">
            <summary>
            Wait for a buddy deletion to be confirmed.
            </summary>
            <param name="buddy">User that is to be removed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.MutualWaitForStatus(ServerTestFramework.LiveService.PresNotiCommon.PNUser,ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Waits and watches Qflags and gets list change and buddy request notifications
            (if flags indicate the need to) in order to try for specified buddy stats.
            </summary>
            <param name="buddy">User waiting on</param>
            <param name="status">Satus being watied for</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForBuddyStatus(ServerTestFramework.LiveService.PresNotiCommon.PNUser,System.Byte)">
            <summary>
            Waits and watches Qflags and gets list change and buddy request notifications
            (if flags indicate the need to) in order to try for specified buddy stats.
            </summary>
            <param name="buddy">User waiting on</param>
            <param name="status">Satus being watied for</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetListChangeNotifications">
            <summary>
            Gets and processes List Change notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetBuddyRequestNotifications">
            <summary>
            Gets and processes Buddy Request notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetInviteNotifications">
            <summary>
            Gets and processes Invite notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetInviteAnswerNotifications">
            <summary>
            Gets and processes Invite Answer notification queue items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DequeueNotifications(System.UInt16)">
            <summary>
            Provide granular control over the dequeue message
            </summary>
            <param name="qType">Queue to dequeue from</param>
            <returns>Dequeue reply data</returns>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.DequeueNotifications(System.UInt16,System.UInt32,System.UInt16,System.UInt32)">
            <summary>
            Provide granular control over the dequeue message
            </summary>
            <param name="qType">Queue to dequeue from</param>
            <param name="startItemID">Item in queue to start with</param>
            <param name="maxItems">Max items to return</param>
            <param name="maxTotalItemsDataSize">Max total payload data size to return in bytes</param>
            <returns>Dequeue reply data</returns>/
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.GetNotifications(System.UInt16)">
            <summary>
            Gets and processes notification queue items
            </summary>
            <param name="qType">ID of Queue to get items from</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForNewMessage">
            <summary>
            Wait for next message (any).
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForNewMessageType(System.Byte)">
            <summary>
            Wait for a specific type of message to be delivered to the user.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForNewMessage(System.UInt32,System.UInt32)">
            <summary>
            Wait for a message matching data flags to appear in the 0th slot of the
            messaging qvals. Passing zero will return the first non-zero qval.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForDeletedMessage">
            <summary>
            Wait for a non-zero message ID on the deleted message qval payload
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForDeletedMessage(System.UInt32)">
            <summary>
            Wait for a specific message ID on the deleted message qval payload
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.WaitForQFlags(System.UInt32)">
            <summary>
            Wait for a single qval flag, note that this method can be bad for internal state since
            it doesn't ensure that the items are dequeued or that the qvals are updated correctly.
            Also any flags that come in before the one specified will not be correctly handled.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ProcessQVals">
            <summary>
            Process qvals with default settings.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNUser.ProcessQVals(System.UInt32)">
            <summary>
            Process qvals on the wire, dequeue and updating internal state with dequeues.
            Flags may be 0 or a combination of the HQV flags to control how the processed
            qvals should be processed.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNUser.LoggedOn">
            <summary>
            Checks users state bits to see in online flag is set
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNUser.Connected">
            <summary>
            Checks if an xbox is set for this user
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.BuddyInfo">
            <summary>
            Used to store information about users buddies
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.InvitationInfo">
            <summary>
            Represents an invitation from a user to a game session. If the Host == this then this is
            an out going InvitationItem
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.PeerInfo">
            <summary>
            Represents a peer subscription to another user
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNUser.MessageInfo">
            <summary>
            Represents message data that was received in a messaging QVAL
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo">
            <summary>
            Consolodates session info (title and client endpoint)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo.Check(ServerTestFramework.LiveService.PresNotiCommon.XSessionInfo)">
            <summary>
            Compares current with given state and throws exception when differences found
            </summary>
            <param name="sessInfo">Data to compare against</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.PresNotiCommon.PNXbox">
            <summary>
            Simulation state for an Xbox in the the presence and notificatiion system
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#cctor">
            <summary>
            Static initializer for clearing any Xbox that the FakeSG is tracking
            this should cleanup the corresponding data in presence the first time
            any PNXbox is used.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor">
            <summary>
            Creates an xbox with default data in connected state
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32)">
            <summary>
            Creates an xbox with default data in connected state with specified titleID
            </summary>
            <param name="titleId">Title ID to be initially connected with</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt64,System.UInt32,ServerTestFramework.LiveService.FakeSG.CSGInfo.ClientType)">
            <summary>
            Creates an existing xbox with default data in a connect state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32,System.UInt64)">
            <summary>
            Creates an xbox with default data in connected state with titleId and clientVersion
            </summary>
            <param name="titleId">Title ID to be initially connected with</param>
            <param name="clientVersion">Version of client, default is 5936</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32,System.UInt64,System.Boolean)">
            <summary>
            Creates an xbox with default data in connected state with titleId and clientVersion and Xenon client
            </summary>
            <param name="titleId">Title ID to be initially connected with</param>
            <param name="clientVersion">Version of client, default is 5936</param>
            <param name="isXenonTitle">Is this a Xenon title (client) or Xbox</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.#ctor(System.UInt32,System.UInt32,System.UInt64)">
            <summary>
            Create with raw values provided, intended for invalid test cases.
            Not initially connected
            </summary>
            <param name="ipsg">SgAddr IP</param>
            <param name="spisg">SgAddr SPI</param>
            <param name="xboxId">SgAddr Xbox ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ConnectToFakeSG">
            <summary>
            Establish this xbox in the fake SG. This method can be called more than once
            to update the associated information about this Xbox in the SG.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.UpdateFakeSG">
            <summary>
            Refresh data in Fake SG will throw if a SPI has not been generated
            indicating a 'disconnected' state.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.DisconnectFromFakeSG">
            <summary>
            Clear SPI, remove this Xbox instance from the FakeSG
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.DeadXbox">
            <summary>
            Send dead xbox message via the CSgMsgNotifyCliDelete
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ChangeTitle(System.UInt32)">
            <summary>
            Change the Title ID, using the default title version and region
            </summary>
            <param name="titleId">New Title ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ChangeTitle(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Change title information on the local xbox object and in the fake sg
            </summary>
            <param name="titleId">New title Id</param>
            <param name="titleVer">New title version</param>
            <param name="titleRegion">New Title Region</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.CanConsumeRichPresence">
            <summary>
            Returns True if this XBox is expecting to dequeue Presenece 2 items
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.GetUserByIndex(System.Int32)">
            <summary>
            Return user on certain index on this controller.
            </summary>
            <param name="userIndex"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.PresNotiCommon.PNXbox.ConnectedToFakeSG">
            <summary>
            Is xbox connected to SG (fakeSG)
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.GetDefaultExpirationForMsgType(System.Byte)">
            <summary>
            Gets the default expiration time, in minutes, for the given message type
            </summary>
            <param name="bMsgType">Message type</param>
            <returns>Default expiration time, in minutes</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.BuddyStatusToString(System.Byte)">
            <summary>
            Get the friendly name for a buddy status byte
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.QTypeToString(System.UInt32)">
            <summary>
            Get the friendly name for a presence QType ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.BuildQFlagsString(System.UInt32)">
            <summary>
            Build a string representation of a qflags bit set
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.ListChangeOpToString(System.UInt16)">
            <summary>
            Get the friendly name for a list change operation
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.PresNotiCommon.XonPresNoti.BuildMsgNotificationFlagsString(System.UInt32)">
            <summary>
            Build a string representation of the messaging qval notification flags.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest">
            <summary>
            This class represents a GetSiteInfo request that originates in an SG 
            LSP server and makes its way to a LSP front-door server by way of the
            LSP proxy, Web SG, and the Live proxy.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest.siteID">
            <summary>
            The Site ID for the GetSiteInfo request.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest.Execute(System.Net.IPEndPoint)">
            <summary>
            Executes the request.
            </summary>
            <param name="proxyEndPoint">The IPEndPoint of the LSP proxy that 
            this request will be sent through.</param>
            <returns>true if successful.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.QueryAndLsp.XRLLSPProxyGetSiteInfoRequest.ReadResponse(System.IO.MemoryStream)">
            <summary>
            Reads in the response from the LSP Front Door server. The read
            response is then stored in the 32-bit integer this.response.
            </summary>
            <param name="responseStream"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.QueryAndLsp.XRLSiteInfo">
            <summary>
            This class represents the LSP Front Door server's response to a 
            GetSiteInfo request.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.#ctor">
            <summary>
            DBHelper without stats server simulation.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.#ctor(ServerTestFramework.LiveService.Stats.StatsDBSim.StatsIMDB,System.Boolean)">
            <summary>
            DBHelper with stats server simulation.
            </summary>
            <param name="StatsImdb">IMDB to use for simulation</param>
            <param name="UpdateStatsSim">Keep simulation up to date?</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.LBSname(System.Int32)">
            <summary>
            Used to get a Leaderboard Server's descriptive name.
            </summary>
            <param name="index">Leaderboard Server Index: 0 to n where n = TotalLBServers - 1</param>
            <returns>Name of the Leaderboard Server for the given index</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.LBSinfo(System.Int32)">
            <summary>
            Used to get Information on a Leaderboard Server given its index.
            </summary>
            <param name="index">Leaderboard Server Index: 0 to n where n = TotalLBServers - 1</param>
            <returns>IPEndPoint Structure describing the Leaderboard for the given index</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.SetTitleReadWrite(System.Int32,System.Int32)">
            <summary>
            Used to set a Title as Read/Write
            </summary>
            <param name="TitleID">TitleId to set as Read/Write</param>
            <param name="maxReadwrites">Max Number of Reads/Writes.  Recommended Value: 5</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.HalfConfigureTitle(System.Int32,ServerTestFramework.LiveService.Stats.StatsDBSim.LeaderboardInfo[])">
            <summary>
            Sets up half of the needed information for a title.  Here to reproduce a bug.
            </summary>
            <param name="Title_id">Title Id to "half" configure</param>
            <param name="lbtypes">Array of leaderboards to create for the title</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ConfigureTitle(System.Int32,ServerTestFramework.LiveService.Stats.StatsDBSim.LeaderboardInfo[])">
            <summary>
            Completely (re)configure a Title.  Any leaderboards already existing are laid waste.
            </summary>
            <param name="Title_id">Title Id to configure</param>
            <param name="lbtypes">Array of leaderboards to create for the title</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.deleteLeaderBoard(System.Int32,System.Int32,System.Int32)">
            <summary>
            Delete a Leaderboard, removing it from NPDB.
            </summary>
            <param name="Title_id">Title Id for leaderboard</param>
            <param name="LB_Type">Leaderboard Id to delete</param>
            <param name="ServerIndex">LBS Index where the leaderboard resides</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.CreateV2LB(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte,System.Int32)">
            <summary>
            Create a non-arbitrated gamertag leaderboard with no ELo Params on LBS Index 0.
            </summary>
            <param name="Title_id">Title Id to create leaderboard for</param>
            <param name="LB_Type">Leaderboard Id to create</param>
            <param name="Reset_Type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="AttCount">Attachment Count: 0 to n</param>
            <param name="Max_AttSize">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="IsTop100">Is this a Top 100 Leaderboard?</param>
            <param name="Decayindays">Time until a user's leaderboard entry becomes invalid and subject to removal, 0=Never</param>
            <returns>0, no matter what</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.HalfCreateNewLeaderBoards(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte,System.Int32,System.String,System.Byte,System.Byte,System.Int32)">
            <summary>
            Half-Creates a leaderboard for a title.
            
            Leaderbord is cleaned up by manually removing the row from NPDB.
            </summary>
            <param name="Title_id">Title Id to create leaderboard for</param>
            <param name="LB_Type">Leaderboard Id to create</param>
            <param name="Reset_Type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="AttCount">Attachment Count: 0 to n</param>
            <param name="Max_AttSize">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="IsTop100">Is this a a Top 100 Leaderboard?</param>
            <param name="Decayindays">Time until a user's leaderboard entry becomes invalid and subject to removal: 0=Never</param>
            <param name="param">ELo Parameters, used to define the curve for ranking</param>
            <param name="IsTeamLB">Is this a Team Leaderboard?</param>
            <param name="IsArbitrated">Should this leaderboard be arbitrated?</param>
            <param name="ServerIndex">Index of the Leaderboard Server to create the leadboard on</param>
            <returns>1, no matter what</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.UpdateLeaderBoards(System.Int32,System.Int32,System.Int32,System.Byte,System.Int32)">
            <summary>
            Used to modify a leaderboard's attributes after it has already been created.
            </summary>
            <param name="Title_id">Title Id for the leaderboard to modify</param>
            <param name="LB_Type">Id of the Leaderboard to modify</param>
            <param name="Reset_Type">New Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="IsTop100">Enable/Disable Top 100 functionality</param>
            <param name="Decayindays">New Decay Time: 0=Never</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.CreateNewLeaderBoards(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte,System.Int32,System.String,System.Byte,System.Byte,System.Int32)">
            <summary>
            Used to create a new Leaderboard for a given title.
            </summary>
            <param name="Title_id">Title Id to create leaderboard for</param>
            <param name="LB_Type">Leaderboard Id to create</param>
            <param name="Reset_Type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="AttCount">Attachment Count: 0 to n</param>
            <param name="Max_AttSize">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="IsTop100">Is this a a Top 100 Leaderboard?</param>
            <param name="Decayindays">Time until a user's leaderboard entry becomes invalid and subject to removal: 0=Never</param>
            <param name="param">ELo Parameters, used to define the curve for ranking</param>
            <param name="IsTeamLB">Is this a Team Leaderboard?</param>
            <param name="IsArbitrated">Should this leaderboard be arbitrated?</param>
            <param name="ServerIndex">Index of the Leaderboard Server to create the leadboard on</param>
            <returns>0, no matter what</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.reloadStatFDs">
            <summary>
            Reload the Stats Front Doors, updating leaderboard information for all titles.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.DeleteTitle(System.Int32)">
            <summary>
            Clear all Leaderboards.  Remove all Leaderboards from NPDB.  Remove Title.
            </summary>
            <param name="titleid"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Stats.DBHelper.CreateCompetitionPartition(System.Int32,System.Byte,System.Int32)" -->
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.CreateCompetitionTemplate(System.Int32,System.Int32,System.Byte,System.Int32,System.Int32,System.Int32,System.String,System.Byte,System.Byte,System.Int32)">
            <summary>
            Creates a Competition Template for a given title (must be done prior to creating a Competition Partition).
            </summary>
            <param name="i_title_id">Title Id to create the template for</param>
            <param name="i_templateId">Template Id to create: 0 to 255</param>
            <param name="ti_reset_type">Reset Type: 0=Never, 1=Weekly, 2=Monthly, 3=Yearly</param>
            <param name="i_att_count">Attachment Count: 0 to n</param>
            <param name="i_max_att_size">Max Attachment Size: 0 to 11264 (11MB)</param>
            <param name="i_decay_days">Time until a user's leaderboard entry becomes invalid and subject to removal: 0=Never</param>
            <param name="vc_params">ELo Parameters, used to define the curve for ranking</param>
            <param name="ti_isTeam">Is this a Team Leaderboard?</param>
            <param name="ti_reqArbitration">Should this leaderboard be arbitrated?</param>
            <param name="ServerIndex">Index of the Leaderboard Server to create the template on</param>
            <returns>0 on success, -1 on failure</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ResetTile(System.UInt32)">
            <summary>
            Resets a title, clearing all leaderboards but not removing them from NPDB.
            </summary>
            <param name="Title_id">Title Id to reset</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.InternalExecuteLeaderboardRequest(ServerTestFramework.LiveService.LBServer.StatsMessage,System.Int32)">
            <summary>
            Private function to submit LBS Requests and return results.
            </summary>
            <param name="Proc">Fully-Formed StatsMessage to submit in the request</param>
            <param name="ServerIndex">Index of the Leaderboard Server to execute request on: -1 = All</param>
            <returns>An ArrayList of results of type: ProcCallResp or null in the error case</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ResetLeaderboards(System.DateTime)">
            <summary>
            Resets all leaderboards on the Leaderboard Serever with index 0 that would be elegible for reset on the provided date.
            </summary>
            <param name="dt_today">A future date, used to trigger weekly/monthly/yearly resets; will become the "Last Reset Date" for any reset leaderboards.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.ChangeLastWriteTime(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Change the last write time of all entries on a given leaderboard.
            </summary>
            <param name="iLbType">Leaderboard Id to change last write times for</param>
            <param name="title">Title Id for leaderboard</param>
            <param name="iDayDiff">Number of days to adjust the last write time by</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.Decay">
            <summary>
            Auto-Decay all elegible leaderboards on the Leaderboard server with index 0.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.DBHelper.TrimLB">
            <summary>
            Auto-Trim all Top 100 Leaderboards on the Leaderboard Server with index 0.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsFD">
            <summary>
             This class encapsulate the communication between the  test client and the stats FD
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.StatsFD.#ctor">
            object to post data to Stats FD.
        </member>
        <member name="M:ServerTestFramework.LiveService.Stats.StatsFD.PopulateSlot(ServerTestFramework.LiveService.Stats.StatReqBase,ServerTestFramework.LiveService.FakeSG.CSGInfo@)">
            this function executes the test case and verifyes.
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.TestManager">
            <summary>
            Summary description for TestManager.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsProc">
            <summary>
            Summary description for XRLUnitReplace.
            </summary>
            
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsSpec">
            <summary>
            Summary description for StatsRead.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEnumByUserRequest">
            <summary>
            StatsEnumByUserRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="UserId">User id for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified user id and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEnumByRankRequest">
            <summary>
            StatsEnumByRankRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Rank">Rank value for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified rank and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEnumByRatingRequest">
            <summary>
            StatsEnumByRatingRequest
            </summary>
            <param name="TitleId">Title ID</param>
            <param name="Rating">Rating for beginning of page</param>
            <param name="PageSize">Count of max rows to retrieve for enum</param>
            <param name="Spec">Query spec</param>
            <returns>StatsReadResponse</returns>
            <remarks>
            Enumerate list of users starting with specified rating and
            including up to the number of rows specified by page size
            </remarks>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLCommitAttachment">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.ReqCompCreateLb">
            <summary>
            Summary description for XRLComp.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLEnumLBRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsEstimateRankRequestStruct">
            <summary>
            Summary description for XRLEstimateRankForRatings.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLGetRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLRemoveAtt">
            <summary>
            Summary description for XRLRemoveAtt.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLResetUser">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLSetRequest">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLUsageStore">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.XRLWebEnumLB">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsDBSim.StatsIMDB">
            <summary>
            Summary description for IMDB.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Stats.StatsDBSim.PlayerTeamIMDB">
            <summary>
            Summary description for PlayerTeam.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STS.STSUtil.GetStsSigningCertificate">
            <summary>
            Gets the STS signing certificate as defined by the site.xml file.
            </summary>
            <returns>An X509Certificate2 containing the certificate.</returns>
        </member>
        <member name="M:ServerTestFramework.STS.STSUtil.GetSecurityTicket(ServerTestFramework.STS.STSUtil.GetSecurityTicketParameters)">
            <summary>
            Creates a security ticket in the same way that a call to GetSecurityTicket would.
            </summary>
            <param name="param">The values to use when creating the security ticket.</param>
            <returns>A string representation of the security ticket.</returns>
        </member>
        <member name="M:ServerTestFramework.STS.STSUtil.GetPartnerSecurityTicket(ServerTestFramework.STS.STSUtil.GetPartnerSecurityTicketParameters)">
            <summary>
            Creates a security ticket in the same way that a call to GetPartnerSecurityTicket would.
            </summary>
            <param name="param">The values to use when creating the security ticket.</param>
            <returns>A string representation of the security ticket.</returns>
        </member>
        <member name="M:ServerTestFramework.STS.STSUtil.GetSecurityTicketParameters.#ctor(ServerTestFramework.STS.STSUtil.GetSecurityTicketParameters)">
            <summary>
            Creates a set of GetSecurityTicketParameters based of the 
            values of an existing set of parameters.
            </summary>
            <param name="otherParams">The set of parameters to copy</param>
        </member>
        <member name="T:ServerTestFramework.STS.STSUtil.GetPartnerSecurityTicketParameters">
            <summary>
            Derive from GetSecurityTicketParameters for ease of compatibility with other functions.
            Most of the fields aren't used.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STS.SamlTokenUtil">
            <summary>
            Utility for cerating SAML Tokens of all types
            </summary>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.GetSecurityToken(ServerTestFramework.STS.GetSecurityTokenParameters)">
            <summary>
            Generate a SAML Token the same as the ones returned by GetSecurityToken
            </summary>
            <param name="param">The parameters for the SAML Token</param>
            <returns>A string containing the XML representation of the SAML Token</returns>
            <remarks>This just delegates directly to GenerateSamlTokenString</remarks>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.GenerateSamlTokenString(ServerTestFramework.STS.SamlTokenParameters)">
            <summary>
            Generate a SAML Token based on the values in the SamlTokenParameters
            </summary>
            <param name="param">The parameters for the SAML Token</param>
            <returns>A string containing the XML representation of the SAML Token</returns>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.GenerateSamlToken(System.IdentityModel.Tokens.SamlAttributeStatement,System.IdentityModel.Tokens.SamlConditions,ServerTestFramework.STS.SamlTokenParameters)">
            <summary>
            Create a SamlSecurityToken with the attributes and conditions provided
            </summary>
            <param name="samlAttributeStatement">The SamlAttributes for the SAML Token</param>
            <param name="samlConditions">The SamlConditions for the SAML Token</param>
            <param name="param">Any additional parameters for the SAML Token</param>
            <returns>A new SamlSecurityToken</returns>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.CreateSigningCredentials(ServerTestFramework.STS.SamlTokenParameters)">
            <summary>
            Create a set of SigningCredentials used to sign an SAML token
            </summary>
            <param name="param">The parameters for the credentials</param>
            <returns>A SigningCredentials object that can be used to sign a SAML token</returns>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.GenerateSamlSubject(System.IdentityModel.Tokens.SamlAttributeStatement,ServerTestFramework.STS.SamlTokenParameters)">
            <summary>
            Add the subject information to the samlAttributeStatement
            </summary>
            <param name="samlAttributeStatement">The attribute statement to add the subject to</param>
            <param name="param">The parameters for the subject</param>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.GenerateMachineClaims(System.IdentityModel.Tokens.SamlAttributeStatement,ServerTestFramework.STS.SamlTokenParameters)">
            <summary>
            Add a set of of machine claims to the SMAL Attribute Statement
            </summary>
            <param name="samlAttributeStatement">The statement to add the claims to</param>
            <param name="param">The parameters for the claim</param>
        </member>
        <member name="M:ServerTestFramework.STS.SamlTokenUtil.GenerateUserClaims(System.IdentityModel.Tokens.SamlAttributeStatement,ServerTestFramework.STS.SamlTokenParameters,System.Int32)">
            <summary>
            Add a set of user clams for a specific user to the SAML Attribute Statement
            </summary>
            <param name="samlAttributeStatement">The statement to add the claims to</param>
            <param name="param">The parameters for the claim</param>
            <param name="userIndex">The index of the user to add</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedInt(System.UInt32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_UnsignedInt(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_UnsignedInt(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedIntAsync(System.UInt32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedIntAsync(System.UInt32,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_NullableSignedInt(System.Nullable{System.Int32},System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_NullableSignedInt(System.Nullable{System.Int32},System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_NullableSignedInt(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_NullableSignedIntAsync(System.Nullable{System.Int32},System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_NullableSignedIntAsync(System.Nullable{System.Int32},System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_SignedShort(System.Int16,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_SignedShort(System.Int16,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_SignedShort(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_SignedShortAsync(System.Int16,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_SignedShortAsync(System.Int16,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedByte(System.Byte,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_UnsignedByte(System.Byte,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_UnsignedByte(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedByteAsync(System.Byte,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedByteAsync(System.Byte,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_String(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_String(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_String(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_StringAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_StringAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_Binary(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_Binary(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_Binary(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_BinaryAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_BinaryAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_DateTime(System.DateTime,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginCountryParameter_DateTime(System.DateTime,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndCountryParameter_DateTime(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_DateTimeAsync(System.DateTime,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_DateTimeAsync(System.DateTime,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MassiveCombo(System.UInt64,System.Boolean,System.UInt64,System.Boolean,System.UInt32,System.Boolean,System.UInt32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginMassiveCombo(System.UInt64,System.Boolean,System.UInt64,System.Boolean,System.UInt32,System.Boolean,System.UInt32,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndMassiveCombo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MassiveComboAsync(System.UInt64,System.Boolean,System.UInt64,System.Boolean,System.UInt32,System.Boolean,System.UInt32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MassiveComboAsync(System.UInt64,System.Boolean,System.UInt64,System.Boolean,System.UInt32,System.Boolean,System.UInt32,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_None">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPlatforms_None(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPlatforms_None(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_NoneAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_NoneAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPlatforms_Xbox360(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPlatforms_Xbox360(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360_Pc">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPlatforms_Xbox360_Pc(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPlatforms_Xbox360_Pc(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360_PcAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360_PcAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitles_FFFE07D1(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitles_FFFE07D1(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1_00112233_FFAA7700">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitles_FFFE07D1_00112233_FFAA7700(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitles_FFFE07D1_00112233_FFAA7700(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1_00112233_FFAA7700Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1_00112233_FFAA7700Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_None">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPrivileges_None(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPrivileges_None(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_NoneAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_NoneAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_254">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPrivileges_254(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPrivileges_254(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_254Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_254Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_128_160_255">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPrivileges_128_160_255(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPrivileges_128_160_255(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_128_160_255Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_128_160_255Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_192_193">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginPrivileges_192_193(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndPrivileges_192_193(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_192_193Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_192_193Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_Tiger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginRequiresClaim_Tiger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndRequiresClaim_Tiger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_TigerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_TigerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_Lion_Tiger_Ocelot">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginRequiresClaim_Lion_Tiger_Ocelot(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndRequiresClaim_Lion_Tiger_Ocelot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_Lion_Tiger_OcelotAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_Lion_Tiger_OcelotAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AllowedValues_Strings">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAllowedValues_Strings(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAllowedValues_Strings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AllowedValues_StringsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AllowedValues_StringsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElder">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthEquals_StringAgeGroupElder(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthEquals_StringAgeGroupElder(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElderAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElderAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElder_IntegerLanguage1337">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthEquals_StringAgeGroupElder_IntegerLanguage1337(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthEquals_StringAgeGroupElder_IntegerLanguage1337(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElder_IntegerLanguage1337Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElder_IntegerLanguage1337Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_Xuid">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthEquals_Xuid(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthEquals_Xuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_XuidAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_XuidAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_PositiveInteger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthGreaterThan_PositiveInteger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthGreaterThan_PositiveInteger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_PositiveIntegerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_PositiveIntegerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_ZeroInteger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthGreaterThan_ZeroInteger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthGreaterThan_ZeroInteger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_ZeroIntegerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_ZeroIntegerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_NegativeInteger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthGreaterThan_NegativeInteger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthGreaterThan_NegativeInteger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_NegativeIntegerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_NegativeIntegerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_String">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthGreaterThan_String(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthGreaterThan_String(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_StringAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_StringAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_PositiveInteger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthLessThan_PositiveInteger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthLessThan_PositiveInteger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_PositiveIntegerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_PositiveIntegerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_ZeroInteger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthLessThan_ZeroInteger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthLessThan_ZeroInteger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_ZeroIntegerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_ZeroIntegerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_NegativeInteger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthLessThan_NegativeInteger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthLessThan_NegativeInteger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_NegativeIntegerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_NegativeIntegerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_String">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginAuthLessThan_String(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndAuthLessThan_String(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_StringAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_StringAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_UnsignedLong(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginUserParameter_UnsignedLong(System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndUserParameter_UnsignedLong(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_UnsignedLongAsync(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_UnsignedLongAsync(System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_NullableUnsignedLong(System.Nullable{System.UInt64},System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginUserParameter_NullableUnsignedLong(System.Nullable{System.UInt64},System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndUserParameter_NullableUnsignedLong(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_NullableUnsignedLongAsync(System.Nullable{System.UInt64},System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_NullableUnsignedLongAsync(System.Nullable{System.UInt64},System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_SignedLong(System.Int64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginUserParameter_SignedLong(System.Int64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndUserParameter_SignedLong(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_SignedLongAsync(System.Int64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_SignedLongAsync(System.Int64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_String(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginUserParameter_String(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndUserParameter_String(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_StringAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_StringAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_Binary(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginUserParameter_Binary(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndUserParameter_Binary(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_BinaryAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_BinaryAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_UnsignedLong(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginMachineParameter_UnsignedLong(System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndMachineParameter_UnsignedLong(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_UnsignedLongAsync(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_UnsignedLongAsync(System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_String(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginMachineParameter_String(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndMachineParameter_String(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_StringAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_StringAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedInt(System.UInt32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitleParameter_UnsignedInt(System.UInt32,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitleParameter_UnsignedInt(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedIntAsync(System.UInt32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedIntAsync(System.UInt32,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_SignedInt(System.Int32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitleParameter_SignedInt(System.Int32,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitleParameter_SignedInt(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_SignedIntAsync(System.Int32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_SignedIntAsync(System.Int32,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedLong(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitleParameter_UnsignedLong(System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitleParameter_UnsignedLong(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedLongAsync(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedLongAsync(System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_String(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitleParameter_String(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitleParameter_String(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_StringAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_StringAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_Binary(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitleParameter_Binary(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitleParameter_Binary(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_BinaryAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_BinaryAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_DateTime(System.DateTime,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.BeginTitleParameter_DateTime(System.DateTime,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.EndTitleParameter_DateTime(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_DateTimeAsync(System.DateTime,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_DateTimeAsync(System.DateTime,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedIntCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_NullableSignedIntCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_SignedShortCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_UnsignedByteCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_StringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_BinaryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.CountryParameter_DateTimeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MassiveComboCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_NoneCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Platforms_Xbox360_PcCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Titles_FFFE07D1_00112233_FFAA7700Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_NoneCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_254Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_128_160_255Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.Privileges_192_193Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_TigerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.RequiresClaim_Lion_Tiger_OcelotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AllowedValues_StringsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElderCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_StringAgeGroupElder_IntegerLanguage1337Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthEquals_XuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_PositiveIntegerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_ZeroIntegerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_NegativeIntegerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthGreaterThan_StringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_PositiveIntegerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_ZeroIntegerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_NegativeIntegerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.AuthLessThan_StringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_UnsignedLongCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_NullableUnsignedLongCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_SignedLongCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_StringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.UserParameter_BinaryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_UnsignedLongCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.MachineParameter_StringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedIntCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_SignedIntCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_UnsignedLongCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_StringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_BinaryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Attribute.TitleParameter_DateTimeCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_UnsignedIntCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_NullableSignedIntCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_SignedShortCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_UnsignedByteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_StringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_BinaryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.CountryParameter_DateTimeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.MassiveComboCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Platforms_NoneCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Platforms_Xbox360CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Platforms_Xbox360_PcCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Titles_FFFE07D1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Titles_FFFE07D1_00112233_FFAA7700CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Privileges_NoneCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Privileges_254CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Privileges_128_160_255CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.Privileges_192_193CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.RequiresClaim_TigerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.RequiresClaim_Lion_Tiger_OcelotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AllowedValues_StringsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthEquals_StringAgeGroupElderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthEquals_StringAgeGroupElder_IntegerLanguage1337CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthEquals_XuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthGreaterThan_PositiveIntegerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthGreaterThan_ZeroIntegerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthGreaterThan_NegativeIntegerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthGreaterThan_StringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthLessThan_PositiveIntegerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthLessThan_ZeroIntegerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthLessThan_NegativeIntegerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.AuthLessThan_StringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.UserParameter_UnsignedLongCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.UserParameter_NullableUnsignedLongCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.UserParameter_SignedLongCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.UserParameter_StringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.UserParameter_BinaryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.MachineParameter_UnsignedLongCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.MachineParameter_StringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.TitleParameter_UnsignedIntCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.TitleParameter_SignedIntCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.TitleParameter_UnsignedLongCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.TitleParameter_StringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.TitleParameter_BinaryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Attribute.TitleParameter_DateTimeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallVerifyOperator(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.BeginCallVerifyOperator(System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.EndCallVerifyOperator(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallVerifyOperatorAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallVerifyOperatorAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallFindClaim(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.BeginCallFindClaim(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.EndCallFindClaim(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallFindClaimAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallFindClaimAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallVerifyOperatorCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.Code.CallFindClaimCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.CallVerifyOperatorCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.CallVerifyOperatorCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.CallVerifyOperatorCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.CallFindClaimCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.CallFindClaimCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Code.CallFindClaimCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPC">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginPlatformsPC(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndPlatformsPC(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPCAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPCAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPC_WebConfigXbox360">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginPlatformsPC_WebConfigXbox360(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndPlatformsPC_WebConfigXbox360(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPC_WebConfigXbox360Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPC_WebConfigXbox360Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginTitlesFFFE07D2(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndTitlesFFFE07D2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2_WebConfigFFFE07D1">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginTitlesFFFE07D2_WebConfigFFFE07D1(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndTitlesFFFE07D2_WebConfigFFFE07D1(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2_WebConfigFFFE07D1Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2_WebConfigFFFE07D1Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges253">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginPrivileges253(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndPrivileges253(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges253Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges253Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginPrivileges254(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndPrivileges254(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254_WebConfig255">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginPrivileges254_WebConfig255(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndPrivileges254_WebConfig255(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254_WebConfig255Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254_WebConfig255Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLion">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginRequiresClaimLion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndRequiresClaimLion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLionAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLion_WebConfigTiger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.BeginRequiresClaimLion_WebConfigTiger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.EndRequiresClaimLion_WebConfigTiger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLion_WebConfigTigerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLion_WebConfigTigerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPCCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.PlatformsPC_WebConfigXbox360Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.TitlesFFFE07D2_WebConfigFFFE07D1Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges253Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.Privileges254_WebConfig255Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Mixed.RequiresClaimLion_WebConfigTigerCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.PlatformsPCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.PlatformsPC_WebConfigXbox360CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.TitlesFFFE07D2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.TitlesFFFE07D2_WebConfigFFFE07D1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Privileges253CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Privileges254CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.Privileges254_WebConfig255CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.RequiresClaimLionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Mixed.RequiresClaimLion_WebConfigTigerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPC">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginPlatformsPC(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndPlatformsPC(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPCAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPCAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPC_WebConfigXbox360">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginPlatformsPC_WebConfigXbox360(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndPlatformsPC_WebConfigXbox360(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPC_WebConfigXbox360Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPC_WebConfigXbox360Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginTitlesFFFE07D2(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndTitlesFFFE07D2(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2_WebConfigFFFE07D1">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginTitlesFFFE07D2_WebConfigFFFE07D1(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndTitlesFFFE07D2_WebConfigFFFE07D1(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2_WebConfigFFFE07D1Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2_WebConfigFFFE07D1Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges252">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginPrivileges252(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndPrivileges252(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges252Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges252Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginPrivileges254(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndPrivileges254(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254_WebConfig255">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginPrivileges254_WebConfig255(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndPrivileges254_WebConfig255(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254_WebConfig255Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254_WebConfig255Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLion">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginRequiresClaimLion(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndRequiresClaimLion(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLionAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLionAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLion_WebConfigTiger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.BeginRequiresClaimLion_WebConfigTiger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.EndRequiresClaimLion_WebConfigTiger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLion_WebConfigTigerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLion_WebConfigTigerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPCCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.PlatformsPC_WebConfigXbox360Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.TitlesFFFE07D2_WebConfigFFFE07D1Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges252Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.Privileges254_WebConfig255Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.MixedOverride.RequiresClaimLion_WebConfigTigerCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.PlatformsPCCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.PlatformsPC_WebConfigXbox360CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.TitlesFFFE07D2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.TitlesFFFE07D2_WebConfigFFFE07D1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.Privileges252CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.Privileges254CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.Privileges254_WebConfig255CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.RequiresClaimLionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.MixedOverride.RequiresClaimLion_WebConfigTigerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.Echo(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.BeginEcho(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.EndEcho(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.EchoAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.EchoAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.GetTokenClaimsString">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.BeginGetTokenClaimsString(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.EndGetTokenClaimsString(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.GetTokenClaimsStringAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.GetTokenClaimsStringAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.EchoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.Simple.GetTokenClaimsStringCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.EchoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.EchoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.EchoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.GetTokenClaimsStringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.GetTokenClaimsStringCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.Simple.GetTokenClaimsStringCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Platforms_Xbox360">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginPlatforms_Xbox360(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndPlatforms_Xbox360(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Platforms_Xbox360Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Platforms_Xbox360Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Titles_FFFE07D1">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginTitles_FFFE07D1(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndTitles_FFFE07D1(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Titles_FFFE07D1Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Titles_FFFE07D1Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Privileges_254">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginPrivileges_254(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndPrivileges_254(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Privileges_254Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Privileges_254Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.RequiresClaim_Tiger">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginRequiresClaim_Tiger(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndRequiresClaim_Tiger(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.RequiresClaim_TigerAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.RequiresClaim_TigerAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EqualsAgeGroup_OldEnough">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginEqualsAgeGroup_OldEnough(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndEqualsAgeGroup_OldEnough(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EqualsAgeGroup_OldEnoughAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EqualsAgeGroup_OldEnoughAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.GreaterThanInteger_13">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginGreaterThanInteger_13(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndGreaterThanInteger_13(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.GreaterThanInteger_13Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.GreaterThanInteger_13Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.LessThanInteger_13">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginLessThanInteger_13(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndLessThanInteger_13(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.LessThanInteger_13Async">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.LessThanInteger_13Async(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleAnd">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginSimpleAnd(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndSimpleAnd(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleAndAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleAndAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleOr">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginSimpleOr(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndSimpleOr(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleOrAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleOrAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleNot">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginSimpleNot(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndSimpleNot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleNotAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleNotAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.ComplexAndOrNot">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.BeginComplexAndOrNot(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EndComplexAndOrNot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.ComplexAndOrNotAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.ComplexAndOrNotAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Platforms_Xbox360Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Titles_FFFE07D1Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.Privileges_254Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.RequiresClaim_TigerCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.EqualsAgeGroup_OldEnoughCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.GreaterThanInteger_13Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.LessThanInteger_13Completed">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleAndCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleOrCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.SimpleNotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.WebConfig.ComplexAndOrNotCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.Platforms_Xbox360CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.Titles_FFFE07D1CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.Privileges_254CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.RequiresClaim_TigerCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.EqualsAgeGroup_OldEnoughCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.GreaterThanInteger_13CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.LessThanInteger_13CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.SimpleAndCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.SimpleOrCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.SimpleNotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.TestFdXstsWcf.Wsdl.WebConfig.ComplexAndOrNotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.LBServer.LBSClient">
            <summary>
            Summary description for LBSClient.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.LBServer.LBSRequest">
            <summary>
            Summary description for LBSRequest.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.LiveInfo.XRLGetLiveConfig">
            <summary>
            This class is for getting live config data from the live registry.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.LiveInfo.XRLGetLiveConfig.#ctor(System.String)">
            <summary>
            default constructor for XRLGetLiveConfig
            normally will be used for negative test cases
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.LiveInfo.XRLGetNetworkAuthorizationList">
            <summary>
            Wraps the GetNetworkAuthorizationList which provides a set of endpoints that 
            a title is able to connect to and some additional metadata about them.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.LiveInfo.XRLGetNetworkAuthorizationList.#ctor">
            <summary>
            Create an empty GetNetworkAuthorizationList request
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.LiveInfo.XRLGetNetworkAuthorizationList.#ctor(System.UInt32)">
            <summary>
            Create a GetNetworkAuthorizationList request for the given title id
            </summary>
            <param name="titleId">The title to request an authorization list for</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.LiveInfo.XRLGetNetworkAuthorizationList.Execute">
            <summary>
            Execute a GetNetworkAuthorizationList request against the default LiveInfo interface
            </summary>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.LiveInfo.XRLGetNetworkAuthorizationList.TitleId">
            <summary>
            Represents the title that the request is being made from
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlAddJobRequest">
            <summary>
            Summary description for XrlAddJob.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlFindJobsRequest">
            <summary>
            Summary description for XrlFindJobs.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlGetJobRequest">
            <summary>
            Summary description for XrlGetJob.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlRemoveJobRequest">
            <summary>
            Summary description for XrlRemoveJob.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Cron.XrlTimeWarp">
            <summary>
            Summary description for XrlTimeWarp.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.UacsCommon">
            <summary>
            This class will be aggregated into TestBase to provide common UACS functionality
            </summary>
            <summary>
            This class provides common UACS functionality related to XeUser creation;
            </summary>
            <summary>
            This class provides common UACS functionality related to locale
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UacsCommon.CreateUser(ServerTestFramework.LiveService.UserAccount.Owner@)">
            <summary>
            Generates and creates a user.
            </summary>
            <param name="ownr"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.BillingInfo">
            <summary>
            Billing coder, please add proper definition for billing information
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.BillingInfo.ToString">
            <summary>
            return billing information in a string format.  Billing coder please decide what information is necessary to return.
            </summary>
            <returns>string that contains billing information</returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.PassportInfo.MemberName">
            <summary>
            I don't see after passport has been created, there is any reason to change memberName, SQ and SA.  And thus I have made those field public readonly.
            sessionToken is in the same category, however, I don't see anybody other than passport functions to use it, and thus the internal designator.
            Password can be changed, and thus, I will provide an accessor.
            </summary>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.PassportInfo.EncryptedPassword">
            <summary>
            encrypted password is generated by using password, secret question and secret answer
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.UacsCommon2">
            <summary>
            This class will be aggregated into TestBase to provide common UACS functionality
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.UpsProfile">
            <summary>
            Summary description for Ups.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.UserTestBase.TestNegative(ServerTestFramework.LiveService.XRLPayload,System.UInt32)">
            <summary>
            Verifies that the specified call failed, and that the returned error matches the expected code. 
            This behavior can be overriden to not check for an explicit error code
            
            This function will also set ResultCode as needed
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLChangeGamerTag">
             <summary>
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.Owner.GetCCNumber">
            <summary>
            Generates a random Visa number
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.Owner.GetCCNumber(System.String,System.Int32)">
            <summary>
            Generates a credit card number that conforms to the LUHN formula
            </summary>
            <param name="prefix">The prefix for the credit card number.</param>
            <param name="size">The length of the credit card number.</param>
            <returns>A string containing the generated credit card number.</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLEnumerateEligible">
            <summary>
            Summary description for XRLEnumerateEligible.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLGetPaymentInfo">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLGetPostalCode">
            <summary>
            Handles the UACS GetPostalCode API
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLGetSubscriptionStatus">
            <summary>
            Summary description for XRLGetSubscriptionStatus.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLLinkWebAccount">
            <summary>
            Summary description for LinkWebAccount.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLRenewSubscription">
            <summary>
            Summary description for XRLRenewSubscription.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLSetPaymentInfo">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.SetUserPIN">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLSetUserSettings">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLSetUserSettings2">
            <summary>
            Executes the SetUserSettings2 API
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLVerifyBillingPIN">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLVerifyVoucher">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLVerifyVoucherGetOffer">
             <summary>
            
             </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.XRLWebGetUserSettings">
             <summary>
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.Offers.GetMigraionOffer(System.UInt64)">
            
             Here, we should be in sync with what's in RawCatalogDB
             
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.Offers.MusicNetOffers">
            <summary>
            MusicNet subscriptions
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XRLCreateUserAndBillableAccount.Execute">
            <summary> Perform the create request, creating a machine if required </summary>
            <returns>True if the request is successful, False otherwise.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XRLGenerateGamertag.Execute">
            <summary> Perform the create request, creating a machine if required </summary>
            <returns>True if the request is successful, False otherwise.</returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofData.proofType">
            <summary>
            Enumeration detailing the type of the strong proof
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofData.proofDataLength">
            <summary>
            Protocol element to hold the length of the string
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofData.proofData">
            <summary>
            The actual data of the strong proof.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofStatus.proofType">
            <summary>
            Enumeration detailing the type of the strong proof
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofStatus.proofDataLength">
            <summary>
            Protocol element to hold the length of the string
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofStatus.proofData">
            <summary>
            The actual data of the strong proof.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.ProofStatus.isConfirmed">
            <summary>
            Flag to state if the strong proof has already been confirmed
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportAddProof.userPuid">
            <summary>
            The Xuid of the account that is attempting to perform the operation.
            Since the console can have multiple users attached, need to distinguish
            which user is making the request.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportAddProof.machinePuid">
            <summary>
            The console where the user make the request.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportAddProof.sessionToken">
            <summary>
            Standard Xbox protocol element to state that this operation should be
            password verified.  It represents the signed passport puid of the account
            being accessed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportAddProof.proofData">
            <summary>
            The strong proof data
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportAddProofResponse.isConfirmed">
            <summary>
            Flag to state if the strong proof has already been confirmed
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XRLPassportCreateGenerated.Execute">
            <summary> Perform the create request, creating a machine if required </summary>
            <returns>True if the request is successful, False otherwise.</returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofs.userPuid">
            <summary>
            The Xuid of the account that is attempting to perform the operation.
            Since the console can have multiple users attached, need to distinguish
            which user is making the request.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofs.machinePuid">
            <summary>
            The console where the user make the request.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofs.sessionToken">
            <summary>
            Standard Xbox protocol element to state that this operation should be
            password verified.  It represents the signed passport puid of the account
            being accessed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofsResponse.proofsLength">
            <summary>
            Protocol element to hold the array length.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofsResponse.proofs">
            <summary>
            The list of strong proofs returned from passport
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofTypes.userPuid">
            <summary>
            The Xuid of the account that is attempting to perform the operation.
            Since the console can have multiple users attached, need to distinguish
            which user is making the request.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofTypes.machinePuid">
            <summary>
            The console where the user make the request.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofTypesResponse.proofTypesLength">
            <summary>
            Protocol element to hold the array length
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.XRLPassportGetProofTypesResponse.proofTypes">
            <summary>
            Array of proof types that are tied to the account that can be
            queried without knowledge of the password.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.PreviewMergeSubscriptionRequest">
            <summary>
            Request class for Preview Merge subscription. Takes primary and secondary puid
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.PreviewMergeSubscriptionResponse">
            <summary>
            Response for PreviewMergeSubscription Request
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XRLXeRecoverAccount.Execute">
            <summary>
            Execute this XeRecoverAccount request against the xuacs virtual interface
            </summary>
            <returns>True if the request was successful, false otherwise</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XRLXeRecoverAccount.Execute(System.Net.IPEndPoint)">
            <summary>
            Execute this request using the appropriate request type and reads
            the response as appropriate
            </summary>
            <param name="endPoint">The endpoint against which to execute the request</param>
            <returns>True if the request was successfull, false otherwise.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XRLXeRecoverAccount.PopulateSlot(ServerTestFramework.LiveService.FakeSG.CSGInfo@)">
            <summary>
            Populates the appropritate variables in the SG Slot with values from the request
            </summary>
            <param name="slot">The SGSlot to populate</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeRecoverAccountRequest60.Execute">
            <summary>
            Execute this XeRecoverAccount request against the xuacs virtual interface
            </summary>
            <returns>True if the request was successful, false otherwise</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeRecoverAccountRequest60.Execute(System.Net.IPEndPoint)">
            <summary>
            Execute this request using the appropriate request type and reads
            the response as appropriate
            </summary>
            <param name="endPoint">The endpoint against which to execute the request</param>
            <returns>True if the request was successfull, false otherwise.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.XeRecoverAccountRequest60.PopulateSlot(ServerTestFramework.LiveService.FakeSG.CSGInfo@)">
            <summary>
            Populates the appropritate variables in the SG Slot with values from the request
            </summary>
            <param name="slot">The SGSlot to populate</param>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.XeRecoverAccountRequest60.Response">
            <summary>
            The response object that the response data will be read into after execution
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalance(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.BeginGetPointsBalance(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.EndGetPointsBalance(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalanceAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalanceAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignIn">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.BeginSignIn(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.EndSignIn(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignInAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignInAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.GetPointsBalanceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.SignInCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.ZuneSignIn.UserAccountService.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults.AboveLowBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceResults.DmpAccountStatus">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo.SessionKey">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo.MusicNetAuthToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SessionInfo.GeoCountryCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.XboxOfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.BillingInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.HasBillingViolation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.HasPendingCancel">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.MusicNetSku">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.StartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SubscriptionInfo.EndDate">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.XboxPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.LivePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.Tag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.PostalCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.ParentallyControlled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.AccountInfo.PointsBalance">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.HResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.TagChangeRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.AcceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.AccountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.SubscriptionLapsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.ErrorInfo.BillingUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SignInResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInResults.SessionInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.GetPointsBalanceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SignInCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.SignInCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.SignInCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.ZuneSignIn.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.ZuneSignIn.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Constants">
            <summary>
            All constants that will be used by storage service
            part of it are copied from StorageConstants.cs
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Constants.StorageDomain">
            <summary>
             Storage Domain Ids: this part got from npdb t_storage_domains table
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.AccessToken">
            <summary>
            basic fields of accessToken that will be shared by all sorts of requests
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.ReadFileToken">
            <summary>
            additional fields for readFile request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.WriteFileToken">
            <summary>
            additional fields for writeFile request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.RemoveFileToken">
            <summary>
            addtional fields for removeFile requests
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.EnumFilesToken">
            <summary>
            additional fields for EnumFiles request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.MyWriteFileToken">
            <summary>
            AccessToken that is used for WriteFile request
            the fields of this class should be in sync with accessToken.cs in
            \\depot\xonline\private\common\mc\storage\accessToken.cs
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.MyReadFileToken">
            <summary>
            AccessToken that is used for ReadFile request
            the fields of this class should be in sync with accessToken.cs in
            \\depot\xonline\private\common\mc\storage\accessToken.cs
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.LiveService.Storage.MyRemoveFileToken" -->
        <!-- Badly formed XML comment ignored for member "T:ServerTestFramework.LiveService.Storage.MyEnumFilesToken" -->
        <member name="T:ServerTestFramework.LiveService.Storage.XRLEnumFiles">
            <summary>
            This class is for emerate files
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLEnumFiles.#ctor(System.String,System.UInt32,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            XRLEnumFiles constructor that takes five parameters
            </summary>
            <param name="pathName">pathName of the files that will be enumerated</param>
            <param name="titleID">titleID of the files that will be enumerated; it should be the same as the one in the pathname</param>
            <param name="rangeStart">zero-based index of the starting file</param>
            <param name="rangeEnd">zero-based index of the ending file</param>
            <param name="lModifiedSince">return files that modified after this time</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLEnumFiles.GenerateHttpHeader(System.Net.IPEndPoint,System.IO.MemoryStream)">
            <summary>
            If this is a dataCenter EnumFile request,then we need append HTTPAuthData header
            </summary>
            <param name="endPoint"></param>
            <param name="reqStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLEnumFiles.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLEnumFilesResponse@)">
            <summary>
            send XRLEnumFiles http request to storage front door and get the response back
            </summary>
            <param name="sServer">Storage front door</param>
            <param name="Response">XRLEnumFiles response</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLSingleEnumFileResult">
            <summary>
            This class is for each file returned in the enumFile response
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLSingleEnumFileResult.Compare(ServerTestFramework.LiveService.Storage.XRLWriteFile)">
            <summary>
            Compare each single enumFile response with the writeFile request;
            </summary>
            <param name="other">requests that upload the file</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLEnumFilesResponse">
            <summary>
            enumFiles response
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLGetQuota">
            <summary>
            This class is for get quota data from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLGetQuota.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt64)">
            <summary>
            default constructor for XRLGetQuota
            normally will be used for negative test cases
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLGetQuota.Execute(ServerTestFramework.LiveService.Storage.XRLGetQuotaResponse@)">
            <summary>
            send GetQuota request to stfd:11140 since it's a datacenter request
            </summary>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLGetQuotaResponse">
            <summary>
            This class is for XRLGetQuotaResponse
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLNameResolver">
            <summary>
            Summary description for XRLNameResolver.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReadAchievements">
            <summary>
            This class is for download a file from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadAchievements.Execute(ServerTestFramework.LiveService.Storage.XRLReadAchievementsResponse@)">
            <summary>
            Send XRLReadAchievements requests to the xstorage front door
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadAchievements.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLReadAchievementsResponse@)">
            <summary>
            send XRLReadAchievements http request to storage front door and get the response back
            </summary>
            <param name="sServer">Storage front door</param>
            <param name="Response">XRLReadAchievements response</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReadAchievementsResponse">
            <summary>
            This class is for XRLReadAchievementsResponse
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReadFile">
            <summary>
            This class is for download a file from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.#ctor">
            <summary>
            default constructor for XRLReadFile
            normally will be used for negative test cases
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.#ctor(System.String)">
            <summary>
            XRLReadFile constructor that takes one parameter
            </summary>
            <param name="pathName">pathName of the file that will be downloaded</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.Execute(ServerTestFramework.LiveService.Storage.XRLReadFileResponse@)">
            <summary>
            Send XRLReadFile requests to the xstorage front door
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLReadFileResponse@)">
            <summary>
            send XRLReadFile http request to storage front door and get the response back
            </summary>
            <param name="sServer">Storage front door</param>
            <param name="Response">XRLReadFile response</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFile.Execute(System.Boolean,System.Net.IPEndPoint,ServerTestFramework.LiveService.Storage.XRLReadFileResponse@)">
            <summary>
            During stress, I found out it spend lots of time in deserializing when reading response
            since stress doesn't care the response, we will just ignore it for stress tests.
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReadFileResponse">
            <summary>
            This class is for XRLReadFileResponse
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLReadFileResponse.Compare(ServerTestFramework.LiveService.Storage.XRLWriteFile)">
            <summary>
            Compare the readFile response with the writeFile request;
            This method can be used to check if all columns are set up correctly
            in the database for upload file request
            </summary>
            <param name="other">requests that upload the file</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLRemoveFile">
            <summary>
            This class is for delete a file from storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLRemoveFile.#ctor(System.String,System.UInt32,System.String)">
            <summary>
            XRLRemoveFile constructor that takes two parameters
            </summary>
            <param name="pathName">pathName of the file that need to be removed</param>
            <param name="TitleID">titleID of the file that need to be removed</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLRemoveFile.GenerateHttpHeader(System.Net.IPEndPoint,System.IO.MemoryStream)">
            <summary>
            If this is a dataCenter RemoveFile request,then we need append HTTPAuthData header
            </summary>
            <param name="endPoint"></param>
            <param name="reqStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLRemoveFile.Execute">
            <summary>
            Send XRLRemoveFile http request to stfd
            </summary>
            <param name="sServer">storage front door</param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Storage.XRLRemoveFile.Server">
            <summary>
            Set or get Storage Front door
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLReportBrokenLink">
            <summary>
            Summary description for XRLReportBrokenLink.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.XRLWriteFile">
            <summary>
            This class is used to upload a file to storage database
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.#ctor">
            <summary>
            default constructor for XRLWriteFile
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.#ctor(System.UInt32,System.UInt32,System.String,System.UInt64)">
            <summary>
            XRLWriteFile constructor that takes four parameters
            Can be used together with stats API to upload a file
            </summary>
            <param name="titleID">titleID of the upload file</param>
            <param name="uiFileSize">filesize of the upload file in byte</param>
            <param name="pathName">stats generated pathName of the upload file</param>
            <param name="UserPuid">userPUID that upload the file</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.#ctor(System.String,System.String)">
            <summary>
            Tsunami testing: different domain has different permission type
            </summary>
            <param name="permissionType">None/All/Owner/Team/UserToken/ServiceToken/ServiceAddr</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.Verify">
            <summary>
            connect to STDB to check columns that cannot be checked by ReadFileResponse
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.GenerateHttpHeader(System.Net.IPEndPoint,System.IO.MemoryStream)">
            <summary>
            If this is a dataCenter WriteFile request,then we need append HTTPAuthData header
            </summary>
            <param name="endPoint"></param>
            <param name="reqStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.XRLWriteFile.Execute">
            <summary>
            send XRLWriteFile requests to the xstorage front door
            </summary>
            <param name="sServer"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Storage.XRLWriteFile.Server">
            <summary>
            Set or get Storage Front door
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.BlobClient">
            <summary>
            This class is used to retrieve or upload a file to Azure Storage
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.BlobTableClient">
            <summary>
            This class is used to retrieve or upload table data to Azure Storage
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.TableClient">
            <summary>
            This class is used to retrieve or upload table data to Azure Storage
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.BlobTableClient.GetStoragePath(System.UInt64,System.String,System.Guid)">
            <summary>
            Single location to use for calculating the Blob Path. If the Blob path changes in design
            it only needs to be changed here to avoid massive test updates. All tests should use these
            functions rather than calculating the path themselves
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="transactionGuid"></param>
            <returns>String BlobPath for BlobStorage</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.BlobTableClient.GetSASUrl(System.String,System.String,System.UInt64,System.String,System.String,System.String)">
            <summary>
            Generates an SAS query URL that is equivalent to what the Client FrontDoor would return. 
            This URL can be used to directly download a file without needing any managed code
            </summary>
            <param name="storageUri"></param>
            <param name="container"></param>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="transactionId"></param>
            <param name="signature"></param>
            <returns>URL for direct file access using the provided SAS signature</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.BlobTableClient.GetListFromIEnumerable(System.Collections.Generic.IEnumerable{xonline.server.xlfs.common.BlobTableEntry})">
            <summary>
            Wrapper function to protect agains server exceptions. If the table has only been created with no entries
            the first Select will throw rather than return a null/empty list. Catch that error and return an empty list
            </summary>
            <param name="blobEnum">IEnumerable parameter result from query</param>
            <returns>IEnumerable.ToList()</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.FileTableClient">
            <summary>
            This class is used to retrieve or upload table data to Azure Storage
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.FileTableClient.GetListFromIEnumerable(System.Collections.Generic.IEnumerable{xonline.server.xlfs.common.FileTableEntry})">
            <summary>
            Wrapper function to protect agains server exceptions. If the table has only been created with no entries
            the first Select will throw rather than return a null/empty list. Catch that error and return an empty list
            </summary>
            <param name="fileEnum">IEnumerable parameter result from query</param>
            <returns>IEnumerable.ToList()</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.FileTableLastUpdateClient">
            <summary>
            This class is used to retrieve or upload table data to Azure Storage
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.FileTableLastUpdateClient.GetListFromIEnumerable(System.Collections.Generic.IEnumerable{xonline.server.xlfs.common.FileTableLastUpdateEntry})">
            <summary>
            Wrapper function to protect agains server exceptions. If the table has only been created with no entries
            the first Select will throw rather than return a null/empty list. Catch that error and return an empty list
            </summary>
            <param name="fileEnum">IEnumerable parameter result from query</param>
            <returns>IEnumerable.ToList()</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.FileTableLastUpdateClient.SelectCount(System.DateTime@,System.DateTime@)">
            <summary>
            Not recommended for large tables. Use the more efficient SelectCount providing a startDate to avoid using lots of memory
            The resultsSegment itself will "cache" older entries rather than freeing the memory after use.
            </summary>
            <param name="oldest">out param returning the Oldest record found (if records found). DateTime.UtcNow if no records found.</param>
            <param name="newest">out param returning the Newest record found. DateTime.UtcNow if no records found.</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.FileTableLastUpdateClient.SelectCount(System.DateTime,System.DateTime@,System.DateTime@)">
            <summary>
            More efficient search (but slower) to find the total count and start and end DateTime for Performance test
            resuming. Avoids caching used by most of the managed code to avoid large memory use when the table size
            is large
            </summary>
            <param name="startSearch">DateTime to start searching forward from. Suggested is 1/1/2010</param>
            <param name="oldest">out param returning the Oldest record found (if records found).</param>
            <param name="newest">out param returning the Newest record found prior to startSearch. Max newest is DateTime.Maxvalue.</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.QueueClient">
            <summary>
            This class is used to retrieve or upload queue data to Azure Storage
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.StorageAccountTableClient">
            <summary>
            This class is used to retrieve or upload table data to Azure Storage
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.StorageAccountTableClient.GetListFromIEnumerable(System.Collections.Generic.IEnumerable{xonline.server.xlfs.common.StorageAccountTableEntry})">
            <summary>
            Wrapper function to protect agains server exceptions. If the table has only been created with no entries
            the first Select will throw rather than return a null/empty list. Catch that error and return an empty list
            </summary>
            <param name="fileEnum">IEnumerable parameter result from query</param>
            <returns>IEnumerable.ToList()</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XlfsWebRequest.GetCertificateBySubjectName(System.String,System.Boolean)">
            <summary>
            Retrieve a certificate from based on it's subject name
            </summary>
            <param name="certSubject">The subject name of the certificate to find</param>
            <param name="privateKeyRequired">If true, the certificate must have a private key</param>
            <returns>An instance of the certificate with the requested subject</returns>
            <remarks>
            This method checks in the CurrentUser store for the certificate.  If
            it's not found, it will check the LocalMachine store.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XlfsWebRequest.GetCertificateBySubjectName(System.String,System.Boolean,System.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>
            Retrieve a certificate from the specified certificate store based on
            it's subject name
            </summary>
            <param name="certSubject">The subject name of the certificate to find</param>
            <param name="privateKeyRequired">If true, the certificate must have a private key</param>
            <returns>An instance of the certificate with the requested subject</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Storage.Azure.XLFSClient">
            <summary>
            This class is used to retrieve or upload a file to XLFS Azure Storage
            
            See http://xblwiki/default.aspx/XboxLive/XboxLiveFileSystem.html for design
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ReadFile(System.UInt64,System.String,System.UInt32)">
            <summary>
            ReadFile to access the Cloud directly to read the file rather than the Admin FD
            Searches for the file accross all partitions (slow)
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <returns>Stream to access the file in blob storage</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ReadFile(System.UInt64,System.String,System.UInt32,System.DateTime)">
            <summary>
            ReadFile to access the Cloud directly to read the file rather than the Admin FD
            This version will only search in a single partition for the file rather than accross all partitions
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <param name="lastUpdate">UTC DateTime partition to search for the file</param>
            <returns>Stream to access the file in blob storage</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ReadFileProperties(System.UInt64,System.String,System.UInt32)">
            <summary>
            Read Properties to access the Cloud directly to read the file rather than the Admin FD
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <returns>Stream to access the file in blob storage</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ReadFileMD5(System.UInt64,System.String,System.UInt32)">
            <summary>
            Read Properties to access the Cloud directly to read the file rather than the Admin FD
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <returns>Stream to access the file in blob storage</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ReadFileTransactionId(System.UInt64,System.String,System.UInt32)">
            <summary>
            Read the transactionId specific to a FileEntry
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <returns>Stream to access the file in blob storage</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.WriteFile(System.UInt64,System.String,System.UInt32,System.IO.Stream)">
            <summary>
            WriteFile to simulate the Write done by the front door
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <param name="fileStream"></param>
            <returns>bool indicating success if true</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.WriteFile(System.UInt64,System.String,System.UInt32,System.String,System.DateTime,System.IO.Stream)">
            <summary>
            WriteFile to simulate the Write done by the front door
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <param name="lastUpdate"></param>
            <param name="fileStream"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.WriteFile(System.UInt64,System.String,System.String,System.UInt32,System.String,System.Int64,System.DateTime,System.IO.Stream)">
            <summary>
            Full Parameter suite to allow "incorrect" parameters (ex. rowKey filename not the same as the FileName column in the XUID table)
            </summary>
            <returns>bool indicating success if true</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.RemoveFile(System.UInt64,System.String,System.UInt32)">
            <summary>
            Removes a file from storage.
            Searches accross all partitions and may be slow.
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.RemoveFile(System.UInt64,System.String,System.UInt32,System.DateTime)">
            <summary>
            Removes a file from XLFS Storage from a specific partition
            Faster search that only removes from a specific UTC DateTime partition
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <param name="lastUpdate">UTC DateTime specifying the file partition to search</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.SafeRemoveFile(System.UInt64,System.String,System.UInt32)">
            <summary>
            "Safe" version of the function above that catches errors. Useful for test clean up when a failure to remove
            doesn't mean a test case failure.
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.SafeRemoveFile(System.UInt64,System.String,System.UInt32,System.DateTime)">
            <summary>
            "Safe" version of the function above that catches errors. Useful for test clean up when a failure to remove
            doesn't mean a test case failure.
            </summary>
            <param name="xuid"></param>
            <param name="fileName"></param>
            <param name="titleID"></param>
            <param name="lastUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ClearFileList">
            <summary>
            Iterates through all files in the file table removing the blob and table entry.
            Will be slow for large tables
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ClearFileList(System.DateTime,System.DateTime)">
            <summary>
            Iterates through all files in the file table removing the blob and table entry.
            Will be slow for large tables
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.ClearStorage">
            <summary>
            Fast clearing of storage rather than walking the File and Blob Tables
            Clears all blob storage that has containers that are valid titleIds
            and drops and recreates the Blob and File Tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XLFSClient.WriteBlobFile(System.UInt64,System.String,System.String,System.UInt32,System.String,System.IO.Stream)">
            <summary>
            BlobTable is the "temporary" table for uploads to be stored during upload. UploadEnd() will move the entries to the FileTable
            The rowKey in this table is a Guid transaction ID
            </summary>
            <returns>bool indicating success if true</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XlfsUploadBegin.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Storage.Azure.XlfsUploadBegin.#ctor(ServerTestFramework.LiveService.Storage.Azure.XlfsUploadBegin)">
            <summary>
            Copy constructor.
            </summary>
            <param name="beginReq"></param>
        </member>
        <member name="M:xonline.server.xlfs.common.FileTableLastUpdateDataSource.Enum(System.DateTime,System.DateTime,System.Int32,System.Int32,Microsoft.WindowsAzure.StorageClient.ResultContinuation@)">
            <summary>
            Returns all of the files in the specified partition that match the given titleid
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="titleId"></param>
            <param name="maxResults"></param>
            <param name="continuationToken"></param>
            <returns></returns>
        </member>
        <member name="M:xonline.server.xlfs.common.FileTableLastUpdateDataSource.DeleteFileTableEntries(System.Collections.Generic.IEnumerable{xonline.server.xlfs.common.FileTableLastUpdateEntry})">
            <summary>
            Bulk-delete a bunch of rows from the FileTableLastUpdateEntry table.
            </summary>
            <param name="entries"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr">
            <summary>
            MatchSessionMgr keeps track of all sessions created by Create and Split.
            It can then check the expected delay in time for a session ID to be deleted and
            verify the session no longer exists after that inverval has elapsed.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.sessionIdsByTitleId">
            <summary>
            Stores all registered sessions' IDs bucketed by Title ID
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.RegisterSession(System.UInt32,System.Int64)">
            <summary>
            RegisterSession stores the title and session IDs of a newly created/split session in order to 
            confirm the session's subsequent deferred deletion
            </summary>
            <param name="titleId">The title ID; used to get the expected delete delay seconds for this session ID</param>
            <param name="sessionId">The newly created or split session ID</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.VerifyAllSessionsDeleted">
            <summary>
            Verifies all sessions registered via RegisterSession() get cleaned up.
            </summary>
            <returns>true: all sessions were cleaned up; false: a session existed after it should have been deleted</returns>
        </member>
        <member name="P:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.RegisteredSessionsCount">
            <summary>
            Returns the total number of sessions registered with the session manager
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.MatchSessionMgr.SessionIdList">
            <summary>
            Makes the code in this class a little more legible, otherwise adds nothing new to the conversation
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLxnaddr">
            <summary>
            Summary description for XRLxnaddr.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.Constants.X_ATTRIBUTE_SESSION_ID">
            <summary>
            The following const are system defined context/properties
            </summary>		
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.Constants.CONTEXT_MYCONTEXT1">
            <summary>
            The following const are copied from xenonmatchTest.spa.h file
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.Constants.getNumDBForTitle(System.UInt32)">
            <summary>
            return the number of database that a particular title resides
            </summary>
            <param name="titleID"></param>
            <returns></returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.MatchUtil.verifySessionExistsCmd">
            <summary>
            SQL statement template for determining if a session exists in a particular table
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchUtil.CalculateOffsets(System.UInt32,ServerTestFramework.LiveService.Matchmaking.XrlAttributeBase[],System.UInt32[]@,System.UInt32@)">
            <summary>
            Calculate a set of offsets given a base message size and collection of attributes.
            The total message size is and offset collection are returned as out parameters.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.TitleCrossPlatformRevoker.Restore">
            <summary>
            Unlocked should restore a Title ID to it's original cross-platform revocation setting.
            Currently it sets the cross-platform revocation setting to NULL (x-plat allowed).
            If Lock() was not called first, calling Unlock() is a no-op.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.MatchTitleMgr.GetMatchTitle(System.UInt32)">
            <summary>
            Retrieves a single match title's info from NPDB
            </summary>
            <param name="titleId">A valid Match title ID (i.e. defined in the npdb.dbo.t_match_titles table)</param>
            <returns>An instance of MatchTitle initialized with the values retrieve from the NPDB server</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Matchmaking.MatchTitleMgr.GetMatchTitles" -->
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.LiveService.Matchmaking.MatchTitleMgr.GetMatchTitlesByIds(System.Collections.IEnumerable)" -->
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam">
            <summary>
            This class is used to represent both attributes in schema AND
            search parameters in the search requests.
            In Xenon: 
            Search Parameters:	int32/int64/float32/float64/dateTime are allowed, while string and blobs are not.
            Session Attributes: string/int32/int64/float32/float64/dateTime/null are allowed, blobs are not.
            Search Results: same as Session Attributes.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLXeIntValue">
            <summary>
            can be used represent both int32 and int64 values
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeIntValue.#ctor(System.Int64)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeFloatValue.#ctor(System.Single)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeDoubleValue.#ctor(System.Double)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeStringValue.#ctor(System.String)">
            <summary>
            create a stringParam with specified string value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLXeDateTimeValue.#ctor(System.Int64)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParamWeighted">
            <summary>
            This class is basically a copy of XRL2AttribParam.  It could inherit, except that all the
            logic is really in constructors, and the write/readstream can't be reused either.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession">
            <summary>
            Since WireData doesn't support inheritance (it doesn't serialize parent class's fields),
            Instead of inheriting from XRLCreateUpdateSession, we create a wrapper of that
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.#ctor">
            <summary>
            create session with 9 mandatory session attributes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.#ctor(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam[])">
            <summary>
            create session with provided attributes: this might or might not have the above 8 default attribs
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.#ctor(System.Byte[])">
            <summary>
            update session constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.RetrieveCurrentValue(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Fills in the given XRLXeAttribParam with the value of the current one, if it exists.
            Leaves it unchanged otherwise.
            </summary>
            <param name="attribToFind">An XRLXeAttribParam to look for, and fill with the value.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.FindAttrib(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Find a single attribute with the given parameter.  Does not use the passed-in value of
            that attribute.
            </summary>
            <param name="attribToFind">An XRLXeAttribParam to look for</param>
            <returns>A handle to the XRLXeAttribParam that currently exists and matches the name of the
            passed-in attribute.  Think before assigning to this!  Returns null if none is found.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.UpdateAttrib(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Updates a single attribute.  Unlike UpdateAttribs(), the attribute must be found in the
            base attribs array
            </summary>
            <param name="updateAttrib"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSessionInfo@)">
            <summary>
            send createSession requests
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.BeginExecute(System.Net.IPEndPoint,System.AsyncCallback)">
            <summary>
            Send CreateSession requests asynchronously.
            </summary>
            <param name="sServer"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send updateSession requests
            </summary>
            <param name="sServer"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRL2DeleteSession">
            <summary>
            counterPart for XMATCH_DELETE_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2DeleteSession.#ctor(System.Byte[],System.UInt32)">
            <summary>
            delete session with specified sessionID
            </summary>
            <param name="sessID"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2DeleteSession.BeginExecute(System.Net.IPEndPoint,System.AsyncCallback)">
            <summary>
            send deleteSession request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.AlternatePresenceUrl">
            <summary>
            This is being used for stress test: redirect queryAffiliate call to presence emulator
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.spoofSchemaVersionNumber">
            <summary>
            This allows you to specify a version to write into the custom header.  This is separate from the
            version that it actually is, allowing you to advertise as this version, but send
            data as a different one.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.AddParams(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam[])">
            <summary>
            append search parameters at the end of search requests
            </summary>
            <param name="Params"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.FindAttrib(ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam)">
            <summary>
            Find a single attribute with the given parameter.  Does not use the passed-in value of
            that attribute.
            </summary>
            <param name="attribToFind">An XRLXeAttribParam to look for</param>
            <returns>A handle to the XRLXeAttribParam that currently exists and matches the name of the
            passed-in attribute.  Think before assigning to this!  Returns null if none is found.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.Execute(System.Boolean,System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRL2SearchResults@)">
            <summary>
            For stress testing, we don't care what's being returned in the results
            </summary>
            <param name="stress"></param>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.BeginExecute(System.Net.IPEndPoint,System.AsyncCallback)">
            <summary>
            For stress testing, we don't care what's being returned in the results.  This version is
            async, so we can send requests even more aggressively.
            </summary>
            <param name="stress"></param>
            <param name="sServer"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.EndExecute(System.IAsyncResult,ServerTestFramework.LiveService.Matchmaking.XRL2SearchResults@)">
            <summary>
            Tha matching EndExecute for the BeginExecute.  Call this to complete a request started
            via BeginExecute.
            </summary>
            <param name="ar"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRL2SearchSession.Execute(System.Net.IPEndPoint,System.UInt32,ServerTestFramework.LiveService.Matchmaking.XRLXeAttribParam[],ServerTestFramework.LiveService.Matchmaking.XRL2SearchResults@)">
            <summary>
            send searchSession http request to matchmaking front door and get results back
            This one is used by functional test to check search results' details.
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="dwExpectedNumResults">expected number of sessions in the searchResults</param>
            <param name="ExpectedAttribs">expected number of attributes in the returned session</param>
            <param name="Response">actual response got back from match servers</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLIntAttribute">
            <summary>
            int attribute when creating or updating a session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLIntAttribute.#ctor(System.UInt32,System.Int64)">
            <summary>
            XRLIntAttribute constructor
            </summary>
            <param name="attribID"></param>
            <param name="attribValue"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLStringAttribute">
            <summary>
            string attribute when creating or updateing a session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLStringAttribute.#ctor(System.UInt32,System.String)">
            <summary>
            XRLStringAttribute constructor
            </summary>
            <param name="attribID"></param>
            <param name="attribValue"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLBlobAttribute">
            <summary>
            blob attribute when creating or updating a session
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLBlobAttribute.#ctor(System.UInt32,System.Byte[])">
            <summary>
            XRLBlobAttribute constructor
            </summary>
            <param name="attribID"></param>
            <param name="attribValue"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLBaseSession">
            <summary>
            basic fields of createSession request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession">
            <summary>
            counterPart of XMATCH_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSessionInfo@)">
            <summary>
            send CreateSession requests to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="Response">createSession response</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send updateSession request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.AddAttribs(ServerTestFramework.WireData[])">
            <summary>
            append title attributes at the end of create/updateSession requests
            </summary>
            <param name="attribs"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.SetAttribs(ServerTestFramework.WireData[])">
            <summary>
            Change the attributes of a session object
            </summary>
            <param name="attribs"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.AppendAttribs(ServerTestFramework.LiveService.Matchmaking.XrlAttributeBase[])">
            <summary>
            append title attributes at the end of create/updateSession requests
            </summary>
            <param name="attribs"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLCreateUpdateSession.GetAttribute(System.UInt32)">
            <summary> 
            Retrieve an attribute wiredata based on the ID
            </summary>
            <param name='attributeId'>Match AttributeID to retrieve</param>
            <returns>Attribute wiredata object or null if none exists</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSessionInfo">
            <summary>
            counterPart for XMATCH_SESSIONINFO
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox">
            <summary>
            counterPart for XMATCH_DEAD_XBOX
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox.#ctor">
            <summary>
            create a deadxbox request with random values
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox.Execute(System.Net.IPEndPoint)">
            <summary>
            send individual deadxbox request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeadXBox.BeginExecute(System.Net.IPEndPoint,System.AsyncCallback)">
            <summary>
            send individual deadxbox request to matchmaking front door asynchronously
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLDeleteSession">
            <summary>
            counterPart for XMATCH_DELETE_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeleteSession.#ctor(System.Byte[])">
            <summary>
            delete session with specified sessionID
            </summary>
            <param name="sessID"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLDeleteSession.Execute(System.Net.IPEndPoint)">
            <summary>
            send deleteSession request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLAttribParam">
            <summary>
            This class is used to represent BOTH session attributes returned in search Results
            AND search parameters in the search requests
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLIntParam.#ctor(System.Int64)">
            <summary>
            create an intParam with specified value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLStringParam.#ctor(System.String)">
            <summary>
            create a stringParam with specified string value
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLBlobParam.#ctor(System.Byte[])">
            <summary>
            create a blob parameter with specified blob value
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLBaseSearchSession">
            <summary>
            basic fields of search session request
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession">
            <summary>
            counter part of XMATCH_SEARCH_SESSION
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.#ctor(System.UInt32)">
            <summary>
            create a search session request with specified spIndex
            </summary>
            <param name="spIndex">stored procedure index that used for search request</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.AddParams(ServerTestFramework.LiveService.Matchmaking.XRLAttribParam[])">
            <summary>
            append search parameters at the end of search requests
            </summary>
            <param name="Params"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSearchResults@)">
            <summary>
            send searchSession http request to match front door and get response
            This one assumes nothing about search results. i.e. it works for both
            returned session with and without attributes.
            So it can be used by both functional and stress tests
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="Response">search result</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.Execute(System.Boolean,System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRLSearchResults@)">
            <summary>
            For stress test, we don't care what's being returned in the search results
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSearchSession.Execute(System.Net.IPEndPoint,System.UInt32,ServerTestFramework.WireData[],ServerTestFramework.LiveService.Matchmaking.XRLSearchResults@)">
            <summary>
            send searchSession http request to matchmaking front door and get results back
            This one is used by functional test to check search results' details.
            </summary>
            <param name="sServer">matchmaking front door</param>
            <param name="dwExpectedNumResults">expected number of sessions in the searchResults</param>
            <param name="ExpectedAttribs">expected number of attributes in the returned session</param>
            <param name="Response">actual response got back from match servers</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSingleSearchResult">
            <summary>
            counterPart of XMATCH_SEARCH_RESULT
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSearchResults">
            <summary>
            XMATCH_SEARCHRESULT_HEADER + sessions returned
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession">
            <summary>
            XRL for splitting a session during host migration
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.#ctor(System.Byte[],System.UInt32,ServerTestFramework.LiveService.Matchmaking.XRLxnaddr,ServerTestFramework.WireData[])">
            <summary>
            create session with 9 mandatory session attributes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.#ctor(ServerTestFramework.LiveService.Matchmaking.XRL2CreateUpdateSession)">
            <summary>
            create session with 9 mandatory session attributes.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.Execute(System.Net.IPEndPoint,ServerTestFramework.LiveService.Matchmaking.XRL2SingleSearchResult@)">
            <summary>
            Send SplitSession request
            </summary>
            <param name="sServer"></param>
            <param name="Response"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLSplitSession.BeginExecute(System.Net.IPEndPoint,System.AsyncCallback)">
            <summary>
            Send SplitSession request asynchronously
            </summary>
            <param name="sServer"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Matchmaking.XRLTitleChange">
            <summary>
            Xenon: 1st new API for Xenon
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLTitleChange.Execute(System.Net.IPEndPoint)">
            <summary>
            send individual deadxbox request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.Matchmaking.XRLTitleChange.BeginExecute(System.Net.IPEndPoint,System.AsyncCallback)">
            <summary>
            send individual deadxbox request to matchmaking front door
            </summary>
            <param name="sServer">matchmaking front door</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLAddString">
            <summary>
            Summary description for XRLAddString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLGetString">
            <summary>
            Summary description for XRLGetString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLTitleIDRequest">
            <summary>
            Summary description for XRLTitleIDRequest.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLLogString">
            <summary>
            Summary description for XRLLogString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLLogBinary">
            <summary>
            Summary description for XRLLogString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.StringServer.XRLVetString">
            <summary>
            Summary description for XRLVetString.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.GI.Pong">
            Context and properties that are exposed for the pong
            test title ID.
        </member>
        <member name="T:ServerTestFramework.LiveService.GI.Pong.Context">
            Context IDs used for creating contexts
            see named enums below for context values.
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.SendablePacket.GenerateRandomString(System.Int32)">
            <summary>
            Generate a random string of characters
            </summary>
            <param name="size">Lenght of string</param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest">
             <summary>
             Summary description for CReflectionRequest.
            
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.UInt16,System.UInt16,System.UInt16,System.String)">
            <summary>
            Reflection Request, use this constructor for making bad packets
            </summary>
            <param name="pv">Protocol version</param>
            <param name="rt">Request type</param>
            <param name="rps">Return packet size</param>
            <param name="pl">Payload</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.UInt16,System.String)">
            <summary>
            Reflection Request, simple constructor
            </summary>
            <param name="rt">Request type</param>
            <param name="pl">Payload</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.UInt16,System.Int32)">
            <summary>
            Reflection Request, simple constructor
            </summary>
            <param name="rt">Request type</param>
            <param name="payloadsize">Payload size, automatically generates a random string</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CReflectionRequest.#ctor(System.Int32)">
            <summary>
            Reflection Request, even simpler constructor
            </summary>
            <param name="payloadsize">Payload size, automatically generates a random string</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Diagnostics.CICMPRequest">
             <summary>
             Summary description for CICMPRequest.
            
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CICMPRequest.#ctor(System.UInt16,System.UInt16,System.Byte[],System.UInt64,System.UInt32)">
            <summary>
            ICMP Request constructor, use this for making bad packets
            </summary>
            <param name="pv">Protocol version</param>
            <param name="rt">Request type</param>
            <param name="signature">Signature</param>
            <param name="ts">Timestamp</param>
            <param name="packetsize">Packet size</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CICMPRequest.#ctor(ServerTestFramework.LiveService.Diagnostics.CReflectionReply)">
            <summary>
            ICMP Request, simple constructor
            </summary>
            <param name="reply">Reply packet from a Reflection Request call</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.Diagnostics.CICMPRequest.SetTimestamp(System.Byte[],System.UInt64)">
            <summary>
            Both parameters must come from a CReflectionReply message
            </summary>
            <param name="signature"></param>
            <param name="timestamp"></param>
        </member>
        <member name="T:ServerTestFramework.LiveService.Diagnostics.CReflectionReply">
             <summary>
             Reply packet for Reflection request
            
            
             </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.InjectEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API to inject an event
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.InjectNextEvent(ServerTestFramework.STFLive.Reporting.ReportingEventType,ServerTestFramework.STFLive.Reporting.ReportingReferenceObject@)">
            <summary>
            API that injects the next event in a series of events
            </summary>
            <param name="type"></param>
            <param name="reportingRefObject"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.GetIntPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is an integer
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Cleanser.GetFloatPerformanceCounter(System.String)">
            <summary>
            Gets a performance counter that is a floating point number
            </summary>
            <param name="Counter"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Cleanser.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Cleanser.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CleanserConnection">
            <summary>
            Encapsulates a connection to the cleanser using the cleanser protocol. Simulates the ReportConnection
            object used by the XomLog system during regular logging from service components. The exception is that
            this class does not simulate the async IO ReportConnection uses. This class is also not threadsafe.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserConnection.GetFirstCleanser">
            <summary>
            Helper function to get the remote endpoint of the first available cleanser
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserConnection.GetVirutalInterface">
            <summary>
            Helper function to find the cleanserinh vip endpoint
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.MessageType">
            <summary>
            All currently known messages types fro npdb t_messages table as of 2/25/08
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.MessageGenerator">
            <summary>
            Creates messages for all supported types in the current cleanser.
            These messages are generated from a combination of looking at service source code, 
            the old verification tests, and logs from various production servers.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.MessageGenerator.LoadComponentToServiceMap">
            <summary>
            Connects to NPDB and loads the componentID for each messageid. This is needed so that when 
            messages are sent to the cleanser we are sending them from the right component (spoofed). If this
            is not done, the cleanser is designed to reject the message.
            Note that this function is only ever called once per instance of the singleton (aka once per process)
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.MessageGenerator.MessageToServiceComponentType(ServerTestFramework.STFLive.Reporting.MessageType)">
            <summary>
            Allows a client to resolve the correct component that a message should come from
            </summary>
            <param name="mt"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ServerTestFramework.STFLive.Reporting.MessageGenerator.BuildContentRefMessage(System.UInt64)" -->
        <member name="M:ServerTestFramework.STFLive.Reporting.MessageGenerator.BuildSNDMessage(System.UInt64)">
            <summary>
            Build an SND message from a prototype found in production logs
            </summary>
            <param name="puid"></param>
            <returns></returns>
            //Tested
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.MessageGenerator.BuildArgoLicenseMsg(System.UInt64)">
            <summary>
            Builds an ARGOLICENSE MESSAGE
            Results in a call to p_add_video_license on FilterDB that inserts into t_video_license_fact
            </summary>
            <param name="puid"></param>
            <returns></returns>
            //Tested
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.MessageGenerator.BuildSGADDMMsg(System.UInt64)">
            <summary>
            Builds an SGADDM Message
            </summary>
            <param name="puid"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingMachines">
            <summary>
            The current machines that are in some way involved in reporting
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Uninitialized">
            <summary>
            Uninitialized value
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Client">
            <summary>
            Client - Source for most server side events
            Hey, I can dream, can't I?
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Xbos">
            <summary>
            XBOS -
            Content Referral, Argo Licensing, etc.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Xuacs">
            <summary>
            XUACS -
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Xcbk">
            <summary>
            XCBK -
            Account Provisioning/Deprovisioning
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.PresenceINH">
            <summary>
            Presence -
            TitleStart/TitleEnd, SessionStart/SessionEnd, GuestChanges, Messaging
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.StringSvr">
            <summary>
            StringServer -
            Fusion, Banner Click/View/Purchase
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.WMIS">
            <summary>
            WMIS -
            All argo related metadata
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.UODB">
            <summary>
            UODB -
            All user related data, achievements, etc.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.ProductDB">
            <summary>
            ProductDB -
            All product data, offers, etc.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Cleanser">
            <summary>
            Cleanser -
            Server where all of the INH/Frontdoor data is collected
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.SSIS">
            <summary>
            SSIS -
            Server where all of the UODB and WMIS data is collected
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Filter">
            <summary>
            FilterDB, distribution location for data passing through the cleansers
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Reporting">
            <summary>
            Main reporting database
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.OLAP">
            <summary>
            Main aggregation database
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Rosetta">
            <summary>
            IIS Server that serves out reports
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Archive">
            <summary>
            Archive database for the reporting database
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingMachines.Realtime">
            <summary>
            Realtime reports database
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.XBLReports">
            <summary>
            Xbox Live Reports
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingCommon">
            <summary>
            Main class for reporting test code
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingCommon.ClearInstance(System.Boolean)">
            <summary>
            Clears the current singleton
            Should ONLY be done at the beginning of a test group
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingCommon.FindObjectByInterface(System.String)">
            <summary>
            Find the component object (Ex. ReportingDatabase) given an interface name.
            </summary>
            <param name="iFace">Interface name (Ex. reportingdb)</param>
            <returns>A list of all components related to that interface or an empty list if no components were found</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.Instance">
            <summary>
            Returns the singleton for this class
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingDB">
            <summary>
            A reference to the reportingDB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingSSISDB">
            <summary>
            A reference to the SSISDB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingArchiveDB">
            <summary>
            A reference to the Archive DB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingOLAPDB">
            <summary>
            A reference to the OLAPDB
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.ReportingIIS">
            <summary>
            A reference to the ReportIIS - Report Service
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.RealtimeDB">
            <summary>
            A reference to the ReportingRealtime database
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.FilterDBs">
            <summary>
            A reference to ALL of the filterdbs
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingCommon.Cleansers">
            <summary>
            A reference to ALL of the cleansers
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingData">
            <summary>
            A reference object class representing a data set
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.Queries">
            <summary>
            List of queries
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.RawData">
            <summary>
            Raw object data (Caller must know how to cast the data)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingData.TableCounts">
            <summary>
            ReportingData is a series of tables and respective row counts
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType">
            <summary>
            This classifies the data that a ReportingData object contains
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType.Query">
            <summary>
             ReportingData object is a query or set of queries
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType.RawData">
            <summary>
            ReportingData object contains raw data
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingData.InternalDataType.TableCounts">
            <summary>
            ReportingData object contains a set of tables and respective rowcounts
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDataLoader">
            <summary>
            A class containing the logic necessary to load data for a particular type of data
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDataLoader.InjectSingleData">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingEvent">
            <summary>
            A reference object representing an individual event
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_i_time(System.DateTime)">
            <summary>
            fn_get_i_time 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_dt_datetime(System.Int32,System.Int32)">
            <summary>
            fn_get_dt_time 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_i_date(System.DateTime)">
            <summary>
            fn_get_i_date 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.fn_get_dt_date(System.Int32)">
            <summary>
            fn_get_dt_date 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetTopContent(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            API to get single row from a table
            </summary>
            <param name="sProvider"> SQLDataProvider </param>
            <param name="szTable"></param>
            <returns> SqlDataReader </returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetTopContent(ServerTestFramework.STFLive.Reporting.ReportingDatabase,System.String)">
            <summary>
            API to get single row from a table
            </summary>
            <param name="sProvider"> SQLDataProvider </param>
            <param name="szTable"></param>
            <returns> SqlDataReader </returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetContent(System.Data.SqlClient.SqlConnection,System.String,System.Collections.ArrayList)">
            <summary>
            API to get single row from a table with conditions
            </summary>
            <param name="sProvider"> SQLDataProvider </param>
            <param name="szTable"></param>
            <param name="aList"> ArrayList of ColumnInfo </param>
            <returns> SqlDataReader </returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CompareSingleRow(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            CompareSingleRow 
            Compare a row in two tables column by column
            Currently it only cares about Byte, Int16, Int32, Int64, Boolean and String type
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.FillColumnInfo(System.Data.SqlClient.SqlDataReader)">
            <summary>
            FillColumnInfo 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetArgumentString(System.Xml.XmlDocument,System.String)">
            <summary>
            GetArgumentString 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetArgumentInt(System.Xml.XmlDocument,System.String)">
            <summary>
            GetArgumentInt 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.GetArgumentBool(System.Xml.XmlDocument,System.String)">
            <summary>
            GetArgumentBool 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionCompare_Equal(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare if two collections are equal. They are considered equal if they have the same number
            of objects and all objects from Data1 are present in Data2
            </summary>
            <param name="Data1">First Name/Value Collection</param>
            <param name="Data2">Second Name/Value Collection</param>
            <returns>True if the 2 sets of data are equal. False for everything else</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionCompare_Different(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare if two collections are different. They are considered different if they have the different number
            of objects or objects from Data1 are not present in Data2
            </summary>
            <param name="Data1">First Name/Value Collection</param>
            <param name="Data2">Second Name/Value Collection</param>
            <returns>True if the 2 sets of data are different. False for everything else</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionNoRepeatedValues(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare the values of a collection against each other to find if any are repeated
            </summary>
            <param name="Data1">Name/Value Collection</param>
            <returns>True if the set of data has repeated values. False for everything else</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingHelper.CollectionCompare_DataPresent(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Compare if all the elements from Data1 are present in Data2. Note that this DOES NOT mean they are equal
            </summary>
            <param name="Data1">First Name/Value Collection</param>
            <param name="Data2">Second Name/Value Collection</param>
            <returns>True if ALL elements from Data1 are present in Data2 (This does not mean that Data1 = Data2)</returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingHelper.ColumnInfo">
            <summary>
            ColumnInfo 
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DateRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor for DateRange. Set dateMin and dateMax values.
            </summary>        
            <param name="minus">Delta to subtract from current time in seconds</param>
            <param name="plus">Delta to add to current time in seconds</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DateRange.#ctor(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Constructor for DateRange. Set dateMin and dateMax values.
            </summary>
            <param name="Seed">Initial Time</param>
            <param name="minus">Delta to subtract from current time in seconds</param>
            <param name="plus">Delta to add to current time in seconds</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DateRange.Reset">
            <summary>
            Recenters the date range around the current time.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DateRange.Reset(System.DateTime)">
            <summary>
            Recenters the date range around the time in 'Seed'
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.TestRefObject">
            <summary>
            Basic Reporting Ref object test class
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.TestRefObject.RunDebugQuery">
            <summary>
            Return RefObject Debug Query
            </summary>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingJobStatus">
            <summary>
            Job Status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingJob">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_SQLJob">
            <summary>
            Using .NET built-in Job class internally
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_Completed">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_HResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_JobType">
            <summary>
            Job Type
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJob.m_Parameters">
            <summary>
            Job parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.RunJob">
            <summary>
            Execute the job
            </summary>
            <returns>The constructed SQL script to execute the job</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.StopJob">
            <summary>
            Stop the job if it's currently executing
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.UpdateStatus">
            <summary>
            Update job status
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJob.InvokeJob">
            <summary>
            Execute the job
            </summary>
            <returns>JobExecutionStatus</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.Completed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.HResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.Results">
            <summary>
            The results of this job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.StartTime">
            <summary>
            When the job was started
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.RunningTime">
            <summary>
            How long it took this job to run
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.ServerName">
            <summary>
            Name of Server the job runs in
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.JobName">
            <summary>
            Name of the job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.JobSteps">
            <summary>
            Job Steps
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJob.Parameters">
            <summary>
            Job Parameters
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingJobParameters">
            <summary>
            Placeholder class, you cast from this class to your expected job parameters.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.m_Instance">
            <summary>
            Create a singleton class
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.m_ReportingJobs">
            <summary>
            Contains all reporting jobs in this test run
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.#ctor">
            <summary>
            Constructor
            The class is a singleton because it serves as a central datastore for all jobs in a test run
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.ClearInstance">
            <summary>
            Clears the current singleton        
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.CreateReportingJob(ServerTestFramework.STFLive.Reporting.ReportingJobType,ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Factory method
            </summary>
            <param name="reportingJobType"></param>
            <param name="reportingJobParams"></param>
            <returns></returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingJobFactory.Instance">
            <summary>
            Returns the singleton for this class
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ReportingService">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.#ctor(System.String)">
            Reporting Service constructor
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethods">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSecureMethods(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSecureMethods(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethodsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethodsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatch">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatchAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatch">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCancelBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCancelBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatchAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatch">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginExecuteBatch(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndExecuteBatch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatchAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatchAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetSystemProperties(ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetSystemProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPropertiesAsync(ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItem(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteItem(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItemAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItemAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItem(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginMoveItem(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndMoveItem(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItemAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItemAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildren(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListChildren(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListChildren(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildrenAsync(System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildrenAsync(System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemType(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetItemType(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetItemType(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemTypeAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemTypeAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolder(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateFolder(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateFolder(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolderAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolderAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReport(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateReport(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportAsync(System.String,System.String,System.Boolean,System.Byte[],ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinition(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportDefinition(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinitionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinitionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinition(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportDefinition(System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportDefinition(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinitionAsync(System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateResource(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateResource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResourceAsync(System.String,System.String,System.Boolean,System.Byte[],System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContents(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetResourceContents(System.String,System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetResourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContentsAsync(System.String,System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContents(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetResourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetResourceContents(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParameters(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportParameters(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParametersAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParameters(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportParameters(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportParameters(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParametersAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParametersAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ReportParameter[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReport(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateLinkedReport(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateLinkedReport(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReportAsync(System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLink(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportLink(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLinkAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLinkAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLink(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportLink(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLinkAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLinkAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReports(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListLinkedReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListLinkedReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.Render(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@,ServerTestFramework.STFLive.Reporting.Service.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginRender(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndRender(System.IAsyncResult,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@,ServerTestFramework.STFLive.Reporting.Service.Warning[]@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderAsync(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderAsync(System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStream(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginRenderStream(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndRenderStream(System.IAsyncResult,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStreamAsync(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStreamAsync(System.String,System.String,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResource(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetRenderResource(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetRenderResource(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResourceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResourceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetExecutionOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetExecutionOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptionsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptionsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetExecutionOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetExecutionOptions(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptions(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetCacheOptions(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetCacheOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptionsAsync(System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptions(System.String,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetCacheOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetCacheOptions(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshot(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginUpdateReportExecutionSnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndUpdateReportExecutionSnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCache(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginFlushCache(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndFlushCache(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCacheAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCacheAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobs">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListJobs(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListJobs(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJob(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCancelJob(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCancelJob(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJobAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJobAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSource(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateDataSource(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSourceAsync(System.String,System.String,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,ServerTestFramework.STFLive.Reporting.Service.Property[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContents(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetDataSourceContents(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContentsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContentsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContents(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetDataSourceContents(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetDataSourceContents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContentsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContentsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginEnableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndEnableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDisableDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDisableDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListReportsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListReportsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSources(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportDataSources(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSourcesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSourcesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.DataSource[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSources(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportDataSources(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportDataSources(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePrompts(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportDataSourcePrompts(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportDataSourcePrompts(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePromptsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePromptsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshot(System.String,ServerTestFramework.STFLive.Reporting.Service.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateReportHistorySnapshot(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateReportHistorySnapshot(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.Warning[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshotAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshotAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptions(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportHistoryOptions(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportHistoryOptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptionsAsync(System.String,System.Boolean,System.Boolean,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptions(System.String,System.Boolean@,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportHistoryOptions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportHistoryOptions(System.IAsyncResult,System.Boolean@,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimit(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetReportHistoryLimit(System.String,System.Boolean,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetReportHistoryLimit(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimitAsync(System.String,System.Boolean,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimit(System.String,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetReportHistoryLimit(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetReportHistoryLimit(System.IAsyncResult,System.Boolean@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimitAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimitAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistory(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListReportHistory(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListReportHistory(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistoryAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistoryAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshot(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteReportHistorySnapshot(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteReportHistorySnapshot(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshotAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItems(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginFindItems(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndFindItems(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItemsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItemsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum,ServerTestFramework.STFLive.Reporting.Service.SearchCondition[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSchedule(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateSchedule(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateScheduleAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateScheduleAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetScheduleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetScheduleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSchedulePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetScheduleProperties(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetScheduleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetScheduleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSchedulePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSchedulePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReports(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListScheduledReports(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListScheduledReports(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReportsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReportsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedules">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSchedules(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSchedules(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedulesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedulesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginPauseSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndPauseSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeSchedule(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginResumeSchedule(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndResumeSchedule(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeScheduleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeScheduleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateDataDrivenSubscription(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateDataDrivenSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscriptionAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetDataDrivenSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetDataDrivenSubscriptionProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionPropertiesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan,System.String,System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSubscriptionProperties(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValue[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionProperties(System.String,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetDataDrivenSubscriptionProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetDataDrivenSubscriptionProperties(System.IAsyncResult,ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings@,ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ActiveState@,System.String@,System.String@,System.String@,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionPropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscription(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteSubscription(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscriptionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscriptionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQuery(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginPrepareQuery(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndPrepareQuery(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQueryAsync(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQueryAsync(ServerTestFramework.STFLive.Reporting.Service.DataSource,ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettings(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetExtensionSettings(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettingsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettingsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettings(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginValidateExtensionSettings(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndValidateExtensionSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettingsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettingsAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptions(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSubscriptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSource(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSubscriptionsUsingDataSource(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSubscriptionsUsingDataSource(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSourceAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensions(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListExtensions(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListExtensions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensionsAsync(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensionsAsync(ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEvents">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListEvents(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListEvents(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEventsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEventsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEvent(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginFireEvent(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndFireEvent(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEventAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEventAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasks">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSystemTasks(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSystemTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasksAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasksAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasks">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListTasks(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListTasks(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasksAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasksAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRoles">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListSystemRoles(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListSystemRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRolesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRolesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRoles">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginListRoles(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndListRoles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRolesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRolesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRole(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginCreateRole(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndCreateRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRoleAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRoleAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRole(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginDeleteRole(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndDeleteRole(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRoleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRoleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRoleProperties(System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetRoleProperties(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetRoleProperties(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRolePropertiesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRolePropertiesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRoleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetRoleProperties(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetRoleProperties(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRolePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRolePropertiesAsync(System.String,System.String,ServerTestFramework.STFLive.Reporting.Service.Task[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPolicies">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSystemPolicies(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPoliciesAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPoliciesAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPolicies(ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetSystemPolicies(ServerTestFramework.STFLive.Reporting.Service.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetSystemPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPoliciesAsync(ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPoliciesAsync(ServerTestFramework.STFLive.Reporting.Service.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPolicies(System.String,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetPolicies(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetPolicies(System.IAsyncResult,System.Boolean@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPoliciesAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPoliciesAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPolicies(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginSetPolicies(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndSetPolicies(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPoliciesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPoliciesAsync(System.String,ServerTestFramework.STFLive.Reporting.Service.Policy[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurity(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginInheritParentSecurity(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndInheritParentSecurity(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurityAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurityAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissions">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetSystemPermissions(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetSystemPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissionsAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissionsAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissions(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginGetPermissions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndGetPermissions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUser(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginLogonUser(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndLogonUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUserAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUserAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.Logoff">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.BeginLogoff(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EndLogoff(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogoffAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogoffAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSecureMethodsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateBatchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelBatchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ExecuteBatchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteItemCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.MoveItemCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListChildrenCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetItemTypeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateFolderCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDefinitionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateResourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetResourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportParametersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateLinkedReportCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportLinkCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListLinkedReportsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.RenderStreamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRenderResourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExecutionOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetCacheOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.UpdateReportExecutionSnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FlushCacheCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListJobsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CancelJobCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataSourceContentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.EnableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DisableDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportDataSourcePromptsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryOptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetReportHistoryLimitCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListReportHistoryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteReportHistorySnapshotCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FindItemsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSchedulePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListScheduledReportsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSchedulesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PauseScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ResumeScheduleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateDataDrivenSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetDataDrivenSubscriptionPropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.PrepareQueryCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ValidateExtensionSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSubscriptionsUsingDataSourceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListExtensionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListEventsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.FireEventCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemTasksCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListTasksCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListSystemRolesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.ListRolesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.CreateRoleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.DeleteRoleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetRolePropertiesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetSystemPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.SetPoliciesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.InheritParentSecurityCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetSystemPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.GetPermissionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogonUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.STFLive.Reporting.Service.ReportingService.LogoffCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ServerInfoHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ServerInfoHeader.ReportServerVersionNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ServerInfoHeader.ReportServerEdition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Policy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Policy.GroupUserName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Policy.Roles">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Role">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Role.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Role.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Task">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Task.TaskID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Task.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Task.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Event">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Event.Type">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Extension">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.ExtensionType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.LocalizedName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Extension.Visible">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.Delivery">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.Render">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.Data">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExtensionTypeEnum.All">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Subscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.SubscriptionID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Owner">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Path">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.VirtualPath">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Report">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.DeliverySettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.Active">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.LastExecuted">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.LastExecutedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.EventType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Subscription.IsDataDriven">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings.Extension">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionSettings.ParameterValues">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterFieldReference">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterValueOrFieldReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterFieldReference.ParameterName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterFieldReference.FieldAlias">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterValue.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterValue.Value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ParameterValue.Label">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ActiveState">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.DeliveryExtensionRemoved">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.DeliveryExtensionRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.SharedDataSourceRemoved">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.SharedDataSourceRemovedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.MissingParameterValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.MissingParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.InvalidParameterValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.InvalidParameterValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.UnknownReportParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ActiveState.UnknownReportParameterSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.DisplayName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Required">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.ReadOnly">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.Encrypted">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.IsPassword">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ExtensionParameter.ValidValues">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ValidValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ValidValue.Label">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ValidValue.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.CommandType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.CommandText">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.Timeout">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.QueryDefinition.TimeoutSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Field">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Field.Alias">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Field.Name">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Fields">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Query">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.CaseSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.CaseSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Collation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.AccentSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.AccentSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.KanatypeSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.KanatypeSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.WidthSensitivity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.WidthSensitivitySpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSetDefinition.Name">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum.True">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum.False">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.SensitivityEnum.Auto">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataRetrievalPlan.DataSet">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Extension">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.ConnectString">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.CredentialRetrieval">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.WindowsCredentials">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.ImpersonateUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.ImpersonateUserSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Prompt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.UserName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Password">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.Enabled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceDefinition.EnabledSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.Prompt">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.Store">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.Integrated">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.CredentialRetrievalEnum.None">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceReference.Reference">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.InvalidDataSourceReference">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Schedule">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.ScheduleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Definition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.Creator">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.NextRunTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.NextRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.LastRunTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.LastRunTimeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.ReferencesPresent">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Schedule.State">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinitionOrReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.StartDateTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.EndDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.EndDateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleDefinition.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DailyRecurrence">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RecurrencePattern">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DailyRecurrence.DaysInterval">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence.WeeksInterval">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence.WeeksIntervalSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.WeeklyRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Sunday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Monday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Tuesday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Wednesday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Thursday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Friday">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DaysOfWeekSelector.Saturday">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MinuteRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MinuteRecurrence.MinutesInterval">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MonthlyRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyRecurrence.Days">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.January">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.February">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.March">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.April">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.May">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.June">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.July">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.August">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.September">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.October">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.November">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthsOfYearSelector.December">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.WhichWeek">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.WhichWeekSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.DaysOfWeek">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.MonthlyDOWRecurrence.MonthsOfYear">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.FirstWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.SecondWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.ThirdWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.FourthWeek">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.WeekNumberEnum.LastWeek">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleReference">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleReference.ScheduleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleReference.Definition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.NoSchedule">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Ready">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Running">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Paused">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Expired">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ScheduleStateEnum.Failing">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot.HistoryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportHistorySnapshot.Size">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt.DataSourceID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourcePrompt.Prompt">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSource">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSource.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSource.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Job">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.JobID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Path">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Machine">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.StartDateTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Action">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Job.Status">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum.Render">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum.SnapshotCreation">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobActionEnum.ReportHistoryCreation">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.JobTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobTypeEnum.User">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobTypeEnum.System">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum.New">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum.Running">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.JobStatusEnum.CancelRequested">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExpirationDefinition">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.TimeExpiration">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.TimeExpiration.Minutes">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ScheduleExpiration">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ScheduleExpiration.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ReportParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.TypeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Nullable">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.NullableSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.AllowBlank">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.AllowBlankSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.MultiValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.MultiValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.QueryParameter">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.QueryParameterSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Prompt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.PromptUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.PromptUserSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.Dependencies">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ValidValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ValidValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ValidValues">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.DefaultValuesQueryBased">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.DefaultValuesQueryBasedSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.DefaultValues">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.State">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.StateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ReportParameter.ErrorMessage">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.Boolean">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.DateTime">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.Integer">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.Float">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterTypeEnum.String">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.HasValidValue">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.MissingValidValue">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.HasOutstandingDependencies">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ParameterStateEnum.DynamicValuesUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials.DataSourceName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials.UserName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.DataSourceCredentials.Password">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Warning">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.Code">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.Severity">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.ObjectName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.ObjectType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Warning.Message">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CatalogItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Path">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.VirtualPath">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Size">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.SizeSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.Hidden">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.HiddenSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.CreationDateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ModifiedDateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.CreatedBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ModifiedBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.MimeType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ExecutionDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CatalogItem.ExecutionDateSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Unknown">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Folder">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Report">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.Resource">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.LinkedReport">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemTypeEnum.DataSource">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.Property">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Property.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.Property.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SearchCondition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SearchCondition.Condition">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SearchCondition.ConditionSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ConditionEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ConditionEnum.Contains">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ConditionEnum.Equals">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SessionHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.SessionId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.IsNewExecution">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.ExecutionDateTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SessionHeader.ExpirationDateTime">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceHeader.ItemNamespace">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceEnum.PathBased">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ItemNamespaceEnum.GUIDBased">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.BatchHeader">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.BatchHeader.BatchID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum.Live">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.ExecutionSettingEnum.Snapshot">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum.And">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Service.BooleanOperatorEnum.Or">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSecureMethodsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSecureMethodsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSecureMethodsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateBatchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateBatchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CancelBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ExecuteBatchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSystemPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSystemPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.MoveItemCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListChildrenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListChildrenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListChildrenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetItemTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetItemTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetItemTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateFolderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateReportCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportDefinitionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportDefinitionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.SetReportDefinitionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetResourceContentsCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportParametersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportParametersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportParametersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateLinkedReportCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportLinkCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportLinkCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportLinkCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListLinkedReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListLinkedReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListLinkedReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.ParametersUsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderCompletedEventArgs.StreamIds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs.Encoding">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.RenderStreamCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRenderResourceCompletedEventArgs.MimeType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetExecutionOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetCacheOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.UpdateReportExecutionSnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FlushCacheCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListJobsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListJobsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListJobsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CancelJobCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CancelJobCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CancelJobCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataSourceContentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataSourceContentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetDataSourceContentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.EnableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DisableDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListReportsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcePromptsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcePromptsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportDataSourcePromptsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateReportHistorySnapshotCompletedEventArgs.Warnings">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs.KeepExecutionSnapshots">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryOptionsCompletedEventArgs.Item">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs.IsSystem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetReportHistoryLimitCompletedEventArgs.SystemLimit">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportHistoryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListReportHistoryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListReportHistoryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteReportHistorySnapshotCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FindItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FindItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.FindItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateScheduleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateScheduleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSchedulePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSchedulePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSchedulePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListScheduledReportsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListScheduledReportsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListScheduledReportsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSchedulesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSchedulesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSchedulesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.PauseScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ResumeScheduleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateDataDrivenSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateDataDrivenSubscriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.CreateDataDrivenSubscriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.ExtensionSettings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.DataRetrievalPlan">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Active">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.EventType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.MatchData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetDataDrivenSubscriptionPropertiesCompletedEventArgs.Parameters">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.PrepareQueryCompletedEventArgs.Changed">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ValidateExtensionSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ValidateExtensionSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ValidateExtensionSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsUsingDataSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsUsingDataSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSubscriptionsUsingDataSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListExtensionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListExtensionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListExtensionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListEventsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListEventsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListEventsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.FireEventCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSystemTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListTasksCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListTasksCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListTasksCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListSystemRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListSystemRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListRolesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.ListRolesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.ListRolesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.CreateRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.DeleteRoleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetRolePropertiesCompletedEventArgs.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetRolePropertiesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSystemPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetSystemPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPoliciesCompletedEventArgs.InheritParent">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.SetPoliciesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.InheritParentSecurityCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetSystemPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetSystemPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPermissionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.GetPermissionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Service.GetPermissionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.LogonUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Service.LogoffCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingQueryType">
            <summary>
            Type of query to do against a particular table
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingPair">
            <summary>
            Helper class
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryRunner">
            <summary>
            Runs a query against a Reporting server
            
            First deconstructs the query, running a count query first
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryRunner.RunQuery(System.Collections.Generic.List{System.String},System.String,System.String,System.Int32@,System.Collections.ArrayList@)">
            <summary>
            Order expected (count query then select query
            </summary>
            <param name="queries">Queries to run against the server</param>
            <param name="ReportingServer">Server to hit</param>
            <param name="ReportingDB">Database to hit</param>
            <param name="count"></param>
            <param name="Results">Results and counts from queries</param>
            <returns>If there were any errors</returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryBuilder">
            <summary>
            Contains helpful utility functions for building SQL queries
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingSQLQueryBuilder.BuildQuery(System.Type,System.Collections.Generic.Queue{ServerTestFramework.STFLive.Reporting.ReportingPair},ServerTestFramework.STFLive.Reporting.ReportingQueryType)">
            <summary>
            
            </summary>
            <param name="ReportingTableType"></param>
            <param name="KnownValues"></param>
            <param name="TypeOfQuery"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingTable">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetMaxUserPUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetMaxUserPUID(ServerTestFramework.STFLive.Reporting.ReportingDatabase)">
            <summary>
            GetMaxUserID - Using Reporting Database
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetMinUserPUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMinUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetMinUserPUID(ServerTestFramework.STFLive.Reporting.ReportingDatabase)">
            <summary>
            GetMinUserID - Using Reporting Database
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.FindNextUserID(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.FindNextUserID(ServerTestFramework.STFLive.Reporting.ReportingDatabase,System.Int64)">
            <summary>
            Find Next User ID - Using Reporting Database
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.FindNextUserID(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingTable.GetRecordCount(ServerTestFramework.STFLive.Reporting.ReportingDatabase)">
            <summary>
            Get Table Record Count
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingVerification">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingVerification.m_Completed">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingVerification.m_HResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.ReportingVerification.m_Parameters">
            <summary>
            Job parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingVerification.RunJob">
            <summary>
            Execute the job
            </summary>
            <returns>The constructed SQL script to execute the job</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.Completed">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.HResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.Results">
            <summary>
            The results of this job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.StartTime">
            <summary>
            When the job was started
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.RunningTime">
            <summary>
            How long it took this job to run
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.JobName">
            <summary>
            Name of the job
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.JobSteps">
            <summary>
            Job Steps
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.ReportingVerification.Parameters">
            <summary>
            Job Parameters
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.XBLReport">
            <summary>
            Abstract class for Xbox Live Report objects. Each object will map to a specific report
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.XBLReport.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.XBLReport.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.XBLReport.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.XBLReport.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.XBLReport.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.XBLReport.ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CdbVideoProcessing_SSIS">
            <summary>
            This is the SSIS Cdb Video Processing job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SSISJob">
            <summary>
            
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CdbVideoProcessing_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CdbVideoProcessing_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CdbVideoProcessing_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CdbVideoProcessing_SSIS.CdbVideoProcessing_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CIQDatafeed">
            <summary>
            This is the CIQ Datafeed export job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CIQDatafeed.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CIQDatafeed.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CIQDatafeed.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CIQDatafeed.CIQDatafeed_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux">
            <summary>
            This is the ReportingDB Daily Processing Crux job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.RunJob">
            <summary>
            Execute the job. If the job contains a valid parameter object then it will create
            the SQL to run the stored procedure for Daily Processing Crux.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.UpdateStatus">
            <summary>
            Update Job status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_Crux.DailyProcessing_Crux_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage">
            <summary>
            This is the Game Usage Daily Processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.RunJob">
            <summary>
            Execute the job. If the job contains a valid parameter object then it will create
            the SQL to run the stored procedure for Game Usage Daily Processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.UpdateStatus">
            <summary>
            Update Job status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage.DailyProcessing_GameUsage_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing">
            <summary>
            This is the OLAP ACHIEVEMENT CUBE daily processing job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapJob">
            <summary>
            OlapJob. From here the SSAS processing jobs will be derived.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapJob.RunJob">
            <summary>
            Run job. If no parameters are set then default job will be executed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapJob.UpdateStatus">
            <summary>
            Update Olap Job Status
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapJob.OlapJobParameters">
            <summary>
            Parameters for Olap Cube processing jobs
            Default settings are for regular job to run
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_AchievementsProcessing.DailySSAS_AchievementProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_CDBCruxUsageProcessing">
            <summary>
            This is the OLAP CDB CRUXUSAGE CUBE daily processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CDBCruxUsageProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CDBCruxUsageProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CDBCruxUsageProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_CDBCruxUsageProcessing.DailySSAS_CDBCruxUsageProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing">
            <summary>
            This is the OLAP CRUXUSAGE CUBE daily processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_CruxUsageProcessing.DailySSAS_CruxUsageProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing">
            <summary>
            This is the OLAP GAMEUSAGE CUBE daily processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_GameUsageProcessing.DailySSAS_GameUsageProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_VideoCubeProcessing">
            <summary>
            This is the OLAP CDB CRUXUSAGE CUBE daily processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_VideoCubeProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_VideoCubeProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailySSAS_VideoCubeProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailySSAS_VideoCubeProcessing.DailySSAS_VideoCubeProcessing_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables">
            <summary>
            This is the FilterDB:Purge Fact Tables job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FilterDB_PurgeFactTables.FilterDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration">
            <summary>
            This is the Olap Partition tool creation job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapCubeGeneration.OlapCubeGeneration_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapFullProcessGameUsageJob">
            <summary>
            OlapFullProcessGameUsageJob
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables">
            <summary>
            This is the ReportRealtimeDB: Purge Fact Tables job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_PurgeFactTables.RealtimeDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing">
            <summary>
            This is the ReportRealtimeDB: Realtime Processing job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDB_RealtimeProcessing.RealtimeDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData">
            <summary>
            This is the ReportingDB: Drop Archived Facts job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_TransferFactData.ReportArchiveDB_TransferFactData_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups">
            <summary>
            This is the ReportingDB: Drop Archived Facts job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportArchiveDB_UpdateFilegroups.ReportArchiveDB_UpdateFilegroups_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts">
            <summary>
            This is the ReportingDB: Drop Archived Facts job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_DropArchivedFacts.ReportingDB_DropArchivedFacts_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables">
            <summary>
            This is the ReportingDB:Purge Fact Tables job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ReportingDB_PurgeFactTables.ReportingDB_PurgeFactTables_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS">
            <summary>
            This is the SCGExport SSIS package job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGExport_SSIS.SCGExport_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS">
            <summary>
            This is the SCGImport SSIS package job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SCGImportFeed_SSIS.SCGImportFeed_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS">
            <summary>
            This is the UODB Accounts SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Accounts_SSIS.UODB_Accounts_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS">
            <summary>
            This is the UODB Music SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Music_SSIS.UODB_Music_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS">
            <summary>
            This is the UODB Offers SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Offers_SSIS.UODB_Offers_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS">
            <summary>
            This is the Daily UODB SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Primary_SSIS.UODB_Primary_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Purchase_SSIS">
            <summary>
            This is the UODB Purchase SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Purchase_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Purchase_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Purchase_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Purchase_SSIS.UODB_Purchase_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS">
            <summary>
            This is the UODB Realtime SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Realtime_SSIS.UODB_Realtime_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS">
            <summary>
            This is the Weekly UODB SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Secondary_SSIS.UODB_Secondary_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS">
            <summary>
            This is the UODB Video SSIS job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.UODB_Video_SSIS.UODB_Video_SSIS_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.WMIS_Download">
            <summary>
            This is the WMIS Download job
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.WMIS_Download.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.WMIS_Download.#ctor(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Reporting Constructor with Job Parameters
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.WMIS_Download.Initialize(ServerTestFramework.STFLive.Reporting.ReportingJobParameters)">
            <summary>
            Initialize Job with parameters if provided
            </summary>
            <param name="reportingJobParams">Job Parameters</param>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.WMIS_Download.WMIS_Download_Params">
            <summary>
            Job parameters specific to this job
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.AchievementSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.ContractualPartners.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.FirstTitlePlayed.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.LastWebActivity.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceDownloadSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketplaceScorecard.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTitleOffer.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MarketRedeemedContentTypeTier.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.MusicRoyalty.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageDaily.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.PublisherTitleUsageMonthly.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeAccounts.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.RealTimeTitleUsage.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.SubscriberLife.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageDetails.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.TitleUsageSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoRoyalty.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VideoStudio.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.VisitorFrequency.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.Xbox1DownloadDetails.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.m_ReportPath">
            <summary>
            Path to report in ReportingService
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.GetReportParameters">
            <summary>
            Queries the ReportingService to get the parameters for this Report.
            </summary>
            <returns>A list of Report Parameter Names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObject)">
            <summary>
            Verifies that data represented within the reference object is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObject">Object whose data needs verifying</param>
            <returns>Description of what was verified</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.Verify(ServerTestFramework.STFLive.Reporting.ReportingReferenceObjectContainer)">
            <summary>
            Verifies that ALL data represented within the reference object container is present in this Report
            Throws an exception if verification fails
            </summary>
            <param name="refObjectContainer">Object whose data needs verifying</param>
            <returns>Description fo what was verified</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.ComponentType">
            <summary>
            What server you are dealing with
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.Reports.XboxAccountSummary.ComponentName">
            <summary>
            The name of the server you are dealing with
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.StagingTable">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_achievements">
            <summary>
            A class representing T_achievements table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int32,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int32,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_achievements.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_base_offers">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_content_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_content_package">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions">
            <summary>
            A class representing T_dmp_purchase_transactions table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Guid,System.Int32)">
            <summary>
            AddOneRow
            if i_purchase_type_id=1 then Xbox Live Offers, if 2 then MusicNet, if 3 then SyncCast
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions.GetContent(System.Data.SqlClient.SqlConnection,System.Guid)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions.GetContent(System.Data.SqlClient.SqlConnection,System.Guid,System.String)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_music">
            <summary>
            A class representing T_dmp_purchase_transactions_music table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_music.GetContent(System.Data.SqlClient.SqlConnection,System.Guid)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_video">
            <summary>
            A class representing T_dmp_purchase_transactions_video table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_dmp_purchase_transactions_video.GetContent(System.Data.SqlClient.SqlConnection,System.Guid)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_elite_migration_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_fdb_time">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_guest_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_machines">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.AddOneRow(System.Data.SqlClient.SqlConnection)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetMaxMachinePUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetMinMachinePUID(System.Data.SqlClient.SqlConnection)">
            <summary>
            GetMaxUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.FindNextMachineID(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.FindNextMachineID(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            FindNextUserID
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_machines.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.String)">
            <summary>
            GetContent
            szTable should be "t_machines" or "t_machines_rt"
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_migrate_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_msg_snd_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_new_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_offers">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_presence_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_provision_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_publisher_titles">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_purchase_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_content_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_content_xbox360_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_guest_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_migrate_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_msg_snd_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_new_account_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_presence_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_provision_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_purchase_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_rdb_session_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_session_fact">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount.AddOneRow(System.Data.SqlClient.SqlConnection)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_spscustomeraccount.AddOneRow(System.Data.SqlClient.SqlCommand)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions">
            <summary>
            A class representing T_subscriptions table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64,System.Int32,System.String,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_subscriptions.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int64,System.Int32,System.String,System.DateTime)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_title_culture_details">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_title_feature_data">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_title_offers">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_titles">
            <summary>
            A class representing T_titles
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.FindNextTitleId(System.Data.SqlClient.SqlCommand,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.FindNextTitleId(System.Data.SqlClient.SqlConnection,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Byte,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.AddOneRow(System.Data.SqlClient.SqlCommand,System.Byte,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_titles.GetOneTitle(System.Data.SqlClient.SqlConnection,System.Byte)">
            <summary>
            GetOneTitle
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts">
            <summary>
            A class representing T_user_musicnet_accounts table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_musicnet_accounts.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data">
            <summary>
            A class representing T_user_per_client_type_data table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Byte,System.Byte,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Byte,System.Byte,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data_weekly">
            <summary>
            A class representing T_user_per_client_type_data_weekly table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data_weekly.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Byte,System.Byte,System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_per_client_type_data_weekly.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Byte,System.Byte,System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_user_settings">
            <summary>
            A class representing T_user_settings table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_settings.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_user_settings.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_users">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Byte)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.AddMultipleRowsInTrans(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            AddMultipleRowsInTrans
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.UpdateMultipleRowsInTrans(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            AddMultipleRowsInTrans
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.String)">
            <summary>
            GetContent
            szTable should be "t_users" or "t_users_rt"
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_users_rt">
            <summary>
            A class representing individual database tables
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users_rt.GetContent(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_users_rt.#ctor">
            <summary>
            Constructors
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles">
            <summary>
            A class representing T_xmsg_user_titles table
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int32,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlCommand,System.Int64,System.Int32)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.AddOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            AddOneRow
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.UpdateOneRow(System.Data.SqlClient.SqlConnection,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.UpdateOneRow(System.Data.SqlClient.SqlCommand,System.Int64)">
            <summary>
            UpdateOneRow
            This is a kind of meaningless update only to trigger update flag for replication
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.Tables.T_xmsg_user_titles.GetContent(System.Data.SqlClient.SqlConnection,System.Int64,System.Int32)">
            <summary>
            GetContent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification">
            <summary>
            
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification.#ctor(ServerTestFramework.STFLive.Database.ReportingDB,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification.VerifyFactTableSingle(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DailyProcessing_GameUsage_Verification_BVT">
            <summary>
            
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapReportData">
            <summary>
            ReportingData object to submit queries to OlapDB for reports
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>        
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_Queries">
            <summary>
            List of queries
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_RawData">
            <summary>
            Raw object data (Caller must know how to cast the data)
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.OlapReportData.m_ReportType">
            <summary>
            Report that this data object maps to
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapReportData.RunDebugQuery">
            <summary>
            Run a query in OLAPDB to obtain the raw data
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapReportData.InitializeDataObject(ServerTestFramework.STFLive.Reporting.XBLReports)">
            <summary>
            Initialize ReportingData object.
            ** In the future this should be modified to generate dynamic data **
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapReportData.GetReportDataQueries(System.String)">
            <summary>
            Parse the Report Test Script and extract all OLAP queries with their respective
            report section and test case.
            </summary>
            <param name="TestScriptFileName">Report Test script file</param>
            <returns>Hashtable in the form of (Key)ReportQueryNumber (Value)|ReportSectionNumber|TestCaseNumber|Query|</returns>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapReportData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>        
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent">
            <summary>
            CleanserTCPEvent
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.#ctor">
            <summary>
            CleanserTCPEvent constructor
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.ConnectToCleanser(System.Int32,System.Int32)">
            <summary>
            ConnectToCleanser
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.DisconnectFromCleanser(System.Int32)">
            <summary>
            DisconnectFromCleanser
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.SocketSend(System.Int32,System.Byte[])">
            <summary>
            SocketSend
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.CleanserTCPEvent.SendMessage(System.Int32,System.Int32,System.String)">
            <summary>
            SendMessage
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.MigrateAccountTCPEvent">
            <summary>
            MigrateAccountTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ProvisionTCPEvent">
            <summary>
            ProvisionTCPEvent 
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.DeprovisionTCPEvent">
            <summary>
            DeprovisionTCPEvent 
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ContentTCPEvent">
            <summary>
            ContentTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ContentXeTCPEvent">
            <summary>
            ContentXeTCPEvent - Not Done
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PresenceTitleStartTCPEvent">
            <summary>
            PresenceTitleStartTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PresenceTitleEndTCPEvent">
            <summary>
            PresenceTitleEndTCPEvent 
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SessionStartTCPEvent">
            <summary>
            SessionStartTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.SessionEndTCPEvent">
            <summary>
            SessionEndTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PresenceGuestTCPEvent">
            <summary>
            PresenceGuestTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.XePurchaseTCPEvent">
            <summary>
            XePurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.EliteMigrationTCPEvent">
            <summary>
            EliteMigrationTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GenericTCPEvent">
            <summary>
            ContentTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.ArgonTCPEvent">
            <summary>
            ArgonTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceOfferPurchaseTCPEvent">
            <summary>
            GeoFenceOfferPurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceContentReferralTCPEvent">
            <summary>
            GeoFenceContentReferralTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceVideoPurchaseTCPEvent">
            <summary>
            GeoFenceVideoPurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceVideoAcquireURLTCPEvent">
            <summary>
            GeoFenceVideoAcquireURLTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.GeoFenceVideoAcquireLicenseTCPEvent">
            <summary>
            GeoFenceVideoAcquireLicenseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerViewAggTCPEvent">
            <summary>
            BannerViewAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerViewTCPEvent">
            <summary>
            BannerViewTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerClickAggTCPEvent">
            <summary>
            BannerClickAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerClickTCPEvent">
            <summary>
            BannerClickTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerPurchaseTCPEvent">
            <summary>
            BannerPurchaseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.BannerPurchaseAggTCPEvent">
            <summary>
            BannerPurchaseAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FusionTCPEvent">
            <summary>
            FusionTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.FusionAggTCPEvent">
            <summary>
            FusionAggTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.LicenseTCPEvent">
            <summary>
            LicenseTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.PurchaseOfferTCPEvent">
            <summary>
            PurchaseOfferTCPEvent
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData">
            <summary>
            GameUsageFactData
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingData.DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapDailyProcessingBVTData">
            <summary>
            GameUsageFactData
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.OlapGenericData">
            <summary>
            Generic Olap Data class
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.OlapGenericData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapGenericData.Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapGenericData.ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapGenericData.DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapGenericData.TableCounts">
            <summary>
            ReportingData is a series of tables and respective row counts
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.OlapGenericData.RawData">
            <summary>
            Raw object data (Caller must know how to cast the data)
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_Source">
            <summary>
            Data source: UODB, SSIS, ReportingDB, etc
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_ObjectType">
            <summary>
             Get ReportingData object type
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_DataType">
            <summary>
            Get internal data type (Queries, Raw, Counts)
            </summary>
        </member>
        <member name="F:RealtimeDBStressData.m_Queries">
            <summary>
            List of queries
            </summary>
        </member>
        <member name="M:RealtimeDBStressData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader">
            <summary>
            This class contains the logic necessary to load Data objects into the Reporting Realtime Database
            or FilterDB databases that feed the Realtime system.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_MinUserIndex">
            <summary>
            UserPuid index - Puid to use in the next data generation
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_Titles">
            <summary>
            Array of titles to use
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_Offers">
            <summary>
            Array of offers to use
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.m_TargetTable">
            <summary>
            Target table to insert data into
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.GetSupportedDatabases">
            <summary>
            Get the database names supported by this loader object
            </summary>
            <returns>List of database names</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.InjectSingleData">
            <summary>
            This method creates a SQL query to add a single row of data into specific tables of a database.
            </summary>        
            <returns>SQL string to add data</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.IncreaseUserDataIndex">
            <summary>
            Internal function to increase data index
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Reporting.RealtimeDBStressDataLoader.MinUserIndex">
            <summary>
            Initialize the data index
            </summary>
            <param name="SeedIndex">Seed value to use</param>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDB.OpenSQLConnection">
            <summary>
            Asynchronously attempts to connect to all RegDB server IPs and returns as soon as a successful connection is made.
            Once one is found, the server name is cached so subsequent attempts return much quicker.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBInfo">
            <summary>
            Get information from RegDB.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.Close">
            <summary>
            close the sql connection
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetAllSuites">
            <summary>
            Retrieves a list of all suites in RegDB
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetAllEnvironments">
            <summary>
            Retrieves a list of all environments in RegDB, with an array that can be indexed by environmentID
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetAllBuilds">
            <summary>
            Retrieves a list of all build runs in RegDB
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetSuitePassCountForBuild(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets the pass and total count for a build for a suite
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetSuiteTree(System.String)">
            <summary>
            Gets RegDB's view of a suite's tree
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetLeafPassFail(System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Gets whether a test leaf node passed or ran
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInfo.GetNodeOutputToReportDestination(System.String,System.Int32,ServerTestFramework.Report.Destination)">
            <summary>
            Retrieves output from RegDB and throws it at a report destination
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBTreeReader">
            <summary>
            Retrieves a node tree containing every test group and case that RegDB contains for a specific suite.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBInquirer">
            <summary>
            Represents a specific component (suite, group or case) on which queries can be performed.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.#ctor(System.String)">
            <summary>
            This query is about a specific test suite.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.#ctor(System.String,System.String)">
            <summary>
            This query is about a specific test group.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.#ctor(System.String,System.String,System.String)">
            <summary>
            This query is about a specific test case.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetHistory">
            <summary>
            Retrieves the history of the component that this object represents.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(ServerTestFramework.Reporting.RegDBInquirer.RegDBHistory)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(ServerTestFramework.Reporting.RegDBInquirer.RegDBHistory,ServerTestFramework.Report.Destination)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            /// if outDst is non-null, then the log is pushed into a specific reporting destination rather than returned as a string
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(System.String,System.String,System.UInt32)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(System.UInt32)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.GetLog(System.UInt32,ServerTestFramework.Report.Destination)">
            <summary>
            Retrieves the output from a specific build of the component represented by this object.
            if outDst is non-null, then the log is pushed into a specific reporting destination rather than returned as a string
            </summary>
        </member>
        <member name="M:ServerTestFramework.Reporting.RegDBInquirer.CancelGetLog">
            <summary>
            Cancels a currently running GetLog() request.
            This blocks until log retrieval is actually halted.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Reporting.RegDBInquirer.RegDBHistory">
            <summary>
            represents a pass/fail entry for as specific build of a component.
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestDB.TestDB">
            <summary> Used to open a connection with TestDB. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDB.OpenConnection">
            <summary> Opens a connection to the default TestDB.  You are responsible for closing the returned connection. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDB.OpenConnection(System.String)">
            <summary> Opens a connection to a TestDB.  You are responsible for closing the returned connection. </summary>
        </member>
        <member name="T:ServerTestFramework.TestDB.TestDBConnector">
            <summary> Used as a base class for classes that reuse a connection to TestDB. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBConnector.#ctor">
            <summary> Connects to TestDB to prepare to read. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBConnector.Dispose">
            <summary> Closes the connection to TestDB. </summary>
        </member>
        <member name="T:ServerTestFramework.TestDB.TestDBReader">
            <summary> Used to read data from TestDB. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBReader.ClearCache">
            <summary> Clears all cached TestDB data. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBReader.GetRootNodeNames">
            <summary> Gets a list of the names of all root nodes. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBReader.GetVersionList">
            <summary> Gets a list of all versions. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBReader.GetEnvironmentList">
            <summary> Gets a list of all environments. </summary>
        </member>
        <member name="M:ServerTestFramework.TestDB.TestDBReader.GetEnvironment(System.Int32)">
            <summary> Given a specific environment ID, returns information about that enviornment. </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAverages(System.Guid,System.DateTime,System.Boolean,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.BeginGetRatingAverages(System.Guid,System.DateTime,System.Boolean,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.EndGetRatingAverages(System.IAsyncResult,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesAsync(System.Guid,System.DateTime,System.Boolean,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesAsync(System.Guid,System.DateTime,System.Boolean,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAverages(System.Guid,System.DateTime,System.Boolean,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.BeginGetDeltaRatingAverages(System.Guid,System.DateTime,System.Boolean,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.EndGetDeltaRatingAverages(System.IAsyncResult,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesAsync(System.Guid,System.DateTime,System.Boolean,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesAsync(System.Guid,System.DateTime,System.Boolean,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetUnauthRatingAverages(System.Guid,System.DateTime,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.BeginGetUnauthRatingAverages(System.Guid,System.DateTime,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.EndGetUnauthRatingAverages(System.IAsyncResult,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetUnauthRatingAveragesAsync(System.Guid,System.DateTime,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetUnauthRatingAveragesAsync(System.Guid,System.DateTime,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaUnauthRatingAverages(System.Guid,System.DateTime,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.BeginGetDeltaUnauthRatingAverages(System.Guid,System.DateTime,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.EndGetDeltaUnauthRatingAverages(System.IAsyncResult,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaUnauthRatingAveragesAsync(System.Guid,System.DateTime,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaUnauthRatingAveragesAsync(System.Guid,System.DateTime,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesWithReviewCount(System.Guid,System.DateTime,System.Boolean,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.BeginGetRatingAveragesWithReviewCount(System.Guid,System.DateTime,System.Boolean,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.EndGetRatingAveragesWithReviewCount(System.IAsyncResult,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesWithReviewCountAsync(System.Guid,System.DateTime,System.Boolean,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesWithReviewCountAsync(System.Guid,System.DateTime,System.Boolean,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesWithReviewCount(System.Guid,System.DateTime,System.Boolean,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.BeginGetDeltaRatingAveragesWithReviewCount(System.Guid,System.DateTime,System.Boolean,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.EndGetDeltaRatingAveragesWithReviewCount(System.IAsyncResult,System.String@,System.DateTime@,System.Xml.XmlNode@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesWithReviewCountAsync(System.Guid,System.DateTime,System.Boolean,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesWithReviewCountAsync(System.Guid,System.DateTime,System.Boolean,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetUnauthRatingAveragesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaUnauthRatingAveragesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetRatingAveragesWithReviewCountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.aggregator.Aggregator.GetDeltaRatingAveragesWithReviewCountCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesCompletedEventArgs.transactionToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesCompletedEventArgs.transactionStartTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesCompletedEventArgs.transactionToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesCompletedEventArgs.transactionStartTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetUnauthRatingAveragesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetUnauthRatingAveragesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetUnauthRatingAveragesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetUnauthRatingAveragesCompletedEventArgs.transactionToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetUnauthRatingAveragesCompletedEventArgs.transactionStartTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetUnauthRatingAveragesCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaUnauthRatingAveragesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaUnauthRatingAveragesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaUnauthRatingAveragesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaUnauthRatingAveragesCompletedEventArgs.transactionToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaUnauthRatingAveragesCompletedEventArgs.transactionStartTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaUnauthRatingAveragesCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesWithReviewCountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesWithReviewCountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesWithReviewCountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesWithReviewCountCompletedEventArgs.transactionToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesWithReviewCountCompletedEventArgs.transactionStartTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetRatingAveragesWithReviewCountCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesWithReviewCountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesWithReviewCountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesWithReviewCountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesWithReviewCountCompletedEventArgs.transactionToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesWithReviewCountCompletedEventArgs.transactionStartTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.aggregator.GetDeltaRatingAveragesWithReviewCountCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.MultiRating">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.AdvanceState(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginAdvanceState(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndAdvanceState(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.AdvanceStateAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.AdvanceStateAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNickname(System.Int64,System.Guid,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetNickname(System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetNickname(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameAsync(System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameAsync(System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameSuggestions(System.String,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetNicknameSuggestions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetNicknameSuggestions(System.IAsyncResult,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameSuggestionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameSuggestionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverage(System.Guid,System.Object,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetRatingAverage(System.Guid,System.Object,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetRatingAverage(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageAsync(System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageAsync(System.Guid,System.Object,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageRollup(System.Guid,System.Object,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetRatingAverageRollup(System.Guid,System.Object,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetRatingAverageRollup(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageRollupAsync(System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageRollupAsync(System.Guid,System.Object,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUser(System.Guid,System.Object,System.Int64,System.Guid,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetRatingByUser(System.Guid,System.Object,System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetRatingByUser(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserAsync(System.Guid,System.Object,System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserWithAverage(System.Guid,System.Object,System.Int64,System.Guid,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetRatingByUserWithAverage(System.Guid,System.Object,System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetRatingByUserWithAverage(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Rating@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserWithAverageAsync(System.Guid,System.Object,System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserWithAverageAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetMultipleRatingsByUser(System.Guid,System.Object[],System.Int64,System.Guid,ServerTestFramework.LiveService.msnrr.multi.Rating[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetMultipleRatingsByUser(System.Guid,System.Object[],System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetMultipleRatingsByUser(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Rating[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetMultipleRatingsByUserAsync(System.Guid,System.Object[],System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetMultipleRatingsByUserAsync(System.Guid,System.Object[],System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingsByUser(System.Guid,System.Int64,System.Guid@,System.Guid,ServerTestFramework.LiveService.msnrr.multi.Rating[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetRatingsByUser(System.Guid,System.Int64,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetRatingsByUser(System.IAsyncResult,System.Guid@,ServerTestFramework.LiveService.msnrr.multi.Rating[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewByUser(System.Guid,System.Object,System.Int64,System.Guid,ServerTestFramework.LiveService.msnrr.multi.Review@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetReviewByUser(System.Guid,System.Object,System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetReviewByUser(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Review@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewByUserAsync(System.Guid,System.Object,System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewByUserAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviews(System.Guid,System.Object,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.multi.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetReviews(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetReviews(System.IAsyncResult,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.multi.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsByUser(System.Guid,System.Int64,System.Guid,System.Guid,ServerTestFramework.LiveService.msnrr.multi.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetReviewsByUser(System.Guid,System.Int64,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetReviewsByUser(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsRollup(System.Guid,System.Object,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.multi.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetReviewsRollup(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetReviewsRollup(System.IAsyncResult,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.multi.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsRollupAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsRollupAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetUnauthRatings(System.Guid,System.Object,System.Guid,System.Int32,System.Int32[]@,System.Int64[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginGetUnauthRatings(System.Guid,System.Object,System.Guid,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndGetUnauthRatings(System.IAsyncResult,System.Int32[]@,System.Int64[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetUnauthRatingsAsync(System.Guid,System.Object,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetUnauthRatingsAsync(System.Guid,System.Object,System.Guid,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveNickname(System.Int64,System.Guid,System.String,System.String[]@,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginSaveNickname(System.Int64,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndSaveNickname(System.IAsyncResult,System.String[]@,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveNicknameAsync(System.Int64,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveNicknameAsync(System.Int64,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginSaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndSaveRating(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],System.DateTime,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginBulkSaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndBulkSaveRating(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Guid[],System.Int32[],System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReportViolation(System.Object,System.Guid,System.String,System.String,System.String,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginSaveReportViolation(System.Object,System.Guid,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndSaveReportViolation(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReportViolationAsync(System.Object,System.Guid,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReportViolationAsync(System.Object,System.Guid,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginSaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndSaveReview(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.DateTime,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginBulkSaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.DateTime,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndBulkSaveReview(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.DateTime,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.DateTime,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewHelpfulness(System.Object,System.Int64,System.Guid,System.Guid,System.Int32,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginSaveReviewHelpfulness(System.Object,System.Int64,System.Guid,System.Guid,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndSaveReviewHelpfulness(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewHelpfulnessAsync(System.Object,System.Int64,System.Guid,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewHelpfulnessAsync(System.Object,System.Int64,System.Guid,System.Guid,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveUnauthRatings(System.Guid,System.Object,System.Guid,System.Int32[],System.Int32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginSaveUnauthRatings(System.Guid,System.Object,System.Guid,System.Int32[],System.Int32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndSaveUnauthRatings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveUnauthRatingsAsync(System.Guid,System.Object,System.Guid,System.Int32[],System.Int32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveUnauthRatingsAsync(System.Guid,System.Object,System.Guid,System.Int32[],System.Int32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.ValidateReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BeginValidateReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.EndValidateReview(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.multi.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.ValidateReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.ValidateReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Guid[],System.Int32[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.multi.MultiRating.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.AdvanceStateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetNicknameSuggestionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingAverageRollupCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingByUserWithAverageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetMultipleRatingsByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetRatingsByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetReviewsRollupCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.GetUnauthRatingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveNicknameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveRatingCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveRatingCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReportViolationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.BulkSaveReviewCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveReviewHelpfulnessCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.SaveUnauthRatingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.multi.MultiRating.ValidateReviewCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.ValidationError">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ValidationError.DataField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ValidationError.Code">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ValidationError.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ValidationError.MaxLength">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.Field">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.empty">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.nickname">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.ratingItemID">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.reviewFieldID">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.title">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.customProperty">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.name">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.email">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.comments">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Field.score">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.Type">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.RequiredFieldMissing">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.TextTooLong">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.TextInvalidChars">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.TextProfanity">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.InvalidFormat">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.TooManyChanges">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.AlreadyTaken">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.ReviewsRequireRatings">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.ReviewsRequireOneField">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.multi.Type.UserCannotRateOwnReview">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.Helpfulness">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Helpfulness.Count">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Helpfulness.Sum">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Helpfulness.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Helpfulness.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Helpfulness.CurrentUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Helpfulness.CurrentUserSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.ReviewField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Label">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.MaxLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.MaxLengthSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Cols">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.ColsSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Rows">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.RowsSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Rank">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.RankSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Required">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ReviewField.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.User.Nickname">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.User.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.User.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.User.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.User.ErrorSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.Review">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Date">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.DateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.CustomProperty">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Title">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Field">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Helpfulness">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Review.ErrorSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.ItemID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ItemID.StringID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ItemID.LongID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ItemID.GuidID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ItemID.GuidIDSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.Rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.RatingItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.OverallRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.Date">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.DateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.TotalCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.Rating.TotalCountSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.RatingItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.Label">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.Rank">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.RankSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.Required">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingItem.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute.AverageValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute.AverageValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute.UserValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute.UserValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute.Count">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.RatingAttribute.CountSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.OverallRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.OverallRating.AverageValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.OverallRating.AverageValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.OverallRating.UserValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.OverallRating.UserValueSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.AdvanceStateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.AdvanceStateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.AdvanceStateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetNicknameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetNicknameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetNicknameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetNicknameCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetNicknameSuggestionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetNicknameSuggestionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetNicknameSuggestionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetNicknameSuggestionsCompletedEventArgs.suggestionList">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageRollupCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageRollupCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageRollupCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingAverageRollupCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserWithAverageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserWithAverageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserWithAverageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingByUserWithAverageCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetMultipleRatingsByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetMultipleRatingsByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetMultipleRatingsByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetMultipleRatingsByUserCompletedEventArgs.ratings">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingsByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetRatingsByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingsByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingsByUserCompletedEventArgs.userID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingsByUserCompletedEventArgs.ratings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetRatingsByUserCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewByUserCompletedEventArgs.review">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.pageSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.pageNum">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.sortBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.sortOrder">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.totalCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsCompletedEventArgs.Reviews">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewsByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewsByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsByUserCompletedEventArgs.Reviews">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.pageSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.pageNum">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.sortBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.sortOrder">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.totalCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetReviewsRollupCompletedEventArgs.Reviews">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetUnauthRatingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.GetUnauthRatingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetUnauthRatingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetUnauthRatingsCompletedEventArgs.ratingScores">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.GetUnauthRatingsCompletedEventArgs.ratingCounts">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveNicknameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveNicknameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveNicknameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveNicknameCompletedEventArgs.suggestionList">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveNicknameCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveRatingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveRatingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveRatingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveRatingCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.BulkSaveRatingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.BulkSaveRatingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.BulkSaveRatingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.BulkSaveRatingCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveReportViolationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveReportViolationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveReportViolationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveReportViolationCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveReviewCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveReviewCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveReviewCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveReviewCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.BulkSaveReviewCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.BulkSaveReviewCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.BulkSaveReviewCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveReviewHelpfulnessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveReviewHelpfulnessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveReviewHelpfulnessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveReviewHelpfulnessCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveUnauthRatingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.SaveUnauthRatingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.SaveUnauthRatingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.ValidateReviewCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.multi.ValidateReviewCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ValidateReviewCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.multi.ValidateReviewCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SingleRating">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.AdvanceState(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginAdvanceState(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndAdvanceState(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.AdvanceStateAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.AdvanceStateAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String[],System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNickname(System.Int64,System.Guid,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetNickname(System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetNickname(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameAsync(System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameAsync(System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameSuggestions(System.String,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetNicknameSuggestions(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetNicknameSuggestions(System.IAsyncResult,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameSuggestionsAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameSuggestionsAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverage(System.Guid,System.Object,System.Single@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetRatingAverage(System.Guid,System.Object,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetRatingAverage(System.IAsyncResult,System.Single@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageAsync(System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageAsync(System.Guid,System.Object,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageRollup(System.Guid,System.Object,System.Single@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetRatingAverageRollup(System.Guid,System.Object,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetRatingAverageRollup(System.IAsyncResult,System.Single@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageRollupAsync(System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageRollupAsync(System.Guid,System.Object,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUser(System.Guid,System.Object,System.Int64,System.Guid,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetRatingByUser(System.Guid,System.Object,System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetRatingByUser(System.IAsyncResult,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserAsync(System.Guid,System.Object,System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserWithAverage(System.Guid,System.Object,System.Int64,System.Guid,System.Int32@,System.Single@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetRatingByUserWithAverage(System.Guid,System.Object,System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetRatingByUserWithAverage(System.IAsyncResult,System.Int32@,System.Single@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserWithAverageAsync(System.Guid,System.Object,System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserWithAverageAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetMultipleRatingsByUser(System.Guid,System.Object[],System.Int64,System.Guid,System.Int32[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetMultipleRatingsByUser(System.Guid,System.Object[],System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetMultipleRatingsByUser(System.IAsyncResult,System.Int32[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetMultipleRatingsByUserAsync(System.Guid,System.Object[],System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetMultipleRatingsByUserAsync(System.Guid,System.Object[],System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingsByUser(System.Guid,System.Int64,System.Guid@,System.Guid,ServerTestFramework.LiveService.msnrr.single.Rating[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetRatingsByUser(System.Guid,System.Int64,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetRatingsByUser(System.IAsyncResult,System.Guid@,ServerTestFramework.LiveService.msnrr.single.Rating[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewByUser(System.Guid,System.Object,System.Int64,System.Guid,ServerTestFramework.LiveService.msnrr.single.Review@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetReviewByUser(System.Guid,System.Object,System.Int64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetReviewByUser(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.single.Review@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewByUserAsync(System.Guid,System.Object,System.Int64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewByUserAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviews(System.Guid,System.Object,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.single.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetReviews(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetReviews(System.IAsyncResult,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.single.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsByUser(System.Guid,System.Int64,System.Guid,System.Guid,ServerTestFramework.LiveService.msnrr.single.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetReviewsByUser(System.Guid,System.Int64,System.Guid,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetReviewsByUser(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.single.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsByUserAsync(System.Guid,System.Int64,System.Guid,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsRollup(System.Guid,System.Object,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.single.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetReviewsRollup(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetReviewsRollup(System.IAsyncResult,System.Int32@,System.Int32@,System.String@,System.String@,System.Int32@,ServerTestFramework.LiveService.msnrr.single.Review[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsRollupAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsRollupAsync(System.Guid,System.Object,System.Int32,System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetUnauthRatings(System.Guid,System.Object,System.Int32,System.Int32[]@,System.Int64[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginGetUnauthRatings(System.Guid,System.Object,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndGetUnauthRatings(System.IAsyncResult,System.Int32[]@,System.Int64[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetUnauthRatingsAsync(System.Guid,System.Object,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetUnauthRatingsAsync(System.Guid,System.Object,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveNickname(System.Int64,System.Guid,System.String,System.String[]@,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginSaveNickname(System.Int64,System.Guid,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndSaveNickname(System.IAsyncResult,System.String[]@,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveNicknameAsync(System.Int64,System.Guid,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveNicknameAsync(System.Int64,System.Guid,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginSaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndSaveRating(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Int32,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginBulkSaveRating(System.Guid,System.Object,System.Int64,System.Guid,System.Int32,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndBulkSaveRating(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Int32,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveRatingAsync(System.Guid,System.Object,System.Int64,System.Guid,System.Int32,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReportViolation(System.Object,System.Guid,System.String,System.String,System.String,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginSaveReportViolation(System.Object,System.Guid,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndSaveReportViolation(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReportViolationAsync(System.Object,System.Guid,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReportViolationAsync(System.Object,System.Guid,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginSaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndSaveReview(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.DateTime,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginBulkSaveReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.DateTime,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndBulkSaveReview(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.DateTime,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.DateTime,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewHelpfulness(System.Object,System.Int64,System.Guid,System.Guid,System.Int32,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginSaveReviewHelpfulness(System.Object,System.Int64,System.Guid,System.Guid,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndSaveReviewHelpfulness(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewHelpfulnessAsync(System.Object,System.Int64,System.Guid,System.Guid,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewHelpfulnessAsync(System.Object,System.Int64,System.Guid,System.Guid,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveUnauthRatings(System.Guid,System.Object,System.Int32[],System.Int32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginSaveUnauthRatings(System.Guid,System.Object,System.Int32[],System.Int32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndSaveUnauthRatings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveUnauthRatingsAsync(System.Guid,System.Object,System.Int32[],System.Int32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveUnauthRatingsAsync(System.Guid,System.Object,System.Int32[],System.Int32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.ValidateReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.BeginValidateReview(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.EndValidateReview(System.IAsyncResult,ServerTestFramework.LiveService.msnrr.single.ValidationError[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.ValidateReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.ValidateReviewAsync(System.Guid,System.Object,System.Int64,System.Guid,System.String,System.Guid[],System.String[],System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.msnrr.single.SingleRating.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.AdvanceStateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetNicknameSuggestionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingAverageRollupCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingByUserWithAverageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetMultipleRatingsByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetRatingsByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsByUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetReviewsRollupCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.GetUnauthRatingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveNicknameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveRatingCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveRatingCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReportViolationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.BulkSaveReviewCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveReviewHelpfulnessCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.SaveUnauthRatingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.msnrr.single.SingleRating.ValidateReviewCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.ValidationError">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ValidationError.DataField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ValidationError.Code">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ValidationError.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ValidationError.MaxLength">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.Field">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.empty">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.nickname">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.ratingItemID">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.reviewFieldID">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.title">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.customProperty">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.name">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.email">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.comments">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Field.score">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.Type">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.RequiredFieldMissing">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.TextTooLong">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.TextInvalidChars">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.TextProfanity">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.InvalidFormat">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.TooManyChanges">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.AlreadyTaken">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.ReviewsRequireRatings">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.ReviewsRequireOneField">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.msnrr.single.Type.UserCannotRateOwnReview">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.Helpfulness">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Helpfulness.Count">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Helpfulness.Sum">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Helpfulness.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Helpfulness.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Helpfulness.CurrentUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Helpfulness.CurrentUserSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.ReviewField">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Label">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.MaxLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.MaxLengthSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Cols">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.ColsSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Rows">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.RowsSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Rank">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.RankSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Required">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ReviewField.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.User.Nickname">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.User.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.User.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.User.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.User.ErrorSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.Review">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Date">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.DateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.CustomProperty">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Title">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Field">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Helpfulness">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Review.ErrorSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.ItemID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ItemID.StringID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ItemID.LongID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ItemID.GuidID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ItemID.GuidIDSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.Rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.Item">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.RatingItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.OverallRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.Date">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.DateSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.TotalCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.Rating.TotalCountSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.RatingAttribute">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.RatingItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.IDSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.Label">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.Error">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.ErrorSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.Description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.Rank">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.RankSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.Required">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingItem.RequiredSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingAttribute.AverageValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingAttribute.AverageValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingAttribute.UserValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingAttribute.UserValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingAttribute.Count">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.RatingAttribute.CountSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.OverallRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.OverallRating.AverageValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.OverallRating.AverageValueSpecified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.OverallRating.UserValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.OverallRating.UserValueSpecified">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.AdvanceStateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.AdvanceStateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.AdvanceStateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetNicknameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetNicknameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetNicknameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetNicknameCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetNicknameSuggestionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetNicknameSuggestionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetNicknameSuggestionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetNicknameSuggestionsCompletedEventArgs.suggestionList">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageCompletedEventArgs.count">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageRollupCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageRollupCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageRollupCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageRollupCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingAverageRollupCompletedEventArgs.count">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserCompletedEventArgs.rating">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserWithAverageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserWithAverageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserWithAverageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserWithAverageCompletedEventArgs.userRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserWithAverageCompletedEventArgs.averageRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingByUserWithAverageCompletedEventArgs.count">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetMultipleRatingsByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetMultipleRatingsByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetMultipleRatingsByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetMultipleRatingsByUserCompletedEventArgs.ratings">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingsByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetRatingsByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingsByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingsByUserCompletedEventArgs.userID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingsByUserCompletedEventArgs.ratings">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetRatingsByUserCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewByUserCompletedEventArgs.review">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.pageSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.pageNum">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.sortBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.sortOrder">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.totalCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsCompletedEventArgs.Reviews">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewsByUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewsByUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsByUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsByUserCompletedEventArgs.Reviews">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.pageSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.pageNum">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.sortBy">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.sortOrder">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.totalCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetReviewsRollupCompletedEventArgs.Reviews">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetUnauthRatingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.GetUnauthRatingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetUnauthRatingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetUnauthRatingsCompletedEventArgs.ratingScores">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.GetUnauthRatingsCompletedEventArgs.ratingCounts">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveNicknameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveNicknameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveNicknameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveNicknameCompletedEventArgs.suggestionList">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveNicknameCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveRatingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveRatingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveRatingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.BulkSaveRatingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.BulkSaveRatingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.BulkSaveRatingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveReportViolationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveReportViolationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveReportViolationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveReportViolationCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveReviewCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveReviewCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveReviewCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveReviewCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.BulkSaveReviewCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.BulkSaveReviewCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.BulkSaveReviewCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveReviewHelpfulnessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveReviewHelpfulnessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveReviewHelpfulnessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveReviewHelpfulnessCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveUnauthRatingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.SaveUnauthRatingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.SaveUnauthRatingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.ValidateReviewCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.msnrr.single.ValidateReviewCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ValidateReviewCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.msnrr.single.ValidateReviewCompletedEventArgs.errors">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.Alerts">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscriberExists(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginSubscriberExists(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndSubscriberExists(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscriberExistsAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscriberExistsAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.Subscribe(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginSubscribe(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndSubscribe(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscribeAsync(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.SubscribeAsync(System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.AddSubscriptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.Unsubscribe(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginUnsubscribe(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndUnsubscribe(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.UnsubscribeAsync(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.UnsubscribeAsync(System.Boolean,System.Boolean,System.Byte[],System.String,ServerTestFramework.Web.Alert.ExistingSubscriptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptions(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginEnumerateSubscriptions(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndEnumerateSubscriptions(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptionsAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptionsAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlert(System.Byte[],System.UInt32,System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.BeginScheduleContentAlert(System.Byte[],System.UInt32,System.String,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.EndScheduleContentAlert(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlertAsync(System.Byte[],System.UInt32,System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlertAsync(System.Byte[],System.UInt32,System.String,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Alert.Alerts.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.SubscriberExistsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.SubscribeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.UnsubscribeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.EnumerateSubscriptionsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Alert.Alerts.ScheduleContentAlertCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.GeneralInfo">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleList(System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.BeginGetTitleList(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.EndGetTitleList(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleListAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleListAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTags(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.BeginLinkedGamerTags(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.EndLinkedGamerTags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTagsAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTagsAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.GeneralInfo.GeneralInfo.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.GeneralInfo.GeneralInfo.GetTitleListCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.GeneralInfo.GeneralInfo.LinkedGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.MessagingImpl">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageString(System.UInt32,System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginGetMessageString(System.UInt32,System.UInt32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndGetMessageString(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageStringAsync(System.UInt32,System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageStringAsync(System.UInt32,System.UInt32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessage(ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginRevokeTitleUserMessage(ServerTestFramework.Web.Messaging.WCRecipientResult[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndRevokeTitleUserMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessageAsync(ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessageAsync(ServerTestFramework.Web.Messaging.WCRecipientResult[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessage(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSendTitleUserMessage(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSendTitleUserMessage(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessageAsync(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessageAsync(System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessage(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.UInt16@,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSendTitleWideMessage(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSendTitleWideMessage(System.IAsyncResult,System.UInt16@,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessageAsync(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessageAsync(System.String,System.UInt64,System.DateTime,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String,ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCLocalizedString[],ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessage(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginDeleteTitleWideMessage(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndDeleteTitleWideMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessageAsync(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessageAsync(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetails(System.UInt32,System.UInt32,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginGetTitleWideMessageDetails(System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndGetTitleWideMessageDetails(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetailsAsync(System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetailsAsync(System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessages(System.UInt32,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginEnumTitleWideMessages(System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndEnumTitleWideMessages(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessagesAsync(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessagesAsync(System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlags(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSetMessageFlags(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSetMessageFlags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlagsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlagsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitles(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCUserTitle[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginEnumUserTitles(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndEnumUserTitles(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCUserTitle[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitlesAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitlesAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitle(System.Byte[],System.String,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginDeleteUserTitle(System.Byte[],System.String,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndDeleteUserTitle(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitleAsync(System.Byte[],System.String,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitleAsync(System.Byte[],System.String,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessage(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginRevokeMessage(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndRevokeMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessageAsync(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessageAsync(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCRecipientResult[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessage(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginSendMessage(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndSendMessage(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCRecipientResult[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessageAsync(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessageAsync(System.Byte[],System.String,System.UInt64,ServerTestFramework.Web.Messaging.WCMessageFlags,System.UInt32,System.UInt16,ServerTestFramework.Web.Messaging.WCMessageType,System.String[],ServerTestFramework.Web.Messaging.WCMessageDetails,ServerTestFramework.Web.Messaging.WCMessageAttachment[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessage(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginDeleteMessage(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndDeleteMessage(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessageAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessageAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCDeleteMsgFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetails(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginGetMessageDetails(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndGetMessageDetails(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCMessageSummary@,ServerTestFramework.Web.Messaging.WCMessageDetails@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetailsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetailsAsync(System.Byte[],System.String,System.UInt32,ServerTestFramework.Web.Messaging.WCMessageFlags,ServerTestFramework.Web.Messaging.WCMessageFlags,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessages(System.Byte[],System.String,ServerTestFramework.Web.Messaging.WCMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.BeginEnumMessages(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EndEnumMessages(System.IAsyncResult,ServerTestFramework.Web.Messaging.WCMessageSummary[]@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessagesAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessagesAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Messaging.MessagingImpl.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageStringCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeTitleUserMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleUserMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SendTitleWideMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteTitleWideMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.GetTitleWideMessageDetailsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.EnumTitleWideMessagesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SetMessageFlagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.EnumUserTitlesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteUserTitleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.RevokeMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.SendMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.DeleteMessageCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.GetMessageDetailsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Messaging.MessagingImpl.EnumMessagesCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.Presence">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDS(System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetGamertagsFromXUIDS(System.UInt64[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetGamertagsFromXUIDS(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDSAsync(System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDSAsync(System.UInt64[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertags(System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetXUIDSFromGamertags(System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetXUIDSFromGamertags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertagsAsync(System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertagsAsync(System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetPresenceInfo(System.UInt64,System.UInt64,System.UInt16,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetPresenceInfo(System.UInt64,System.UInt64,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetPresenceInfo(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetPresenceInfoAsync(System.UInt64,System.UInt64,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetPresenceInfoAsync(System.UInt64,System.UInt64,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsEx(System.UInt64,System.UInt16,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetFriendsEx(System.UInt64,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetFriendsEx(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsExAsync(System.UInt64,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsExAsync(System.UInt64,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetRecentPlayers(System.UInt64,System.UInt16,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetRecentPlayers(System.UInt64,System.UInt16,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetRecentPlayers(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetRecentPlayersAsync(System.UInt64,System.UInt16,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetRecentPlayersAsync(System.UInt64,System.UInt16,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriends(System.Byte[],System.String,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.BeginGetFriends(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.EndGetFriends(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.GetFriendsAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Presence.Presence.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetGamertagsFromXUIDSCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetXUIDSFromGamertagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetPresenceInfoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetFriendsExCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetRecentPlayersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Presence.Presence.GetFriendsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.Profile">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadAchievements(System.UInt64,System.UInt32,System.UInt16,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.BeginReadAchievements(System.UInt64,System.UInt32,System.UInt16,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.EndReadAchievements(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadAchievementsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadAchievementsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadSettings(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.BeginReadSettings(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.EndReadSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadSettingsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.ReadSettingsAsync(System.UInt64,System.UInt32,System.UInt16,System.UInt64[],System.UInt32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Profile.Profile.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Profile.Profile.ReadAchievementsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Profile.Profile.ReadSettingsCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.Query">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Add(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginAdd(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndAdd(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.AddAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.AddAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Update(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginUpdate(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndUpdate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginUpdateId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndUpdateId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.UpdateIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Search(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginSearch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndSearch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.FindFromIds(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginFindFromIds(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndFindFromIds(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.FindFromIdsAsync(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.FindFromIdsAsync(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.UInt64[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Remove(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginRemove(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndRemove(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginRemoveId(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndRemoveId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.RemoveIdAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.Select(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginSelect(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndSelect(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SelectAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.SelectAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.GetXQSConfig(System.UInt32,System.Byte[],System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginGetXQSConfig(System.UInt32,System.Byte[],System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndGetXQSConfig(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.GetXQSConfigAsync(System.UInt32,System.Byte[],System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.GetXQSConfigAsync(System.UInt32,System.Byte[],System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreate(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionCreate(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionCreate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleElimination(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionCreateSingleElimination(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionCreateSingleElimination(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleEliminationAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleEliminationAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.UInt32,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionSearch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionSearch(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionSearch(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionSearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionSearchAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionManageEntrant(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionManageEntrant(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionManageEntrant(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionManageEntrantAsync(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionManageEntrantAsync(System.UInt32,System.Byte[],System.String,System.UInt32,System.String,System.UInt32,System.UInt64,ServerTestFramework.Web.Query.QueryAttribute[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCancel(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionCancel(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionCancel(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCancelAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionCancelAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopology(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionTopology(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionTopology(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologyAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologyAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.UInt32,System.Int64,System.Int64,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleElimination(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.BeginCompetitionTopologySingleElimination(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.EndCompetitionTopologySingleElimination(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleEliminationAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleEliminationAsync(System.UInt32,System.UInt32,System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.Web.Query.QueryAttributeSpec[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Query.Query.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.AddCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.UpdateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.UpdateIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.SearchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.FindFromIdsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.RemoveCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.RemoveIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.SelectCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.GetXQSConfigCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionCreateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionCreateSingleEliminationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionSearchCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionManageEntrantCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionCancelCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionTopologyCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Query.Query.CompetitionTopologySingleEliminationCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.Signature">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignature(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginVerifySignature(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndVerifySignature(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignatureAsync(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignatureAsync(ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignature(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginCreateSignature(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndCreateSignature(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignatureAsync(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignatureAsync(System.UInt32,System.String,ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.TransferUserLicenses(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginTransferUserLicenses(System.UInt64,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndTransferUserLicenses(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.TransferUserLicensesAsync(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.TransferUserLicensesAsync(System.UInt64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BlacklistDigest(System.Byte[],System.Byte,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginBlacklistDigest(System.Byte[],System.Byte,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndBlacklistDigest(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BlacklistDigestAsync(System.Byte[],System.Byte,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BlacklistDigestAsync(System.Byte[],System.Byte,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.UnBlacklistDigest(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.BeginUnBlacklistDigest(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.EndUnBlacklistDigest(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.UnBlacklistDigestAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.UnBlacklistDigestAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.SignatureWidget.Signature.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.VerifySignatureCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.CreateSignatureCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.TransferUserLicensesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.BlacklistDigestCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.SignatureWidget.Signature.UnBlacklistDigestCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.Stats">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLB(System.UInt32,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginDeleteXUIDFromLB(System.UInt32,System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndDeleteXUIDFromLB(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLBAsync(System.UInt32,System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLBAsync(System.UInt32,System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBs(System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginDeleteXUIDFromAllLBs(System.UInt32,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndDeleteXUIDFromAllLBs(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBsAsync(System.UInt32,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBsAsync(System.UInt32,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBList(System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBList(System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBList(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListAsync(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListAsync(System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListByType(System.UInt32,ServerTestFramework.Web.Stats.LBType,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBListByType(System.UInt32,ServerTestFramework.Web.Stats.LBType,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBListByType(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListByTypeAsync(System.UInt32,ServerTestFramework.Web.Stats.LBType)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBListByTypeAsync(System.UInt32,ServerTestFramework.Web.Stats.LBType,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginEnumerateLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndEnumerateLB(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTag(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBNearGamerTag(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBNearGamerTag(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTagAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTagAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTags(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBForGamerTags(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBForGamerTags(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTagsAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTagsAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTags(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetLBDetailsForGamerTags(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetLBDetailsForGamerTags(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTagsAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTagsAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetMLBByXUID(System.UInt32,System.UInt64,System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetMLBByXUID(System.UInt32,System.UInt64,System.UInt32[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetMLBByXUID(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetMLBByXUIDAsync(System.UInt32,System.UInt64,System.UInt32[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetMLBByXUIDAsync(System.UInt32,System.UInt64,System.UInt32[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginEnumerateTeamLB(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndEnumerateTeamLB(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLBAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamName(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetTeamLBNearTeamName(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetTeamLBNearTeamName(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamNameAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamNameAsync(System.UInt32,System.UInt32,System.String,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNames(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetTeamLBForTeamNames(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetTeamLBForTeamNames(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNamesAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNamesAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNames(System.UInt32,System.UInt32,System.String[],System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginGetTeamLBDetailsForTeamNames(System.UInt32,System.UInt32,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndGetTeamLBDetailsForTeamNames(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNamesAsync(System.UInt32,System.UInt32,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNamesAsync(System.UInt32,System.UInt32,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBRaw(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.BeginEnumerateLBRaw(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EndEnumerateLBRaw(System.IAsyncResult,System.UInt32@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBRawAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.EnumerateLBRawAsync(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Stats.Stats.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromLBCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.DeleteXUIDFromAllLBsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBListCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBListByTypeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.EnumerateLBCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBNearGamerTagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBForGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetLBDetailsForGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetMLBByXUIDCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.EnumerateTeamLBCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetTeamLBNearTeamNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetTeamLBForTeamNamesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.GetTeamLBDetailsForTeamNamesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Stats.Stats.EnumerateLBRawCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.Storage">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.GetTitleQuota(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginGetTitleQuota(System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndGetTitleQuota(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.GetTitleQuotaAsync(System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.GetTitleQuotaAsync(System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadUserFile(System.UInt32,System.Byte[],System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginReadUserFile(System.UInt32,System.Byte[],System.String,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndReadUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadTitleFile(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginReadTitleFile(System.UInt32,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndReadTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadTitleFileAsync(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.ReadTitleFileAsync(System.UInt32,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteUserFile(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginWriteUserFile(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndWriteUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteTitleFile(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginWriteTitleFile(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndWriteTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteTitleFileAsync(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.WriteTitleFileAsync(System.UInt32,System.String,ServerTestFramework.Web.Storage.FileContentTypeEnum,System.Byte[],System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteUserFile(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginDeleteUserFile(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndDeleteUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteTitleFile(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginDeleteTitleFile(System.UInt32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndDeleteTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteTitleFileAsync(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.DeleteTitleFileAsync(System.UInt32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeTitleFile(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginRevokeTitleFile(System.UInt32,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndRevokeTitleFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeTitleFileAsync(System.UInt32,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeTitleFileAsync(System.UInt32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeUserFile(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginRevokeUserFile(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndRevokeUserFile(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeUserFileAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.RevokeUserFileAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFiles(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.BeginEnumerateTitleFiles(System.UInt32,System.String,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EndEnumerateTitleFiles(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFilesAsync(System.UInt32,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFilesAsync(System.UInt32,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Storage.Storage.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.GetTitleQuotaCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.ReadUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.ReadTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.WriteUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.WriteTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.DeleteUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.DeleteTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.RevokeTitleFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.RevokeUserFileCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Storage.Storage.EnumerateTitleFilesCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.Teams">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CreateTeam(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginCreateTeam(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndCreateTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CreateTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CreateTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.UInt32,System.String,System.String,System.String,System.Byte[],System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.DeleteTeam(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginDeleteTeam(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndDeleteTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.DeleteTeamAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.DeleteTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RemoveTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginRemoveTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndRemoveTeamMember(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RemoveTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RemoveTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeam(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginManageTeam(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndManageTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginManageTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndManageTeamMember(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.ManageTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RecruitTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginRecruitTeamMember(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndRecruitTeamMember(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RecruitTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.RecruitTeamMemberAsync(System.UInt32,System.Byte[],System.String,System.String,System.String,System.UInt32,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.JoinTeam(System.UInt32,System.Byte[],System.String,System.String,System.Byte)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginJoinTeam(System.UInt32,System.Byte[],System.String,System.String,System.Byte,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndJoinTeam(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.JoinTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.Byte)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.JoinTeamAsync(System.UInt32,System.Byte[],System.String,System.String,System.Byte,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamInfo(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginGetTeamInfo(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndGetTeamInfo(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamInfoAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamInfoAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamMembers(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.BeginGetTeamMembers(System.UInt32,System.Byte[],System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.EndGetTeamMembers(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamMembersAsync(System.UInt32,System.Byte[],System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.GetTeamMembersAsync(System.UInt32,System.Byte[],System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.Teams.Teams.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.CreateTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.DeleteTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.RemoveTeamMemberCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.ManageTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.ManageTeamMemberCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.RecruitTeamMemberCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.JoinTeamCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.GetTeamInfoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.Teams.Teams.GetTeamMembersCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.UserAccount">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkUser(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginLinkUser(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndLinkUser(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkUserAsync(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkUserAsync(System.Byte[],System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTags(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginLinkedGamerTags(System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndLinkedGamerTags(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTagsAsync(System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTagsAsync(System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettings(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginGetUserSettings(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndGetUserSettings(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettingsAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettingsAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharing(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginSetInfoSharing(System.Byte[],System.String,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndSetInfoSharing(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharingAsync(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharingAsync(System.Byte[],System.String,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatus(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginGetAccountStatus(System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndGetAccountStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatusAsync(System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatusAsync(System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorization(System.UInt32,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginGetUserAuthorization(System.UInt32,System.Byte[],System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndGetUserAuthorization(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorizationAsync(System.UInt32,System.Byte[],System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorizationAsync(System.UInt32,System.Byte[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.CreateWholesaleAccount(ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.BeginCreateWholesaleAccount(ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.EndCreateWholesaleAccount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.CreateWholesaleAccountAsync(ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.CreateWholesaleAccountAsync(ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.Web.UserAccount.UserAccount.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.LinkUserCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.LinkedGamerTagsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.GetUserSettingsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.SetInfoSharingCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.GetAccountStatusCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.GetUserAuthorizationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.Web.UserAccount.UserAccount.CreateWholesaleAccountCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.TeamInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.description">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.motto">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.URL">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.created">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.numMembers">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamInfo.data">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.TeamMember">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.gamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.member">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.data">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.TeamMember.joined">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.CreateTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.DeleteTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.RemoveTeamMemberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.ManageTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.ManageTeamMemberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.RecruitTeamMemberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.JoinTeamCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.GetTeamInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamMembersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Teams.GetTeamMembersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Teams.GetTeamMembersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.AddSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AddSubscriptions.liveSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AddSubscriptions.contentSubscriptions">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.AlertSubscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AlertSubscription.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.AlertSubscription.locale">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ContentSubscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ContentSubscription.subscriptionID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ContentSubscription.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ContentSubscription.locale">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.LiveSubscription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.subscriptionID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.LiveSubscription.locale">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ExistingSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ExistingSubscriptions.liveSubscriptions">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ExistingSubscriptions.contentSubscriptions">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscriberExistsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscriberExistsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.SubscriberExistsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscribeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.SubscribeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.SubscribeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.UnsubscribeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.UnsubscribeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.UnsubscribeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.EnumerateSubscriptionsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.EnumerateSubscriptionsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.EnumerateSubscriptionsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ScheduleContentAlertCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Alert.ScheduleContentAlertCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Alert.ScheduleContentAlertCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.Rating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.DefaultLocale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.TitlePrivilegeInfo.LocalizedName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.TitlePrivilege">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.None">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.ReadOnly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.ReadWrite">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.TitlePrivilege.FullControl">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.ESRBRating">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.ALL">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.ADULT">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.MATURE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.TEEN">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.EVERYONE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.KIDS_TO_ADULTS">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.EARLY_CHILDHOOD">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.GeneralInfo.ESRBRating.UNSPECIFIED">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LocalizedDisplayName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LocalizedDisplayName.Locale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LocalizedDisplayName.DisplayName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LinkInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LinkInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LinkInfo.Owner">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.GetTitleListCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LinkedGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.GeneralInfo.LinkedGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.GeneralInfo.LinkedGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkInfo.Owner">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountResponse.userPuidHigh">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountResponse.userPuidLow">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountResponse.gamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountResponse.password">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.PhoneInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.PhoneInfo.phonePrefix">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.PhoneInfo.phoneNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.PhoneInfo.phoneExtension">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.AddressInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.AddressInfo.street1">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.AddressInfo.street2">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.AddressInfo.city">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.AddressInfo.district">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.AddressInfo.state">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.AddressInfo.postalCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.offerId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.firstName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.lastName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.addressInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.phoneInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.email">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.countryId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.languageId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.birthdate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.memberName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.externalReferenceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountRequest.reservedBytes">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.UserAuthorization">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.acceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.isVoiceBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.isSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAuthorization.services">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.UserAccountStatus">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.acceptMSInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.acceptPartnerInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.forceNameChange">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.voiceBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.voiceBannedUntil">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.nicknameBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.accountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.UserAccountStatus.accountSuspendedUntil">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkedGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.LinkedGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.LinkedGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.GetUserSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.SetInfoSharingCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.SetInfoSharingCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.SetInfoSharingCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetAccountStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetAccountStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.GetAccountStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserAuthorizationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.GetUserAuthorizationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.GetUserAuthorizationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.UserAccount.CreateWholesaleAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCRecipientResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCRecipientResult.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCRecipientResult.MessageID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageSummary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.Sender">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.SenderContext">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.SentTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.MessageID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.MessageFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.SenderTitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.ExpireMinutes">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.DetailsSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageSummary.MessageType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Required">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Recommended">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.HasVoice">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.HasText">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Read">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.NonExportable">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TeamContext">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.CompContext">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.AlternateTitle">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.Marketing">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved0">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved1">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved2">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved3">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved4">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved5">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved6">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved7">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved8">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved9">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved10">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved11">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved12">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.MSReserved13">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved0">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved1">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved2">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved3">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved4">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved5">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageFlags.TitleReserved6">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.Invalid">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.TitleCustom">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.FriendRequest">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.GameInvite">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.TeamRecruit">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.CompReminder">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.CompRequest">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.LiveMessage">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.PersonalMessage">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.VideoMessage">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.QuickChatInvite">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.VideoChatInvite">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCMessageType.PartyChatInvite">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCUserTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCUserTitle.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCUserTitle.LastLogonTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCUserTitle.Flags">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCUserTitleFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCUserTitleFlags.AcceptMarketing">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.SenderContext">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.SentTime">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.Region">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.MessageID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.MessageFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.ExpireMinutes">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.DetailsSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.MessageType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.SenderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTitleWideMessageSummary.Description">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCLanguageString">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLanguageString.Locale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLanguageString.String">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCLocalizedString">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLocalizedString.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLocalizedString.DefaultLocale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCLocalizedString.LangString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageAttachment">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageAttachment.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageAttachment.Flags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageAttachment.Data">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCAttachFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCAttachFlags.NonExportable">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCAttachFlags.Directory">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCStringIdProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringIdProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringIdProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCBoolProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBoolProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBoolProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCAttachmentProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.AttachSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.AttachFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCAttachmentProp.AttachUrl">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCBinaryProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBinaryProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCBinaryProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCTimeProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTimeProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCTimeProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCStringProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCStringProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCQwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCQwordProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCQwordProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCDwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCDwordProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCDwordProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCWordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCWordProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCWordProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCByteProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCByteProp.PropID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCByteProp.Value">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCNullProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCNullProp.PropID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCMessageDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.NullProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.ByteProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.WordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.DwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.QwordProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.StringProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.TimeProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.BinaryProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.AttachmentProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.BoolProp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.WCMessageDetails.StringIdProp">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCDeleteSysMsgFlags.RevokeAll">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.WCDeleteMsgFlags">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Messaging.WCDeleteMsgFlags.BlockSender">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageStringCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageStringCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageStringCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeTitleUserMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeTitleUserMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.RevokeTitleUserMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleUserMessageCompletedEventArgs.RecipResult">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs.Delay">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendTitleWideMessageCompletedEventArgs.MessageID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteTitleWideMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteTitleWideMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.DeleteTitleWideMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetTitleWideMessageDetailsCompletedEventArgs.Details">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumTitleWideMessagesCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SetMessageFlagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SetMessageFlagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SetMessageFlagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumUserTitlesCompletedEventArgs.Title">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteUserTitleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteUserTitleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.DeleteUserTitleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.RevokeMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.RevokeMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.SendMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.SendMessageCompletedEventArgs.RecipResult">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.DeleteMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.DeleteMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.GetMessageDetailsCompletedEventArgs.Details">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Messaging.EnumMessagesCompletedEventArgs.Summary">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.PresenceInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.XUID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.OnlineState">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.LastSeenTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.MinutesSinceStateChange">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.PresenceInfo.RichPresenceString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.OfflineFriend">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OfflineFriend.G">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.OnlineFriend">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OnlineFriend.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OnlineFriend.T">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.OnlineFriend.S">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.FriendsInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendsInfo.OnlineFriends">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendsInfo.OfflineFriends">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.RecentPlayer">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.UserLivepuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.Gamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GamerTileUrl">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.ReputationBucket">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GamerScore">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GamerZone">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GameTitleName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.LastMetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.RecentPlayer.GameTitleTileUrl">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GamercardZones">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Unknown">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.None">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Xbox_1">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.RR">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Pro">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Family">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.GamercardZones.Underground">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.RecentPlayerStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.RecentPlayerStatus.Neutral">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.RecentPlayerStatus.Preferred">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Presence.RecentPlayerStatus.Avoided">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.FriendEx">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.XUID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.FriendStatus">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.OnlineState">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.LastSeenTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.MinutesSinceStateChange">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.FriendEx.RichPresenceString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetGamertagsFromXUIDSCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetGamertagsFromXUIDSCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetGamertagsFromXUIDSCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetXUIDSFromGamertagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetXUIDSFromGamertagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetXUIDSFromGamertagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetPresenceInfoCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsExCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetRecentPlayersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetRecentPlayersCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetRecentPlayersCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Presence.GetFriendsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Presence.GetFriendsCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.wcAchievement">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.uiAchievementId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.dtAchieved">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.nFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.byType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.nCred">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.nImageId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.szTitle">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.szDescription">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.wcAchievement.szHowTo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.UserSetting">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.ulUserId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.uiSettingId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.UserSetting.status">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadProfileStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.SUCCESS_TITLE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.SUCCESS_DEFAULT">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.WARNING_NO_VALUE">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.ERROR_NO_PERMISSION">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Profile.ReadProfileStatus.ERROR_PUID_INVALID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadAchievementsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadAchievementsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.ReadAchievementsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadSettingsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Profile.ReadSettingsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Profile.ReadSettingsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.QueryAttribute">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.WireData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttribute.Value">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttribute.Id">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.XRLObject2">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.FindFromIdsResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsResponse.returnedResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsResponse.attribCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsResponse.attribs">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SearchResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.totalResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.returnedResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.attribCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchResponse.attribs">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.QueryAttributeSpec">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttributeSpec.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.QueryAttributeSpec.len">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.AddCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.AddCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.AddCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.UpdateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.UpdateIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SearchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SearchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.SearchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.FindFromIdsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.FindFromIdsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.FindFromIdsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.RemoveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.RemoveIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.SelectCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.GetXQSConfigCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.GetXQSConfigCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.GetXQSConfigCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionCreateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateSingleEliminationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCreateSingleEliminationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionCreateSingleEliminationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionSearchCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionSearchCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionSearchCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionManageEntrantCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionCancelCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionTopologyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologySingleEliminationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Query.CompetitionTopologySingleEliminationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Query.CompetitionTopologySingleEliminationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest._digest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigVerifySignatureRequest._signature">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureResponse">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureResponse._hresult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureResponse._signature">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.XSigCreateSignatureRequest._digest">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.VerifySignatureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.VerifySignatureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.VerifySignatureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.CreateSignatureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.CreateSignatureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.SignatureWidget.CreateSignatureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.TransferUserLicensesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.BlacklistDigestCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.SignatureWidget.UnBlacklistDigestCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDStatus">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Success">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Warning_No_OP">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Error_Invalid_Xuid">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Error_Invalid_Title">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.DeleteXUIDStatus.Error_Invalid_Lb_ID">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.LBID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.ResetType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.LocalizedLBName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBInfo.AttributeInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBResetType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Never">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Weekly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Monthly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Bimonthly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Quarterly">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Semiannually">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBResetType.Annually">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.StatsLocalizedName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.StatsLocalizedName.Locale">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.StatsLocalizedName.DisplayName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.RawLBAttribute">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBAttribute.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBAttribute.V">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.RawLBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBEntry.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBEntry.R">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBEntry.A">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.RawLBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBResults.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.RawLBResults.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedMLBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.LBID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.R">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.F">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBEntry.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBEntryAttribute">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntryAttribute.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntryAttribute.V">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedMLBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedMLBResults.G">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntry.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBEntry.R">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBResults.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBResults.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedLBEntry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBEntry.G">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBEntry.R">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBEntry.F">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DetailedLBResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBResults.Entries">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBResults.LBLastResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DetailedLBResults.TotalLBEntries">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBAttributeInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBAttributeInfo.ID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBAttributeInfo.Unit">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.LBAttributeInfo.LocalizedAttrName">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.AttributeUnit">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Integer">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Float">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Percent">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.GamerTag">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.TimeStamp">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.MilliSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.TenMilliSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.HundredMilliSeconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Seconds">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Minutes">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Hours">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Days">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.String">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.Team">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.AttributeUnit.MaxAttributeUnit">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.LBType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.Regular">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.RegularTeam">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.CompetitionTemplate">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Stats.LBType.CompetitionTemplateTeam">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromLBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromLBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DeleteXUIDFromLBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromAllLBsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.DeleteXUIDFromAllLBsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.DeleteXUIDFromAllLBsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBListByTypeCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBNearGamerTagCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBForGamerTagsCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetLBDetailsForGamerTagsCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetMLBByXUIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetMLBByXUIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetMLBByXUIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateTeamLBCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBNearTeamNameCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBForTeamNamesCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.GetTeamLBDetailsForTeamNamesCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Stats.EnumerateLBRawCompletedEventArgs.ValidSeconds">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.QuotaInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.MaxFileSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalBytesMax">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalBytesUsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalFilesMax">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.QuotaInfo.TotalFilesUsed">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.FileEnumerationInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.TitleVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.UserCountryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.FileSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.ModifiedDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.FileName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.FileEnumerationInfo.FileContentType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.FileContentTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Storage.FileContentTypeEnum.Package">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.Web.Storage.FileContentTypeEnum.Blob">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadFileInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileNotModified">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.TitleID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.TitleVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.GamerTag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.UserCountryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.CreationDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileData">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadFileInfo.FileContentType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.GetTitleQuotaCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.GetTitleQuotaCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.GetTitleQuotaCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadUserFileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadUserFileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.ReadTitleFileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.ReadTitleFileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.WriteUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.WriteTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.DeleteUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.DeleteTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.RevokeTitleFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.RevokeUserFileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.EnumerateTitleFilesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.Web.Storage.EnumerateTitleFilesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.Web.Storage.EnumerateTitleFilesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.CXSuppApi">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByGamerTag(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginConsoleApplicationsGetByGamerTag(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndConsoleApplicationsGetByGamerTag(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByGamerTagAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByGamerTagAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByUserPuid(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginConsoleApplicationsGetByUserPuid(System.UInt64,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndConsoleApplicationsGetByUserPuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByUserPuidAsync(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByUserPuidAsync(System.UInt64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByConsoleId(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginConsoleApplicationsGetByConsoleId(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndConsoleApplicationsGetByConsoleId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByConsoleIdAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByConsoleIdAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByMachinePuid(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginConsoleApplicationsGetByMachinePuid(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndConsoleApplicationsGetByMachinePuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByMachinePuidAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByMachinePuidAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPuidFromXName(System.String,System.UInt64@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetPuidFromXName(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetPuidFromXName(System.IAsyncResult,System.UInt64@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPuidFromXNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPuidFromXNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccount(System.UInt64,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetAccount(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetAccount(System.IAsyncResult,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.modifyAccount(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginmodifyAccount(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndmodifyAccount(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.modifyAccountAsync(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.modifyAccountAsync(System.UInt64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.banAccount(System.UInt64,System.Boolean,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginbanAccount(System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndbanAccount(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.banAccountAsync(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.banAccountAsync(System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getRelatedAccounts(System.UInt64,System.UInt64[]@,System.String[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetRelatedAccounts(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetRelatedAccounts(System.IAsyncResult,System.UInt64[]@,System.String[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getRelatedAccountsAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getRelatedAccountsAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatus(System.String,System.Boolean@,System.Boolean@,System.Boolean@,System.UInt64@,System.String@,System.DateTime@,System.UInt64@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetSubscriptionCodeStatus(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetSubscriptionCodeStatus(System.IAsyncResult,System.Boolean@,System.Boolean@,System.Boolean@,System.UInt64@,System.String@,System.DateTime@,System.UInt64@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatusAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatusAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountEx(System.UInt64,System.UInt64@,System.DateTime@,System.Int32@,System.DateTime@,System.Int32@,System.Boolean@,System.DateTime@,System.Byte@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetAccountEx(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetAccountEx(System.IAsyncResult,System.UInt64@,System.DateTime@,System.Int32@,System.DateTime@,System.Int32@,System.Boolean@,System.DateTime@,System.Byte@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountExAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getAccountExAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPassportMemberName(System.UInt64,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetPassportMemberName(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetPassportMemberName(System.IAsyncResult,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPassportMemberNameAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getPassportMemberNameAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPicture(System.UInt64,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginRemoveGamerPicture(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndRemoveGamerPicture(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPictureAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPictureAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserMotto(System.UInt64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetUserMotto(System.UInt64,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetUserMotto(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserMottoAsync(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserMottoAsync(System.UInt64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItems(System.UInt64,ServerTestFramework.CUST.ProfileItem[],System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetUserProfileItems(System.UInt64,ServerTestFramework.CUST.ProfileItem[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetUserProfileItems(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItemsAsync(System.UInt64,ServerTestFramework.CUST.ProfileItem[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItemsAsync(System.UInt64,ServerTestFramework.CUST.ProfileItem[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.IncrementMaximumLicenseCount(System.UInt64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginIncrementMaximumLicenseCount(System.UInt64,System.Guid,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndIncrementMaximumLicenseCount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.IncrementMaximumLicenseCountAsync(System.UInt64,System.Guid)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.IncrementMaximumLicenseCountAsync(System.UInt64,System.Guid,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetXMLFromXName(System.String,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginGetXMLFromXName(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndGetXMLFromXName(System.IAsyncResult,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetXMLFromXNameAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetXMLFromXNameAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapUserWLID(System.UInt64,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSwapUserWLID(System.UInt64,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSwapUserWLID(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapUserWLIDAsync(System.UInt64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapUserWLIDAsync(System.UInt64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapOwnerWLID(System.UInt64,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSwapOwnerWLID(System.UInt64,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSwapOwnerWLID(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapOwnerWLIDAsync(System.UInt64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapOwnerWLIDAsync(System.UInt64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapUserDateOfBirth(System.UInt64,System.DateTime,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSwapUserDateOfBirth(System.UInt64,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSwapUserDateOfBirth(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapUserDateOfBirthAsync(System.UInt64,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SwapUserDateOfBirthAsync(System.UInt64,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByPuid(System.UInt64,ServerTestFramework.CUST.FamilyHistoryDetail[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginFamilyHistoryGetByPuid(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndFamilyHistoryGetByPuid(System.IAsyncResult,ServerTestFramework.CUST.FamilyHistoryDetail[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByPuidAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByPuidAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByGamertag(System.String,ServerTestFramework.CUST.FamilyHistoryDetail[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginFamilyHistoryGetByGamertag(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndFamilyHistoryGetByGamertag(System.IAsyncResult,ServerTestFramework.CUST.FamilyHistoryDetail[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByGamertagAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByGamertagAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByPuid(System.UInt64,ServerTestFramework.CUST.FamilyMember[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginGetFamilyMembersByPuid(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndGetFamilyMembersByPuid(System.IAsyncResult,ServerTestFramework.CUST.FamilyMember[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByPuidAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByPuidAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByGamertag(System.String,ServerTestFramework.CUST.FamilyMember[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginGetFamilyMembersByGamertag(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndGetFamilyMembersByGamertag(System.IAsyncResult,ServerTestFramework.CUST.FamilyMember[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByGamertagAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByGamertagAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleId(System.UInt64,System.String,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BegingetMachineAccountByConsoleId(System.UInt64,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndgetMachineAccountByConsoleId(System.IAsyncResult,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleIdAsync(System.UInt64,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleIdAsync(System.UInt64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.IsMachinePuidBanned(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginIsMachinePuidBanned(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndIsMachinePuidBanned(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.IsMachinePuidBannedAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.IsMachinePuidBannedAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndSCode(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginLookupMachineAccountByConsoleIdAndSCode(System.String,System.Byte[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndLookupMachineAccountByConsoleIdAndSCode(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndSCodeAsync(System.String,System.Byte[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndSCodeAsync(System.String,System.Byte[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndXuid(System.String,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginLookupMachineAccountByConsoleIdAndXuid(System.String,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndLookupMachineAccountByConsoleIdAndXuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndXuidAsync(System.String,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndXuidAsync(System.String,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByConsoleId(System.String,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginMachineHistoryGetByConsoleId(System.String,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndMachineHistoryGetByConsoleId(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByConsoleIdAsync(System.String,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByConsoleIdAsync(System.String,System.Nullable{System.DateTime},System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByPuid(System.UInt64,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginMachineHistoryGetByPuid(System.UInt64,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndMachineHistoryGetByPuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByPuidAsync(System.UInt64,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByPuidAsync(System.UInt64,System.Nullable{System.DateTime},System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByPuid(System.UInt64,System.UInt64,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetFamilyGoldSeatExemptionByPuid(System.UInt64,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetFamilyGoldSeatExemptionByPuid(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByPuidAsync(System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByPuidAsync(System.UInt64,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByGamertag(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetFamilyGoldSeatExemptionByGamertag(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetFamilyGoldSeatExemptionByGamertag(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByGamertagAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByGamertagAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFreeGamertagEligible(System.UInt64,System.Boolean,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginSetFreeGamertagEligible(System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndSetFreeGamertagEligible(System.IAsyncResult,System.String@)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFreeGamertagEligibleAsync(System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.SetFreeGamertagEligibleAsync(System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GamertagHistoryGet(System.String,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginGamertagHistoryGet(System.String,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndGamertagHistoryGet(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GamertagHistoryGetAsync(System.String,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.GamertagHistoryGetAsync(System.String,System.Nullable{System.DateTime},System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByGamertag(System.String,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginUserHistoryGetByGamertag(System.String,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndUserHistoryGetByGamertag(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByGamertagAsync(System.String,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByGamertagAsync(System.String,System.Nullable{System.DateTime},System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByPuid(System.UInt64,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.BeginUserHistoryGetByPuid(System.UInt64,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.EndUserHistoryGetByPuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByPuidAsync(System.UInt64,System.Nullable{System.DateTime})">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByPuidAsync(System.UInt64,System.Nullable{System.DateTime},System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.CUST.CXSuppApi.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByGamerTagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByUserPuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByConsoleIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.ConsoleApplicationsGetByMachinePuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getPuidFromXNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.modifyAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.banAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getRelatedAccountsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getSubscriptionCodeStatusCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getAccountExCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getPassportMemberNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.RemoveGamerPictureCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetUserMottoCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetUserProfileItemsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.IncrementMaximumLicenseCountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.GetXMLFromXNameCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SwapUserWLIDCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SwapOwnerWLIDCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SwapUserDateOfBirthCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByPuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.FamilyHistoryGetByGamertagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByPuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.GetFamilyMembersByGamertagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.getMachineAccountByConsoleIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.IsMachinePuidBannedCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndSCodeCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.LookupMachineAccountByConsoleIdAndXuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByConsoleIdCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.MachineHistoryGetByPuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByPuidCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetFamilyGoldSeatExemptionByGamertagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.SetFreeGamertagEligibleCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.GamertagHistoryGetCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByGamertagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.CUST.CXSuppApi.UserHistoryGetByPuidCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplications">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplications.MachinePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplications.ConsoleId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplications.ApplicationGroups">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationGroup">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationGroup.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationGroup.SystemOnlineManifestRevision">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationGroup.SystemManifestRevision">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationGroup.FlashVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationGroup.GroupId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationGroup.Applications">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationDetail.FileName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationDetail.FriendlyName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationDetail.AppVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationDetail.Online">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.UserHistory">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistory.UserPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistory.UserHistoryDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistory.MachineHistoryDetail">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.UserHistoryDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryDetail.Timestamp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryDetail.UserPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryDetail.MachinePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryDetail.IpAddress">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryDetail.Reason">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryDetail.Detail">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineHistoryDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryDetail.UserPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryDetail.MachinePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryDetail.FirstSeen">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryDetail.LastSeen">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryDetail.DaysSeen">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryDetail.IpAddress">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.MachinePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.ConsoleId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.SecondaryIdentifier">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.ResetDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.CreateDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.FlashVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.FlashDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.ConsoleRegion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.UpdateVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineInfo.UpdateDate">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineHistory">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistory.MachinePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistory.UserHistoryDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistory.MachineHistoryDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistory.MachineConsoleInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.FamilyMember">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyMember.userPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyMember.userFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyMember.gamertag">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.FamilyHistoryDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.ownerPassportPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.ownerGamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.dependentPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.dependentGamertag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.machinePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.ipAddress">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.timestamp">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.hr">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryDetail.reason">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ProfileItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ProfileItem.profileItem">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ProfileItem.profileItemValue">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ProfileItem.titleId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByGamerTagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByGamerTagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationsGetByGamerTagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByUserPuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByUserPuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationsGetByUserPuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByConsoleIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByConsoleIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationsGetByConsoleIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByMachinePuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.ConsoleApplicationsGetByMachinePuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.ConsoleApplicationsGetByMachinePuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPuidFromXNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs.puid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPuidFromXNameCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isAccountOwner">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isActive">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isLockedOut">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isVoiceBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isNicknameBanned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.mustChangeXName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.isGeofenceExempt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.modifyAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.modifyAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.modifyAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.modifyAccountCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.banAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.banAccountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.banAccountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.banAccountCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getRelatedAccountsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.relatedAccounts">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.relatedAccountNames">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getRelatedAccountsCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.bValidSubscriptionCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.bUsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.bUsedMaxTimes">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.ulLastUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.szLastUser">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.ftLastUsage">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.ulOfferID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.szOffer">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getSubscriptionCodeStatusCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountExCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getAccountExCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.biOwnerPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.dtAccountResumeDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.iSuspensionLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.dtVoiceResumeDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.iVoiceBanLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.bMustChangeXName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.dtAcceptedTOS">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.tiCountryID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.isGeoFenceExempt">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getAccountExCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPassportMemberNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.userPmn">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.parentPmn">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getPassportMemberNameCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.RemoveGamerPictureCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserMottoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserMottoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserMottoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserMottoCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetUserProfileItemsCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.IncrementMaximumLicenseCountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.IncrementMaximumLicenseCountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.IncrementMaximumLicenseCountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GetXMLFromXNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GetXMLFromXNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetXMLFromXNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetXMLFromXNameCompletedEventArgs.userXML">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetXMLFromXNameCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SwapUserWLIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SwapUserWLIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SwapUserWLIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SwapUserWLIDCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SwapOwnerWLIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SwapOwnerWLIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SwapOwnerWLIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SwapOwnerWLIDCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SwapUserDateOfBirthCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SwapUserDateOfBirthCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SwapUserDateOfBirthCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SwapUserDateOfBirthCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.FamilyHistoryGetByPuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.FamilyHistoryGetByPuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryGetByPuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryGetByPuidCompletedEventArgs.details">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryGetByPuidCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.FamilyHistoryGetByGamertagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.FamilyHistoryGetByGamertagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryGetByGamertagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryGetByGamertagCompletedEventArgs.details">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.FamilyHistoryGetByGamertagCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GetFamilyMembersByPuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GetFamilyMembersByPuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetFamilyMembersByPuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetFamilyMembersByPuidCompletedEventArgs.familyMembers">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetFamilyMembersByPuidCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GetFamilyMembersByGamertagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GetFamilyMembersByGamertagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetFamilyMembersByGamertagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetFamilyMembersByGamertagCompletedEventArgs.familyMembers">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GetFamilyMembersByGamertagCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs.isLockedOut">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.getMachineAccountByConsoleIdCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.IsMachinePuidBannedCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.IsMachinePuidBannedCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.IsMachinePuidBannedCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.LookupMachineAccountByConsoleIdAndSCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.LookupMachineAccountByConsoleIdAndSCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.LookupMachineAccountByConsoleIdAndSCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.LookupMachineAccountByConsoleIdAndXuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.LookupMachineAccountByConsoleIdAndXuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.LookupMachineAccountByConsoleIdAndXuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineHistoryGetByConsoleIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineHistoryGetByConsoleIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryGetByConsoleIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineHistoryGetByPuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineHistoryGetByPuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.MachineHistoryGetByPuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByPuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByPuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByPuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByPuidCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByGamertagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByGamertagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByGamertagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetFamilyGoldSeatExemptionByGamertagCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetFreeGamertagEligibleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.SetFreeGamertagEligibleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetFreeGamertagEligibleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.SetFreeGamertagEligibleCompletedEventArgs.errorString">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GamertagHistoryGetCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.GamertagHistoryGetCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.GamertagHistoryGetCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.UserHistoryGetByGamertagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.UserHistoryGetByGamertagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryGetByGamertagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.UserHistoryGetByPuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.UserHistoryGetByPuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.CUST.UserHistoryGetByPuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.CUST.AccountInfo">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.CUST.AccountInfoEx">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.CUST.MachineAccountInfo">
            <summary>
            Summary description for SvcProviderWrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.AddCreditCard(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.BeginAddCreditCard(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.EndAddCreditCard(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.AddCreditCardAsync(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.AddCreditCardAsync(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPointsBalance(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.BeginGetPointsBalance(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.EndGetPointsBalance(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPointsBalanceAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPointsBalanceAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.SignIn">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.BeginSignIn(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.EndSignIn(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.SignInAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.SignInAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPaymentInstruments(System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.BeginGetPaymentInstruments(System.UInt64,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.EndGetPaymentInstruments(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPaymentInstrumentsAsync(System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPaymentInstrumentsAsync(System.UInt64,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetUserAuthorization(System.Int32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.BeginGetUserAuthorization(System.Int32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.EndGetUserAuthorization(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetUserAuthorizationAsync(System.Int32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetUserAuthorizationAsync(System.Int32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.AddCreditCardCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPointsBalanceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.SignInCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetPaymentInstrumentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.GetUserAuthorizationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService.SvcProvider.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.AddCreditCardResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddCreditCardResults.PaymentInstrumentId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SessionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SessionInfo.MusicNetAuthToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SessionInfo.GeoCountryCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.OfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.BillingInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.HasBillingViolation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.HasPendingCancel">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.HasLapsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.StartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.EndDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionInfo.RenewalOfferId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.XboxPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.LivePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.Tag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.PostalCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.ParentallyControlled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.Services">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountInfo.IsLightweight">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo.HResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo.Message">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo.TagChangeRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo.AcceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo.AccountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorInfo.BillingUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationInfo.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationInfo.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationInfo.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationInfo.SessionInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.PayerEmail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.BillingAgreementId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.FirstName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.LastName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.MiddleName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.PayerBusiness">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.PayerCountry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.BillingAgreementDetails.BillingAgreementDescription">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.PayPalPayinInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PayPalPayinInfo.BillingAgreementDetails">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.WholesaleInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.WholesaleInfo.AccountHolderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.WholesaleInfo.ExternalReferenceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.WholesaleInfo.WholesalePartner">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.WholesaleInfo.EncryptedPassword">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.DirectDebitInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.DirectDebitInfo.AccountHolderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.DirectDebitInfo.AccountNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.DirectDebitInfo.BankCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.DirectDebitInfo.BranchCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.DirectDebitInfo.CheckDigits">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.CreditCardInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.CreditCardInfo.CardType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.CreditCardInfo.AccountHolderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.CreditCardInfo.AccountNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.CreditCardInfo.CcvNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.CreditCardInfo.ExpirationDate">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.PhoneInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PhoneInfo.PhonePrefix">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PhoneInfo.PhoneNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PhoneInfo.PhoneExtension">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo.Street1">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo.Street2">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo.City">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo.District">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo.State">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddressInfo.PostalCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.PaymentInstrumentId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.PaymentInstrumentType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.AddressInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.PhoneInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.CreditCardInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.DirectDebitInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.WholesaleInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.PaymentInstrumentInfo.PayPalPayinInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetPaymentInstrumentResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetPaymentInstrumentResults.PaymentInstrumentInfos">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SessionDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SessionDetails.SessionKey">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SessionDetails.MusicNetAuthToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SessionDetails.GeoCountryCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.XboxOfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.BillingInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.HasBillingViolation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.HasPendingCancel">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.MusicNetSku">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.StartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.EndDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SubscriptionDetails.RenewalXboxOfferId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.XboxPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.LivePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.Tag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.PostalCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.ParentallyControlled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AccountDetails.IsLightweight">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.HResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.Message">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.TagChangeRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.AcceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.AccountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.SubscriptionLapsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.ErrorDetails.BillingUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SignInResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SignInResults.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SignInResults.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SignInResults.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SignInResults.SessionInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceResults.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceResults.AboveLowBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceResults.DmpAccountStatus">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.AddCreditCardCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.AddCreditCardCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.AddCreditCardCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetPointsBalanceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SignInCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.SignInCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.SignInCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetPaymentInstrumentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetPaymentInstrumentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetPaymentInstrumentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.GetUserAuthorizationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AcceptTermsOfService(System.UInt64,System.Byte[],ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginAcceptTermsOfService(System.UInt64,System.Byte[],ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndAcceptTermsOfService(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AcceptTermsOfServiceAsync(System.UInt64,System.Byte[],ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AcceptTermsOfServiceAsync(System.UInt64,System.Byte[],ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AddCreditCard(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginAddCreditCard(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndAddCreditCard(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AddCreditCardAsync(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AddCreditCardAsync(System.UInt64,System.UInt64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Byte,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPointsBalance(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginGetPointsBalance(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndGetPointsBalance(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPointsBalanceAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPointsBalanceAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.SignIn">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginSignIn(System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndSignIn(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.SignInAsync">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.SignInAsync(System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.CreateMobileAccount(System.UInt64,System.Byte[],System.UInt64,System.String,System.Byte,System.UInt16,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginCreateMobileAccount(System.UInt64,System.Byte[],System.UInt64,System.String,System.Byte,System.UInt16,System.DateTime,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndCreateMobileAccount(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.CreateMobileAccountAsync(System.UInt64,System.Byte[],System.UInt64,System.String,System.Byte,System.UInt16,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.CreateMobileAccountAsync(System.UInt64,System.Byte[],System.UInt64,System.String,System.Byte,System.UInt16,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GenerateGamertag(System.String,System.UInt64,ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginGenerateGamertag(System.String,System.UInt64,ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndGenerateGamertag(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GenerateGamertagAsync(System.String,System.UInt64,ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GenerateGamertagAsync(System.String,System.UInt64,ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPaymentInstruments(System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginGetPaymentInstruments(System.UInt64,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndGetPaymentInstruments(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPaymentInstrumentsAsync(System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPaymentInstrumentsAsync(System.UInt64,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetSupportedCountries(System.Byte,System.Byte)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginGetSupportedCountries(System.Byte,System.Byte,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndGetSupportedCountries(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetSupportedCountriesAsync(System.Byte,System.Byte)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetSupportedCountriesAsync(System.Byte,System.Byte,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetUserAuthorization(System.Int32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginGetUserAuthorization(System.Int32,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndGetUserAuthorization(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetUserAuthorizationAsync(System.Int32,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetUserAuthorizationAsync(System.Int32,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.ConsoleApplicationsGetByMachinePuid(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.BeginConsoleApplicationsGetByMachinePuid(System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.EndConsoleApplicationsGetByMachinePuid(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.ConsoleApplicationsGetByMachinePuidAsync(System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.ConsoleApplicationsGetByMachinePuidAsync(System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AcceptTermsOfServiceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.AddCreditCardCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPointsBalanceCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.SignInCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.CreateMobileAccountCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GenerateGamertagCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetPaymentInstrumentsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetSupportedCountriesCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.GetUserAuthorizationCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.UserAccount.WebService2.UserAccount.ConsoleApplicationsGetByMachinePuidCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum.Unknown">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum.XboxLive">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.WebService2.ServiceTypeEnum.Zune">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AddCreditCardResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddCreditCardResults.PaymentInstrumentId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationDetail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationDetail.FileName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationDetail.FriendlyName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationDetail.AppVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationDetail.Online">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup.Name">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup.SystemOnlineManifestRevision">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup.SystemManifestRevision">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup.FlashVersion">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup.GroupId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationGroup.Applications">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplications">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplications.ConsoleId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplications.ApplicationGroups">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SessionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SessionInfo.MusicNetAuthToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SessionInfo.GeoCountryCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.OfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.BillingInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.HasBillingViolation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.HasPendingCancel">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.HasLapsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.StartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.EndDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionInfo.RenewalOfferId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.XboxPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.LivePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.Tag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.PostalCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.ParentallyControlled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.Services">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.IsLightweight">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.CultureId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountInfo.ParentalControlGroupId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo.HResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo.Message">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo.TagChangeRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo.AcceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo.AccountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorInfo.BillingUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationInfo.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationInfo.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationInfo.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationInfo.SessionInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.CountryId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.User">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.Billing">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.AllowDirectDebit">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.AllowPayPal">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CountryInfo.RequireCCAgeVerification">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.PayerEmail">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.BillingAgreementId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.FirstName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.LastName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.MiddleName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.PayerBusiness">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.PayerCountry">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.BillingAgreementDetails.BillingAgreementDescription">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.PayPalPayinInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PayPalPayinInfo.BillingAgreementDetails">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.WholesaleInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.WholesaleInfo.AccountHolderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.WholesaleInfo.ExternalReferenceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.WholesaleInfo.WholesalePartner">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.WholesaleInfo.EncryptedPassword">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.DirectDebitInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.DirectDebitInfo.AccountHolderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.DirectDebitInfo.AccountNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.DirectDebitInfo.BankCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.DirectDebitInfo.BranchCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.DirectDebitInfo.CheckDigits">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.CreditCardInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CreditCardInfo.CardType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CreditCardInfo.AccountHolderName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CreditCardInfo.AccountNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CreditCardInfo.CcvNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.CreditCardInfo.ExpirationDate">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.PhoneInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PhoneInfo.PhonePrefix">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PhoneInfo.PhoneNumber">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PhoneInfo.PhoneExtension">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo.Street1">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo.Street2">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo.City">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo.District">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo.State">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddressInfo.PostalCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.PaymentInstrumentId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.PaymentInstrumentType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.AddressInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.PhoneInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.CreditCardInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.DirectDebitInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.WholesaleInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.PaymentInstrumentInfo.PayPalPayinInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetPaymentInstrumentResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetPaymentInstrumentResults.PaymentInstrumentInfos">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SessionDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SessionDetails.SessionKey">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SessionDetails.MusicNetAuthToken">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SessionDetails.GeoCountryCode">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.XboxOfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.BillingInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.Status">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.HasBillingViolation">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.HasPendingCancel">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.MusicNetSku">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.StartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.EndDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SubscriptionDetails.RenewalXboxOfferId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.XboxPuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.LivePuid">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.Tag">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.PostalCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.CountryCode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.ParentallyControlled">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.Privileges">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AccountDetails.IsLightweight">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.HResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.Message">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.TagChangeRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.AcceptedTermsOfService">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.AccountSuspended">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.SubscriptionLapsed">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ErrorDetails.BillingUnavailable">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SignInResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SignInResults.ErrorInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SignInResults.AccountInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SignInResults.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SignInResults.SessionInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceResults.PointsBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceResults.AboveLowBalance">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceResults.DmpAccountStatus">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType.NounAdjectiveSuggestion">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserAccount.WebService2.GamertagSuggestionType.SeedSuggestion">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AcceptTermsOfServiceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AddCreditCardCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.AddCreditCardCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.AddCreditCardCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetPointsBalanceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SignInCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.SignInCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.SignInCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.CreateMobileAccountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GenerateGamertagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GenerateGamertagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GenerateGamertagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetPaymentInstrumentsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetPaymentInstrumentsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetPaymentInstrumentsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetSupportedCountriesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetSupportedCountriesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetSupportedCountriesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.GetUserAuthorizationCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationsGetByMachinePuidCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationsGetByMachinePuidCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.UserAccount.WebService2.ConsoleApplicationsGetByMachinePuidCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.Billing">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseMediaOffers(System.UInt64,System.UInt64,System.String[],System.Int32[],System.UInt32[],ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginPurchaseMediaOffers(System.UInt64,System.UInt64,System.String[],System.Int32[],System.UInt32[],ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndPurchaseMediaOffers(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseMediaOffersAsync(System.UInt64,System.UInt64,System.String[],System.Int32[],System.UInt32[],ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseMediaOffersAsync(System.UInt64,System.UInt64,System.String[],System.Int32[],System.UInt32[],ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.GetPurchaseStatus(System.UInt64,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginGetPurchaseStatus(System.UInt64,System.String[],System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndGetPurchaseStatus(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.GetPurchaseStatusAsync(System.UInt64,System.String[])">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.GetPurchaseStatusAsync(System.UInt64,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.FindMediaInstanceUrls(System.String[],System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginFindMediaInstanceUrls(System.String[],System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndFindMediaInstanceUrls(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.FindMediaInstanceUrlsAsync(System.String[],System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.FindMediaInstanceUrlsAsync(System.String[],System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.VerifyToken(System.UInt64,System.UInt64,System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginVerifyToken(System.UInt64,System.UInt64,System.String,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndVerifyToken(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.VerifyTokenAsync(System.UInt64,System.UInt64,System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.VerifyTokenAsync(System.UInt64,System.UInt64,System.String,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.CancelSubscription(System.UInt64,System.UInt64,System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginCancelSubscription(System.UInt64,System.UInt64,System.UInt64,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndCancelSubscription(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.CancelSubscriptionAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.CancelSubscriptionAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.GamertagEnumerate(System.UInt64,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginGamertagEnumerate(System.UInt64,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.UInt32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndGamertagEnumerate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.GamertagEnumerateAsync(System.UInt64,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.UInt32)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.GamertagEnumerateAsync(System.UInt64,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.UInt32,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.SubscriptionEnumerate(System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginSubscriptionEnumerate(System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndSubscriptionEnumerate(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.SubscriptionEnumerateAsync(System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.SubscriptionEnumerateAsync(System.UInt64,System.UInt64,System.UInt32,System.UInt32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseBillingOffer(System.UInt64,System.UInt64,System.UInt64,System.UInt32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginPurchaseBillingOffer(System.UInt64,System.UInt64,System.UInt64,System.UInt32,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndPurchaseBillingOffer(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseBillingOfferAsync(System.UInt64,System.UInt64,System.UInt64,System.UInt32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseBillingOfferAsync(System.UInt64,System.UInt64,System.UInt64,System.UInt32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseGamertag(System.UInt64,System.UInt64,System.Guid,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.BeginPurchaseGamertag(System.UInt64,System.UInt64,System.Guid,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.EndPurchaseGamertag(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseGamertagAsync(System.UInt64,System.UInt64,System.Guid,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseGamertagAsync(System.UInt64,System.UInt64,System.Guid,ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.WebService2.Billing.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseMediaOffersCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.GetPurchaseStatusCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.FindMediaInstanceUrlsCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.VerifyTokenCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.CancelSubscriptionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.GamertagEnumerateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.SubscriptionEnumerateCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseBillingOfferCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.WebService2.Billing.PurchaseGamertagCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.CreditCard">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.Token">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.Points">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.Wholesale">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.Untrusted">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.All">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PaymentTypeEnum.NoTokens">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatus">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatus.offerId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatus.status">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatusEnum">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatusEnum.OfferIdNotFound">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatusEnum.TransactionPending">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatusEnum.TransactionSuccessful">
            <remarks/>
        </member>
        <member name="F:ServerTestFramework.LiveService.Billing.WebService2.PurchaseStatusEnum.TransactionFailed">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PriceInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PriceInfo.PaymentType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PriceInfo.TaxType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PriceInfo.WholePrice">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PriceInfo.FractionalPrice">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PriceInfo.PriceText">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.OfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.OfferName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.OfferType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.RelationType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.ConvertMode">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.InstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.TitleId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.TitleCategory">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.TitleName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.GameRating">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.Duration">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.Frequency">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.TierProvided">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.TierRequired">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.SellText">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.RelatedOfferId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.ResponseFlags">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.SubscriptionStatusId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionInfo.Price">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionEnumerateResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionEnumerateResults.SubscriptionInfos">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionEnumerateResults.OffersTotal">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.XboxOfferInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.XboxOfferInfo.offerId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.XboxOfferInfo.offerTypeId">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.EmsOfferInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.EmsOfferInfo.offerId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.EmsOfferInfo.mediaId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.EmsOfferInfo.mediaType">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.VerifyTokenResults">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.VerifyTokenResults.emsOfferInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.VerifyTokenResults.xboxOfferInfo">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.WireData">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice.paymentType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice.taxType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice.wholePrice">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice.fractionalPrice">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice.priceTextLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.OfferPrice.priceText">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.XRLObject2">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.offerID">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.offerNameLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.offerName">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.offerType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.sellTextLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.sellText">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.maxStartDate">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.pricesLength">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagContentInfo.prices">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateResult">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateResult.offersReturned">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateResult.infos">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateResult.offersTotal">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.TypedMediaUrl">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.TypedMediaUrl.type">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.TypedMediaUrl.length">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.TypedMediaUrl.url">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.mediaId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.mediaInstanceId">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.packageSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.installSize">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.symKey">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.pubKey">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.packageType">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.fileCount">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.MediaInstanceUrl.urls">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PurchaseMediaOffersCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.GetPurchaseStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.GetPurchaseStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GetPurchaseStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.FindMediaInstanceUrlsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.FindMediaInstanceUrlsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.FindMediaInstanceUrlsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.VerifyTokenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.VerifyTokenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.VerifyTokenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.CancelSubscriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.GamertagEnumerateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionEnumerateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionEnumerateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.SubscriptionEnumerateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PurchaseBillingOfferCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PurchaseGamertagCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.WebService2.PurchaseGamertagCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.WebService2.PurchaseGamertagCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.History">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.TestConnection(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.BeginTestConnection(System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.EndTestConnection(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.TestConnectionAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.TestConnectionAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.Execute(System.String,System.String[],System.String[],System.Int32,System.Int32,System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.BeginExecute(System.String,System.String[],System.String[],System.Int32,System.Int32,System.UInt64,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.EndExecute(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.ExecuteAsync(System.String,System.String[],System.String[],System.Int32,System.Int32,System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.ExecuteAsync(System.String,System.String[],System.String[],System.Int32,System.Int32,System.UInt64,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.Query(System.String,System.String[],System.String[],System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.BeginQuery(System.String,System.String[],System.String[],System.UInt64,System.UInt64,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.EndQuery(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.QueryAsync(System.String,System.String[],System.String[],System.UInt64,System.UInt64)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.QueryAsync(System.String,System.String[],System.String[],System.UInt64,System.UInt64,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.Billing.History.WebService.History.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.History.WebService.History.TestConnectionCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.History.WebService.History.ExecuteCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.Billing.History.WebService.History.QueryCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.TestConnectionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.TestConnectionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.History.WebService.TestConnectionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.ExecuteCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.ExecuteCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.History.WebService.ExecuteCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.QueryCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.Billing.History.WebService.QueryCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.Billing.History.WebService.QueryCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.sts.WebService.SecurityTicket">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.#ctor">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetPartnerSecurityTicket(System.UInt64,System.UInt32,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.BeginGetPartnerSecurityTicket(System.UInt64,System.UInt32,System.UInt16,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.EndGetPartnerSecurityTicket(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetPartnerSecurityTicketAsync(System.UInt64,System.UInt32,System.UInt16)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetPartnerSecurityTicketAsync(System.UInt64,System.UInt32,System.UInt16,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetSecurityTicket(System.Byte,System.UInt32,System.UInt16,System.UInt16,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.BeginGetSecurityTicket(System.Byte,System.UInt32,System.UInt16,System.UInt16,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.EndGetSecurityTicket(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetSecurityTicketAsync(System.Byte,System.UInt32,System.UInt16,System.UInt16,System.String)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetSecurityTicketAsync(System.Byte,System.UInt32,System.UInt16,System.UInt16,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetPartnerSecurityTicketCompleted">
            <remarks/>
        </member>
        <member name="E:ServerTestFramework.LiveService.sts.WebService.SecurityTicket.GetSecurityTicketCompleted">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.sts.WebService.GetPartnerSecurityTicketCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.sts.WebService.GetPartnerSecurityTicketCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.sts.WebService.GetPartnerSecurityTicketCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.sts.WebService.GetSecurityTicketCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:ServerTestFramework.LiveService.sts.WebService.GetSecurityTicketCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:ServerTestFramework.LiveService.sts.WebService.GetSecurityTicketCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:MSRC.Ranking.Game">
            <summary>
            A class to represent a single game between some teams each of which comprised of several players. Each game also has
            to have the date at which it ended. This time is assumed to be the time when the game finsihed as each team will
            know about its scores (which is only possible AFTER the game).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Game.m_aDate">
            <summary>
            The date at which the game ended.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Game.m_aTeams">
            <summary>
            A variable sized list of teams.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Game.#ctor(System.DateTime,System.Int32)">
            <summary>
            Constructs a game that ended at a specified date between at a maximal number of teams. 
            </summary>
            <param name="aDate">Date at which the game ended.</param>
            <param name="iMaxNumberOfTeams">Maximum number of teams.</param>
            <remarks>An exception will be thrown if more than the specified number of teams are added.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.#ctor(System.DateTime)">
            <summary>
            Constructs a game that ended at a specified date between an arbitrary number of teams.
            </summary>
            <param name="aDate">Date at which the game ended.</param>
        </member>
        <member name="M:MSRC.Ranking.Game.AddTeam(MSRC.Ranking.Team)">
            <summary>
            Adds a team to the game.
            </summary>
            <param name="aTeam">The team to be added.</param>
            <returns>The team index of the team added.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.GetTeam(System.Int32)">
            <summary>
            Gets the team at a specified index.
            </summary>
            <param name="iTeamIndex">The index of the team.</param>
            <returns>The team at the given index or null, if the index is wrong.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.GetWinner(System.Int32,System.Int32)">
            <summary>
            Gets the winner between two teams.
            </summary>
            <param name="iTeamIndex1">Team index of team 1.</param>
            <param name="iTeamIndex2">Team index of team 2.</param>
            <returns>Returns +1 if team 1 won against team 2, -1 if team 2 won against team 1, and 0 it both teams
            draw.</returns>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Game.RemoveEmptyTeams">
            <summary>
            Removes all empty teams.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.Date">
            <summary>
            The date at which the game ended.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.NumberOfTeams">
            <summary>
            The number of participating teams.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.NumberOfPlayers">
            <summary>
            The total number of players participating in the game.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.PlayerIDs">
            <summary>
            All player IDs of all players in the game.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Game.TeamIDs">
            <summary>
            All team indicies of all players in the game.
            </summary>
            <remarks>The team index is a zero-based internal index used by this class.</remarks>
        </member>
        <member name="P:MSRC.Ranking.Game.Ranking">
            <summary>
            The full ranking of all teams based on the team scores.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Numerics.GaussianApproximations">
            <summary>
            A static class that provides some functions for Gaussian integrals. In particular, this class provides
            correction functions for the mean and variance of the truncated Gaussian.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.erfc(System.Double)">
            <summary>
            Computes the complementary error function. This function is defined by 2/sqrt(pi) * integral from x to infinity of exp (-t^2) dt.
            </summary>
            <param name="x">The lower boundary of integration.</param>
            <returns>The complementary error function.</returns>
            <remarks>This method uses a Chebyshev series approximation which is exact in the whole range up to 1 * 10^{-7}.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.erfcinv(System.Double)">
            <summary>
            Computes the inverse of the complementary error function. 
            </summary>
            <param name="y">The point of interest.</param>
            <returns>The inverse of the complementary error function.</returns>
            <remarks>This function uses a polynomial approximation together with one step of Halley's rational method.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the input <c>y</c> is outside [0,2].</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.Phi(System.Double)">
            <summary>
            Computes the cummulative Gaussian distribution at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The cummulative Gaussian distribution at the point of interest.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.PhiInverse(System.Double)">
            <summary>
            Computes the inverse of the cummulative Gaussian distribution (qunatile function) at a specified point of interest.
            </summary>
            <param name="p">The cummulative probability or point of interest in [0,1].</param>
            <returns>The quantile at the specified point.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.N(System.Double)">
            <summary>
            Computes the normal density at a specified point of interest.
            </summary>
            <param name="t">The point of interest.</param>
            <returns>The normal density at the point of interest.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.v(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.w(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a single-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.v0(System.Double,System.Double)">
            <summary>
            Computes the additive correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The additive correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.w0(System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a symmetrical double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="epsilon">The truncation point.</param>
            <returns>The multiplicative correction.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.v(System.Double,System.Double,System.Double)">
            <summary>
            Computes the additive correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The additive correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u.</remarks>
            <exception cref="T:System.ArithmeticException">Thrown if the computation is not numerically stable.</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.w(System.Double,System.Double,System.Double)">
            <summary>
            Computes the multiplicative correction of a general double-sided truncated Gaussian with unit variance.
            </summary>
            <param name="t">The mean of the non-truncated Gaussian.</param>
            <param name="l">The lower truncation point.</param>
            <param name="u">The upper truncation point.</param>
            <returns>The multiplicative correction.</returns>
            <remarks>This routine has not been tested in all regimes of t for a given l and u.</remarks>
            <exception cref="T:System.ArithmeticException">Thrown if the computation is not numerically stable.</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.ComputeNiederreiterSeries(System.Int32)">
            <summary>
            Computes a Niederreither series of coefficients.
            </summary>
            <param name="iNumberOfDimensions">Number of dimensions.</param>
            <returns>A Niederreiter series with as many elements as dimensions.</returns>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.TransformSample(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Double[],MSRC.Ranking.LinearAlgebra.Matrix@,System.Double@,MSRC.Ranking.LinearAlgebra.Matrix@,MSRC.Ranking.LinearAlgebra.Matrix@)">
            <summary>
            Computes the transformed integrand of a multi-variate Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian.</param>
            <param name="C">Cholesky factor of the covariance of the Gaussian.</param>
            <param name="a">Lower integration boundary.</param>
            <param name="b">Upper integration boundary.</param>
            <param name="dSample">The uniform random sample.</param>
            <param name="tmp">A temporary matrix of the size of <c>M1</c>.</param>
            <param name="M0">The volume sample (zeroth moment).</param>
            <param name="M1">The mean sample (first moment).</param>
            <param name="M2">The second moment sample.</param>
            <remarks>This function is implemented to minimise the number of allocations of memory and may thus be hard to 
            read.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.CalculateTGMoments(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The normalisation constant, mean and second moment matrix of a multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of Multivariate 
            Normal Probabilities.</i> 1992 using a quais-random lattice generator based on Niederreiter point sets. However, for one-dimensional
            integrals of a certain sort if resorts to use the fast <c>v</c>, <c>w</c>, <c>v0</c> and <c>w0</c> function.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not vectors
            or if <c>Sigma</c> is not a square matrix.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not the same number of rows as <c>Sigma</c>.</exception>
            <exception cref="T:System.ArithmeticException">Thrown if the normalisation constant comes out too small.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of dimensions is too large (which would lead to unrealiable results).</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.Phi(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="a">Lower integration limits.</param>
            <param name="b">Upper integration limits.</param>
            <param name="iMaxNumberOfPoints">Number of quasi-random points.</param>
            <returns>The integal of the multivariate Gaussian density between <c>a</c> and <b>b</b>.</returns>
            <remarks>This function implements a variant of the algorithm as described in <i>A. Genz. Numerical Computation of 
            Multivariate Normal Probabilities.</i> 1992. However, fast functions based on <c>erfc</c> are used for one-dimensional
            integrals.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not vectors
            or if <c>Sigma</c> is not a square matrix.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if <c>mu</c>, <c>a</c> or <c>b</c> are not the same number of rows as <c>Sigma</c>.</exception>
            <exception cref="T:System.ArithmeticException">Thrown if the normalisation constant comes out too small.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of dimensions is too large (which would lead to unrealiable results).</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.CalculateTGAParameters(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Computes the parameter of the best Gaussian approximation of a multivariate truncated Gaussian.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The normalisation constant, mean and covariance matrix of the best Gaussian approxiamtion to the truncated multivariate Gaussian density 
            between <c>l</c> and <b>u</b>.</returns>
            <remarks>This function implements the EP algorithm of Thomas P. Minka described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001. Note that in the case of scalars, the number of iterations is automatically reduced to 1.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if <c>mu</c>, <c>l</c> or <c>u</c> are not vectors
            or if <c>Sigma</c> is not a square matrix.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if <c>mu</c>, <c>l</c> or <c>u</c> are not the same number of rows as <c>Sigma</c>.</exception>
        </member>
        <member name="M:MSRC.Ranking.Numerics.GaussianApproximations.PhiEP(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix,System.Int32)">
            <summary>
            Approximates a multivariate partial Gaussian integral.
            </summary>
            <param name="mu">Mean of the Gaussian distribution.</param>
            <param name="Sigma">Covariance of the Gaussian distribution.</param>
            <param name="l">Lower integration limits.</param>
            <param name="u">Upper integration limits.</param>
            <param name="iNumberOfIterations">Number of iterations over the list of integration limits. Usually, a value of 5 - 10 will work fine.</param>
            <returns>The integal of the multivariate Gaussian density between <c>l</c> and <b>u</b>.</returns>
            <remarks>This function implements the EP algorithm of Thomas P. Minka described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001. Note that in the case of scalars, the number of iterations is automatically reduced to 1.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if <c>mu</c>, <c>l</c> or <c>u</c> are not vectors
            or if <c>Sigma</c> is not a square matrix.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if <c>mu</c>, <c>l</c> or <c>u</c> are not the same number of rows as <c>Sigma</c>.</exception>
        </member>
        <member name="T:MSRC.Ranking.Numerics.GaussianApproximations.TGMoments">
            <summary>
            A structure holding moments of truncated multi-variate Gaussian. This structure is only used by
            <c>CalculateTGMoments</c>.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Numerics.GaussianApproximations.TGMoments.M0">
            <summary>
            Normalisation constant of the truncated Gaussian.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Numerics.GaussianApproximations.TGMoments.M1">
            <summary>
            Vector of first moments.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Numerics.GaussianApproximations.TGMoments.M2">
            <summary>
            Square matrix of second moments.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Numerics.GaussianApproximations.TGAParameters">
            <summary>
            A structure holding the parameters of truncated multi-variate Gaussian approximation. This structure is only used by
            <c>CalculateTGAParameters</c>. 
            </summary>
            <remarks>Note that the parameters of a truncated Gaussian approximation are closely related to the moments of a truncated Gaussian. 
            In particular, we have that TGParameters.Z \approx TGMoments.M0, TGParameters.mu \approx TGMoments.M1 and 
            TGParameters.Sigma \approx TGMoments.M2 - TGMoments.M1 * TGMoments.M1.Transpose ().</remarks>
        </member>
        <member name="F:MSRC.Ranking.Numerics.GaussianApproximations.TGAParameters.Z">
            <summary>
            Approximative normalisation constant of the truncated Gaussian.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Numerics.GaussianApproximations.TGAParameters.mu">
            <summary>
            Mean vector of the Gaussian approximation.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Numerics.GaussianApproximations.TGAParameters.Sigma">
            <summary>
            Covariance matrix of the Gaussian approximation.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.LinearAlgebra.MatrixType">
            <summary>
            This enumeration represents the different type of matrices.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixType.RectangularMatrix">
            <summary>
            A rectangular matrix (different number of rows and columns and at least two rows and two columns).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixType.SquareMatrix">
            <summary>
            A square matrix (same number of rows and columns and at least two rows).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixType.RowVector">
            <summary>
            A row vector (One row and at least two columns).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixType.ColumnVector">
            <summary>
            A column vector (One column and at least two rows).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixType.Scalar">
            <summary>
            A scalar (One row and one column).
            </summary>
        </member>
        <member name="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">
            <summary>
            This is an exception which is thrown whenever the matrix type does not agree.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixTypeException.m_aActualMatrixType">
            <summary>
            Actual type of matrix.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixTypeException.m_aExpectedMatrixType">
            <summary>
            Expected type of matrix.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.MatrixTypeException.#ctor(MSRC.Ranking.LinearAlgebra.MatrixType,MSRC.Ranking.LinearAlgebra.MatrixType)">
            <summary>
            Constructs a new exception for matrix type problems.
            </summary>
            <param name="aActualMatrixType">Actual type of the matrix.</param>
            <param name="aExpectedMatrixType">Expected type of the matrix.</param>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.MatrixTypeException.ActualMatrixType">
            <summary>
            Actual type of the matrix.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.MatrixTypeException.ExpectedMatrixType">
            <summary>
            Expected type of the matrix.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">
            <summary>
            This is an exception which is thrown whenever the matrix size does not agree.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixSizeException.m_iActualNoRows">
            <summary>
            Actual number of rows.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixSizeException.m_iActualNoColumns">
            <summary>
            Actual number of columns.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixSizeException.m_iExpectedNoRows">
            <summary>
            Expected number of rows.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.MatrixSizeException.m_iExpectedNoColumns">
            <summary>
            Expected number of columns.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.MatrixSizeException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a new exception for matrix size problems.
            </summary>
            <param name="iActualNoRows">Actual number of rows.</param>
            <param name="iActualNoColumns">Actual number of columns.</param>
            <param name="iExpectedNoRows">Expected number of rows.</param>
            <param name="iExpectedNoColumns">Expected number of columns.</param>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.MatrixSizeException.ActualNoRows">
            <summary>
            Actual number of rows.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.MatrixSizeException.ActualNoColumns">
            <summary>
            Actual number of columns.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.MatrixSizeException.ExpectedNoRows">
            <summary>
            Expected number of rows.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.MatrixSizeException.ExpectedNoColumns">
            <summary>
            Expected number of columns.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.LinearAlgebra.MatrixNonPositiveDefiniteException">
            <summary>
            This is an exception which is thrown whenever the matrix is not positive definite.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.MatrixNonPositiveDefiniteException.#ctor">
            <summary>
            Constructs a new exception for a non-positive definite matrix problem.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.LinearAlgebra.Matrix">
            <summary>
            A light-weight matrix class for  arbitrary sized matrices. Most of these functions are implemented in a 
            straighforward way and are not optimised for any particular target CPU architecture.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.Matrix.m_dData">
            <summary>
            The raw values of the matrix.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.LinearAlgebra.Matrix.m_aType">
            <summary>
            The type of the matrix.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a matrix with zeros entries.
            </summary>
            <param name="iNoRows">Number of rows.</param>
            <param name="iNoColumns">Number of columns.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.#ctor(System.Int32)">
            <summary>
            Constructs a square matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.#ctor(System.Int32,System.Double)">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="iNoRows">Number of rows and columns.</param>
            <param name="dDiagonal">The diagonal entry.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.#ctor(System.Double[])">
            <summary>
            Constructs a square diagonal matrix.
            </summary>
            <param name="dDiagonal">The diagonal of the matrix.</param>
            <remarks>This constructor allows different entries on the diagonal of the matrix.</remarks>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.#ctor(MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Constructs a deep copy of a matrix.
            </summary>
            <param name="aMatrix">Matrix to be copied.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.#ctor(System.Double[0:,0:])">
            <summary>
            Constructs a shallow copy of a matrix.
            </summary>
            <param name="dData">Matrix data to be used.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.GetMatrixType">
            <summary>
            Determines the type of the matrix by looking at the number of rows and columns.
            </summary>
            <returns>The type of the matrix.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Equals(System.Object)">
            <summary>
            Compares with another matrix.
            </summary>
            <param name="aMatrix">Matrix A.</param>
            <returns>Returns true if A is equal to the matrix in every element.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.GetHashCode">
            <summary>
            Computes a new hash code for the matrix.
            </summary>
            <returns>The hash code as an integer.</returns>
            <remarks>This function simply computes the products of the number of rows and colums and adds the 
            first element (0,0) of the matrix in order to compute a hash code.</remarks>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.ToString">
            <summary>
            Creates a string representation of the matrix.
            </summary>
            <returns>A string showing the matrix elements.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Implicit(MSRC.Ranking.LinearAlgebra.Matrix)~System.Double[0:,0:]">
            <summary>
            The implicit cast of a matrix into a double array.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The elements of the matrix A as a double array.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Explicit(MSRC.Ranking.LinearAlgebra.Matrix)~System.Double">
            <summary>
            An explicit cast of a matrix into a double. 
            </summary>
            <param name="A">Matrix A.</param>
            <returns>The only element of the matrix A as a double.</returns>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if the matrix is not a scalar (one row and one column).</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Implicit(System.Double[0:,0:])~MSRC.Ranking.LinearAlgebra.Matrix">
            <summary>
            The implicit case of a double array into a matrix.
            </summary>
            <param name="dData">The double array to be casted.</param>
            <returns>A new matrix object whose <c>Data</c> property points to the double array.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Implicit(System.Double)~MSRC.Ranking.LinearAlgebra.Matrix">
            <summary>
            The implicit cast of a double into a matrix.
            </summary>
            <param name="x">The double to be casted.</param>
            <returns>A 1 x 1 matrix with the only element equal to <c>x</c>.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Negate">
            <summary>
            Negates the matrix.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_UnaryNegation(MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="A">Matrix A.</param>
            <returns>Matrix A negated, that is -A.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Equality(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is equal to B in every element.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Inequality(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Compares two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Returns true if A is not equal to B in every element.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Add(MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Adds a matrix.
            </summary>
            <param name="A">Matrix to be added.</param>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if the matrix to be added is of different size.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Addition(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>The matrix sum of A and B, that is A + B.</returns>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if the two matrices are of different size.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Subtract(MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Subtracts a matrix.
            </summary>
            <param name="A">Matrix to be subtracted.</param>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if the matrix to be subtracted is of different size.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Subtraction(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Subtracts two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix B subtracted from matrix B, that is A - B.</returns>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if the two matrices are of different size.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Multiply(MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Multiplies with a matrix from the right. 
            </summary>
            <param name="A">Matrix to be multiplied from the right.</param>
            <remarks>This will most likely change the size of the matrix.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if the number of rows of <c>A</c> does not match the number of columns.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Multiply(MSRC.Ranking.LinearAlgebra.Matrix,MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="B">Matrix B.</param>
            <returns>Matrix A times matrix B, that is A * B.</returns>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixSizeException">Thrown if the number of rows of <c>B</c> does not match the number of columns of <c>A</c>.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Mulitply(System.Double)">
            <summary>
            Multiplies with a scalar, that is, each element of the matrix is multiplied by the scalar.
            </summary>
            <param name="x">The scaling factor.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Multiply(MSRC.Ranking.LinearAlgebra.Matrix,System.Double)">
            <summary>
            Multiplies a matrix with a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Multiply(System.Double,MSRC.Ranking.LinearAlgebra.Matrix)">
            <summary>
            Multiplies a scalar with a matrix.
            </summary>
            <param name="x">Scalar x.</param>
            <param name="A">Matrix A.</param>
            <returns>Matrix A times scalar x, that is every element of A is multiplied by x.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Divide(System.Double)">
            <summary>
            Didives by a scalar, that is, every element is divided by the scalar.
            </summary>
            <param name="x">The scalar to be dividing by.</param>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.op_Division(MSRC.Ranking.LinearAlgebra.Matrix,System.Double)">
            <summary>
            Divides a matrix by a scalar.
            </summary>
            <param name="A">Matrix A.</param>
            <param name="x">Scalar x.</param>
            <returns>Matrix A divided by scalar x, that is every element of A is divided by x.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Transpose">
            <summary>
            Transposes the matrix.
            </summary>
            <returns>The transposed matrix.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Cholesky">
            <summary>
            Computes the Cholesky decomposition. 
            </summary>
            <returns>A lower triangular matrix containing the Cholesky decomposition.</returns>
            <remarks>This method does not check for the symmetry.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if the matrix is not square.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixNonPositiveDefiniteException">Thrown if the matrix is not-positive definite.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Inverse">
            <summary>
            Computes the inverse of a square positive definite matrix. 
            </summary>
            <returns>The inverse of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if the matrix is not square.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixNonPositiveDefiniteException">Thrown if the matrix is not-positive definite.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.InverseCholeskyFactor">
            <summary>
            Computes the inverse of the Cholesky factor of the matrix.  
            </summary>
            <returns>The inverse of the Cholesky factor of the matrix.</returns>
            <remarks>Note that the method does not check for the symmetry.</remarks>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if the matrix is not square.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixNonPositiveDefiniteException">Thrown if the matrix is not-positive definite.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.Determinant">
            <summary>
            Computes the determinant of a positive semidefinite matrix.  
            </summary>
            <returns>The determinant of the matrix.</returns>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if the matrix is not square.</exception>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixNonPositiveDefiniteException">Thrown if the matrix is not-positive definite.</exception>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.IsNaN">
            <summary>
            Checks if any element of the matrix is not-a-number.
            </summary>
            <returns>Returns true the matrix contains at least one element that is not-a-number.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.IsInfinity">
            <summary>
            Checks if any element of the matrix is infinity.
            </summary>
            <returns>Returns true the matrix contains at least one element that is infinity.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.ValidVariableName(System.String)">
            <summary>
            Converts a variable name to a valid variable name by changing all invalid characters with an underscore.
            </summary>
            <param name="szName">Variable name</param>
            <returns>A valid MATLAB variable name.</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.MatlabDataElement(System.String)">
            <summary>
            Generates a Matlab V5 compatiable data element.
            </summary>
            <param name="szName">Name of the matrix.</param>
            <returns>The byte array that can be used as a Matlab V5 data element (in a stream).</returns>
        </member>
        <member name="M:MSRC.Ranking.LinearAlgebra.Matrix.MatlabHeader(System.String)">
            <summary>
            Generates a Matlab V5 comptabible header byte array.
            </summary>
            <param name="szCreatorComments">The comments that will go into the header of the Matlab file.</param>
            <returns>The header as a byte array.</returns>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.Type">
            <summary>
            The type of the matrix (based on number of rows and columns).
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.IsRowVector">
            <summary>
            Indicator if the matrix is a row vector.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.IsColumnVector">
            <summary>
            Indicator if the matrix is a column vector.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.IsVector">
            <summary>
            Indicator whether or not the matrix is a vector.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.NoRows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.NoColumns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.NoElements">
            <summary>
            Number of total elements of the matrix.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Element in the zero-based row <c>iRowIndex</c> and zero-based column <c>iColumnIndex</c>.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.LinearAlgebra.Matrix.Item(System.Int32)">
            <summary>
            Element at position <c>iIndex</c> if the matrix is vector. 
            </summary>
            <exception cref="T:MSRC.Ranking.LinearAlgebra.MatrixTypeException">Thrown if the matrix is not a vector.</exception>
        </member>
        <member name="T:MSRC.Ranking.RankingSystems.Algorithm">
            <summary>
            Different types of approximation algorithm for the multi-team case.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.Algorithm.GenzAlgorithm">
            <summary>
            Genz' algorithm as described in <i>A. Genz. Numerical Computation of Multivariate 
            Normal Probabilities.</i> 1992.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.Algorithm.EPAlgorithm">
            <summary>
            Gaussian EP algorithm as described in <i>T. P. Minka. A family of algorithms for approximate Bayesian 
            inference.</i> PhD thesis. MIT. 2001.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.Algorithm.EPMessagePassing">
            <summary>
            EP message passing algorithm. This algorithm is two orders of magnitudes faster than <c>EPAlgorithm</c>. 
            </summary>
        </member>
        <member name="T:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem">
            <summary>
            A class that represents the MuSigma ranking system. This class manages a list of player skill lists. 
            Game outcomes will be incorporated by the MuSigma update equation. 
            </summary>
        </member>
        <member name="T:MSRC.Ranking.ProbabilisticRankingSystem">
            <summary>
            The abstract base class that manages a list of player skill lists. A probabilistic ranking system is a ranking system which is
            based on a probabilistic model of the game outcome. Hence, in such a ranking system it is possible to compute the probability of a
            particualr game outcome.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.RankingSystem">
            <summary>
            The abstract base class that manages a list of player skill lists. A ranking system will allow to incorporate a game outcomes 
            an update the inidividual player skills accordingly. Moreover, a ranking system will offer a predicition of the outcome of the 
            game to support matchmaking mechanisms. 
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystem.m_aPlayerSkillsList">
            <summary>
            The list of player skill list.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.#ctor(MSRC.Ranking.PlayerSkillsList)">
            <summary>
            Constructs a ranking system for a given list of player skill lists.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists. If the list is <c>null</c>, a new list of player
            skill lists will be created.</param>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.#ctor">
            <summary>
            Constructs a ranking system with a new list of player skill lists.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.ClearPlayerSkills">
            <summary>
            Clears all the chronologically sorted skills of all the players maintained by this ranking system.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.Update(MSRC.Ranking.Game)">
            <summary>
            Updates the player skills with a particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <returns>True, if the update was performed.</returns>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.PredictedOutcome(MSRC.Ranking.Game)">
            <summary>
            Computes the most likely outcome of a game.
            </summary>
            <param name="aGame">The game for which the outcome should be predicted.</param>
            <returns>The most likely ranking.</returns>
            <remarks>Note that this function ignores the actual game outcome which is contained in the game passed to the method.
            The method is supposed to throw an exception if the outcome cannot be predicted.</remarks>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.MatchQuality(MSRC.Ranking.Game)">
            <summary>
            Computes the quality of a match.
            </summary>
            <param name="aGame">The game to check.</param>
            <returns>A number between 0 and 1 which indicates the quality of the match (1 is the best possible 
            match and 0 is the worst possible match).</returns>
            <remarks>This function computes the maximum discrepancy between any pair of players using the skills valid 
            at the time of the game. It is conceivable that a derived implementation of this method does a more careful 
            analysis.</remarks>
        </member>
        <member name="M:MSRC.Ranking.RankingSystem.MatchQuality(MSRC.Ranking.Skill,MSRC.Ranking.Skill)">
            <summary>
            Computes the match quality between two players.
            </summary>
            <param name="aPlayer1Skill">Skill of player 1.</param>
            <param name="aPlayer2Skill">Skill of player 2.</param>
            <returns>A number between 0 and 1 which indicates the quality of the match (1 is the best possible 
            match and 0 is the worst possible match).</returns>
        </member>
        <member name="P:MSRC.Ranking.RankingSystem.PlayerSkillsList">
            <summary>
            The list of player skill lists maintained by the ranking system.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.ProbabilisticRankingSystem.#ctor(MSRC.Ranking.PlayerSkillsList)">
            <summary>
            Constructs a probabilistic ranking system for a given list of player skill lists.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists. If this list is <c>null</c>, a new list of player
            skill lists will be created.</param>
        </member>
        <member name="M:MSRC.Ranking.ProbabilisticRankingSystem.#ctor">
            <summary>
            Constructs a probabilistic ranking system with a new list of player skill lists.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.ProbabilisticRankingSystem.RankingProbability(MSRC.Ranking.Game,MSRC.Ranking.Ranking[])">
            <summary>
            Computes the probability for some rankings for a given game.
            </summary>
            <param name="aGame">The game for which the ranking probabilities should be computed.</param>
            <param name="aRankings">A list of rankings for which the probability should be computed.</param>
            <returns>The probabilities of the specified rankings for the given game. This method throws an exception if 
            the probabilities cannot be computed.</returns>
        </member>
        <member name="M:MSRC.Ranking.ProbabilisticRankingSystem.Update(MSRC.Ranking.Game)">
            <summary>
            Updates the player skills with a particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <returns>True, if the update was performed.</returns>
            <remarks>This method uses the evidence based <c>Update</c> method and should not be overriden!</remarks>
        </member>
        <member name="M:MSRC.Ranking.ProbabilisticRankingSystem.Update(MSRC.Ranking.Game,System.Double@)">
            <summary>
            Updates the player skills with a particular game and computes the evidence of the game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <param name="dEvidence">The evidence of the game (as an output parameter).</param>
            <returns>True, if the update was performed.</returns>
        </member>
        <member name="M:MSRC.Ranking.ProbabilisticRankingSystem.PredictedOutcome(MSRC.Ranking.Game)">
            <summary>
            Computes the most likely game outcome based on the probability for each ranking.
            </summary>
            <param name="aGame">The game for which the outcome should be predicted.</param>
            <returns>The most likely outcome.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the the game has more than two team.</exception>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_dBeta">
            <summary>
            The standard deviation of the performance distribution.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_dDrawProbability">
            <summary>
            The draw probability between any two teams.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_dTau">
            <summary>
            The increase in standard deviation responsible for modelling the dynamics of the skill belief.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_iNumberOfIterations">
            <summary>
            The number of iterations of the numerical approximation code.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_aApproximationAlgorithm">
            <summary>
            The particular algorithm used.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_dPriorMu">
            <summary>
            The mean of the prior skill belief.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.m_dPriorSigma">
            <summary>
            The standard deviation of the prior skill belief.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.#ctor(MSRC.Ranking.PlayerSkillsList,System.Double,System.Double,System.Double,System.Double,System.Double,MSRC.Ranking.RankingSystems.Algorithm,System.Int32)">
            <summary>
            Constructs a new instance of the MuSigma ranking system.
            </summary>
            <param name="aPlayerSkillsList">A list of player skill lists.</param>
            <param name="dPerformanceFactor">The performance in a single game relative to the prior standard deviation.</param>
            <param name="dDrawProbability">The probability that two equally skilled players will draw.</param>
            <param name="dLearningFactor">The change of skill in a single game relative to the prior standard deviation.</param>
            <param name="dNegativeSkillProbability">The prior belief that a player has a negative skill (important for team games).</param>
            <param name="dPriorSigma">The standard deviation of the prior skill belief.</param>
            <param name="aApproximationAlgorithm">The approximation algorithm used.</param>
            <param name="iNumberOfIterations">The number of iterations whenever numerical integration is used.</param>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new instance of the MuSigma ranking system with an empty player skill list using the EP message 
            passing algorithm.
            </summary>
            <param name="dPerformanceFactor">The performance in a single game relative to the prior standard deviation.</param>
            <param name="dDrawProbability">The probability that two equally skilled players will draw.</param>
            <param name="dLearningFactor">The change of skill in a single game relative to the prior standard deviation.</param>
            <param name="dNegativeSkillProbability">The prior belief that a player has a negative skill (important for team games).</param>
            <param name="dPriorSigma">The standard deviation of the prior skill belief.</param>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new instance of the MuSigma ranking system with an empty player skill list using the 
            EP message passing algorithm and a unit variance prior skill belief with ~0.1% chance of negative skills.
            </summary>
            <param name="dPerformanceFactor">The performance in a single game relative to the prior standard deviation.</param>
            <param name="dDrawProbability">The probability that two equally skilled players will draw.</param>
            <param name="dLearningFactor">The change of skill in a single game relative to the prior standard deviation.</param>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.#ctor">
            <summary>
            Constructs a new instance of the MuSigma ranking system with an empty player skill list using the EP 
            message passing algorithm and a unit variance prior skill belief with ~0.1% chance of negative skills. 
            The performance factor is set to 50%, the draw probability to 10% and the learning factor is at 1%.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.ComputeInternalGameRepresentation(MSRC.Ranking.Game,MSRC.Ranking.Ranking)">
            <summary>
            Computes the internal game representation for a particular ranking.
            </summary>
            <param name="aGame">The game to be represented.</param>
            <param name="aRanking">The ranking of the game.</param>
            <returns>The internal game representation.</returns>
            <exception cref="T:System.Exception">Thrown if the game ends in a draw but the draw probability was set to zero.</exception>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.GetSkillBelief(MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation,System.DateTime)">
            <summary>
            Gets the skill beliefs of all players participating in a game.
            </summary>
            <param name="aInternalGame">Internal representation of the game.</param>
            <param name="aDate">Date at which we would like to know the skill beliefs. If the time is at zero ticks, the latest 
            skill belief will be used.</param>
            <returns>An internal representation of the skill belief.</returns>
            <remarks>Note that this function already adds the amount of \tau^2 if it is queried for the latest skill beliefs.</remarks>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PartialUpdate(MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian,MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian,System.Double)">
            <summary>
            Computes the new skill with partial updates.
            </summary>
            <param name="aBeforeUpdate">Gaussian skill belief before update.</param>
            <param name="aAfterUpdate">Gaussian skill belief after update.</param>
            <param name="dWeight">Partial weighting factor.</param>
            <returns>The interpolated skill.</returns>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Update(MSRC.Ranking.Game,System.Double@)">
            <summary>
            Updates the player skills given a particular game. This the general update equation for an arbitrary number
            of teams and players per team. This function also computes the evidence of this particular game.
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <param name="dEvidence">The evidence of the game (as an output parameter).</param>
            <exception cref="T:System.ArithmeticException">Thrown if some of the resulting MuSigma values would be NaN or if
            any other non-stable condition occurs.</exception>
            <returns>True is the update was performed.</returns>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.EPMessagePassingUpdate(MSRC.Ranking.Game)">
            <summary>
            Updates the player skills given a particular game. This implementation uses message passing and is two
            orders of magnitudes faster than the general the general update equation for an arbitrary number
            of teams and players per team. 
            </summary>
            <param name="aGame">The game to be incorporated.</param>
            <exception cref="T:System.ArithmeticException">Thrown if some of the resulting MuSigma values would be NaN or if
            any other non-stable condition occurs.</exception>
            <returns>True is the update was performed.</returns>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.UpdateTeamPerformance(MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian[],MSRC.Ranking.Ranking,System.Int32[],System.Double[],System.Double)">
            <summary>
            Implements the chain schedule EP updates.
            </summary>
            <param name="aTeamPerformances">The prior team performances.</param>
            <param name="aRanking">The ranking outcome of the game.</param>
            <param name="iIndex">The pre-computed re-ordering of the teams.</param>
            <param name="dEpsilon">The draw margins between any pair of teams.</param>
            <param name="dConvergenceTolerance">The precision at which to stop the update.</param>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.RankingProbability(MSRC.Ranking.Game,MSRC.Ranking.Ranking[])">
            <summary>
            Computes the marginalised probability for some rankings for a given game.
            </summary>
            <param name="aGame">The game for which the ranking probabilities should be computed.</param>
            <param name="aRankings">A list of rankings for which the probability should be computed.</param>
            <returns>The probabilities of the specified rankings for the given game.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the probabilities cannot be computed.</exception>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.MatchQuality(MSRC.Ranking.Game)">
            <summary>
            Computes the quality of a match.
            </summary>
            <param name="aGame">The game to check.</param>
            <returns>A number between 0 and 1 which indicates the quality of the match (1 is the best possible 
            match and 0 is the worst possible match).</returns>
            <remarks>This functions computes the (normalised) probability of a joint draw of all teams.</remarks>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.MatchQuality(MSRC.Ranking.Skill,MSRC.Ranking.Skill)">
            <summary>
            Computes the match quality between two players in the MuSigma system.
            </summary>
            <param name="aPlayer1Skill">MuSigma skill of player 1.</param>
            <param name="aPlayer2Skill">MuSigma skill of player 2.</param>
            <returns>A number between 0 and 1 which indicates the quality of the match (1 is the best possible 
            match and 0 is the worst possible match).</returns>
            <remarks>This function computes the (normalised) probability of drawing.</remarks>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Beta">
            <summary>
            The standard deviation of the performance distribution.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the standard deviation is set to a negative value.</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.DrawProbability">
            <summary>
            The draw probability between two equally skilled teams. 
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the draw probability is outside of [0,1).</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Tau">
            <summary>
            The increase in standard deviation of the skill belief (dynamics prior).
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the standard deviation in the skill belief is set to a negative value.</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.NumberOfIterations">
            <summary>
            Number of iterations of the numerical approximation code.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of iterations is smaller than 20.</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.ApproximationAlgorithm">
            <summary>
            Approximation algorithm for the multi-team and multi-player case.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PriorMu">
            <summary>
            The mean of the prior skill belief.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PriorSigma">
            <summary>
            The standard deviation of the prior skill belief.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the standard deviation is set to a negative value.</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PerformanceFactor">
            <summary>
            The factor of performance variation relative to the prior standard deviation. A value close to zero
            inidicates that the performance in a single game is varying little around the actual skill of the players.
            This value should usually be between 0 and 1. Setting this property changes <seealso cref="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Beta"/> for the current value
            of <seealso cref="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PriorSigma"/>.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the performance factor is set to a negative value.</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.LearningFactor">
            <summary>
            The factor of skill point variation relative to the prior standard deviation. A value close to zero
            inidicates that the true skill in a single game is varying little. This value should be very small; a value
            of more than 0.5 means that the true skill can change up/down by an entire prior standard deviation in a single 
            game. Setting this property changes <seealso cref="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Tau"/> for the current value of <seealso cref="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PriorSigma"/>.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the learning factor is set to a negative value.</exception>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.NegativeSkillProbability">
            <summary>
            The probability that a player has negative skill points. This value should be extremely close to zero. Setting 
            this property changes <seealso cref="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PriorMu"/> for the current value of <seealso cref="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.PriorSigma"/>.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the negative skill probability is set to a value outside (0,1].</exception>
        </member>
        <member name="T:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation">
            <summary>
            This struct holds the internal representation of a game in terms of matrices.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.A">
            <summary>
            A matrix with as many rows as players and as many column are there are teams (minus one).
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.a">
            <summary>
            The lower integration limits.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.b">
            <summary>
            The upper integration limits.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.updateFactors">
            <summary>
            The update factors.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalGameRepresentation.iIndexToPlayerID">
            <summary>
            A mapping from the index to the global player ID.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalSkillBelief.mu">
            <summary>
            Means of skill beliefs.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.InternalSkillBelief.Sigma">
            <summary>
            Covariance matrix  of skill beliefs.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.m_dPrecisionMean">
            <summary>
            The precision times the mean of the Gaussian.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.m_dPrecision">
            <summary>
            The precision of the Gaussian.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a Gaussian.
            </summary>
            <param name="dPrecisionMean">Precision times the mean of the Gaussian</param>
            <param name="dPrecison">Precision of the Gaussian.</param>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.op_Multiply(MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian,MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian)">
            <summary>
            Multiplies two Gaussians.
            </summary>
            <param name="D1">First Factor.</param>
            <param name="D2">Second Factor.</param>
            <returns>The product of the two Gaussians.</returns>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.op_Division(MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian,MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian)">
            <summary>
            Divides two Gaussians.
            </summary>
            <param name="D1">Numerator Gaussian.</param>
            <param name="D2">Denominator Gaussian.</param>
            <returns>The division of the two Gaussians.</returns>
        </member>
        <member name="M:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.op_Subtraction(MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian,MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian)">
            <summary>
            Computes the absolute difference between two Gaussians.
            </summary>
            <param name="D1">First Gaussian.</param>
            <param name="D2">Second Gaussian.</param>
            <returns>The absolute deviation of the two Gaussians in terms of their parameters.</returns>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.Mean">
            <summary>
            The mean of a Gaussian.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.PrecisionMean">
            <summary>
            The precision times the mean of the Gaussian.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.Variance">
            <summary>
            The variance of a Gaussian.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.StdDev">
            <summary>
            The standard deviation of a Gaussian.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.Gaussian.Precision">
            <summary>
            The precision of a Gaussian.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.ChainScheduleEntry">
            <summary>
            This type is used to denote which factors/messages to update in a chain schedule
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.ChainScheduleEntry.DifferenceFactor">
            <summary>
            If true, the difference factor is updated; otherwise the ranking factor.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.ChainScheduleEntry.Factor">
            <summary>
            The factor index.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.RankingSystems.MuSigmaRankingSystem.ChainScheduleEntry.Message">
            <summary>
            The message index.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Skills.MuSigmaSkill">
            <summary>
            A class to represent the skill belief in the MuSigma system, that is, the parameters \mu (mean) and \sigma (standard deviation) of 
            the Gaussian skill belief.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Skill">
            <summary>
            Abstract base class of all skills. Since we are interested in rankings, each skill must be convertible into a (skill) level 
            and a more fine-grained skill point measure. For example, the number of kills, the total ammount of experience points, etc. are valid 
            skill measures. Since we have both levels and skill points, a fractional level will tell us the fractional amount of difference 
            between the level and the skill points.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Skill.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Skill.GetLevel(System.Double)">
            <summary>
            A skill level of the player between 0 and 50.
            </summary>
            <param name="dScaling">Scaling factor of the points to map it to levels.</param>
            <returns>A level between 0 and 50.</returns>
            <remarks>Levels are the broad version of the skill points.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Skill.GetFractionalLevel(System.Double)">
            <summary>
            The fractional difference between the level and the points. This value should always be between 0 and 1.
            </summary>
            <returns>The fractional part of the skill points into the current level.</returns>
        </member>
        <member name="P:MSRC.Ranking.Skill.Points">
            <summary>
            The skill points of the player. 
            </summary>
            <remarks>Skill points are the exact, fine-grained summary of skill.</remarks>
        </member>
        <member name="F:MSRC.Ranking.Skills.MuSigmaSkill.m_dMu">
            <summary>
            The mean of the skill belief.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Skills.MuSigmaSkill.m_dSigma">
            <summary>
            The standard deviation of the skill belief.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Skills.MuSigmaSkill.#ctor(System.Double,System.Double)">
            <summary>
            Constructor which initialises mean and standard deviation of the skill belief.
            </summary>
            <param name="dMu">Mean of the skill belief.</param>
            <param name="dSigma">Standard deviation of the skill belief.</param>
        </member>
        <member name="M:MSRC.Ranking.Skills.MuSigmaSkill.GetLevel(System.Double)">
            <summary>
            Skill level of the player. The skill level is obtained by mutliplying the skill points by dScaling and making 
            sure it never gets negative or above 50.
            </summary>
            <param name="dScaling">A scaling factor that is applied to the MuSigma skill points.</param>
            <returns>The level between 0 and 50.</returns>
        </member>
        <member name="M:MSRC.Ranking.Skills.MuSigmaSkill.GetFractionalLevel(System.Double)">
            <summary>
            Fractional skill level of the player.
            </summary>
            <param name="dScaling">A scaling factor that is applied to the MuSigma skill points.</param>
            <returns>The fractional part of the skill points into the level.</returns>
        </member>
        <member name="P:MSRC.Ranking.Skills.MuSigmaSkill.Mu">
            <summary>
            The mean of the skill belief.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Skills.MuSigmaSkill.Sigma">
            <summary>
            The standard deviation of the skill belief.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Skills.MuSigmaSkill.Points">
            <summary>
            Skill points of the player. 
            </summary>
            <remarks>The skill points of the player is the lower 99% quantile of the skill belief. This is a very conservative 
            estimate of the true skill of a player and should always lower bound the true skill.</remarks>
        </member>
        <member name="T:MSRC.Ranking.PlayerSkills">
            <summary>
            A class which manages a chronological series of skills for a player. The date of a skill 
            will mean that the skill is valid until this date (including it) but nothing will be known 
            afterwards. Note that this class will only allow inserting new skills <c>after</c> the last 
            inserted skill. 
            </summary>
        </member>
        <member name="F:MSRC.Ranking.PlayerSkills.m_aPlayerSkillList">
            <summary>
            A variable sized list of skills.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.PlayerSkills.m_aDatesList">
            <summary>
            A variable sized list of dates at which the skills are valid.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.PlayerSkills.m_iMaxLength">
            <summary>
            The maximal length of the array lists. 
            </summary>
        </member>
        <member name="F:MSRC.Ranking.PlayerSkills.m_iCurrentElementIndex">
            <summary>
            The index of the current element.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkills.#ctor">
            <summary>
            Construcuts a variable sized list of skills of given maximal length.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkills.#ctor(System.Int32)">
            <summary>
            Construcuts a variable sized list of skills of given maximal length.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the skill list is shorter than two elements.</exception>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkills.AddSkill(MSRC.Ranking.Skill,System.DateTime)">
            <summary>
            Adds a new skill valid at a specified date.
            </summary>
            <param name="aSkill">The new skill.</param>
            <param name="aDate">Time at which the skill is valid.</param>
            <remarks>The date of a skill will mean that the skill is valid until this date (including it) but 
            nothing will be known afterwards.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <c>aDate</c>is before or at the latest inserted skill time.</exception>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkills.Clear">
            <summary>
            Clears (empties) the list of player skill.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkills.GetLatestSkill(System.DateTime)">
            <summary>
            Gets the latest skill until (and including) a specific date.
            </summary>
            <param name="aDate">The target date.</param>
            <returns>The skill that is nearest in the past to the target data or null if there is no skill.</returns>
        </member>
        <member name="P:MSRC.Ranking.PlayerSkills.LatestSkill">
            <summary>
            The latest skill (or null if the list of skills is empty).
            </summary>
        </member>
        <member name="P:MSRC.Ranking.PlayerSkills.LatestDate">
            <summary>
            The latest date (or 0 ticks if the list of skills is empty).
            </summary>
        </member>
        <member name="P:MSRC.Ranking.PlayerSkills.NumberOfSkills">
            <summary>
            Total number of skills.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.PlayerSkills.Skills">
            <summary>
            The list of skills sorted by chronologically.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.PlayerSkills.Dates">
            <summary>
            The sorted list of dates.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.PlayerSkillsList">
            <summary>
            A class that manages list of skills indexed by players. Each player will be identified by a unqiue player ID. This
            list is managing a chronologically sorted list of skills for each player. The PlayerSkills class and this class should not be confused: 
            Whereas the PlayerSkills class manages all skills of a single player in time, this class manages a list of PlayerSkills for all players.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.PlayerSkillsList.m_aSkillsList">
            <summary>
            A variable sized mapping between player IDs and player skills.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkillsList.#ctor">
            <summary>
            Constructs a variable sized list of skill lists.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkillsList.Clear">
            <summary>
            Clears (empties) the list of skill lists.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkillsList.ClearPlayerSkills">
            <summary>
            Clears (empties) the chronologically sorted list of skills for each player but retains
            its own internal list of skill lists.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkillsList.AddPlayerSkills(MSRC.Ranking.PlayerSkills,System.Int32)">
            <summary>
            Adds a the chronologically sorted list of skills for a new player with a specified unique player index.
            </summary>
            <param name="aPlayerSkills">A chronologically sorted list of skills for the player.</param>
            <param name="iPlayerID">The unique player ID.</param>
        </member>
        <member name="M:MSRC.Ranking.PlayerSkillsList.GetPlayerSkills(System.Int32)">
            <summary>
            Gets the list of skills for a given player ID.
            </summary>
            <param name="iPlayerID">The unique player ID.</param>
            <returns>The chronologically sorted list of skills for the player with the specified ID or null if 
            the player does not exists.</returns>
        </member>
        <member name="T:MSRC.Ranking.Ranking">
            <summary>
            A class that represents a ranking between n elements. In this class, rank 1 is assumed to be the highest rank. Moreover, it is possible
            that two elements are on the same rank. In this case, no rank gap is introduced; a valid ranking is thus 1,1,2,3 instead of 1,1,3,4.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Ranking.m_iRanks">
            <summary>
            The ranks of each element. Note that the ranks will always be between 1 and m_iRanks.Length.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Ranking.#ctor(System.Int32)">
            <summary>
            Constructs an identity ranking between a specified number of elements. The first element will be of highest rank and
            the last element will be of lowest rank.
            </summary>
            <param name="iNumberOfElements">Number of elements.</param>
        </member>
        <member name="M:MSRC.Ranking.Ranking.#ctor(System.Int32[])">
            <summary>
            Constructs a ranking based on the values given in an vector of nunbers.
            </summary>
            <param name="iElements">A list of integers.</param>
            <remarks>This method will have to call sorting routines so it may become slow when passed a long list of integers!</remarks>
        </member>
        <member name="M:MSRC.Ranking.Ranking.Factorial(System.Int32)">
            <summary>
            Computes the factorial of n.
            </summary>
            <param name="n">The parameter <c>n</c>.</param>
            <returns>The factorial of <c>n</c>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <c>n</c> is too large to represent n! as a long.</exception>
        </member>
        <member name="M:MSRC.Ranking.Ranking.GetWinner(System.Int32,System.Int32)">
            <summary>
            Compares the rank of two elements.
            </summary>
            <param name="i">Index of the first element.</param>
            <param name="j">Index of the second element.</param>
            <returns>Returns +1 is the first element is of higher rank than the second element, -1 if the 
            second element is of higher rank than the first element, or 0 if both elements are of same rank.</returns>
        </member>
        <member name="M:MSRC.Ranking.Ranking.Difference(MSRC.Ranking.Ranking)">
            <summary>
            Computes the difference to another ranking.
            </summary>
            <param name="aRanking">Ranking to be compared with.</param>
            <returns>A value between 0 and 1 indicating the difference between the two rankings.</returns>
            <remarks>The ranking difference will be computed as the fraction of pairs of elements where the two rankings disagree. This
            can be seen as the fractional difference between the number of swapping operations that bubble sort would take to sort each
            of the two rankings.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the rankings differ in the number of elements.</exception>
        </member>
        <member name="M:MSRC.Ranking.Ranking.Sort(System.Int32[],System.Int32[])">
            <summary>
            Bubble sort of a list of items relative to a list of keys. 
            </summary>
            <param name="iKeys">List of keys (this will be sorted in ascending order).</param>
            <param name="iItems">List of items (this will be sorted in ascending order relative to the list of keys).</param>
            <remarks>This sort is slow but stable (as opposed to <seealso cref="M:System.Array.Sort(System.Array,System.Array)"/>.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Ranking.Sort(System.Int32[])">
            <summary>
            Bubble sort of a list of keys. 
            </summary>
            <param name="iKeys">List of keys (this will be sorted in ascending order).</param>
            <remarks>This sort is slow but stable (as opposed to <seealso cref="M:System.Array.Sort(System.Array,System.Array)"/>.</remarks>
        </member>
        <member name="P:MSRC.Ranking.Ranking.Indicies">
            <summary>
            Zero-based indicies which reflect the rankings.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Ranking.NumberOfElements">
            <summary>
            Number of elements in the ranking.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Ranking.NumberOfEquivalenceClasses">
            <summary>
            Number of equivalent rankings.
            </summary>
        </member>
        <member name="T:MSRC.Ranking.Team">
            <summary>
            A class to represent a team of players together with their scores, the fraction of total game length that the player 
            participated and the amount by which the players's skill should be updated. Each player will be represented by a 
            unique integer ID. The score will be an integer value. The fraction of game time will be a double value between
            0 and 1. The amount by which the players's skill should be updated will be a double value between 0 and 1.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Team.m_aPlayerID">
            <summary>
            The variable size list of player ID's that form the team.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Team.m_aScore">
            <summary>
            The variable size list of player scores for each player on the team. 
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Team.m_aGameTimeFraction">
            <summary>
            The variable size list of player's fraction of the total game time that they participated.
            </summary>
        </member>
        <member name="F:MSRC.Ranking.Team.m_aUpdateFactors">
            <summary>
            The variable size list of player's update factors.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Team.#ctor(System.Int32)">
            <summary>
            Construcuts a new team with a given maximal number of players.
            </summary>
            <param name="iMaxNumberOfPlayers">Maximal number of players.</param>
            <remarks>If more than the specified number of players are added an exception will be thrown.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Team.#ctor">
            <summary>
            Construcuts a new team with a variable number of players.
            </summary>
        </member>
        <member name="M:MSRC.Ranking.Team.AddPlayer(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Adds a new player to the team.
            </summary>
            <param name="iPlayerID">Player ID of the new player.</param>
            <param name="iScore">Score of the new player.</param>
            <param name="dGameTimeFraction">Fraction of total game length that the player participated.</param>
            <param name="dUpdateFactor">Update factor for this player.</param>
            <returns>The player index of the added player.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Team.AddPlayer(System.Int32,System.Int32,System.Double)">
            <summary>
            Adds a new player to the team.
            </summary>
            <param name="iPlayerID">Player ID of the new player.</param>
            <param name="iScore">Score of the new player.</param>
            <param name="dGameTimeFraction">Fraction of total game length that the player participated.</param>
            <returns>The player index of the added player.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class. The update factor is set to 100%.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Team.AddPlayer(System.Int32,System.Int32)">
            <summary>
            Adds a new player to the team.
            </summary>
            <param name="iPlayerID">Player ID of the new player.</param>
            <param name="iScore">Score of the new player.</param>
            <returns>The player index of the added player.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class. The fraction of total game length of participation and the update
            factor are set to 100%.
            </remarks>
        </member>
        <member name="M:MSRC.Ranking.Team.GetPlayerID(System.Int32)">
            <summary>
            Get the player ID for a player at specified index.
            </summary>
            <param name="iPlayer">The player index.</param>
            <returns>The global player ID or -1 if the index is out of range.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class and increases everytime a player is added.</remarks>
        </member>
        <member name="M:MSRC.Ranking.Team.GetPlayerScore(System.Int32)">
            <summary>
            Gets the score for the player at a specified index.
            </summary>
            <param name="iPlayer">The player index.</param>
            <returns>The score of the player.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class and increases everytime a player is added.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the player index is out of range.</exception>
        </member>
        <member name="M:MSRC.Ranking.Team.GetPlayerGameTimeFraction(System.Int32)">
            <summary>
            Gets the fraction of game length that the player at a specified index participated.
            </summary>
            <param name="iPlayer">The player index.</param>
            <returns>The fraction of total game time of participation.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class and increases everytime a player is added.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the player index is out of range.</exception>
        </member>
        <member name="M:MSRC.Ranking.Team.GetUpdateFactor(System.Int32)">
            <summary>
            Gets the update factor of a player.
            </summary>
            <param name="iPlayer">The player index.</param>
            <returns>The update factor.</returns>
            <remarks>The player index must not be confused with the player ID. The player index is a zero-based
            internal index used by this class and increases everytime a player is added.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the player index is out of range.</exception>
        </member>
        <member name="P:MSRC.Ranking.Team.NumberOfPlayers">
            <summary>
            Total number of players in the team.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Team.TeamScore">
            <summary>
            Score of the team.
            </summary>
            <remarks>The score of a team is always the the sum of the scores of all players in the team.</remarks>
        </member>
        <member name="P:MSRC.Ranking.Team.PlayerIDs">
            <summary>
            All player IDs for the entire team.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Team.PlayerScores">
            <summary>
            Scores for every player on the team.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Team.GameTimeFractions">
            <summary>
            Fraction of game length that each player has participated.
            </summary>
        </member>
        <member name="P:MSRC.Ranking.Team.UpdateFactors">
            <summary>
            Update factors for each player.
            </summary>
        </member>
        <member name="T:xonline.common.stfutil.AccountsUtil.CCNumber">
             <summary>
             *** FOR INTERNAL MICROSOFT TEST ONLY ***
             This file will generate and validate credit card numbers based on the checksum.
             The credit card numbers created by this class are for internal test only. They
             will pass the checksum requirement but they are NOT real credit cards and they
             are useless in production or outside of Microsoft.
             NEVER attempt to use these cards in production or outside of Microsoft. You will
             not be able to purchase anything and you will be committing FRAUD.
             Immediately upon completion of testing, you must discard the credit card number.
            
             Vendors under NDA can also use these cards for test purposes only. This generator
             should not used outside of the MS network.
             </summary>
        </member>
        <member name="T:xonline.common.stfutil.DirectDebitRandomizer">
            <summary>
            This class provides properties to generate random credit card numbers
            </summary>
        </member>
        <member name="M:xonline.common.stfutil.DirectDebitRandomizer.#ctor">
            <summary>
            Default constructor - assumes France for the direct debit country
            </summary>
        </member>
        <member name="M:xonline.common.stfutil.DirectDebitRandomizer.#ctor(System.String)">
            <summary>
            Uses the country provided to randomize on
            </summary>
        </member>
        <member name="M:xonline.common.stfutil.DirectDebitRandomizer.#ctor(System.String,System.String)">
            <summary>
            Uses the country provided to randomize on
            </summary>
        </member>
        <member name="M:xonline.common.stfutil.DirectDebitRandomizer.Randomize">
            <summary>
            Generates a random direct debit account number, bank code, branch code, etc.
            These values are in the various properties of this class and are synched with each other to provide a valid direct debit account.
            </summary>
        </member>
        <member name="M:xonline.common.stfutil.DirectDebitRandomizer.RandomizeDirectDebitValues">
            <summary>
            Generates a random direct debit account number, bank code, branch code, etc.
            These values are in the various properties of this class and are synched with each other to provide a valid direct debit account.
            </summary>
        </member>
        <member name="M:xonline.common.stfutil.DirectDebitRandomizer.GetCheckDigitsForFranceAccount">
            <summary>
            Returns the Check Digits value based on the algorithm for a French direct debit account.
            </summary>
            <returns></returns>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.AccountNumber">
            <summary>
            The account number of the direct debit account
            </summary>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.AccountNumberLastFour">
            <summary>
            The last four digits of the account number
            </summary>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.BankCode">
            <summary>
            The bank code of the direct debit account
            </summary>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.BranchCode">
            <summary>
            The branch code of the direct debit account
            </summary>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.CheckDigits">
            <summary>
            The checksum of the direct debit account
            </summary>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.Country">
            <summary>
            The country of the direct debit account
            </summary>
        </member>
        <member name="P:xonline.common.stfutil.DirectDebitRandomizer.Algorithm">
            <summary>
            Alogrithm used to generate acct number
            </summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.Reflect">
            <summary>Standard reflection response.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.ResponseWait">
            <summary>Sleeps for param ms.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.ThrowUnhandledException">
            <summary>Throws an unhandled exception for IIS to catch.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.Exit">
            <summary>Call the Exit function, killing the IIS process (maybe).</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.ReturnStatus">
            <summary>Responds with the status code param.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.NoResponse">
            <summary>Does not send a response.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.ReflectHeaders">
            <summary>Reflects the headers from the request into the response headers.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.OutputBody">
            <summary>The response body will be param bytes.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.Stress">
            <summary>A quick response that only contains the URL and query string.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.ResponseXMLContentType">
            <summary>Changes the response to text/xml content type.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.AuthSGNoAAInfo">
            <summary>Does not do the AAInfo lookups for the AuthSG specifics.</summary>
        </member>
        <member name="F:xonline.common.protocol.TestFdReflectorRequest.Action.ReturnStatusAndResponseBody">
            <summary>Responds with the status code param.  Also place specific content in the response body.</summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Reporting\ReportingService_Readme.txt ===
ReportingService Proxy class was automatically generated by VSS wsdl and modified as follows:

1- Create the Proxy class using VSS WSDL to Proxy tool (in VSS console):

	wseWsdl3 http://xerprtiis001/ReportServer/ReportService.asmx /out:ReportingService.cs /l:CS /n:ServerTestFramework.STFLive.Reporting.Service	


2- Add the class and other objects/functions in the file to the namespace:

	ServerTestFramework.STFLive.Reporting.Service


3- Modify the ReportingService constructor as follows:

	/// Reporting Service constructor
        public ReportingService(string ReportUrl) {
            this.Url = "http://xerprtiis001/ReportServer/ReportService.asmx";
            if(ReportUrl != null){
                this.Url = ReportUrl;
            }
            
        }
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Reporting\Data\readme.txt ===
Please place any inherited classes from ReportingData in this directory.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Reporting\Events\readme.txt ===
Please place any classes inherited from ReportingEvent in this directory.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Reporting\Jobs\readme.txt ===
Please place any classes inherited from ReportingJob in this directory.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Reporting\Reports\readme.txt ===
Please place any classes inherited from XBLReport in this directory.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Utilities\dbposter\uodb-tables.ini ===
[t_users, partitioned]
3	bi_user_puid	bigint	8	0
0	bi_owner_puid	bigint	8	0
0	bi_machine_puid	bigint	8	0
0	bi_offline_xuid	bigint	8	0
0	vc_gamertag	nvarchar	16	0
0	dt_birthdate	datetime	8	0
1	ti_country_id	tinyint	1	0
0	i_language_id	int	4	0
0	i_culture_id	int	4	0
0	bin_acct_pin	binary	4	0
0	vc_billing_account_id	nvarchar	16	0
0	vc_billing_payinfo_id	nvarchar	16	0
0	si_ticket_flags	smallint	2	0
0	dt_acct_resume_date	datetime	8	0
0	i_suspension_length	int	4	0
0	dt_voice_resume_date	datetime	8	0
0	i_voice_ban_length	int	4	0
0	ti_name_change_required	tinyint	1	0
0	dt_created	datetime	8	11:45 PM 10/16/2003
0	ti_created_account_type	tinyint	1	0
0	dt_accepted_tos	datetime	8	0
0	dt_reset_date	datetime	8	0
0	i_billing_account_status	int	4	0
0	ti_account_type	tinyint	1	0
0	dt_xenon_migration	datetime	8	1
1	f_allow_xbox1_logon	tinyint	1	0
0	bi_user_passport_puid	bigint	8	0
0	bi_owner_passport_puid	bigint	8	0
0	f_flush_tickets	tinyint	1	0
0	i_friend_list_ver	int	4	0
0	i_friend_list_len	int	4	0
0	i_lockout_list_ver	int	4	0
0	i_lockout_list_len	int	4	0
0	dt_system_msg_read	datetime	8	0
0	i_num_user_msg	int	4	0
0	i_bounty_title_id	int	4	0
0	dt_bounty_change	datetime	8	0
0	i_parental_control_group_id	int	4	0
0	f_ms_opt_in	tinyint	1	0
0	f_partner_opt_in	tinyint	1	0
0	f_subscribed_alerts	tinyint	1	0
0	dt_last_activity	datetime	8	0
0	dt_last_web_activity	datetime	8	0
0	f_downgraded	tinyint	1	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0
0	f_geofence_exempt	tinyint	1	0
0	i_wholesale_partner_id	int	4	0
0	ti_has_pii_for_purchase	tinyint	1	0

[t_user_names, partitioned]
3	vc_gamertag	nvarchar	16	0
0	bi_user_puid	bigint	8	0
0	dt_expires	datetime	8	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0
0	vc_compressed_nickname	nvarchar	16	1

[t_user_keys, partitioned]
3	vc_gamertag	nvarchar	16	0
2	i_key_enc_key_version	int	4	0
2	i_key_version	int	4	0
0	bin_iv	binary	16	0
0	bin_key	binary	16	0
0	bin_ppa2	binary	8	0
0	bin_sppa1	binary	20	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_xenon_user_keys, partitioned]
3	vc_gamertag	nvarchar	16	0
2	i_key_enc_key_version	int	4	0
2	i_key_version	int	4	0
0	bin_iv	binary	16	0
0	bin_key	binary	16	0
0	bin_ppa2	binary	8	0
0	bin_sppa1	binary	20	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_machines, partitioned]
0	bi_machine_puid	bigint	8	0
3	vc_serial_num	nvarchar	12	0
0	dt_blocked_date	datetime	8	0
0	dt_reset_date	datetime	8	0
0	ti_beta_user	tinyint	1	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0
0	i_beta_title_id	int	4	1
0	i_cert_console_type	int	4	0
0	bin_cert_part_number	binary	16	0
0	dt_creation_date	datetime	8	0

[t_titles, mirrored]
3	i_title_id	int	4	0
0	ti_console_type_id	tinyint	1	0
0	dt_last_modified	datetime	8	0
0	dt_Change_datetime	datetime	8	0

[t_title_versions, mirrored]
3	i_title_id	int	4	0
2	i_base_version	int	4	0
0	i_update_version	int	4	0
0	i_beta_version	int	4	0
0	dt_Change_datetime	datetime	8	0
0	ti_console_type_id	tinyint	1	0

[t_title_offers, mirrored]
3	i_title_id	int	4	0
2	bi_offer_id	bigint	8	0
0	dt_Change_datetime	datetime	8	0

[t_alternate_titleids, mirrored]
3	i_title_id	int	4	0
2	i_title_region	int	4	0
2	i_media_id	int	4	0
0	i_live_title_id	int	4	0
0	i_alternate_id1	int	4	0
0	i_alternate_id2	int	4	0
0	i_alternate_id3	int	4	0
0	i_alternate_id4	int	4	0
0	i_service1	int	4	0
0	i_service1_alt_id	int	4	0
0	i_service2	int	4	0
0	i_service2_alt_id	int	4	0
0	i_service3	int	4	0
0	i_service3_alt_id	int	4	0
0	i_service4	int	4	0
0	i_service4_alt_id	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_subscriptions, partitioned]
3	bi_primary_puid	bigint	8	0
2	bi_offer_id	bigint	8	0
2	i_instances	int	4	0
2	vc_svc_instance_id	nvarchar	16	0
0	i_puid_is_machine	int	4	0
2	dt_start_date	datetime	8	0
0	dt_end_date	datetime	8	0
0	i_subscription_status_id	int	4	0
0	i_transaction_flags	int	4	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_sites, mirrored]
2	i_site_id	int	4	0
0	vc_kerb_service_name	nvarchar	30	0
0	vc_kerb_domain_name	nvarchar	30	0
0	vc_description	nvarchar	100	1
0	vc_ip	nvarchar	15	0
0	dt_created	datetime	8	0
0	i_authdata_version	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_services, mirrored]
3	i_service_id	int	4	0
0	vc_kerb_service_name	nvarchar	30	0
0	vc_kerb_domain_name	nvarchar	30	0
0	vc_description	nvarchar	30	0
0	i_machine_only	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_offers, mirrored]
3	bi_offer_id	bigint	8	0
0	ti_console_type_id	tinyint	1	0
0	dt_start_date	datetime	8	0
0	dt_end_date	datetime	8	0
0	i_offer_type_id	int	4	0
0	i_offer_frequency_id	int	4	0
0	b_cancelable	bit	1	0
0	i_ESRB_id	int	4	0
0	i_bitfilter	int	4	0
0	i_install_size	int	4	0
0	i_package_size	int	4	0
0	vb_sym_key	varbinary	16	0
0	i_policy_flags	int	4	0
0	vc_billing_svc_component_id	nvarchar	36	0
0	vc_friendly_name	nvarchar	150	0
0	si_global_offer_details	smallint	2	0
0	vb_public_key	varbinary	284	0
0	dt_Change_datetime	datetime	8	0

[t_offer_services, mirrored]
3	bi_offer_id	bigint	8	0
2	i_service_id	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_service_instances, mirrored]
3	i_service_id	int	4	0
2	i_title_id	int	4	0
2	i_title_version	int	4	0
2	i_title_region	int	4	0
0	i_site_id	int	4	0
0	i_port	int	4	0
0	i_service_available	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_service_keys, mirrored]
3	i_key_type	int	4	0
2	vc_service_data1	nvarchar	200	0
2	vc_service_data2	nvarchar	200	0
0	i_site_id	int	4	1
0	i_ticket_lifetime_secs	int	4	1
2	i_master_key_version	int	4	0
2	i_key_version	int	4	0
0	bin_key	varbinary	256	0
0	dt_Change_datetime	datetime	8	0

[t_title_trust_constants, mirrored]
3	i_title_id	int	4	0
0	f_W2	float	8	0
0	f_W3	float	8	0
0	f_W4	float	8	0
0	f_W5	float	8	0
0	f_W6	float	8	0
0	f_W7	float	8	0
0	f_W8	float	8	0
0	f_W9	float	8	0
0	f_BaseUserTrust	float	8	0
0	f_MinorityQuorum	float	8	0
0	f_UserCompetitionAmp	float	8	0
0	f_PublisherCompetitionAmp	float	8	0
0	i_Lambda	int	4	0
0	i_BaseSessionTime	int	4	0
0	f_S1	float	8	0
0	f_S2	float	8	0
0	f_S3	float	8	0
0	f_S4	float	8	0
0	f_S5	float	8	0
0	f_S6	float	8	0
0	f_S7	float	8	0
0	f_S8	float	8	0
0	f_S9	float	8	0
0	bi_TotalSessions	bigint	8	0
0	bi_TotalSessionDisconnects	bigint	8	0
0	bi_TotalCompetitions	bigint	8	0
0	bi_TotalCompetitionNoShows	bigint	8	0
0	bi_SessionBase	bigint	8	0
0	bi_SessionXboxCount	bigint	8	0
0	bi_SessionSeconds	bigint	8	0
0	bi_SessionFreeForAll	bigint	8	0
0	i_TotalUsers	int	4	0
0	f_R2	float	8	0
0	f_R3	float	8	0
0	f_R4	float	8	0
0	f_R5	float	8	0
0	f_R6	float	8	0
0	f_R7	float	8	0
0	f_R8	float	8	0
0	f_R9	float	8	0
0	f_K	float	8	0
0	ti_lower_bottom	tinyint	1	0
0	ti_lower_mid	tinyint	1	0
0	ti_lower_top	tinyint	1	0
0	ti_mid_bottom	tinyint	1	0
0	ti_mid_top	tinyint	1	0
0	ti_upper_bottom	tinyint	1	0
0	ti_upper_mid	tinyint	1	0
0	ti_upper_top	tinyint	1	0
0	dt_Change_datetime	datetime	8	0

[t_user_trust_ratings, partitioned]
3	bi_user_puid	bigint	8	0
2	i_title_id	int	4	0
0	f_C1_SuccessfulSessionCount	real	4	0
0	f_C2_MinoritySessionCount	real	4	0
0	f_C3_FailedSessionCount	real	4	0
0	f_C4_ProblematicSessionCount	real	4	0
0	f_C5_UDPReportSessionCount	real	4	0
0	f_C6_DisconnectCount	real	4	0
0	f_C7_Type1SuspiciousCount	real	4	0
0	f_C8_Type2SuspiciousCount	real	4	0
0	f_C9_Type3SuspiciousCount	real	4	0
0	i_TotalSessions	int	4	0
0	i_TotalSessionDisconnects	int	4	0
0	i_TotalCompetitions	int	4	0
0	i_TotalCompetitionNoShows	int	4	0
0	i_SessionBase	int	4	0
0	i_SessionXboxCount	int	4	0
0	i_SessionSeconds	int	4	0
0	i_SessionFreeForAll	int	4	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_title_privileges, mirrored]
3	i_title_id	int	4	0
2	ti_privilege_id	tinyint	1	0
0	dt_Change_datetime	datetime	8	0

[t_user_privilege_restrictions, partitioned]
3	bi_user_puid	bigint	8	0
2	ti_privilege_id	tinyint	1	0
0	vc_restrictor	nvarchar	100	1
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_user_privilege_grants, partitioned]
3	bi_user_puid	bigint	8	0
2	ti_privilege_id	tinyint	1	0
0	vc_grantor	nvarchar	100	1
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_privileges, mirrored]
3	ti_privilege_id	tinyint	1	0
0	vc_name	nvarchar	50	0
0	dt_Change_datetime	datetime	8	0

[t_offer_privileges, mirrored]
3	bi_offer_id	bigint	8	0
2	ti_privilege_id	tinyint	1	0
0	dt_Change_datetime	datetime	8	0

[t_offer_privilege_restrictions, mirrored]
3	bi_offer_id	bigint	8	0
2	ti_privilege_id	tinyint	1	0
0	dt_Change_datetime	datetime	8	0

[t_title_privileges, mirrored]
3	i_title_id	int	4	0
2	ti_privilege_id	tinyint	1	0
0	dt_Change_datetime	datetime	8	0

[t_title_services, mirrored]
3	i_title_id	int	4	0
2	i_service_id	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_free_trials, mirrored]
3	i_free_trial_id	int	4	0
0	ti_country_id	tinyint	1	0
0	i_tier_id	int	4	0
0	dt_start_date	datetime	8	0
0	dt_end_date	datetime	8	0
0	dt_Change_datetime	datetime	8	0

[t_free_trial_services, mirrored]
3	i_free_trial_id	int	4	0
2	i_service_id	int	4	0
0	dt_Change_datetime	datetime	8	0

[t_free_trial_privileges, mirrored]
3	i_free_trial_id	int	4	0
2	ti_privilege_id	tinyint	1	0
0	dt_Change_datetime	datetime	8	0

[t_voucher_status, mirrored]
3	i_voucher_status_id	int	4	0
2	vc_name	nvarchar	30	0
0	dt_Change_datetime	datetime	8	0

[t_vouchers, partitioned]
3	bin_voucher_hash	binary	20	0
2	bi_offer_id	bigint	8	0
0	i_use_count	int	4	0
0	i_voucher_status_id	int	4	0
0	f_in_scg	tinyint	1	0
0	f_console_version	tinyint	1	0
0	si_hash_bucket	smallint	2	0
0	dt_Change_datetime	datetime	8	0

[t_user_per_service_type_data,partitioned]
3	bi_user_puid	bigint	8	0
2	ti_service_type	tinyint	1	0
0	dt_accepted_tos	datetime	8	0
0	dt_provisioned	datetime	8	0
0	dt_suspend_until	datetime	8	0
0	dt_last_suspended	8	0
0	i_times_suspended	int	4	0
0	dt_last_web_activity	8	0
0	si_hash_bucket	smallint	2	0
0	dt_change_datetime	datetime	8	0
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Utilities\FclFuzzer\FclDefinitions.xml ===
﻿<?xml version="1.0"?>
<!-- SWI Provided General Definition Table -->
<ElementDefinitions>
  <!-- Base Data Types: Byte -->
  <ElementDefinition Name="Byte" Characteristics="Singleton" NativeType="System.Byte" />

  <!-- Base Data Types: Integers -->
  <ElementDefinition Name="Integer" Characteristics="Singleton" NativeType="System.Int64"/>
  <ElementDefinition Name="UnsignedInteger" Characteristics="Singleton" NativeType="System.UInt64"/>

  <!-- Base Data Types: Floating Point -->
  <ElementDefinition Name="Float" Characteristics="Singleton" NativeType="System.Double"/>
  <ElementDefinition Name="Decimal" Characteristics="Singleton" NativeType="System.Decimal"/>

  <!-- Base Data Types: Booleans -->
  <ElementDefinition Name="Boolean" Characteristics="Singleton" NativeType="System.Boolean"/>

  <ElementDefinition Name="ByteArray" Characteristics="Singleton" NativeType="System.String"/>

  <ElementDefinition Name="Email" Characteristics="Singleton" NativeType="System.String"/>

  <!-- Base Data Types: ushort -->
  <ElementDefinition Name="ushort" Characteristics="Singleton" NativeType="System.UInt16"/>
  <!-- Base Data Types: uint -->
  <ElementDefinition Name="uint" Characteristics="Singleton" NativeType="System.UInt32"/>
  <!-- Base Data Types: DateTime -->
  <ElementDefinition Name="DateTime" Characteristics="Singleton" NativeType="System.DateTime"/>
  <!-- Base Data Types: Booleans -->

  <!-- Base Data Types: Booleans -->


  <!-- Base Data Types: Strings -->
  <ElementDefinition Name="Character" Characteristics="Singleton" NativeType="System.Char"/>
  <ElementDefinition Name="String" Characteristics="Severable" NativeType="System.String"/>
  <ElementDefinition Name="StringTerminator" Characteristics="Singleton" Base="Character"/>


  <!--user defined DATA type you can Add email here  -->

  <!-- Derived Data Types: Paths -->
  <ElementDefinition Name="FilePath" Base="String" />

  <!-- Derived Data Types: URLs -->
  <ElementDefinition Name="Url" Base="String" />

  <!-- Derived Data Types: Sizes -->
  <ElementDefinition Name="Size" Characteristics="Singleton" Base="UnsignedInteger" />

  <!-- Derived Data Types: Offsets -->
  <ElementDefinition Name="Offset" Characteristics="Singleton" Base="Integer" />

  <!-- Derived Data Types: Counts -->
  <ElementDefinition Name="Count" Characteristics="Singleton" Base="UnsignedInteger"/>

  <!-- Derived Data Types: Indices -->
  <ElementDefinition Name="Index" Characteristics="Singleton" Base="Integer" />
  <ElementDefinition Name="UnsignedIndex" Characteristics="Singleton" Base="UnsignedInteger" />

  <!-- Encapsulation Types -->
  <!-- Sized block encapsulations have two references: 
           Size: Reference to the size token
           Contents: Reference to the contents as ByteArray -->
  <ElementDefinition Name="SizedBlock" Characteristics="Encapsulation" />

</ElementDefinitions>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Utilities\FclFuzzer\FclStrategy.xml ===
﻿<?xml version="1.0"?>
<AttackStrategy>
    <AttackList Type="Email">
        <GenericAttack Weight="1" RequiredCharacteristics="SizeIncrease" IncludeAncestralManipulationsThrough="ByteArray">ServerTestFramework.Utilities.FclFuzzer.Manipulations.Email.RandomMutation</GenericAttack>
        <GenericAttack Weight="1" RequiredCharacteristics="None" ExcludedCharacteristics="Structural" IncludeAncestralManipulationsThrough="String"/>
    </AttackList>
</AttackStrategy>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\Utilities\FclFuzzer\FclTransformations.xml ===
﻿<?xml version="1.0"?>
<!-- SWI Provided General Transformation Table -->
<DataTransformations>
  <DataTransformation Name="AnsiStringTransformation" ElementSize="1" Characteristics="PartialTransformationValid" SourceDefinition="ByteArray"  OutputDefinition="String" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToAnsiTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.AnsiToByteTransformation" />
  <DataTransformation Name="AnsiCharacterTransformation" ElementSize="1" SourceDefinition="ByteArray"  OutputDefinition="Character" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToAnsiCharacterTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.AnsiCharacterToByteTransformation" />
  <DataTransformation Name="UnicodeStringTransformation" ElementSize="2" Characteristics="PartialTransformationValid"  SourceDefinition="ByteArray"  OutputDefinition="String" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToUnicodeTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnicodeToByteTransformation" />
  <DataTransformation Name="UnicodeCharacterTransformation" ElementSize="2" SourceDefinition="ByteArray"  OutputDefinition="Character" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToUnicodeCharacterTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnicodeCharacterToByteTransformation" />
  <DataTransformation Name="DoubleStringTransformation" Characteristics="VariableSize" SourceDefinition="String"  OutputDefinition="Float" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.StringToDoubleTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.DoubleToStringTransformation" />
  <DataTransformation Name="DecimalStringTransformation" Characteristics="VariableSize" SourceDefinition="String"  OutputDefinition="Decimal" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.StringToDecimalTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.DecimalToStringTransformation" />
  <DataTransformation Name="DoubleByteTransformation" ElementSize="8" SourceDefinition="ByteArray"  OutputDefinition="Float" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToDoubleTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.DoubleToByteTransformation" />
  <DataTransformation Name="FloatByteTransformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="Float" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToFloatTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.FloatToByteTransformation" />
  <DataTransformation Name="DecimalByteTransformation" ElementSize="16" SourceDefinition="ByteArray"  OutputDefinition="Decimal" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToDecimalTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.DecimalToByteTransformation" />
  <DataTransformation Name="IntegerStringTransformation" Characteristics="VariableSize" SourceDefinition="String"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.StringToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToStringTransformation" />
  <DataTransformation Name="IntegerBeInt64Transformation" ElementSize="8" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeInt64ToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToBeInt64Transformation" />
  <DataTransformation Name="IntegerLeInt64Transformation" ElementSize="8" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeInt64ToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToLeInt64Transformation" />
  <DataTransformation Name="IntegerBeInt32Transformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeInt32ToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToBeInt32Transformation" />
  <DataTransformation Name="IntegerLeInt32Transformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeInt32ToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToLeInt32Transformation" />
  <DataTransformation Name="IntegerBeInt16Transformation" ElementSize="2" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeInt16ToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToBeInt16Transformation" />
  <DataTransformation Name="IntegerLeInt16Transformation" ElementSize="2" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeInt16ToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToLeInt16Transformation" />
  <DataTransformation Name="IntegerByteTransformation" ElementSize="1" SourceDefinition="ByteArray"  OutputDefinition="Integer" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.IntegerToByteTransformation" />
  <DataTransformation Name="UnsignedIntegerStringTransformation" Characteristics="VariableSize" SourceDefinition="String"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.StringToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToStringTransformation" />
  <DataTransformation Name="UnsignedIntegerBeUInt64Transformation" ElementSize="8" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeUInt64ToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToBeUInt64Transformation" />
  <DataTransformation Name="UnsignedIntegerLeUInt64Transformation" ElementSize="8" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeUInt64ToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToLeUInt64Transformation" />
  <DataTransformation Name="UnsignedIntegerBeUInt32Transformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeUInt32ToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToBeUInt32Transformation" />
  <DataTransformation Name="UnsignedIntegerLeUInt32Transformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeUInt32ToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToLeUInt32Transformation" />
  <DataTransformation Name="UnsignedIntegerBeUInt16Transformation" ElementSize="2" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeUInt16ToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToBeUInt16Transformation" />
  <DataTransformation Name="UnsignedIntegerLeUInt16Transformation" ElementSize="2" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeUInt16ToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToLeUInt16Transformation" />
  <DataTransformation Name="UnsignedIntegerByteTransformation" ElementSize="1" SourceDefinition="ByteArray"  OutputDefinition="UnsignedInteger" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToUnsignedIntegerTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.UnsignedIntegerToByteTransformation" />
  <DataTransformation Name="BooleanByteTransformation" ElementSize="1" SourceDefinition="ByteArray"  OutputDefinition="Boolean" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.ByteToBooleanTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BooleanToByteTransformation" />
  <DataTransformation Name="BooleanLeUInt32Transformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="Boolean" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.LeUInt32ToBooleanTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BooleanToLeUInt32Transformation" />
  <DataTransformation Name="BooleanBeUInt32Transformation" ElementSize="4" SourceDefinition="ByteArray"  OutputDefinition="Boolean" Transformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BeUInt32ToBooleanTransformation" ReverseTransformation="MS.Swi.FuzzerCommonLibrary.Analysis.Transformations.BooleanToBeUInt32Transformation" />
</DataTransformations>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLive\xsts\issueRequestBase.xml ===
<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:a="http://www.w3.org/2005/08/addressing">
  <s:Header>
    <a:Action s:mustUnderstand="1">http://docs.oasis-open.org/ws-sx/ws-trust/200512/RST/Issue</a:Action>
    <a:MessageID>urn:uuid:{0}</a:MessageID>
    <a:ReplyTo>
      <a:Address>http://www.w3.org/2005/08/addressing/anonymous</a:Address>
    </a:ReplyTo>
    <a:To s:mustUnderstand="1">http://activeauth.xboxlive.com/{1}</a:To>
  </s:Header>
  <s:Body>
{2}
  </s:Body>
</s:Envelope>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\stf.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<stf>
    <core>
        <!-- This allows you to customize the logline prefix for output generated by STF. Each field is optional, and if absent a sane default is used. -->
        <LogLinePrefix LineFormat="[%date% %path%] " DateFormat="M-d H:mm:ss"/>

        <!-- This controls whether test assemblies are loaded directly from the file or whether they loaded into memory first to prevent a file lock.  Some debuggers have problems when loaded from memory. -->
        <LoadAssembliesDirectly>true</LoadAssembliesDirectly>
    </core>

    <interfaces>
    <!--
    You can override NPDB interfaces in this section. This applies to IP and VIP entries.
    Please refer to the following files for lists of possible interfaces:
        VirtualInterface.cs - for VIP overrides
        Interface.cs        - for IP overrides
        Component.cs        - for components (no overrides but used in some XConfig calls)

        t_server_nics                   - for real machine IP addresses
        t_site_virtual_interface_ips    - for VIP addresses

    Sample override for both VIP (all machines) and IP (direct machine):
        <interface name='xmatchfd' port='10060'>
            <vip>10.198.102.82</vip>
            <ip>10.20.1.9</ip>
        </interface>
    -->
    </interfaces>

    <config>
        <regressiondb>
            <ip>XETESTSQL001</ip>
        </regressiondb>

        <!--
        List all possible environments, and configuration information about the environment.
        environment: The name of the environment.
        npdbip: The ip of the npdb to retrieve configuration information from.
        npdbname: The SQL name of the npdb database.
        webstoresite: The name of the webstore site to use.  Leave blank to not set the site, which should cause webstore to use the default.
        -->
        <configenv environment="TestNet"          npdbip="TxXblXallSql101" />
        <configenv environment="StressNet1"       npdbip="S1XblNpdbSql801" />
        <configenv environment="StressNet2"       npdbip="S2XblNpdbSql801" />
        <configenv environment="HyperTestNetMain" npdbip="TnmXallSql001"   />
        <configenv environment="HyperTestNetShip" npdbip="TnsXallSql001"   />
        <configenv environment="Int"              npdbip="InXblXallSql001" />
        <configenv environment="Xblob"            npdbip="#XBLOB_IP#"      isxblob="true" />
        <configenv environment="None"             npdbip=""                />

        <!--
        The "bulkusers" tag lets you specify a set of users, created with the CreateBulkUsers tool,
        to be used in your tests.  The "tag" attribute is optional and only assists you in differentiating
        sets of users.  Samples:

        <bulkusers basepuid="0x9000000019daa" count="200000" prefix="bu" tag="xenon" />
        <bulkusers basepuid="0x90000001ecd58" count="200000" prefix="bu" tag="xbox1" />
        -->

        <!--
        <passportloginurl environment="TestNet">https://login.passport-int.com/ppsecure/clientpost.srf?id=63264&amp;wp=mbi</passportloginurl>
        <passportloginurl environment="Xblob">https://login.passport-int.com/ppsecure/clientpost.srf?id=62538&amp;wp=mbi</passportloginurl>
        -->

        <!--
        Emulator settings
        <setting name="UseMusicNetEmulator" value="true" />
        -->

        <xlfs server="127.0.0.1" port="81" />
    </config>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\obj\i386\STFLiveConfig.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFLiveConfig.dll
j:\xonline_main\private\test\StfTests\lib\STFLiveConfighelp.xml
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\obj\i386\STFLiveConfig.dll
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\obj\i386\STFLiveConfighelp.xml
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\obj\i386\STFLiveConfighelp.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>STFLiveConfig</name>
    </assembly>
    <members>
        <member name="T:ServerTestFramework.LiveService.AppLogReader">
            <summary>
            This class, given a component, and a call to GetLogs, will provide server applogs for a given time range. 
            If you want to add additional folders to pull from for a component, check out the GetComponentFolderNames method.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.#ctor(System.String)">
            <summary>
            Standard constructor, takes a component name.
            </summary>
            <param name="componentName"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.GetLogs(System.DateTime,System.DateTime)">
            <summary>
            After the object has been initialized against a specific component, this method grabs logs from the servers 
            associated with that component, filtering only the files and lines beginning with sTime and ending with eTime.
            Times should be in UTC to match the server log times. If not, they will be converted to UTC using DateTime.ToUniversalTime
            </summary>
            <param name="sTimeUtc"></param>
            <param name="eTimeUtc"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.GetLogFiles(System.Net.IPEndPoint)">
            <summary>
            Gets the log files that we need to go over for a given component.
            </summary>
            <param name="ipEp"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.GetComponentFolderNames">
            <summary>
            Maps a component to a folder name(s)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.ReadAllLines(System.String,System.DateTime,System.DateTime)">
            <summary>
            File.ReadAllLines yells when XomLogging is actively still writing to a file (a common case).
            Plus we want to filter on the timestamp.
            </summary>
            <param name="path"></param>
            <param name="sTime"></param>
            <param name="eTime"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ServerAppLogs">
            <summary>
            Server applog data for a single machine.
            </summary>
        </member>
        <member name="T:ServerTestFramework.DVTAttribute">
            <summary>
            This attribute can be applied to TestGroup or TestCase
            it stands for "Developer Verfication Test"
            </summary>
        </member>
        <member name="T:ServerTestFramework.BVTAttribute">
            <summary>
            This attribute can be applied to TestGroup or TestCase
            it stands for "Build Verfication Test"
            </summary>
        </member>
        <member name="T:ServerTestFramework.LocaleAgnosticAttribute">
            <summary>
            This attribute controls if the test node and all its child nodes are locale Agnostic.
            </summary>
        </member>
        <member name="T:ServerTestFramework.AllCountryLanguageAttribute">
            <summary>
            This attribute controls if the test node and all its child notes will be run against
            all supported Live Countries and language
            </summary>
        </member>
        <member name="T:ServerTestFramework.HResultException">
            <summary>
            Custom Exception class to carry and identify failures with an HResult
            </summary>
        </member>
        <member name="T:ServerTestFramework.XErrException">
            <summary>
            Custom Exception class to carry and identify failures with an X-Err
            </summary>
        </member>
        <member name="T:ServerTestFramework.ReloadOnEnvironmentChangeAttribute">
            <summary> Indicates that the test tree should be regenerated if the current environment changes.  Only applicable to the top-level node of a tree. </summary>
        </member>
        <member name="T:ServerTestFramework.CountryLanguage">
            <summary>
            The class is used for Local Agnostic testing
            </summary>
        </member>
        <member name="T:ServerTestFramework.Global">
            <summary>
            Provides various statics for the entire framework.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Global._SGIPMatchAddr">
            Instruction for adding new members to Global:
            (this is old... is it still relevant?)
            Members should inherit from InfiniteLifetimeMarshalByRefObject so they can be accessed across app domain.
            Fields should be and public. And Avoid static fields. Declare a static property to return its value
            from the singleton. If you must use MBV values, make sure they're copied into new app domains (see 
            RemoteTestSuiteLoader).
        </member>
        <member name="M:ServerTestFramework.Global.BlockUntilEnvironmentIsReady">
            <summary> This call will block until an environment is initially set in STFLiveConfig, or until the environment reset finishes if in the middle of a reset. </summary>
        </member>
        <member name="M:ServerTestFramework.Global.GetUserSet">
            <summary>
            Returns the BulkUserSet, if specified in the XML file. Grabs either the
            userset with tag "" or the first user set, if "" is not found.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetUserSet(System.String)">
            <summary>
            Returns the BulkUserSet, if specified in the XML file, for the given tag. This is
            user-settable, in the XML file, and allows for distinct user sets. You may want
            to create some Xenon and Xbox users, or partition them manually, etc.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetEnvironmentSettingsGroup">
            <summary>
            Returns an XML node for the "settingsgroup" node matching the current environment choice
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetSettingsGroup(System.String)">
            <summary>
            Returns an XML node for the "settingsgroup" node with the given name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.XErrToString(System.UInt32)">
            <summary>
            Converts an XErr returned by the server to a string (long live reflection!)
            </summary>
            <param name="XErr">Error code returned by the XOnline servers</param>
            <returns>A human readable string</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsole">
            <summary>
            Summary description for ManagementConsole.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.GetProcessIDs(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Returns a list of all process IDs in of the specified process name for a specific subProcess.
            </summary>
            <param name="target">The endpoint to query.</param>
            <param name="process">The process name, or null for no limitation.</param>
            <param name="subProcess">The component name.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.GetIISProcessIDs(System.Net.IPEndPoint,System.String)">
            <summary>
            Returns a list of all process IDs in w3wp for a specific subProcess.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnProcess(System.Net.IPEndPoint,System.String,System.String,System.String,System.String@)">
            <summary>
            Executes a management command on every machine of a specific type, for a specific process.  This will
              prepend the subCommand you provide with "e processid:", where processid is the process id of subProcess.
            For example, target might be the ip for xtou_int to get you the pool box that xtou lives on, subProcess
              might be "xtou" to get you the w3wp process id for xtou, and subCommand might be "xrlscan reload".  The
              final command that gets executed then would be something like: "e 12345:xrlscan reload".
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnIISProcess(System.Net.IPEndPoint,System.String,System.String,System.String@)">
            <summary>
            Executes a management command on every machine of a specific type, for a specific IIS process.  This will
              prepend the subCommand you provide with "e processid:", where processid is the process id of subProcess.
            For example, target might be the ip for xtou_int to get you the pool box that xtou lives on, subProcess
              might be "xtou" to get you the w3wp process id for xtou, and subCommand might be "xrlscan reload".  The
              final command that gets executed then would be something like: "e 12345:xrlscan reload".
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAllProcess(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            Executes a management command against all servers of a given interface for a specific process
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="process">The process to search for to determine the PID</param>
            <param name="subProcess">The sub-process to search for to determine the PID</param>
            <param name="subCommand">The command to execute</param>
            <param name="text">A list of all of the output generated by the commands</param>
            <returns>The boolean AND of the result of all the executions</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAllIISProcess(System.String,System.String,System.String,System.String@)">
            <summary>
            Executes a management command against all servers of a given interface for a specific IIS Process
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="subProcess">The process to search for to determine the PID</param>
            <param name="subCommand">The command to execute</param>
            <param name="text">A list of all of the output generated by the commands</param>
            <returns>The boolean AND of the result of all the executions</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.OpenManagementConnection(System.Net.IPEndPoint)">
            <summary>
            Opens a connection to the specified management server.
            </summary>
            <param name="target">The ip address to execute against.</param>
            <returns>A TcpClient that is connected to the management server.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.Execute(System.Net.IPEndPoint,System.String,System.String@)">
            <summary>
            Executes a management command against the given endpoint's ip address.  Does not actually use the port
            specified by the endpoint.
            </summary>
            <param name="target">The ip address to execute against.</param>
            <param name="command">The command to execute.</param>
            <param name="text">The response from executing the command.</param>
            <returns>True if the command executed successfully, false if it did not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.Execute(System.Net.Sockets.TcpClient,System.String,System.String@)">
            <summary>
            Executes a management command against the given connection, which must already be established.
            </summary>
            <param name="client">The connection to execute against.</param>
            <param name="command">The command to execute.</param>
            <param name="text">The response from executing the command.</param>
            <returns>The result of executing the command.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAll(System.String,System.String,System.String@)">
            <summary>
            Executes a management command against all servers of a given interface.
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="command">The command to execute</param>
            <returns>The boolean AND of the result of all the executions</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAll(System.String,System.String)">
            <summary>
            Executes a management command against all servers of a given interface.
            Yields results, thus requiring the entire list to be enumerated in order to be fully executed.
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="command">The command to execute</param>
            <returns>An IEnumerable&lt;XmgmtResponse&gt; that contains the results of the execution.</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsole.XmgmtResponse">
            <summary>
            A container for a response from an xmgmt command.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener">
            <summary>
            Attaches to a remote management console and receives trace/logs from it.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.ManagementListener._sockets">
            <summary>The sockets used for all connections.</summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.GetConnectionForEndpoint(System.Net.IPEndPoint)">
            <summary>
            Gets the Connection for a given endpoint.
            </summary>
            <param name="endpoint">The remote endpoint of the connection.</param>
            <returns>The Connection object for the endpoint.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.AcquireConnection(ServerTestFramework.LiveService.ManagementListener.Connection)">
            <summary>
            Increments the ref count on the connection.
            </summary>
            <param name="conn">The connection to acquire.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.BeginReceiveCallback(System.IAsyncResult)">
            <summary>
            Receives datagrams from the socket, parses them, and passes them along to the listeners.
            </summary>
            <param name="result">The async result object.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.ReleaseConnection(ServerTestFramework.LiveService.ManagementListener.Connection)">
            <summary>
            Decrements the ref count on the connection.
            </summary>
            <param name="conn">The connection to release.</param>
            <returns>True if the connection was destroyed, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.DestroyConnection(ServerTestFramework.LiveService.ManagementListener.Connection)">
            <summary>
            Destroys the given connection.
            </summary>
            <param name="conn">The connection to destroy.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.ConstructTargetString(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Constructs the target string given the two endpoints.
            </summary>
            <param name="remote">The management server endpoint.</param>
            <param name="local">The local listener endpoint.</param>
            <returns>A string that should be unique to the connection.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.ConstructListenerID(System.String,System.String)">
            <summary>
            Constructs an ID that should be unique to component and area.
            </summary>
            <param name="component">The component.</param>
            <param name="area">The area.</param>
            <returns>A string that should be unique to component and area.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTarget(System.Net.Sockets.TcpClient,System.String,System.String)">
            <summary>
            Checks for the target under the component on the server.
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is found, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTargetAreas(System.Net.Sockets.TcpClient,System.String,System.String)">
            <summary>
            Checks if the target is assigned to any areas under the component on the server.
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is assigned, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForArea(System.Net.Sockets.TcpClient,System.String,System.String)">
            <summary>
            Checks if the area is assigned to a component
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <param name="area">The area to check for.</param>
            <returns>True if the area is assigned, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.IsComponentManaged(System.Net.Sockets.TcpClient,System.String)">
            <summary>
            Checks whether the component is managed or unmanaged.
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <returns>True if the component is managed, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CreateTarget(System.Net.IPEndPoint,System.String,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Create a new Target
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="target">The name of the target.</param>
            <param name="targetParameters">The parameters assoicated with the target.</param>
            <param name="component">The component to listen to.</param>
            <param name="area">The area to listen to.</param>
            <param name="callback">The location to send received datagrams.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.RemoveTarget(System.Net.IPEndPoint,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Remove the target.  This does not delete the target, just removes it
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="target">The targetname.</param>
            <param name="component">The component to stop.</param>
            <param name="area">The area to stop.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.DeleteTargetIfNotUsed(System.Net.IPEndPoint,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Stops listening on a remote management server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="target">The name of the target.</param>
            <param name="component">The component to stop.</param>
            <param name="area">The area to stop.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CreateArea(System.Net.IPEndPoint,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Create a new Area
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="area">The name of the target.</param>
            <param name="areaSettings">The parameters assoicated with the target.</param>
            <param name="component">The component to add to.</param>
            <param name="callback">The location to send received datagrams.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.DeleteArea(System.Net.IPEndPoint,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Delete area.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="area">The area.</param>
            <param name="component">The component containing area.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.Listen(System.Net.IPEndPoint,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Initiate listening on a remote management server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to listen to.</param>
            <param name="area">The area to listen to.</param>
            <param name="callback">The location to send received datagrams.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.Stop(System.Net.IPEndPoint,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Stops listening on a remote management server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to stop.</param>
            <param name="area">The area to stop.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.GetXmgmtEndPoints(System.String)">
            <summary>
            Retrieves a list of endpoints for xmgmt for all servers of a specific interface.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTarget(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Checks for the target under the component on the server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is found, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTargetAreas(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Checks if the target is assigned to any areas under the component on the server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is assigned, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForArea(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Checks for area
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to check.</param>
            <param name="area">The area to check for.</param>
            <returns>True if the area is assigned, false if not.</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener.Connection">
            <summary>A 'connection' to a management server.</summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener.Datagram">
            <summary>A packet of data received from the management server.</summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.ManagementListener.Datagram.UserData">
            <summary>Can be used to store data useful to a consumer of the service.</summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener.ListenerCallback">
            <summary>
            A callback for the Listener, called every time a datagram is received.
            Done on .Net worker threads, please be quick in consuming them and realize that multiple callbacks
            can occur at once on different threads.  Receiving a null datagram means that no more will be received.
            </summary>
            <param name="datagram">The packet of data received.</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsoleException">
            <summary>
            An exception in the ManagementConsole class.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListenerException">
            <summary>
            An exception in the ManagementListener class.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.ManagementListenerException.XmgmtResponse">
            <summary>The xmgmt response associated with this exception, if any.</summary>
        </member>
        <member name="T:ServerTestFramework.TestRunInfo">
            <summary>
            A small class contains test runtime data.
            For now we have country id and language id only
            </summary>
        </member>
        <member name="T:ServerTestFramework.NodeTaggingDataHelper">
            <summary>
            A static helper class to retrieve attribute values from NodeTaggingData
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestNodeLive">
            <summary>
            The fundamental unit that makes up test groups and test cases for Xbox Live.
            A node can be either be executed or can contain any number of other nodes as children.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestNodeLive.Run(ServerTestFramework.RUN_TYPE)">
            <summary>
            Called to execute the test.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestNodeLive.Run(ServerTestFramework.TestRunInfo)">
            <summary>
            This one is executed for locale agnostic tests 
            and AllCountryLanguage tests (tests are run against all supported countries and languages)
            </summary>
            <returns>test result</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.XConfig">
            <summary>
            Summary description for XConfig.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.CheckNpdbAccessibility">
            <summary>
            Does a relatively quick check for whether we can talk to the NPDB machine or not.
            The timeout period for making an NPDB call (via SQL) when the server is not available
            is over 1 minute on my machine. This should time out in a couple of seconds. That is
            oh-so-much more tolerable.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.XConfig._virtualInterfaceRedirections">
            <summary>
            A separate list of virtual interface overrides that can be changed programmatically.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.RedirectVirtualInterfaces(System.Collections.Generic.Dictionary{System.String,System.Net.IPEndPoint})">
            <summary>
            Will override all GetVirtualInterface calls for the given vinterface names to the specified IP endpoints.
            The port will be changed only if it isn't IPEndPoint.MinPort (0).
            
            The Dictionary is assumed to be invariant; making changes to it after passing it in can result in
            thread safety issues.  To change the redirections, create a new Dictionary.
            </summary>
            <param name="destinations">The pairs of vinterface names and their new address.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.RestoreOverrideSettingState(ServerTestFramework.LiveService.SettingState)">
            <summary>
            Restores the overridden setting to the state that it was before.
            </summary>
            <param name="state">The state before the override.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingAdd(System.String,System.String,System.String,System.String,System.String,System.String)">
             MultiSettingAdd:
             Add a given multisetting to t_multisetting_overrides
            
             Parameters:
                environment - vc_environment of Live Server environment
                component - vc_component of Live Server component
                site - i_site_id of Live Server site id
                server - vc_server of Live Server server
                multisetting - vc_multisetting to add
                value - vc_value for the multisetting
            
             Returns n/a
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingAddBase(System.String,System.String)">
            MultiSettingAddBase:  Add a given multisetting to t_multisettings
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingDelete(System.String,System.String,System.String,System.String,System.String)">
             MultiSettingDelete: 
             Delete a given multisetting from t_multisetting_overrides (for a given environment)      
            
             Parameters:
                environment - vc_environment of Live Server environment
                component - vc_component of Live Server component
                site - i_site_id of Live Server site id
                server - vc_server of Live Server server
                multisetting - vc_multisetting to delete
            
             Returns n/a
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingDeleteValue(System.String,System.String,System.String,System.String,System.String,System.String)">
             MultiSettingDelete: 
             Delete a specific multisetting from t_multisetting_overrides (for a given environment)      
            
             Parameters:
                environment - vc_environment of Live Server environment
                component - vc_component of Live Server component
                site - i_site_id of Live Server site id
                server - vc_server of Live Server server
                multisetting - vc_multisetting to delete
                value - vc_value to delete
            
             Returns n/a
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.ForceConfigReload(System.String)">
            <summary>
            Uses xmgmt to force a config reload on all servers that expose the given interface.
            </summary>
            <param name="targetInterface">The interface that needs to reload its config.</param>
        </member>
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_CATALOGWATCHER_INVALID_ID">
            <summary>
            Catalog Watcher Events                                                      = 0x80175xxx
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_MIX_UNKNOWNERROR">
            <summary>
            Mix Common HResults                                                          = 0x80176xxx
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:ServerTestFramework.LiveService.HResult.XONLINE_E_FML_UNKNOWN_ERROR" -->
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_ESP_ENGINE_UNKNOWN_ERROR">
            <summary>
            FAST ESP Engine Events                                                      = 0x80178xxx
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_MARKETPLACECATALOG_UNKNOWN_ERROR">
            <summary>
            Marketplace Catalog Events                                                  = 0x80179xxx
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.XOn">
            <summary>
            This XOn derived class is provided here exclusively so that
            anyone that imports ServerTestFramework.LiveService is able
            to access the XOn class without having to add an additional
            using statement.  This should eventually be removed.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserFlagsUtil">
            <summary>
            Provides methods to query and update the userflags array in
            a user object.
            </summary>
            <remarks>
            The user flags are layed out as follows
              BitArray: XXLLLLLP TTTTSNBV CCCCCCCC DDDOOOGG 
                L - User Language
                P - Parentally Controlled
                T - TierId
                S - Shared Content
                N - Nickname
                B - Purchase
                V - User Voice
                C - CountryId
                D - Disconnect Rating
                O - nO show rating
                G - Guest Number
                X - Unused (should be zero)
            </remarks>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_GUEST_MASK">
            <summary>
            The mask for the user flag which indicates if the user is a guest
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_NOSHOW_RATING_MASK">
            <summary>
            The mask for the user flag which indicates the UserNoShowRating
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_DISCONNECT_RATING_MASK">
            <summary>
            The mask for the user flag which indicates the UserDisconnectRating
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_COUNTRY_MASK">
            <summary>
            The mask for the user country id in the user flags
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_VOICE_MASK">
            <summary>
            The mask for the user flag which indicates if user voice is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_PURCHASE_MASK">
            <summary>
            The mask for the user flag which indicates if user purchase is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_NICKNAME_MASK">
            <summary>
            The mask for the user flag which indicates if user nickname is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_SHARED_CONTENT_MASK">
            <summary>
            The mask for the user flag which indicates if shared content is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_TIERID_MASK">
            <summary>
            The mask for the user TierId in the user flags
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_PARENTAL_CONTROLLED">
            <summary>
            The mask for the user flag which indicates if the account is parentally controlled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_LANGUAGE_MASK">
            <summary>
            The mask for the user langage in the user flags
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Utilities.DeterministicRandom">
            <summary>
            Generates random numbers, but keeps track of enough information to recreate any specific event.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._rand">
            <summary>The random number generator.</summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._seed">
            <summary>The value used to seed the generator.</summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._iterations">
            <summary>The number of times a function was called on the generator.</summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.#ctor">
            <summary>
            Creates a new DeterministicRandom using the current time as a seed value.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.#ctor(System.Int32)">
            <summary>
            Creates a new DeterministicRandom using the given value as a seed.
            </summary>
            <param name="seed">The value to use as a seed.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Reset">
            <summary>
            Resets the state of the DeterministicRandom.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next(System.Int32,System.Int32)">
            <summary>
            Gets a random int in the range [minValue, maxValue).
            </summary>
            <param name="minValue">The inclusive minimum value to generate.</param>
            <param name="maxValue">The exclusive maximum value to generate.</param>
            <returns>An integer in the range [minValue, maxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next(System.Int32)">
            <summary>
            Gets a random int in the range [0, maxValue).
            </summary>
            <param name="maxValue">The exclusive maximum value to generate.</param>
            <returns>An integer in the range [0, maxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next">
            <summary>
            Gets a random int.
            </summary>
            <returns>An int in the range [0, int.MaxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextByte">
            <summary>
            Gets a random byte.
            </summary>
            <returns>A random byte in the range [0, 255].</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextLong">
            <summary>
            Gets a random long.
            </summary>
            <returns>A random long in the range [0, long.MaxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextDouble">
            <summary>
            Gets a random double.
            </summary>
            <returns>A double in the range [0, 1)</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextBytes(System.Byte[])">
            <summary>
            Fills the given array with random bytes.
            </summary>
            <param name="bytes">The array to fill with random bytes.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="length">The number of bytes after offset to consider for change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="offset">The offset from the beginning of the array to start from.</param>
            <param name="length">The number of bytes after offset to consider for change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="P:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Seed">
            <summary>
            Gets or sets the seed value.  Setting the value to -1 causes a time based number to be chosen.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Iterations">
            <summary>
            Gets the number of times a function was called on the generator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.FakeLogVault">
            <summary> Uses xmgmt remote output to generate a log-vault like directory for a component. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.#ctor(System.String,System.String,System.String[],System.String,System.UInt32)">
            <summary> Sets up creation of local files from xmgmtc output for a set of areas on all servers for an (xmgmt accessible) list of IPs.  If flushIntervalInSeconds is 0, flushing must be called manually. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.#ctor(System.Net.IPEndPoint[],System.String,System.String[],System.String,System.UInt32)">
            <summary> Sets up creation of local files from xmgmtc output for a set of areas on all servers for an (xmgmt accessible) interface.  If flushIntervalInSeconds is 0, flushing must be called manually. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.Dispose">
            <summary> Stops collecting output and flushes anything remaining. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.FlushLogs">
            <summary> Flushes all collected logs to files.  Returns the list of files that were written to.  </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ValueCheck">
            <summary>
            Class containing overloaded Test methods that compare a value with another taht was expected 
            and throw descriptive ExpectedValueCheckExceptions when they don't match.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.BulkUserSetBase">
            
             Class to represent a set of bulk users. These users a represented as a base
             ID and are gauranteed to have a few useful properties:
             
             1: PUIDs in the range Base + [0,n) offset where Base is the base offset of the set
                 and n is the count of users in the set.
             2: Web Puids in the range 0x0001ffffffffffff + BaseLow + [0,n] where BaseLow is the lo 32 bit
                 value of the PUID. This is done to gaurantee unique web IDs that are distiguishable from
                 normal user PUIDs.
             3: Gamertags where the first 2 bytes are the passed in prefix, and the last 13 bytes are a base
                 32 encoding of the PUID. This is done to allow username/puid calculation from the PUID/gamertag 
                 without database reads. Use the built-in methods this class for help in doing this.
            
        </member>
        <member name="T:ServerTestFramework.Database.DatabaseException">
            <summary>
            Helper exception for database related errors
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlException)">
            <summary>
            Construct a new database exception describing all of the errors
            </summary>
            <param name="conn">Database connection that threw the error</param>
            <param name="ex">Sql exception object to be described</param>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Construct a new database exception for the given connection.
            </summary>
            <param name="conn">Database connection that threw the error</param>
            <param name="message">Specific message to attach to the exception</param>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.String)">
            <summary>
            Construct a new database exception.
            </summary>
            <param name="message">Specific message to attach to the exception</param>
        </member>
        <member name="T:ServerTestFramework.Database.ServerNames">
            <summary>
            Collection of strings, each representing the name of a server.  This enforces a type on the collection.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.Npdb">
            <summary>
            This is a wrapper class for talking to the NPDB.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetServerListByInterface(System.String,System.String)">
            <summary>
            Retrieves all servers that exist for a specified environment and interface.
            </summary>
            <param name="environment">Environment to query for.</param>
            <param name="interface">Interface to query for.</param>
            <returns>A Collection of strings, each containing the name of a server exposing the interface.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.UInt32)">
            <summary>
            Retrieves all interface buckets for a specified Title ID
            </summary>
            <param name="titleId">Title Id</param>
            <returns>A collection of InterfaceBucket objects.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.UInt32,System.String)">
            <summary>
            Retrieves interface buckets for a specific Title id in a specific environment.
            </summary>
            <param name="titleId">Title Id</param>
            <param name="environment">Environment name (eg: "testnet")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.String)">
            <summary>
            Retrieves all interface buckets for a specified environment
            </summary>
            <param name="environment">Environment name (eg: "testnet")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.String,System.String)">
            <summary>
            Retrieves interface buckets based on the environment name and interface
            </summary>
            <param name="environment">Environment name (eg: "testnet")</param>
            <param name="interfaceName">Interface name (eg: "libsvr")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.Data.SqlClient.SqlCommand)">
            <summary>
            Private method that does the actual work to retrieve the interface buckets based on the given command.
            </summary>
            <param name="command">An SqlCommand object that defines a query for interface retrieval</param>
            <returns>
            If successful, a collection of InterfaceBucket objects. NULL if an error occurs or if the given
            command produced no results.
            </returns>
        </member>
        <member name="T:ServerTestFramework.Database.NpdbHealthchecks">
            <summary> This is a wrapper class for talking to the NPDB healthchecks. </summary>
        </member>
        <member name="M:ServerTestFramework.Database.NpdbHealthchecks.GetServerHealthchecks">
            <summary>
            Retreive a list of healthcheck URLs for all server and components
            </summary>
            <returns>A list of healthcheck URLs</returns>
        </member>
        <member name="M:ServerTestFramework.Database.NpdbHealthchecks.GetServerHealthchecks(System.String)">
            <summary>
            Retreive a list of healthcheck URLs for all components on a specific
            server
            </summary>
            <param name="server">The server to check</param>
            <returns>A list of healthchek URLs for the given server</returns>
        </member>
        <member name="M:ServerTestFramework.Database.NpdbHealthchecks.GetServerHealthchecks(System.String,System.String)">
            <summary>
            Retreive a list of healthcheck URLs for all components on a specific
            server
            </summary>
            <param name="server">The server to check</param>
            <param name="component">The component to check</param>
            <returns>A list of healthchek URLs for the given server/component</returns>
        </member>
        <member name="T:ServerTestFramework.Database.StaticNpdb">
            <summary> This is a wrapper for the Npdb class, with static methods that can be directly called to get results. </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\objd\i386\STFLiveConfig.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\i386\STFLiveConfig.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFLiveConfig.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFLiveConfighelp.xml
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\objd\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\objd\i386\STFLiveConfig.dll
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\objd\i386\STFLiveConfighelp.xml
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\objd\i386\STFLiveConfig.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveConfig\objd\i386\STFLiveConfighelp.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>STFLiveConfig</name>
    </assembly>
    <members>
        <member name="T:ServerTestFramework.LiveService.AppLogReader">
            <summary>
            This class, given a component, and a call to GetLogs, will provide server applogs for a given time range. 
            If you want to add additional folders to pull from for a component, check out the GetComponentFolderNames method.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.#ctor(System.String)">
            <summary>
            Standard constructor, takes a component name.
            </summary>
            <param name="componentName"></param>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.GetLogs(System.DateTime,System.DateTime)">
            <summary>
            After the object has been initialized against a specific component, this method grabs logs from the servers 
            associated with that component, filtering only the files and lines beginning with sTime and ending with eTime.
            Times should be in UTC to match the server log times. If not, they will be converted to UTC using DateTime.ToUniversalTime
            </summary>
            <param name="sTimeUtc"></param>
            <param name="eTimeUtc"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.GetLogFiles(System.Net.IPEndPoint)">
            <summary>
            Gets the log files that we need to go over for a given component.
            </summary>
            <param name="ipEp"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.GetComponentFolderNames">
            <summary>
            Maps a component to a folder name(s)
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.AppLogReader.ReadAllLines(System.String,System.DateTime,System.DateTime)">
            <summary>
            File.ReadAllLines yells when XomLogging is actively still writing to a file (a common case).
            Plus we want to filter on the timestamp.
            </summary>
            <param name="path"></param>
            <param name="sTime"></param>
            <param name="eTime"></param>
            <returns></returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ServerAppLogs">
            <summary>
            Server applog data for a single machine.
            </summary>
        </member>
        <member name="T:ServerTestFramework.DVTAttribute">
            <summary>
            This attribute can be applied to TestGroup or TestCase
            it stands for "Developer Verfication Test"
            </summary>
        </member>
        <member name="T:ServerTestFramework.BVTAttribute">
            <summary>
            This attribute can be applied to TestGroup or TestCase
            it stands for "Build Verfication Test"
            </summary>
        </member>
        <member name="T:ServerTestFramework.LocaleAgnosticAttribute">
            <summary>
            This attribute controls if the test node and all its child nodes are locale Agnostic.
            </summary>
        </member>
        <member name="T:ServerTestFramework.AllCountryLanguageAttribute">
            <summary>
            This attribute controls if the test node and all its child notes will be run against
            all supported Live Countries and language
            </summary>
        </member>
        <member name="T:ServerTestFramework.HResultException">
            <summary>
            Custom Exception class to carry and identify failures with an HResult
            </summary>
        </member>
        <member name="T:ServerTestFramework.XErrException">
            <summary>
            Custom Exception class to carry and identify failures with an X-Err
            </summary>
        </member>
        <member name="T:ServerTestFramework.ReloadOnEnvironmentChangeAttribute">
            <summary> Indicates that the test tree should be regenerated if the current environment changes.  Only applicable to the top-level node of a tree. </summary>
        </member>
        <member name="T:ServerTestFramework.CountryLanguage">
            <summary>
            The class is used for Local Agnostic testing
            </summary>
        </member>
        <member name="T:ServerTestFramework.Global">
            <summary>
            Provides various statics for the entire framework.
            </summary>
        </member>
        <member name="F:ServerTestFramework.Global._SGIPMatchAddr">
            Instruction for adding new members to Global:
            (this is old... is it still relevant?)
            Members should inherit from InfiniteLifetimeMarshalByRefObject so they can be accessed across app domain.
            Fields should be and public. And Avoid static fields. Declare a static property to return its value
            from the singleton. If you must use MBV values, make sure they're copied into new app domains (see 
            RemoteTestSuiteLoader).
        </member>
        <member name="M:ServerTestFramework.Global.BlockUntilEnvironmentIsReady">
            <summary> This call will block until an environment is initially set in STFLiveConfig, or until the environment reset finishes if in the middle of a reset. </summary>
        </member>
        <member name="M:ServerTestFramework.Global.GetUserSet">
            <summary>
            Returns the BulkUserSet, if specified in the XML file. Grabs either the
            userset with tag "" or the first user set, if "" is not found.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetUserSet(System.String)">
            <summary>
            Returns the BulkUserSet, if specified in the XML file, for the given tag. This is
            user-settable, in the XML file, and allows for distinct user sets. You may want
            to create some Xenon and Xbox users, or partition them manually, etc.
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetEnvironmentSettingsGroup">
            <summary>
            Returns an XML node for the "settingsgroup" node matching the current environment choice
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.GetSettingsGroup(System.String)">
            <summary>
            Returns an XML node for the "settingsgroup" node with the given name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.Global.XErrToString(System.UInt32)">
            <summary>
            Converts an XErr returned by the server to a string (long live reflection!)
            </summary>
            <param name="XErr">Error code returned by the XOnline servers</param>
            <returns>A human readable string</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsole">
            <summary>
            Summary description for ManagementConsole.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.GetProcessIDs(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Returns a list of all process IDs in of the specified process name for a specific subProcess.
            </summary>
            <param name="target">The endpoint to query.</param>
            <param name="process">The process name, or null for no limitation.</param>
            <param name="subProcess">The component name.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.GetIISProcessIDs(System.Net.IPEndPoint,System.String)">
            <summary>
            Returns a list of all process IDs in w3wp for a specific subProcess.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnProcess(System.Net.IPEndPoint,System.String,System.String,System.String,System.String@)">
            <summary>
            Executes a management command on every machine of a specific type, for a specific process.  This will
              prepend the subCommand you provide with "e processid:", where processid is the process id of subProcess.
            For example, target might be the ip for xtou_int to get you the pool box that xtou lives on, subProcess
              might be "xtou" to get you the w3wp process id for xtou, and subCommand might be "xrlscan reload".  The
              final command that gets executed then would be something like: "e 12345:xrlscan reload".
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnIISProcess(System.Net.IPEndPoint,System.String,System.String,System.String@)">
            <summary>
            Executes a management command on every machine of a specific type, for a specific IIS process.  This will
              prepend the subCommand you provide with "e processid:", where processid is the process id of subProcess.
            For example, target might be the ip for xtou_int to get you the pool box that xtou lives on, subProcess
              might be "xtou" to get you the w3wp process id for xtou, and subCommand might be "xrlscan reload".  The
              final command that gets executed then would be something like: "e 12345:xrlscan reload".
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAllProcess(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            Executes a management command against all servers of a given interface for a specific process
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="process">The process to search for to determine the PID</param>
            <param name="subProcess">The sub-process to search for to determine the PID</param>
            <param name="subCommand">The command to execute</param>
            <param name="text">A list of all of the output generated by the commands</param>
            <returns>The boolean AND of the result of all the executions</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAllIISProcess(System.String,System.String,System.String,System.String@)">
            <summary>
            Executes a management command against all servers of a given interface for a specific IIS Process
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="subProcess">The process to search for to determine the PID</param>
            <param name="subCommand">The command to execute</param>
            <param name="text">A list of all of the output generated by the commands</param>
            <returns>The boolean AND of the result of all the executions</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.OpenManagementConnection(System.Net.IPEndPoint)">
            <summary>
            Opens a connection to the specified management server.
            </summary>
            <param name="target">The ip address to execute against.</param>
            <returns>A TcpClient that is connected to the management server.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.Execute(System.Net.IPEndPoint,System.String,System.String@)">
            <summary>
            Executes a management command against the given endpoint's ip address.  Does not actually use the port
            specified by the endpoint.
            </summary>
            <param name="target">The ip address to execute against.</param>
            <param name="command">The command to execute.</param>
            <param name="text">The response from executing the command.</param>
            <returns>True if the command executed successfully, false if it did not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.Execute(System.Net.Sockets.TcpClient,System.String,System.String@)">
            <summary>
            Executes a management command against the given connection, which must already be established.
            </summary>
            <param name="client">The connection to execute against.</param>
            <param name="command">The command to execute.</param>
            <param name="text">The response from executing the command.</param>
            <returns>The result of executing the command.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAll(System.String,System.String,System.String@)">
            <summary>
            Executes a management command against all servers of a given interface.
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="command">The command to execute</param>
            <returns>The boolean AND of the result of all the executions</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementConsole.ExecuteOnAll(System.String,System.String)">
            <summary>
            Executes a management command against all servers of a given interface.
            Yields results, thus requiring the entire list to be enumerated in order to be fully executed.
            </summary>
            <param name="interfaceName">The interface upon which to execute the command</param>
            <param name="command">The command to execute</param>
            <returns>An IEnumerable&lt;XmgmtResponse&gt; that contains the results of the execution.</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsole.XmgmtResponse">
            <summary>
            A container for a response from an xmgmt command.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener">
            <summary>
            Attaches to a remote management console and receives trace/logs from it.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.ManagementListener._sockets">
            <summary>The sockets used for all connections.</summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.GetConnectionForEndpoint(System.Net.IPEndPoint)">
            <summary>
            Gets the Connection for a given endpoint.
            </summary>
            <param name="endpoint">The remote endpoint of the connection.</param>
            <returns>The Connection object for the endpoint.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.AcquireConnection(ServerTestFramework.LiveService.ManagementListener.Connection)">
            <summary>
            Increments the ref count on the connection.
            </summary>
            <param name="conn">The connection to acquire.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.BeginReceiveCallback(System.IAsyncResult)">
            <summary>
            Receives datagrams from the socket, parses them, and passes them along to the listeners.
            </summary>
            <param name="result">The async result object.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.ReleaseConnection(ServerTestFramework.LiveService.ManagementListener.Connection)">
            <summary>
            Decrements the ref count on the connection.
            </summary>
            <param name="conn">The connection to release.</param>
            <returns>True if the connection was destroyed, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.DestroyConnection(ServerTestFramework.LiveService.ManagementListener.Connection)">
            <summary>
            Destroys the given connection.
            </summary>
            <param name="conn">The connection to destroy.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.ConstructTargetString(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Constructs the target string given the two endpoints.
            </summary>
            <param name="remote">The management server endpoint.</param>
            <param name="local">The local listener endpoint.</param>
            <returns>A string that should be unique to the connection.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.ConstructListenerID(System.String,System.String)">
            <summary>
            Constructs an ID that should be unique to component and area.
            </summary>
            <param name="component">The component.</param>
            <param name="area">The area.</param>
            <returns>A string that should be unique to component and area.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTarget(System.Net.Sockets.TcpClient,System.String,System.String)">
            <summary>
            Checks for the target under the component on the server.
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is found, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTargetAreas(System.Net.Sockets.TcpClient,System.String,System.String)">
            <summary>
            Checks if the target is assigned to any areas under the component on the server.
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is assigned, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForArea(System.Net.Sockets.TcpClient,System.String,System.String)">
            <summary>
            Checks if the area is assigned to a component
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <param name="area">The area to check for.</param>
            <returns>True if the area is assigned, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.IsComponentManaged(System.Net.Sockets.TcpClient,System.String)">
            <summary>
            Checks whether the component is managed or unmanaged.
            </summary>
            <param name="client">The connection to the management server to check.</param>
            <param name="component">The component to check.</param>
            <returns>True if the component is managed, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CreateTarget(System.Net.IPEndPoint,System.String,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Create a new Target
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="target">The name of the target.</param>
            <param name="targetParameters">The parameters assoicated with the target.</param>
            <param name="component">The component to listen to.</param>
            <param name="area">The area to listen to.</param>
            <param name="callback">The location to send received datagrams.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.RemoveTarget(System.Net.IPEndPoint,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Remove the target.  This does not delete the target, just removes it
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="target">The targetname.</param>
            <param name="component">The component to stop.</param>
            <param name="area">The area to stop.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.DeleteTargetIfNotUsed(System.Net.IPEndPoint,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Stops listening on a remote management server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="target">The name of the target.</param>
            <param name="component">The component to stop.</param>
            <param name="area">The area to stop.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CreateArea(System.Net.IPEndPoint,System.String,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Create a new Area
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="area">The name of the target.</param>
            <param name="areaSettings">The parameters assoicated with the target.</param>
            <param name="component">The component to add to.</param>
            <param name="callback">The location to send received datagrams.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.DeleteArea(System.Net.IPEndPoint,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Delete area.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="area">The area.</param>
            <param name="component">The component containing area.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.Listen(System.Net.IPEndPoint,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Initiate listening on a remote management server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to listen to.</param>
            <param name="area">The area to listen to.</param>
            <param name="callback">The location to send received datagrams.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.Stop(System.Net.IPEndPoint,System.String,System.String,ServerTestFramework.LiveService.ManagementListener.ListenerCallback)">
            <summary>
            Stops listening on a remote management server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to stop.</param>
            <param name="area">The area to stop.</param>
            <param name="callback">The location passed in to Listen.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.GetXmgmtEndPoints(System.String)">
            <summary>
            Retrieves a list of endpoints for xmgmt for all servers of a specific interface.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTarget(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Checks for the target under the component on the server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is found, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForTargetAreas(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Checks if the target is assigned to any areas under the component on the server.
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to check.</param>
            <param name="target">The target to check for.</param>
            <returns>True if the target is assigned, false if not.</returns>
        </member>
        <member name="M:ServerTestFramework.LiveService.ManagementListener.CheckForArea(System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Checks for area
            </summary>
            <param name="endpoint">The remote management server.</param>
            <param name="component">The component to check.</param>
            <param name="area">The area to check for.</param>
            <returns>True if the area is assigned, false if not.</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener.Connection">
            <summary>A 'connection' to a management server.</summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener.Datagram">
            <summary>A packet of data received from the management server.</summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.ManagementListener.Datagram.UserData">
            <summary>Can be used to store data useful to a consumer of the service.</summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListener.ListenerCallback">
            <summary>
            A callback for the Listener, called every time a datagram is received.
            Done on .Net worker threads, please be quick in consuming them and realize that multiple callbacks
            can occur at once on different threads.  Receiving a null datagram means that no more will be received.
            </summary>
            <param name="datagram">The packet of data received.</param>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementConsoleException">
            <summary>
            An exception in the ManagementConsole class.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.ManagementListenerException">
            <summary>
            An exception in the ManagementListener class.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.ManagementListenerException.XmgmtResponse">
            <summary>The xmgmt response associated with this exception, if any.</summary>
        </member>
        <member name="T:ServerTestFramework.TestRunInfo">
            <summary>
            A small class contains test runtime data.
            For now we have country id and language id only
            </summary>
        </member>
        <member name="T:ServerTestFramework.NodeTaggingDataHelper">
            <summary>
            A static helper class to retrieve attribute values from NodeTaggingData
            </summary>
        </member>
        <member name="T:ServerTestFramework.TestNodeLive">
            <summary>
            The fundamental unit that makes up test groups and test cases for Xbox Live.
            A node can be either be executed or can contain any number of other nodes as children.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestNodeLive.Run(ServerTestFramework.RUN_TYPE)">
            <summary>
            Called to execute the test.
            </summary>
        </member>
        <member name="M:ServerTestFramework.TestNodeLive.Run(ServerTestFramework.TestRunInfo)">
            <summary>
            This one is executed for locale agnostic tests 
            and AllCountryLanguage tests (tests are run against all supported countries and languages)
            </summary>
            <returns>test result</returns>
        </member>
        <member name="T:ServerTestFramework.LiveService.XConfig">
            <summary>
            Summary description for XConfig.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.CheckNpdbAccessibility">
            <summary>
            Does a relatively quick check for whether we can talk to the NPDB machine or not.
            The timeout period for making an NPDB call (via SQL) when the server is not available
            is over 1 minute on my machine. This should time out in a couple of seconds. That is
            oh-so-much more tolerable.
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.XConfig._virtualInterfaceRedirections">
            <summary>
            A separate list of virtual interface overrides that can be changed programmatically.
            </summary>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.RedirectVirtualInterfaces(System.Collections.Generic.Dictionary{System.String,System.Net.IPEndPoint})">
            <summary>
            Will override all GetVirtualInterface calls for the given vinterface names to the specified IP endpoints.
            The port will be changed only if it isn't IPEndPoint.MinPort (0).
            
            The Dictionary is assumed to be invariant; making changes to it after passing it in can result in
            thread safety issues.  To change the redirections, create a new Dictionary.
            </summary>
            <param name="destinations">The pairs of vinterface names and their new address.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.RestoreOverrideSettingState(ServerTestFramework.LiveService.SettingState)">
            <summary>
            Restores the overridden setting to the state that it was before.
            </summary>
            <param name="state">The state before the override.</param>
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingAdd(System.String,System.String,System.String,System.String,System.String,System.String)">
             MultiSettingAdd:
             Add a given multisetting to t_multisetting_overrides
            
             Parameters:
                environment - vc_environment of Live Server environment
                component - vc_component of Live Server component
                site - i_site_id of Live Server site id
                server - vc_server of Live Server server
                multisetting - vc_multisetting to add
                value - vc_value for the multisetting
            
             Returns n/a
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingAddBase(System.String,System.String)">
            MultiSettingAddBase:  Add a given multisetting to t_multisettings
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingDelete(System.String,System.String,System.String,System.String,System.String)">
             MultiSettingDelete: 
             Delete a given multisetting from t_multisetting_overrides (for a given environment)      
            
             Parameters:
                environment - vc_environment of Live Server environment
                component - vc_component of Live Server component
                site - i_site_id of Live Server site id
                server - vc_server of Live Server server
                multisetting - vc_multisetting to delete
            
             Returns n/a
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.MultiSettingDeleteValue(System.String,System.String,System.String,System.String,System.String,System.String)">
             MultiSettingDelete: 
             Delete a specific multisetting from t_multisetting_overrides (for a given environment)      
            
             Parameters:
                environment - vc_environment of Live Server environment
                component - vc_component of Live Server component
                site - i_site_id of Live Server site id
                server - vc_server of Live Server server
                multisetting - vc_multisetting to delete
                value - vc_value to delete
            
             Returns n/a
        </member>
        <member name="M:ServerTestFramework.LiveService.XConfig.ForceConfigReload(System.String)">
            <summary>
            Uses xmgmt to force a config reload on all servers that expose the given interface.
            </summary>
            <param name="targetInterface">The interface that needs to reload its config.</param>
        </member>
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_CATALOGWATCHER_INVALID_ID">
            <summary>
            Catalog Watcher Events                                                      = 0x80175xxx
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_MIX_UNKNOWNERROR">
            <summary>
            Mix Common HResults                                                          = 0x80176xxx
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:ServerTestFramework.LiveService.HResult.XONLINE_E_FML_UNKNOWN_ERROR" -->
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_ESP_ENGINE_UNKNOWN_ERROR">
            <summary>
            FAST ESP Engine Events                                                      = 0x80178xxx
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.HResult.XONLINE_E_MARKETPLACECATALOG_UNKNOWN_ERROR">
            <summary>
            Marketplace Catalog Events                                                  = 0x80179xxx
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.XOn">
            <summary>
            This XOn derived class is provided here exclusively so that
            anyone that imports ServerTestFramework.LiveService is able
            to access the XOn class without having to add an additional
            using statement.  This should eventually be removed.
            </summary>
        </member>
        <member name="T:ServerTestFramework.LiveService.UserFlagsUtil">
            <summary>
            Provides methods to query and update the userflags array in
            a user object.
            </summary>
            <remarks>
            The user flags are layed out as follows
              BitArray: XXLLLLLP TTTTSNBV CCCCCCCC DDDOOOGG 
                L - User Language
                P - Parentally Controlled
                T - TierId
                S - Shared Content
                N - Nickname
                B - Purchase
                V - User Voice
                C - CountryId
                D - Disconnect Rating
                O - nO show rating
                G - Guest Number
                X - Unused (should be zero)
            </remarks>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_GUEST_MASK">
            <summary>
            The mask for the user flag which indicates if the user is a guest
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_NOSHOW_RATING_MASK">
            <summary>
            The mask for the user flag which indicates the UserNoShowRating
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_DISCONNECT_RATING_MASK">
            <summary>
            The mask for the user flag which indicates the UserDisconnectRating
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_COUNTRY_MASK">
            <summary>
            The mask for the user country id in the user flags
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_VOICE_MASK">
            <summary>
            The mask for the user flag which indicates if user voice is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_PURCHASE_MASK">
            <summary>
            The mask for the user flag which indicates if user purchase is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_NICKNAME_MASK">
            <summary>
            The mask for the user flag which indicates if user nickname is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_SHARED_CONTENT_MASK">
            <summary>
            The mask for the user flag which indicates if shared content is disabled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_TIERID_MASK">
            <summary>
            The mask for the user TierId in the user flags
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_PARENTAL_CONTROLLED">
            <summary>
            The mask for the user flag which indicates if the account is parentally controlled
            </summary>
        </member>
        <member name="F:ServerTestFramework.LiveService.UserFlagsUtil.XONLINE_USER_LANGUAGE_MASK">
            <summary>
            The mask for the user langage in the user flags
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFLive.Utilities.DeterministicRandom">
            <summary>
            Generates random numbers, but keeps track of enough information to recreate any specific event.
            </summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._rand">
            <summary>The random number generator.</summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._seed">
            <summary>The value used to seed the generator.</summary>
        </member>
        <member name="F:ServerTestFramework.STFLive.Utilities.DeterministicRandom._iterations">
            <summary>The number of times a function was called on the generator.</summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.#ctor">
            <summary>
            Creates a new DeterministicRandom using the current time as a seed value.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.#ctor(System.Int32)">
            <summary>
            Creates a new DeterministicRandom using the given value as a seed.
            </summary>
            <param name="seed">The value to use as a seed.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Reset">
            <summary>
            Resets the state of the DeterministicRandom.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next(System.Int32,System.Int32)">
            <summary>
            Gets a random int in the range [minValue, maxValue).
            </summary>
            <param name="minValue">The inclusive minimum value to generate.</param>
            <param name="maxValue">The exclusive maximum value to generate.</param>
            <returns>An integer in the range [minValue, maxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next(System.Int32)">
            <summary>
            Gets a random int in the range [0, maxValue).
            </summary>
            <param name="maxValue">The exclusive maximum value to generate.</param>
            <returns>An integer in the range [0, maxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Next">
            <summary>
            Gets a random int.
            </summary>
            <returns>An int in the range [0, int.MaxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextByte">
            <summary>
            Gets a random byte.
            </summary>
            <returns>A random byte in the range [0, 255].</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextLong">
            <summary>
            Gets a random long.
            </summary>
            <returns>A random long in the range [0, long.MaxValue).</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextDouble">
            <summary>
            Gets a random double.
            </summary>
            <returns>A double in the range [0, 1)</returns>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.NextBytes(System.Byte[])">
            <summary>
            Fills the given array with random bytes.
            </summary>
            <param name="bytes">The array to fill with random bytes.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="length">The number of bytes after offset to consider for change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="M:ServerTestFramework.STFLive.Utilities.DeterministicRandom.MutateBytes(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Changes random bytes in an array to random values.
            </summary>
            <param name="data">The array of bytes to change.</param>
            <param name="offset">The offset from the beginning of the array to start from.</param>
            <param name="length">The number of bytes after offset to consider for change.</param>
            <param name="iterations">The number of times to change a random byte.</param>
        </member>
        <member name="P:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Seed">
            <summary>
            Gets or sets the seed value.  Setting the value to -1 causes a time based number to be chosen.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFLive.Utilities.DeterministicRandom.Iterations">
            <summary>
            Gets the number of times a function was called on the generator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.FakeLogVault">
            <summary> Uses xmgmt remote output to generate a log-vault like directory for a component. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.#ctor(System.String,System.String,System.String[],System.String,System.UInt32)">
            <summary> Sets up creation of local files from xmgmtc output for a set of areas on all servers for an (xmgmt accessible) list of IPs.  If flushIntervalInSeconds is 0, flushing must be called manually. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.#ctor(System.Net.IPEndPoint[],System.String,System.String[],System.String,System.UInt32)">
            <summary> Sets up creation of local files from xmgmtc output for a set of areas on all servers for an (xmgmt accessible) interface.  If flushIntervalInSeconds is 0, flushing must be called manually. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.Dispose">
            <summary> Stops collecting output and flushes anything remaining. </summary>
        </member>
        <member name="M:ServerTestFramework.Utilities.FakeLogVault.FlushLogs">
            <summary> Flushes all collected logs to files.  Returns the list of files that were written to.  </summary>
        </member>
        <member name="T:ServerTestFramework.Utilities.ValueCheck">
            <summary>
            Class containing overloaded Test methods that compare a value with another taht was expected 
            and throw descriptive ExpectedValueCheckExceptions when they don't match.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.BulkUserSetBase">
            
             Class to represent a set of bulk users. These users a represented as a base
             ID and are gauranteed to have a few useful properties:
             
             1: PUIDs in the range Base + [0,n) offset where Base is the base offset of the set
                 and n is the count of users in the set.
             2: Web Puids in the range 0x0001ffffffffffff + BaseLow + [0,n] where BaseLow is the lo 32 bit
                 value of the PUID. This is done to gaurantee unique web IDs that are distiguishable from
                 normal user PUIDs.
             3: Gamertags where the first 2 bytes are the passed in prefix, and the last 13 bytes are a base
                 32 encoding of the PUID. This is done to allow username/puid calculation from the PUID/gamertag 
                 without database reads. Use the built-in methods this class for help in doing this.
            
        </member>
        <member name="T:ServerTestFramework.Database.DatabaseException">
            <summary>
            Helper exception for database related errors
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlException)">
            <summary>
            Construct a new database exception describing all of the errors
            </summary>
            <param name="conn">Database connection that threw the error</param>
            <param name="ex">Sql exception object to be described</param>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Construct a new database exception for the given connection.
            </summary>
            <param name="conn">Database connection that threw the error</param>
            <param name="message">Specific message to attach to the exception</param>
        </member>
        <member name="M:ServerTestFramework.Database.DatabaseException.#ctor(System.String)">
            <summary>
            Construct a new database exception.
            </summary>
            <param name="message">Specific message to attach to the exception</param>
        </member>
        <member name="T:ServerTestFramework.Database.ServerNames">
            <summary>
            Collection of strings, each representing the name of a server.  This enforces a type on the collection.
            </summary>
        </member>
        <member name="T:ServerTestFramework.Database.Npdb">
            <summary>
            This is a wrapper class for talking to the NPDB.
            </summary>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetServerListByInterface(System.String,System.String)">
            <summary>
            Retrieves all servers that exist for a specified environment and interface.
            </summary>
            <param name="environment">Environment to query for.</param>
            <param name="interface">Interface to query for.</param>
            <returns>A Collection of strings, each containing the name of a server exposing the interface.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.UInt32)">
            <summary>
            Retrieves all interface buckets for a specified Title ID
            </summary>
            <param name="titleId">Title Id</param>
            <returns>A collection of InterfaceBucket objects.</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.UInt32,System.String)">
            <summary>
            Retrieves interface buckets for a specific Title id in a specific environment.
            </summary>
            <param name="titleId">Title Id</param>
            <param name="environment">Environment name (eg: "testnet")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.String)">
            <summary>
            Retrieves all interface buckets for a specified environment
            </summary>
            <param name="environment">Environment name (eg: "testnet")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.String,System.String)">
            <summary>
            Retrieves interface buckets based on the environment name and interface
            </summary>
            <param name="environment">Environment name (eg: "testnet")</param>
            <param name="interfaceName">Interface name (eg: "libsvr")</param>
            <returns>A collection of InterfaceBucket objects</returns>
        </member>
        <member name="M:ServerTestFramework.Database.Npdb.GetInterfaceBuckets(System.Data.SqlClient.SqlCommand)">
            <summary>
            Private method that does the actual work to retrieve the interface buckets based on the given command.
            </summary>
            <param name="command">An SqlCommand object that defines a query for interface retrieval</param>
            <returns>
            If successful, a collection of InterfaceBucket objects. NULL if an error occurs or if the given
            command produced no results.
            </returns>
        </member>
        <member name="T:ServerTestFramework.Database.NpdbHealthchecks">
            <summary> This is a wrapper class for talking to the NPDB healthchecks. </summary>
        </member>
        <member name="M:ServerTestFramework.Database.NpdbHealthchecks.GetServerHealthchecks">
            <summary>
            Retreive a list of healthcheck URLs for all server and components
            </summary>
            <returns>A list of healthcheck URLs</returns>
        </member>
        <member name="M:ServerTestFramework.Database.NpdbHealthchecks.GetServerHealthchecks(System.String)">
            <summary>
            Retreive a list of healthcheck URLs for all components on a specific
            server
            </summary>
            <param name="server">The server to check</param>
            <returns>A list of healthchek URLs for the given server</returns>
        </member>
        <member name="M:ServerTestFramework.Database.NpdbHealthchecks.GetServerHealthchecks(System.String,System.String)">
            <summary>
            Retreive a list of healthcheck URLs for all components on a specific
            server
            </summary>
            <param name="server">The server to check</param>
            <param name="component">The component to check</param>
            <returns>A list of healthchek URLs for the given server/component</returns>
        </member>
        <member name="T:ServerTestFramework.Database.StaticNpdb">
            <summary> This is a wrapper for the Npdb class, with static methods that can be directly called to get results. </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\buildd.log ===
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "stflivetools.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v4.0
BUILD: Examining z:\xonline_main\private\test\stftests\servertestframework\stflivetools directory for files to compile.
Executing prebuild scripts  *************
1>Performing prebuild steps..  *************
1>'Z:\XONLINE_MAIN\public\ext\tools\build_pre_process.cmd '
1>build_pre_process.cmd: nmake /nologo /f z:\xonline_main\makefil0 versions
1> set BUILDMSG3=making versions.h
1> del z:\xonline_main\objd\amd64\versions.h z:\xonline_main\objd\amd64\versions.h.temp 2>nul
1> genid /make_versions_c_header:z:\xonline_main\objd\amd64\versions.h.temp /OBJ_PATH:z:\xonline_main /O:objd\amd64
1> move z:\xonline_main\objd\amd64\versions.h.temp z:\xonline_main\objd\amd64\versions.h >nul
1> set BUILDMSG3=making versionsmk.inc
1> del z:\xonline_main\versionsmk.inc z:\xonline_main\versionsmk.inc.temp 2>nul
1> binplace.exe /:DEST . z:\xonline_main\objd\amd64\versionsmk.inc
1>binplace z:\xonline_main\objd\amd64\versionsmk.inc
1>Executing Pass0 MSBuild Tasks z:\xonline_main\private\test\stftests\servertestframework\stflivetools *************
1>'MSBuild.cmd "stflivetools.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildGenerated /p:Pass=Generate'
1>Running MsBuild v4.0
1>Build started 10/25/2012 12:54:03 PM.
1> 1>Project "z:\xonline_main\private\test\stftests\servertestframework\stflivetools\stflivetools.csproj" on node 1 (BuildGenerated target(s)).
1> 1>GetVersionInfo:
1> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
1> PrepareForBuild:
1> Creating directory "objd\amd64\".
1> 1>Project "z:\xonline_main\private\test\stftests\servertestframework\stflivetools\stflivetools.csproj" (1) is building "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (2) on node 1 (BuildGenerated target(s)).
1> 2>GetVersionInfo:
1> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
1> 2>Project "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (2) is building "z:\xonline_main\private\test\stftests\servertestframework\STFCore\STFCore.csproj" (3) on node 1 (BuildGenerated target(s)).
1> 3>GetVersionInfo:
1> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
1> BeaverConfigHF:
1> Skipping target "BeaverConfigHF" because it has no inputs.
1> GenerateAssemblyAttributes:
1> Deleting file "objd\amd64\_generated.cs".
1> del "objd\amd64\_generated.cs"
1> 3>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\STFCore\STFCore.csproj" (BuildGenerated target(s)).
1> 2>Project "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (2) is building "z:\xonline_main\private\test\stftests\servertestframework\STFLiveConfig\STFLiveConfig.csproj" (4) on node 1 (BuildGenerated target(s)).
1> 4>GetVersionInfo:
1> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
1> PrepareForBuild:
1> Creating directory "objd\amd64\".
1> md "objd\amd64\"
1> BeaverConfigHF:
1> Skipping target "BeaverConfigHF" because it has no inputs.
1> 4>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\STFLiveConfig\STFLiveConfig.csproj" (BuildGenerated target(s)).
1> 2>BeaverConfigHF:
1> Skipping target "BeaverConfigHF" because it has no inputs.
1> GenerateAssemblyAttributes:
1> Deleting file "objd\amd64\_generated.cs".
1> del "objd\amd64\_generated.cs"
1> 2>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (BuildGenerated target(s)).
1> 1>BeaverConfigHF:
1> Skipping target "BeaverConfigHF" because it has no inputs.
1> 1>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\stflivetools\stflivetools.csproj" (BuildGenerated target(s)).
1>Build succeeded.
1>Time Elapsed 00:00:01.20
100>Executing Pass1 MSBuild Tasks z:\xonline_main\private\test\stftests\servertestframework\stflivetools *************
100>'MSBuild.cmd "stflivetools.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildCompiled /p:Pass=Compile'
100>Running MsBuild v4.0
100>Build started 10/25/2012 12:54:05 PM.
100> 1>Project "z:\xonline_main\private\test\stftests\servertestframework\stflivetools\stflivetools.csproj" on node 1 (BuildCompiled target(s)).
100> 1>GetVersionInfo:
100> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
100> 1>Project "z:\xonline_main\private\test\stftests\servertestframework\stflivetools\stflivetools.csproj" (1) is building "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (2) on node 1 (BuildCompiled target(s)).
100> 2>GetVersionInfo:
100> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
100> 2>Project "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (2) is building "z:\xonline_main\private\test\stftests\servertestframework\STFCore\STFCore.csproj" (3) on node 1 (BuildCompiled target(s)).
100> 3>GetVersionInfo:
100> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
100> 2>Project "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (2) is building "z:\xonline_main\private\test\stftests\servertestframework\STFLiveConfig\STFLiveConfig.csproj" (4) on node 2 (BuildCompiled target(s)).
100> 4>GetVersionInfo:
100> Reading version information from version file : Z:\XONLINE_MAIN\public\inc\version.htm
100> 3>CoreResGen:
100> C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\bin\NETFX 4.0 Tools\x64\Tracker.exe @"C:\Users\Domo\AppData\Local\Temp\9406aaf0a7ba4bbc9a444ada04f2a684.tmp"  /c "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\ResGen.exe" /useSourcePath /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.dll /r:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Xml.dll /compile Runner\StressSchedulerPriControl.resx,objd\amd64\ServerTestFramework.Runner.StressSchedulerPriControl.resources Runner\StressSchedulerTPSControl.resx,objd\amd64\ServerTestFramework.Runner.StressSchedulerTPSControl.resources 
100> CoreCompile:
100> C:\Windows\Microsoft.NET\Framework\v3.5\Csc.exe /noconfig /unsafe+ /checked- /nowarn:1591,1570,1572,1573,1587,660,661,1699,1701,1702 /nostdlib+ /warn:4 /doc:objd\amd64\\stfcorehelp.xml /define:DEBUG;TRACE;CODE_ANALYSIS;WIN64 /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Xml.dll /debug+ /debug:full /filealign:512 /nologo /optimize- /out:objd\amd64\STFCore.dll /resource:objd\amd64\ServerTestFramework.Runner.StressSchedulerPriControl.resources /resource:objd\amd64\ServerTestFramework.Runner.StressSchedulerTPSControl.resources /target:library /warnaserror+ AttrAliases.cs AttrExcepts.cs CoreGlobals.cs NodeTaggingData.cs Report.cs TestNode.cs ThreadBase.cs ThreadCaseTracker.cs Runner\FuncCommon.cs Runner\FuncScheduler.cs Runner\RunningAverage.cs Runner\StressJobList.cs Runner\StressSchedulerCommon.cs Runner\StressSchedulerDestroyer.cs Runner\StressSchedulerPri.cs Runner\StressSchedulerPriControl.cs Runner\StressSchedulerPriControl.Designer.cs Runner\StressSchedulerTPS.cs Runner\StressSchedulerTPSControl.cs Runner\StressSchedulerTPSControl.Designer.cs Runner\TestEventListener.cs Runner\TestResult.cs Runner\TestScheduler.cs Utilities\ArrayEx.cs Utilities\AssemblyUtilities.cs Utilities\AsyncUtils.cs Utilities\BaseApp.cs Utilities\ByteEncoding.cs Utilities\CommandLine.cs Utilities\ConsoleReportDestination.cs Utilities\ConsoleX.cs Utilities\Counters.cs Utilities\DataProvider.cs Utilities\DebugLogger.cs Utilities\DebugOutputReportDestination.cs Utilities\Events.cs Utilities\FeedbackInfo.cs Utilities\FileReportDestination.cs Utilities\Hexer.cs Utilities\HttpClient.cs Utilities\InfiniteLifetimeMarshalByRefObject.cs Utilities\IOCPSocket.cs Utilities\IpHelper.cs Utilities\ListEx.cs Utilities\LocalInterface.cs Utilities\MemoryReportDestination.cs Utilities\mmf.cs Utilities\MultiEnumerator.cs Utilities\ProcessWrapper.cs Utilities\PuidPool.cs Utilities\RandomEx.cs Utilities\ReflectionUtilities.cs Utilities\RemoteReportDestination.cs Utilities\RemoteTime.cs Utilities\SafeCounter.cs Utilities\SerializableDictionary.cs Utilities\SimpleJobMgr.cs Utilities\SimpleUdp.cs Utilities\StfXmlDoc.cs Utilities\StringUtils.cs Utilities\SubStatic.cs Utilities\TcpRelay.cs Utilities\TestCaseReports.cs Utilities\TextWriterReportBridge.cs Utilities\TimedQueue.cs Utilities\Timers.cs Utilities\ValueCheck.cs Utilities\VsTestResultTestEventListener.cs Utilities\XmlConfigFile.cs Utilities\XmlFileReportDestination.cs Utilities\XmlUtil.cs Plugins\PluginHandler.cs Plugins\Plugins.cs objd\amd64\_generated.cs
100> CopyFilesToOutputDirectory:
100> Copying file from "objd\amd64\STFCore.dll" to "z:\xonline_main\private\test\StfTests\libd\AMD64\STFCore.dll".
100> copy /y "objd\amd64\STFCore.dll" "z:\xonline_main\private\test\StfTests\libd\AMD64\STFCore.dll"
100> STFCore -> z:\xonline_main\private\test\StfTests\libd\AMD64\STFCore.dll
100> Copying file from "objd\amd64\STFCore.pdb" to "z:\xonline_main\private\test\StfTests\libd\AMD64\STFCore.pdb".
100> copy /y "objd\amd64\STFCore.pdb" "z:\xonline_main\private\test\StfTests\libd\AMD64\STFCore.pdb"
100> Copying file from "objd\amd64\\stfcorehelp.xml" to "z:\xonline_main\private\test\StfTests\libd\AMD64\stfcorehelp.xml".
100> copy /y "objd\amd64\\stfcorehelp.xml" "z:\xonline_main\private\test\StfTests\libd\AMD64\stfcorehelp.xml"
100> 3>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\STFCore\STFCore.csproj" (BuildCompiled target(s)).
100> 4>CoreCompile:
100> C:\Windows\Microsoft.NET\Framework\v3.5\Csc.exe /noconfig /unsafe+ /checked- /nowarn:1591,1570,1572,1573,1587,660,661,1699,1701,1702 /nostdlib+ /warn:4 /doc:objd\amd64\\STFLiveConfighelp.xml /define:DEBUG;TRACE;CODE_ANALYSIS;WIN64 /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.ConnectionInfo.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Smo.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.SqlEnum.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.dll /reference:z:\xonline_main\private\test\StfTests\libd\amd64\STFCore.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\clr35\System.Core.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx35sp1\System.Data.Services.Client.metadata_dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx30sp1\System.IdentityModel.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx30sp1\System.ServiceModel.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Transactions.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Xml.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\clr35\System.Xml.Linq.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\dll\wstclient.dll /reference:z:\xonline_main\private\common\config\dll\objd\amd64\XblConfig.dll /reference:z:\xonline_main\private\common\core\dll\objd\amd64\XblCore.dll /debug+ /debug:full /filealign:512 /nologo /optimize- /out:objd\amd64\STFLiveConfig.dll /target:library /warnaserror+ AppLogReader.cs AttrAliasesLive.cs AttrExceptsLive.cs CountryLanguage.cs FrameworkGlobals.cs IDeepCloneable.cs ManagementConsole.cs NodeTaggingLive.cs TestNodeLive.cs TestNodeLiveBackCompat.cs XConfig.cs XmgmtC.cs XOn.cs Utilities\DeterministicRandom.cs Utilities\FakeLogVault.cs Utilities\ValueCheck.cs Database\BulkUserSet.cs Database\DatabaseException.cs Database\Npdb.cs objd\amd64\_generated.cs
100> CopyFilesToOutputDirectory:
100> Copying file from "objd\amd64\STFLiveConfig.dll" to "z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfig.dll".
100> copy /y "objd\amd64\STFLiveConfig.dll" "z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfig.dll"
100> STFLiveConfig -> z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfig.dll
100> Copying file from "objd\amd64\STFLiveConfig.pdb" to "z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfig.pdb".
100> copy /y "objd\amd64\STFLiveConfig.pdb" "z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfig.pdb"
100> Copying file from "objd\amd64\\STFLiveConfighelp.xml" to "z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfighelp.xml".
100> copy /y "objd\amd64\\STFLiveConfighelp.xml" "z:\xonline_main\private\test\StfTests\libd\AMD64\STFLiveConfighelp.xml"
100> 4>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\STFLiveConfig\STFLiveConfig.csproj" (BuildCompiled target(s)).
100> 2>CoreCompile:
100> C:\Windows\Microsoft.NET\Framework\v3.5\Csc.exe /noconfig /unsafe+ /checked- /nowarn:1591,1570,1572,1573,1587,660,661,1699,1701,1702 /nostdlib+ /warn:4 /doc:objd\amd64\\stflivehelp.xml /define:DEBUG;TRACE;CODE_ANALYSIS;WIN64 /reference:Z:\XONLINE_MAIN\public\ext\BouncyCastle\BouncyCastle.Crypto.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\velocity\1.0.0.0\client\CacheBaseLibrary.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\velocity\1.0.0.0\client\ClientLibrary.dll /reference:Z:\XONLINE_MAIN\public\ext\FCL\Libraries\CTFCore.dll /reference:Z:\XONLINE_MAIN\public\ext\FCL\Libraries\CTFInstallationManager.dll /reference:Z:\XONLINE_MAIN\public\ext\FCL\Libraries\FuzzerAnalyzers.dll /reference:Z:\XONLINE_MAIN\public\ext\FCL\Libraries\FuzzerManipulations.dll /reference:Z:\XONLINE_MAIN\public\ext\FCL\Libraries\FuzzerStrategy.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\PassportIDCRL\4.0\Debug\ManagedWrapperReference\Binaries_and_Documentation\ManagedIDCRL.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.AnalysisServices.AdomdClient.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.AnalysisServices.DLL /reference:Z:\XONLINE_MAIN\public\ext\WindowsIdentityFoundation\v3.5\Microsoft.IdentityModel.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Practices.ServiceLocation.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Practices.Unity.Configuration.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Practices.Unity.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.ConnectionInfo.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.Smo.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\Reporting\Microsoft.SqlServer.SqlEnum.dll /reference:Z:\XONLINE_MAIN\public\ext\WindowsAzureSDK\v1.1\ref\Microsoft.WindowsAzure.Diagnostics.dll /reference:Z:\XONLINE_MAIN\public\ext\WindowsAzureSDK\v1.1\ref\Microsoft.WindowsAzure.StorageClient.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Xbox.Configuration.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Xbox.Diagnostics.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Xbox.Identity.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Xbox.Privacy.Client.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Xbox.Privacy.Interfaces.dll /reference:z:\xonline_main\public\ext\xonline-ext\Privacy\objd\Microsoft.Xbox.Unity.dll /reference:z:\xonline_main\private\common\auth\Microsoft.XboxLive.Auth\objd\amd64\Microsoft.XboxLive.Auth.dll /reference:Z:\XONLINE_MAIN\public\ext\FCL\Libraries\MITMServer.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\mscorlib.dll /reference:z:\xonline_main\private\test\StfTests\ServerTestFramework\STFLive\Auth\RPSTicketGen\RPSEmulator.dll /reference:z:\xonline_main\private\test\StfTests\libd\amd64\STFCore.dll /reference:z:\xonline_main\private\test\StfTests\libd\amd64\STFLiveConfig.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Configuration.Install.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\clr35\System.Core.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Data.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx35sp1\System.Data.Services.Client.metadata_dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.DirectoryServices.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Drawing.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.EnterpriseServices.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx30sp1\System.IdentityModel.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Management.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Remoting.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Runtime.Serialization.Formatters.Soap.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Security.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx30sp1\System.ServiceModel.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.ServiceProcess.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Transactions.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Web.Services.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Windows.Forms.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\netfx20sp1\System.Xml.dll /reference:Z:\XONLINE_MAIN\public\ext\sdk\CLR\clr35\System.Xml.Linq.dll /reference:Z:\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\dll\wstclient.dll /reference:z:\xonline_main\private\common\community\dll\objd\amd64\XblCommunity.dll /reference:z:\xonline_main\private\common\config\dll\objd\amd64\XblConfig.dll /reference:z:\xonline_main\private\common\core\dll\objd\amd64\XblCore.dll /reference:z:\xonline_main\private\common\marketplace\dll\objd\amd64\XblMarketplace.dll /reference:z:\xonline_main\private\common\security\dll\objd\amd64\XblSecurity.dll /debug+ /debug:full /filealign:512 /nologo /optimize- /out:objd\amd64\STFLive.dll /resource:Auth\RPSTicketGen\RPSEmulator.dll,Auth.RPSTicketGen.RPSEmulator.dll /resource:Auth\RPSTicketGen\sts.pfx,Auth.RPSTicketGen.sts.pfx /resource:Auth\RPSTicketGen\int-rps.xbox.com.cer,Auth.RPSTicketGen.int-rps.xbox.com.cer /resource:Auth\RPSTicketGen\int-rps.xboxlive.com.cer,Auth.RPSTicketGen.int-rps.xboxlive.com.cer /resource:Auth\RPSTicketGen\RPSDEK.xboxlive.com.cer,Auth.RPSTicketGen.RPSDEK.xboxlive.com.cer /target:library /warnaserror+ AttrExceptsLive.cs AuditInfo.cs BlockUtil.cs BundledAuthData.cs ControlProtocol.cs FDTransaction.cs GameConfig.cs HTTPAuthData.cs HttpWebRequestHelper.cs ITcpClient.cs IUdpClient.cs LiveServer.cs STFLiveGlobals.cs WebRequest.cs WireData.cs XblUser.cs XRL.cs Arbitration\ArbitrationSession.cs Arbitration\HandlerOptions.cs Arbitration\XArbListener.cs Arbitration\XRLDebugResult.cs Arbitration\XRLHealthARB.cs Arbitration\XRLRegister.cs Arbitration\XRLReportResult.cs Arbitration\XRLTimeExtend.cs Signature\XRLAcknowledgeLicenses.cs Signature\XRLAcquireMediaLicenses.cs Signature\XRLCheckRevocation.cs Signature\XRLCreateCertificate.cs Signature\XRLCreateCertificate2.cs Signature\XRLCreatePlayReadyCertificate.cs Signature\XRLGetAAInfo.cs Signature\XRLGetSignedHeader.cs Signature\XRLGetSigningKey.cs Signature\XRLLicenseTransfer.cs Signature\XRLMSTVCreateCertificateRequest.cs Signature\XRLRefreshGameLicense.cs Signature\XRLSignOnBelhalf.cs Signature\XRLValidateCertificate.cs Signature\XRLVerifySignature.cs Signature\XSignature.cs Signature\XSigWeb.cs Signature\XSigWebClient.cs Utilities\BehaviorInjection.cs Utilities\CertificateCheck.cs Utilities\Certificates.cs Utilities\CreditCardGenerator.cs Utilities\drm.cs Utilities\IDCRLUtilities.cs Utilities\PassportFuzzer.cs Utilities\PassportUtilities.cs Utilities\RandomEx.cs Utilities\UserSetup.cs Utilities\WireDataFuzzer.cs Utilities\XHttpListener.cs Utilities\XHttpListenerIOCP.cs Utilities\DBPoster\dbposter.cs Utilities\DBPoster\DbpScriptEngine.cs Utilities\DBPoster\DBTable.cs Utilities\DBPoster\Ppa.cs Utilities\FclFuzzer\FclAnalyzer.cs Utilities\FclFuzzer\FclFuzzer.cs Utilities\FclFuzzer\FclManipulation.cs Database\BulkUserSet.cs Database\Catalog.cs Database\CatalogDb.cs Database\Events.cs Database\Filter.cs Database\Hasher.cs Database\LiveRegistry.cs Database\NameList.cs Database\Npdb.cs Database\OLAP.cs Database\Ppa.cs Database\ProfileWS.cs Database\ProgressWS.cs Database\PuidList.cs Database\QueryDB.cs Database\Reporting.cs Database\ReportingArchive.cs Database\ReportingIIS.cs Database\ReportingSSIS.cs Database\ReportRealtimeDB.cs Database\SecMachineHistoryWS.cs Database\SecUserHistoryWS.cs Database\StatsWS.cs Database\StoredProcs.cs Database\TokendbWS.cs Database\UodbTable.cs Database\UodbWS.cs Database\UserCommercedbWS.cs Database\UtilityClasses.cs Database\webdb.cs Database\WebstoreDB.cs Database\XbosWS.cs Database\XMatch.cs Database\Editor\BetaGroupEditor.cs Database\Editor\ComponentEditor.cs Database\Editor\ConsoleBanEditor.cs Database\Editor\CountryEditor.cs Database\Editor\CultureEditor.cs Database\Editor\CurfewEditor.cs Database\Editor\EditorCommon.cs Database\Editor\InstanceEditor.cs Database\Editor\InterfaceEditor.cs Database\Editor\MachineEditor.cs Database\Editor\MachineGamertagHistoryEditor.cs Database\Editor\MachinePassportHistoryEditor.cs Database\Editor\MachineRecoveryHistoryEditor.cs Database\Editor\OfferEditor.cs Database\Editor\PrivilegeEditor.cs Database\Editor\ReleaseEditor.cs Database\Editor\ServerEditor.cs Database\Editor\ServiceEditor.cs Database\Editor\ServicePrivilegeEditor.cs Database\Editor\ServiceTypeMappingEditor.cs Database\Editor\SiteEditor.cs Database\Editor\SubscriptionFamilyEditor.cs Database\Editor\TitleEditor.cs Database\Editor\UserEditor.cs Database\Editor\UserGamertagHistoryEditor.cs Database\Editor\UserMachineHistoryEditor.cs Database\Editor\UserPassportHistoryEditor.cs Database\Editor\UserRecoveryHistoryEditor.cs Database\Editor\VirtualInterfaceEditor.cs Database\Editor\VoucherEditor.cs Achievement\AchievementBase.cs Achievement\AvatarAssetBase.cs Achievement\XRLClearAchievement.cs.cs Achievement\XRLEnumAchievement.cs Achievement\XRLEnumAvatarAsset.cs Achievement\XRLSyncAchievements.cs Achievement\XRLSyncAvatarAsset.cs Achievement\XRLUploadConsoleListRequest.cs UserSettings\AvatarAssetNames.cs UserSettings\DBHelper.cs UserSettings\Pcontrol.cs UserSettings\XRLClearTitle.cs UserSettings\XRlEnumContext.cs UserSettings\XRLEnumTitle.cs UserSettings\XRLReadSettings.cs UserSettings\XRLSyncAll.cs UserSettings\XRLSyncSettings.cs UserSettings\XRLSyncTitle.cs Alerts\AlertsListener.cs Alerts\AlertsSQL.cs Alerts\XEvents.cs Auth\ActiveAuthHttpClient.cs Auth\AskdcClient.cs Auth\AuthClientBase.cs Auth\AuthUtils.cs Auth\ChallengeManager.cs Auth\kerbErr.cs Auth\kerbStore.cs Auth\kerbStructs.cs Auth\LspClient.cs Auth\NetworkPackets.cs Auth\QOS.cs Auth\RawNic.cs Auth\ServiceKeys.cs Auth\SGClient.cs Auth\SGConnection.cs Auth\SGConnectionPool.cs Auth\SGFakeService.cs Auth\sgPackets.cs Auth\SgServerInfo.cs Auth\SiteInfo.cs Auth\TcpForSG.cs Auth\XkdcClient.cs Auth\XmacsClient.cs Auth\XspProtocol.cs Auth\XspUdp.cs Auth\KDC\AskdcGeneric.cs Auth\KDC\AskdcPC.cs Auth\KDC\AskdcXbox1.cs Auth\KDC\AskdcXbox360.cs Auth\KDC\Asn.cs Auth\KDC\AsnKerberos.cs Auth\KDC\AuthData.cs Auth\KDC\Fuzzing.cs Auth\KDC\KdcClient.cs Auth\KDC\KdcCrypto.cs Auth\KDC\KerberosError.cs Auth\KDC\KerberosPreauths.cs Auth\KDC\KerberosReply.cs Auth\KDC\KerberosRequest.cs Auth\KDC\RequestInterfaces.cs Auth\KDC\SimpleKdcClient.cs Auth\KDC\UserUtils.cs Auth\KDC\XkdcGeneric.cs Auth\KDC\XkdcPC.cs Auth\KDC\XkdcXbox1.cs Auth\KDC\XkdcXbox360.cs Auth\KDC\XmacsGeneric.cs Auth\KDC\XmacsPC.cs Auth\KDC\XmacsXbox1.cs Auth\KDC\XmacsXbox360.cs Auth\RPSTicketGen\Loader.cs Auth\RPSTicketGen\TicketGen.cs Auth\RPSTicketGen\TicketParameters.cs Billing\BillingWebRequest.cs Billing\ContentOfferLoader.cs Billing\Filters.cs Billing\Offer.cs Billing\PostRequest.cs Billing\SharedBillingStructures.cs Billing\VideoCommon.cs Billing\XbosUser.cs Billing\XBox1\XRLAutoupdReferral.cs Billing\XBox1\XRLContentAvailable.cs Billing\XBox1\XRLContentReferral.cs Billing\XBox1\XRLGetGenres.cs Billing\XBox1\XRLGetProductAssets.cs Billing\XBox1\XRLGetProductFeatures.cs Billing\XBox1\XRLGetProductInfo.cs Billing\XBox1\XRLGetRatings.cs Billing\XBox1\XRLGetUpcomingProducts.cs Billing\XBox1\XRLOfferingCancel.cs Billing\XBox1\XRLOfferingDetails.cs Billing\XBox1\XRLOfferingDetailsNoUser.cs Billing\XBox1\XRLOfferingEnumerate.cs Billing\XBox1\XRLOfferingPurchase.cs Billing\XBox1\XRLVerifyNickname.cs Billing\Xenon\XRLFindMediaInstanceUrls.cs Billing\Xenon\XRLInGameContentAvailable.cs Billing\Xenon\XRLInGameContentEnumerate.cs Billing\Xenon\XRLPreviewProductPurchase.cs Billing\Xenon\XRLPurchaseMediaOffers.cs Billing\Xenon\XRLPurchaseOffers.cs Billing\Xenon\XRLTransferMachineLicense.cs Billing\Xenon\XRLXeAcknowledgeLicenseDelivery.cs Billing\Xenon\XRLXeAcquireVideoContentURL.cs Billing\Xenon\XRLXeAcquireVideoLicense.cs Billing\Xenon\XRLXeAssetConsume.cs Billing\Xenon\XRLXeAssetEnumerate.cs Billing\Xenon\XRLXeBannerGetList.cs Billing\Xenon\XRLXeContentAvailable.cs Billing\Xenon\XRLXeContentDetails.cs Billing\Xenon\XRLXeContentEnumerate2.cs Billing\Xenon\XRLXeContentHistoryEnumerate.cs Billing\Xenon\XRLXeContentReferral.cs Billing\Xenon\XRLXeContentRefreshLicense.cs Billing\Xenon\XRLXeContentUpdateAccessTimes.cs Billing\Xenon\XRLXeEnumerateGenres.cs Billing\Xenon\XRLXeEnumerateTitlesByFilter.cs Billing\Xenon\XRLXeGetPointsPurchaseStatus.cs Billing\Xenon\XRLXeGetRevocationList.cs Billing\Xenon\XRLXeGetTitleDetails.cs Billing\Xenon\XRLXeOfferingVerifyToken.cs Billing\Xenon\XRLXeOfferPurchase.cs Billing\Xenon\XRLXeOfferPurchaseGamertag.cs Billing\Xenon\XRLXeOfferPurchaseMusic.cs Billing\Xenon\XRLXeOfferPurchaseVideo.cs Billing\Xenon\XRLXeSubscriptionDetails.cs Billing\Xenon\XRLXeSubscriptionEnumerate.cs Billing\Xenon\XRLXeVerifyToken.cs Billing\DRM\XRLXeWmdrmCreateCertificate.cs Callback\Reference.cs Callback\SvcProviderWrapper.cs Catalog\CatalogFilters.cs Catalog\CatalogRequest.cs Catalog\QueryRequest.cs FakeSG\FakeSGBase.cs FakeSG\FakeSGClient.cs FakeSG\FakeSGRemote.cs FakeSG\Global.cs FakeSG\IFakeSGClient.cs FakeSG\QValPacket.cs FakeSG\SGInfo.cs FakeAAInfo\FakeAAInfo.cs Feedback\FeedbackSupport.cs Feedback\XrlFeedback.cs Feedback\xrlUserComplaint.cs Feedback\XrlUserReview.cs Vortex\MyWebTransaction.cs Vortex\Vortexbase.cs Vortex\VortexLS.cs Vortex\VortexUtil.cs Vortex\VortexWeb.cs Vortex\xrlvortexlogstring.cs xsts\RSTGenerator.cs xsts\xrlissuetoken.cs xsts\XSTSUtil.cs XConnSrv\Buffer.cs XConnSrv\ConnectionSrv.cs XConnSrv\PNConnection.cs XConnSrv\PNUsersBuilder.cs XConnSrv\ProtocolConnection.cs XConnSrv\SubscriptionBuilder.cs XConnSrv\XSubNotiProt.cs XConnSrv\FakeMC\FakeMemCache.cs XConnSrv\FakeMC\MCProtocol.cs XConnSrv\FakeMC\MCServerNetwork.cs Presence\AffiliateState.cs Presence\FriendsCommon.cs Presence\PMMsgFriendsLimitedPresence.cs Presence\PMsgAcceptBuddy.cs Presence\PMsgAddAffiliates.cs Presence\PMsgAddBuddy.cs Presence\PMsgAlive.cs Presence\PMsgAlive2.cs Presence\PMsgAliveInternal.cs Presence\PMsgBlockVoice.cs Presence\PMsgCancelInvite.cs Presence\PMsgCheckTitleMessages.cs Presence\PMsgDeleteBuddy.cs Presence\PMsgFindUser.cs Presence\PMsgGetFriendsList.cs Presence\PMsgGetPresenceInfo.cs Presence\PMsgInvalidateUser.cs Presence\PMsgInvite.cs Presence\PMsgInviteAnswer.cs Presence\PMsgIsAffiliate.cs Presence\PMsgKick.cs Presence\PMsgLogonCheck.cs Presence\PMsgNickname.cs Presence\PMsgPeerSession.cs Presence\PMsgPeerSubscribe.cs Presence\PMsgPeerSubscribeEx.cs Presence\PMsgPeerUnsubscribe.cs Presence\PMsgQueryAffiliates.cs Presence\PMsgRejectBuddy.cs Presence\PMsgState.cs Presence\PMsgUnblockVoice.cs Presence\PMsgWebFriends.cs Presence\WebFriendData.cs Notification\Message.cs Notification\MsgDetails.cs Notification\MsgProperty.cs Notification\MsgUtils.cs Notification\QMsgAdd.cs Notification\QMsgDeleteMsg.cs Notification\QMsgDeleteSystemMsg.cs Notification\QMsgDeleteTitle.cs Notification\QMsgDequeue.cs Notification\QMsgDetails.cs Notification\QMsgEnumMsgs.cs Notification\QMsgEnumMsgs2.cs Notification\QMsgEnumSystemMsgs.cs Notification\QMsgEnumTitles.cs Notification\QMsgFlags.cs Notification\QMsgRevokeExMsg.cs Notification\QMsgRevokeMsg.cs Notification\QMsgRevokeMsgByProp.cs Notification\QMsgSendMsg.cs Notification\QMsgSendSystemMsg.cs Notification\QMsgSummary.cs Notification\QMsgSummary2.cs Notification\QMsgSystemDetails.cs Notification\SystemMessage.cs Notification\SystemMsgFolder.cs Notification\SystemMsgSummary.cs Notification\UserMessage.cs Notification\UserMsgFolder.cs Notification\UserMsgSummary.cs Notification\usermsgsummary2.cs PresNotiCommon\ClientInfo.cs PresNotiCommon\PNConditionalWaitState.cs PresNotiCommon\PNMsg.cs PresNotiCommon\PNMsgDeadSG.cs PresNotiCommon\PNMsgDeadUser.cs PresNotiCommon\PNMsgDeadXbox.cs PresNotiCommon\PNMsgHello.cs PresNotiCommon\PNQValConditionalWaitState.cs PresNotiCommon\PNUser.cs PresNotiCommon\PNXbox.cs PresNotiCommon\XonPresNoti.cs QueryAndLsp\XRLLspAdvertise.cs QueryAndLsp\XRLLspEnumerate.cs QueryAndLsp\XRLLSPProxyAdvertise.cs QueryAndLsp\XRLLSPProxyGetSiteInfo.cs Ratings\XRLUserRatings.cs Stats\DBHelper.cs Stats\PlatformVisibleLeaderboard.cs Stats\StatsFD.cs Stats\StatsPostReq.cs Stats\StatsRead.cs Stats\XeEnumRequest.cs Stats\XRLCommitAttachment.cs Stats\XRLComp.cs Stats\XRLEnumLBRequest.cs Stats\XRLEstimateRankForRatings.cs Stats\XRLGetRequest.cs Stats\XRLRemoveAtt.cs Stats\XRLResetUser.cs Stats\XRLSetRequest.cs Stats\XRLSubAttr.cs Stats\XRLUsageStore.cs Stats\XRLWebEnumLB.cs Stats\IMDB\IMDB.cs Stats\IMDB\PlayerTeam.cs STS\STSUtil.cs TestFD\XRLAddPaypalPaymentInstrument.cs TestFD\XRLCreateXboxComAccount.cs TestFD\XRLFriendCommands.cs TestFD\XRLGrantAchievements.cs TestFD\XRLPingTestFD.cs TestFD\XRLProfileCommands.cs TestFD\XRLReflect.cs TestFDXsts\Attribute.cs TestFDXsts\Code.cs TestFDXsts\CommonBase.cs TestFDXsts\Mixed.cs TestFDXsts\MixedOverride.cs TestFDXsts\SimpleBase.cs TestFDXsts\WebConfig.cs TestFDXsts\Soap\Attribute.cs TestFDXsts\Soap\Code.cs TestFDXsts\Soap\Common.cs TestFDXsts\Soap\Mixed.cs TestFDXsts\Soap\MixedOverride.cs TestFDXsts\Soap\Simple.cs TestFDXsts\Soap\WebConfig.cs TestFDXsts\Wcf\Attribute.cs TestFDXsts\Wcf\Attribute.wsdl.cs TestFDXsts\Wcf\Code.cs TestFDXsts\Wcf\Code.wsdl.cs TestFDXsts\Wcf\Common.cs TestFDXsts\Wcf\Mixed.cs TestFDXsts\Wcf\Mixed.wsdl.cs TestFDXsts\Wcf\MixedOverride.cs TestFDXsts\Wcf\MixedOverride.wsdl.cs TestFDXsts\Wcf\Simple.cs TestFDXsts\Wcf\Simple.wsdl.cs TestFDXsts\Wcf\WebConfig.cs TestFDXsts\Wcf\WebConfig.wsdl.cs LBServer\LBSClient.cs LBServer\LBSRequest.cs LBServer\Protocol.cs LiveInfo\XRLGetLiveConfig.cs LiveInfo\XRLGetNetworkAuthorizationList.cs Cron\XrlAddJob.cs Cron\XrlFindJobs.cs Cron\XrlGetJob.cs Cron\XrlRemoveJob.cs Cron\XrlTimeWarp.cs UserAccount\Passport.cs UserAccount\UacsCommon.cs UserAccount\UacsCommon2.cs UserAccount\UacsCommonAccountCreation.cs UserAccount\UacsCommonLocale.cs UserAccount\UacsProtocolClasses.cs UserAccount\Ups.cs UserAccount\UserPrivileges.cs UserAccount\UserQueue.cs UserAccount\UserTestBase.cs UserAccount\Xbox1\XRLAcceptTOU.cs UserAccount\Xbox1\XRLChangeGamerTag.cs UserAccount\Xbox1\XRLClearSubscriptions.cs UserAccount\Xbox1\XRLCreateOwner.cs UserAccount\Xbox1\XRLEnumerateEligible.cs UserAccount\Xbox1\XRLGetPaymentInfo.cs UserAccount\Xbox1\XRLGetPostalCode.cs UserAccount\Xbox1\XRLGetSubscriptionStatus.cs UserAccount\Xbox1\XRLLinkWebAccount.cs UserAccount\Xbox1\XRLRenewSubscription.cs UserAccount\Xbox1\XRLReserveName.cs UserAccount\Xbox1\XRLRestoreAccountRequest.cs UserAccount\Xbox1\XRLSetPaymentInfo.cs UserAccount\Xbox1\XRLSetUserAccountStatus.cs UserAccount\Xbox1\XRLSetUserPIN.cs UserAccount\Xbox1\XRLSetUserSettings.cs UserAccount\Xbox1\XRLSetUserSettings2.cs UserAccount\Xbox1\XRLTroubleshootAccount.cs UserAccount\Xbox1\XRLVerifyBillingPIN.cs UserAccount\Xbox1\XRLVerifyVoucher.cs UserAccount\Xbox1\XRLVerifyVoucherGetOffer.cs UserAccount\Xbox1\XRLWebGetUserSettings.cs UserAccount\Xenon\LightWgtXeUser.cs UserAccount\Xenon\offers.cs UserAccount\Xenon\XeLiveAccountUser.cs UserAccount\Xenon\XRLArgoAuthenticateAccount.cs UserAccount\Xenon\XRLCreateUserAndBillableAccount.cs UserAccount\Xenon\XRLDisableSubscription.cs UserAccount\Xenon\XRLGenerateGamertag.cs UserAccount\Xenon\XRLGetDependentSignedPuid.cs UserAccount\Xenon\XRLGetNoAgeOut.cs UserAccount\Xenon\XRLGetSubscriptionInfo.cs UserAccount\Xenon\XrlGetUserBillingNotification.cs UserAccount\Xenon\XRLGetUserTenure.cs UserAccount\Xenon\XRLMergeUserEntitlements.cs UserAccount\Xenon\XRLPassportAddProof.cs UserAccount\Xenon\XRLPassportCreateGenerated.cs UserAccount\Xenon\XRLPassportGetProofs.cs UserAccount\Xenon\XRLPassportGetProofTypes.cs UserAccount\Xenon\XRLPreviewSwitchUserCountry.cs UserAccount\Xenon\XRLSwitchOwnerPassport.cs UserAccount\Xenon\XRLSwitchUserCountry.cs UserAccount\Xenon\XRLSwitchUserDateOfBirth.cs UserAccount\Xenon\XRLXeABCHGetContactlistGamertags.cs UserAccount\Xenon\XRLXeAcceptTermsOfService.cs UserAccount\Xenon\XRLXeAccountQuery.cs UserAccount\Xenon\XRLXeAcknowledgeDowngrade.cs UserAccount\Xenon\XRLXeAddDependent.cs UserAccount\Xenon\XRLXeAddPaymentInstrument.cs UserAccount\Xenon\XRLXeAddPaymentInstrumentEx.cs UserAccount\Xenon\XRLXeChangeSubscriptionPaymentInstrument.cs UserAccount\Xenon\XRLXeCreateLiveAccount.cs UserAccount\Xenon\XRLXeCreateLiveAccountEx.cs UserAccount\Xenon\XRLXeCreateXboxComAccount.cs UserAccount\Xenon\XRLXeEnumFamilyMembers.cs UserAccount\Xenon\XRLXeFamilySubscriptionAssignGoldUser.cs UserAccount\Xenon\XRLXeFamilySubscriptionGoldUserCount.cs UserAccount\Xenon\XRLXeFamilySubscriptionRemoveGoldUser.cs UserAccount\Xenon\XRLXeGetAccountInfo.cs UserAccount\Xenon\XRLXeGetAccountInfoFromPassport.cs UserAccount\Xenon\XRLXeGetANID.cs UserAccount\Xenon\XRLXeGetKey.cs UserAccount\Xenon\XRLXeGetLinkedGamerTag.cs UserAccount\Xenon\XRLXeGetParentalControlGroupTemplates.cs UserAccount\Xenon\XRLXeGetParentalControls.cs UserAccount\Xenon\XRLXeGetPassportCredentialListByName.cs UserAccount\Xenon\XRLXeGetPaymentInstruments.cs UserAccount\Xenon\XRLXeGetPointsBalance.cs UserAccount\Xenon\XRLXeGetUserInfo.cs UserAccount\Xenon\XRLXeGetUserParentalControlGroup.cs UserAccount\Xenon\XRLXeGetUserSubscriptionDetails.cs UserAccount\Xenon\XRLXeGetUserType.cs UserAccount\Xenon\XRLXeGetUserWebInfo.cs UserAccount\Xenon\XRLXeGraduateUser.cs UserAccount\Xenon\XRLXeGraduateUserEx.cs UserAccount\Xenon\XRLXeLinkXbox1Account.cs UserAccount\Xenon\XRLXeMigrateXbox1User.cs UserAccount\Xenon\XRLXeMigrateXboxComUser.cs UserAccount\Xenon\XRLXePassportChangePassword.cs UserAccount\Xenon\XRLXePassportCreate.cs UserAccount\Xenon\XRLXePassportGetBuddyGamertag.cs UserAccount\Xenon\XRLXePassportGetEncryptedProxyParameters.cs UserAccount\Xenon\XRLXePassportGetFriendMemberName.cs UserAccount\Xenon\XRLXePassportGetMemberName.cs UserAccount\Xenon\XRLXePassportGetPuidFromMemberName.cs UserAccount\Xenon\XRLXePassportGetSecretQuestions.cs UserAccount\Xenon\XRLXePassportGetUserData.cs UserAccount\Xenon\XRLXePassportLogin.cs UserAccount\Xenon\XRLXePreviewMergeSubscription.cs UserAccount\Xenon\XRLXeRecoverAccount.cs UserAccount\Xenon\XRLXeRemoveDependent.cs UserAccount\Xenon\XRLXeRemovePaymentInstrument.cs UserAccount\Xenon\XRLXeReplaceOwnerPassport.cs UserAccount\Xenon\XRLXeReplaceUserPassport.cs UserAccount\Xenon\XRLXeReserveGamertag.cs UserAccount\Xenon\XRLXeSetAccountInfo.cs UserAccount\Xenon\XRLXeSwitchUserPassport.cs UserAccount\Xenon\XRLXeTroubleshootAccount.cs UserAccount\Xenon\XRLXeUpdateParentalControlGroup.cs UserAccount\Xenon\XRLXeUpdateParentalControls.cs UserAccount\Xenon\XRLXeUpdatePaymentInstrument.cs UserAccount\Xenon\XRLXeUpdatePaymentInstrumentEx.cs UserAccount\Xenon\XRLXeUpdateXboxComActivity.cs UserAccount\Xenon\XRLXeUpsGetProfile.cs UserAccount\Xenon\XRLXeUpsUpdateProfile.cs UserAccount\Xenon\XRLXeUserGetAccountInfo.cs UserAccount\Xenon\XRLXeUserGetAge.cs UserAccount\Xenon\XRLXeUserGetAgeGroup.cs UserAccount\Xenon\XRLXeVerifyBillingInfo.cs UserAccount\Xenon\XRLXeVerifyParentCreditCard.cs UserAccount\Xenon\XRLXeVerifyParentCreditCardEx.cs ZuneSignIn\UserAccountService.cs ZuneSignIn\UserAccountServiceWrapper.cs XBanc\XBanc.cs XCrypto\XRLXCryptoDecrypt.cs XCrypto\XRLXCryptoEncrypt.cs XCrypto\XRLXCryptoSign.cs XCrypto\XRLXCryptoVerifyConsolePak.cs XCrypto\XRLXCryptoVerifySignature.cs Storage\Constants.cs Storage\StorUtil.cs Storage\XRLAccessToken.cs Storage\XRLEnumFiles.cs Storage\XRLGetQuota.cs Storage\XRLNameResolver.cs Storage\XRLReadAchievements.cs Storage\XRLReadFile.cs Storage\XRLReadFileHash.cs Storage\XRLRemoveFile.cs Storage\XRLReportBrokenLink.cs Storage\XRLWriteFile.cs Storage\Azure\BlobClient.cs Storage\Azure\BlobTableClient.cs Storage\Azure\FileTableClient.cs Storage\Azure\FileTableLastUpdateClient.cs Storage\Azure\HttpParameterAttributes.cs Storage\Azure\QueueClient.cs Storage\Azure\StorageAccountTableClient.cs Storage\Azure\TableClient.cs Storage\Azure\XlfsAdminGetChangedBlobs.cs Storage\Azure\XlfsAdminGetChangedBlobsContinue.cs Storage\Azure\XlfsAdminGetStorageAccount.cs Storage\Azure\XlfsAdminPutStorageAccount.cs Storage\Azure\XLFSClient.cs Storage\Azure\XlfsConfiguration.cs Storage\Azure\XlfsTestIsWriteFileEntriesComplete.cs Storage\Azure\XlfsTestWriteFileEntries.cs Storage\Azure\XlfsUploadBegin.cs Storage\Azure\XlfsUploadEnd.cs Storage\Azure\XlfsWebRequest.cs z:\xonline_main\private\server\xlfs\common\FileTableContext.cs z:\xonline_main\private\server\xlfs\common\FileTableDataSource.cs z:\xonline_main\private\server\xlfs\common\FileTableEntry.cs z:\xonline_main\private\server\xlfs\common\FileTableLastUpdateContext.cs z:\xonline_main\private\server\xlfs\common\FileTableLastUpdateDataSource.cs z:\xonline_main\private\server\xlfs\common\FileTableLastUpdateEntry.cs z:\xonline_main\private\server\xlfs\common\BlobTableContext.cs z:\xonline_main\private\server\xlfs\common\BlobTableDataSource.cs z:\xonline_main\private\server\xlfs\common\BlobTableEntry.cs z:\xonline_main\private\server\xlfs\common\StorageAccountTableContext.cs z:\xonline_main\private\server\xlfs\common\StorageAccountTableDataSource.cs z:\xonline_main\private\server\xlfs\common\StorageAccountTableEntry.cs Matchmaking\MatchPartUtil.cs Matchmaking\MatchSession.cs Matchmaking\matchsessionset.cs Matchmaking\MatchUtilities.cs Matchmaking\XRL2AttribParam.cs Matchmaking\XRL2AttribParamWeighted.cs Matchmaking\XRL2CreateUpdateSession.cs Matchmaking\XRL2DeleteSession.cs Matchmaking\XRL2SearchSession.cs Matchmaking\XRLCreateUpdateSession.cs Matchmaking\XRLDeadXBox.cs Matchmaking\XRLDeleteSession.cs Matchmaking\XRLSearchSession.cs Matchmaking\XRLSplitSession.cs Matchmaking\XRLTitleChange.cs StringServer\XrlAddString.cs StringServer\XrlGetString.cs StringServer\XrlGetTitleID.cs StringServer\XrlLogString.cs StringServer\XrlVetString.cs GI\GIblob.cs GI\giprot.cs GI\Pong.cs GI\PresenceTitleConfig.cs Diagnostics\XDSPackets.cs Reporting\Cleanser.cs Reporting\CleanserConnection.cs Reporting\MessageGenerator.cs Reporting\ReportingCommon.cs Reporting\ReportingData.cs Reporting\ReportingDataLoader.cs Reporting\ReportingEvent.cs Reporting\ReportingHelper.cs Reporting\ReportingJob.cs Reporting\ReportingJobFactory.cs Reporting\ReportingReferenceObject.cs Reporting\ReportingReferenceObjectContainer.cs Reporting\ReportingReferenceObjectFactory.cs Reporting\ReportingService.cs Reporting\ReportingSQLQueryBuilder.cs Reporting\ReportingTable.cs Reporting\ReportingVerification.cs Reporting\ReportingXBLReport.cs Reporting\Jobs\CdbVideoProcessing_SSIS.cs Reporting\Jobs\CIQDatafeed.cs Reporting\Jobs\DailyProcessing_Crux.cs Reporting\Jobs\DailyProcessing_GameUsage.cs Reporting\Jobs\DailySSAS_AchievementsProcessing.cs Reporting\Jobs\DailySSAS_CDBCruxUsageProcessing.cs Reporting\Jobs\DailySSAS_CruxUsageProcessing.cs Reporting\Jobs\DailySSAS_GameUsageProcessing.cs Reporting\Jobs\DailySSAS_VideoCubeProcessing.cs Reporting\Jobs\FilterDB_PurgeFactTables.cs Reporting\Jobs\OlapCubeGeneration.cs Reporting\Jobs\OlapJob.cs Reporting\Jobs\RealtimeDB_PurgeFactTables.cs Reporting\Jobs\RealtimeDB_RealtimeProcessing.cs Reporting\Jobs\ReportArchiveDB_TransferFactData.cs Reporting\Jobs\ReportArchiveDB_UpdateFilegroups.cs Reporting\Jobs\ReportingDB_DropArchivedFacts.cs Reporting\Jobs\ReportingDB_PurgeFactTables.cs Reporting\Jobs\SCGExport_SSIS.cs Reporting\Jobs\SCGImportFeed_SSIS.cs Reporting\Jobs\SSISJob.cs Reporting\Jobs\UODB_Accounts_SSIS.cs Reporting\Jobs\UODB_Music_SSIS.cs Reporting\Jobs\UODB_Offers_SSIS.cs Reporting\Jobs\UODB_Primary_SSIS.cs Reporting\Jobs\UODB_Purchase_SSIS.cs Reporting\Jobs\UODB_Realtime_SSIS.cs Reporting\Jobs\UODB_Secondary_SSIS.cs Reporting\Jobs\UODB_Video_SSIS.cs Reporting\Jobs\WMIS_Download.cs Reporting\Reports\AchievementSummary.cs Reporting\Reports\ContractualPartners.cs Reporting\Reports\FirstTitlePlayed.cs Reporting\Reports\LastWebActivity.cs Reporting\Reports\MarketplaceDownloadSummary.cs Reporting\Reports\MarketplaceScorecard.cs Reporting\Reports\MarketRedeemedContentTitleOffer.cs Reporting\Reports\MarketRedeemedContentTypeTier.cs Reporting\Reports\MusicRoyalty.cs Reporting\Reports\PublisherTitleUsageDaily.cs Reporting\Reports\PublisherTitleUsageMonthly.cs Reporting\Reports\RealTimeAccounts.cs Reporting\Reports\RealTimeTitleUsage.cs Reporting\Reports\SubscriberLife.cs Reporting\Reports\TitleUsageDetails.cs Reporting\Reports\TitleUsageSummary.cs Reporting\Reports\VideoRoyalty.cs Reporting\Reports\VideoStudio.cs Reporting\Reports\VisitorFrequency.cs Reporting\Reports\Xbox1DownloadDetails.cs Reporting\Reports\XboxAccountSummary.cs Reporting\Tables\StagingTable.cs Reporting\Tables\t_achievements.cs Reporting\Tables\t_acquirelicense_fact.cs Reporting\Tables\t_base_offers.cs Reporting\Tables\t_content_fact.cs Reporting\Tables\t_content_package.cs Reporting\Tables\T_dmp_purchase_transactions.cs Reporting\Tables\t_elite_migration_fact.cs Reporting\Tables\t_fdb_time.cs Reporting\Tables\t_guest_fact.cs Reporting\Tables\t_machines.cs Reporting\Tables\t_migrate_account_fact.cs Reporting\Tables\t_msg_snd_fact.cs Reporting\Tables\t_new_account_fact.cs Reporting\Tables\t_offers.cs Reporting\Tables\t_percentage_viewed_video_fact.cs Reporting\Tables\t_presence_fact.cs Reporting\Tables\t_provision_fact.cs Reporting\Tables\t_publisher_titles.cs Reporting\Tables\t_purchase_fact.cs Reporting\Tables\t_raw_dmp_media_fact.cs Reporting\Tables\t_rdb_acquirelicense_fact.cs Reporting\Tables\t_rdb_content_fact.cs Reporting\Tables\t_rdb_content_xbox360_fact.cs Reporting\Tables\t_rdb_dmp_media_fact.cs Reporting\Tables\t_rdb_guest_fact.cs Reporting\Tables\t_rdb_migrate_account_fact.cs Reporting\Tables\t_rdb_msg_snd_fact.cs Reporting\Tables\t_rdb_new_account_fact.cs Reporting\Tables\t_rdb_percentage_viewed_video_fact.cs Reporting\Tables\t_rdb_presence_fact.cs Reporting\Tables\t_rdb_provision_fact.cs Reporting\Tables\t_rdb_purchase_fact.cs Reporting\Tables\t_rdb_session_fact.cs Reporting\Tables\t_rdb_usagestore_adsupported_fact.cs Reporting\Tables\t_rdb_usagestore_fact.cs Reporting\Tables\t_session_fact.cs Reporting\Tables\t_spscustomeraccount.cs Reporting\Tables\t_subscriptions.cs Reporting\Tables\t_titles.cs Reporting\Tables\t_title_culture_details.cs Reporting\Tables\t_title_feature_data.cs Reporting\Tables\t_title_offers.cs Reporting\Tables\t_usagestore_adsupported_fact.cs Reporting\Tables\t_usagestore_fact.cs Reporting\Tables\t_users.cs Reporting\Tables\t_user_musicnet_accounts.cs Reporting\Tables\t_user_per_client_type_data.cs Reporting\Tables\t_user_per_client_type_data_weekly.cs Reporting\Tables\t_user_settings.cs Reporting\Tables\t_xmsg_user_titles.cs Reporting\Verifications\Verify_DailyProcessing_GameUsage.cs Reporting\Verifications\Verify_OlapMeasureDimension.cs Reporting\Verifications\Verify_OlapReportData.cs Reporting\Events\CleanserTCPEvent.cs Reporting\Data\OlapDailyProcessingData.cs Reporting\Data\OlapGenericData.cs Reporting\Data\RealtimeDBStressData.cs Reporting\Data\RealtimeDBStressDataLoader.cs RegDB\RegDB.cs RegDB\RegDBEventListener.cs RegDB\RegDBLog.cs RegDB\RegHistoryRetriever.cs TestDB\TestDBConnection.cs TestDB\TestDBReader.cs TestDB\TestDBTree.cs msnrr\msnrr-wsdl-aggregator.cs msnrr\msnrr-wsdl-multiple-rating.cs msnrr\msnrr-wsdl-single-rating.cs msnrr\msnrr.cs WebWidget\RequestInfo.cs WebWidget\WCAlerts.cs WebWidget\WCGeneralInfo.cs WebWidget\WCInitializer.cs WebWidget\WCMessaging.cs WebWidget\WCPresence.cs WebWidget\WCProfile.cs WebWidget\WCQuery.cs WebWidget\WCSignature.cs WebWidget\WCStats.cs WebWidget\WCStorage.cs WebWidget\WCTeams.cs WebWidget\WCUserAccount.cs XTOU\XRLGetLanguagesForCountry.cs WebReferences\STFSoapHttpClientProtocol.cs WebReferences\TeamWidget\Reference.cs WebReferences\WidgetAlerts\Reference.cs WebReferences\WidgetGeneralInfo\Reference.cs WebReferences\WidgetUserAccount\Reference.cs WebReferences\WidgetMessaging\Reference.cs WebReferences\WidgetPresence\Reference.cs WebReferences\WidgetProfile\Reference.cs WebReferences\WidgetQuery\Reference.cs WebReferences\WidgetSignature\Reference.cs WebReferences\WidgetStats\Reference.cs WebReferences\WidgetStorage\Reference.cs WebReferences\Cust\Reference.cs WebReferences\Cust\SvcProviderWrapper.cs WebReferences\Uacs\Reference.cs WebReferences\Uacs\SvcProviderWrapper.cs WebReferences\Uacs2\Reference.cs WebReferences\Uacs2\SvcProviderWrapper.cs WebReferences\Xbos2\reference.cs WebReferences\Xbos2\SvcProviderWrapper.cs WebReferences\Xbos_History\Reference.cs WebReferences\Xbos_History\SvcProviderWrapper.cs WebReferences\sts\Reference.cs WebReferences\sts\SvcProviderWrapper.cs Z:\XONLINE_MAIN\private\server\stats\ranking\Game.cs Z:\XONLINE_MAIN\private\server\stats\ranking\GaussianApproximations.cs Z:\XONLINE_MAIN\private\server\stats\ranking\Matrix.cs Z:\XONLINE_MAIN\private\server\stats\ranking\MuSigmaRankingSystem.cs Z:\XONLINE_MAIN\private\server\stats\ranking\MuSigmaSkill.cs Z:\XONLINE_MAIN\private\server\stats\ranking\PlayerSkills.cs Z:\XONLINE_MAIN\private\server\stats\ranking\PlayerSkillsList.cs Z:\XONLINE_MAIN\private\server\stats\ranking\Ranking.cs Z:\XONLINE_MAIN\private\server\stats\ranking\RankingSystem.cs Z:\XONLINE_MAIN\private\server\stats\ranking\Skill.cs Z:\XONLINE_MAIN\private\server\stats\ranking\Team.cs STFUtil\AccountsUtil.cs STFUtil\DbUtil.cs STFUtil\DirectDebitRandomizer.cs STFUtil\PassportTestUtil.cs STFUtil\StfXrlUtil.cs z:\xonline_main\private\server\testfd\protocol\TestFDProtocol.cs objd\amd64\_generated.cs
100> 2>Database\SecMachineHistoryWS.cs(23,37): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>errors in directory z:\xonline_main\private\test\stftests\servertestframework\stflivetools
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\secmachinehistoryws.cs(23) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\SecUserHistoryWS.cs(23,37): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\secuserhistoryws.cs(23) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineGamertagHistoryEditor.cs(121,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineGamertagHistoryEditor.cs(144,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineGamertagHistoryEditor.cs(160,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineGamertagHistoryEditor.cs(74,75): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachinePassportHistoryEditor.cs(121,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachinePassportHistoryEditor.cs(144,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachinePassportHistoryEditor.cs(160,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachinePassportHistoryEditor.cs(74,75): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineRecoveryHistoryEditor.cs(118,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(118) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineRecoveryHistoryEditor.cs(141,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(141) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineRecoveryHistoryEditor.cs(157,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(157) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\MachineRecoveryHistoryEditor.cs(72,75): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(72) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserGamertagHistoryEditor.cs(121,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserGamertagHistoryEditor.cs(144,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserGamertagHistoryEditor.cs(160,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserGamertagHistoryEditor.cs(204,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(204) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserGamertagHistoryEditor.cs(74,75): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserPassportHistoryEditor.cs(121,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserPassportHistoryEditor.cs(144,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserPassportHistoryEditor.cs(160,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserPassportHistoryEditor.cs(74,75): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserRecoveryHistoryEditor.cs(118,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(118) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserRecoveryHistoryEditor.cs(141,58): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(141) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserRecoveryHistoryEditor.cs(157,39): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(157) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Database\Editor\UserRecoveryHistoryEditor.cs(72,75): error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(72) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100> 2>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj" (BuildCompiled target(s)) -- FAILED.
100> 1>Done Building Project "z:\xonline_main\private\test\stftests\servertestframework\stflivetools\stflivetools.csproj" (BuildCompiled target(s)) -- FAILED.
100>Build FAILED.
100>Time Elapsed 00:00:25.08
100>MSBuild.cmd "stflivetools.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildCompiled /p:Pass=Compile failed - rc = 1

1>Executing Pass2 MSBuild Tasks z:\xonline_main\private\test\stftests\servertestframework\stflivetools *************
1>'MSBuild.cmd "stflivetools.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildLinked /p:Pass=Link'
1>Running MsBuild v4.0
Executing post build scripts  *************
Fix Public Change
1>'Z:\XONLINE_MAIN\public\ext\tools\buildpost.cmd '
1>Running scripts in Z:\XONLINE_MAIN\target\debug\AMD64\PostBuildScripts
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\buildd.err ===
100>errors in directory z:\xonline_main\private\test\stftests\servertestframework\stflivetools
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\secmachinehistoryws.cs(23) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\secuserhistoryws.cs(23) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinegamertaghistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinepassporthistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(118) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(141) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(157) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\machinerecoveryhistoryeditor.cs(72) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecMachineHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(204) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\usergamertaghistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(121) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(144) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(160) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userpassporthistoryeditor.cs(74) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(118) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(141) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(157) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>z:\xonline_main\private\test\stftests\servertestframework\stflivetools\2>database\editor\userrecoveryhistoryeditor.cs(72) : error CS0117: 'xonline.common.config.ConfigUtil' does not contain a definition for 'SecUserHistoryWebstoreApp' [z:\xonline_main\private\test\stftests\servertestframework\STFLive\STFLive.csproj]
100>MSBuild.cmd "stflivetools.csproj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildCompiled /p:Pass=Compile failed - rc = 1
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\UpgradeLog.XML ===
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type='text/xsl' href='_UpgradeReport_Files/UpgradeReport.xslt'?><UpgradeLog>
<Properties><Property Name="Solution" Value="STFLiveTools">
</Property><Property Name="Solution File" Value="Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\STFLiveTools.sln">
</Property><Property Name="Date" Value="Thursday, October 25, 2012">
</Property><Property Name="Time" Value="12:53:17 PM">
</Property></Properties><Event ErrorLevel="0" Project="STFLiveTools" Source="STFLiveTools.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\STFLiveTools.csproj">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ToolsTestBase.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ToolsTestBase.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTUtility.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTUtility.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\ConfigFileSerializer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\ConfigFileSerializer.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\LiveTitleConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\LiveTitleConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\MarketplaceConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\MarketplaceConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XboxConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\XboxConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XlastConfigV03.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\XlastConfigV03.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XmlOfferFile.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\XmlOfferFile.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XmlOfferMap.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\XmlOfferMap.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XscConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ConfigFiles\XscConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Achievements.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\Achievements.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Contexts.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\Contexts.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\GameModes.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\GameModes.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\GamerPictures.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\GamerPictures.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Images.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\Images.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\LocalizedStrings.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\LocalizedStrings.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Matchmaking.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\Matchmaking.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Presence.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\Presence.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\ProductInformation.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\ProductInformation.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Properties.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\Properties.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\StatsViews.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\StatsViews.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\XLASTFactory.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\XLASTFactory\XLASTFactory.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\ClientToolBase.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\ClientToolBase.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\EmulatorUtil.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\EmulatorUtil.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveContent.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\LiveContent.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveMatch.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\LiveMatch.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveOffer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\LiveOffer.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveStats.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\LiveStats.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveTitle.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\LiveTitle.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\MsgTool.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\MsgTool.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\QuickEnforce.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\QuickEnforce.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\spac.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\spac.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\SPUT.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\SPUT.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\SystemCheck.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\SystemCheck.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\VoucherMgr.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\VoucherMgr.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\WSTRunner.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\WSTRunner.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\XblCfg.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup\ClientTools\XblCfg.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="STFLiveTools.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFLiveTools" Source="STFLiveTools.csproj" Description="Converted">
</Event><Event ErrorLevel="2" Project="" Source="STFLiveTools.csproj" Description="Unable to read the project file 'STFLiveTools.csproj'. &#xA;Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\STFLiveTools.csproj(3,4): The imported project &quot;Z:\Microsoft.Build.settings&quot; was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.">
</Event></UpgradeLog>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\UpgradeLog2.XML ===
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type='text/xsl' href='_UpgradeReport_Files/UpgradeReport.xslt'?><UpgradeLog>
<Properties><Property Name="Solution" Value="STFLiveTools">
</Property><Property Name="Solution File" Value="Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\STFLiveTools.sln">
</Property><Property Name="Date" Value="Thursday, October 25, 2012">
</Property><Property Name="Time" Value="12:53:28 PM">
</Property><Property Name="Log Number" Value="2">
</Property></Properties><Event ErrorLevel="0" Project="STFLiveTools" Source="STFLiveTools.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\STFLiveTools.csproj">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ToolsTestBase.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ToolsTestBase.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTUtility.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTUtility.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\ConfigFileSerializer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\ConfigFileSerializer.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\LiveTitleConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\LiveTitleConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\MarketplaceConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\MarketplaceConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XboxConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\XboxConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XlastConfigV03.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\XlastConfigV03.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XmlOfferFile.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\XmlOfferFile.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XmlOfferMap.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\XmlOfferMap.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ConfigFiles\XscConfig.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ConfigFiles\XscConfig.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Achievements.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\Achievements.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Contexts.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\Contexts.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\GameModes.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\GameModes.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\GamerPictures.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\GamerPictures.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Images.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\Images.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\LocalizedStrings.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\LocalizedStrings.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Matchmaking.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\Matchmaking.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Presence.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\Presence.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\ProductInformation.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\ProductInformation.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\Properties.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\Properties.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\StatsViews.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\StatsViews.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="XLASTFactory\XLASTFactory.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\XLASTFactory\XLASTFactory.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\ClientToolBase.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\ClientToolBase.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\EmulatorUtil.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\EmulatorUtil.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveContent.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\LiveContent.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveMatch.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\LiveMatch.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveOffer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\LiveOffer.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveStats.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\LiveStats.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\LiveTitle.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\LiveTitle.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\MsgTool.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\MsgTool.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\QuickEnforce.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\QuickEnforce.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\spac.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\spac.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\SPUT.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\SPUT.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\SystemCheck.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\SystemCheck.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\VoucherMgr.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\VoucherMgr.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\WSTRunner.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\WSTRunner.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="ClientTools\XblCfg.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\Backup1\ClientTools\XblCfg.cs">
</Event><Event ErrorLevel="0" Project="STFLiveTools" Source="STFLiveTools.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFLiveTools" Source="STFLiveTools.csproj" Description="Converted">
</Event><Event ErrorLevel="2" Project="" Source="STFLiveTools.csproj" Description="Unable to read the project file 'STFLiveTools.csproj'. &#xA;Z:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\STFLiveTools.csproj(3,3): The imported project &quot;Z:\Microsoft.Build.settings&quot; was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.">
</Event></UpgradeLog>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\obj\i386\STFLiveTools.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFLiveTools.dll
j:\xonline_main\private\test\StfTests\lib\stftoolhelp.xml
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\obj\i386\STFLiveTools.dll
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\obj\i386\stftoolhelp.xml
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\objd\i386\STFLiveTools.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\i386\STFLiveTools.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFLiveTools.pdb
j:\xonline_main\private\test\StfTests\libd\i386\stftoolhelp.xml
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\objd\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\objd\i386\STFLiveTools.dll
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\objd\i386\stftoolhelp.xml
J:\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\objd\i386\STFLiveTools.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\obj\i386\stftoolhelp.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>STFLiveTools</name>
    </assembly>
    <members>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.CreateUser">
            <summary>
            Create a user.  Returns a UODB.Database.UserInfo, defined in UtilityClasses.cs
            </summary>
            <returns>A UserInfo, defined in UODB.cs</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.OfferRemove(System.UInt64)">
            <summary>
            Removes an offer from the system, reversing LiveOffer
            </summary>
            <param name="OfferId">OfferId of the offer to be removed</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentRemove(System.UInt32,System.String,System.Int32)">
            <summary>
            Removes Content from a site.  Does not report failure content is missing.
            </summary>
            <param name="titleId"></param>
            <param name="contentId"></param>
            <param name="site"></param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentVerify(System.UInt32,System.String,System.Int32)">
            <summary>
            Checks to see if a content package is uploaded to a site
            </summary>
            <param name="titleId"></param>
            <param name="contentId"></param>
            <param name="site"></param>
            <returns>True if package is present</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentGetPath(System.UInt32,System.String,System.Int32)">
            <summary>
            Returns the expected path to the package stored in the content download directory
            </summary>
            <param name="titleId"></param>
            <param name="contentId"></param>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentGetDownloadShare(System.Int32)">
            <summary>
            Returns a UNC path to the share where content downloads are stored.  These are
            referred to by site.
            </summary>
            <remarks>
            This code is directly lifted from the LiveContent tool's DownloadServerList.cs
            </remarks>
            <param name="siteNum">The ID of the content download site.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsRemove(System.UInt32)">
            <summary>
            Removes all leaderboards for the Title
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsDeployXbox1Stats(System.UInt32,System.Boolean)">
            <summary>
            Deploys Xbox1 Leaderboards
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="force">determines whether to use /force</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsDeployXbox360Stats(System.UInt32,System.Boolean)">
            <summary>
            Deploys Xbox 360 Leaderboards
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="force">determines whether to use /force</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsDeployWebOnlyLeaderboard(System.UInt32)">
            <summary>
            Deploy Web Only Leaderboards
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsMoveLeaderboard(System.UInt32,System.Int32,System.String,System.String)">
            <summary>
            Move a single or ALL leaderboards from one server to another
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="LeaderboardId">unique ID for a leaderboard</param>
            <param name="SourceServer">name of source server of the leaderboard</param>
            <param name="DestServer">name of the destination server</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsReportConfiguration(System.UInt32)">
            <summary>
            Returns the Leaderboard Configuration of a Title
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>array of strings, each string is a leaderboard information</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsResetLeaderboard(System.UInt32,System.Int32)">
            <summary>
            Resets the Leaderboard data for a specific Leaderboard
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="LeaderboardId">unique ID of the leaderboard</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsResetAllLeaderboards(System.UInt32)">
            <summary>
            Resets the leaderboard data for all leaderboards of a title
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsReloadFrontDoor">
            <summary>
            Reloads the stats front door
            </summary>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsReloadWebStats">
            <summary>
            Reloads the stats web front door
            </summary>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.MatchClearAllDB(System.UInt32)">
            <summary>
            Used for clearing out the XMatch Databases for a specific titleID
            Currently p_match_title_delete in npdb only works for xbox 1 titles, when that is 
            fixed to also do 360 titles, we can use that instead of duplicating that effort in
            ClearMatchConfiguration.  
            </summary>
            <param name="titleID">The TitleID to have it's Tables and SP's removed from XMatch DB</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckRunSystemCheck(System.String,System.String,System.String,System.String)">
            <summary>
            Runs systemcheck against an inputfile and outputs the result (xml) file
            </summary>
            <param name="ConfigFile">inputfile with 1 healthcheck url per line</param>
            <param name="OutputFile">output file with the returns from the health urls</param>
            <param name="Threads">number of threads to run checks in parallel (must be positive)</param>
            <param name="Timeout">time before the systemcheck tool gives up</param>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckRunSystemCheck(System.String,System.String)">
            <summary>
            Runs systemcheck against an inputfile and outputs the result (xml) file with default threads and timeout
            </summary>
            <param name="ConfigFile">inputfile with 1 healthcheck url per line</param>
            <param name="OutputFile">output file with the returns from the health urls</param>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckReloadFrontDoors">
            <summary>
            Reloads all frontdoors
            </summary>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckReloadFrontDoors(System.String)">
            <summary>
            Reloads all frontdoors (times out if no response after Timeout)
            </summary>
            <param name="Timeout">time before the systemcheck tool gives up</param>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="T:ConfigFileSerializer">
            <summary>
            Utility class for serializing and deserializing various configuration files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.LiveTitleConfig.FromXml(System.String)">
            <summary>
            Creates a LiveTitleConfig object from an LTC file
            </summary>
            <param name="ltcFile">Path and name of the LTC file to de-serialize.</param>
            <returns>A LiveTitleConfig object that represents the file.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.LiveTitleConfig.FromXml(System.IO.TextReader)">
            <summary>
            Deserializes LTC XML into a LiveTitleConfig object.
            </summary>
            <param name="xml">A TextReader object that holds the LTC XML.</param>
            <returns>A LiveTitleConfig object that represents the LTC data</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.LiveTitleConfig.ToXml(System.String)">
            <summary>
            Serailizes the LiveTitleConfig object to an LTC file
            </summary>
            <param name="ltcFile">Path and name of the target LTC file</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration">
            <summary>
            Root class for deserializing an Xbox 1 configuration file (.XBOX).
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration.FromXml(System.String)">
            <summary>
            Static method to deserialize an XBOX file into a hierarchy of objects.
            </summary>
            <param name="xboxFile">The name of the XBOX file to deserialize.</param>
            <returns>An XboxConfiguration object that describes the XBOX file.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration.FromXml(System.IO.TextReader)">
            <summary>
            Static method to deserialize an XBOX XML stream into a hierarchy of objects.
            </summary>
            <param name="xboxFile">A TextReader object that contains the raw XML of an XBOX file.</param>
            <returns>An XboxConfiguration object that describes the XBOX file.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration.ToXml(System.String)">
            <summary>
            Serializes the object hierarchy out to an XBOX file.
            </summary>
            <param name="xboxFile">The name of the XBOX file to create.</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile">
            <summary>
            Wrapper for common operations on offer files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.#ctor(System.String,ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.platform)">
            <summary>
            Create a representation of an xml offer file which can be accessed through
            XPATH calls.
            </summary>
            <param name="filename">File to open.</param>
            <param name="consoleType">Console type for this xml offer file.  Necessary because
            they use different namespaces.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.getContentId">
            <summary>
            Returns the contentID of this offer.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.MultipleQuery(System.String)">
            <summary>
            Returns a nodelist of nodes that match this xpath query.
            </summary>
            <param name="xpath">XPATH pointing to nodes to select.</param>
            <returns>XMLNodeList containing all nodes matched, or null if there are none.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.ArbitraryXpath(System.String)">
            <summary>
            Returns the first XmlNode that matches the given XPATH.
            </summary>
            <param name="xpath">XPATH pointing to the node to select.</param>
            <returns>XmlNode of selected node, or null if there is no match.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.RelativeXpath(System.Xml.XmlNode,System.String)">
            <summary>
            Takes a node already selected from this offer file, and selects from it again.  Required
            here because it needs the namespace manager.
            </summary>
            <param name="node">Node to select from.</param>
            <param name="xpath">XPATH to use relative to this node.</param>
            <returns>New XmlNode, relative from the given one.  Returns null if there is no match.</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap">
            <summary>
            Represents a mapping from an XML Offer file to the database entry it should
            correspond to.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.#ctor(System.String)">
            <summary>
            Generate an XmlOfferMap, which will contain a parsed version of the map file.
            </summary>
            <param name="filename">Path to the offer map file.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.ParseMultipleRowsInfo(System.IO.StreamReader,ServerTestFramework.STFTools.ConfigFiles.TableMapping,System.String)">
            <summary>
            Parse the MANYROWS and ONEROW keywords.
            The MANYROWS keyword at the end of a table definition means that there will be
            multiple nodes that match the XPATH.  Each matching node corresponds to a separate
            row in the table.  A ONEROW keyword indicates that each field will be searched once,
            and matched against only one row in the database.
            </summary>
            <param name="offerMapStream">The offer map file</param>
            <param name="test">The table mapping to create</param>
            <param name="keyword">An optional keyword</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.CreateQueries(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile)">
            <summary>
            Combine the stored data of a map with the offer file to create a SELECT query.  This query should
            isolate a row in the database, and is expected to return precisely one entry.
            </summary>
            <param name="offer">The offer file to which this map will be applied.</param>
            <returns>An ArrayList of strings, each one SQL query that should return one row.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.AddMultipleQueryStrings(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile,ServerTestFramework.STFTools.ConfigFiles.TableMapping,System.Collections.ArrayList)">
            <summary>
            Given a table described by a MANYROWS keyword, add multiple SQL queries, one for each
            corresponding tag found in the offer file.  Add each of them to queriesToReturn.
            </summary>
            <param name="offer">Offer this map is appliped to.</param>
            <param name="test">Table being checked.</param>
            <param name="queriesToReturn">A list of queries that will have strings added.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.AddSingleQueryString(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile,ServerTestFramework.STFTools.ConfigFiles.TableMapping,System.Collections.ArrayList)">
            <summary>
            Given a ONEROW table description, add the SQL query string that would be used to verify
            this row is present in the DB.  Add the string to queriesToReturn.
            </summary>
            <param name="offer">Offer this map is appliped to.</param>
            <param name="test">Table being checked.</param>
            <param name="queriesToReturn">A list of queries that will have one string added.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.GenerateOneWhereClause(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile,ServerTestFramework.STFTools.ConfigFiles.EntryMapping,System.Xml.XmlNode)">
            <summary>
            Used when generating an SQL select query.  This iterates through all the fields that should
            be checked.  For each one it pulls the appropriate data out of the offer file, using the XPATH for
            that field.  It returns a boolean test to determine if the data in the db matches that of the offer file.
            </summary>
            <param name="offer">Offer this map is appliped to.</param>
            <param name="dataMap">A single instance of mapping one XPATH in the offer file to one field in the DB.</param>
            <param name="multipleQueryNode">If the table was defined using MANYROWS, the XPATH is taken relative to this node.</param>
            <returns>A string to be added to a where clause.  e.g. "bi_offer_id = 0xfffe07d100000001"</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.TableMapping">
            <summary>
            A mapping of the fields of one table with the XPATHs that locate those fields in an offer file.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration">
            <summary>
            Root class for the Xbox1 Leaderboard Configuration (XSC) file hierarchy.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.FromXml(System.String)">
            <summary>
            Static method to deserialize an XSC file into a class hierarchy
            </summary>
            <param name="xscFile">Full path and filename of the XSC file to deserialize</param>
            <returns>Returns an XboxLeaderboardConfiguration object defining the XSC file</returns>
            <example>
            XboxLeaderboardConfiguration xsc = XboxLeaderboardConfiguration.FromXml("FFFFAB08.XSC");
            </example>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.FromXml(System.IO.TextReader)">
            <summary>
            Static method to deserialize raw XSC xml into a class hierarchy
            </summary>
            <param name="xscXml">A TextReader-derived object that contains the XSC XML to deserialize</param>
            <returns>Returns an XboxLeaderboardConfiguration object defining the XSC XML</returns>
            <example>
            StreamReader reader = new StreamReader("FFFFAB08.XSC");
            XboxLeaderboardConfiguration xsc = XboxLeaderboardConfiguration.FromXml(reader);
            </example>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.ToXml(System.String)">
            <summary>
            Serializes Xbox1 leaderboard configuration data into an XSC file
            </summary>
            <param name="xscFile">Full path and filename to which the XML data should be serialized</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.TitleId">
            <summary>
            The value ot the TitleID attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.UnitLeaderboardDecayConstant">
            <summary>
            The value of the UnitLeaderboardDecayConstant attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.Version">
            <summary>
            The value of the Version attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.DefaultLocale">
            <summary>
            The value of the Default_Locale attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.LeaderboardContainers">
            <summary>
            Collection of XscLeaderboardContainer objects that represent the three possible types of leaderboards in the file
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection">
            <summary>
            A collection of Leaderboard Containers in an XSC file.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Add(ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainer)">
            <summary>
            Adds an existing XscLeaderboardContainer object to the collection
            </summary>
            <param name="obj">An existing XscLeaderboardContainer object</param>
            <returns>The added object</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Add">
            <summary>
            Creates a new XscLeaderboardContainer object and adds it to the collection
            </summary>
            <returns>The newly created object</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Insert(System.Int32,ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainer)">
            <summary>
            Inserts an existing XscLeaderboardContainer object into the collection
            </summary>
            <param name="index">0-based index at which the XscLeaderboardContainer object should be inserted</param>
            <param name="obj">The XscLeaderboardContainer object to insert</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Remove(ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainer)">
            <summary>
            Removes the first occurance of the specified XscLeaderboardContainer object from the collection
            </summary>
            <param name="obj">The XscLeaderboardContainer object to remove</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViewColumn(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32,System.String,System.Boolean)">
            <summary>
            Adds a Context field to a StatsView (leaderboard)
            </summary>
            <param name="xlast">The xlast file object.</param>
            <param name="viewId">The ID of the StatView to which the column will be added.</param>
            <param name="contextId">The ID of the existing Context to use.</param>
            <param name="hidden">Flag indicating whether this column is hidden.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViewColumn(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32,System.String,ServerTestFramework.STFTools.ConfigFiles.type,System.Boolean,System.Boolean)">
            <summary>
            Adds a Property field to a StatsView (leaderboard)
            </summary>
            <param name="xlast">The xlast file object.</param>
            <param name="viewId">The ID of the StatView to which the Property will be added.</param>
            <param name="propertyId">The ID of the existing Property to use.</param>
            <param name="aggregationType">The aggregation type to use for this column.</param>
            <param name="hidden">A flag indicating whether this column is hidden.</param>
            <param name="rank">A flag indicating whether this column is used for ranking.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViews(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32)">
            <summary>
            Adds a number of StatsViews to an XLAST file.
            </summary>
            <param name="xlast">An XLAST file object.</param>
            <param name="count">The number of StatsViews to add to the XLAST file object.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViewColumns(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32,System.Int32)">
            <summary>
            Adds a number of columns to a specified StatsView.
            </summary>
            <param name="xlast">An XLAST file object.</param>
            <param name="viewId">The ID os the StatsView to which the columns will be added.</param>
            <param name="count">The number of columns to add.</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.ClientToolBase">
            <summary>
            Base class for all client tool wrappers
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.GetToolServer">
            <summary>
            Gets the first server for the toolsmgmtsrv interface
            </summary>
            <returns>Server name</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.AcceptPsExecEula">
            <summary>
            Sets the flag in the registry saying that we accepted the PsExec license agreement.
            Without this, the first execution pops up an Accept/Decline UI that currently can't
            be overridden on the command line.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.Run(System.String)">
            <summary>
            Executes the tool with the given arguments
            </summary>
            <param name="args">Arguments for the tool</param>
            <returns>Process exit code</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.RunThrowOnFailure``1(System.String,System.String)">
            <summary>
            Executes the tool with the given arguments and throws an exception if the
            exit code is non-zero.
            </summary>
            <typeparam name="T">Type of exception to throw</typeparam>
            <param name="args">Arguments for the tool</param>
            <param name="message">Error message</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.ClientToolBase.StandardError">
            <summary>
            Standard Error for the completed process
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ClientToolBase.StandardOutput">
            <summary>
            Standard Output for the completed process
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.EmulatorUtil">
            <summary>
            Utility class for emulator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveContent">
            <summary>
            Utility class for running the LiveContent tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.#ctor(System.String)">
            <summary>
            Define a non-default location for the LiveContent exe.  This location includes the exe in the path.
            </summary>
            <param name="liveContentPath">
            Path to the executable, including the exe filename.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.setUpdateFlag(ServerTestFramework.STFTools.LiveContent.updateType)">
            <summary>
            Sets the update flag for a future run of LiveContent.
            </summary>
            <param name="type">
            Possible choices for the /update: option.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.SetPackageFile(System.String,System.UInt32)">
            <summary>
            Sets the package and associated titleID for a future run of LiveContent.
            </summary>
            <param name="path">
            File path which will be passed in the /package: argument.
            </param>
            <param name="_titleId">
            OfferId which will be passed in the /titleid: argument.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.SetOfferFile(System.String,System.UInt64)">
            <summary>
            Sets the optional first offer and its associated offerID
            for a future run of LiveContent.
            </summary>
            <param name="path">
            File path which will be passed in the /offerfile: argument.
            </param>
            <param name="_offerId">
            OfferId which will be passed in the /offerid: argument.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.SetOfferFile2(System.String,System.UInt64)">
            <summary>
            Sets the optional second offer and its associated offerID
            for a future run of LiveContent.
            </summary>
            <param name="path">
            File path which will be passed in the /offerfile2: argument.
            </param>
            <param name="_offerId">
            OfferId which will be passed in the /offerid2: argument.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.setTargetFlag(ServerTestFramework.STFTools.LiveContent.dbType)">
            <summary>
            Sets the _targetFlag string from the given dbType.
            </summary>
            <param name="selectedDB">
            Possible choices for the /targetDB: option.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.CombineFlagsForContent">
            <summary>
            Returns a combined string of all the flags used when propping 
            content(and not autoupdates).  If in the future flags are added, they should be 
            added to this string as well.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.Deploy360Package">
            <summary>
            Expects SetPackageFile to be set.  Optionally expects SetOfferFile, SetOfferFile2, 
            IsDefaultOffer, etc. to be called to set other parameters.  WARNING:Content files
            require an offer file, and should not be run without them.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.DeployXbox1Content">
            <summary>
            Expects SetPackageFile to be set.  Optionally expects SetOfferFile and
            IsDefaultOffer to be called to set other parameters.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.DeployXbox1AutoUpdate">
            <summary>
            Deploys an xbox1 AutoUpdate.  This expects SetPackageFile to be called beforehand.
            Arguments it does not use will be dropped.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.MakeAutoUpdateFull(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.STFTools.LiveContent.platformType)">
            <summary>
            Converts a selective update into a global autoupdate.
            </summary>
            <param name="_titleId">
            The titleid to apply this change.
            </param>
            <param name="oldVersion">
            The version number that the selective update begins.
            </param>
            <param name="newVersion">
            The version number to which the selective update will update.
            </param>
            <param name="platform">
            The platform this update applies.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.Hex8(System.UInt32)">
            <summary>
            Makes a zero paded hex value.  ie 00000101
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.RunWithOnlyStringArguments(System.String)">
            <summary>
            Runs LiveContent with a string of command-line arguments and nothing else.
            </summary>
            <param name="arguments">
            String of command line arguments.
            </param>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Output">
            <summary>
            Gets the output after the LiveContent process has been run.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.IsDefaultOffer">
            <summary>
            Gets or sets the /_isDefaultOffer flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.UseDefaultOffer">
            <summary>
            Gets or sets the /usedefaultoffer flag for a future run of LiveContent
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Sites">
            <summary>
            Gets or sets the site flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.StartDateFlag">
            <summary>
            Gets or sets the start date flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.EndDateFlag">
            <summary>
            Gets or sets the end date flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Shares">
            <summary>
            Gets or sets the _shares flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Xrls">
            <summary>
            Gets or sets the _sites flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveMatch">
            <summary>
            Utility class for running the LiveMatch tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.DeployMatchServer(System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Deploys the matchmaking database(s) for the current title.
            </summary>
            <param name="dropTable">
            Flag indicating whether to drop the current match table.
            </param>
            <param name="scriptSQL">
            Flag indicating whether to write the SQL commands to a local file instead of to the databases.
            The name of the file can be specified using the ScriptFile property.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchMigrationBucket(System.UInt32,System.Int32,System.String)">
            <summary>
            Used for different migrations for an interface bucket
            </summary>
            <param name="titleID">TitleId used for migration</param>
            <param name="migrationState">
            0 = StartMigrationForBucket
            1 = MigrationStatusForBucket
            2 = ExpediteMigrationForBucket
            3 = EndMigrationForBucket
            </param>
            <param name="destServerName">Destination server, only required for StartMigrationForBucket</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchMigrationTitle(System.UInt32,System.Int32,System.String,System.String)">
            <summary>
            Used for different title migrations
            </summary>
            <param name="titleID">TitleId used for migration</param>
            <param name="migrationState">
            0 = StartMigrationForTitle
            1 = MigrationStatusForTitle
            2 = ExpediteMigrationForTitle
            3 = EndMigrationForTitle
            </param>
            <param name="destServerName">Destination server, only required for StartMigrationForBucket</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchAddRRBucket(System.UInt32,System.String)">
            <summary>
            Used for adding a RR bucket to an existing type/mode
            </summary>
            <param name="titleID">TitleId used for migration</param>
            <param name="serverName">The server that is going to be added for round robin</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchDrainTopRRBucket(System.UInt32)">
            <summary>
            Used to begin draining the top round robined bucket.  Draining buckets no longer add
            sessions to them.
            </summary>
            <param name="titleID">TitleId used for migration</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchRemoveTopRRBucket(System.UInt32,System.Boolean)">
            <summary>
            Used to begin draining the top round robined bucket.  Draining buckets no longer add
            sessions to them.
            </summary>
            <param name="titleID">TitleId used for migration</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.AddMatchServer(System.UInt32,System.String)">
            <summary>
            Adds a new matchmaking server.
            </summary>
            <param name="serverName">
            Name of the server to which matchmaking tables and queries will be added.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.DeleteMatchServer(System.UInt32,System.String)">
            <summary>
            Deletes an existing matchmaking server.
            </summary>
            <param name="serverName">
            Name of the server to remove from the match titles table.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.RunLiveMatch(System.String)">
            <summary>
            Allows direct passing of Arguments on command line to LiveMatch, primarily used for negative testing.
            </summary>
            <param name="arguments">String to pass to LiveMatch</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.RunLiveMatchDefault(System.UInt32)">
            <summary>
            Static method for running Live Match with the default settings of titleid and the droptable option.
            </summary>
            <param name="titleID">The TitleID to which you want to run LiveMatch for</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.ScriptFile">
            <summary>
            Gets or sets the name of the SQL file generated when using the /script option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.TypeID">
            <summary>
            Gets or sets the typeid
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.ModeID">
            <summary>
            Gets or sets the modeid
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.RRID">
            <summary>
            Gets or sets the rrid
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.NoReloadFrontDoors">
            <summary>
            Turn on or off the /noreload option.  Defaults at false so that it does not use switch.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveOffer">
            <summary>
            Utility class for running the LiveOffer tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.DbTypeToString(ServerTestFramework.STFTools.LiveOffer.dbType)">
            <summary>
            Returns the appropriate string for the given dbType.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.ReloadFrontDoors">
            <summary>
            Reloads the front doors.  Offers are cached and will not be seen unless the 
            this occurs--however, LiveOffer will by default reload the front doors after
            every prop.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.Validate360Offer(System.String)">
            <summary>
            Checks if the given XML file follows the format given in the file LiveOffer.xsd
            </summary>
            <param name="filePath">File to be validated.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.ValidateXboxOffer(System.String)">
            <summary>
            Checks if the given XML file follows the format given in the file Xbox1Offer.xsd
            </summary>
            <param name="filePath">File to be validated.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.CheckIfOfferIsPropped(System.UInt64)">
            <summary>
            Checks if a offer is propped.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.Prop360Offer(System.String,System.UInt32,ServerTestFramework.STFTools.LiveOffer.dbType,System.Boolean)">
            <summary>
            Places an Xbox360 offer file on the Live service.  This populates a large number of tables 
            that begin with uodb..t_offer.
            </summary>
            <param name="filePath">Path to the offer file.</param>
            <param name="titleId">Titleid the offer is related to.</param>
            <param name="targetDBs">Flag determining which DBs should be updated</param>
            <param name="overwriteDMPSettings">If they exist, clobber existing DMP settings.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.PropXboxOffer(System.String,System.UInt32,ServerTestFramework.STFTools.LiveOffer.dbType,System.Boolean)">
            <summary>
            Places an Xbox1 offer file on the Live service.  This populates a distinctly different set of tables
            than in the XBox360 case.
            </summary>
            <param name="filePath">Path to the offer file.</param>
            <param name="titleId">Titleid the offer is related to.</param>
            <param name="targetDBs">Flag determining which DBs should be updated</param>
            <param name="overwriteDMPSettings">If they exist, clobber existing DMP settings.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.NukeOffer(System.UInt64)">
            <summary>
            Removes an offer from the Live service.  Requires an offerid.  This is only available on the
            debug build of LiveOffer.
            </summary>
            <param name="offerid">The offerId to remove.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.NukeAllOffers(System.UInt32)">
            <summary>
            Removes all offers from the Live service under a certain title.  Requires a titleid.  This
            is only available on the debug build of LiveOffer.
            </summary>
            <param name="titleid">The titleId whose offers will be removed.</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveStats">
            <summary>
            Utility class for running the LiveStats tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeployXbox1Leaderboard(System.UInt32,System.Boolean)">
            <summary>
            Deploys the leaderboards for an Xbox1 title.
            </summary>
            <param name="force">Flag indicating whether or not to include the /force argument.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeployXbox360Leaderboard(System.UInt32,System.Boolean)">
            <summary>
            Deploys the leaderboards for an Xbox 360 title.
            </summary>
            <param name="force">Flag indicating whether or not to include the /force argument.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeployWebOnlyLeaderboard(System.UInt32)">
            <summary>
            Deletes the leaderboards from the Web DB and re-deploys them.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.MoveLeaderboard(System.UInt32,System.Int32,System.String,System.String)">
            <summary>
            Moves one or all leaderboards from one server to another.
            </summary>
            <param name="leaderboardId">
            ID of the leaderboard to move. Use the ALL_LEADERBOARDS constant to move all leaderboards.
            </param>
            <param name="sourceServer">
            The name of the server on which the leaderboard currently resides.
            </param>
            <param name="destServer">
            The name of the server to which the leaderboard will be moved.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ReportConfiguration(System.UInt32)">
            <summary>
            Reports the leaderboard configuration for a title.
            </summary>
            <param name="leaderboardId">
            The ID of the leaderboard to report.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ResetLeaderboard(System.UInt32,System.Int32)">
            <summary>
            Resets the data for a single leaderboard.
            </summary>
            <param name="leaderboardId">
            The ID of the leaderboard to reset.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ResetAllLeaderboards(System.UInt32)">
            <summary>
            Resets the data for all leaderboards in the current title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeleteLeaderboards(System.UInt32)">
            <summary>
            Deletes all stats data and leaderboard definitions for the current title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ReloadFrontDoor">
            <summary>
            Reloads the Stats front door.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ReloadWebStats">
            <summary>
            Reloads the Web stats front door.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.CleanClip(System.UInt32,System.Int32)">
            <summary>
            Sets up a clean clips CRON job for the specified Xbox360 title id
            </summary>
            <param name="titleId">Title ID</param>
            <param name="hoursFromNow">The number of hours to wait before running the CRON job.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.CleanXboxClip(System.UInt32,System.Int32)">
            <summary>
            Sets up a clean clips CRON job for the specified Xbox1 title id
            </summary>
            <param name="titleId">Title ID</param>
            <param name="hoursFromNow">The number of hours to wait before running the CRON job.</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.LiveStatsPath">
            <summary>
            Gets or sets the fully-qualified name of the LiveStats executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.WorkingDirectory">
            <summary>
            Gets or sets the working directory for LiveStats
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.Timeout">
            <summary>
            Gets or sets the number of milliseconds to allow LiveStats to run before killing the process.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.Output">
            <summary>
            Gets the output text from the most recent run of LiveStats.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveTitle">
            <summary>
            Utility class for running the LiveTitle tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CreateXbox360LTCFile">
            <summary>
            Runs LiveTitle to create an LTC file for an Xbox 360 title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CreateXbox360LTCFile(System.UInt32,System.UInt32)">
            <summary>
            Runs LiveTitle with a title id and a disc id to create an LTC file for an Xbox 360 title.
            </summary>
            <param name="titleId">Title ID to specify with the /titleid parameter. Optional.</param>
            <param name="discId">Disc ID to specify with the /discid parameter. Optional.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox360Title(System.UInt32,System.Boolean,System.Boolean,System.UInt32)">
            <summary>
            DeployXbox360Title will run LiveTitle with the /deploy command-line argument.  
            If the
            LTCPath property does not point to an existing LTC file, then 
            CreateXbox360LTCFile
            will be called first to generate the LTC file before trying to deploy.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="deployImages">
            Flag indicating whether the /images argument should appear on the command 
            line.
            It is highly recommended that this be set to True for initial deployments.
            </param>
            <param name="contentUpdate">
            Flag indicating whether the /contentupdate argument should be added to the 
            command line.
            </param>
            <param name="version">
            Initial version of the title.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox360Title(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Deploys an Xbox 360 title without the optional /version parameter.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="deployImages">Images parameter flag</param>
            <param name="contentUpdate">Content Update parameter flag</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox360Title(System.UInt32)">
            <summary>
            Deploys an Xbox 360 title with images.
            </summary>
            <param name="titleId">Title ID</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CreateXbox1LTCFile">
            <summary>
            Creates an LTC file for an Xbox1 title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox1Title(System.UInt32)">
            <summary>
            Deploys an Xbox1 title, creating the default LTC file, if needed.
            </summary>
            <param name="titleId">Title ID</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployMarketplaceOnlyTitle(System.UInt32,System.Boolean)">
            <summary>
            Deploys an Xbox 360 Marketplace-only title.
            </summary>
            <param name="titleId">Title Id</param>
            <param name="images">
            Flag indicating whether the /images parameter should appear on the command line.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.LockTitle">
            <summary>
            Locks the game configuration for an Xbox 360 title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.ReportTitleVersion(System.UInt32)">
            <summary>
            Reports the existing versions for the specified title id.
            </summary>
            <param name="titleId">The title id</param>
            <returns>An array of version strings in the form "base,update,beta"</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.AddTitleBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Adds a base version entry to UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">New base version to add for this title</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeleteTitleBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Deletes a base version entry from UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">Base version to remove</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.AddBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Adds a base version entry to UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">New base version to add for this title</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeleteBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Deletes a base version entry from UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">Base version to remove</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.PropTitle(System.UInt32,System.UInt32,ServerTestFramework.LiveService.Auth.AuthContext.ClientTypes)">
            <summary>
            Props a title.  If no path is specified it will be copied from titlevault.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CheckIfTitleIsPropped(System.UInt32)">
            <summary>
            Checks if a title is propped.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CheckAndPropTitle(System.UInt32,System.UInt32,ServerTestFramework.LiveService.Auth.AuthContext.ClientTypes,System.String)">
            <summary>
            Checks if a title is propped, and if not, props it.  If no path is specified it will be copied from stressnet titlevault.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.ValidateTitleData(System.UInt32)">
            <summary>
            Performs basic validation that the title deployment succeeded.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.LiveTitlePath">
            <summary>
            Gets or sets the fully-qualified name of the LiveTitle executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.WorkingDirectory">
            <summary>
            Gets or sets the working directory for LiveTitle
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.LTCPath">
            <summary>
            Gets or sets the fully-qualified name of the LTC file used during title 
            deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XlastPath">
            <summary>
            Xbox 360 LTC file creation and title deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.MarketplacePath">
            <summary>
            Gets or sets the fully-qualified name of the Marketplace file used to deploy a Marketplace-only title.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XSCPath">
            <summary>
            Gets or sets the fully-qualified name of the XSC file used during Xbox1 LTC 
            file creation and title deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XBOXPath">
            <summary>
            Gets or sets the fully-qualified name of the XBOX file used during Xbox1 LTC 
            file creation and title deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XMSPath">
            <summary>
            Gets or sets the fully-qualified name of the XMS file used during Xbox1 title 
            deployment (optional).
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.LeaderboardServer">
            <summary>
            Gets or sets the leaderboard server used during LTC file creation.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.MatchServers">
            <summary>
            Gets or sets the semi-colon delimited list of match servers used during LTC 
            file creation.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.Output">
            <summary>
            Gets the output text from the most recent run of LiveTitle.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.ExecutionTimeout">
            <summary>
            Exposes the Execution Timeout value for the underlying Process wrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.MsgTool">
            <summary>
            Utility class for running MsgTool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.AddString(System.UInt32,System.String,ServerTestFramework.STFTools.StringLanguage)">
            <summary>
            Adds a string to the table.
            </summary>
            <param name="stringID">ID of the string to be added</param>
            <param name="text">The text of the string in the appropriate language.</param>
            <param name="lang">The language of this instance of the message.</param>
            <remarks> Command Line: 
            MSGTOOL /addstring /id:[id] /text:[text] /lang:[language]<br/> 
            You must add a string to the table before you send it via SystemMessage, UserMessage,
            or TitleMessage since these take the ID of the string.<br/>
            Msgtool generates the following for this command line:
            D:\msgtool /addstring /id:50001 /text:"This is a test." /lang:1
            <code>
            Adding string - id:50001,lang:1,text:This is a test.
            String Service address 10.20.1.5:11020
            String Service address 10.20.1.5:11020
            
            
            String added successfully.
            
            </code></remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendSystemMsg(System.UInt32,System.String,System.Boolean)">
            <summary>
            Sends a string to all users when they sign in their language or the default.
            Has the recommended option for sending to Xbox 1.
            </summary>
            <param name="stringID">ID of the string to be sent</param>
            <param name="expiration">When this message will expire from the server</param>
            <param name="recommended">Xbox 1 setting.  No effect on Xbox 360</param>
            <remarks>Add system message generates the following output from the command line:
            msgtool /addsystemmsg /id:50001 /expiration:"5/17/2006"
            <code>
            Checking for existence of string 50001...
            Adding system message - id:50001,expiration:5/17/2006
            System message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendSystemMsg(System.UInt32,System.String)">
            <summary>
            Sends a string to all users when they sign in their language or the default.
            Defaults as required on Xbox1.
            </summary>
            <param name="stringID">ID of the string to be sent</param>
            <param name="expiration">When this message will expire from the server</param>
            <remarks>Command Line: MSGTOOL /addsystemmsg /id:[id] /expiration:[expiration]<br/>
            Adds the specified string to the table to be sent to all users.
            Add system message generates the following output from the command line:
            msgtool /addsystemmsg /id:50001 /expiration:"5/17/2006"
            <code>
            Checking for existence of string 50001...
            Adding system message - id:50001,expiration:5/17/2006
            System message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumSystemMsg">
             <summary>
             Enumerate all the System Messages in the queue
             </summary>
             <returns>MessageEntries collection of the sent messages</returns>
             <remarks>
             Return is formatted like this: (Blank line appears to be output before and after.
             <code>
                 
             Enumerating System Messages...
             
             TitleID, MsgID, Sent, ExpireDate, Description
             0, 1074107393, 5/16/2006 10:45:58 PM, 5/16/2006 11:59:58 PM, Xbox Live
            
             End Enumeration.
                     
             </code> OR <code>
                   
             Enumerating System Messages...
             There were no messages in the system message queue.
                    
             </code>                                         */
             </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendTitleMsg(System.UInt32,System.UInt32,System.String)">
            <summary>
            Sends a message to all users of a specified title
            </summary>
            <param name="stringID">ID of previously added string to be sent</param>
            <param name="titleID">TitleID</param>
            <param name="expiration">Expiration date of the message</param>
            <remarks>The following was generated from this command line: msgtool /addtitlemsg /id:50001 /title:0xFFFE07D0 /expiration:"5/20/2006"
            <code>
            Checking for existence of string 50001...
            Adding title message - title:0xFFFE07D0,id:50001,expiration:5/20/2006
            Title message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendTitleMsg(System.UInt32,System.UInt32,System.String,System.Boolean)">
            <summary>
            Sends a message to all users of a specified title
            </summary>
            <param name="stringID">ID of previously added string to be sent</param>
            <param name="titleID">TitleID</param>>
            <param name="expiration">Expiration date of the message</param>
            <param name="recommended">Xbox1 recommended message or required</param>
            <remarks>The following was generated from this command line: msgtool /addtitlemsg /id:50001 /title:0xFFFE07D0 /expiration:"5/20/2006"
            <code>
            Checking for existence of string 50001...
            Adding title message - title:0xFFFE07D0,id:50001,expiration:5/20/2006
            Title message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumTitleMsg(System.UInt32)">
             <summary>
             Enumerate all the System Messages in the queue
             </summary>
             <returns>MessageEntries collection of the sent messages</returns>
             <remarks>
             Return is formatted like this: (Blank line appears to be output before and after.
             <code>
                 
             Enumerating System Messages...
             
             TitleID, MsgID, Sent, ExpireDate, Description
             0, 1074107393, 5/16/2006 10:45:58 PM, 5/16/2006 11:59:58 PM, Xbox Live
            
             End Enumeration.
                     
             </code> OR <code>
                   
             Enumerating System Messages...
             There were no messages in the system message queue.
                    
             </code>                                         */
             </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.DeleteMsg(System.UInt32,System.UInt32)">
            <summary>
            Deletes a message that was added with the Send functions
            </summary>
            <param name="messageID">ID of the message.  This is returned from the enumMsg methods</param>
            <param name="titleID">TitleID of the Message.  Use 0 for system messages</param>
            <remarks>
            The following message is output, no matter if the message is deleted, the titleID or the Message isn't found.
            <code>
            System or title message was successfully deleted or revoked.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.RevokeMsg(System.UInt32,System.UInt32)">
            <summary>
            Revokes a message that was added with the Send functions.  Removes any sent instances as well.
            </summary>
            <param name="messageID">ID of the message.  This is returned from the enumMsg methods</param>
            <param name="titleID">TitleID of the Message.  Use 0 for system messages</param>
            <remarks>
            The following was generated using this command line: msgtool /revokemsg /id:1074107393 /title:0
            <code>
            System or title message was successfully deleted or revoked.
            
            </code>
            This same output is generated even if the id does not exist.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.UInt64,System.String)">
            <summary>
            Adds a message for a specified User by PUID
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="userPUID">User's PUID</param>
            <param name="expiration">Message Expiration Date</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /user:2533274801615275 /expiration:"5/24/2006" /recommended
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.UInt64,System.String,System.Boolean)">
            <summary>
            Send a message for specified user on XBox 1 setting recommended by PUID
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="userPUID">User's PUID</param>
            <param name="expiration">Message Expiration Date</param>
            <param name="recommended">XBox 1 switch to make recommended or required</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /usertag:coerwyn /expiration:"5/24/2006"
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.String,System.String)">
            <summary>
            Adds a message for a specified User by GamerTag
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="gamerTag">User's GamerTag</param>
            <param name="expiration">Message Expiration Date</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /usertag:coerwyn /expiration:"5/24/2006"
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.String,System.String,System.Boolean)">
            <summary>
            Send a message for specified user on XBox 1 setting recommended by PUID
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="gamerTag">User's PUID</param>
            <param name="expiration">Message Expiration Date</param>
            <param name="recommended">XBox 1 switch to make recommended or required</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /usertag:coerwyn /expiration:"5/24/2006"
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumUserMsg(System.UInt64)">
            <summary>
            Enumerates the messages for a user from their PUID
            </summary>
            <param name="puid">PUID of the user</param>
            <returns>A collection of UserMessages</returns>
            <remarks>The following was returned by the command line: msgtool /enumusermsg /user:2533274801615275
            <code>
            Checking user information ...
            
            SenderID, SentTime, MessageID, MFlg, SenderTitleID, ExpireDate
            0, 5/22/2006 4:52:24 PM, 2, 1, 4294836224, 5/24/2006 12:00:24 AM
            
            End Enumeration.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumUserMsg(System.String)">
            <summary>
            Returns a list of user messages from a specified gamerTag
            </summary>
            <param name="gamerTag">User's gamertag</param>
            <returns>Collection of UserMessages</returns>
            <remarks>The following was returned by the command line: msgtool /enumusermsg /usertag:coerwyn
            <code>
            Checking user information ...
            
            SenderID, SentTime, MessageID, MFlg, SenderTitleID, ExpireDate
            0, 5/22/2006 4:52:24 PM, 2, 1, 4294836224, 5/24/2006 12:00:24 AM
            
            End Enumeration.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.DeleteUserMsg(System.UInt32,System.UInt64)">
            <summary>
            Deletes a user message using the Message ID and PUID.
            </summary>
            <param name="MsgId">Message ID returned from EnumMessage function</param>
            <param name="puid">User's PUID</param>
            <remarks>This command line generated the following output: msgtool /deleteusermsg /id:2 /user:2533274801615275
            <code>
            Checking user information ...
            Successfully deleted message ID 2 from the queue of user 2533274801615275
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.DeleteUserMsg(System.UInt32,System.String)">
            <summary>
            Deletes a user message using the Message ID and GamerTag
            </summary>
            <param name="MsgId">Message ID returned from EnumMessage function</param>
            <param name="gamerTag">User's GamerTag</param>
            <remarks>This command line generated the following output: msgtool /deleteusermsg /id:2 /usertag:coerwyn
            <code>
            Checking user information ...
            Successfully deleted message ID 2 from the queue of user 2533274801615275
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.RunMsgTool(System.String)">
            <summary>
            Allows running MsgTool with custom argument string.
            Mainly used for negative testing.
            </summary>
            <param name="arguments">Argument string to be used when calling MsgTool.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.XMLMessage(System.String)">
            <summary>
            Runs MsgTool taking an XML file of messages and recipients.
            </summary>
            <param name="XMLFile">XML File path</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.CheckXMLMessage(System.String)">
            <summary>
            Runs MsgTool taking an XML file of messages and recipients and *only* validates the XML format.
            </summary>
            <param name="XMLFile">XML File path</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.MsgTool.MsgToolPath">
            <summary>
            Gets or sets path to MsgTool
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.MsgTool.Output">
            <summary>
            Gets the output text from the most recent run of MsgTool.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.StringLanguage">
            <summary>
            Language Enum for the strings in MsgTool
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.MsgToolException">
            <summary>
            Exception class for MsgTool runner
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.MessageEntry">
            <summary>
            A Row returned from the Enum functions of MsgTool of what messages are sent.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntry.#ctor(System.String)">
            <summary>
            Creates a new MsgTool Message line from a string that MsgTool returns.
            </summary>
            <param name="entry">Formatted String from MsgTool</param>
            <remarks>The tool returns each row like "TitleID, MsgID, Sent, ExpireDate, Description"</remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntry.Equals(System.Object)">
            <summary>
            Tests if object is equal to this MessageEntry
            </summary>
            <param name="obj">Object to test</param>
            <returns>True if both objects are the same</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntry.GetHashCode">
            <summary>
            Gets the hashcode for this instance
            </summary>
            <returns>Hashcode</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.MessageEntries">
            <summary>
            Collection of MessageEntry objects
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntries.Add(ServerTestFramework.STFTools.MessageEntry)">
            <summary>
            Adds a MessageEntry to the collection
            </summary>
            <param name="val">MessageEntry to add</param>
            <returns>Index of MessageEntry</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntries.Contains(ServerTestFramework.STFTools.MessageEntry)">
            <summary>
            Tests if MessageEntry is in the collection
            </summary>
            <param name="val">MessageEntry to test</param>
            <returns>True if it is already in the collection</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntries.Remove(ServerTestFramework.STFTools.MessageEntry)">
            <summary>
            Removes a MessageEntry from the collection
            </summary>
            <param name="val">MessageEntry to remove</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.MessageEntries.Item(System.Int32)">
            <summary>
            Indexer for MessageEntries
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.UserMessage">
            <summary>
            A Message for a particular User.  Returned in the collection from the EnumUserMsg function.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessage.#ctor(System.String)">
            <summary>
            Creates a new MsgTool User Message line from a string that MsgTool enumUserMsg returns.
            </summary>
            <param name="entry">Formatted String from MsgTool</param>
            <remarks>The tool returns each row like "SenderID, SentTime, MessageID, MFlg, SenderTitleID, ExpireDate"</remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessage.Equals(System.Object)">
            <summary>
            Determines if this UserMessage is equal to another object
            </summary>
            <param name="obj">Object to be tested</param>
            <returns>True if they are equal</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessage.GetHashCode">
            <summary>
            Gets the hashcode for this object
            </summary>
            <returns>The hashcode</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.UserMessages">
            <summary>
            Collection of UserMessage objects
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessages.Add(ServerTestFramework.STFTools.UserMessage)">
            <summary>
            Adds a new UserMessage to the collection
            </summary>
            <param name="val">UserMessage to add</param>
            <returns>Index of message</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessages.Contains(ServerTestFramework.STFTools.UserMessage)">
            <summary>
            Tests if a UserMessage is already in the collection
            </summary>
            <param name="val">UserMessage to test</param>
            <returns>True if UserMessage is in the collection</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessages.Remove(ServerTestFramework.STFTools.UserMessage)">
            <summary>
            Removes a UserMessage from the collection
            </summary>
            <param name="val">UserMessage to remove</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.UserMessages.Item(System.Int32)">
            <summary>
            Indexer for UserMessage
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.QuickEnforce">
            <summary>
            Utility class for running the QuickEnforce tool.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.SPAC">
            <summary>
            Utility class that runs the SPA Compiler (SPAC) tool.
            </summary>
            <remarks>
            Unlike many of the other tools, SPAC supports multiple return codes. Therefore, all the
            methods that execute SPAC will not raise exceptions on failure, but rather simply return
            the exit code from the tool itself. It is the caller's responsibility to check this code
            and take the appropriate action.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.#ctor">
            <summary>
            Creates a SPAC object and initializes the process wrapper to the default SPAC path.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.Compile">
            <summary>
            Compiles an XLAST file using the default parameter values.
            </summary>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.Compile(System.Boolean,System.Boolean)">
            <summary>
            Allows the default nospa and noh parameter values to be overridden when compiling an XLAST file.
            </summary>
            <param name="noSpa">Flag indicating whether or not a SPA file should be generated.</param>
            <param name="noHeader">Flag indicating whether or not a SPA.H file should be generated.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.Compile(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Allows all the default flag parameter values to be overridden when compiling an XLAST file.
            </summary>
            <param name="noLogo">Flag indicating whether the copyright message is printed when SPAC is run.</param>
            <param name="verbose">Flag specifying whether the compile output should be normal or verbose.</param>
            <param name="noSpa">Flag indicating whether or not a SPA file should be generated.</param>
            <param name="noHeader">Flag indicating whether or not a SPA.H file should be generated.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.UnCompile">
            <summary>
            UnCompiles a SPA file using the default parameter values.
            </summary>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.OutputXSD(System.String)">
            <summary>
            Executes SPAC to output the XSD file it is using to validate XLAST files.
            </summary>
            <param name="xsdFile">Name of the XSD file to create.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.ReportSPAVersion(System.String)">
            <summary>
            Reports the version information of a given SPA file.
            </summary>
            <param name="spaFile">Name of the SPA file for which version information is to be reported.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            
            The version information will be found in the output text.
            </returns>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.SpacPath">
            <summary>
            Gets or sets the full path of the SPAC executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.WorkingDirectory">
            <summary>
            Gets or sets the name of the working directory under which SPAC will be run.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.XlastPath">
            <summary>
            Gets or sets the name of the XLAST file to compile.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.HeaderFile">
            <summary>
            Gets or sets the optional name of the header file that SPAC outputs when compiling an XLAST file.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.SpaFile">
            <summary>
            Gets or sets the optional name of the SPA file that SPAC outputs when compiling an XLAST file.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.ConfigOverrideFile">
            <summary>
            Gets or sets the optional name of a file containing configuration overrides.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.UncompileOutputFile">
            <summary>
            Gets or sets the name of the decompiled output file 
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.Output">
            <summary>
            Gets the output text of SPAC.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.NoLogo">
            <summary>
            Gets or sets the default value for the -nologo option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.Verbose">
            <summary>
            Gets or sets the default value of the -verbose option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.NoSpa">
            <summary>
            Gets or sets the default value of the -nospa option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.NoHeader">
            <summary>
            Gets or sets the default value of the -noh option.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.SPUT">
            <summary>
            Utility class for running SPUT.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.ChangeTitleID(System.String,System.String)">
            <summary>
            Writes the titleID for the specified serialNum to the table
            </summary>
            <param name="serialNum">The serial number of the Xbox</param>
            <param name="titleID">The title ID or value to set.  Must have length of 1,4 or 8.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.DumpTitleID(System.String)">
            <summary>
            Lookup the titleID associated with an xbox.
            </summary>
            <param name="serialNum">The serial number of the Xbox</param>
            <returns>Output returned from SPUT.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUTFile(System.String)">
            <summary>
            Runs SPUT specifying CSV File
            </summary>
            <param name="fileName">CSV file to be used</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUTFile">
            <summary>
            Runs SPUT specifying File that is set in CSVFIle Property
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUTFile(System.String,System.String)">
            <summary>
            Runs SPUT specifying File and TitleID to use
            </summary>
            <param name="fileName">CSV File of Serial numbers</param>
            <param name="titleID">Title ID to use or override</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUT(System.String)">
            <summary>
            Allows running SPUT with custom argument string.
            Mainly used for negative testing.
            </summary>
            <param name="arguments">Argument string to be used when calling SPUT.</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPUT.SPUTPath">
            <summary>
            Gets or sets path to SPUT
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPUT.CSVFile">
            <summary>
            Gets or sets the CSV File to use when running SPUT.  Can be NULL.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPUT.Output">
            <summary>
            Gets the output text from the most recent run of SPUT.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.SystemCheck">
            <summary>
            Utility class for running the SystemCheck tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.Reloadfd">
            <summary>
            Runs SystemCheck with /reloadfd parameter to reload the front doord.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.Reloadfd(System.String)">
            <summary>
            Runs SystemCheck with /reloadfd parameter to reload the front doord.
            </summary>
            <param name="timeout">timeout (in ms) to specify with the /timeout parameter. Optional.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.CallUrl">
            <summary>
            Runs SystemCheck with a configfile and outputfile.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.CallUrl(System.UInt32,System.UInt32)">
            <summary>
            Runs SystemCheck with a configfile and outputfile.
            </summary>
            <param name="threads"># of threads to speciffy with the /threads parameter. Optional.</param>
            <param name="timeout">timeout (in ms) to specify with the /timeout parameter. Optional.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.CallUrl(System.String,System.String)">
            <summary>
            Runs SystemCheck with a configfile, # of threads, timout, and outputfile.
            </summary>
            <param name="threads"># of threads to speciffy with the /threads parameter. Optional.</param>
            <param name="timeout">timeout (in ms) to specify with the /timeout parameter. Optional.</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.SystemCheckPath">
            <summary>
            Gets or sets the fully-qualified name of the SystemCheck executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.WorkingDirectory">
            <summary>
            Gets or sets the working directory for SystemCheck
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.Timeout">
            <summary>
            Gets or sets the number of milliseconds to allow LiveStats to run before killing the process.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.ConfigFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Config file used during SystemCheck running 
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.OutFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Output file used during SystemCheck running 
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.Output">
            <summary>
            Gets the output text from the most recent run of SystemCheck.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.VoucherMgr">
            <summary>
            Utility class for running the VoucherMgr tool.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.WSTRunner">
            <summary>
            Utility class for running the WSTRunner tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerSetup(System.String,System.String)">
            <summary>
            Runs WSTRunner to setup a database using the provided manifest and deployment files.
            </summary>
            <param name="manifestFile">Manifest File to be used with the /m parameter. Required.</param>
            <param name="deploymentFile">Deployment File to be used with the /d parameter. Required.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerSetup">
            <summary>
            Runs WSTRunner to setup a database using the provided manifest and deployment files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerDrop(System.String,System.String)">
            <summary>
            Runs WSTRunner to drop a database using the provided manifest and deployment files.
            </summary>
            <param name="manifestFile">Manifest File to be used with the /m parameter. Required.</param>
            <param name="deploymentFile">Deployment File to be used with the /d parameter. Required.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerDrop">
            <summary>
            Runs WSTRunner to drop a database using the provided manifest and deployment files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerManualParam(System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.String)">
            <summary>
            Runs WSTRunner to manually allow invalid parameter variations.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerManualParam(System.String[])">
            <summary>
            Runs WSTRunner to manually allow invalid parameter variations.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerManualParam(System.String)">
            <summary>
            Runs WSTRunner to manually allow invalid parameter variations.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.WSTRunnerPath">
            <summary>
            Gets or sets the fully-qualified name of the WSTRunner executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.WorkingDirectory">
            <summary>
            Gets or sets the working directory for WSTRunner
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.ManifestFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Manifest file used during database 
            deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.DeploymentFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Deployment file used during database 
            deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.Output">
            <summary>
            Gets the output text from the most recent run of WSTRunner.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.ExecutionTimeout">
            <summary>
            Exposes the Execution Timeout value for the underlying Process wrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.XblCfg">
            <summary>
            Utility class for running XblCfg
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.AddBlob(System.String,System.Byte[])">
            <summary>
            Add blob to npdb..t_config_blobs
            </summary>
            <param name="name">The name of the blob</param>
            <param name="blob">The blob data</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.DeleteBlob(System.String)">
            <summary>
            Delete blob in npdb..t_config_blobs
            </summary>
            <param name="name">The name of the blob to delete</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.GetBlob(System.String,System.Byte[]@)">
            <summary>
            Gets blob from npdb..t_config_blobs
            </summary>
            <param name="name">The name of the blob</param>
            <param name="blob">The blob data retrieved</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.RunXblCfg(System.String)">
            <summary>
            Allows running XblCfg with custom argument string.
            Mainly used for negative testing.
            </summary>
            <param name="arguments">Argument string to be used when calling XblCfg.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.ReloadWmdrmSettings">
            <summary>
            Reloads the xbos servers after changing the wmdrm whitelist blob.
            Helper function.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.XblCfg.XblCfgPath">
            <summary>
            Gets or sets path to XblCfg
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.XblCfg.Output">
            <summary>
            Gets the output text from the most recent run of XblCfg.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ServerTestFramework\STFLiveTools\objd\i386\stftoolhelp.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>STFLiveTools</name>
    </assembly>
    <members>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.CreateUser">
            <summary>
            Create a user.  Returns a UODB.Database.UserInfo, defined in UtilityClasses.cs
            </summary>
            <returns>A UserInfo, defined in UODB.cs</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.OfferRemove(System.UInt64)">
            <summary>
            Removes an offer from the system, reversing LiveOffer
            </summary>
            <param name="OfferId">OfferId of the offer to be removed</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentRemove(System.UInt32,System.String,System.Int32)">
            <summary>
            Removes Content from a site.  Does not report failure content is missing.
            </summary>
            <param name="titleId"></param>
            <param name="contentId"></param>
            <param name="site"></param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentVerify(System.UInt32,System.String,System.Int32)">
            <summary>
            Checks to see if a content package is uploaded to a site
            </summary>
            <param name="titleId"></param>
            <param name="contentId"></param>
            <param name="site"></param>
            <returns>True if package is present</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentGetPath(System.UInt32,System.String,System.Int32)">
            <summary>
            Returns the expected path to the package stored in the content download directory
            </summary>
            <param name="titleId"></param>
            <param name="contentId"></param>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.ContentGetDownloadShare(System.Int32)">
            <summary>
            Returns a UNC path to the share where content downloads are stored.  These are
            referred to by site.
            </summary>
            <remarks>
            This code is directly lifted from the LiveContent tool's DownloadServerList.cs
            </remarks>
            <param name="siteNum">The ID of the content download site.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsRemove(System.UInt32)">
            <summary>
            Removes all leaderboards for the Title
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsDeployXbox1Stats(System.UInt32,System.Boolean)">
            <summary>
            Deploys Xbox1 Leaderboards
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="force">determines whether to use /force</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsDeployXbox360Stats(System.UInt32,System.Boolean)">
            <summary>
            Deploys Xbox 360 Leaderboards
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="force">determines whether to use /force</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsDeployWebOnlyLeaderboard(System.UInt32)">
            <summary>
            Deploy Web Only Leaderboards
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsMoveLeaderboard(System.UInt32,System.Int32,System.String,System.String)">
            <summary>
            Move a single or ALL leaderboards from one server to another
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="LeaderboardId">unique ID for a leaderboard</param>
            <param name="SourceServer">name of source server of the leaderboard</param>
            <param name="DestServer">name of the destination server</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsReportConfiguration(System.UInt32)">
            <summary>
            Returns the Leaderboard Configuration of a Title
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>array of strings, each string is a leaderboard information</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsResetLeaderboard(System.UInt32,System.Int32)">
            <summary>
            Resets the Leaderboard data for a specific Leaderboard
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <param name="LeaderboardId">unique ID of the leaderboard</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsResetAllLeaderboards(System.UInt32)">
            <summary>
            Resets the leaderboard data for all leaderboards of a title
            </summary>
            <param name="TitleID">unique TitleID in hex 0xXXXXXXXX</param>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsReloadFrontDoor">
            <summary>
            Reloads the stats front door
            </summary>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.StatsReloadWebStats">
            <summary>
            Reloads the stats web front door
            </summary>
            <returns>output of the LiveStats tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.MatchClearAllDB(System.UInt32)">
            <summary>
            Used for clearing out the XMatch Databases for a specific titleID
            Currently p_match_title_delete in npdb only works for xbox 1 titles, when that is 
            fixed to also do 360 titles, we can use that instead of duplicating that effort in
            ClearMatchConfiguration.  
            </summary>
            <param name="titleID">The TitleID to have it's Tables and SP's removed from XMatch DB</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckRunSystemCheck(System.String,System.String,System.String,System.String)">
            <summary>
            Runs systemcheck against an inputfile and outputs the result (xml) file
            </summary>
            <param name="ConfigFile">inputfile with 1 healthcheck url per line</param>
            <param name="OutputFile">output file with the returns from the health urls</param>
            <param name="Threads">number of threads to run checks in parallel (must be positive)</param>
            <param name="Timeout">time before the systemcheck tool gives up</param>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckRunSystemCheck(System.String,System.String)">
            <summary>
            Runs systemcheck against an inputfile and outputs the result (xml) file with default threads and timeout
            </summary>
            <param name="ConfigFile">inputfile with 1 healthcheck url per line</param>
            <param name="OutputFile">output file with the returns from the health urls</param>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckReloadFrontDoors">
            <summary>
            Reloads all frontdoors
            </summary>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ToolsTestBase.SystemCheckReloadFrontDoors(System.String)">
            <summary>
            Reloads all frontdoors (times out if no response after Timeout)
            </summary>
            <param name="Timeout">time before the systemcheck tool gives up</param>
            <returns>output of the sytemcheck tool</returns>
        </member>
        <member name="T:ConfigFileSerializer">
            <summary>
            Utility class for serializing and deserializing various configuration files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.LiveTitleConfig.FromXml(System.String)">
            <summary>
            Creates a LiveTitleConfig object from an LTC file
            </summary>
            <param name="ltcFile">Path and name of the LTC file to de-serialize.</param>
            <returns>A LiveTitleConfig object that represents the file.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.LiveTitleConfig.FromXml(System.IO.TextReader)">
            <summary>
            Deserializes LTC XML into a LiveTitleConfig object.
            </summary>
            <param name="xml">A TextReader object that holds the LTC XML.</param>
            <returns>A LiveTitleConfig object that represents the LTC data</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.LiveTitleConfig.ToXml(System.String)">
            <summary>
            Serailizes the LiveTitleConfig object to an LTC file
            </summary>
            <param name="ltcFile">Path and name of the target LTC file</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration">
            <summary>
            Root class for deserializing an Xbox 1 configuration file (.XBOX).
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration.FromXml(System.String)">
            <summary>
            Static method to deserialize an XBOX file into a hierarchy of objects.
            </summary>
            <param name="xboxFile">The name of the XBOX file to deserialize.</param>
            <returns>An XboxConfiguration object that describes the XBOX file.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration.FromXml(System.IO.TextReader)">
            <summary>
            Static method to deserialize an XBOX XML stream into a hierarchy of objects.
            </summary>
            <param name="xboxFile">A TextReader object that contains the raw XML of an XBOX file.</param>
            <returns>An XboxConfiguration object that describes the XBOX file.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxConfiguration.ToXml(System.String)">
            <summary>
            Serializes the object hierarchy out to an XBOX file.
            </summary>
            <param name="xboxFile">The name of the XBOX file to create.</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile">
            <summary>
            Wrapper for common operations on offer files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.#ctor(System.String,ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.platform)">
            <summary>
            Create a representation of an xml offer file which can be accessed through
            XPATH calls.
            </summary>
            <param name="filename">File to open.</param>
            <param name="consoleType">Console type for this xml offer file.  Necessary because
            they use different namespaces.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.getContentId">
            <summary>
            Returns the contentID of this offer.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.MultipleQuery(System.String)">
            <summary>
            Returns a nodelist of nodes that match this xpath query.
            </summary>
            <param name="xpath">XPATH pointing to nodes to select.</param>
            <returns>XMLNodeList containing all nodes matched, or null if there are none.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.ArbitraryXpath(System.String)">
            <summary>
            Returns the first XmlNode that matches the given XPATH.
            </summary>
            <param name="xpath">XPATH pointing to the node to select.</param>
            <returns>XmlNode of selected node, or null if there is no match.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile.RelativeXpath(System.Xml.XmlNode,System.String)">
            <summary>
            Takes a node already selected from this offer file, and selects from it again.  Required
            here because it needs the namespace manager.
            </summary>
            <param name="node">Node to select from.</param>
            <param name="xpath">XPATH to use relative to this node.</param>
            <returns>New XmlNode, relative from the given one.  Returns null if there is no match.</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap">
            <summary>
            Represents a mapping from an XML Offer file to the database entry it should
            correspond to.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.#ctor(System.String)">
            <summary>
            Generate an XmlOfferMap, which will contain a parsed version of the map file.
            </summary>
            <param name="filename">Path to the offer map file.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.ParseMultipleRowsInfo(System.IO.StreamReader,ServerTestFramework.STFTools.ConfigFiles.TableMapping,System.String)">
            <summary>
            Parse the MANYROWS and ONEROW keywords.
            The MANYROWS keyword at the end of a table definition means that there will be
            multiple nodes that match the XPATH.  Each matching node corresponds to a separate
            row in the table.  A ONEROW keyword indicates that each field will be searched once,
            and matched against only one row in the database.
            </summary>
            <param name="offerMapStream">The offer map file</param>
            <param name="test">The table mapping to create</param>
            <param name="keyword">An optional keyword</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.CreateQueries(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile)">
            <summary>
            Combine the stored data of a map with the offer file to create a SELECT query.  This query should
            isolate a row in the database, and is expected to return precisely one entry.
            </summary>
            <param name="offer">The offer file to which this map will be applied.</param>
            <returns>An ArrayList of strings, each one SQL query that should return one row.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.AddMultipleQueryStrings(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile,ServerTestFramework.STFTools.ConfigFiles.TableMapping,System.Collections.ArrayList)">
            <summary>
            Given a table described by a MANYROWS keyword, add multiple SQL queries, one for each
            corresponding tag found in the offer file.  Add each of them to queriesToReturn.
            </summary>
            <param name="offer">Offer this map is appliped to.</param>
            <param name="test">Table being checked.</param>
            <param name="queriesToReturn">A list of queries that will have strings added.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.AddSingleQueryString(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile,ServerTestFramework.STFTools.ConfigFiles.TableMapping,System.Collections.ArrayList)">
            <summary>
            Given a ONEROW table description, add the SQL query string that would be used to verify
            this row is present in the DB.  Add the string to queriesToReturn.
            </summary>
            <param name="offer">Offer this map is appliped to.</param>
            <param name="test">Table being checked.</param>
            <param name="queriesToReturn">A list of queries that will have one string added.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XmlOfferMap.GenerateOneWhereClause(ServerTestFramework.STFTools.ConfigFiles.XmlOfferFile,ServerTestFramework.STFTools.ConfigFiles.EntryMapping,System.Xml.XmlNode)">
            <summary>
            Used when generating an SQL select query.  This iterates through all the fields that should
            be checked.  For each one it pulls the appropriate data out of the offer file, using the XPATH for
            that field.  It returns a boolean test to determine if the data in the db matches that of the offer file.
            </summary>
            <param name="offer">Offer this map is appliped to.</param>
            <param name="dataMap">A single instance of mapping one XPATH in the offer file to one field in the DB.</param>
            <param name="multipleQueryNode">If the table was defined using MANYROWS, the XPATH is taken relative to this node.</param>
            <returns>A string to be added to a where clause.  e.g. "bi_offer_id = 0xfffe07d100000001"</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.TableMapping">
            <summary>
            A mapping of the fields of one table with the XPATHs that locate those fields in an offer file.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration">
            <summary>
            Root class for the Xbox1 Leaderboard Configuration (XSC) file hierarchy.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.FromXml(System.String)">
            <summary>
            Static method to deserialize an XSC file into a class hierarchy
            </summary>
            <param name="xscFile">Full path and filename of the XSC file to deserialize</param>
            <returns>Returns an XboxLeaderboardConfiguration object defining the XSC file</returns>
            <example>
            XboxLeaderboardConfiguration xsc = XboxLeaderboardConfiguration.FromXml("FFFFAB08.XSC");
            </example>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.FromXml(System.IO.TextReader)">
            <summary>
            Static method to deserialize raw XSC xml into a class hierarchy
            </summary>
            <param name="xscXml">A TextReader-derived object that contains the XSC XML to deserialize</param>
            <returns>Returns an XboxLeaderboardConfiguration object defining the XSC XML</returns>
            <example>
            StreamReader reader = new StreamReader("FFFFAB08.XSC");
            XboxLeaderboardConfiguration xsc = XboxLeaderboardConfiguration.FromXml(reader);
            </example>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.ToXml(System.String)">
            <summary>
            Serializes Xbox1 leaderboard configuration data into an XSC file
            </summary>
            <param name="xscFile">Full path and filename to which the XML data should be serialized</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.TitleId">
            <summary>
            The value ot the TitleID attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.UnitLeaderboardDecayConstant">
            <summary>
            The value of the UnitLeaderboardDecayConstant attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.Version">
            <summary>
            The value of the Version attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.DefaultLocale">
            <summary>
            The value of the Default_Locale attribute of the Title element
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ConfigFiles.XboxLeaderboardConfiguration.LeaderboardContainers">
            <summary>
            Collection of XscLeaderboardContainer objects that represent the three possible types of leaderboards in the file
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection">
            <summary>
            A collection of Leaderboard Containers in an XSC file.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Add(ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainer)">
            <summary>
            Adds an existing XscLeaderboardContainer object to the collection
            </summary>
            <param name="obj">An existing XscLeaderboardContainer object</param>
            <returns>The added object</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Add">
            <summary>
            Creates a new XscLeaderboardContainer object and adds it to the collection
            </summary>
            <returns>The newly created object</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Insert(System.Int32,ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainer)">
            <summary>
            Inserts an existing XscLeaderboardContainer object into the collection
            </summary>
            <param name="index">0-based index at which the XscLeaderboardContainer object should be inserted</param>
            <param name="obj">The XscLeaderboardContainer object to insert</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainerCollection.Remove(ServerTestFramework.STFTools.ConfigFiles.XscLeaderboardContainer)">
            <summary>
            Removes the first occurance of the specified XscLeaderboardContainer object from the collection
            </summary>
            <param name="obj">The XscLeaderboardContainer object to remove</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViewColumn(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32,System.String,System.Boolean)">
            <summary>
            Adds a Context field to a StatsView (leaderboard)
            </summary>
            <param name="xlast">The xlast file object.</param>
            <param name="viewId">The ID of the StatView to which the column will be added.</param>
            <param name="contextId">The ID of the existing Context to use.</param>
            <param name="hidden">Flag indicating whether this column is hidden.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViewColumn(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32,System.String,ServerTestFramework.STFTools.ConfigFiles.type,System.Boolean,System.Boolean)">
            <summary>
            Adds a Property field to a StatsView (leaderboard)
            </summary>
            <param name="xlast">The xlast file object.</param>
            <param name="viewId">The ID of the StatView to which the Property will be added.</param>
            <param name="propertyId">The ID of the existing Property to use.</param>
            <param name="aggregationType">The aggregation type to use for this column.</param>
            <param name="hidden">A flag indicating whether this column is hidden.</param>
            <param name="rank">A flag indicating whether this column is used for ranking.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViews(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32)">
            <summary>
            Adds a number of StatsViews to an XLAST file.
            </summary>
            <param name="xlast">An XLAST file object.</param>
            <param name="count">The number of StatsViews to add to the XLAST file object.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XLASTFactory.AddStatsViewColumns(ServerTestFramework.STFTools.ConfigFiles.XboxLiveSubmissionProject,System.UInt32,System.Int32)">
            <summary>
            Adds a number of columns to a specified StatsView.
            </summary>
            <param name="xlast">An XLAST file object.</param>
            <param name="viewId">The ID os the StatsView to which the columns will be added.</param>
            <param name="count">The number of columns to add.</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.ClientToolBase">
            <summary>
            Base class for all client tool wrappers
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.GetToolServer">
            <summary>
            Gets the first server for the toolsmgmtsrv interface
            </summary>
            <returns>Server name</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.AcceptPsExecEula">
            <summary>
            Sets the flag in the registry saying that we accepted the PsExec license agreement.
            Without this, the first execution pops up an Accept/Decline UI that currently can't
            be overridden on the command line.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.Run(System.String)">
            <summary>
            Executes the tool with the given arguments
            </summary>
            <param name="args">Arguments for the tool</param>
            <returns>Process exit code</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.ClientToolBase.RunThrowOnFailure``1(System.String,System.String)">
            <summary>
            Executes the tool with the given arguments and throws an exception if the
            exit code is non-zero.
            </summary>
            <typeparam name="T">Type of exception to throw</typeparam>
            <param name="args">Arguments for the tool</param>
            <param name="message">Error message</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.ClientToolBase.StandardError">
            <summary>
            Standard Error for the completed process
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.ClientToolBase.StandardOutput">
            <summary>
            Standard Output for the completed process
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.EmulatorUtil">
            <summary>
            Utility class for emulator.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveContent">
            <summary>
            Utility class for running the LiveContent tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.#ctor(System.String)">
            <summary>
            Define a non-default location for the LiveContent exe.  This location includes the exe in the path.
            </summary>
            <param name="liveContentPath">
            Path to the executable, including the exe filename.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.setUpdateFlag(ServerTestFramework.STFTools.LiveContent.updateType)">
            <summary>
            Sets the update flag for a future run of LiveContent.
            </summary>
            <param name="type">
            Possible choices for the /update: option.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.SetPackageFile(System.String,System.UInt32)">
            <summary>
            Sets the package and associated titleID for a future run of LiveContent.
            </summary>
            <param name="path">
            File path which will be passed in the /package: argument.
            </param>
            <param name="_titleId">
            OfferId which will be passed in the /titleid: argument.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.SetOfferFile(System.String,System.UInt64)">
            <summary>
            Sets the optional first offer and its associated offerID
            for a future run of LiveContent.
            </summary>
            <param name="path">
            File path which will be passed in the /offerfile: argument.
            </param>
            <param name="_offerId">
            OfferId which will be passed in the /offerid: argument.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.SetOfferFile2(System.String,System.UInt64)">
            <summary>
            Sets the optional second offer and its associated offerID
            for a future run of LiveContent.
            </summary>
            <param name="path">
            File path which will be passed in the /offerfile2: argument.
            </param>
            <param name="_offerId">
            OfferId which will be passed in the /offerid2: argument.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.setTargetFlag(ServerTestFramework.STFTools.LiveContent.dbType)">
            <summary>
            Sets the _targetFlag string from the given dbType.
            </summary>
            <param name="selectedDB">
            Possible choices for the /targetDB: option.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.CombineFlagsForContent">
            <summary>
            Returns a combined string of all the flags used when propping 
            content(and not autoupdates).  If in the future flags are added, they should be 
            added to this string as well.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.Deploy360Package">
            <summary>
            Expects SetPackageFile to be set.  Optionally expects SetOfferFile, SetOfferFile2, 
            IsDefaultOffer, etc. to be called to set other parameters.  WARNING:Content files
            require an offer file, and should not be run without them.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.DeployXbox1Content">
            <summary>
            Expects SetPackageFile to be set.  Optionally expects SetOfferFile and
            IsDefaultOffer to be called to set other parameters.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.DeployXbox1AutoUpdate">
            <summary>
            Deploys an xbox1 AutoUpdate.  This expects SetPackageFile to be called beforehand.
            Arguments it does not use will be dropped.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.MakeAutoUpdateFull(System.UInt32,System.UInt32,System.UInt32,ServerTestFramework.STFTools.LiveContent.platformType)">
            <summary>
            Converts a selective update into a global autoupdate.
            </summary>
            <param name="_titleId">
            The titleid to apply this change.
            </param>
            <param name="oldVersion">
            The version number that the selective update begins.
            </param>
            <param name="newVersion">
            The version number to which the selective update will update.
            </param>
            <param name="platform">
            The platform this update applies.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.Hex8(System.UInt32)">
            <summary>
            Makes a zero paded hex value.  ie 00000101
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveContent.RunWithOnlyStringArguments(System.String)">
            <summary>
            Runs LiveContent with a string of command-line arguments and nothing else.
            </summary>
            <param name="arguments">
            String of command line arguments.
            </param>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Output">
            <summary>
            Gets the output after the LiveContent process has been run.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.IsDefaultOffer">
            <summary>
            Gets or sets the /_isDefaultOffer flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.UseDefaultOffer">
            <summary>
            Gets or sets the /usedefaultoffer flag for a future run of LiveContent
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Sites">
            <summary>
            Gets or sets the site flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.StartDateFlag">
            <summary>
            Gets or sets the start date flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.EndDateFlag">
            <summary>
            Gets or sets the end date flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Shares">
            <summary>
            Gets or sets the _shares flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveContent.Xrls">
            <summary>
            Gets or sets the _sites flag for a future run of LiveContent.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveMatch">
            <summary>
            Utility class for running the LiveMatch tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.DeployMatchServer(System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Deploys the matchmaking database(s) for the current title.
            </summary>
            <param name="dropTable">
            Flag indicating whether to drop the current match table.
            </param>
            <param name="scriptSQL">
            Flag indicating whether to write the SQL commands to a local file instead of to the databases.
            The name of the file can be specified using the ScriptFile property.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchMigrationBucket(System.UInt32,System.Int32,System.String)">
            <summary>
            Used for different migrations for an interface bucket
            </summary>
            <param name="titleID">TitleId used for migration</param>
            <param name="migrationState">
            0 = StartMigrationForBucket
            1 = MigrationStatusForBucket
            2 = ExpediteMigrationForBucket
            3 = EndMigrationForBucket
            </param>
            <param name="destServerName">Destination server, only required for StartMigrationForBucket</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchMigrationTitle(System.UInt32,System.Int32,System.String,System.String)">
            <summary>
            Used for different title migrations
            </summary>
            <param name="titleID">TitleId used for migration</param>
            <param name="migrationState">
            0 = StartMigrationForTitle
            1 = MigrationStatusForTitle
            2 = ExpediteMigrationForTitle
            3 = EndMigrationForTitle
            </param>
            <param name="destServerName">Destination server, only required for StartMigrationForBucket</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchAddRRBucket(System.UInt32,System.String)">
            <summary>
            Used for adding a RR bucket to an existing type/mode
            </summary>
            <param name="titleID">TitleId used for migration</param>
            <param name="serverName">The server that is going to be added for round robin</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchDrainTopRRBucket(System.UInt32)">
            <summary>
            Used to begin draining the top round robined bucket.  Draining buckets no longer add
            sessions to them.
            </summary>
            <param name="titleID">TitleId used for migration</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.MatchRemoveTopRRBucket(System.UInt32,System.Boolean)">
            <summary>
            Used to begin draining the top round robined bucket.  Draining buckets no longer add
            sessions to them.
            </summary>
            <param name="titleID">TitleId used for migration</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.AddMatchServer(System.UInt32,System.String)">
            <summary>
            Adds a new matchmaking server.
            </summary>
            <param name="serverName">
            Name of the server to which matchmaking tables and queries will be added.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.DeleteMatchServer(System.UInt32,System.String)">
            <summary>
            Deletes an existing matchmaking server.
            </summary>
            <param name="serverName">
            Name of the server to remove from the match titles table.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.RunLiveMatch(System.String)">
            <summary>
            Allows direct passing of Arguments on command line to LiveMatch, primarily used for negative testing.
            </summary>
            <param name="arguments">String to pass to LiveMatch</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveMatch.RunLiveMatchDefault(System.UInt32)">
            <summary>
            Static method for running Live Match with the default settings of titleid and the droptable option.
            </summary>
            <param name="titleID">The TitleID to which you want to run LiveMatch for</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.ScriptFile">
            <summary>
            Gets or sets the name of the SQL file generated when using the /script option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.TypeID">
            <summary>
            Gets or sets the typeid
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.ModeID">
            <summary>
            Gets or sets the modeid
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.RRID">
            <summary>
            Gets or sets the rrid
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveMatch.NoReloadFrontDoors">
            <summary>
            Turn on or off the /noreload option.  Defaults at false so that it does not use switch.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveOffer">
            <summary>
            Utility class for running the LiveOffer tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.DbTypeToString(ServerTestFramework.STFTools.LiveOffer.dbType)">
            <summary>
            Returns the appropriate string for the given dbType.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.ReloadFrontDoors">
            <summary>
            Reloads the front doors.  Offers are cached and will not be seen unless the 
            this occurs--however, LiveOffer will by default reload the front doors after
            every prop.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.Validate360Offer(System.String)">
            <summary>
            Checks if the given XML file follows the format given in the file LiveOffer.xsd
            </summary>
            <param name="filePath">File to be validated.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.ValidateXboxOffer(System.String)">
            <summary>
            Checks if the given XML file follows the format given in the file Xbox1Offer.xsd
            </summary>
            <param name="filePath">File to be validated.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.CheckIfOfferIsPropped(System.UInt64)">
            <summary>
            Checks if a offer is propped.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.Prop360Offer(System.String,System.UInt32,ServerTestFramework.STFTools.LiveOffer.dbType,System.Boolean)">
            <summary>
            Places an Xbox360 offer file on the Live service.  This populates a large number of tables 
            that begin with uodb..t_offer.
            </summary>
            <param name="filePath">Path to the offer file.</param>
            <param name="titleId">Titleid the offer is related to.</param>
            <param name="targetDBs">Flag determining which DBs should be updated</param>
            <param name="overwriteDMPSettings">If they exist, clobber existing DMP settings.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.PropXboxOffer(System.String,System.UInt32,ServerTestFramework.STFTools.LiveOffer.dbType,System.Boolean)">
            <summary>
            Places an Xbox1 offer file on the Live service.  This populates a distinctly different set of tables
            than in the XBox360 case.
            </summary>
            <param name="filePath">Path to the offer file.</param>
            <param name="titleId">Titleid the offer is related to.</param>
            <param name="targetDBs">Flag determining which DBs should be updated</param>
            <param name="overwriteDMPSettings">If they exist, clobber existing DMP settings.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.NukeOffer(System.UInt64)">
            <summary>
            Removes an offer from the Live service.  Requires an offerid.  This is only available on the
            debug build of LiveOffer.
            </summary>
            <param name="offerid">The offerId to remove.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveOffer.NukeAllOffers(System.UInt32)">
            <summary>
            Removes all offers from the Live service under a certain title.  Requires a titleid.  This
            is only available on the debug build of LiveOffer.
            </summary>
            <param name="titleid">The titleId whose offers will be removed.</param>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveStats">
            <summary>
            Utility class for running the LiveStats tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeployXbox1Leaderboard(System.UInt32,System.Boolean)">
            <summary>
            Deploys the leaderboards for an Xbox1 title.
            </summary>
            <param name="force">Flag indicating whether or not to include the /force argument.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeployXbox360Leaderboard(System.UInt32,System.Boolean)">
            <summary>
            Deploys the leaderboards for an Xbox 360 title.
            </summary>
            <param name="force">Flag indicating whether or not to include the /force argument.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeployWebOnlyLeaderboard(System.UInt32)">
            <summary>
            Deletes the leaderboards from the Web DB and re-deploys them.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.MoveLeaderboard(System.UInt32,System.Int32,System.String,System.String)">
            <summary>
            Moves one or all leaderboards from one server to another.
            </summary>
            <param name="leaderboardId">
            ID of the leaderboard to move. Use the ALL_LEADERBOARDS constant to move all leaderboards.
            </param>
            <param name="sourceServer">
            The name of the server on which the leaderboard currently resides.
            </param>
            <param name="destServer">
            The name of the server to which the leaderboard will be moved.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ReportConfiguration(System.UInt32)">
            <summary>
            Reports the leaderboard configuration for a title.
            </summary>
            <param name="leaderboardId">
            The ID of the leaderboard to report.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ResetLeaderboard(System.UInt32,System.Int32)">
            <summary>
            Resets the data for a single leaderboard.
            </summary>
            <param name="leaderboardId">
            The ID of the leaderboard to reset.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ResetAllLeaderboards(System.UInt32)">
            <summary>
            Resets the data for all leaderboards in the current title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.DeleteLeaderboards(System.UInt32)">
            <summary>
            Deletes all stats data and leaderboard definitions for the current title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ReloadFrontDoor">
            <summary>
            Reloads the Stats front door.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.ReloadWebStats">
            <summary>
            Reloads the Web stats front door.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.CleanClip(System.UInt32,System.Int32)">
            <summary>
            Sets up a clean clips CRON job for the specified Xbox360 title id
            </summary>
            <param name="titleId">Title ID</param>
            <param name="hoursFromNow">The number of hours to wait before running the CRON job.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveStats.CleanXboxClip(System.UInt32,System.Int32)">
            <summary>
            Sets up a clean clips CRON job for the specified Xbox1 title id
            </summary>
            <param name="titleId">Title ID</param>
            <param name="hoursFromNow">The number of hours to wait before running the CRON job.</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.LiveStatsPath">
            <summary>
            Gets or sets the fully-qualified name of the LiveStats executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.WorkingDirectory">
            <summary>
            Gets or sets the working directory for LiveStats
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.Timeout">
            <summary>
            Gets or sets the number of milliseconds to allow LiveStats to run before killing the process.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveStats.Output">
            <summary>
            Gets the output text from the most recent run of LiveStats.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.LiveTitle">
            <summary>
            Utility class for running the LiveTitle tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CreateXbox360LTCFile">
            <summary>
            Runs LiveTitle to create an LTC file for an Xbox 360 title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CreateXbox360LTCFile(System.UInt32,System.UInt32)">
            <summary>
            Runs LiveTitle with a title id and a disc id to create an LTC file for an Xbox 360 title.
            </summary>
            <param name="titleId">Title ID to specify with the /titleid parameter. Optional.</param>
            <param name="discId">Disc ID to specify with the /discid parameter. Optional.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox360Title(System.UInt32,System.Boolean,System.Boolean,System.UInt32)">
            <summary>
            DeployXbox360Title will run LiveTitle with the /deploy command-line argument.  
            If the
            LTCPath property does not point to an existing LTC file, then 
            CreateXbox360LTCFile
            will be called first to generate the LTC file before trying to deploy.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="deployImages">
            Flag indicating whether the /images argument should appear on the command 
            line.
            It is highly recommended that this be set to True for initial deployments.
            </param>
            <param name="contentUpdate">
            Flag indicating whether the /contentupdate argument should be added to the 
            command line.
            </param>
            <param name="version">
            Initial version of the title.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox360Title(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Deploys an Xbox 360 title without the optional /version parameter.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="deployImages">Images parameter flag</param>
            <param name="contentUpdate">Content Update parameter flag</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox360Title(System.UInt32)">
            <summary>
            Deploys an Xbox 360 title with images.
            </summary>
            <param name="titleId">Title ID</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CreateXbox1LTCFile">
            <summary>
            Creates an LTC file for an Xbox1 title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployXbox1Title(System.UInt32)">
            <summary>
            Deploys an Xbox1 title, creating the default LTC file, if needed.
            </summary>
            <param name="titleId">Title ID</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeployMarketplaceOnlyTitle(System.UInt32,System.Boolean)">
            <summary>
            Deploys an Xbox 360 Marketplace-only title.
            </summary>
            <param name="titleId">Title Id</param>
            <param name="images">
            Flag indicating whether the /images parameter should appear on the command line.
            </param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.LockTitle">
            <summary>
            Locks the game configuration for an Xbox 360 title.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.ReportTitleVersion(System.UInt32)">
            <summary>
            Reports the existing versions for the specified title id.
            </summary>
            <param name="titleId">The title id</param>
            <returns>An array of version strings in the form "base,update,beta"</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.AddTitleBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Adds a base version entry to UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">New base version to add for this title</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeleteTitleBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Deletes a base version entry from UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">Base version to remove</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.AddBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Adds a base version entry to UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">New base version to add for this title</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.DeleteBaseVersion(System.UInt32,System.UInt32,xonline.common.config.ConsoleTypeEnum)">
            <summary>
            Deletes a base version entry from UODB for the specified title.
            </summary>
            <param name="titleId">Title ID</param>
            <param name="baseVersion">Base version to remove</param>
            <param name="consoleType">The console type. May be Xbox1, Xenon, or PC</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.PropTitle(System.UInt32,System.UInt32,ServerTestFramework.LiveService.Auth.AuthContext.ClientTypes)">
            <summary>
            Props a title.  If no path is specified it will be copied from titlevault.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CheckIfTitleIsPropped(System.UInt32)">
            <summary>
            Checks if a title is propped.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.CheckAndPropTitle(System.UInt32,System.UInt32,ServerTestFramework.LiveService.Auth.AuthContext.ClientTypes,System.String)">
            <summary>
            Checks if a title is propped, and if not, props it.  If no path is specified it will be copied from stressnet titlevault.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.LiveTitle.ValidateTitleData(System.UInt32)">
            <summary>
            Performs basic validation that the title deployment succeeded.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.LiveTitlePath">
            <summary>
            Gets or sets the fully-qualified name of the LiveTitle executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.WorkingDirectory">
            <summary>
            Gets or sets the working directory for LiveTitle
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.LTCPath">
            <summary>
            Gets or sets the fully-qualified name of the LTC file used during title 
            deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XlastPath">
            <summary>
            Xbox 360 LTC file creation and title deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.MarketplacePath">
            <summary>
            Gets or sets the fully-qualified name of the Marketplace file used to deploy a Marketplace-only title.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XSCPath">
            <summary>
            Gets or sets the fully-qualified name of the XSC file used during Xbox1 LTC 
            file creation and title deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XBOXPath">
            <summary>
            Gets or sets the fully-qualified name of the XBOX file used during Xbox1 LTC 
            file creation and title deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.XMSPath">
            <summary>
            Gets or sets the fully-qualified name of the XMS file used during Xbox1 title 
            deployment (optional).
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.LeaderboardServer">
            <summary>
            Gets or sets the leaderboard server used during LTC file creation.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.MatchServers">
            <summary>
            Gets or sets the semi-colon delimited list of match servers used during LTC 
            file creation.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.Output">
            <summary>
            Gets the output text from the most recent run of LiveTitle.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.LiveTitle.ExecutionTimeout">
            <summary>
            Exposes the Execution Timeout value for the underlying Process wrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.MsgTool">
            <summary>
            Utility class for running MsgTool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.AddString(System.UInt32,System.String,ServerTestFramework.STFTools.StringLanguage)">
            <summary>
            Adds a string to the table.
            </summary>
            <param name="stringID">ID of the string to be added</param>
            <param name="text">The text of the string in the appropriate language.</param>
            <param name="lang">The language of this instance of the message.</param>
            <remarks> Command Line: 
            MSGTOOL /addstring /id:[id] /text:[text] /lang:[language]<br/> 
            You must add a string to the table before you send it via SystemMessage, UserMessage,
            or TitleMessage since these take the ID of the string.<br/>
            Msgtool generates the following for this command line:
            D:\msgtool /addstring /id:50001 /text:"This is a test." /lang:1
            <code>
            Adding string - id:50001,lang:1,text:This is a test.
            String Service address 10.20.1.5:11020
            String Service address 10.20.1.5:11020
            
            
            String added successfully.
            
            </code></remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendSystemMsg(System.UInt32,System.String,System.Boolean)">
            <summary>
            Sends a string to all users when they sign in their language or the default.
            Has the recommended option for sending to Xbox 1.
            </summary>
            <param name="stringID">ID of the string to be sent</param>
            <param name="expiration">When this message will expire from the server</param>
            <param name="recommended">Xbox 1 setting.  No effect on Xbox 360</param>
            <remarks>Add system message generates the following output from the command line:
            msgtool /addsystemmsg /id:50001 /expiration:"5/17/2006"
            <code>
            Checking for existence of string 50001...
            Adding system message - id:50001,expiration:5/17/2006
            System message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendSystemMsg(System.UInt32,System.String)">
            <summary>
            Sends a string to all users when they sign in their language or the default.
            Defaults as required on Xbox1.
            </summary>
            <param name="stringID">ID of the string to be sent</param>
            <param name="expiration">When this message will expire from the server</param>
            <remarks>Command Line: MSGTOOL /addsystemmsg /id:[id] /expiration:[expiration]<br/>
            Adds the specified string to the table to be sent to all users.
            Add system message generates the following output from the command line:
            msgtool /addsystemmsg /id:50001 /expiration:"5/17/2006"
            <code>
            Checking for existence of string 50001...
            Adding system message - id:50001,expiration:5/17/2006
            System message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumSystemMsg">
             <summary>
             Enumerate all the System Messages in the queue
             </summary>
             <returns>MessageEntries collection of the sent messages</returns>
             <remarks>
             Return is formatted like this: (Blank line appears to be output before and after.
             <code>
                 
             Enumerating System Messages...
             
             TitleID, MsgID, Sent, ExpireDate, Description
             0, 1074107393, 5/16/2006 10:45:58 PM, 5/16/2006 11:59:58 PM, Xbox Live
            
             End Enumeration.
                     
             </code> OR <code>
                   
             Enumerating System Messages...
             There were no messages in the system message queue.
                    
             </code>                                         */
             </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendTitleMsg(System.UInt32,System.UInt32,System.String)">
            <summary>
            Sends a message to all users of a specified title
            </summary>
            <param name="stringID">ID of previously added string to be sent</param>
            <param name="titleID">TitleID</param>
            <param name="expiration">Expiration date of the message</param>
            <remarks>The following was generated from this command line: msgtool /addtitlemsg /id:50001 /title:0xFFFE07D0 /expiration:"5/20/2006"
            <code>
            Checking for existence of string 50001...
            Adding title message - title:0xFFFE07D0,id:50001,expiration:5/20/2006
            Title message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendTitleMsg(System.UInt32,System.UInt32,System.String,System.Boolean)">
            <summary>
            Sends a message to all users of a specified title
            </summary>
            <param name="stringID">ID of previously added string to be sent</param>
            <param name="titleID">TitleID</param>>
            <param name="expiration">Expiration date of the message</param>
            <param name="recommended">Xbox1 recommended message or required</param>
            <remarks>The following was generated from this command line: msgtool /addtitlemsg /id:50001 /title:0xFFFE07D0 /expiration:"5/20/2006"
            <code>
            Checking for existence of string 50001...
            Adding title message - title:0xFFFE07D0,id:50001,expiration:5/20/2006
            Title message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumTitleMsg(System.UInt32)">
             <summary>
             Enumerate all the System Messages in the queue
             </summary>
             <returns>MessageEntries collection of the sent messages</returns>
             <remarks>
             Return is formatted like this: (Blank line appears to be output before and after.
             <code>
                 
             Enumerating System Messages...
             
             TitleID, MsgID, Sent, ExpireDate, Description
             0, 1074107393, 5/16/2006 10:45:58 PM, 5/16/2006 11:59:58 PM, Xbox Live
            
             End Enumeration.
                     
             </code> OR <code>
                   
             Enumerating System Messages...
             There were no messages in the system message queue.
                    
             </code>                                         */
             </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.DeleteMsg(System.UInt32,System.UInt32)">
            <summary>
            Deletes a message that was added with the Send functions
            </summary>
            <param name="messageID">ID of the message.  This is returned from the enumMsg methods</param>
            <param name="titleID">TitleID of the Message.  Use 0 for system messages</param>
            <remarks>
            The following message is output, no matter if the message is deleted, the titleID or the Message isn't found.
            <code>
            System or title message was successfully deleted or revoked.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.RevokeMsg(System.UInt32,System.UInt32)">
            <summary>
            Revokes a message that was added with the Send functions.  Removes any sent instances as well.
            </summary>
            <param name="messageID">ID of the message.  This is returned from the enumMsg methods</param>
            <param name="titleID">TitleID of the Message.  Use 0 for system messages</param>
            <remarks>
            The following was generated using this command line: msgtool /revokemsg /id:1074107393 /title:0
            <code>
            System or title message was successfully deleted or revoked.
            
            </code>
            This same output is generated even if the id does not exist.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.UInt64,System.String)">
            <summary>
            Adds a message for a specified User by PUID
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="userPUID">User's PUID</param>
            <param name="expiration">Message Expiration Date</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /user:2533274801615275 /expiration:"5/24/2006" /recommended
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.UInt64,System.String,System.Boolean)">
            <summary>
            Send a message for specified user on XBox 1 setting recommended by PUID
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="userPUID">User's PUID</param>
            <param name="expiration">Message Expiration Date</param>
            <param name="recommended">XBox 1 switch to make recommended or required</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /usertag:coerwyn /expiration:"5/24/2006"
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.String,System.String)">
            <summary>
            Adds a message for a specified User by GamerTag
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="gamerTag">User's GamerTag</param>
            <param name="expiration">Message Expiration Date</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /usertag:coerwyn /expiration:"5/24/2006"
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.SendUserMsg(System.UInt32,System.String,System.String,System.Boolean)">
            <summary>
            Send a message for specified user on XBox 1 setting recommended by PUID
            </summary>
            <param name="stringID">ID of String to be sent to user</param>
            <param name="gamerTag">User's PUID</param>
            <param name="expiration">Message Expiration Date</param>
            <param name="recommended">XBox 1 switch to make recommended or required</param>
            <remarks>
            The following output was generated from this command line: msgtool /addusermsg /id:50001 /usertag:coerwyn /expiration:"5/24/2006"
            <code>
            Checking user information ...
            Checking for existence of string 50001...
            Adding user message - user:2533274801615275,id:50001,expiration:5/24/2006
            User message added successfully.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumUserMsg(System.UInt64)">
            <summary>
            Enumerates the messages for a user from their PUID
            </summary>
            <param name="puid">PUID of the user</param>
            <returns>A collection of UserMessages</returns>
            <remarks>The following was returned by the command line: msgtool /enumusermsg /user:2533274801615275
            <code>
            Checking user information ...
            
            SenderID, SentTime, MessageID, MFlg, SenderTitleID, ExpireDate
            0, 5/22/2006 4:52:24 PM, 2, 1, 4294836224, 5/24/2006 12:00:24 AM
            
            End Enumeration.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.EnumUserMsg(System.String)">
            <summary>
            Returns a list of user messages from a specified gamerTag
            </summary>
            <param name="gamerTag">User's gamertag</param>
            <returns>Collection of UserMessages</returns>
            <remarks>The following was returned by the command line: msgtool /enumusermsg /usertag:coerwyn
            <code>
            Checking user information ...
            
            SenderID, SentTime, MessageID, MFlg, SenderTitleID, ExpireDate
            0, 5/22/2006 4:52:24 PM, 2, 1, 4294836224, 5/24/2006 12:00:24 AM
            
            End Enumeration.
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.DeleteUserMsg(System.UInt32,System.UInt64)">
            <summary>
            Deletes a user message using the Message ID and PUID.
            </summary>
            <param name="MsgId">Message ID returned from EnumMessage function</param>
            <param name="puid">User's PUID</param>
            <remarks>This command line generated the following output: msgtool /deleteusermsg /id:2 /user:2533274801615275
            <code>
            Checking user information ...
            Successfully deleted message ID 2 from the queue of user 2533274801615275
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.DeleteUserMsg(System.UInt32,System.String)">
            <summary>
            Deletes a user message using the Message ID and GamerTag
            </summary>
            <param name="MsgId">Message ID returned from EnumMessage function</param>
            <param name="gamerTag">User's GamerTag</param>
            <remarks>This command line generated the following output: msgtool /deleteusermsg /id:2 /usertag:coerwyn
            <code>
            Checking user information ...
            Successfully deleted message ID 2 from the queue of user 2533274801615275
            
            </code>
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.RunMsgTool(System.String)">
            <summary>
            Allows running MsgTool with custom argument string.
            Mainly used for negative testing.
            </summary>
            <param name="arguments">Argument string to be used when calling MsgTool.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.XMLMessage(System.String)">
            <summary>
            Runs MsgTool taking an XML file of messages and recipients.
            </summary>
            <param name="XMLFile">XML File path</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.MsgTool.CheckXMLMessage(System.String)">
            <summary>
            Runs MsgTool taking an XML file of messages and recipients and *only* validates the XML format.
            </summary>
            <param name="XMLFile">XML File path</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.MsgTool.MsgToolPath">
            <summary>
            Gets or sets path to MsgTool
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.MsgTool.Output">
            <summary>
            Gets the output text from the most recent run of MsgTool.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.StringLanguage">
            <summary>
            Language Enum for the strings in MsgTool
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.MsgToolException">
            <summary>
            Exception class for MsgTool runner
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.MessageEntry">
            <summary>
            A Row returned from the Enum functions of MsgTool of what messages are sent.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntry.#ctor(System.String)">
            <summary>
            Creates a new MsgTool Message line from a string that MsgTool returns.
            </summary>
            <param name="entry">Formatted String from MsgTool</param>
            <remarks>The tool returns each row like "TitleID, MsgID, Sent, ExpireDate, Description"</remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntry.Equals(System.Object)">
            <summary>
            Tests if object is equal to this MessageEntry
            </summary>
            <param name="obj">Object to test</param>
            <returns>True if both objects are the same</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntry.GetHashCode">
            <summary>
            Gets the hashcode for this instance
            </summary>
            <returns>Hashcode</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.MessageEntries">
            <summary>
            Collection of MessageEntry objects
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntries.Add(ServerTestFramework.STFTools.MessageEntry)">
            <summary>
            Adds a MessageEntry to the collection
            </summary>
            <param name="val">MessageEntry to add</param>
            <returns>Index of MessageEntry</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntries.Contains(ServerTestFramework.STFTools.MessageEntry)">
            <summary>
            Tests if MessageEntry is in the collection
            </summary>
            <param name="val">MessageEntry to test</param>
            <returns>True if it is already in the collection</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.MessageEntries.Remove(ServerTestFramework.STFTools.MessageEntry)">
            <summary>
            Removes a MessageEntry from the collection
            </summary>
            <param name="val">MessageEntry to remove</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.MessageEntries.Item(System.Int32)">
            <summary>
            Indexer for MessageEntries
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.UserMessage">
            <summary>
            A Message for a particular User.  Returned in the collection from the EnumUserMsg function.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessage.#ctor(System.String)">
            <summary>
            Creates a new MsgTool User Message line from a string that MsgTool enumUserMsg returns.
            </summary>
            <param name="entry">Formatted String from MsgTool</param>
            <remarks>The tool returns each row like "SenderID, SentTime, MessageID, MFlg, SenderTitleID, ExpireDate"</remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessage.Equals(System.Object)">
            <summary>
            Determines if this UserMessage is equal to another object
            </summary>
            <param name="obj">Object to be tested</param>
            <returns>True if they are equal</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessage.GetHashCode">
            <summary>
            Gets the hashcode for this object
            </summary>
            <returns>The hashcode</returns>
        </member>
        <member name="T:ServerTestFramework.STFTools.UserMessages">
            <summary>
            Collection of UserMessage objects
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessages.Add(ServerTestFramework.STFTools.UserMessage)">
            <summary>
            Adds a new UserMessage to the collection
            </summary>
            <param name="val">UserMessage to add</param>
            <returns>Index of message</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessages.Contains(ServerTestFramework.STFTools.UserMessage)">
            <summary>
            Tests if a UserMessage is already in the collection
            </summary>
            <param name="val">UserMessage to test</param>
            <returns>True if UserMessage is in the collection</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.UserMessages.Remove(ServerTestFramework.STFTools.UserMessage)">
            <summary>
            Removes a UserMessage from the collection
            </summary>
            <param name="val">UserMessage to remove</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.UserMessages.Item(System.Int32)">
            <summary>
            Indexer for UserMessage
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.QuickEnforce">
            <summary>
            Utility class for running the QuickEnforce tool.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.SPAC">
            <summary>
            Utility class that runs the SPA Compiler (SPAC) tool.
            </summary>
            <remarks>
            Unlike many of the other tools, SPAC supports multiple return codes. Therefore, all the
            methods that execute SPAC will not raise exceptions on failure, but rather simply return
            the exit code from the tool itself. It is the caller's responsibility to check this code
            and take the appropriate action.
            </remarks>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.#ctor">
            <summary>
            Creates a SPAC object and initializes the process wrapper to the default SPAC path.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.Compile">
            <summary>
            Compiles an XLAST file using the default parameter values.
            </summary>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.Compile(System.Boolean,System.Boolean)">
            <summary>
            Allows the default nospa and noh parameter values to be overridden when compiling an XLAST file.
            </summary>
            <param name="noSpa">Flag indicating whether or not a SPA file should be generated.</param>
            <param name="noHeader">Flag indicating whether or not a SPA.H file should be generated.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.Compile(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Allows all the default flag parameter values to be overridden when compiling an XLAST file.
            </summary>
            <param name="noLogo">Flag indicating whether the copyright message is printed when SPAC is run.</param>
            <param name="verbose">Flag specifying whether the compile output should be normal or verbose.</param>
            <param name="noSpa">Flag indicating whether or not a SPA file should be generated.</param>
            <param name="noHeader">Flag indicating whether or not a SPA.H file should be generated.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.UnCompile">
            <summary>
            UnCompiles a SPA file using the default parameter values.
            </summary>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.OutputXSD(System.String)">
            <summary>
            Executes SPAC to output the XSD file it is using to validate XLAST files.
            </summary>
            <param name="xsdFile">Name of the XSD file to create.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            </returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPAC.ReportSPAVersion(System.String)">
            <summary>
            Reports the version information of a given SPA file.
            </summary>
            <param name="spaFile">Name of the SPA file for which version information is to be reported.</param>
            <returns>
            One of the four possible SPAC return codes:
                0       Success
                1       Bad Usage
                2       Non-Fatal Error
                3       Fatal Error
            
            The version information will be found in the output text.
            </returns>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.SpacPath">
            <summary>
            Gets or sets the full path of the SPAC executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.WorkingDirectory">
            <summary>
            Gets or sets the name of the working directory under which SPAC will be run.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.XlastPath">
            <summary>
            Gets or sets the name of the XLAST file to compile.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.HeaderFile">
            <summary>
            Gets or sets the optional name of the header file that SPAC outputs when compiling an XLAST file.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.SpaFile">
            <summary>
            Gets or sets the optional name of the SPA file that SPAC outputs when compiling an XLAST file.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.ConfigOverrideFile">
            <summary>
            Gets or sets the optional name of a file containing configuration overrides.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.UncompileOutputFile">
            <summary>
            Gets or sets the name of the decompiled output file 
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.Output">
            <summary>
            Gets the output text of SPAC.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.NoLogo">
            <summary>
            Gets or sets the default value for the -nologo option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.Verbose">
            <summary>
            Gets or sets the default value of the -verbose option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.NoSpa">
            <summary>
            Gets or sets the default value of the -nospa option.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPAC.NoHeader">
            <summary>
            Gets or sets the default value of the -noh option.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.SPUT">
            <summary>
            Utility class for running SPUT.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.ChangeTitleID(System.String,System.String)">
            <summary>
            Writes the titleID for the specified serialNum to the table
            </summary>
            <param name="serialNum">The serial number of the Xbox</param>
            <param name="titleID">The title ID or value to set.  Must have length of 1,4 or 8.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.DumpTitleID(System.String)">
            <summary>
            Lookup the titleID associated with an xbox.
            </summary>
            <param name="serialNum">The serial number of the Xbox</param>
            <returns>Output returned from SPUT.</returns>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUTFile(System.String)">
            <summary>
            Runs SPUT specifying CSV File
            </summary>
            <param name="fileName">CSV file to be used</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUTFile">
            <summary>
            Runs SPUT specifying File that is set in CSVFIle Property
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUTFile(System.String,System.String)">
            <summary>
            Runs SPUT specifying File and TitleID to use
            </summary>
            <param name="fileName">CSV File of Serial numbers</param>
            <param name="titleID">Title ID to use or override</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SPUT.RunSPUT(System.String)">
            <summary>
            Allows running SPUT with custom argument string.
            Mainly used for negative testing.
            </summary>
            <param name="arguments">Argument string to be used when calling SPUT.</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPUT.SPUTPath">
            <summary>
            Gets or sets path to SPUT
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPUT.CSVFile">
            <summary>
            Gets or sets the CSV File to use when running SPUT.  Can be NULL.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SPUT.Output">
            <summary>
            Gets the output text from the most recent run of SPUT.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.SystemCheck">
            <summary>
            Utility class for running the SystemCheck tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.Reloadfd">
            <summary>
            Runs SystemCheck with /reloadfd parameter to reload the front doord.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.Reloadfd(System.String)">
            <summary>
            Runs SystemCheck with /reloadfd parameter to reload the front doord.
            </summary>
            <param name="timeout">timeout (in ms) to specify with the /timeout parameter. Optional.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.CallUrl">
            <summary>
            Runs SystemCheck with a configfile and outputfile.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.CallUrl(System.UInt32,System.UInt32)">
            <summary>
            Runs SystemCheck with a configfile and outputfile.
            </summary>
            <param name="threads"># of threads to speciffy with the /threads parameter. Optional.</param>
            <param name="timeout">timeout (in ms) to specify with the /timeout parameter. Optional.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.SystemCheck.CallUrl(System.String,System.String)">
            <summary>
            Runs SystemCheck with a configfile, # of threads, timout, and outputfile.
            </summary>
            <param name="threads"># of threads to speciffy with the /threads parameter. Optional.</param>
            <param name="timeout">timeout (in ms) to specify with the /timeout parameter. Optional.</param>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.SystemCheckPath">
            <summary>
            Gets or sets the fully-qualified name of the SystemCheck executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.WorkingDirectory">
            <summary>
            Gets or sets the working directory for SystemCheck
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.Timeout">
            <summary>
            Gets or sets the number of milliseconds to allow LiveStats to run before killing the process.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.ConfigFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Config file used during SystemCheck running 
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.OutFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Output file used during SystemCheck running 
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.SystemCheck.Output">
            <summary>
            Gets the output text from the most recent run of SystemCheck.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.VoucherMgr">
            <summary>
            Utility class for running the VoucherMgr tool.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.WSTRunner">
            <summary>
            Utility class for running the WSTRunner tool.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerSetup(System.String,System.String)">
            <summary>
            Runs WSTRunner to setup a database using the provided manifest and deployment files.
            </summary>
            <param name="manifestFile">Manifest File to be used with the /m parameter. Required.</param>
            <param name="deploymentFile">Deployment File to be used with the /d parameter. Required.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerSetup">
            <summary>
            Runs WSTRunner to setup a database using the provided manifest and deployment files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerDrop(System.String,System.String)">
            <summary>
            Runs WSTRunner to drop a database using the provided manifest and deployment files.
            </summary>
            <param name="manifestFile">Manifest File to be used with the /m parameter. Required.</param>
            <param name="deploymentFile">Deployment File to be used with the /d parameter. Required.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerDrop">
            <summary>
            Runs WSTRunner to drop a database using the provided manifest and deployment files.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerManualParam(System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.String)">
            <summary>
            Runs WSTRunner to manually allow invalid parameter variations.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerManualParam(System.String[])">
            <summary>
            Runs WSTRunner to manually allow invalid parameter variations.
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.WSTRunner.WSTRunnerManualParam(System.String)">
            <summary>
            Runs WSTRunner to manually allow invalid parameter variations.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.WSTRunnerPath">
            <summary>
            Gets or sets the fully-qualified name of the WSTRunner executable.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.WorkingDirectory">
            <summary>
            Gets or sets the working directory for WSTRunner
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.ManifestFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Manifest file used during database 
            deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.DeploymentFilePath">
            <summary>
            Gets or sets the fully-qualified name of the Deployment file used during database 
            deployment.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.Output">
            <summary>
            Gets the output text from the most recent run of WSTRunner.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.WSTRunner.ExecutionTimeout">
            <summary>
            Exposes the Execution Timeout value for the underlying Process wrapper.
            </summary>
        </member>
        <member name="T:ServerTestFramework.STFTools.XblCfg">
            <summary>
            Utility class for running XblCfg
            </summary>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.AddBlob(System.String,System.Byte[])">
            <summary>
            Add blob to npdb..t_config_blobs
            </summary>
            <param name="name">The name of the blob</param>
            <param name="blob">The blob data</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.DeleteBlob(System.String)">
            <summary>
            Delete blob in npdb..t_config_blobs
            </summary>
            <param name="name">The name of the blob to delete</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.GetBlob(System.String,System.Byte[]@)">
            <summary>
            Gets blob from npdb..t_config_blobs
            </summary>
            <param name="name">The name of the blob</param>
            <param name="blob">The blob data retrieved</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.RunXblCfg(System.String)">
            <summary>
            Allows running XblCfg with custom argument string.
            Mainly used for negative testing.
            </summary>
            <param name="arguments">Argument string to be used when calling XblCfg.</param>
        </member>
        <member name="M:ServerTestFramework.STFTools.XblCfg.ReloadWmdrmSettings">
            <summary>
            Reloads the xbos servers after changing the wmdrm whitelist blob.
            Helper function.
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.XblCfg.XblCfgPath">
            <summary>
            Gets or sets path to XblCfg
            </summary>
        </member>
        <member name="P:ServerTestFramework.STFTools.XblCfg.Output">
            <summary>
            Gets the output text from the most recent run of XblCfg.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SPAC\SPACTest.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<stf>
    <SPACTest>
        <DefaultToolPath>d:\webroot\xbltools</DefaultToolPath>
        <InputFilePath>.\InputFiles\SPAC</InputFilePath>
        <TempDirectoryPath>.\SpacTempFiles</TempDirectoryPath>
        <UnCompileDirectoryPath>.\SpacTempFiles\UnCompileOP</UnCompileDirectoryPath>
    </SPACTest>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SPAC\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="spactest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SPUTTest\SPUTTest.xml ===
﻿<?xml version="1.0" encoding="utf-8" ?> 
<stf>
	<SPUTTest>
        <DefaultToolPath>D:\webroot\xbltools</DefaultToolPath>
        <InputFilePath>InputFiles\SPUT</InputFilePath>
        <TempDirectoryPath>\SPUTTemp</TempDirectoryPath>
        <ConsoleID>XE.018822479708</ConsoleID>
    </SPUTTest>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SPAC\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="spactest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SPUTTest\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="sputtest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SPUTTest\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="sputtest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\Config.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<StressConfig>
	<RunVerifyThread value='true'/>
	<CreateLB value='false'/>
	<!-- client 2 should have a mask of 9FFFFFFFFCE2C0 -->
	<BaseUserMask val='0x9FFFFFFFFFF000'/>
	<!-- UserCuncurrency is used to specify the total number of users playing currently
		NoOFUsersToRotatePerMin is used to specify how many new user should be add every minute while removing same number of old users.
		for  Eg if UserCuncurrency of 30000 and NoOFUsersToRotatePerMin of 500 will recycle all users in 1 hour.
	 -->
	<UserCuncurrency val='50000'/>
	<NoOFUsersToRotatePerMin val='800'/>
	<UserRange val='200000'/>
	<!-- Unit Range should be a persent of User range. currently its set to 10 %
	-->
	<UnitRange val='20000'/> 
	<Titles>
			<!-- Rainbow  Six 3  (RB6)-->
			<Title id='255'>
				<LB	id='1' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='2' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='3' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<Rating Low='900' Hi='1100'/>
			</Title>
				
			<!-- Racing PGR 3 -->
			<Title id='256'>
				<LB	id='11' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='12' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='13' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='14' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='15' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='16' Type='Team' Attachments='N' LightWT='N' Partition='0'/>
				
			</Title>
			
			<!-- Quick Sports Amped 3 -->
			<Title id='257'>
				<LB	id='21' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='22' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='23' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='24' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='25' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<CompTp	Tpid='1' Type='User' Attachments='N' LightWT='N'/>
			</Title>
			<!-- FPS Halo2 -->
			<Title id='258'>
				<LB	id='4294901761' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='31' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='32' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='33' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='34' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='35' Type='Team' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='36' Type='Team' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='37' Type='Team' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='38' Type='Team' Attachments='N' LightWT='N' Partition='0'/>
				
			</Title>
			
	</Titles>
	<StressCases>
	
	<!-- Example test case FOr StatsPost Request 
		********Arbitrated **************
		
		Note: Arbitrated request cannot have attachments... 
		<StressCase Title="255" Name="ArbAll"  Type='Post' SendTpye='A' NoOfUsers='4-6' NoOfTeams='4' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<Condition_Replace  LBID="1"  Stats='8' />
			<Condition_Increment  LBID="5"  Stats='10'/>
			<Replace  LBID="6" Stats='10' />
			<Replace  LBID="7" Stats='10'/>
			<Replace  LBID="8" Stats='10'/>
			<Increment  LBID="8" Stats='12' />
			<ELO  LBID="8" />
			<Replace  LBID="9" Stats='10'/>
		</StressCase>
		
		*********Direct*********************
		<StressCase Title="255" Name="DirectAll"  Type='Post' SendTpye='D' NoOfUsers='2-3' NoOfTeams='4' NoOfPlayerUnits='1' NoOfTeamUnits='2' >
			<Condition_Replace  LBID="1"  Stats='8' />
			<Condition_Increment  LBID="5"  Stats='10'/>
			<Replace  LBID="6" Stats='10'/>
			<Increment  LBID="8" Stats='12' />
			<ELO  LBID="8" />
			<Replace  LBID="9" Stats='10'/>
		</StressCase>
	
	***************Old Set Request*********************
		 Example test case For StatsSet Request 
			<StressCase Title="255" Name="SetAll"  Type='StatsSet' NoOfUsers='2'>
				<LB LBID='1' Stats='8' />
				<LB LBID='2' Stats='7'/>
				<LB LBID='4' Stats='7'/>
			</StressCase>
			Note: Max 4 Users Allowed
	**************  Stats Get Request *****************
		 Example test case For StatsGet Request 
			<StressCase Title="255" Name="GetAll"  IsXenon='true' Type='StatsGet'  NoOfUsers='4-10'>
				<LB LBID="1"  Stats='8' Rating='Y' Rank='Y'/>
				<LB LBID="2"  Stats='8' Rating='Y' Rank='Y'/>
				<LB LBID="4"  Stats='8' Rating='Y' Rank='Y'/>
			</StressCase>
			note 4-10 choose randomely between 4 to 10 users.
			Note: 101 users max...
			Note: If there is no Set or StatsPost with replace/Increment Stats Get Will not work.
			Note: Only Uesr and team leaderboard Allowed.
	***************  Stats Enum Request ************
			Example test case For StatsEnum Request 
			<StressCase Title="255" Name="EnumByUser"  Type='StatsEnum'  LBID="1"  Stats='8' Pivote='User' Size='50' Rating='Y'/>
			<StressCase Title="255" Name="EnumByPos"  Type='StatsEnum'  LBID="2"  Stats='8' Pivote='Pos' Size='100' Rating='Y'/>
      
  ***************  EstimateRankForRatings Request ************
			Example test case For StatsEnum Request 
			<StressCase Title="255" Name="EstimateRankForRating"  Type='GetRankForRating'  LBID="1,2"  NumberRatings='2' />
			
			101 users max...
	****************** Unit Get Request ***************
			Example test case For StatsUnitGet Request 
			<StressCase Title="255" Name="UnitGetAll"  Type='StatsUnitGet' >
				<LB LBID="6"  Stats='8'/>
				<LB LBID="7"  Stats='7'/>
				<LB LBID="8"  Stats='5'/>
			</StressCase>
			Note: If there is no  StatsPost with replace/Increment Stats UnitGet Will not work.
			Note: Only unit leaderboard Allowed.
	**************** Unit Enum Request ***************
			 Example test case For StatsUnitEnum Request 
			<StressCase Title="255" Name="EnumByUser"  Type='StatsEnum'  LBID="1,3"  Stats='8' Pivote='User' Size='50' Rating='Y'/>
			<StressCase Title="255" Name="EnumByPos"  Type='StatsEnum'  LBID="2"  Stats='8' Pivote='Pos' Size='100' Rating='Y' NickName='Y'/>
			101 users max...
			
	***************** Web Enum Requests ******************
			 Example test case For StatsWebEnum Request 
			<StressCase Title="255" Name="WebEnumByUser"  Type='StatsWebEnum'  LBID="1,5" Pivote='User' Size='50' />
			<StressCase Title="255" Name="WebEnumByPos"  Type='StatsWebEnum'  LBID="2"  Pivote='Pos' Size='100' />
			101 users max...
			
	********** Comp Create *************
		 Example test case For Create Comp leader board Request 
			<StressCase Title="256" Name="CreateComp"  Type='CreateCompLB' TPID="1" />
		
	*************Comp Delete	
		 Example test case to delete Comp leader board  
			<StressCase Title="256" Name="DeleteComp"  Type='DeleteCompLB' TPID="1" />
	-->
		
	<!-- Rainbow  Six 3  (RB6) Starts Here -->			
	
			<StressCase Title="255" Name="RB6Set"  Type='StatsSet' NoOfUsers='1'>
				<LB LBID='1' Stats='8' />
				<LB LBID='2' Stats='7'/>
				<LB LBID='3' Stats='7'/>
			</StressCase>
			<StressCase Title="255" Name="RB6Get"  Type='StatsGet'  IsXenon='true' NoOfUsers='5-15'>
				<LB LBID="1"  Stats='8' Rating='Y' Rank='Y'/>
				<LB LBID="2"  Stats='7' Rating='Y' Rank='Y'/>
				<LB LBID="3"  Stats='7' Rating='Y' Rank='Y'/>
			</StressCase>
			<StressCase Title="255" Name="RB6Enum"  Type='StatsEnum'  LBID="1,2,3"  IsXenon='true' Stats='8' Pivote='Rating' Size='10' Rating='Y'/>
	
	<!-- ************* Rainbow  Six 3  (RB6) Ends Here*********************************************************-->	
		
	
	<!-- FPS Halo2  Starts Here -->
		<StressCase Title="258" Name="HLOArbC1A"  Type='Post' SendTpye='A' NoOfUsers='2' NoOfTeams='0' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<MuSigma  LBID="4294901761" />
			<Max  LBID="31"  Stats='2' />
			<Min  LBID="35" Stats='10'/>
		</StressCase>
		
		
		
		<StressCase Title="258" Name="HLOArbC2A"  Type='Post' SendTpye='A' NoOfUsers='8' NoOfTeams='8' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<ELO  LBID="32" />
			<Condition_Replace  LBID="32"  Stats='8' />
			<Replace  LBID="36" Stats='10'/>
		</StressCase>
		
		
		
		<StressCase Title="258" Name="HLOArbC3A"  Type='Post' SendTpye='A' NoOfUsers='10' NoOfTeams='10' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<ELO  LBID="33" />
			<Condition_Replace  LBID="33"  Stats='8' />
			<Replace  LBID="37" Stats='10'/>
		</StressCase>
		
		
		
		<StressCase Title="258" Name="HLOArbC4A"  Type='Post' SendTpye='A' NoOfUsers='14' NoOfTeams='14' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<ELO  LBID="34" />
			<Condition_Replace  LBID="34"  Stats='8' />
			<Replace  LBID="38" Stats='10'/>
		</StressCase>
		
					
		<StressCase Title="258" Name="HLOGetC1"  Type='StatsGet'  NoOfUsers='6'>
			<LB LBID="31"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="35"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		
		<StressCase Title="258" Name="HLOGetC2"  Type='StatsGet'  NoOfUsers='8'>
			<LB LBID="32"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="36"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		
		<StressCase Title="258" Name="HLOGetC3"  Type='StatsGet'  NoOfUsers='10'>
			<LB LBID="33"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="37"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		
		<StressCase Title="258" Name="HLOGetC4"  Type='StatsGet'  NoOfUsers='14'>
			<LB LBID="34"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="38"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>

		<StressCase Title="258" Name="HLOGetC1"  Type='StatsGet'  NoOfUsers='30'>
			<LB LBID="31"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="34"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="35"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="38"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>


		<StressCase Title="258" Name="HLOEnum"  Type='StatsEnum'  LBID="31,32,33,34,35,36,37,38"  Stats='8' Pivote='Pos' Size='50' Rating='Y'/>
		
		
		<StressCase Title="258" Name="HLOWebEnum"  Type='StatsWebEnum'  LBID="31,32,33,34,35,36,37,38" Pivote='Pos' Size='50' />
			
		
	<!-- *************  FPS Halo2  Ends Here ************************************************************************** -->
	
	<!-- Racing PGR3  Starts Here -->
		<StressCase Title="256" Name="PGR3ArbPost"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="11"  Stats='8' />
			<Increment  LBID="14" Stats='10'/>
			<Increment  LBID="15" Stats='12' />
			<Replace  LBID="14" Stats='10'/>
		</StressCase>
			
		<StressCase Title="256" Name="PGR3DirectPost"  Type='Post' SendTpye='D' NoOfUsers='1' NoOfTeams='1' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<Replace  LBID="12" Stats='10'/>
			<Increment  LBID="15" Stats='12' />
			<Replace  LBID="16" Stats='10'/>
		</StressCase>
				
		<StressCase Title="256" Name="PGR3Get"  Type='StatsGet'  NoOfUsers='1-2'>
			<LB LBID="11"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="12"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="14"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="PGR3Enum"  Type='StatsEnum'  LBID="11,12,14"  Stats='8' Pivote='User' Size='50' Rating='Y'/>
		
			
		<StressCase Title="256" Name="PGR3WebEnum"  Type='StatsWebEnum'  LBID="11,12,14,15" Pivote='Pos' Size='50' />
	<!-- ****************Racing PGR3  Ends Here ************************************************ -->
	
	<!-- Quick Sports AMPD   Starts  Here -->
		<StressCase Title="257" Name="AMPDPost"  Type='Post' SendTpye='D' NoOfUsers='1' NoOfTeams='1' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<Replace  LBID="21" Stats='10'/>
			<Replace  LBID="22" Stats='10'/>
			<Replace  LBID="23" Stats='10'/>
			<Increment  LBID="24" Stats='12' />
			<Replace  LBID="25" Stats='10'/>
		</StressCase>
				
		<StressCase Title="257" Name="AMPDGet"  Type='StatsGet'  NoOfUsers='1'>
			<LB LBID="21"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="22"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="23"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="24"  Stats='8' Rating='Y' Rank='Y'/>
			<LB LBID="25"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="AMPDEnum"  Type='StatsEnum'  LBID="21,22,23,24,25"  Stats='8' Pivote='Pos' Size='50' Rating='Y'/>
		<StressCase Title="257" Name="AMPDWebEnum"  Type='StatsWebEnum'  LBID="21,22,23,24,25" Pivote='Pos' Size='50' />
		<StressCase Title="257" Name="AMPDCreateComp"  Type='CreateCompLB' TPID="1" />
		<StressCase Title="257" Name="AMPDDeleteComp"  Type='DeleteCompLB' TPID="1" />
	
	<!-- Quick Sports AMPD  Ends Here -->
		
	</StressCases>
		
			
	
</StressConfig>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\HaloStress.xml ===
﻿<?xml version="1.0" encoding="utf-8" ?>
<stf>
<tests>
	<suite name='StatsStress'>
		<done>
		</done>
		<stress>
			<test name='HLOArbC1A' priority='200'/>
			<test name='HLOArbC1B' priority='300'/>
			<test name='HLOArbC2A' priority='80'/>
			<test name='HLOArbC2B' priority='120'/>
			<test name='HLOArbC3A' priority='100'/>
			<test name='HLOArbC3B' priority='100'/>
			<test name='HLOArbC4A' priority='60'/>
			<test name='HLOArbC4B' priority='40'/>
			<test name='HLOGetC1' priority='200'/>
			<test name='HLOGetC2' priority='80'/>
			<test name='HLOGetC3' priority='100'/>
			<test name='HLOGetC4' priority='60'/>
			<test name='HLOEnum' priority='200'/>
			<test name='HLOUnitGetC1' priority='300'/>
			<test name='HLOUnitGetC2' priority='120'/>
			<test name='HLOUnitGetC3' priority='100'/>
			<test name='HLOUnitGetC4' priority='40'/>
			<test name='HLOUnitEnum' priority='200'/>
			<test name='HLOWebEnum' priority='200'/>
			
		</stress>
	</suite>
</tests>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\statsstress.xml ===
﻿<?xml version="1.0" encoding="utf-8" ?>
<stf>
<tests>
	<suite name='StatsStress'>
		<done>
		</done>
		<stress>
			<test name='RB6Set' priority='60'/>
			<test name='RB6Get' priority='36'/>
			<test name='RB6Enum' priority='6'/>
			<test name='HLOArbC1A' priority='9'/>
			<test name='HLOArbC1B' priority='9'/>
			<test name='HLOArbC2A' priority='9'/>
			<test name='HLOArbC2B' priority='9'/>
			<test name='HLOArbC3A' priority='9'/>
			<test name='HLOArbC3B' priority='9'/>
			<test name='HLOArbC4A' priority='9'/>
			<test name='HLOArbC4B' priority='9'/>
			<test name='HLOGetC1' priority='25'/>
			<test name='HLOGetC2' priority='25'/>
			<test name='HLOGetC3' priority='25'/>
			<test name='HLOGetC4' priority='25'/>
			<test name='HLOEnum' priority='35'/>
			<test name='HLOUnitGetC1' priority='35'/>
			<test name='HLOUnitGetC2' priority='35'/>
			<test name='HLOUnitGetC3' priority='35'/>
			<test name='HLOUnitGetC4' priority='35'/>
			<test name='HLOUnitEnum' priority='30'/>
			<test name='HLOWebEnum' priority='35'/>
			<test name='PGR3ArbPost' priority='6'/>
			<test name='PGR3DirectPost' priority='38'/>
			<test name='PGR3Get' priority='38'/>
			<test name='PGR3Enum' priority='40'/>
			<test name='PGR3UnitGet' priority='25'/>
			<test name='PGR3UnitEnum' priority='30'/>
			<test name='PGR3WebEnum' priority='40'/>
			<test name='AMPDPost' priority='50'/>
			<test name='AMPDGet' priority='50'/>
			<test name='AMPDEnum' priority='35'/>
			<test name='AMPDWebEnum' priority='40'/>
			<test name='AMPDCreateComp' priority='50'/>
			<test name='AMPDDeleteComp' priority='50'/>
			
		</stress>
	</suite>
</tests>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="statsstress" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\StressConfigArchive\StatsStressConfig_Summer2008.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<StressConfig>
	<RunVerifyThread value='true'/>
	<CreateLB value='true'/>
	<!-- client 2 should have a mask of 9FFFFFFFFCE2C0 -->
	<BaseUserMask val='0x9FFFFFFFFFF000'/>
	<!-- UserCuncurrency is used to specify the total number of users playing currently
		NoOFUsersToRotatePerMin is used to specify how many new user should be add every minute while removing same number of old users.
		for  Eg if UserCuncurrency of 30000 and NoOFUsersToRotatePerMin of 500 will recycle all users in 1 hour.
	 -->
	<UserCuncurrency val='500000'/>
	<NoOFUsersToRotatePerMin val='8000'/>
	<UserRange val='200000'/>
	<!-- Unit Range should be a percent of User range. currently its set to 10 %
	-->
	<UnitRange val='20000'/> 
	<Titles>
			<!-- Halo3 3 [FPS]-->
			<Title id='255'>
				<LB	id='1' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='2' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='3' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='4' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='5' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='6' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='7' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='8' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='9' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='10' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='11' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='12' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='13' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='14' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='15' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='16' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='17' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='18' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='19' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='20' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='21' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='22' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='23' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='24' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='25' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='26' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='27' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='28' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='29' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='30' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='31' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<Rating Low='900' Hi='1100'/>
			</Title>

			<!-- COD4.  Very few leaderboards, most with 2 columns, some with 8. -->
			<Title id='256'>
				<LB	id='1' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='2' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='3' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='4' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='5' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='6' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='7' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='8' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='9' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='10' Type='User' Attachments='N' LightWT='N' Partition='0'/>
			</Title>

			<!-- Racing Forza 2.  There are 1893 leaderboards in the real thing. PGR3 had many
			     LBs with 10 attachments max.  Forza 2 uses almost all LBs with 100 attachments max, but
			     the chance that you get to put up an attachment is low.  Sprinkling in the attachment
			     flag on some leaderboards for this purpose.-->
			<Title id='257'>
				<LB	id='11' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='12' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='13' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='14' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='15' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='16' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='17' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='18' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='19' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='20' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='21' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='22' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='23' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='24' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='25' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='26' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='27' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='28' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='29' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='30' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='31' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='32' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='33' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='34' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='35' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='36' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='37' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='38' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='39' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='40' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='41' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='42' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='43' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='44' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='45' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='46' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='47' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='48' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='49' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='50' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='51' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='52' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='53' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='54' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='55' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='56' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='57' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='58' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='59' Type='User' Attachments='N' LightWT='N' Partition='0'/>				
			</Title>
	</Titles>
	<StressCases>
		<!--Halo 3 StatsGet.-->
		<!--Sample:
			2008/06/30 17:23:13.594|GETDATA|4d5307e6|1|90000001b93e2|e
			2008/06/30 17:23:13.594|GETDATA|4d5307e6|b|90000001b93e2|7
			2008/06/30 17:23:13.594|GETDATA|4d5307e6|ffff0009|90000001b93e2|5
		-->
		<StressCase Title="255" Name="Halo3GetStatsLB1"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="1"  Stats='5' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="255" Name="Halo3GetStatsLB3"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="2"  Stats='7' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="255" Name="Halo3GetStatsLB11"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='14' Rating='Y' Rank='Y'/>
		</StressCase>
		<!--Halo 3 XRLStatRead.-->
		<!--Sample:
			2008/06/30 17:23:14.297|XRLStatRead|4d5307e6|1|b|3|2|c|4|ffff000a|2|9000001ad1999
			2008/06/30 17:23:14.359|XRLStatRead|4d5307e6|1|b|3|2|90000003f8a3b
			2008/06/30 17:23:14.484|XRLStatRead|4d5307e6|1|b|3|2|9|4|fffe0007|2|900000176e0e8
		-->
		<StressCase Title="255" Name="Halo3GetStats2(xrlstatread?)LB1"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="1"  Stats='12' Rating='Y' Rank='Y'/>
		</StressCase>

		<StressCase Title="255" Name="Halo3GetStats2(xrlstatread?)LB2"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="2"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="255" Name="Halo3GetStats2(xrlstatread?)LB13"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='4' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--Halo 3 StatsPost.  Known to usually contain 2 procs in the call.  Unsure about the details-->
		<StressCase Title="255" Name="Halo3TeamSlayerArbLB1"  Type='Post' SendTpye='A' NoOfUsers='4-8' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<ELO  LBID="1" />
			<Replace  LBID="1" Stats='10'/>
		</StressCase>
		<!--Halo 3 StatsPost.  Known to usually contain 2 procs in the call.  Unsure about the details-->
		<StressCase Title="255" Name="Halo3TeamSlayerArbLB2"  Type='Post' SendTpye='A' NoOfUsers='4-8' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<ELO  LBID="2" />
			<Replace  LBID="2" Stats='10'/>
		</StressCase>
		<!--Halo 3 StatsPost.  Known to usually contain 2 procs in the call.  Unsure about the details-->
		<StressCase Title="255" Name="Halo3TeamSlayerArbLB11"  Type='Post' SendTpye='A' NoOfUsers='4-8' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<ELO  LBID="11" />
			<Replace  LBID="11" Stats='10'/>
		</StressCase>


		<!--COD4XrlStatRead
			2008/06/30 17:23:15.859|XRLStatRead|415607e6|fffe0000|2|90000015395ae|90000016d5105|9000000b533b7|900000110db13|9000000f00eec|90000015d70a8|9000001443454|9b2972972d9d3|9000000d10bbd|900000163c5fa|90000016b4c2c
			2008/06/30 17:23:15.891|XRLStatRead|415607e6|fffe0000|2|900000022bdcb
			2008/06/30 17:23:15.922|XRLStatRead|415607e6|b|5|90000016791cd|900000132db34|9000001ac8724|9000001653488|900000060711a|90000015dcbe7|9000001c704bd|90000013a2f40|9000000ccf5c0|900000161796a|9000001194b6b|900000141b03e|9000000fbaa9a|9000000ea362c|9000000931852|9000001a316f1|91e79e79e9a80|9000000f9d525|90000013a7adf|9000001397899|9000000b2cc2a|9000001db3c6b|90000017158ec|90000011e91f9|900000086fbbd|90000011950d3|900000153ed18|9000001c0329d|9000001769c15|90000018dd723|90000011354d0|90000019549ea|90000004bd878|9000001c2be33|9000000fd46a2|9000001470128|900000161c2dd|9000001c09c03|90000010b55b2
		-->
		<StressCase Title="256" Name="COD4XrlStatRead(xrlstatread?)LB2"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="2"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="COD4XrlStatRead(xrlstatread?)LB3"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="3"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="COD4XrlStatRead(xrlstatread?)LB4"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="4"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--COD4GetData
			2008/06/30 17:23:15.938|GETDATA|415607e6|b|90000016791cd|8|b|900000132db34|8|b|9000001ac8724|8|b|9000001653488|8|b|900000060711a|8|b|90000015dcbe7|8|b|9000001c704bd|8|b|90000013a2f40|8|b|9000000ccf5c0|8|b|900000161796a|8|b|9000001194b6b|8|b|900000141b03e|8|b|9000000fbaa9a|8|b|9000000ea362c|8|b|9000000931852|8|b|9000001a316f1|8|b|91e79e79e9a80|8|b|9000000f9d525|8|b|90000013a7adf|8|b|9000001397899|8|b|9000000b2cc2a|8|b|9000001db3c6b|8|b|90000017158ec|8|b|90000011e91f9|8|b|900000086fbbd|8|b|90000011950d3|8|b|900000153ed18|8|b|9000001c0329d|8|b|9000001769c15|8|b|90000018dd723|8|b|90000011354d0|8|b|90000019549ea|8|b|90000004bd878|8|b|9000001c2be33|8|b|9000000fd46a2|8|b|9000001470128|8|b|900000161c2dd|8|b|9000001c09c03|8|b|90000010b55b2|8
			2008/06/30 17:23:16.000|GETDATA|415607e6|fffe0000|900000133fd23|5|fffe0000|9000000ebcb9f|5|fffe0000|90000016a773a|5|fffe0000|9bc57c57caefd|5|fffe0000|968d68d6905ef|5|fffe0000|9000001e422c0|5|fffe0000|9000001863421|5|fffe0000|90000013c59ac|5|fffe0000|9000001de73d3|5|fffe0000|9000001885039|5|fffe0000|900000194bf40|5|fffe0000|90000014a6643|5
		-->
		<StressCase Title="256" Name="COD4GetDataLB11"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-30'>
			<LB LBID="6"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="COD4GetDataLB5"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-30'>
			<LB LBID="5"  Stats='5' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--COD4StatPost
			2008/06/30 17:23:18.266|STATPOST|0|415607e6||4|c|9000001612cb3|3c0b4|4|d|9000001612cb3|600|5|a|9000001612cb3|3f8c|6|b|9000001612cb3|a4f|6
			2008/06/30 17:23:18.281|STATPOST|0|415607e6||4|d|9000001a9a217|693|5|a|9000001a9a217|44c9|6|b|9000001a9a217|6a1|6|c|9000001a9a217|3935c|4
			2008/06/30 17:23:18.453|STATPOST|0|415607e6||4|d|90000018dc334|7ed|5|c|90000018dc334|58b59|4|b|90000018dc334|a0b|6|a|90000018dc334|65db|6
			4 procs, leaderboards c and d.  Splitting it up so we can write to the leaderboards that the earlier cases
			read from
		-->
		<StressCase Title="256" Name="COD4StatPost"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="5"  Stats='8' />
			<Replace  LBID="5" Stats='10' />
			<Replace  LBID="6" Stats='10'/>
			<Replace  LBID="2" Stats='10'/>
		</StressCase>
		<StressCase Title="256" Name="COD4StatPost2"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="5"  Stats='8' />
			<Replace  LBID="3" Stats='10' />
			<Replace  LBID="4" Stats='10'/>
			<Replace  LBID="2" Stats='10'/>
		</StressCase>


		<!--Forza2 GetData
			2008/06/30 17:25:30.723|GETDATA|4d5307ea|28|900000100e237|9
			2008/06/30 17:25:31.692|GETDATA|4d5307ea|16|90000016b67de|9
			2008/06/30 17:25:43.411|GETDATA|4d5307ea|3d8|9000001712803|9
			A random LB, 9 vars from it.
		-->
		<StressCase Title="257" Name="Forza2GetDataLB1"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='9' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="Forza2GetDataLB5"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="15"  Stats='9' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="Forza2GetDataLB9"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="18"  Stats='9' Rating='Y' Rank='Y'/>
		</StressCase>
		<!--Forza2 XrlStatRead
			2008/06/30 17:26:14.912|XRLStatRead|4d5307ea|3ea|6|404|6|6a3|6|6d4|6|6f0|6|6f3|6|9000000d96bdc
			2008/06/30 17:25:56.490|XRLStatRead|4d5307ea|fffe0000|4|900000155ca72
			2008/06/30 17:26:04.506|XRLStatRead|4d5307ea|3d2|6|9000000996abc
			Random LB, 6 or 4 vars read.
		-->
		<StressCase Title="257" Name="Forza2XRLstatreadMany"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="12"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="13"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="14"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="15"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="16"  Stats='6' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="Forza2XRLstatreadLB16"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="17"  Stats='4' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="Forza2XRLstatreadLB20"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="18"  Stats='6' Rating='Y' Rank='Y'/>
		</StressCase>	
		<!--Forza2 StatPost
			2008/06/30 17:26:20.928|STATPOST|0|4d5307ea||12|6f3|9000001c06fb8|ffffffffb48cd254|7|6d9|9000001c06fb8|fffffffffe469a61|7|481|9000001c06fb8|fffffffffffefa91|7|6cc|9000001c06fb8|fffffffff896ea21|7|1dc|9000001c06fb8|ffffffff36a92005|7|1|9000001c06fb8|fffffffffffdf251|7
			2008/06/30 17:26:32.616|STATPOST|0|4d5307ea||6|2|9000001ab184f|fffffffffffe5e95|7|1dc|9000001ab184f|ffffffff3a0e46b1|7
			2008/06/30 17:26:48.366|STATPOST|0|4d5307ea||c|535|9000000a18979|fffffffffffe83b4|7|6f3|9000000a18979|ffffffffbbe47a0e|7|6e1|9000000a18979|fffffffffcf5c8b9|7|6cf|9000000a18979|fffffffff94e5716|7
			Copying PGR3 here.  I imagine it's arbitrated?  We'll just do the 12 proc one here.
			It looks like nobody's beating the top 100 nowadays, so we'll not set up a attachment post.
		-->
		<StressCase Title="257" Name="Forza2StatPostArb"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="11"  Stats='7' />
			<Increment  LBID="12" Stats='7'/>
			<Increment  LBID="13" Stats='7' />
			<Replace  LBID="14" Stats='7'/>
			<Condition_Replace  LBID="12"  Stats='7' />
			<Increment  LBID="15" Stats='7'/>
			<Increment  LBID="16" Stats='7' />
			<Replace  LBID="17" Stats='7'/>
			<Increment  LBID="15" Stats='7'/>
			<Increment  LBID="16" Stats='7' />
			<Replace  LBID="18" Stats='7'/>
		</StressCase>

		<StressCase Title="257" Name="Forza2StatPostDirectwAttach"  Type='Post' SendTpye='D' NoOfUsers='1' NoOfTeams='0' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="11"  Stats='7' />
			<Replace  LBID="22" Stats='7'/>
		</StressCase>

	</StressCases>
		
			
	
</StressConfig>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\StressConfigArchive\StatsStressConfig_Spring2009.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<StressConfig>
	<RunVerifyThread value='true'/>
	<CreateLB value='true'/>
	<!-- client 2 should have a mask of 9FFFFFFFFCE2C0 -->
	<BaseUserMask val='0x9FFFFFFFFFF000'/>
	<!-- UserCuncurrency is used to specify the total number of users playing currently
		NoOFUsersToRotatePerMin is used to specify how many new user should be add every minute while removing same number of old users.
		for  Eg if UserCuncurrency of 30000 and NoOFUsersToRotatePerMin of 500 will recycle all users in 1 hour.
	 -->
	<UserCuncurrency val='500000'/>
	<NoOFUsersToRotatePerMin val='8000'/>
	<UserRange val='200000'/>
	<!-- Unit Range should be a percent of User range. currently its set to 10 %
	-->
	<UnitRange val='20000'/> 
	<Titles>
			<!-- Halo3 3 [FPS]-->
			<Title id='255'>
				<LB	id='1' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='2' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='3' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='4' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='5' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='6' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='7' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='8' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='9' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='10' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='11' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='12' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='13' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='14' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='15' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='16' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='17' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='18' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='19' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='20' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='21' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='22' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='23' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='24' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='25' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='26' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='27' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='28' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='29' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='30' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='31' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<Rating Low='900' Hi='1100'/>
			</Title>

			<!-- COD4.  Very few leaderboards, most with 2 columns, some with 8. -->
			<Title id='256'>
				<LB	id='1' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='2' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='3' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='4' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='5' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='6' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='7' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='8' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='9' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='10' Type='User' Attachments='N' LightWT='N' Partition='0'/>
			</Title>

			<!--COD5.  90 LBs in the real thing, all fairly identical with 6 columns. -->
			<Title id='257'>
				<LB	id='1' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='2' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='3' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='4' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='5' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='6' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='7' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='8' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='9' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='10' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='11' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='12' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='13' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='14' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='15' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='16' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='17' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='18' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='19' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='20' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='21' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='22' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='23' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='24' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='25' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='26' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='27' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='28' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='29' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='30' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='31' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='32' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='33' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='34' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='35' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='36' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='37' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='38' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='39' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='40' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='41' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='42' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='43' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='44' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='45' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='46' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='47' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='48' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='49' Type='User' Attachments='N' LightWT='N' Partition='0'/>
			</Title>

			<!-- Racing Forza 2.  There are 1893 leaderboards in the real thing. PGR3 had many
			     LBs with 10 attachments max.  Forza 2 uses almost all LBs with 100 attachments max, but
			     the chance that you get to put up an attachment is low.  Sprinkling in the attachment
			     flag on some leaderboards for this purpose.-->
			<Title id='258'>
				<LB	id='11' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='12' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='13' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='14' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='15' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='16' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='17' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='18' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='19' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='20' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='21' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='22' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='23' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='24' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='25' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='26' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='27' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='28' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='29' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='30' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='31' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='32' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='33' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='34' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='35' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='36' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='37' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='38' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='39' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='40' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='41' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='42' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='43' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='44' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='45' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='46' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='47' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='48' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='49' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='50' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='51' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='52' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='53' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='54' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='55' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='56' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='57' Type='User' Attachments='N' LightWT='N' Partition='0'/>
				<LB	id='58' Type='User' Attachments='Y' LightWT='N' Partition='0'/>
				<LB	id='59' Type='User' Attachments='N' LightWT='N' Partition='0'/>				
			</Title>
	</Titles>
	<StressCases>
		<!--Halo 3 StatsGet.-->
		<!--Sample:
			2008/06/30 17:23:13.594|GETDATA|4d5307e6|1|90000001b93e2|e
			2008/06/30 17:23:13.594|GETDATA|4d5307e6|b|90000001b93e2|7
			2008/06/30 17:23:13.594|GETDATA|4d5307e6|ffff0009|90000001b93e2|5
		-->
		<StressCase Title="255" Name="Halo3GetStatsLB1"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="1"  Stats='5' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="255" Name="Halo3GetStatsLB3"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="2"  Stats='7' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="255" Name="Halo3GetStatsLB11"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='14' Rating='Y' Rank='Y'/>
		</StressCase>
		<!--Halo 3 XRLStatRead.-->
		<!--Sample:
			2008/06/30 17:23:14.297|XRLStatRead|4d5307e6|1|b|3|2|c|4|ffff000a|2|9000001ad1999
			2008/06/30 17:23:14.359|XRLStatRead|4d5307e6|1|b|3|2|90000003f8a3b
			2008/06/30 17:23:14.484|XRLStatRead|4d5307e6|1|b|3|2|9|4|fffe0007|2|900000176e0e8
		-->
		<StressCase Title="255" Name="Halo3GetStats2(xrlstatread?)LB1"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="1"  Stats='12' Rating='Y' Rank='Y'/>
		</StressCase>

		<StressCase Title="255" Name="Halo3GetStats2(xrlstatread?)LB2"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="2"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="255" Name="Halo3GetStats2(xrlstatread?)LB13"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='4' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--Halo 3 StatsPost.  Known to usually contain 2 procs in the call.  Unsure about the details-->
		<StressCase Title="255" Name="Halo3TeamSlayerArbLB1"  Type='Post' SendTpye='A' NoOfUsers='4-8' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<ELO  LBID="1" />
			<Replace  LBID="1" Stats='10'/>
		</StressCase>
		<!--Halo 3 StatsPost.  Known to usually contain 2 procs in the call.  Unsure about the details-->
		<StressCase Title="255" Name="Halo3TeamSlayerArbLB2"  Type='Post' SendTpye='A' NoOfUsers='4-8' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<ELO  LBID="2" />
			<Replace  LBID="2" Stats='10'/>
		</StressCase>
		<!--Halo 3 StatsPost.  Known to usually contain 2 procs in the call.  Unsure about the details-->
		<StressCase Title="255" Name="Halo3TeamSlayerArbLB11"  Type='Post' SendTpye='A' NoOfUsers='4-8' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='2' >
			<ELO  LBID="11" />
			<Replace  LBID="11" Stats='10'/>
		</StressCase>


		<!--COD4XrlStatRead
			2008/06/30 17:23:15.859|XRLStatRead|415607e6|fffe0000|2|90000015395ae|90000016d5105|9000000b533b7|900000110db13|9000000f00eec|90000015d70a8|9000001443454|9b2972972d9d3|9000000d10bbd|900000163c5fa|90000016b4c2c
			2008/06/30 17:23:15.891|XRLStatRead|415607e6|fffe0000|2|900000022bdcb
			2008/06/30 17:23:15.922|XRLStatRead|415607e6|b|5|90000016791cd|900000132db34|9000001ac8724|9000001653488|900000060711a|90000015dcbe7|9000001c704bd|90000013a2f40|9000000ccf5c0|900000161796a|9000001194b6b|900000141b03e|9000000fbaa9a|9000000ea362c|9000000931852|9000001a316f1|91e79e79e9a80|9000000f9d525|90000013a7adf|9000001397899|9000000b2cc2a|9000001db3c6b|90000017158ec|90000011e91f9|900000086fbbd|90000011950d3|900000153ed18|9000001c0329d|9000001769c15|90000018dd723|90000011354d0|90000019549ea|90000004bd878|9000001c2be33|9000000fd46a2|9000001470128|900000161c2dd|9000001c09c03|90000010b55b2
		-->
		<StressCase Title="256" Name="COD4XrlStatRead(xrlstatread?)LB2"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="2"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="COD4XrlStatRead(xrlstatread?)LB3"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="3"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="COD4XrlStatRead(xrlstatread?)LB4"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="4"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--COD4GetData
			2008/06/30 17:23:15.938|GETDATA|415607e6|b|90000016791cd|8|b|900000132db34|8|b|9000001ac8724|8|b|9000001653488|8|b|900000060711a|8|b|90000015dcbe7|8|b|9000001c704bd|8|b|90000013a2f40|8|b|9000000ccf5c0|8|b|900000161796a|8|b|9000001194b6b|8|b|900000141b03e|8|b|9000000fbaa9a|8|b|9000000ea362c|8|b|9000000931852|8|b|9000001a316f1|8|b|91e79e79e9a80|8|b|9000000f9d525|8|b|90000013a7adf|8|b|9000001397899|8|b|9000000b2cc2a|8|b|9000001db3c6b|8|b|90000017158ec|8|b|90000011e91f9|8|b|900000086fbbd|8|b|90000011950d3|8|b|900000153ed18|8|b|9000001c0329d|8|b|9000001769c15|8|b|90000018dd723|8|b|90000011354d0|8|b|90000019549ea|8|b|90000004bd878|8|b|9000001c2be33|8|b|9000000fd46a2|8|b|9000001470128|8|b|900000161c2dd|8|b|9000001c09c03|8|b|90000010b55b2|8
			2008/06/30 17:23:16.000|GETDATA|415607e6|fffe0000|900000133fd23|5|fffe0000|9000000ebcb9f|5|fffe0000|90000016a773a|5|fffe0000|9bc57c57caefd|5|fffe0000|968d68d6905ef|5|fffe0000|9000001e422c0|5|fffe0000|9000001863421|5|fffe0000|90000013c59ac|5|fffe0000|9000001de73d3|5|fffe0000|9000001885039|5|fffe0000|900000194bf40|5|fffe0000|90000014a6643|5
		-->
		<StressCase Title="256" Name="COD4GetDataLB6"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-30'>
			<LB LBID="6"  Stats='8' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="256" Name="COD4GetDataLB5"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-30'>
			<LB LBID="5"  Stats='5' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--COD4StatPost
			2008/06/30 17:23:18.266|STATPOST|0|415607e6||4|c|9000001612cb3|3c0b4|4|d|9000001612cb3|600|5|a|9000001612cb3|3f8c|6|b|9000001612cb3|a4f|6
			2008/06/30 17:23:18.281|STATPOST|0|415607e6||4|d|9000001a9a217|693|5|a|9000001a9a217|44c9|6|b|9000001a9a217|6a1|6|c|9000001a9a217|3935c|4
			2008/06/30 17:23:18.453|STATPOST|0|415607e6||4|d|90000018dc334|7ed|5|c|90000018dc334|58b59|4|b|90000018dc334|a0b|6|a|90000018dc334|65db|6
			4 procs, leaderboards c and d.  Splitting it up so we can write to the leaderboards that the earlier cases
			read from
		-->
		<StressCase Title="256" Name="COD4StatPost"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="5"  Stats='8' />
			<Replace  LBID="5" Stats='10' />
			<Replace  LBID="6" Stats='10'/>
			<Replace  LBID="2" Stats='10'/>
		</StressCase>
		<StressCase Title="256" Name="COD4StatPost2"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="5"  Stats='8' />
			<Replace  LBID="3" Stats='10' />
			<Replace  LBID="4" Stats='10'/>
			<Replace  LBID="2" Stats='10'/>
		</StressCase>



		<!--COD5 XRLStatRead
			2009/03/10 14:00:04.222|XRLStatRead|4156081c|59|3|90000022c7e8f|9000000dbc3e8|90000005678cf|9000001d64f67|90000008ee52c|9000000db2054|90000011f500f|90000025c0953|900000213afda|9000001ab8af0|90000014a8647|9000002d3ec90|9000001b403c9|90000012caf40|9000002312b9b|9000002169bc1|90000028943e9|90000020ec96f|9000001a01203|90000014a7310|900000290b864|9000002a13f58|9000001f35cdd|9000001996b89|9000002548b7d|90000029cdf2e|9000001c85d0b|90000009bef82|9000001e5a0fc|9000002abfc57|90000017c7c30|900000178fcca|900000282d8dd
			2009/03/10 14:00:01.784|XRLStatRead|4156081c|fffe0000|2|9000002171eb5|900000204d7d7|90000019c83db|9000000d0f980|9000001b57e1f|90000027a9314|9af8af8afa87c|900000022cbfe|9000002bfe156|9000002b9b428|900000218e52d
			Similar to GETDATA calls.
			3-5 attributes from up to 100 players, or
			2 attribs of up to 12 players.

		-->
		<StressCase Title="257" Name="COD5XrlStatReadLotsOfUsers"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-100'>
			<LB LBID="4"  Stats='5' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="COD5XrlStatReadTrueskilLB"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-15'>
			<LB LBID="6"  Stats='2' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--COD5 GetData
			2009/03/10 14:00:00.284|GETDATA|4156081c|c|90000009b1d9a|6|c|90000014bc2f6|6|c|9000000bc089b|6|c|900000221f1d9|6|c|90000017e788e|6|c|9000000eac842|6|c|9000001117e5b|6|c|90000010cbb9a|6|c|900000277f368|6|c|90000010affab|6|c|900000107934a|6|c|90000013c03d1|6|c|9000002438064|6|c|9000001a24016|6|c|9000001aa4e18|6|c|90000022e905c|6|c|9000000bd2050|6|c|9000002a049b8|6|c|90000006fb350|6|c|900000175ca5b|6|c|90000006ca79a|6|c|9000001a26b99|6|c|90000019ca367|6|c|9000000b840e9|6|c|9000000b0c1f6|6|c|9000001a89e50|6|c|90000016d06cc|6|c|900000098916e|6|c|9000002318c57|6|c|9000000ee5419|6|c|9000000a4189d|6|c|9000002b3ea80|6|c|90000022d1262|6|c|9000000a27981|6|c|9000001c0505f|6|c|9000000e33a2a|6|c|900000141088e|6|c|9000000aa25d9|6|c|9000001f7a574|6|c|9000002221366|6|c|900000278b1a9|6|c|9000000f9629c|6|c|90000010df976|6|c|900000212409f|6|c|90000016b03e1|6|c|90000016c260a|6|c|90000019783af|6|c|900000053352b|6|c|9000000dbcb4d|6|c|9000000443d0d|6|c|90000007ac349|6|c|90000027dbd24|6|c|900000099323b|6|c|900000074c3c8|6|c|9000001b2cce2|6|c|90000022b31af|6|c|90000009a2e64|6|c|90000020ebcda|6|c|90000017f4119|6|c|9a04e04e0a6b3|6|c|90000009e47eb|6|c|900000093e782|6|c|9000000428e28|6|c|9000002ba407d|6|c|9000001874676|6|c|9000000a682ad|6|c|9000002707a36|6|c|9000000f414eb|6|c|900000191246d|6|c|9eb46b46b5078|6|c|9000000e7bc23|6|c|9000000524fc3|6|c|9000000b3d62f|6|c|9000000949ca4|6|c|9000000760003|6|c|90000020b50d9|6|c|900000039348a|6|c|90000004153d5|6|c|9000002ba553a|6|c|90000019ed6b9|6|c|900000075fe81|6|c|9000000a71e7e|6|c|90000009a1d6a|6|c|9000000968e99|6|c|900000227e9fd|6|c|9000002d645fd|6|c|900000116b71c|6|c|90000014d5f02|6|c|90000009f281b|6|c|900000092bbf9|6|c|90000021bb503|6|c|900000040530b|6|c|900000190031e|6|c|9000002373e1c|6|c|9000001fd83f2|6|c|900000078a6b4|6|c|9000000623192|6
			2009/03/10 14:00:01.315|GETDATA|4156081c|fffe0000|90000022b516d|5|fffe0000|9000002dbe736|5|fffe0000|9000001048cea|5|fffe0000|941d41d41d6a9|5|fffe0000|9000001cb7545|5|fffe0000|9000000980cc3|5
			Reads 6-8 attributes from a leaderboard for a potentially large number of users.(1-100)
			Or, reads 5 attributes for a small number of users, from the trueskill LBs.(1-12)
		-->
		<StressCase Title="257" Name="COD5GetDataLotsOfUsersCall"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-100'>
			<LB LBID="5"  Stats='6' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="257" Name="COD5GetDataTrueskillLbCall"  Type='StatsGet'  IsXenon='true' NoOfUsers='1-12'>
			<LB LBID="6"  Stats='5' Rating='Y' Rank='Y'/>
		</StressCase>

		<!--COD5 StatPost
			2009/03/10 14:00:05.925|STATPOST|0|4156081c||8|50|90000016367cc|0|6|b|90000016367cc|2f|6|a|90000016367cc|382|6|60|90000016367cc|179|4|c|90000016367cc|1aa8|4|27|90000016367cc|2f|5|40|90000016367cc|4b|6|30|90000016367cc|0|5
			2009/03/10 14:00:04.409|STATPOST|0|415607f7||c|3|9000002bcddc8|3e583f|4|8|9000002bcddc8|5d2353|4|67|9000002bcddc8|20001a266|4|6|9000002bcddc8|82674e|4
			Eight proc call is most predominant, with six stats posted.  Same user gets lots of posts across different lbs.
		-->
		<StressCase Title="257" Name="COD5StatPost"  Type='Post' SendTpye='A' NoOfUsers='1' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Replace  LBID="1"  Stats='6' />
			<Replace  LBID="2" Stats='6' />
			<Replace  LBID="3" Stats='6'/>
			<Replace  LBID="4" Stats='6'/>
			<Replace  LBID="5" Stats='6'/>
			<Replace  LBID="6" Stats='6'/>
			<Replace  LBID="7" Stats='6'/>
			<Replace  LBID="8" Stats='6'/>
		</StressCase>


		<!--Forza2 GetData
			2008/06/30 17:25:30.723|GETDATA|4d5307ea|28|900000100e237|9
			2008/06/30 17:25:31.692|GETDATA|4d5307ea|16|90000016b67de|9
			2008/06/30 17:25:43.411|GETDATA|4d5307ea|3d8|9000001712803|9
			A random LB, 9 vars from it.
		-->
		<StressCase Title="258" Name="Forza2GetDataLB1"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='9' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="258" Name="Forza2GetDataLB5"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="15"  Stats='9' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="258" Name="Forza2GetDataLB9"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="18"  Stats='9' Rating='Y' Rank='Y'/>
		</StressCase>
		<!--Forza2 XrlStatRead
			2008/06/30 17:26:14.912|XRLStatRead|4d5307ea|3ea|6|404|6|6a3|6|6d4|6|6f0|6|6f3|6|9000000d96bdc
			2008/06/30 17:25:56.490|XRLStatRead|4d5307ea|fffe0000|4|900000155ca72
			2008/06/30 17:26:04.506|XRLStatRead|4d5307ea|3d2|6|9000000996abc
			Random LB, 6 or 4 vars read.
		-->
		<StressCase Title="258" Name="Forza2XRLstatreadMany"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="11"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="12"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="13"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="14"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="15"  Stats='6' Rating='Y' Rank='Y'/>
			<LB LBID="16"  Stats='6' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="258" Name="Forza2XRLstatreadLB16"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="17"  Stats='4' Rating='Y' Rank='Y'/>
		</StressCase>
		<StressCase Title="258" Name="Forza2XRLstatreadLB20"  Type='StatsGet'  IsXenon='true' NoOfUsers='1'>
			<LB LBID="18"  Stats='6' Rating='Y' Rank='Y'/>
		</StressCase>	
		<!--Forza2 StatPost
			2008/06/30 17:26:20.928|STATPOST|0|4d5307ea||12|6f3|9000001c06fb8|ffffffffb48cd254|7|6d9|9000001c06fb8|fffffffffe469a61|7|481|9000001c06fb8|fffffffffffefa91|7|6cc|9000001c06fb8|fffffffff896ea21|7|1dc|9000001c06fb8|ffffffff36a92005|7|1|9000001c06fb8|fffffffffffdf251|7
			2008/06/30 17:26:32.616|STATPOST|0|4d5307ea||6|2|9000001ab184f|fffffffffffe5e95|7|1dc|9000001ab184f|ffffffff3a0e46b1|7
			2008/06/30 17:26:48.366|STATPOST|0|4d5307ea||c|535|9000000a18979|fffffffffffe83b4|7|6f3|9000000a18979|ffffffffbbe47a0e|7|6e1|9000000a18979|fffffffffcf5c8b9|7|6cf|9000000a18979|fffffffff94e5716|7
			Copying PGR3 here.  I imagine it's arbitrated?  We'll just do the 12 proc one here.
			It looks like nobody's beating the top 100 nowadays, so we'll not set up a attachment post.
		-->
		<StressCase Title="258" Name="Forza2StatPostArb"  Type='Post' SendTpye='A' NoOfUsers='4-10' NoOfTeams='2' NoOfPlayerUnits='2' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="11"  Stats='7' />
			<Increment  LBID="12" Stats='7'/>
			<Increment  LBID="13" Stats='7' />
			<Replace  LBID="14" Stats='7'/>
			<Condition_Replace  LBID="12"  Stats='7' />
			<Increment  LBID="15" Stats='7'/>
			<Increment  LBID="16" Stats='7' />
			<Replace  LBID="17" Stats='7'/>
			<Increment  LBID="15" Stats='7'/>
			<Increment  LBID="16" Stats='7' />
			<Replace  LBID="18" Stats='7'/>
		</StressCase>

		<StressCase Title="258" Name="Forza2StatPostDirectwAttach"  Type='Post' SendTpye='D' NoOfUsers='1' NoOfTeams='0' NoOfPlayerUnits='0' NoOfTeamUnits='0' >
			<Condition_Replace  LBID="11"  Stats='7' />
			<Replace  LBID="22" Stats='7'/>
		</StressCase>

	</StressCases>
		
			
	
</StressConfig>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StatsStress\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="statsstress" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFConsole\BuildCore\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="stfconsolecore" processorArchitecture="x86" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFConsole\BuildCore\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="stfconsolecore" processorArchitecture="x86" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFConsole\BuildLive\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="stfconsolelive" processorArchitecture="x86" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\buildd.err ===
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>errors in directory z:\xonline_main\private\test\stftests\stfgui
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
100>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFConsole\BuildLive\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="stfconsolelive" processorArchitecture="x86" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\buildd.log ===
Generating Assembly Identities for MSBuild Projects1>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:WriteToAssemblyIdentityLog'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
BUILD: Examining z:\xonline_main\private\test\stftests\stfgui directory for files to compile.
Executing prebuild scripts  *************
1>Performing prebuild steps..  *************
1>'Z:\XONLINE_MAIN\public\ext\tools\build_pre_process.cmd '
1>build_pre_process.cmd: nmake /nologo /f z:\xonline_main\makefil0 versions
1>Executing Pass0 MSBuild Tasks z:\xonline_main\private\test\stftests\stfgui *************
1>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildGenerated /p:Pass=Generate'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>errors in directory z:\xonline_main\private\test\stftests\stfgui
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
100>Executing Pass1 MSBuild Tasks z:\xonline_main\private\test\stftests\stfgui *************
100>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildCompiled /p:Pass=Compile'
100>Running MsBuild v3.5
100>MSBUILD : error MSB1028: The logger failed unexpectedly.
100>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
100>System.Security.SecurityException: That assembly does not allow partially trusted callers.
100> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
100>The action that failed was:
100>LinkDemand
100>The assembly or AppDomain that failed was:
100>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
100>The Zone of the assembly that failed was:
100>Internet
100>The Url of the assembly that failed was:
100>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
100>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
1>Executing Pass2 MSBuild Tasks z:\xonline_main\private\test\stftests\stfgui *************
1>'MSBuild.cmd "dirs.proj" /nologo /p:BuildingInSeparatePasses=true /p:BuildingWithBuildExe=true /clp:NoSummary /verbosity:normal  /clp:ShowCommandline /m:2 /nr:true  /Target:BuildLinked /p:Pass=Link'
1>Running MsBuild v3.5
1>MSBUILD : error MSB1028: The logger failed unexpectedly.
1>z:\xonline_main\private\test\stftests\stfgui\msbuild : error MSB1028: The logger failed unexpectedly.
1>System.Security.SecurityException: That assembly does not allow partially trusted callers.
1> at Microsoft.Build.CoreXT.CoreXTLogger..ctor()
1>The action that failed was:
1>LinkDemand
1>The assembly or AppDomain that failed was:
1>CoreXTLogger, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
1>The Zone of the assembly that failed was:
1>Internet
1>The Url of the assembly that failed was:
1>file:///z:/xonline_main/public/ext/tools/CoreXTLogger.dll
1>Switch: CoreXTLogger,z:\xonline_main\public\ext\tools\CoreXTLogger.dll
Executing post build scripts  *************
Fix Public Change
1>'Z:\XONLINE_MAIN\public\ext\tools\buildpost.cmd '
1>Running scripts in Z:\XONLINE_MAIN\target\debug\i386\PostBuildScripts
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\UpgradeLog.XML ===
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type='text/xsl' href='_UpgradeReport_Files/UpgradeReport.xslt'?><UpgradeLog>
<Properties><Property Name="Solution" Value="STFGui">
</Property><Property Name="Solution File" Value="Z:\XONLINE_MAIN\private\test\StfTests\STFGui\STFGui.sln">
</Property><Property Name="User Options File" Value="Z:\XONLINE_MAIN\private\test\StfTests\STFGui\STFGui.suo">
</Property><Property Name="Date" Value="Thursday, October 25, 2012">
</Property><Property Name="Time" Value="12:47 PM">
</Property></Properties><Event ErrorLevel="0" Project="" Source="STFGui.sln" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\STFGui.sln">
</Event><Event ErrorLevel="0" Project="" Source="STFGui.suo" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\STFGui.suo">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\STFGui.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\STFGui.csproj">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Gui.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\Gui.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Main.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\Main.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\PluginHandler.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\PluginHandler.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\Preferences.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.Designer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\Preferences.Designer.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.resx" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\App\Preferences.resx">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\STFGui.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFGui" Source="App\STFGui.csproj" Description="Converted">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\STFGuiPlugins.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\GuiCommon\STFGuiPlugins.csproj">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\GuiCommon.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\GuiCommon\GuiCommon.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\Plugins.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\GuiCommon\Plugins.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\StfTextBox.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\GuiCommon\StfTextBox.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\StfMRUList.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\GuiCommon\StfMRUList.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\StfInputBox.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\GuiCommon\StfInputBox.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPlugins" Source="GuiCommon\STFGuiPlugins.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFGuiPlugins" Source="GuiCommon\STFGuiPlugins.csproj" Description="Converted">
</Event><Event ErrorLevel="0" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\STFGuiPluginEnvironment.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\LiveEnvironment\STFGuiPluginEnvironment.csproj">
</Event><Event ErrorLevel="0" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\Environment.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\LiveEnvironment\Environment.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\ServerBrowser.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\LiveEnvironment\ServerBrowser.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\SettingBrowser.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\LiveEnvironment\SettingBrowser.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\UODB.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\LiveEnvironment\UODB.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\STFGuiPluginEnvironment.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\STFGuiPluginEnvironment.csproj" Description="Converted">
</Event><Event ErrorLevel="0" Project="STFGuiPluginFunctional" Source="Plugins\FunctionalRunner\STFGuiPluginFunctional.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\FunctionalRunner\STFGuiPluginFunctional.csproj">
</Event><Event ErrorLevel="0" Project="STFGuiPluginFunctional" Source="Plugins\FunctionalRunner\Functional.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\FunctionalRunner\Functional.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPluginFunctional" Source="Plugins\FunctionalRunner\FuncTree.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup\Plugins\FunctionalRunner\FuncTree.cs">
</Event><Event ErrorLevel="0" Project="STFGuiPluginFunctional" Source="Plugins\FunctionalRunner\STFGuiPluginFunctional.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFGuiPluginFunctional" Source="Plugins\FunctionalRunner\STFGuiPluginFunctional.csproj" Description="Converted">
</Event><Event ErrorLevel="2" Project="STFGui" Source="App\STFGui.csproj" Description="Unable to read the project file 'STFGui.csproj'. &#xA;Z:\XONLINE_MAIN\private\test\StfTests\STFGui\App\STFGui.csproj(6,3): The imported project &quot;C:\Microsoft.Build.settings&quot; was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.">
</Event><Event ErrorLevel="2" Project="STFGuiPlugins" Source="GuiCommon\STFGuiPlugins.csproj" Description="Unable to read the project file 'STFGuiPlugins.csproj'. &#xA;Z:\XONLINE_MAIN\private\test\StfTests\STFGui\GuiCommon\STFGuiPlugins.csproj(3,3): The imported project &quot;C:\Microsoft.Build.settings&quot; was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.">
</Event><Event ErrorLevel="2" Project="STFGuiPluginEnvironment" Source="Plugins\LiveEnvironment\STFGuiPluginEnvironment.csproj" Description="Unable to read the project file 'STFGuiPluginEnvironment.csproj'. &#xA;Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\STFGuiPluginEnvironment.csproj(3,3): The imported project &quot;C:\Microsoft.Build.settings&quot; was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.">
</Event><Event ErrorLevel="2" Project="STFGuiPluginFunctional" Source="Plugins\FunctionalRunner\STFGuiPluginFunctional.csproj" Description="Unable to read the project file 'STFGuiPluginFunctional.csproj'. &#xA;Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\FunctionalRunner\STFGuiPluginFunctional.csproj(3,3): The imported project &quot;C:\Microsoft.Build.settings&quot; was not found. Confirm that the path in the &lt;Import&gt; declaration is correct, and that the file exists on disk.">
</Event><Event ErrorLevel="0" Project="" Source="STFGui.sln" Description="Solution converted successfully">
</Event><Event ErrorLevel="3" Project="" Source="STFGui.sln" Description="Converted">
</Event></UpgradeLog>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\UpgradeLog3.XML ===
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type='text/xsl' href='_UpgradeReport_Files/UpgradeReport.xslt'?><UpgradeLog>
<Properties><Property Name="Solution" Value="STFGui">
</Property><Property Name="Solution File" Value="Z:\XONLINE_MAIN\private\test\StfTests\STFGui\STFGui.sln">
</Property><Property Name="Date" Value="Thursday, October 25, 2012">
</Property><Property Name="Time" Value="12:48:27 PM">
</Property><Property Name="Log Number" Value="3">
</Property></Properties><Event ErrorLevel="0" Project="STFGui" Source="App\STFGui.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\STFGui.csproj">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Gui.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\Gui.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Main.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\Main.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\PluginHandler.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\PluginHandler.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\Preferences.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.Designer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\Preferences.Designer.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.resx" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup2\Preferences.resx">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\STFGui.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFGui" Source="App\STFGui.csproj" Description="Converted">
</Event></UpgradeLog>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\UpgradeLog2.XML ===
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type='text/xsl' href='_UpgradeReport_Files/UpgradeReport.xslt'?><UpgradeLog>
<Properties><Property Name="Solution" Value="STFGui">
</Property><Property Name="Solution File" Value="Z:\XONLINE_MAIN\private\test\StfTests\STFGui\STFGui.sln">
</Property><Property Name="Date" Value="Thursday, October 25, 2012">
</Property><Property Name="Time" Value="12:47:44 PM">
</Property><Property Name="Log Number" Value="2">
</Property></Properties><Event ErrorLevel="0" Project="STFGui" Source="App\STFGui.csproj" Description="Project file successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\STFGui.csproj">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Gui.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\Gui.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Main.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\Main.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\PluginHandler.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\PluginHandler.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\Preferences.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.Designer.cs" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\Preferences.Designer.cs">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\Preferences.resx" Description="File successfully backed up as Z:\XONLINE_MAIN\private\test\StfTests\STFGui\Backup1\Preferences.resx">
</Event><Event ErrorLevel="0" Project="STFGui" Source="App\STFGui.csproj" Description="Project converted successfully">
</Event><Event ErrorLevel="3" Project="STFGui" Source="App\STFGui.csproj" Description="Converted">
</Event></UpgradeLog>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\App\obj\i386\STFGui.csproj.FileListAbsolute.txt ===
J:\XONLINE_MAIN\private\test\StfTests\STFGui\App\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\App\obj\i386\STFGui.Preferences.resources
J:\XONLINE_MAIN\private\test\StfTests\STFGui\App\obj\i386\STFGui.csproj.GenerateResource.Cache
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\App\objd\i386\STFGui.csproj.FileListAbsolute.txt ===
j:\xonline_main\target\Debug\i386\STFGui\STFGui.exe
j:\xonline_main\target\Debug\i386\STFGui\STFGui.pdb
j:\xonline_main\private\test\stftests\stfgui\App\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\App\objd\i386\STFGui.Preferences.resources
j:\xonline_main\private\test\stftests\stfgui\App\objd\i386\STFGui.csproj.GenerateResource.Cache
j:\xonline_main\private\test\stftests\stfgui\App\objd\i386\STFGui.exe
j:\xonline_main\private\test\stftests\stfgui\App\objd\i386\STFGui.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\GuiCommon\obj\i386\STFGuiPlugins.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPlugins.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\GuiCommon\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\GuiCommon\obj\i386\STFGuiPlugins.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\GuiCommon\objd\i386\STFGuiPlugins.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPlugins.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPlugins.pdb
j:\xonline_main\private\test\stftests\stfgui\GuiCommon\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\GuiCommon\objd\i386\STFGuiPlugins.dll
j:\xonline_main\private\test\stftests\stfgui\GuiCommon\objd\i386\STFGuiPlugins.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPlugins.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPlugins.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\FunctionalRunner\obj\i386\STFGuiPluginFunctional.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginFunctional.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\FunctionalRunner\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\FunctionalRunner\obj\i386\STFGuiPluginFunctional.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\common\placeholder.txt ===
Files shared by the plugins go here.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\FunctionalRunner\objd\i386\STFGuiPluginFunctional.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginFunctional.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginFunctional.pdb
j:\xonline_main\private\test\stftests\stfgui\Plugins\FunctionalRunner\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\Plugins\FunctionalRunner\objd\i386\STFGuiPluginFunctional.dll
j:\xonline_main\private\test\stftests\stfgui\Plugins\FunctionalRunner\objd\i386\STFGuiPluginFunctional.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginFunctional.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginFunctional.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\objd\i386\STFGuiPluginEnvironment.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\stftests\stfgui\Plugins\LiveEnvironment\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginEnvironment.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginEnvironment.pdb
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\objd\i386\STFGuiPluginEnvironment.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\objd\i386\STFGuiPluginEnvironment.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\obj\i386\STFGuiPluginEnvironment.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginEnvironment.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\LiveEnvironment\obj\i386\STFGuiPluginEnvironment.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\RegDB\obj\i386\STFGuiPluginRegDB.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginRegDB.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\RegDB\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\RegDB\obj\i386\STFGuiPluginRegDB.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\RegDB\objd\i386\STFGuiPluginRegDB.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginRegDB.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginRegDB.pdb
j:\xonline_main\private\test\stftests\stfgui\Plugins\RegDB\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\Plugins\RegDB\objd\i386\STFGuiPluginRegDB.dll
j:\xonline_main\private\test\stftests\stfgui\Plugins\RegDB\objd\i386\STFGuiPluginRegDB.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginRegDB.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginRegDB.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\SporkfireMonitor\objd\i386\STFGuiPluginMonitor.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginMonitor.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginMonitor.pdb
j:\xonline_main\private\test\stftests\stfgui\Plugins\SporkfireMonitor\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\Plugins\SporkfireMonitor\objd\i386\STFGuiPluginMonitor.dll
j:\xonline_main\private\test\stftests\stfgui\Plugins\SporkfireMonitor\objd\i386\STFGuiPluginMonitor.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginMonitor.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginMonitor.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\SporkfireMonitor\obj\i386\STFGuiPluginMonitor.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginMonitor.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\SporkfireMonitor\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\SporkfireMonitor\obj\i386\STFGuiPluginMonitor.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\StressRunner\obj\i386\STFGuiPluginStress.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginStress.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\StressRunner\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\StressRunner\obj\i386\STFGuiPluginStress.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\StressRunner\objd\i386\STFGuiPluginStress.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginStress.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginStress.pdb
j:\xonline_main\private\test\stftests\stfgui\Plugins\StressRunner\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\Plugins\StressRunner\objd\i386\STFGuiPluginStress.dll
j:\xonline_main\private\test\stftests\stfgui\Plugins\StressRunner\objd\i386\STFGuiPluginStress.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginStress.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginStress.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\TestDB\obj\i386\STFGuiPluginTestDB.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginTestDB.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\TestDB\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\TestDB\obj\i386\STFGuiPluginTestDB.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\TestDB\objd\i386\STFGuiPluginTestDB.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginTestDB.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginTestDB.pdb
j:\xonline_main\private\test\stftests\stfgui\Plugins\TestDB\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\Plugins\TestDB\objd\i386\STFGuiPluginTestDB.dll
j:\xonline_main\private\test\stftests\stfgui\Plugins\TestDB\objd\i386\STFGuiPluginTestDB.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginTestDB.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginTestDB.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\WireDataFuzzer\obj\i386\STFGuiPluginWireFuzz.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\lib\STFGuiPluginWireFuzz.dll
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\WireDataFuzzer\obj\i386\ResolveAssemblyReference.cache
J:\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\WireDataFuzzer\obj\i386\STFGuiPluginWireFuzz.dll
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STFGui\Plugins\WireDataFuzzer\objd\i386\STFGuiPluginWireFuzz.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginWireFuzz.dll
j:\xonline_main\private\test\StfTests\libd\STFGuiPluginWireFuzz.pdb
j:\xonline_main\private\test\stftests\stfgui\Plugins\WireDataFuzzer\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\stfgui\Plugins\WireDataFuzzer\objd\i386\STFGuiPluginWireFuzz.dll
j:\xonline_main\private\test\stftests\stfgui\Plugins\WireDataFuzzer\objd\i386\STFGuiPluginWireFuzz.pdb
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginWireFuzz.dll
j:\xonline_main\private\test\StfTests\libd\i386\STFGuiPluginWireFuzz.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StorageTestUI\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="storagetestui" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\StorageTestUI\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="storagetestui" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STUtilTest\InputFiles\smallfile.txt ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STUtilTest\STUtilTest.xml ===
﻿<?xml version="1.0" encoding="utf-8" ?> 
<stf>
    <STUtilTest>
        <DefaultToolPath>D:\webroot\xbltools</DefaultToolPath>
        <InputFileRelativePath>InputFiles\STUtil</InputFileRelativePath>
        <InputFileAbsolutePath>InputFiles\STUtil</InputFileAbsolutePath>
        <RemoteStorage>title</RemoteStorage>
        <RemotePath>STUtilTemp</RemotePath>
        <TitleID>0xFFFFAB28</TitleID>
    </STUtilTest>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STUtilTest\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="stutiltest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\STUtilTest\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="stutiltest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SysCheckTest\SysCheckTest.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<stf>
	<SysCheckTest>
		<DefaultToolPath>d:\webroot\xbltools</DefaultToolPath>
		<InputFilePath>.\InputFiles\SysCheck</InputFilePath>
		<TempDirectoryPath>.\SysCheckTempFiles</TempDirectoryPath>
	</SysCheckTest>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SysCheckTest\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="syschecktest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TeamCleaner\placefil.txt ===
teamcleaner.dll  test\StfTests\Suites
teamcleaner.pdb  test\StfTests\Suites
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\SysCheckTest\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="syschecktest" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TitleActivation\TitleActivationStress.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<stf>
	<config>
		<stress>
			<!--option name='resultshtml' value='yes' /-->
			<option name='initialthreads' value='8' />
			<!--option name='secondsremaining' value='600' /-->
		</stress>
	</config>
	<tests>
		<suite name='BasicTest'>
			<stress>
				<test name='StressSimple' priority='100000'/>
				<test name='StressSimpleTwo' priority='100000'/>
				<test name='StressFailer' priority='1'/>
				<test name='StressDeadlocker' priority='10'/>
			</stress>
		</suite>
	</tests>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TestThroughSG\objd\i386\testthroughsg.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\stftests\testthroughsg\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\private\test\stftests\testthroughsg\objd\i386\TestThroughSG.DebugForm.resources
j:\xonline_main\private\test\stftests\testthroughsg\objd\i386\TestThroughSG.OptionsForm.resources
j:\xonline_main\private\test\stftests\testthroughsg\objd\i386\testthroughsg.csproj.GenerateResource.Cache
j:\xonline_main\target\debug\i386\testthroughsg\TestThroughSG.dll
j:\xonline_main\target\debug\i386\testthroughsg\TestThroughSG.pdb
j:\xonline_main\private\test\stftests\testthroughsg\objd\i386\TestThroughSG.dll
j:\xonline_main\private\test\stftests\testthroughsg\objd\i386\TestThroughSG.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TokenDieHard\DieHard\MAKE.TXT ===
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This program creates a binary file containing 11+ megabytes   ::
     :: of 32-bit integers from a multiply-with-carry  generator      ::
     ::            x(n)=a*x(n-1)+carry mod 2^32                       ::
     :: You choose the multiplier from a list and specify the name of ::
     :: the file to be created.   The period of the generator will be ::
     :: a*2^31-1.  This class of generators is particularly well sui- ::
     :: ted for implementation in machine language, and I predict     ::
     :: that many system generators in the future will be of this     ::
     :: class rather than the linear congruential generators for mo-  ::
     :: dulus 2^32 that are common today.                             ::
     ::       To illustrate how the `carry' works, suppose from the   ::
     :: current (32-bit) x and (30 bit) c, one forms a*x+c.  This may ::
     :: be done in a 64-(or double 32-) bit register in most modern   ::
     :: CPU's.  Then the new random x is the lower 32 bits, the new   ::
     :: carry the upper 32.  To see how well such a simple and fast   ::                                     ::
     :: generator performs on tests of randomness, this program makes ::
     :: a large file with the multiply-with-carry generator implemen- ::
     :: ted in 16-bit integer arithmetic.  Those finding it suitable  ::
     :: may wish to make an assembler version for their system.       ::
     ::       It seems to pass all tests.                             ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::   This program creates the binary file mwc1616.32, containing ::
     :: 11+ megabytes of integers made by concatenating two 16-bit    ::
     :: multiply-with-carry generators.                               ::
     :: The two generators have the form                              ::
     ::           x(n)=a*x(n-1)+carry mod 2^16      and               ::
     ::           y(n)=b*y(n-1)+carry mod 2^16,                       ::
     :: with suggested choices for multipliers `a' and `b'.           ::
     :: The `carry'  c works as follows:  If a and x are 16-bit  and  ::
     :: c at most 14 bits, then forming a*x+c produces an at-most 31- ::
     :: bit result.  That result mod 2^16 (the rightmost 16 bits) is  ::
     :: the new x and the topmost 16 bits the new carry c.  The sequ- ::
     :: ence of resulting x's has period the order of 2^16 in the     ::
     :: group of residues relatively prime to m=a*2^16-1, which will  ::
     :: be a*2^15-1 for the multipliers suggested here.               ::
     :: You will be prompted to choose a and b and two seeds.  Output ::
     :: is a 32-bit integer, the pair x,y side by side.               ::
     :: This multiply-with-carry generator is best done in assembler, ::
     :: where it takes about 200 nanosecs with a Pentium 120. A Fort- ::
     :: ran version takes about 300 ns.  It seems to pass all tests   ::
     :: and is highly recommended for speed and simplicity.           ::
     ::   The essence of a version in C requires only two statements: ::
     ::     x=a*(x&65535)+(x>>16); y=b*(y&65535)+(y>>16);             ::
     :: if x and y are 32-bit integers with carry in the top and out- ::
     :: put in the bottom half.  The 32-bit integer returned is       ::
     ::          (x<<16)+(y&65525);                                   ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
         :: ----------------------------------------------------------- ::
         :: 18000 18030 18273 18513 18879 19074 19098 19164 19215 19584 ::
         :: 19599 19950 20088 20508 20544 20664 20814 20970 21153 21243 ::
         :: 21423 21723 21954 22125 22188 22293 22860 22938 22965 22974 ::
         :: 23109 23124 23163 23208 23508 23520 23553 23658 23865 24114 ::
         :: 24219 24660 24699 24864 24948 25023 25308 25443 26004 26088 ::
         :: 26154 26550 26679 26838 27183 27258 27753 27795 27810 27834 ::
         :: 27960 28320 28380 28689 28710 28794 28854 28959 28980 29013 ::
         :: 29379 29889 30135 30345 30459 30714 30903 30963 31059 31083 ::
         :: ----------------------------------------------------------- ::
        ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
        :: This program creates a binary file, mthr4.32, with 11 mgbytes::
        :: of 32-bit integers from the multiply-with-carry generator    ::

      x(n)=2111111111x(n-4)+1492x(n-3)+1776x(n-2)+5115x(n-1)+carry mod 2^32.

        :: The period of this generator is  about 2^160.  It is one of  ::
        :: what I called "The Mother of All Random Number Generators",  ::
        :: a few years ago when use of `Mother of All...' was topical   ::
        :: and could be used  for showing bombast, defiance or derision.::
        :: All apply to the usage here.   The `carry' part, c, is the   ::
        :: multiple of the modulus b=2^32  dropped in the reduction; for::
        :: example, if the linear combination with the current four x's ::
        :: and carry c produced the result  125*b+3621, then the new x  ::
        :: becomes 3621 and the new carry 125. The big advantage of this::
        :: and other multiply-with-carry generators is that they allow  ::
        :: use of modulus 2^16 & 2^32 without the trailing-bits regular-::
        :: ities encountered in congruential sequences for such moduli. ::
        :: But that advantage has to be gained through assembly language::
        :: if b=2^32, as no common high level language seems to allow   ::
        :: access to the top 32 bits of the 64-bit product of two 32-bit::
        :: integers. See also the file make1616.exe and makemwc1.exe    ::
        ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::    This program creates the binary file kiss.32, containing     ::
     ::  11+ megabytes of integers from the generator KISS, which com-  ::
     ::  bines three simple generators.  The acronym KISS means         ::
     ::               Keep It Simple Stupid                             ::
     ::  and the idea is to use simple, fast, individually promising    ::
     ::  generators to get a composite that will be fast, easy to code  ::
     ::  have a very long period and pass all the tests put to it.      ::
     ::  The three components of KISS are                               ::
     ::               x(n)=a*x(n-1)+1 mod 2^32                          ::
     ::               y(n)=y(n-1)(I+L^13)(I+R^17)(I+L^5),               ::
     ::               z(n)=2*z(n-1)+z(n-2) +carry mod 2^32              ::
     ::  The y's are a shift register sequence on 32bit binary vectors  ::
     ::  period 2^32-1; see the description in executing makesupr.exe.  ::
     ::  The z's are a simple multiply-with-carry sequence with period  ::
     ::  2^63+2^32-1.  The period of KISS is thus                       ::
     ::       2^32*(2^32-1)*(2^63+2^32-1) > 2^127                       ::
     ::  KISS is particularly well suited for assembler programming,    ::
     ::  where it takes about 200 nanosecs with a Pentium 120.          ::
     ::    It seems to pass all tests and is highly recommended  for    ::
     ::   speed and simplicity (for generators with that long a period) ::
     :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::   This program creates the binary file COMBO.32, containing   ::
     :: 11+ megabytes of integers from a simple but very good combi-  ::
     :: nation generator.  It combines, by addition mod 2^32,         ::
     ::             x(n)=x(n-1)*x(n-2) mod 2^32                       ::
     ::    and                                                        ::
     ::             y(n)=30903*y(n-1) + carry mod 2^16                ::
     :: The period of the first is 3*2^29, on odd integers, and the   ::
     :: period of the second, a multiply-with-carry generator, is     ::              ::
     :: 30903*2^15-1=1012629503, so the period of combo exceeds 2^60. ::
     :: This generator is simple to program in Fortran or C and quite ::
     :: fast.   It seems to pass all tests in DIEHARD.  Try it.       ::
     :: You will be prompted for three seed integers.  The x's of the ::
     :: seeds x1,x2,y must be 3 or 5 mod 8, which is ensured by repla-::
     :: cing  x1 by 3*(x1+x1+1)^2 and x2 by 2*x2+1.                   ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This program creates a binary file of integers from a version   ::
     :: of ULTRA,  a generator we posted on the net a few years ago.    ::
     :: It combines the lagged Fibonacci generator                      ::
     ::        x(n)=x(n-99)*x(n-33)  mod 2^32, x's odd                  ::
     :: with the multiply-with-carry generator                          ::
     ::        y(n)=30903*y(n-1)+carry mod 2^16,                        ::
     :: returning x(n)+y(n) mod 2^32.                                   ::
     :: By itself, the lagged Fibonacci generator using multiplication  ::
     :: passes all tests except those dependent on the last bit, since  ::
     :: the output integers are always odd.  Adding the MWC sequence    ::
     :: provides a proper mix of trailing bits. The resulting combinat- ::
     :: ion in ULTRA seems to pass all tests and has a very long period.::
     :: That period is  3*2^96*(30903*2^15-1),  about 2^127.5           ::
     :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This program creates a binary file of integers from the  ::
     :: subtract-with-borrow random number generator             ::
     ::          x(n)=x(n-24)-x(n-37) - borrow mod 2^32          ::
     :: combined with the multiply-with-carry generator          ::
     ::          y(n)=30903*y(n-1) + carry  mod 2^16.            ::
     :: The period of the composite is                           ::
     ::    (2^1178-2^762)(30903*2^15-1),  about 2^1208 or 10^364.::
     ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::  This program creates the binary file EXCONG?.32 containing   ::
     ::  11+ megabytes of 32-bit integers from an extended congruent- ::
     ::  generator.  You have your choice of four:                    ::
     ::   1:  x(n)=1176*x(n-1)+1476*x(n-2)+1776*x(n-3) mod 2^32-5     ::
     ::   2:  x(n)=2**13*[x(n-1)+x(n-2)+x(n-3)] mod 2^32-5            ::
     ::   3:  x(n)=2001*x(n-1)+1998*x(n-2)+1995*x(n-3) mod 2^35-849   ::
     ::   4:  x(n)=2**19*[x(n-1)+x(n-2)+x(n-3)] mod 2^35-1629         ::
     ::  The period of these generators is the modulus cubed minus 1, ::
     ::  about 2^96, for any 3 seeds not all zero.   The recursion is ::
     ::  implemented in double precision, with the result converted   ::
     ::  to a 32-bit integer.  Notice that choices 2 and 4 are well   ::
     ::  suited for implementations that avoid multiplication: adding ::
     ::  13 or 19 to the exponent of a double precision sum.   Since  ::
     ::  all four choices seem to pass all tests, 2) and 4) may be    ::
     ::  preferable.  Try them yourself.                              ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::         The random number generator SUPERDUPER                ::
     ::  This program creates the binary file SUPRDUPR.32, containing ::
     :: 11+ megabytes of integers made by adding the results of two   ::
     :: random number generators, congruential and shift register.    ::
     :: The two generators are                                        ::
     ::           x <--- 69069*x+oddconstant mod 2^32        and      ::
     ::           y <--- y(I+L^13)(I+R^17)(I+L^5),                    ::
     :: where y is viewed as a binary vector. The transformation is   ::
     ::        y <-- yT, with T the 32x32 binary matrix               ::
     :: T=(I+L^13)(I+R^17)(I+L^5) and L, R are matrices that effect a ::
     :: shift of 1 left or 1 right.  The transformation is readily    ::
     :: done with shifts and exclusive or's.  The period of the x's   ::
     :: is 2^32 for any initial seed and that for the y's is 2^32-1   ::
     :: for any seed not zero.  So the period of  SUPERDUPER is       ::
     ::           2^64-2^32 = 18,446,744,069,414,584,320.             ::
     :: You will be prompted for two seeds.                           ::
     :: You will also be prompted to choose the method for combining  ::
     :: the two sequences: addition (enter +), exclusive-or (enter x) ::
     :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This program creates a binary file of integers from a specified ::
     :: subtract-with-borrow random number generator.   Structures of   ::
     :: such generators are much like those of lagged Fibonacci generat-::
     :: ors x(n)=x(n-s)-x(n-r) mod m, except that one forms             ::
     :: x(n)=x(n-s)-x(n-r)-c mod m, where c is the `borrow': 0 if the   ::
     :: subtraction produced a positive result, and 1 if an m had to be ::
     :: borrowed and added to the difference to make a positive result. ::
     :: With proper choice of the lags, tremendously long periods can   ::
     :: be attained.  But performance on tests is much the same as for  ::
     :: lagged Fibonacci, as SWB sequences behave locally much like lag-::
     :: ged Fibonacci using subtraction.  There are also add-with-carry ::
     :: generators x(n)=x(n-r)+x(n-s)+carry mod m that use addition,    ::
     :: with the `carry' set to 1 or 0, depending on whether m had to be::
     :: subtracted to give a positive result mod m. For a full descript-::
     :: tion, see Marsaglia and Zaman, Ann. Applied Prob., v1, no3 1991 ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::
     ::   This program creates a binary file  containing 11+ megabytes  ::
     ::  of 32-bit random integers from a congruential generator,       ::
     ::            x(n)=a*x(n-1)+b mod m                                ::
     ::  You will be prompted to choose a,b and m, the latter in the    ::
     ::  form m=2^r+s.   If r<=31 then r-bit integers will be left-     ::
     ::  justified (shifted left)  to meet DIEHARD requirements.        ::
     ::  If r>32 then the recursion is carried out in double precision  ::
     ::  and the result sent to the file as the integer part of  c*x,   ::
     ::  where c is the ratio 2.^32/m.  In addition, this program will  ::
     ::  display a (line-printer) plot of the 2-lattice of the chosen   ::
     ::  congruential generator.                                        ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
      :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
      ::  This program creates the binary file ran2.32 containing some   ::
      ::  11 megabytes of integers from the generator RAN2 in Numerical  ::
      ::  Recipes.  See Press and Teukolsky, "Portable Random Number     ::
      ::  Generators", Computers in Physics, v 6, n 2, 522:524 1992.     ::
      ::  See also "Some portable very-long-period random number gener-  ::
      ::  ators", v 8 n 1, 1994 by Marsaglia and Zaman, that points out  ::
      ::  shortcomings, suggested improvements and alternatives to RAN2. ::
      ::  The Numerical Recipes version produces only 31 bit integers.   ::
      ::  They are left-adjusted, that is, shifted left 1, before being  ::
      ::  written to the binary file ran2.32, as several DIEHARD tests   ::
      ::  emphasize the leading bits.  But that means that all integers  ::
      ::  in ran2.32 have trailing bit=0, so that tests that use bit 32  ::
      ::  (DIEHARD numbers bits from left to right, 1 to 32) will yield  ::
      ::  spectacular failures.                                          ::
      :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::
      :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::
      ::  This program creates a binary file with 11+ megabytes of 32-   ::
      ::  bit integers from a specified shift register generator.  You   ::
      ::  will be prompted to choose the shifts and whether to generate  ::
      ::  31- or 32-bit integers.  If 31 bits are chosen, the resulting  ::
      ::  integers will be left-justified (shifted left 1) before being  ::
      ::  written to the output file you name, since many of DIEHARD's   ::
      ::  tests emphasize leading bits of random integers.  That means,  ::
      ::  of course, that the generator is likely to fail tests that     ::
      ::  depend, in any significant way, on the rightmost bit of a 32-  ::
      ::  bit random integer.                                            ::
      :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::         The system generator in Microsoft Fortran             ::
     ::  This program creates the binary file MSRAN.32,  containing   ::
     :: 11+ megabytes of integers made from the Microsoft Fortran     ::
     :: system generator.  It is the congruential generator           ::
     ::              x(n)=48271*x(n-1) mod 2^31-1                     ::
     :: That multiplier has been suggested as better than Lehmer's    ::
     :: original 7^5=16807.  Unfortunately, only reals on [0,1) are   ::
     :: provided by the generator, from division by 2^31. The origin- ::
     :: al congruential integer cannot be recovered by multiplying by ::
     :: 2^31---several bits may be lost.  So this program creates the ::
     :: original sequence of 31-bit integers.  They are left-shifted  ::
     :: one position to conform with DIEHARD's requirements.  Thus    ::
     :: they fail tests influenced by the rightmost bit, always 0.    ::
     :: Other multipliers suggested for this modulus are 16807 and    ::
     :: 314159269.  Try them, by choosing the congruential generator  ::
     :: in  MAKEWHAT.EXE                                              ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This program creates a binary file of integers from a specified ::
     :: lagged Fibonacci generator, x(n)=x(n-r) op x(n-s), with op one  ::
     :: of the four operations +,-,* mod 2^32 and xor.   You choose the ::
     :: two lags r and s from a list that provides long periods         ::
     :: and choose the operation +,-,*  mod 2^32  or exclusive-or: xor. ::
     :: For simpler program logic, choice of operation is indicated by  ::
     :: an integer:      1 for +, 2 for -, 3 for *, 4 for xor.          ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
       :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::
       ::  This program creates a file, INVCONG.32, with 11+ megabytes  ::
       ::  of 32-bit integers from an `inverse congruential' generator, ::
       ::  described by Eichenauer-Herrmann in International Statist.   ::
       ::  Review v60, 167-176 and earlier papers.                      ::
       ::  The attraction of this generator seems to be the theory be-  ::
       ::  hind it; as a random number generator it is not very good.   ::
       ::  It takes from twenty to fifty times as long as much better   ::
       ::  generators and fails many of the tests in DIEHARD. The first ::
       ::  12-16 bits seem to be good, but trailing bits are as bad or  ::
       ::  worse than those from an ordinary congruential RNG mod 2^32. ::
       ::  Try it yourself. You will be prompted for parameters a and b ::
       ::  and a seed.  Make sure `a' mod 4 is 1 and `b' is odd.        ::
       :: ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: ::


=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TokenDieHard\DieHard\DIEHARD.DOC ===
Version: DOS, Jan 7, 1997  

                     Instructions for using
              DIEHARD: a battery of tests of randomness.

          I hope you will inform me of results, good or bad, of new kinds
          of generators you have tested, particularly deterministic
          generators,  but also the output of physical devices.
          (I have found none of the latter that get past DIEHARD,
          and would like to learn of any that do.)
             Since, in my opinion, there is no true randomness,
          collective experience in finding sequences that depart from
          the theoretical ideal in a  significant way can perhaps lead
          to  better ways for  finding those that  do not.
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

  1. How To Use DIEHARD.
      This disk contains examples of some tests (15) from the DIEHARD
  battery of tests I have developed over many years and found effective.
  It also contains some utility files that are described at the end
  of this text file.  This description is primarily for running
  *.exe files under DOS, but should serve as well for UNIX or LINUX
  systems with obvious allowance for the absence of .exe labels in unix.
        --------------------------------------------------------|
       |The source code is also available in C.  It comes from  |
       |an f2c translation from many Fortran files that have    |
       |suffered countless patches over their long development, |
       |some going back thirty years.  So while the melange in C|
       |might seems to run and  give good results, good luck in |
       |trying to figure out or modify the translated code.     |
       |--------------------------------------------------------|
  To use the disk you need only invoke the diehard.exe file on a PC
  using DOS and having 386/486 capabilities.

  (For DOS use, you must copy and have in your path the file
  DOSXMSF.EXE, included on the disk, before diehard.exe will run.
  You will also need files tests.txt, make.txt and operm5d.ata.
  To be safe, copy all the files on this disk to your working directory.)

  The tests in DIEHARD require that you provide a large binary
  file of random integers to be tested. The disk contains the file
  makewhat.exe for creating such binary files, as well the file
  asc2bin.exe for transforming an ascii file into the kind of file
  that DIEHARD expects.

  You will no doubt want to copy  the contents of this disk to your
  hard disk and invoke its .exe files from there.

  With the exception of the RUNS test, which is a `standard' test
  and the only one of the standard tests I have found to be very
  effective,  all tests here are those I have developed.

     General versions of the tests call for various parameters
  that specify sample size, bit patterns to be tested, and so on.
  To avoid complications, I have chosen to fix the parameters of
  the tests on this disk.    For each test, a description  is
  provided, from which interested users may fashion their own versions
  with variable parameters.

  2. Providing Input Files For DIEHARD.
  The executable file diehard.exe will prompt you to name the file
  you want to be tested and ask you to select any or all of the 15 tests.
  You must provide the binary file that DIEHARD expects---a file of 10 to 11
  megabytes, that is, a file of at least 80 million bits.  DIEHARD
  will do the best it can with shorter binary files, then give up
  on the test under way, give an END OF FILE message and go to the
  next test.

  3.  Some Examples.
  Imagine, (as is probably the case), you have
  just got this disk (or diehard.zip via ftp and have unzipped it),
  have all the files in your current directory
  and are ready to try DIEHARD. (Having DOSXMSF.EXE in your path.)

  If you merely invoked it with the DOS command
           diehard
  you would be prompted to give the name of the file you want tested.
  But of course you have no such file.

  So you must first create one.  You may use the file makewhat.exe
  to create files of the form that DIEHARD expects.  Suppose you try it
  and when prompted, choose option 4: make a KISS file.  That creates a
  binary file of integers from the generator KISS, which stands for
               Keep It Simple Stupid,
  a generator that combines three simple generators of the form
  x <-- f(x) for 32 bit integers x.  (You will find that KISS, among several
  others, passes all tests.)

  Then the makewhat.exe program will create the binary file kiss.32.  After
  displaying details of the KISS generator, the program will ask you
  to enter four seed integers, after which it will create a binary file
  of some 11 megabytes.

  Having finished creating the file that will test KISS, enter
       diehard
  and you will be prompted to enter the name of the file to be tested.
  You will of course enter the name of your only file so far, say
       kiss.32
  You will then be asked to enter the name of an output file, since
  DIEHARD displays results both to the screen and to a specified output
  file.  You might, as I do, choose
       kiss.out
  for the name of your output file.

  You will then be asked, with a crude menu, to choose the tests
  you want run.  This is done with a sequence of 15 1's or 0's.
  For example: 111111111111111 selects all the tests, while
  010101010101010 selects only the even numbered menu items.

   For a fast PC, DIEHARD may take perhaps 10 minutes for the entire
   battery of tests (but an early 386 I tested it on took 203 minutes).

   You will see the output on the screen and, when the tests are
   completed, you may examine results in detail by displaying the
   file kiss.out.

   Next, you may want to test some other generators. The makewhat.exe
   program provides for creating binary files for generic

     Congruential Generators
     Shift Register  Generators
     Lagged Fibonacci  Generators
     Multiply-with-carry Generators on 32 bits: x(n)=ax(n-1)+carry mod 2^32

   There are also choices for specific generators:
     A version of the mother-of-all RNG's
     KISS
     Two multiply-with-carry on 16 bits
     A simple but good combination generator COMBO
     The super-duper generator
     A subtract-with-borrow  generator
     The system generator in Microsoft or Sun Fortran
     An extended congruential generator
     The ran2 generator from Numerical Recipes
     An inverse congruential generator

   There is also a file that will combine, by addition mod 2^32
   or exclusive-or,  any two binary files that have already been created.
   The file is MELD.EXE, and of course by repeated invocations you
   can create a mixture of as many binary files as you wish.
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

   OK, those are some of the ways you can create and test files
   with programs on this disk.

   But what if you want to test your own---or some other---generator?
   And it is only available through some program or procedure
   in Fortran, C, Pascal etc.?

   There are at least two ways:
   1) Write a main program in the language of your procedure, in which
   you open a binary file and send your random integers to it.

   But if your language can't---or you don't know how to---create a
   binary file of the form required by DIEHARD, then

   2) Write a main program that sends the (hex) output of your random
   number procedure to an ordinary ascii file.  Then invoke the
   file on this disk, ASC2BIN.EXE that will prompt for the names
   of your input and output files and do the conversion.

   Your random number generator should produce 32-bit integers.
   (If 31 bits, left justify by shift-left-one, as some of the
   tests in DIEHARD favor leading bits.)  You should send them to
   your ascii file in hex form, 8 hex 'digits' per integer,
   10 integers per line, no intervening spaces.  The ascii file
   will be twice as big as the binary file it is reduced to.

   You can see that DIEHARD requires large test files.  But they
   need only be created one at a time, then deleted.

   The CDROM I will soon be distributing contains some 60 ten-meg binary
   files of random numbers for use in serious Monte Carlo calculations
   as well as for input to DIEHARD.  Most of those files combine several
   of the best deterministic generators with white noise and black
   noise, (the latter from a CD of rap music).  Some of the files
   contain only random bits from physical devices.  They fail many
   of the tests in DIEHARD.

   When you absolutely, positively have to have an unassailable
   source of random bits, you should, in my opinion, use a combination
   of the output from a physical device(s) with some of the best
   deterministic random number generators.  As you can see from
   applying DIEHARD, many of the latter may well be suitable by themselves.


    George Marsaglia
    geo@stat.fsu.edu

Addendum:  You will also find a postscript file mwc1.ps that, when
processed, describes what I think are the RNG's of the future:
multiply-with-carry.  You will find they pass all tests, have very
long periods and are particularly well suited for computer implementation.
I predict a version with base b=2^32 will be the generator of choice in
future systems.   That file mwc1.ps is extracted from a summary
description of RNG's, tests and the theory behind them im a TeX file
that I may or may not ever complete.

I have also included the postscript file keynote.ps.  It is taken from
the Keynote Address of a national meeting 11 years ago, and describes
some of the ideas behind the tests.  Many have reported difficulty in
finding Proceedings of the Meeting in their libraries.

Another potentially useful file is getrnor.exe.  It will transform a
binary file of random bits into a (binary) file of real standard normal
random variables using my ziggurat method.

Files on this version of DIEHARD:
    diehard.doc    This file
    diehard.exe    The diehard exec file
    diequick.exe   A terse version of diehard
    makewhat.exe   The exec file for making random number files
    tests.txt      Descriptions of the tests.  Read by diehard.exe
    make.txt       Descriptions of RNG's.  Read by makewhat.exe
    asc2bin.exe    Converts an ascii integer file to a binary file
    getrnor.exe    Converts a random bit file to normal random variables
    meld.exe       Makes a new binary bit file by merging two others
    mwc1.ps        A postscript file describing multiply-with-carry RNG's
    monkey.ps      Describes the difficult-to-pass monkey tests.
    keynote.ps     Theory of tests and RNG's from a keynote address.
    cdmake.ps      Early version of postscript file for the CDROM
    operm5d.ata    The covariance matrix read by the OPERM5 test
    dosxmsf.exe    A file necessary for running diehard.exe under DOS

 Versions for Sun or LINUX will not have that last DOS-required file,
 and the executable files have no .exe extensions, being simply
        diehard, diequick, makewhat, asc2bin, getrnor, and meld.
 They will also have a different version of the makewhat and make.txt
 files, calling for different choices for tests of the system generator.
 
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TokenDieHard\DieHard\TESTS.TXT ===
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::            This is the BIRTHDAY SPACINGS TEST                 ::
     :: Choose m birthdays in a year of n days.  List the spacings    ::
     :: between the birthdays.  If j is the number of values that     ::
     :: occur more than once in that list, then j is asymptotically   ::
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::
     :: must be quite large, say n>=2^18, for comparing the results   ::
     :: to the Poisson distribution with that mean.  This test uses   ::
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::
     :: provides a p value.  The first test uses bits 1-24 (counting  ::
     :: from the left) from integers in the specified file.           ::
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::
     :: Each set of bits provides a p-value, and the nine p-values    ::
     :: provide a sample for a KSTEST.                                ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::
     :: ion 32-bit random integers.  Each set of five consecutive     ::
     :: integers can be in one of 120 states, for the 5! possible or- ::
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::
     :: each provide a state. As many thousands of state transitions  ::
     :: are observed,  cumulative counts are made of the number of    ::
     :: occurences of each state.  Then the quadratic form in the     ::
     :: weak inverse of the 120x120 covariance matrix yields a test   ::
     :: equivalent to the likelihood ratio test that the 120 cell     ::
     :: counts came from the specified (asymptotically) normal dis-   ::
     :: tribution with the specified 120x120 covariance matrix (with  ::
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::
     :: 31 bits of 31 random integers from the test sequence are used ::
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::
     :: are rare, and their counts are pooled with those for rank 28. ::
     :: Ranks are found for 40,000 such random matrices and a chisqua-::
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::
     :: less than 29 are rare, and their counts are pooled with those ::
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::
     :: and a chisquare test is performed on counts for ranks  32,31, ::
     :: 30 and <=29.                                                  ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::
     :: six random 32-bit integers from the generator under test, a   ::
     :: specified byte is chosen, and the resulting six bytes form a  ::
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::
     :: pooled with those for rank 4. Ranks are found for 100,000     ::
     :: random matrices, and a chi-square test is performed on        ::
     :: counts for ranks 6,5 and <=4.                                 ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::                   THE BITSTREAM TEST                          ::
     :: The file under test is viewed as a stream of bits. Call them  ::
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::
     :: and think of the stream of bits as a succession of 20-letter  ::
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::
     :: the number of missing 20-letter (20-bit) words in a string of ::
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::
     :: letter words.  For a truly random string of 2^21+19 bits, the ::
     :: number of missing words j should be (very close to) normally  ::
     :: distributed with mean 141,909 and sigma 428.  Thus            ::
     ::  (j-141909)/428 should be a standard normal variate (z score) ::
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::
     :: twenty times.                                                 ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::             The tests OPSO, OQSO and DNA                      ::
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::
     :: The OPSO test considers 2-letter words from an alphabet of    ::
     :: 1024 letters.  Each letter is determined by a specified ten   ::
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::
     :: "keystrokes")  and counts the number of missing words---that  ::
     :: is 2-letter words which do not appear in the entire sequence. ::
     :: That count should be very close to normally distributed with  ::
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::
     :: be a standard normal variable. The OPSO test takes 32 bits at ::
     :: a time from the test file and uses a designated set of ten    ::
     :: consecutive bits. It then restarts the file for the next de-  ::
     :: signated 10 bits, and so on.                                  ::
     ::                                                               ::
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::
     ::   The test OQSO is similar, except that it considers 4-letter ::
     :: words from an alphabet of 32 letters, each letter determined  ::
     :: by a designated string of 5 consecutive bits from the test    ::
     :: file, elements of which are assumed 32-bit random integers.   ::
     :: The mean number of missing words in a sequence of 2^21 four-  ::
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::
     :: extensive simulation.                                         ::
     ::                                                               ::
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::
     :: determined by two designated bits in the sequence of random   ::
     :: integers being tested.  It considers 10-letter words, so that ::
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::
     :: mean number of missing words from a string of 2^21  (over-    ::
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::
     :: The standard deviation sigma=339 was determined as for OQSO   ::
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::
     :: three places), not determined by simulation.                  ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::
     :: Consider the file under test as a stream of bytes (four per   ::
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::
     :: the stream of bytes provide a string of overlapping  5-letter ::
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::
     :: we have a monkey at a typewriter hitting five keys with vari- ::
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::
     :: possible 5-letter words, and from a string of 256,000 (over-  ::
     :: lapping) 5-letter words, counts are made on the frequencies   ::
     :: for each word.   The quadratic form in the weak inverse of    ::
     :: the covariance matrix of the cell counts provides a chisquare ::
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::
     :: Consider the file under test as a stream of 32-bit integers.  ::
     :: From each integer, a specific byte is chosen , say the left-  ::
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::
     :: the specified bytes from successive integers provide a string ::
     :: of (overlapping) 5-letter words, each "letter" taking values  ::
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::
     :: hitting five keys with with various probabilities::  37,56,70,::
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::
     :: are made on the frequencies for each word. The quadratic form ::
     :: in the weak inverse of the covariance matrix of the cell      ::
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::
     :: and 4-letter cell counts.                                     ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::               THIS IS A PARKING LOT TEST                      ::
     :: In a square of side 100, randomly "park" a car---a circle of  ::
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::
     :: time parking "by ear".  That is, if an attempt to park a car  ::
     :: causes a crash with one already parked, try again at a new    ::
     :: random location. (To avoid path problems, consider parking    ::
     :: helicopters rather than cars.)   Each attempt leads to either ::
     :: a crash or a success, the latter followed by an increment to  ::
     :: the list of cars already parked. If we plot n:  the number of ::
     :: attempts, versus k::  the number successfully parked, we get a::
     :: curve that should be similar to those provided by a perfect   ::
     :: random number generator.  Theory for the behavior of such a   ::
     :: random curve seems beyond reach, and as graphics displays are ::
     :: not available for this battery of tests, a simple characteriz ::
     :: ation of the random experiment is used: k, the number of cars ::
     :: successfully parked after n=12,000 attempts. Simulation shows ::
     :: that k should average 3523 with sigma 21.9 and is very close  ::
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::
     :: andard normal variable, which, converted to a uniform varia-  ::
     :: ble, provides input to a KSTEST based on a sample of 10.      ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::               THE MINIMUM DISTANCE TEST                       ::
     :: It does this 100 times::   choose n=8000 random points in a   ::
     :: square of side 10000.  Find d, the minimum distance between   ::
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::
     :: pendent uniform, then d^2, the square of the minimum distance ::
     :: should be (very close to) exponentially distributed with mean ::
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::
     :: formity for random points in the square. Test numbers=0 mod 5 ::
     :: are printed but the KSTEST is based on the full set of 100    ::
     :: random choices of 8000 points in the 10000x10000 square.      ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::              THE 3DSPHERES TEST                               ::
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::
     :: point, center a sphere large enough to reach the next closest ::
     :: point. Then the volume of the smallest such sphere is (very   ::
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::
     :: the radius cubed is exponential with mean 30. (The mean is    ::
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::
     ::  KSTEST is done on the 20 p-values.                           ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::      This is the SQEEZE test                                  ::
     ::  Random integers are floated to get uniforms on [0,1). Start- ::
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::
     ::  iterations necessary to reduce k to 1, using the reduction   ::
     ::  k=ceiling(k*U), with U provided by floating integers from    ::
     ::  the file being tested.  Such j's are found 100,000 times,    ::
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::
     ::  are used to provide a chi-square test for cell frequencies.  ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::             The  OVERLAPPING SUMS test                        ::
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::
     :: form [0,1) variables.  Then overlapping sums,                 ::
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::
     :: The S's are virtually normal with a certain covariance mat-   ::
     :: rix.  A linear transformation of the S's converts them to a   ::
     :: sequence of independent standard normals, which are converted ::
     :: to uniform variables for a KSTEST. The  p-values from ten     ::
     :: KSTESTs are given still another KSTEST.                       ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     ::     This is the RUNS test.  It counts runs up, and runs down, ::
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::
     :: ing the 32-bit integers in the specified file. This example   ::
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::
     :: contains an up-run of length 3, a down-run of length 2 and an ::
     :: up-run of (at least) 2, depending on the next values.  The    ::
     :: covariance matrices for the runs-up and runs-down are well    ::
     :: known, leading to chisquare tests for quadratic forms in the  ::
     :: weak inverses of the covariance matrices.  Runs are counted   ::
     :: for sequences of length 10,000.  This is done ten times. Then ::
     :: repeated.                                                     ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::
     :: the number of wins and the number of throws necessary to end  ::
     :: each game.  The number of wins should be (very close to) a    ::
     :: normal with mean 200000p and variance 200000p(1-p), with      ::
     :: p=244/495.  Throws necessary to complete the game can vary    ::
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::
     :: A chi-square test is made on the no.-of-throws cell counts.   ::
     :: Each 32-bit integer from the test file provides the value for ::
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::
     :: and taking 1 plus the integer part of the result.             ::
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
       NOTE: Most of the tests in DIEHARD return a p-value, which
       should be uniform on [0,1) if the input file contains truly
       independent random bits.   Those p-values are obtained by
       p=F(X), where F is the assumed distribution of the sample
       random variable X---often normal. But that assumed F is just
       an asymptotic approximation, for which the fit will be worst
       in the tails. Thus you should not be surprised with
       occasional p-values near 0 or 1, such as .0012 or .9983.
       When a bit stream really FAILS BIG, you will get p's of 0 or
       1 to six or more places.  By all means, do not, as a
       Statistician might, think that a p < .025 or p> .975 means
       that the RNG has "failed the test at the .05 level".  Such
       p's happen among the hundreds that DIEHARD produces, even
       with good RNG's.  So keep in mind that " p happens".




=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TokenDieHard\objd\i386\tokendiehard.csproj.FileListAbsolute.txt ===
j:\xonline_main\private\test\stftests\tokendiehard\objd\i386\ResolveAssemblyReference.cache
j:\xonline_main\target\debug\i386\tokendiehard\TokenDieHard.dll
j:\xonline_main\target\debug\i386\tokendiehard\TokenDieHard.pdb
j:\xonline_main\private\test\stftests\tokendiehard\objd\i386\TokenDieHard.dll
j:\xonline_main\private\test\stftests\tokendiehard\objd\i386\TokenDieHard.pdb
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\TokenImportTest\TokenImportTestSampleTokens.txt ===
O6AP-3WZ6-80X1-5883-BZ4M-IN0S 00000000000000
NQL5-T2MN-1U8V-5K0K-1183-OLPA 00000000000001
1Q3H-HLST-HDE2-UJ1T-KUH8-R05X 00000000000002
VNYV-8HZ7-BTN0-A0JX-JMRU-B4IT 00000000000003
E6LE-7879-6HC4-JEMN-MRM7-HGAB 00000000000004
6547-JZYY-H0RC-UQNZ-GA2M-9Q9G 00000000000005
5RCZ-TBTK-68IG-2OEN-7S62-LTS9 00000000000006
6DSO-KD3H-PK44-6G4L-3LF8-S7YY 00000000000007
NDL2-DRFG-R1IW-VHBY-200H-EXXM 00000000000008
CRNX-O87N-DNRM-5641-ZKK0-KVHX 00000000000009
00QK-1OBJ-VRXG-47R4-KY8W-9OEJ 00000000000010
GEER-YM4H-0N2D-PAFQ-V6DS-CWR5 00000000000011
MXAD-8YKW-N48Z-IKCG-T63R-3TZ5 00000000000012
YGI6-7MU5-6ZL4-JTGV-E3F9-3GBJ 00000000000013
PCP6-1G5R-1WIG-BMJE-T2RE-LUL2 00000000000014
BQSJ-DX9W-BFPT-4KZG-762T-ISZ7 00000000000015
0H66-IGMP-OMGC-37WM-L261-ENNK 00000000000016
M8HF-58J3-7LRT-A44X-IIHP-JRYC 00000000000017
0XPN-H2J4-YL5E-9NP2-9SHR-LN4J 00000000000018
0895-K8L8-KWSD-BS0Y-5SSO-U6SW 00000000000019
GXEC-OT2J-VN9Q-PQJD-OXZM-R28T 00000000000020
IRL1-E8K8-9U1G-6VFQ-CL3A-3O2O 00000000000021
2FVN-60ET-LPG3-9GJ0-B28P-Q2S2 00000000000022
AJOC-QN7M-C00P-NQ07-E349-6VQ1 00000000000023
LMLS-NNPF-F9MF-DKGQ-5IPK-NPPS 00000000000024
UE5R-SYT2-T88Z-GV37-4534-FJ1Y 00000000000025
JIZ8-3NID-92D5-OMI2-TGWJ-626M 00000000000026
M1N8-CAVU-GJJL-DHSQ-V0FW-79CT 00000000000027
S5L2-HREE-L7MK-J3SM-J8JV-CUTW 00000000000028
0N60-R1LC-FBTB-C66D-3ZVF-VW1E 00000000000029
5G6R-W3WH-ZC2U-4JS6-QWJ7-23QC 00000000000030
Q33C-DIBY-86P5-G3JQ-9MW3-WIOJ 00000000000031
L4CK-P1N7-DSNZ-9PPZ-88RT-G46B 00000000000032
4YK5-R0Q4-7L1M-U3E1-0A5H-ZVXD 00000000000033
7MWT-FBKY-ZTCI-QPGH-YPX7-ZFE4 00000000000034
OAPA-MYC8-YX4A-8UE8-6WCH-87JO 00000000000035
ZFWH-RU97-L22Z-0HM9-5DSD-LM19 00000000000036
0GRV-0CPX-I6JY-5RMY-2304-RKCG 00000000000037
YL1Q-5IB7-XSYH-2MGV-VKIJ-WOPL 00000000000038
JY35-UPN7-H99F-2879-N4IZ-VVCT 00000000000039
IDLL-EV3B-4NWR-1ZNV-6RF3-GKF4 00000000000040
JDKI-NDAV-DAGS-I07D-KGAE-ZEK0 00000000000041
QXXM-TWY4-9PRQ-OKOL-TVT2-Q9SN 00000000000042
0116-TZI4-BYW9-F4PX-RJQQ-3F68 00000000000043
ZYPB-J2F1-F12J-ZVBN-AEPA-5VGD 00000000000044
87XJ-HNWO-3MT7-PQ1J-Q9AP-JYD9 00000000000045
6CV3-8O6C-ATN9-6R2D-SA8P-G8YE 00000000000046
ZY5O-2UX3-SM3S-FR3I-QP7W-2R3G 00000000000047
F2TY-KEMP-OUOY-AL5Q-YUEZ-EY4N 00000000000048
X5S5-XUXX-8U4Z-ZJ5R-SGB8-LV8I 00000000000049
2NJ0-SHIB-O9QT-385Q-CBBA-6U4T 00000000000050
C2CU-0FCR-R5DS-LA3S-EL1T-2R7Y 00000000000051
KH96-ZIJ2-IW08-0XD2-QUNS-53JQ 00000000000052
HLKW-16JL-RL6Q-TACL-JDVT-9O7Z 00000000000053
QEXW-B46D-JISF-M4XK-O5LG-AS7L 00000000000054
T8RC-KKAX-TH3D-DI9O-PT7D-AGD6 00000000000055
DIQC-ELVT-4KFD-1WCU-ZZYH-L77C 00000000000056
JLYL-7UME-43Q8-0365-R1OC-OX9G 00000000000057
JT9C-WRI3-XZJM-6PDI-CP1D-P2H8 00000000000058
OXZ8-B6ZA-42YW-OG1S-T4PK-QCGZ 00000000000059
PDUA-FNDO-V8CO-QGR9-ZVRV-H6SG 00000000000060
W0HJ-S6F8-U7GR-S1DS-N20M-7NIB 00000000000061
MEFI-MN2C-F02R-R3V4-LNVF-FSSR 00000000000062
QKRD-7RL6-GV3H-IF3V-C1FP-GHNJ 00000000000063
M343-4V8N-4D1F-JEKL-5DWZ-WZC4 00000000000064
06ZK-N449-YVB1-EWB1-CF4O-FER6 00000000000065
9DNS-9AE3-LS9G-JFD7-1N91-PH5G 00000000000066
8DVU-O77T-TVPJ-96IB-OHGE-7035 00000000000067
3VJX-SMTK-MYCN-1DH9-K1IF-QUFX 00000000000068
SRTW-BV8U-WI2N-GHDM-3X2O-2WAU 00000000000069
W3M2-C02F-X6XC-NBV0-HUHW-TCGO 00000000000070
PQ34-RPIW-WLKY-VZ37-T3GM-LRUY 00000000000071
EO4W-C3X2-MYJL-L9UU-ZGVR-KTW8 00000000000072
6KKW-OY84-0L7P-5ZWH-5C7D-ZIOQ 00000000000073
KKSC-M964-WNUB-I2SD-L4SP-ID57 00000000000074
USAY-D1BZ-VRDV-W2T5-M9FC-CDSF 00000000000075
TCQG-TMGY-ZFAH-OE1C-ZPL3-G1UQ 00000000000076
8GUC-RXU0-X7ML-5KPO-KYAB-0T21 00000000000077
JBCF-0D1K-3RQA-E453-AVY7-Q8U9 00000000000078
PYCP-RDYM-7F8J-38HL-JXHQ-EFOK 00000000000079
FIB4-4J3Y-PSJH-RG1E-T9F4-C0Q6 00000000000080
EGIY-NUJS-72LL-ESMH-3YEH-7AQR 00000000000081
NEGW-916A-WGZV-DE29-OKQP-12PO 00000000000082
6N3O-5D4D-7TC0-N7CU-GFP9-7IFW 00000000000083
ZYYX-WOQZ-UAJW-O7CZ-94MR-ISPF 00000000000084
AKQE-3K0Y-UGCQ-V6CG-146Q-96UT 00000000000085
RH7Z-M976-42LV-0UZR-4HTM-NBK9 00000000000086
6OUN-JRG1-LD6D-CJ61-8TPA-PF8K 00000000000087
XQ3Q-H17S-LX3J-PTSO-B5O9-I3JM 00000000000088
JJKP-P6UC-BJOO-VDQA-WUSW-J1QY 00000000000089
87QK-A4SL-ELIW-T6SR-DGR5-UBTV 00000000000090
GDO1-0WS8-OS2E-UBF0-LLHY-P5CJ 00000000000091
Q5TD-I9W8-9S0P-9EH3-665L-PTDQ 00000000000092
RSN4-IH0G-0X00-R9YR-UZMP-BOHS 00000000000093
8RBV-B8H6-ILXC-RE1Q-MWP1-R0P9 00000000000094
86DL-3NV4-83OV-NZQP-2RC2-2KJ8 00000000000095
DN5Z-QA83-T1JJ-R2SB-UFLF-EYSI 00000000000096
LRXE-O4YU-GMG4-3EOY-VGBC-84V2 00000000000097
H9LX-NXG3-E9EI-HA66-0K38-6P16 00000000000098
Y0KG-J163-T46P-P8L7-FF3T-7SIK 00000000000099
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ToolsMgmtTest\toolsmgmtdvt.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<stf>
	<ToolsMgmtDvt>
        <!-- Path in STF where input files are found -->
        <InputFilePath>..\InputFiles\wcToolsMgmt</InputFilePath>
	
        <!-- Path to Upload directory, where files are uploaded to -->
        <UploadPath>\\xeinfrhst001\ToolsMgmtUpload</UploadPath>
	   
	<!-- TestNet Settings:
        <ToolsMgmtAddress>10.198.102.85</ToolsMgmtAddress>
        <ClientCertificateFile>c:\test.AutoProp.rdw.001.pfx</ClientCertificateFile>
        -->
    </ToolsMgmtDvt>
</stf>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ToolsMgmtTest\obj\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="toolsmgmtdvt" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\VoucherMgrTest\1-5.txt ===
00026,790500001,0,-8141965451099845536,D28FDB6ED374DFFE42B8B952D5307D1067638FFB
00026,790500002,0,-6789170047851026653,18D1300F2E7E899F9955C9CC164E7CC88B0206FC
00026,790500003,0,-6550306152958592963,9BC152B6BB59A0C17AFB4FE275762D900CF03EF0
00026,790500004,0,-3279480028951017363,9DE2607A56AE9C550B91C5899EA731E034844881
00026,790500005,0,-3899307429950534509,E8026B61C94853720CDD1E95CFA675D7C084AD8A
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\ToolsMgmtTest\objd\i386\_asmid.xml ===
﻿<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>
<assemblyIdentity  name="toolsmgmtdvt" processorArchitecture="msil" version="12.4.56.0"/>
</assembly>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\private\test\StfTests\VoucherMgrTest\mix-0-30000.txt ===
00026,790500001,0,-8141965451099845536,D28FDB6ED374DFFE42B8B952D5307D1067638FFB
00026,790500002,0,-6789170047851026653,18D1300F2E7E899F9955C9CC164E7CC88B0206FC
00026,790500004,0,-3279480028951017363,9DE2607A56AE9C550B91C5899EA731E034844881
00026,790500005,0,-3899307429950534509,E8026B61C94853720CDD1E95CFA675D7C084AD8A
00026,790500007,0,-8196428597909718067,BA0C044856D0D88A6B9253379A991CFD822C6648
00026,790500010,0, 5776087813143036062,C164E33028C859D91CD08123D214A2A9DB48A588
00026,790500011,0,-8909430510424881738,E5DC1BD20B81FACFAFB5CCC0D51B4DB5CDE65F08
00026,790500018,0, 6376541816566716714,F01AA5ECF4D3B5A50A4DC4BB8F4AEE91036027F1
00026,790500024,0,-7981852996941046403,8BC2FF5921744BF458DC7B88228896DC7DEABCDD
00026,790500026,0,-7925083663313886123,26D4EC94F56D84FA0B501D83A42261AA3D7505A7
00026,790500028,0, 0476924302228294949,1B89D8B3895E660376B369440607F3C2B24F7BFE
00026,790500029,0,-8847844745650605994,8E0AF4CBC57045388912A42D06F74C4B49B321CA
00026,790500032,0,-5642126420040176159,365184EFEA7A59648D6E3B3120669B7C82D03CB7
00026,790500033,0,-8221278318693120140,6E9EEAD78D2C49284B40B4459755AAB3A53D1B92
00026,790500034,0,-0625160006277432621,64341BBC1B50E1DDCFA279416481A5751661155E
00026,790500038,0,-7269550718292175241,478581963205638E5F4957B837B40DF480CFA6F8
00026,790500045,0,-0676296969979280499,BB0BE05D5B52CC2E1F0F0E531E0E06F6D811B4DA
00026,790500046,0,-3757069729884008751,357EE5B07AB54AE9244E9BD052062B2A05CEC01A
00026,790500047,0, 4121058793583270047,05033F68022E5DE4CCAB8C6475C637A765F664EA
00026,790500053,0,-4251810849186666200,66652EB9827BE19E9AFCB063BED5839B1EDED38E
00026,790500056,0,-4436565558043324306,119FB04D3DB3C78EE789A6249666F19791DC7DBF
00026,790500059,0,-3376697657997499823,A843308BBFF6A63109D03A4574DBCDD46982AD2B
00026,790500060,0,-7982693876490984464,D2B5343ACBE14284D7FDF7828D4818B044313E39
00026,790500062,0, 4276476907118521014,963F3937E3D0880602E82A2EA5F7C946D69DD290
00026,790500066,0, 1550031566488211519,821E201C9F83717ADAE954386CC4E6FBCB598902
00026,790500071,0,-2990315542449430603,7C77761E561D7C7A3F5A8FBA0C5B882793C3C365
00026,790500077,0, 3464211320876313858,37908531A25C00D1127D504F5092B83A65BF0C26
00026,790500079,0,-7752555705258359199,B5BAB13D276F8744F32BA6B6F14CA7C247370B57
00026,790500082,0, 8927403646819185728,845A217694BAB10FAE2101EA60EAD1F1ABD86CB8
00026,790500091,0,-7045790674694095400,9C6009397A1A51AF8C8690A322D80C69BB85AE81
00026,790500092,0, 3257595005055285793,4C1CD6A04EA316AB600C8BD670BB493232FED340
00026,790500093,0,-3352184296804235855,06CD12B4A644028205079A004ABB12A9C504A994
00026,790500097,0,-5277489383795566417,AA9CCFED351694B504AC6FB6D1473EE332F9D558
00026,790500098,0, 8577644175832863324,BCDD37CC5B9A1D015CDB9E55F9ACAC9B086AC992
00026,790500100,0, 3736860869843712327,77B6CF881E0246C6946DC0479037CD75A5902599
00026,790500103,0, 0233853952459857573,040DA70A6A37DE504C4F7AB37DD33B4B53ACEBCD
00026,790500111,0, 6555364576554429871,5D3DC02146646D2AFC582D168BA5AF21EF74B907
00026,790500113,0,-1850045694010509784,F59000C4DD699BE9C085E5406E6B6DBB859670EF
00026,790500114,0, 7945418103430286202,A3332B6C0A1606C45ADFF9D3C0C13B2F7678DC36
00026,790500120,0,-6167695084850354491,432A0DE72E79F593150E579BF01CB05873BA593D
00026,790500121,0,-8942632933863188010,F5B6D7E34659F00CDE4ED84F16ABED1FFA30FC25
00026,790500123,0, 9177594822535642226,5E29F3A8EE8FC1AA1EF804B83F9345E2C636F960
00026,790500125,0, 5701511086084546557,9BDB8E62292A7F926B1DCE6D7CCC5D1ABA8015E2
00026,790500129,0, 6886986414009658573,E77F9B1B387797352658A1B0C9831DDEAD731D9F
00026,790500130,0, 3033718573698801643,C6D2D8D4D13C26582F17D21B86ACFEA5B32B2918
00026,790500135,0,-3925574530631095822,4F0F54D1D05790AC736710D04EFD967F0983DED0
00026,790500136,0,-0820321890277270569,666EB6BE5C9DB328E5F7931065C8771CCD5E400C
00026,790500143,0, 4226320599831573965,3F78BDEAAD842FA0477C10F7E6A5228E5F662637
00026,790500145,0, 8735457216644711057,C7F86D48CEF53142D5B25DF76F21BEEE839AF436
00026,790500149,0, 7776956684956509576,579BC7F68EACB3EA0AD4EB6EC6812D68A312A67F
00026,790500151,0, 9097116367336588738,E558BE775DB30E662FB66F25A4DC871EDEC5F36E
00026,790500155,0, 3114963116219877031,6F76ACA81419044745B78CDA6A793E23E5050DCB
00026,790500161,0,-8304617882470898550,9DBE47AF89E96D3F3E25F3147A76FDF0BB7ADDBB
00026,790500162,0, 2184308841614193479,DEDDF6A34C935621BACB0E24463C636ED2BA1409
00026,790500164,0, 4732745992890968918,879F0B9B425BE3D573153E68DE33FB360494429B
00026,790500165,0, 5768490821884906020,D37990E48B3A0B3AC4EFB6A813BAFA0593FFA381
00026,790500166,0, 7257464987804108761,2051474AF806B172C9F70AFAE568B84661391D6E
00026,790500167,0, 3435928517516982619,E5F58049E8BF0FAAF4624F200033F654192C614E
00026,790500169,0, 1051091190364209353,CC125AEBF1CFD9A27AEC86012FEB747E38723470
00026,790500170,0, 4795043718131265352,381D8FA952EEBDF9E72B6D22552F8FD6913158C6
00026,790500179,0, 4052263627719393640,5CE657AFBD0F9DBCA4CA25B5F9D2C3545B01EC26
00026,790500185,0, 3004743714488521725,F7775DD84444A85FE4D130D9B28B54E0F773D019
00026,790500186,0, 8375635941299905979,6F6D196F1F961EDCF4653E6EB567F1180E8EEE1D
00026,790500187,0, 5661245914370086874,EDC0320A7650847C4971E3C7427013E7A8408083
00026,790500192,0,-5706203399102954993,EA85AAD46912D3BE93DF0A64F8F152263D5FC6F1
00026,790500193,0, 7745596687770536649,C7DBC1FE7D40CDF4893F78EA5C01FFFDBC58C14D
00026,790500196,0,-4932997422491527645,2FE905D94113C5425CC0BDCD207134C9AC775DA4
00026,790500198,0, 7237045793590271068,0AF0CCC7EE9201688A5124BDF076F73DB5401E00
00026,790500204,0, 4191943551048169928,FEF43121BE62A653AD111978B67AC6EFF983D743
00026,790500209,0, 6015414888266269043,E08E3BFA399367603D942253DE86F22B53AA9CA6
00026,790500210,0,-4331671981013854100,4EF55C13CEEC35BF97165559652F7A86FCD4F150
00026,790500211,0,-6959950854706358215,F0961772560AB2E38AEE57C6AB5140F496F84D74
00026,790500219,0, 4973140569559677919,C94525D20D4E162FFC71B06414EAC37437947A31
00026,790500221,0, 5068420806189543485,E92F1088F0A8FB050C6E8DAA75B21294CD8A01AE
00026,790500222,0,-4434727197944019788,35B53543ECF25B3FD15E73A73435BB5B30F9A3F1
00026,790500229,0,-7614636324193380319,08B44930A852E1C71D05F459568970D6B199EEA8
00026,790500230,0, 2553928495728158739,654855E1C23FA86697A5E433A55CDE5B37CB342D
00026,790500232,0, 5436015876649220523,456D456E8589A48392E931C2A7ADCB8663056918
00026,790500233,0, 8553712719712824771,889F97F97E6CAA4B2B3219E44CD6C7AA4C704051
00026,790500235,0,-3092916698907076847,0B4BD24EF9F9647927F1F41489914848593C08F8
00026,790500236,0, 8224066820107844132,44C2C55D196A4EC6ABA591CF7628B4418A170DE1
00026,790500237,0, 7138608965285696977,281BAC061B074F967DBD041A148CB4F08E6A98D9
00026,790500239,0,-8910071644028427851,645D707781302FABBF28E53190CE2F9137500A93
00026,790500241,0,-8903322886327175625,251C9C2DDA239ADF0675CD6484A960DF35008433
00026,790500245,0,-6248674972114459224,4C912EB3712E003F03D5A312B8BFBB6D410D7DBF
00026,790500248,0,-8866521187570567128,D3B9F30A9B78E5BB1CFD5F780148DA767665849A
00026,790500249,0,-5739350914682835594,B680D0A4DF40C17131D63AEF7620EC9D45967338
00026,790500250,0, 8888530234156693375,77CD49D27D0CD0E49077A060B6746C819881C61E
00026,790500252,0,-5228867713023523413,C5ED34631295F7E10E9E54B78382CD5B5107E2D4
00026,790500253,0, 3108836730537312807,1CFF12B2CF28F0D0381B3ED9615DD3A41F856C29
00026,790500258,0, 5251076765918620099,7A7AFCBDB7F58C82458BBB58FBB8528E26F543EE
00026,790500259,0,-1588929573153911573,D05E1D24AD2B1427061C5C90C5AC1A6AA62DAEA7
00026,790500262,0,-9181948448362319178,B4602A3E7A867BF427ED2A3A1E70F219E57A788D
00026,790500268,0,-7197557983461070861,304A73F4593D122C04F67F047401211FBBDCFC88
00026,790500271,0,-1820542636151988211,AE9F6E2A8B556AF5598FF0F543E27ECE13F9E900
00026,790500277,0,-4730795495017246478,FFCF03DF31E3B6E1FD444FE7FE552E422EDEA4A5
00026,790500278,0,-2005991953193189456,FD9C57CFD08647CFD7327ED4F1E54975D805D8E7
00026,790500280,0, 3860055697703421795,24605A45F0B9C9EDCBEB9CEB7015BD8213F5ECDC
00026,790500284,0,-4649728835053752735,837F214EBA971024255BED6671AD85CD6F4BD53D
00026,790500287,0, 8363313791720114120,3A091E381DA495BCD6746FED21E6ECFD59B744E0
00026,790500292,0,-7473477959264555346,6E21DC82204F74867314002C8180EA346D41FB7E
00026,790500293,0,-2631055815746772916,19BAF1049904AB126F25EC5D3F6A72B449FCBAF9
00026,790500294,0,-2221200139619942757,B26E6B8C131E42B27E93B12279634ABC461AC73A
00026,790500296,0,-4485599550745249633,E9C8A25F73BED79ABB3CD972C384833EDD50EA1C
00026,790500297,0, 1666438054394351740,F94E4A14BED7A3A7A571E6D3A473F031902245AE
00026,790500299,0, 3346824572222532293,B254F16F04D9CE4905420E0DFA2AD41AD3E6B5D0
00026,790500300,0, 4077710159860145795,C309026D4AC3B0880E49781461EDACFBD5AC09FC
00026,790500305,0,-9098311264071987817,5ADED7280739879896431ADDE4CCB874AC5C4E90
00026,790500306,0,-5994594342066093568,9713C4C87813E1FAFEF2AC5FEA74467DD2B62735
00026,790500309,0,-9193887305104019019,900236F4186D860390EBED48BDB92744B4BF6A84
00026,790500310,0, 0244504911458857031,27D2C71BDB0F683F24B881BA15A908C91BE9FD5A
00026,790500311,0, 2678394889622931087,3DC816A3D987FD9E108FC722D693D45D3D116F2D
00026,790500314,0,-8489976314470240449,DC2DDB368D83F00A3582E0EB9DD92A42A2FD94E5
00026,790500319,0, 7762436366114069574,18E2CED74CB53A340278DCCBF353DC154247D24C
00026,790500324,0,-7719609958117078011,4DAE116D7D4CE0D00AB329847F75302CD26685EE
00026,790500325,0, 3532728186556707035,5BA8A0B6898C3F69F306D644D518E76A324366B4
00026,790500327,0, 9032982021199400801,12BA52E54BD0F777E5D4394368E1238D05B602BC
00026,790500332,0, 6421058525721821678,3A6BE8995ED2E4CF2967ADA6B1B34B4A82262D15
00026,790500333,0, 2407535755814159638,EC346D7DFE3442AECDB4A5BB5F2157F913F0B0D5
00026,790500334,0,-7686011925960287920,E792C7A99E5C98DC6455006159968A349A66A723
00026,790500335,0,-1319280250163577536,59714CAB65DA5E840CC8DE50B340487FDF18FE4B
00026,790500337,0,-0380119533197911619,1CF2C944DF6A80E0524C0B39CD855D2CFCA59807
00026,790500338,0,-1685084011709163934,013951F72255C7D26473D9F4FA39F9B81070CFD8
00026,790500341,0, 8433314409053193970,AE0C92D2676634E82680317320FADA568C36FDE7
00026,790500343,0,-0982144503280844949,00497B027AB4E7B7F94344734761E960B8E2DD3A
00026,790500344,0, 7681558251500086849,FCC18C888AC9995C036F06DD2B9D4EF3E9778733
00026,790500349,0,-0217148355006275545,DAECDE54C1C756D7EE8402B0919C7A68F242A6F9
00026,790500350,0,-5800364458247402965,F0ABEEBB34B606B5A1EDA500B4193A9113545FC4
00026,790500354,0, 6188196902148507899,B795FF84FCDC88815D974453EF12A46805F54F09
00026,790500358,0, 4809711465349586725,53964CB225258D6965CF494DA678B4636A11C365
00026,790500359,0,-5315649432410887110,3BA3BB28C6C436B5B37A69CAA54FE95113F04AE1
00026,790500368,0, 1583800779599270810,8C6ABF62C52AA3791C5817F1D24F2A9039A35F6E
00026,790500369,0, 1251709617957188921,EE04553A25A60E68669A8559C53F10F7CECDC057
00026,790500372,0, 0979045772304975894,6871173109F794E911ED37060E396271C62A6DE0
00026,790500376,0, 1266967914148943554,95BA6E58976C00344CF59A33DFC676FED59CF8E1
00026,790500377,0,-9208674451859506044,ABAB5C40F16E1BD2AD29A42D2D108E3FB427F82B
00026,790500378,0, 3017539579854823665,A7DC08D932F446A5A42592B36101D7EA740D3085
00026,790500381,0, 1298133863528501352,0969A5E289AFCCB4C4B1BF1DB6D5ABCCB4EB86A7
00026,790500383,0,-0946455642631159619,B85DD39FD2822D5D998F9FBC4546B3EB29B70517
00026,790500393,0, 0555790940194673415,4391F5987190BAE4AE59982BD3E72A2B6F52BA3B
00026,790500404,0,-4558890422077446702,4FA8D73CC981F00252903E845E76D793CAA50A2C
00026,790500407,0, 0389569718622655166,4D8C36335009DCCAEA7D396ADF0A3CD348044BAD
00026,790500410,0,-1252733978771026540,2A770E41E1B441B24015C1A348657923B43BF1A9
00026,790500411,0,-0249636544463444462,FAF0AE50E57BBD2CCC0CE9F370EC94D510578D1D
00026,790500412,0,-8695320183039571064,FE6619BF934EDDAFED0AF84A955B8DAEBA6F5806
00026,790500415,0,-2132705125119889858,6C589D6933C2D89FC2EF0035F7BCC01548232287
00026,790500421,0,-7870932178041974879,FBD8DE6E862111BF6664B019F2583F1D1B1A5228
00026,790500423,0,-0301223258116886363,F7EA064E45B1372CD1A11AC5C51F8346F380FEF7
00026,790500424,0, 8574570907708131231,6E60E5E71F2042BB121C868713A9E1D929B23821
00026,790500427,0, 5166321164391695999,B2DDD633E4687777059684623F19319FED86811D
00026,790500429,0,-8871726145749102501,0A8408CA845B1D2A68925EC3ED49FBE22AAEEFF5
00026,790500430,0,-4286678934487661549,7CCFD892C3EC7C8D424349B105F4E27DC10F9185
00026,790500439,0, 5172882329981454246,A3A5D0DAEFA3EB800E26CA48C76857E2C903B24B
00026,790500443,0,-6717528602740108436,485D52B337CC107514CCAE14639DC4E4FAE7A255
00026,790500447,0,-2999575898862234564,5A36C636EC3F8FF7613198CA2252732C1938FA99
00026,790500449,0,-1917684995222655731,B3EAEDD02592A2E0B5E5D94FC24314FC4026F14C
00026,790500450,0,-7407616267118117879,F8BF8115FC513EED061EE315BD02C26FB1085EEA
00026,790500457,0, 3983323487823377378,B08E024CD328A59124630F4A03711BCC9FEFDCBC
00026,790500461,0, 5702255460212800442,5F5EBEDC66F1DFF206A47D965AF401EDB63287C0
00026,790500462,0, 7731581665538992428,907D791284C3B9760B949A4EEC2295EC2E6811DB
00026,790500467,0, 7938100042743027396,1D094644E24E6DC83F073C37EFAB15D8F3CBFEE5
00026,790500468,0, 6529088354635500682,D6563B3085FDFD2412E1FB05D4541972A951F8DB
00026,790500475,0,-7167018037717169096,877F4AD658748807C8675D51FDBACBBE838571EE
00026,790500487,0,-0918870874184754432,542C94ABF1F0D9380083F4E525A68A281966BB4A
00026,790500488,0, 7286629676604706286,101439B095956766D3BD2E3529ACE72C97DDB779
00026,790500490,0, 4222623792426916938,28818F0FE2938A37BDC783659D392304E3841AA1
00026,790500491,0, 8712309172192645998,392D284AE168525A61F74ADD9900406FBB5642C1
00026,790500495,0,-0063427003077739380,6F86BDB0BC4C9A5995FF417FD721C53E1C6C6C37
00026,790500499,0,-0871983506009048615,602AFE4E3D0A79B017651A8F98AE8772A445DD2B
00026,790500500,0, 5855475179508436092,4496396849821FD1E7988D1E073268DB95F9CFBB
00026,790500501,0,-7178147841780477455,EA5F39665604B7499CD07745A57618DED0C1E9C2
00026,790500505,0, 0732715650974621204,52EFF1935C9A7A635C1B5739BE79DAF1EE7ECFA5
00026,790500507,0,-2228934193171923111,826BBEBC3EF6C37E14C1A5BFC92DD5AE3ACE51BF
00026,790500508,0, 9022420216173025895,BF076E7FF9418D2762C164FD77EE98E513C5E258
00026,790500510,0, 9090097342697788627,300B0A6229A3632123CC5510BB1AF0E5B2602CAC
00026,790500511,0,-1038850118419473437,B36E1787E636BB3FFF94A699B8CAE2D6E25CB9DA
00026,790500514,0,-3794177326159720072,E765678BB2434DEC4D9EAA25BA1FA0EEDA1A4B05
00026,790500515,0, 7589126661570292497,D86FF79DC4835D83FC1C946A8760F6BB2566A22C
00026,790500520,0, 8217142007825966963,81D591AE8B133DC329A9069FC7A404D6A7FFA6A3
00026,790500522,0, 8160655876163567965,E0F549EF607E20A181702C78C826A8EAE8455F0E
00026,790500523,0, 6172315066497004563,231EBC47E57C77EE5963405F8917A3D02EE4F804
00026,790500527,0, 5536279411749146145,E63FDEDF1768A3023F3E9877BC45C3DAA227D378
00026,790500528,0,-4874172931828393569,CCCC8298108CA57B1A061A93243BEAEDD4BA5B77
00026,790500532,0, 4007950098641755353,84DD438D4F3BE63C66FF88FC276FA79E4FA1FC50
00026,790500538,0,-6974733442256747593,68FBEFF0BC6FDAE14BDE226F6523B3785134B87C
00026,790500546,0,-5844066566663383220,E6AF94EBE98F34D3AD807D6EBD595AA9F4372825
00026,790500547,0,-2001939851190168133,104C1E92BEF2327AAB1DAB6BC8F20286EEC7F058
00026,790500549,0, 0272722071014137285,883B0FB62BEA6E2E8FA96981FA5B1B910696B3EF
00026,790500556,0, 6619463671497441486,2B79D05EF91DFD65A450DDD07B7D4B60E7B3F0E5
00026,790500558,0, 8033828033898448349,4C0CD410A98C1677C7C1A4D027CFE0C3693DA7E4
00026,790500560,0,-6356217718911321810,430E60888E567F47CBEF996237D3849536DF0048
00026,790500566,0, 6775891590758865935,5D6DA813ED2246852368AC8A01960683ECD3A9C9
00026,790500568,0, 8121179959865259096,A1DEFF3F0FAF66017EE925F4A4A65A724D49A81D
00026,790500572,0,-0403714670410444673,838EDAADA1687C02599CE99147073C670E2C3145
00026,790500573,0,-8685378358949638275,6A380CF3EF6B53720278245CD026F1D02D6D3A65
00026,790500578,0, 8891301885170872209,BB879210774A7B5D7D6CDB1C791E91177FCA84D7
00026,790500580,0,-6779195770267678270,56977A54A97402C32E8E5C797B9E5807FD43776E
00026,790500583,0,-8409617107731680793,38EADD1FDD28A746B85945480C741BEB6A09936B
00026,790500589,0,-6781748838956590110,FE7C615BEB4BFD896CFF953D5FD038FFBCF5EF42
00026,790500590,0, 8839556248145703324,F3804DBFDA3AEBB90458222B1876AFC66A0A3C55
00026,790500597,0,-5781319527364044487,20FE31886EE619D5347B5E84D01DD6BCD9DD4B77
00026,790500602,0,-3120900322562767300,735771FC3298E36C29167AE8F8635220C9F10519
00026,790500604,0,-7504802104014623052,960D37D801B77D37D014F965CD609B44E7A425D5
00026,790500616,0,-0367657928572834411,6A1F3F592D064C352939AB6637B9DB6980CE4829
00026,790500619,0,-9213000926632935406,7DD05487977B027CE797940F29BEA3C8727F984D
00026,790500625,0,-5298487346788470226,528C8F64F178A07FF07BA34D106A3E4851C44AB0
00026,790500626,0,-4201715803812450062,79874B9398C03B13F2BAF22878F4B7076538CE44
00026,790500639,0,-5785778682828822538,566C14798AE1E0CCD3CED1101E220DEB23F547E1
00026,790500640,0,-3515415038383743678,CA627915B21CF83871AE33F3A79669DF3C8FEFFF
00026,790500646,0,-7746714081850072416,67A0281AE0C41150E8606A34C121DBA99B4BB4D0
00026,790500647,0,-5232273480179727712,D67EE849A6AE4950348BAD0BA9536DB808D18D4A
00026,790500648,0,-6329955074112538287,D753BA147B8AB2B7229E511908421693A915B240
00026,790500650,0,-2372410315635843958,0ACE36E1F9CECCB41239085CFEBD97725609DE8A
00026,790500655,0, 4573327932920282623,90F469DB687516CCE3C3B9E4DF9DEFF4FFD67F17
00026,790500656,0, 6449568652183916901,E860173F647B3DCC0EE68FBCC7A172FF1EE60E40
00026,790500657,0, 7352743358053308216,45105F5B5E6E0845DC34D166044BB6FA99AC6097
00026,790500659,0, 3032070251277317103,76C1877D2560573927E0C21B3FC040FBE8C6CC22
00026,790500663,0, 1895583387225070622,AA2110E75E7427122AE9AEB1BC00B46ECC8A0336
00026,790500666,0,-8559391740566118827,9EF43937496C64211B20566AD3FD9BD634FA0CC0
00026,790500669,0, 8842240920509017795,FF0EDA2F02301403DFD5716746F100C4AA7B58A8
00026,790500677,0,-5165936270227850253,690B65D471579177546E86C2883B0BC21571B168
00026,790500688,0, 7019975296152168595,2C4D07E09A3AC4FDAC13CD7B3322AB905BE9FF58
00026,790500690,0, 6876479232201776630,97B72337B7DDFAD15FC56F46CB4295EAEB252B8B
00026,790500694,0, 1138611432875454546,630365077D6BDE6E54FBAA027C4E3A8DC91F753D
00026,790500695,0, 6208059477196345741,909754EBA784E7B132D6E367F8830C271C06FC1B
00026,790500698,0, 0371265358769719888,74748B7925BBB10C9959E63943EDE521E200FC96
00026,790500701,0,-3400987245297506891,25D99FEEA21A8CC685C30DF6A227265EE42597A3
00026,790500702,0,-2450413990619655977,6334D89405D7CDA9E8DDF7C6A2A41254667C065F
00026,790500704,0,-0461505463501386801,F708C9A666A3491844B9EE08EC01A43B43E727FC
00026,790500706,0,-1788334933910998405,D5169F81B110AF8A60B55250395B1B5016CEC49F
00026,790500707,0, 3291730265519449935,A0D82270198B067E174A8A89BA9D43A3DA27ED8E
00026,790500710,0,-6358447524203161612,B1F149F55D7BE88E2162E2616A22E8800A3A250C
00026,790500711,0,-8857677125436868708,873722F92266F0DFD02DA678F57791F7E7D492BC
00026,790500716,0,-5648654158763760169,08FB4257792F8A4E8DAF095ECCF78D793B72EFE2
00026,790500717,0,-4047902821512665153,5A59443C7107D23320A1B5C99534A7E82E602211
00026,790500719,0,-7436931056721246099,3C0B23B87082E7A85378399D5FC06D1E661C0426
00026,790500724,0,-1347244476935615407,02017AE3AC2EC30B698909496885933D9BCF1EC8
00026,790500725,0,-6946138237297785324,EC9F175EB20D998859F5D50B7F070DF0F8113DD6
00026,790500728,0,-6204755684663474695,E43885723DB2903864F1376C6FCD83BA86D9E450
00026,790500731,0,-7201385429722164203,C3C7764B2C08940533FEF75C1DC50942A3D5AE91
00026,790500740,0,-4670679196918429257,DB8F92BB3BB8A14CACECE3159DF134DC9AD0BBD1
00026,790500743,0, 0470572037146368370,567018C624D2EADB7DA42B5DB3C2D1B4BA9C4B61
00026,790500747,0, 0226722971996828378,D17D3AD3EC3BF8D404B7F64436BFF4B866EB898C
00026,790500748,0, 5181475577072702349,F386F08B802CA1B72F55D6FE1C102FBD1DF20E41
00026,790500750,0, 7050760745706855336,1235D6B038A35E282C55D6819373B18E310E6F23
00026,790500759,0,-3032851578549393823,DAF02ADE1EBD384AEEB38AA678CD8CE750202FA1
00026,790500763,0,-6668874406276598210,E967A1DEB7543ED7A5586A18CA5B032954E83388
00026,790500766,0, 7317454215612435372,5FEFBF2AE5145BC50812DA5425F82B84534C07D2
00026,790500767,0, 8721609297666810837,FD06CE422B1572F467DC7603E22EDF40631D647A
00026,790500768,0, 5821784838326383832,5476F2C60C28FD594A9D5CD129B55CFEE264DEB2
00026,790500770,0, 4235674904332954337,AF404DFE1293196BA91DC587274A4A1D4EF70AE6
00026,790500771,0,-7218899403412508154,E97F64BF4BD5CFC32DE334D21F79CB8565B17578
00026,790500774,0,-5155994212039564989,97597A967959F3B34CAB0F071114F3C3DF25B0BC
00026,790500778,0,-1013749412264571933,3376893411EE864D9662A377D0B5C75BF2EBDAC7
00026,790500779,0, 0112310803368811140,7A1B6448C3361E47FD7BD8AE2E2B762BFFD20834
00026,790500787,0,-3286947125780192563,F2C551276E83E8D2575B29AB0AECDD9F73F2C38C
00026,790500788,0,-0527436505280780928,ED27D3CA96A88A7A3403D0BB4D7355F46744C689
00026,790500790,0,-1826351991359630504,376DC7FF82BCE3E34619CCF32333EDDFE8D3FCBA
00026,790500791,0,-3794745317636925900,D08273B6D91F9BB5E9D34272D96324C07D26A79F
00026,790500792,0,-7443510187132529123,797820DC4F4D01E4411EEEF25192982BB394B5F1
00026,790500796,0,-0732384562864322396,DA56FDA41E947F0FD4B50D77F086EBBA4E026502
00026,790500798,0, 8869137453667326590,518D90A4D6873C6CE5C9D3A545098A4876F76D43
00026,790500804,0, 4951289287704187481,45ED6B2EA9CDD262071762CDB9FE62548AF803B3
00026,790500805,0,-4267276208664195297,B8091996BFAB67981157614D6F296D75AB583711
00026,790500807,0, 4332262095779659030,E256528D4E77117120C1F9CF55AEEDAC39EE15FE
00026,790500810,0,-6410049824962703222,CE2E524889E3BA5A9931AAC52B827C8AAC65CB38
00026,790500811,0,-3791531827806420902,F64BF7C3776828DC1DF6574BDC4F2062E321E756
00026,790500812,0, 0042282317208275717,7EE84FDCD282336C9E0617516EBB789B46657EFD
00026,790500819,0,-6616440842400968532,C77A3991C492A4B2D4262F3B3147415D9E266A7C
00026,790500821,0, 8641003142054024738,C5258C7787A4A2EEE1FECD1BD6463CAB9BE4A8E2
00026,790500822,0, 1643711576249808714,CDCA6B04B0F13689D54A381568E4B99B060A4386
00026,790500826,0,-6090636480857421545,116C0B09B3594A72C4F1D9137B5794F6488F16BF
00026,790500828,0, 4013092387083663553,56031A4146A310205E3A98D37D3C6BBF71CBD4F9
00026,790500832,0, 3703177213417078585,0D22BDC84F3430A3CC9872468A80C6B3C00C69C3
00026,790500835,0,-1907103983976633913,8A2EE8F2D131BBA1C5C820E34CB060A54F6E91B5
00026,790500844,0, 1801603437668364907,FBA642A8B809E29C58723192F3C20065F61950E7
00026,790500846,0,-4631173805419048667,19F3F3828D13092B8F8C38D319ED8CCF4F9517DB
00026,790500848,0, 0208570502078296071,9087E52E261C9D942E0423117A398AEBAB394B24
00026,790500851,0,-2749790217587382692,F485985D2C845B7934329E599C52C31362A64FD7
00026,790500852,0,-2716766022860860197,496F26908E4A37AEDA4DE5350043430D47A5CDA5
00026,790500853,0,-7327065850856930612,75ED302483374B754C4FF7808BC1AAE128547AC0
00026,790500856,0, 0723031738947313319,45E5D73FEA578507BDE30810B767575795B7FD32
00026,790500857,0,-7983788860790516781,2F33C488B0A233A771A208363C5511ECCF73EBFC
00026,790500858,0,-7797225908084333198,5BED2A96DABF8A05B0E0A8EB69F2FFE310045939
00026,790500864,0, 4073301490037206912,FCE4079F8C958FBBF880821FF39A0EA89738524A
00026,790500865,0, 5847234203939938066,F53929BFD84868F600AAE3F00C44D5C9A834E4CC
00026,790500866,0, 3584237419643843442,FA0ED10BDE7A69F3D5EEB954DC4C4BB8CBD5C23B
00026,790500873,0, 1923661887429888434,CF0263F2DF09A91CA37ABBAD4C22511366C6B924
00026,790500875,0, 2810866296737586258,8B04274BF342C1AAF878079D82ADA88679FFAD5A
00026,790500883,0, 2999963234741069944,730A93F15445DA42AFFED6A1FA2918FFB2D7F2C2
00026,790500888,0,-6344310690641424834,8AB3214256BCB84B0DEFE0690C8C511ED1C5AC33
00026,790500898,0, 2105413406827062228,5B170A52B8331D3E13725E5CCA2F11AE668225D9
00026,790500904,0,-1118789416862887022,3DC6C71151C3870E96A4A496EF35BC073BE05EA8
00026,790500907,0, 1646158654245090290,F84D752FD490C7DA6E49B48F296A1B63E4CC7A83
00026,790500909,0,-1424000076662658492,7AE2DA39395C42DFA443971BAA78CB15BB2E2036
00026,790500915,0,-0266374575750368844,8CEBBC81B4368B45500DC4AA9F98F4FECABCEC4C
00026,790500921,0,-7447191452181926387,610B1828F49B8491B513BFF39BB11A27D11C4B7E
00026,790500922,0,-4456832162754385599,FCA6326F0F6FEC8F57BC878A822C30FE18FB8A2C
00026,790500925,0,-0911274532327586293,B894F254CAA1387F78C7705F81066421ADD1A1F7
00026,790500926,0, 1151861075813980875,D0D9EC71EB9517DE6EBA4260F23CAA705F8D7480
00026,790500938,0, 2625801826490591459,54777B3C0077291F5C8B7104A07D6F150A8F6A64
00026,790500947,0,-8613132509488045256,3CB908510239E8DF3E0985EB24E6368B45DCBC21
00026,790500948,0, 7852142637546531886,4500883CB6D1881C8F95749EF2F5BBD933E67178
00026,790500950,0, 7001463162879086694,6852E38400707A3A145FB1D7176B979235ECED10
00026,790500952,0,-2512133874286736584,8184614B4F8FC237B1135BEFD18D882BC170F7CB
00026,790500958,0, 3159059554389960341,220D0641C3FDCA54E283B9C452C1318ED57F0A65
00026,790500961,0,-0484755948867241791,E86843E86F00ECBADEB079F6E3CE5E55B1B8F72B
00026,790500963,0, 6477711053502512760,6F03733E8AF91A207BBA61B37957642FDB818DF7
00026,790500969,0, 2281989671984451046,E5305F6C3E477E4BAD5B70BF7E43E539293236EF
00026,790500976,0, 6624800573470123838,17F8D32A9B86B65203B61189E23ACEF046811954
00026,790500977,0, 1859911350145049323,67A6D01AC696EFB0F89ECE9DEE6BDC2AD9CCF170
00026,790500981,0,-7029178181730468481,E5B1564B171719E0C4B9F718823FD9A3F0833FCF
00026,790500983,0, 7576112063032866665,64838E422B521D91ECF8572A54FB9A0EAB3D4AA7
00026,790500987,0, 5853556439534184891,7A82132A8960778F2E3CB312764EF9C936AB998A
00026,790500989,0,-3690834246484510256,CED33FAA59A3640001564F4EC5C0E8F79376D1BF
00026,790500990,0,-1624322678469214088,A6FA270DAD6F0294805686D76F7561ECC605484F
00026,790500996,0,-6841137275478283460,E08BCE11881EFE4BD5850A7876B5BA7D2419807C
00026,790500998,0, 3557247095289840690,50419B8451354EAF7BE9D71DFD0CAAE42069BABD
00026,790500999,0, 1250763476302069321,B9A9DA40472B46628DFF1B9E34355811CC0E66C4
00026,790501001,0,-2067799796345224086,8CE0415051442FA776594C8587AF5F9AB9F70654
00026,790501002,0,-7974971219801847893,EF26C6B4633770C2CA67CD465B503968D02DDC72
00026,790501005,0, 6928502123497666656,4A071D9E8B19D8DE9C03E420A65CC92E060C6D3B
00026,790501010,0, 3963849877673600734,9FC915DA4A07846660CB0188043D8BE8B6B03080
00026,790501011,0, 3287230488910622031,AE43FF869AE426580F8601E8AA4D24A0A5AAF6E0
00026,790501012,0,-6549924333762891763,BB18A30189C6A33575B8A9A8272DF50CBBC5AC95
00026,790501013,0,-1066005001215551287,94F515C238A47D766D564B7CDF1DD343B15E4B32
00026,790501014,0, 5603908722387104933,7DBA2C13019215601E9557B28659759277E9CC1A
00026,790501025,0, 4429318130596875862,F6131F08CB134DB40CE686C3767AEC962A0B0B4D
00026,790501026,0,-8094944793774790915,DB34F8B8E2EE36AECC93728864AD57CCCA28FF6A
00026,790501035,0, 4115972784223068754,CEA218DA37B9A4FE200C292B8636D983E986183E
00026,790501039,0,-0095089591629918112,7CDDAD940EBC4D4385C996B90D993CEA7B8C8ACD
00026,790501040,0, 2393016702001800857,F462EB430C64B03E53CA6ACC4B5535C8A42CA99A
00026,790501041,0, 7349288909598219689,2E4B978F2CFABCE45D8F84AE441032CAB6E455EF
00026,790501043,0, 8916174418595393240,AFC85527A6C579F6B050B49C6B65846BBE3A6BED
00026,790501045,0, 3880297038662139744,61BEA2361A94354A9B8C83AEF31C83BF957A235B
00026,790501058,0,-1588838365489956840,04337D55765AA80524D1E2F05F77E26DEB361C6D
00026,790501059,0,-4450893643073009654,651A4C9507B7D0287022BC759543B2C1349BD0CD
00026,790501060,0,-4016566121809969967,6DCEF9E6EE638E6DF8514651549C48B93E7CE6A3
00026,790501062,0,-8111984493367770422,789BF3AC5E204A085F18FDA7949D05D73B0FC184
00026,790501063,0,-3310266577077796852,73A4BB5FCC13F0AEF748206A09366D1DCB7A9E8C
00026,790501064,0,-1249216960232923231,7D629B576DE5C52970E996A75A910D4F95804EC2
00026,790501066,0,-0121737644863380046,A88944391DDDA129F29EAE022AF9386836A844E3
00026,790501071,0, 6731259120920724826,C7381EB63715F2D5DC0623B4966732A033B4C501
00026,790501076,0, 2546116271197863198,F6015A3985DA42159BD0EC3749F7E054CB989510
00026,790501077,0, 1843509338798899725,4F71D8036A5C1A3E00E2FF393BABC23F0A255C90
00026,790501093,0, 2625582280992013085,33C8F322E597AD41AA34D0DAF32DC355C1F81404
00026,790501094,0,-6115829428033486764,3DF3E74234C97526F7DEEDAF134C83A939196D23
00026,790501099,0,-5743056885566017831,FF24AADF46652F69B82D245B48412027464EFF74
00026,790501113,0,-0016489694316250830,CC91A32EFBB4A2259AE5FCBFB149E959091C1207
00026,790501115,0,-7137860521676133272,7CEBD94B9047828869A5A08F306EC813DA89769B
00026,790501116,0, 7655513450487450548,498EEA45F5CC84F6124BC79F3223D87F8EB9DBD7
00026,790501120,0,-0576037466262730797,6E8F7ED1DF8F360EB25EDBBB4D2D78DAA53414CA
00026,790501124,0,-2768159694838692990,D68411F0D2249DB7FE6738011A2F5DD72C776D55
00026,790501128,0, 8318098868247275468,1CA315928CF36EC3D1257CEB2E141732706DBD35
00026,790501132,0,-1263411659323010045,6954BBF896C362F80FF8ABDAC19C2DBB30F90D66
00026,790501134,0, 9153644510869258670,18B61360CC48777A0BCD1DB8B4359D5987F4BDA1
00026,790501136,0, 7271326113870250523,4E332DDAA002CF8D701FDF3CC3B2FEFDEFF9A885
00026,790501141,0, 3402837820003788561,4366B24796593BD7D3F2271B876C8322490C002B
00026,790501143,0,-9109999236099386865,CF8503C85246EB27229DD7C2D67C19358E18ABF1
00026,790501147,0, 7038051599132626236,D5F26249A9E311993B10969492288BEEE71FC7B7
00026,790501154,0, 3384619664770155164,B5E858DA54A260159AE905B8EB3CABCE58E9C94B
00026,790501155,0,-6187216022836579176,8E97379F0BB5BA167A68CAEB99C0341829A6EBC7
00026,790501158,0, 7910877287716033410,348355AE33A1FC1A5CC3E84F709D7E1920C0B695
00026,790501161,0, 8934145812393732291,02B05C48F22BE33B182FAD60C88CEE2E647D3AC4
00026,790501162,0, 6800710870225920376,548D6CA4668028006E1500839FAAE67F1E2F7311
00026,790501165,0,-8561751152122584587,F30BA4C1BAB85079DBC303EECF01142B80C027FB
00026,790501166,0, 7710188831273080640,61B46FF7C4FD15CC8612E515BF510A283313E18C
00026,790501167,0,-0925560962741799813,45EB72E36D80AD14185BBB0C6721FF2640D9C06A
00026,790501168,0,-2942842214866178577,E211960D6BF1B789AC8A945F35C20C3DC4F6A93A
00026,790501171,0,-7342778627661935981,C612CBC1806F45CD1F27FB8C0F8EFFCD2ED3FDF3
00026,790501177,0, 2014895115294292416,2E77F398055C8763F03652BE20E7D037B2C563FA
00026,790501182,0,-6949383311170619443,E2AB980D0983E4E263992352EDD58B5163544E8A
00026,790501183,0,-4729218465178811904,7D914F9EEC2C71FF070BC6B28023DBDA05D33CC4
00026,790501188,0,-8962108143129617571,3F4163BF25A767A0A28ACC4DBD42E5301A56F71B
00026,790501189,0, 1317795543277645820,878F3ED8495CE66D0EA4148F3BAAF5F15E9C1C6F
00026,790501191,0,-8410276874555640810,C503274EB592586F5C29F94E66F9CDA2239497A3
00026,790501202,0, 5820186001922071508,9B833D950188FBE00B41767F6DD8E220F936B7C7
00026,790501204,0, 3104923824215841571,3B5CF532677D429B6F6A52C2E81CE50CF67A68E8
00026,790501205,0, 2862643664567919436,EF5B8F5D0BD5D285701101CB9EF74BCE471E2BB5
00026,790501207,0,-2346277864545892834,34331FE9CE8212A05049A7ED08FD9F80F96814E9
00026,790501209,0, 6461149979384832233,2828D1E405D2535BC8AD828BEC9046B4D3D1421B
00026,790501210,0,-6662709621064994565,20AF99B6F91521144DEC4B8C2326CBA019DF70B5
00026,790501211,0,-4056905526582369946,D853A6CFDFB9643878017BD4B361A9A6F6B311A9
00026,790501212,0,-9139624013709450093,3670D89E3BCA02C5B2EE1784133C8E9A4F3E519A
00026,790501216,0,-3013479040812059064,E07B1E138573FCE560E4C258AF3773290BD1CEAF
00026,790501217,0,-6148988708423649263,FA27F9965C6FD283249498B3A72DD1C1CC83D4B3
00026,790501220,0, 7732570371416928222,519B9BE739C0C2AAB90DF5FCC703AE44F0AB6E5D
00026,790501222,0,-3264078590652801526,754B4A001BDAF05301EEB50EB150096949D4B47D
00026,790501223,0, 1806046246187358873,E1EF2023331C24A80DC6BE6798BE85FFB8E0CCA6
00026,790501224,0, 1117991542849775757,82A395DE97ED85EC542F5EA94F8AD01DF7E7951D
00026,790501227,0, 5958492677821752632,06ADBD0D14EA2317142B20968CEB261B82FF8ECE
00026,790501230,0,-5370280144762188617,C8DB7C5A72127F6A6CC8644D6127BF4E3DC01D4D
00026,790501231,0, 6965156290894315928,1E79E2B76996A585E6FBCA4EC53A929D4B0472EE
00026,790501236,0, 8806874501484801787,A513EC5E8FE054CA40F86128978968E0C51F7E26
00026,790501237,0,-3667011318650538603,AE10F42DD9274D49084F0402EEB2AA4AFD97DECD
00026,790501238,0, 0460679893549797808,F33E0B1BFC24566EB5ED1C1D9E0705DA5A275FBD
00026,790501242,0, 0432510993823847540,E6E67C18C11A74CB377135BA74AF2A4AD0F263BA
00026,790501245,0,-8912756108009644163,14FD7EFB2EC88D989F4FC79EFD6748A99C186563
00026,790501246,0,-5673616721502650039,57B1604C426F9BB9FD7005427EC498086EA2C929
00026,790501248,0, 5055192592380488613,DC14F7440D4FA401F4AED7AF5CBE0CD3B80A6F2C
00026,790501253,0,-5532122348413661025,E028001A6040085622184E6F19F8A5BA1439C030
00026,790501255,0, 2324088555169584462,C42A8F14563FFB8FF027E5FE643A5930150626A4
00026,790501257,0, 3605672656149784775,61EF715DC3B0BA8E1797E018C95761B33222FB55
00026,790501262,0,-7350306469225200984,1B23DA80AF7F5ABF96A9D8C071AE2EE145ED0159
00026,790501263,0,-6461182412572764202,F9720697DA10DF29F71833FCE764788DA53C87B8
00026,790501264,0, 7391336746666510969,98CFE9F69B4E6548FFD37F4D858CC76B2D24C360
00026,790501267,0,-0457515017214636308,E9ABE6ECE329DF1DC693C14F732AAC1EEF12D877
00026,790501270,0,-4310744246617974577,DC2B1DBBE43AF4C2BF7F540ACF3FD1CA48B51B1C
00026,790501273,0, 3451379883740666901,F9969E1086C15C2D526F43777EE8B13A2420A2A1
00026,790501277,0,-2053180938101752156,53BD8C22273FD81C1DD5D4197BA312FF8B70A007
00026,790501278,0, 4377794276957728969,5C41A930D2A1280595136260D4C7795E954FF581
00026,790501279,0, 1176444875701614728,4921966172757D86573597A90F444B80483474F5
00026,790501282,0, 6024916588959212048,A43B633EEE2BC02AF95096F6AC1A50C5006B6562
00026,790501290,0,-2718318089658647176,8DDF7821E8CE61783425BB270DEBE1EFF5F94080
00026,790501291,0,-3191564700878271733,EC12CCBF11DA41B77A83AA618050A74028E0E0BF
00026,790501299,0, 8925184299962345873,5815E635A15E6B6546A6EABCC0DA6DD8EB2E5C47
00026,790501303,0,-8505087820526943733,3C872DF01D134C38AEFC2DECAACCEC5061A63AFC
00026,790501304,0,-6644597083267563601,2FB67AA2545AA06992E95176060B5A53DD468CCE
00026,790501307,0, 5410373366113825118,549414315D13A704A6146303B23392AB283FF4C6
00026,790501308,0, 8879158223624736975,3E5C9E554E962EB7826FBB33DBE51B288597F492
00026,790501309,0, 1833127291073252040,22233CB296394870622F49298BAD4DA22F0FFF38
00026,790501311,0, 8240058101081613960,CE6D30FF1094FF41809E7054AF27F9B913670590
00026,790501312,0,-0531955386339937982,33CE52D6C4EFB4E9FE90860946D752AC7D79D881
00026,790501318,0, 0708072467716220854,EE41A0BE5A94062B30D04EAA2C77AA0C22832FEB
00026,790501323,0, 3882836918329016063,60194B9EEFAB24F5999B63AB45370373C68FCE70
00026,790501325,0,-3057579808729196687,039D57FB6D1FDC5B8ABE171FB3548FC38ABA8E46
00026,790501328,0,-0773584663429764181,A478588ECB8F0650F0EC78EC749D03798D141DA0
00026,790501330,0,-9168960987005183496,28023C5BD9A714C709593B08D5A6DEBBDFD4A2E0
00026,790501334,0, 7066596288458697583,CD0DE69D35776BAB7B6499577BAF9E9F83497FCA
00026,790501338,0, 0056946311016824026,6195B716878817E4C9C54697F8E0F7ABC85BAABC
00026,790501343,0, 4428812113602121503,FE128521973AC2EC90053C299EE986CDC9ACC672
00026,790501344,0, 4440821566085180124,4F072A7477E4F312CB39636099A7CCD67F16EBB6
00026,790501345,0,-8062711461078261977,5627DEB254D5F2392BBB6FE89AEB2F142EDBA9AB
00026,790501348,0, 6489463693862356436,8380DB82E3E981ECCDBCCADD49529B47A5C1C27C
00026,790501354,0,-2130217914132494447,2E3025CD0458C625BD6FF1A26273D31A37FAF8B6
00026,790501358,0, 0695480276359517101,3CD04D3E794D8DC4500CEE41C4CAA5852AC06143
00026,790501359,0,-7232846696083730928,3A66DB1673D5F5DF7754184CBD8102C15AEBD679
00026,790501362,0, 5945693048564559503,E3CE9291BD15D5F1B5F16309F94C491EEBBC40FE
00026,790501364,0,-1632248578093765284,DCCC147D02CC4C2E1267C35BFF7A52A01A3B408F
00026,790501365,0,-4840759243597853461,EC607A70F9F17507BEAD2197E8BFEFFDB691BDA4
00026,790501367,0, 7112401707294931767,9718E1DE84A1A8FBB617BA693F3AC50CCDCC7DF6
00026,790501368,0,-4938198088844357486,245A20DE0D555604AA54C987C7F7B49EBD07B644
00026,790501373,0,-6504188661500091396,17D7DB54009A7145693D46238118A60E60E3E722
00026,790501378,0, 1888991179987379088,2C8566D0954358446B05D347A41AD4BE03072E50
00026,790501380,0,-1511990812417248290,776F493A51399EF6DCBFB5990E49AFC701EE0E9D
00026,790501389,0,-2559996282060236243,AA32C6927DE7A5A32EB751AD20A08A69919D5E13
00026,790501390,0, 6136781580046015300,D627091EF3196C171F0A4FB4106B11A2E5251139
00026,790501391,0,-8560339043313936311,0D139279CEF8A469E7ECD779EC4B94B025B93B23
00026,790501398,0, 7300662189728782041,30F42D44268343D8EBDB248DEFE112DC95B658D7
00026,790501403,0,-2978162350505844789,446025B56AE999A09A11BEBDA668CDF6B25DD070
00026,790501411,0,-7559790697967035507,D29D60C50C0DC590456BBE487E92AD52EC3F673D
00026,790501414,0,-0602346727851240518,3D33ADF6285ACFDCBBCD64D7E88121C48A213371
00026,790501415,0,-2971094112733884856,3CD7E3EC6AC00AF8CC3A7668C2AA4E925FEDBBCF
00026,790501416,0, 1393852630922555518,B7DC983ED2A98085928D15C921A87007BF76FEF8
00026,790501423,0, 5244840315213442529,2F0EDE4CB1DF75D059EF5DB4E591CE65CAE25F79
00026,790501433,0, 1056510112092336277,D342A2E558D44281B5B03B059371E6D428F56169
00026,790501434,0,-6743188232987461540,436A5800F3B4B4886B0E9F041545BBA091908E81
00026,790501442,0,-0858763535392855495,DE77464E14C7C6D7F6C57E35CA27E84EC460B9F9
00026,790501447,0, 0569092836741454117,F16E2E150048EFF6A33C43C869EC06693877DDEA
00026,790501449,0, 4230519395323864682,2C4C174E6CD9B8FF53E606F12C70C8C92695C129
00026,790501452,0,-1268729958830867900,8805AD3FDF44C20B41FCE1FCB927B5D1412EA143
00026,790501460,0, 7352204399192228156,7236ABD75E17DBBCFFA47D51D85DFA1074005979
00026,790501461,0,-4162405151472960961,A91DB53EDC25299704F43FEE703F9E7FC749C520
00026,790501468,0,-2786007532529383828,DBC74D3375A41FDC953ADAFDB42C3FC7FFFCB526
00026,790501470,0,-8219142633319657878,C722B8E4FF4DAF293A9A2DA4F291B94D0217721E
00026,790501475,0, 3581926789028281973,B3479A58D45315A9F3F7FAC4C8B60006E4DF2BFB
00026,790501478,0, 7749467252085703693,17BE74891FD45EF8A43B5EE2F950C4C74EF67A2D
00026,790501479,0, 8197641878236436672,FC55AF1C3DB2FAA104FDB964C041018E07284C38
00026,790501481,0,-4641872870764786791,7BC9614EA1E18716821A8C4214A0B5E16E1A1FFC
00026,790501485,0, 8862033976828641432,53FAA4E726F8A341216C182D590D2AF3B9B11BFF
00026,790501491,0,-1489315109224435691,842E03B19BB70F31EE670C771B9E350D14715B63
00026,790501492,0, 3964733346732672831,CB6731392BFF8924D4945F182F0ACCDBBB212984
00026,790501494,0,-8181902915383194522,9F229A91AECA4F175F18577B2C9BAC5013A79F7A
00026,790501499,0,-4469492142275792422,66C23D9C6E64B369990AC6D0F24316D5FC7A2A2A
00026,790501501,0,-4060389692407662334,091D761F0122A29C5DD66A75D1AC4911A25C1D74
00026,790501505,0, 7212772844053486224,F68451EA1FC87BB4B70FF194BC86404E5513999A
00026,790501506,0,-6136796357306455123,86BA4AEA4F1E723324C9EFEFE31376E9E16E113C
00026,790501510,0, 0284888574220234846,536DDEF86FDDCB2952549752E828F6CABBCD1508
00026,790501511,0,-1287711276762050867,E5980F292CE53B71A880B6DF6C65F91378F893D7
00026,790501512,0, 7493556663173450327,E2D2A1ACDB93080797333D3E51BDC34618CEEBD4
00026,790501516,0, 0744200907184511868,C38418C37356FFA923C555EE03420F0EEE16B890
00026,790501518,0, 1699990473843814831,7B2055D34E60489145D4E55A1FD3A54E6BA078D8
00026,790501521,0, 5095111918430586647,5BC7BDAC0C53D89F8A21FD605FB658027802F720
00026,790501525,0, 4957670975205399667,37E4999880B374AE0E756D7A24562A0535BE3136
00026,790501526,0,-1884437611071334959,EBB5E8D11EE6228406D5A62C772B1B6C2701E6EA
00026,790501527,0,-5579387190815483828,566FC48D27585AE59847089817A1F15833B2989D
00026,790501528,0,-4609273698727733155,1C926CA00A96334D8BD3D0AF99444D11F88D1E13
00026,790501529,0, 6595817608515520192,66BC914C7E0737766578FA818F618E83688224DF
00026,790501530,0, 0581713265468976913,36F54AF475C77C13DB214108BCB338A48A538B72
00026,790501532,0,-1424691290781484663,A1AF862D2AF71F4C15C4D5257233864E72D06A3B
00026,790501533,0,-2679000316661413760,A07C36978342A95C4A3D4E5CFF5AA7BFA31BE270
00026,790501534,0, 8816828132610644857,8205C7F280006FB29C23EBF07FCECEBFD19DD5F3
00026,790501541,0, 9146548095970460203,FCD80B9998381F513E63AD1D2FF9145E17B60A72
00026,790501543,0, 3207682850805201285,E8A21C89A93686CF6ECD021FCE366D662444AF78
00026,790501548,0,-8944579197994728349,CB7FE7FD9D569924C7437DBE698F0A09AE82E6C4
00026,790501549,0, 1866668323809855135,98E2BA6C6275949C02ADE6D01D5B2FCA73999BF7
00026,790501553,0,-4207222641700598717,C2606DA8056BB87ECBE2343C74BCBF5ADB4DE138
00026,790501554,0, 9146968990887200967,A9A561D227021D0775953A0CA6DB6897E771DCED
00026,790501561,0,-0902330500793971459,56952C817545F8F8E168122CD9203753D145774A
00026,790501564,0,-5164613937353489434,67B49B882A3EF01423E663CC01A9A6B8B3B75C06
00026,790501565,0, 0630846802269020602,8E3A058AC01F0FE14EEF4DAE7FF5947073849E7D
00026,790501566,0, 0022920375170982037,7BDA6767299ADF3425C13290BD743FF0233EFF0F
00026,790501567,0,-6864523061517428279,6963D6704E0ED614D8EE02CAB5E6FAEF9FED4363
00026,790501568,0,-0037944545182857731,29AD7341E4494242644E42B38CDEA926E6950C0C
00026,790501569,0,-7013689399689189691,4322B05E8B26213DD11A866BF2C4AE55097883B6
00026,790501572,0, 1746790555490233287,258DF1E0C6DFC985F2F4E3669CAEB6D7224534E4
00026,790501574,0,-1433553149618933337,5F8B7DD98C9EFE535242BB279251F21FAA6A9C7D
00026,790501576,0,-0561132280397958228,D24DAF09F284FE81E2CF2F41565A925B303FE99C
00026,790501580,0,-8345959468068947987,9F9EDB69702B8FDF567AE1B909C7835CC233ADEE
00026,790501581,0,-5828313322797285861,27FCDC228098FDED1692BB8D83C2C018E42E3E94
00026,790501582,0, 7239408762888763646,E3DACE6E8A232B40190107E2C5DBFBFB7315355E
00026,790501587,0, 3751446923673294395,0B3C2D2D4D268C398BBF8D5474BFDDC12A6D9C8D
00026,790501588,0, 7138363615451689615,DD9D920B3F7E16C6E22F9ABDDAEB6AAAEC3A53DB
00026,790501592,0,-1509935956214941193,FA04A90904D55729506F742FD69A0BBFA8358DD7
00026,790501605,0, 6847334183358113731,6D8B74E27B4F90197338B73CB21E43A9F4898BAE
00026,790501609,0,-2107973871690816910,3727C0D6B811B7BE6C8E10785865C868EBD7A4A5
00026,790501611,0, 5350736570273557749,170207D21D1DB5AD86CBAE73A180AA24F4CBA666
00026,790501613,0,-8799584479398917326,5AF9D4B3E85814A553889A0C0E1E7BC6B709CBE0
00026,790501616,0, 1818676766414319701,15DEFA052B00FD8F78260ED7B7A9C322A897356B
00026,790501621,0, 1922737916788384068,8F755ACBC762774EE00E00E5C7DAE9580DB5684A
00026,790501622,0,-5556815282347020704,5180289DA089A295494D57069794A54E79EA1BF6
00026,790501624,0, 1554153063402437162,BF9A2E5D373409614CF3182FD8E0154CF4D80D70
00026,790501628,0,-1589516940887119884,CB1806AC23BE3ADAB81435EA8FEFCEBCE9647DD0
00026,790501633,0, 0569269091734867181,2C9E7434E58E7F877741BA6D3EB3C75458DB6CFF
00026,790501635,0, 4796426028956140381,96F8DD9D65E62E101C473E0571670C7B3C786E94
00026,790501637,0, 5715353836590118712,508F27CEF6FFEE37537E58A584B09D10613FF9F7
00026,790501638,0, 3811654220544229347,A8C657DC3D473BB590646B79EA82EBC9CEE6B00C
00026,790501642,0, 2734295990675372344,E48AA69CD88A9062B73338AA60C26647824291B5
00026,790501646,0, 7155499365751781849,8402F853EEFD9936C6643004B1CD7C971529FA24
00026,790501650,0, 4916161860871132350,D1BC4D1BDD88307B80166B8153ECAAE8533DEF07
00026,790501653,0, 1085212088578039627,09DED27E3BF6A3E46B0FEB4BC57EA2D472EA2694
00026,790501654,0,-4439282079217407489,448FA081BCAE49BB5D3EDBC9E83A2B22DB7CAD5B
00026,790501659,0, 3847403246567421458,4C7616C5B9AF7CBC653BA2E333D15C674B5267B2
00026,790501661,0, 4308336614459287112,F9AB22F66770B8EF2A82286AADFDB4F29A648176
00026,790501668,0,-8741362766016159919,C1A5DBE3753E63385491AEA1BE585D21990B6AD6
00026,790501671,0, 1145196049019399401,43C913B48B9842A92788C4AA61CC84172694DE6F
00026,790501673,0, 0192988598222229146,E032B42B623E85D035F05A9F50F13F7E8F05811B
00026,790501674,0, 4452498476257158161,70FBA5DCAC2D715046BF99CC69EF20A4E7D0852B
00026,790501675,0,-1394415947661611752,5CCA219212DFEEFD72AA638FAD08038CDDD94666
00026,790501678,0, 7180057705754777694,EFAF346CD7E3E7D8A75F29DFF7DFC56B2FA4AE63
00026,790501679,0,-2893068020759643506,0AC8EAE4F39AA4B24ED8DAD28179D057124F75B8
00026,790501684,0,-6343424913033909460,8E2BF98BAA50A51957C444F381CF6CD1E38230E1
00026,790501686,0,-3857205841292436496,1EE0DF98CEB3E215110216343B7275F0E2B282AB
00026,790501688,0,-0035471320774070004,E7CBA98BCCF55F5670444DA6A7C6DDE7AB5498FB
00026,790501692,0, 4166879860122820089,BC2FBA86AAFDE14EBC287C493213D6181089BD51
00026,790501694,0,-4851689974669017208,22D324F8E7D0F14B6D4CB1025D0BA4C802B5B081
00026,790501699,0, 9167239875836120891,CCF3C4FAC30101477A8DD5FE73F082B2682E9870
00026,790501704,0,-1768099705302913533,AF93806F9338E981F3C75DD4038C5A44D18EF0D0
00026,790501705,0,-8138956928922137491,C4308458CE5A1CC89E421805A073492FF18204D8
00026,790501706,0,-7746156422835367798,8ED828AF40AC1947EA8DD325BFB1E2B41C54CA8F
00026,790501708,0, 7281198638923408968,3B295EA24309AB37AE2C3FCF3BAC4FCC95716F2A
00026,790501717,0, 6560237793153460938,AF4026E7CD4F3FE41E5A613A4165FCC8B54B2669
00026,790501718,0,-1793876046427237371,429801F674244E5667B451C2072DD01CEBE55831
00026,790501719,0,-5454746033638247347,716F7136DE426547489AE876E79D1EBE598B56D4
00026,790501722,0,-7808629657116096761,C1E7127CE5801B2E4E9DEA88C102CE8B9E281A3D
00026,790501724,0, 7466398453686221193,68B89C1F9141D1957681758D402C21640A9944C7
00026,790501726,0,-8890486156851500581,EAFEC2514A724259ED2F5F4F3FABFA986CF43324
00026,790501730,0, 1363248305237742348,8CCC1D047F9A4EC77A4A40494A988A2CFD2AE7C6
00026,790501731,0,-0575819460095898085,6DEEFCC733D614C19D9C6A87990649267A55246E
00026,790501737,0,-3476266469347430422,6890405681FDE3B3D43EB38D448BAE5385318E78
00026,790501738,0, 5291498237827312565,03C163B085D22CAC630FD54DBE7E5B4881CE3334
00026,790501739,0,-3537061745881656786,C38136E889515C27898D724DF5DE703FD1BDBDD7
00026,790501740,0, 5684528582121417632,89F486B9B582609A10C9D73F31A0E7F6F86F960C
00026,790501743,0, 6251931551412694636,DBDD3525772016312194A1967A39A7A4530DCC9B
00026,790501745,0,-7777705032880063102,CF4C46A1E42A86D1C679A1023BDC4D5971E588A4
00026,790501747,0, 8200949693872838990,3B938F254751341AE537E25E864A42159FE7CF6E
00026,790501748,0, 8450916573285045291,F3FE1423A18A874616BE5E50870490AA3276D55A
00026,790501749,0,-3094605897740841850,450E97A5C6E3FB23A2B6A51F37F2E2A646C95CAB
00026,790501750,0,-4017823258722859803,F4659BEA8D064B225C92D62E7B4C3E6D01270269
00026,790501752,0,-7226753791265863471,07CCC8A395CF33BF270741E261CCBAF22B6579AB
00026,790501765,0,-6352164075452673659,44A07800D5472D828065C664B927D1E3BA91A22A
00026,790501767,0, 7448266099093415510,9B66E483064F725D450EBB112C662931B2EEB933
00026,790501769,0, 6083935929716583887,1046B4B5E0810B68A2FAC9D43FCD13FDBC45E752
00026,790501772,0, 0382981000998868569,9811CBED98E7932F11ECECDCBFDCD86D9059CF2C
00026,790501773,0, 7219205249339210767,5F7EEE4AC7B00761A5A90F8B832AF7A8E7BD140B
00026,790501774,0, 6693249288623725117,EDA0C7706EC27F56C7AC7A31AEB912C690A92EB1
00026,790501776,0,-5560936761112197385,81AFEA12EBEB1098C08975CD9B5772A99F3AB487
00026,790501777,0,-5368142194786020288,B24FCAD36734F3DB7C07CACA3203B7FEAC8A8AAD
00026,790501778,0,-8503284717814546195,ACDDE086D0C66E09E826CF78A40C4A80D5D81F80
00026,790501780,0, 3502580042114353698,A0E38135DF7FACB2CD32AF28F433CDD18843AB7C
00026,790501781,0,-4835519876181263851,AA8CCAAD7D0057A34CC51876D97EAD57FB99D702
00026,790501786,0,-4737727345574625285,F359714414C6E32F09E016F3651FA86E6E6FCB90
00026,790501788,0,-1056429749188493149,D880C0F9D497C5DB61B0FCB5EB4EA8AC7FE3AB25
00026,790501790,0,-3160479867334187575,0127D392AC36BE66CA7F0E8FF5966456C7F140A5
00026,790501791,0, 1648155736775911254,764634C3721CB52F1B952B38615D82D9C339B3DA
00026,790501794,0,-8289060457526872789,FFF1043EFF46BC7BE0EE8D831B7D37BCB5CAE388
00026,790501800,0,-1129992454044671363,0944A4D87FE904D0619DA851E4512F5F426AFAC1
00026,790501806,0, 2131216441732671813,A6BB8FF9B1978D2AF64C859B08127CA9B9811EE1
00026,790501807,0,-1423811656470495749,D79E37F8E4783BCA81ECCA9366C6A377E731768C
00026,790501809,0, 2966309422871971139,BF9EC6F32EAD7EE26BFE41F601C5606BB28F75B2
00026,790501814,0,-5274218650338392345,1CBC0301F6C1998D077A175E17C8D27749712F14
00026,790501816,0,-7569349751951268432,E364DC315F90905617F606F02D01B98C09F4D469
00026,790501818,0,-0874262691077007954,99CD1015F7BBB6335A9A6214BA204C526037CF96
00026,790501820,0,-3333949139504530020,CA009051660763586A8E13042E0C98D4EB207E2A
00026,790501821,0,-3974877667152398889,6BF817A04D23A2B9EC6BD9FAD13ECFC5364AD89F
00026,790501828,0,-0751437154269585490,1823BD241CFFE95EC97037276A4D24D9441C4478
00026,790501830,0,-0968156946537039210,4A81E8F4EBB178BEF79778BE755E380304AADBE5
00026,790501836,0, 7221047379133131941,046B706BF403762FBC2D2DE1D4D4D4BBD7EF9F33
00026,790501838,0,-8276394639119655810,F2A1AC072B5E3A3E7D4E356592C08E328B14FEC2
00026,790501842,0, 3898393847900770598,AAEC4BC3DC05A3053FCACF9BEB5E2A30DFF40F27
00026,790501843,0, 2061381823104839939,89AABDC7E6435EF4DF7E99EF462615D9430F9F9E
00026,790501844,0, 3061406911269911762,40FEB2838222469B675C34FD76761E74CD178CD4
00026,790501847,0, 4902335455628356736,C077E232D87141FC1C62E04C8774492B1067E3F4
00026,790501849,0, 7282497989519560913,05AF01C8FB1FF29F425BAD2D071F11D1CA3A5460
00026,790501857,0,-0876587090103849143,7D01702FC68B819EFB7C4B2DF9EAF3ADCBA348D5
00026,790501863,0, 3867218110268078696,7295CCCD8F88DF7D35FFC461CF8805854030AA30
00026,790501865,0,-1020087295407000254,2BA4B4BD1D2B61D0FA485AF49652DFFC91A1411F
00026,790501867,0,-6702306284654630334,A4CD65F69F858E8D7E42A7CF1EC7DF3B8034F9C5
00026,790501874,0,-2067989674641551512,3E6BE3DE11C9B9D60B331857AF643FE866768905
00026,790501875,0, 6933615951984833146,C4689B5D20030BEEAB3F24267A2AE17F7BC47C9C
00026,790501876,0,-6690701031839803779,643341B375A287683A725A4E2F14C9AC6B3A9BDB
00026,790501879,0,-8569685871623255017,333FB2BC8F57EE523580DB1B9D1F0C95CF716420
00026,790501882,0,-7209198264759786703,7F9CB19F252CAE57FF92D905D55C4CFF53D9C902
00026,790501883,0,-4165572871707994593,CF0DFE1ACE4AE5D1C01E11555609DC1B48FCDAA6
00026,790501884,0,-2334691290538216453,D280175919FC1724CDF86E63397EA1511107F830
00026,790501888,0,-2724199563501166150,04819F9361360AF872D192F53F138F6FA3D0D697
00026,790501891,0, 0990981465278989334,FF8519EA162FCC656F7D69FAF2D0DD39DFBF4EC1
00026,790501899,0,-8317985702552672246,C99F96C32A2EF82AEEA7624ACF1E13C32B865FF1
00026,790501902,0, 4930671863937751772,91A2B5BC350C1AD7AF718CDD4CA11F07A9589B3A
00026,790501906,0, 2946478663275437918,E5522BF8745EA238FEB26B02C3CC6452BEC279D8
00026,790501907,0,-5000120977733208894,78050DA5483C568325D82FA2DBF19744EAD087E3
00026,790501909,0,-2458682110244649809,A0CA9855A8FD2A3515EC330E1A8DAD074A94A045
00026,790501911,0, 5851729189496276323,1C52A7DC104EADECA919D4E7BA4AE8948B6A958A
00026,790501918,0,-2983613013474553473,B76ACEB6AE4E4EAFDBEE0075758BDE0F63C36FA3
00026,790501919,0, 7344810581230061512,8AD43178BB4388D7340A86AF0E0D425F69D25163
00026,790501920,0,-4469815378219409802,B892692915EF8CC5956311D9732B070AB3B7B776
00026,790501923,0,-8166369344357085720,20DD053F0482505F870E5397D808CD07A2CB724F
00026,790501926,0,-6344036307712516674,7F31053FDAA00E56456C053D9AF2E8BD17F71DC8
00026,790501928,0, 8804302536738551831,F46E0580D6106D17236BAD3D993C8468942E5CBB
00026,790501929,0,-8839394727601321220,6255D71BBB1F1DB95B9E7A1EDB6A4F3D292B428E
00026,790501932,0,-9039562237194823496,1B0CA2EC9AE6896BAB77D41E1949FE3075BF7092
00026,790501933,0, 8969276269468755909,BA12B5DE8246A85C16256280C025C7FE84FAD1AB
00026,790501935,0, 8757345069607655838,930D7581944A3593AA82CE17823F8BB8C55CB04B
00026,790501937,0, 8918388248353298076,547756F9FB3F5690F753885937E8F74A1D746288
00026,790501943,0, 5122357238758466255,98F422567BC7B52ACCC7835CD1D99ED43872B693
00026,790501950,0,-5909881241399150205,0B3FD28A871212D30906A4844530899DFA69A919
00026,790501954,0,-5671078708899100913,0895A644F92379C1AC6D268D971CEC14440D59E8
00026,790501955,0, 8821790918672881138,D47B1DCD2FDDF280CD2F36C9CC68A7F43323EF90
00026,790501962,0,-0600881920040916654,0008731BB3033C7DE23E67FBD0C96262E4D4117A
00026,790501965,0, 1878992602415267718,FEE0895AA2AAA8BCCD25CF2D04368D89CF6EFCDB
00026,790501966,0, 2713078078559244451,21417EBE71E8AFCC7689415A39486BED29E3845B
00026,790501978,0, 3325950791131530030,D94CF4AFF513ADEC65CA81CF147BE9007246511D
00026,790501980,0, 3218788671181008091,6ADD4C6465343EDC986004D66E2FEB97AF528551
00026,790501982,0,-3100972552076287117,C4BCFBA5240ECCE76C811CD73934ED579CE12ACF
00026,790501984,0, 1434967298827508831,143A0C79A66CEECEDEC321E4067719F58225C76C
00026,790501988,0, 3806749424236065266,4713E225C2E347FA3EC824FE1E7D8198DABA6974
00026,790501989,0,-0894300234600340492,28FA45D609DA56AD18CCDD29BC2B556D30271F9C
00026,790501994,0,-2094735331344090940,F018175D9B881DAFC66A23B82AE4537D7528845F
00026,790501997,0,-2521601969329488907,60F482D30E5DB565860F8E930796EED3ADEDF202
00026,790502002,0, 5015877294798029626,625ACEF25B7CFC0DB9ECD1DA5578F3387DC7F7EF
00026,790502003,0, 1774375672601518990,4F6DB21A28DF2B0BC42DFF602F41D55C487840CC
00026,790502007,0, 7593017534162840625,BF5F82588B7CA6544D345F7591190628C36A38B7
00026,790502011,0,-7590927862817470170,B4EE2F76769F3F2772D5C6A8F5A2DECF28433F25
00026,790502013,0,-1609648422175158933,A224B68A783F539C05F7ECEB3F2D98DDDC2005D8
00026,790502019,0,-7133923225105233053,3150984F504CE54FE0AA2EBEEF12FA9965947971
00026,790502021,0, 8615520249464021302,7C5F11E70F36363D296855BB2EE9E2A25C81D262
00026,790502024,0,-1450538487767262578,C26949466DA0DDB8130F6EDE6AC28CE66B98DEF7
00026,790502025,0, 6196389532610817245,EF635F76C7BED407E09F7340E12CCE5CB4CAF59E
00026,790502032,0, 5959708270836076154,C684756029C39AEF2CAB1A67AB37AD4F790CA83E
00026,790502036,0, 1910691839976334622,95C9C6A770F325AFA54BBDCC430C21799151261F
00026,790502039,0,-5917045966469453863,6388A923BFA9C5AA0343F4613F60031F1C507B9C
00026,790502042,0,-7483396475347728434,482761AE2A7A527A9B72B02A93AC4665E34BBCF8
00026,790502045,0,-8955338439441746962,EB3E81CDEBEEC33C8C8E863033D832CFF965E195
00026,790502047,0, 4024977286075439313,C9C38649ADF6FD60ADE91F7234226507E466A4D8
00026,790502048,0, 7855970424116883040,CB842AD584529A60F5D8A378E8DD9212CF04024D
00026,790502049,0, 9037771956485230249,61971FE30684DD82AEB988A06CFA7F6BBB8F7A6A
00026,790502054,0, 3648599363610767235,DA7D93918ED4BF5114818483F00AE4C346A2E2B9
00026,790502055,0, 8315271434583021588,85916FBA956C76E01631724A70B731E086F3931E
00026,790502056,0,-1609135043543777588,CC451690F07A438C0647E6ABE2E7E7F9D5B9D039
00026,790502058,0,-6068660010031518586,92508614BE8EE0F0546B157F10D07B7AAB03E38F
00026,790502066,0, 1920311779727020789,B351BD4CF64BCC717B7205A31FD3A442AEF1E37E
00026,790502069,0, 6529756871691404819,92938E28FC03EBCEF2CDAE362BCDF8C51FAD0675
00026,790502072,0,-8525829547964644997,E48C488789FA8FD319EAB07D479F93C9D3863524
00026,790502073,0, 5167989523012381660,30A0B71D137779D7766BD5DDA4FCE1A96F963902
00026,790502074,0, 8988781263966874755,109DDDC5C2CA02C5A681D09B43D0A76F928275E7
00026,790502075,0,-6226459980456927070,7398E61071642B384CE7784A3F4CF124FFE0D9F7
00026,790502076,0, 1899665045617218763,CD29293C3DAC6FDDFC8494D1D2D1C618481018F4
00026,790502077,0, 5812841836389131851,9FE4C31112641215DE97C7C6677D2F25C00D8A4E
00026,790502083,0,-3975337722009173988,881CF5FCB223BA5B735B4136F0BE04900449D4E5
00026,790502084,0,-2665925957558773288,C1505819F690B0AA56D4101008E062B91258256A
00026,790502097,0,-0098736202706400590,27B3CABA33BBB89318D9AB6D1DF08DB3F73761A8
00026,790502100,0,-6398405857290471792,8053C2F1A1E8E64A4782F39D91E4F29D1B0ED4DA
00026,790502105,0,-7206275552219333245,970F1D7C84C425F3BE2F6A7B81525A7E0FC46D61
00026,790502108,0,-1968789996508971362,5E84CD080E2AE70FE2C18E84F480D681AEA648B1
00026,790502110,0,-4707779618488298701,7231986E940612E3D67AFAC0A55E6ADA891783AC
00026,790502112,0, 0357758117930963184,1A4906FA9C8AD2BFFE2DE5E1B8C921DB0163EE0D
00026,790502113,0,-6466219492912475619,B13B1E6E9EBB34756245C8867289161AE69884A7
00026,790502114,0,-4746306269423718292,603FA470EB345890B3760643484F51F27AF9C7DC
00026,790502117,0, 0959295057173130249,096F4B09968EE6024969C143C8DC34C72B88355E
00026,790502122,0, 6134432270946647631,716B4F0B61E37D429BE65612207069B93C248CBF
00026,790502125,0, 7611019338599714629,9AA0D6A93FE5C3A0B65393C41C614194828D11A2
00026,790502127,0, 8824506323058291526,66D45D6DF4EC1E4E5E8BFE9F72387E2DE5EEAB70
00026,790502130,0,-0407571380881620891,7CEFA375985C81D1B4BE5DD6E4CCF3D56C072E02
00026,790502139,0,-0995663255730476239,177089E03B97D799FE93021C6119391C09732D35
00026,790502140,0,-8168817842656952539,C9DED71A3C9DB9D0C389810400BF444BF339424E
00026,790502141,0, 8006740866546943177,5AB6A850B71BA6A71EDCC8A4328451771EA5CC07
00026,790502146,0, 4774881106364175298,095D47164A5C39C4FBF73671371ECB1B713C976C
00026,790502153,0, 2460257488032283456,517887DF8E6305F84458F0211CFCF41E21280B17
00026,790502154,0,-2744847375673507793,928B656E2D3D83EBA2FDB480A3E75EDDEB46C2B4
00026,790502156,0,-0070927920971575751,3C50F7B789D852FBDAF32D78016473A5A9A3F0B7
00026,790502157,0,-3205857667977495389,8D2CC255F52CD695CEEC4E66E764056A4801A1FA
00026,790502158,0,-8185369043565165430,2D7D79395AFAEA5EEFA7026B37464E1930DFDC7B
00026,790502160,0, 8639678734549078764,82F6D2E90E7EB8C44DDE8F5B1F70E3063295ED15
00026,790502162,0,-1018305978999408329,73214BD61B2F1DACE094603004FE31287C39E76E
00026,790502167,0, 4146681005659390968,449B6AB6ADA046B5B60CDC84A0372191929ED194
00026,790502169,0, 4122161443158738728,2FF981610CB1FF090086945372B40AB08C94445D
00026,790502176,0, 1164160123172983249,8DFD1894125231F193CFBEBC15D90AB4A25C67E7
00026,790502179,0, 6105457010816067623,CFCAE1449664F01B68FD18650687168FB681321D
00026,790502180,0,-8711814185662666339,D741D4853ED9375A47AD0903EDBE8E619976117F
00026,790502182,0,-5569835556969763550,5A1E9EC4AB3941B70308AC1CF4C2F1CB5783729E
00026,790502193,0, 8973449425107943203,9748A6C40DD47F774758D9A4CF5B2791796154DE
00026,790502194,0, 7066314949008618982,24199E08FB5FB7D11CE2395DC438D5A22A0B1092
00026,790502195,0,-8081533354150198810,045BF2A86675C6A9807DA84C4731F59BE0F740EE
00026,790502196,0, 8878881033426839657,8123A41A05A1B24FB13CBA9D94D377A6350B1B6A
00026,790502200,0,-4210656350753073989,83902B81A86540E21CF11425E4C3F9D0F7DFBD3D
00026,790502210,0,-8061333184957887559,3D7A7454A13E0286FF27B21E27DD425867CC7870
00026,790502217,0, 0216681301509714979,F7FB5B94E662132D220452400B6CCCE1D0137DC0
00026,790502218,0,-6519291814941175616,4F9AA1DAA07FBA9B1501FC2E61513723E7D64A63
00026,790502221,0, 2291730013880855285,EF24535745C88EC05035828A0CF56AB77758C173
00026,790502232,0, 8980970687737540209,8384D539BC228286447590B43EA7B06F7D891F8E
00026,790502234,0,-2173650386101856402,AFB4EC0A79D09CD9AD290192C284540AC1B793DD
00026,790502235,0, 6672812011219078054,63129F7532BE65B140F6521AD9009CA8614E3AA0
00026,790502238,0, 4885405767727660443,6AA18046910C0EE87B82B19D9986806562C8D05E
00026,790502244,0,-5625155547313082091,24BCD8350960C4E72F783DA8C78182258531396E
00026,790502245,0,-7477378863440198723,1F41756F3B541743493FB9BFDC841EC400104127
00026,790502246,0,-0212121126525766857,C52AB75495828A967D5D8A19DC46335B9C047C7B
00026,790502253,0,-0258995787886309127,97FD7F7F7BFF5A9D744D384464F157B1D1C5EEC5
00026,790502254,0, 7114451253332905463,9622D27107D905151B769D5D850F88B25BCB0FC0
00026,790502255,0,-6653253115246469319,7C5B2FDA2E4F48C0513F3960BE5FF2BB4112423C
00026,790502258,0, 2307168035454949177,91768982EC003A34F7AE3B19D56859C7678923A6
00026,790502262,0, 2330459999288086980,01F8B0695F4979643C41D051E462AD8583DC57D5
00026,790502267,0,-6669432107671284517,9FF4A48159ECA88A6AF62595E8CD5F509D2948CA
00026,790502269,0,-2390112235335764006,CEEC9CBD795D94DD12A04D710DE19E7F29F89D6E
00026,790502271,0, 8971243241411820428,DA29A1A6BBBE70BF8C71295056A0F5E947600EA5
00026,790502272,0,-1749170110441984774,6687CB31BDC861BE70E78D14B86A7EA50333B778
00026,790502273,0,-4160395461070101582,833314BA3AA6B157D366C54FD6390B791658782F
00026,790502275,0, 6860165335533722478,E5117795237B6D2B35241FAAF74684287DB66225
00026,790502276,0,-3115679397401746742,F52BA5AAF735690AEFC274EFCA4CD172B2BDEAD2
00026,790502279,0,-5437313951944786866,8366A6E919932FFB969AECBD987F17816FFC82D9
00026,790502281,0,-6951267054016404722,114017C666620F52BAABFF595BE2DBC704D3A304
00026,790502289,0,-5324095257217343977,BAA830D4770CD2A4EAFC338198C99A6783E9B4C5
00026,790502292,0, 8463882493416234898,BDB523CEB045F285FF91DD9B747A6ED2A097B5CD
00026,790502295,0,-2534474408171602464,433C5B12881DB15FC9CBA3E4A866F846BC777139
00026,790502297,0,-7683518682890592401,024A4FD1E04E87D3459B3A3A6BEBF8F2D5E2A159
00026,790502312,0,-7443100143713306208,8B451650C3DEE8ADFECBE291EA52858B0436ADFD
00026,790502313,0, 6934459939733334284,DC8502B9B391CE78CDFA8BE50CD67E66472A769F
00026,790502317,0, 1229984907040622463,D9F52C999B427CE749047D715E94CFB33F2C838E
00026,790502318,0, 0807514190787001546,6B6000E4AAF5308FCCF0B4B1566A5E0462E28072
00026,790502319,0, 8288845407012163904,436863388F9C97C03311828758CC2DF1A82163A1
00026,790502327,0,-9087246326402116996,5E0623D7FEC5EE74D7D1EEFAC06A88E1BE6838A5
00026,790502328,0, 5665212171904349517,6DBC678C1D3C83317788CB1F8DE8C18DA53F6211
00026,790502331,0, 3181258346845326886,3E65607F7AD69CBCF4405F84BFE2858360D32CB8
00026,790502332,0, 4918381700324090575,1F9CD5B545DD418F758FFACA96E5A128BE1E4717
00026,790502333,0,-2900586416708589472,6BC31F35F37A08C51ABB50AD7E10758400D8002E
00026,790502336,0, 6382919218861850772,649D1894DCB44E66DF43411B3128579A4BCC3C4C
00026,790502337,0,-8102208463672097593,BC32B78C70FF73EE3C11E05FF8CBDB3C29583634
00026,790502339,0,-6235011541088034603,3F0CB48FBAA3DE8CB9B78185707A49902ED8817A
00026,790502344,0, 1275311327455937916,2C10458D6875B9D5D4A939EDE39E228E1A8F86C6
00026,790502347,0,-2412863706395768764,0BF0FD82A3E4A3849FC52FE5C20D475560EE46CD
00026,790502349,0,-1205751766746752637,1EC68F8185ABE939ADC925AA178EE130107786FF
00026,790502351,0, 5954790517255618681,AB3CC7043A800792F9C92CBB9685DCD71AD7E7AF
00026,790502353,0, 0138432964606739990,90F36E302DD4C7C4163D9D69C19F1B1AFA3D630D
00026,790502355,0, 1988637618295707691,CAC4D6173015FB050E0E5CFAF3845DD357C4A559
00026,790502356,0,-4782090034339486731,78E802CA8DBFB11B1098A8DBBDDFC2C37539BBD2
00026,790502357,0, 0734504929984942061,1851FB4F2D6AAACAC56DA09ED4198F6B44D34E0C
00026,790502362,0,-0491821959160221671,CFD395D49BF039465C7E8554796374FB9DED7422
00026,790502364,0,-5560444118580606796,ED151F7A7FEF85AF04667AEE758984EAAEC317B1
00026,790502369,0, 0093813071670698386,FA600B2BCBDF89C69DBD1D42141B900877EF1BCE
00026,790502371,0, 0226560619348630087,A408FC6ECF19A8A9B388D40739E8A9E60332B7C6
00026,790502372,0, 0892946978531647327,FC8F6792FC5A0CE07228E0928945E28FF2ECB031
00026,790502373,0, 7985983045568704288,FF8811A5376646FF0D0E7757675C042DBB3B6E1B
00026,790502376,0, 4942904490130244652,59F56317B026893AE64C5B17CF5349198518C6B5
00026,790502377,0, 1662913746445699927,3E2542E724F757E638BA6B6BD168AEAEB87967A2
00026,790502379,0, 6639628649973039411,F643E9A4A8A1D88958C40D676DA84BA109D29D7B
00026,790502383,0,-4216520209306538368,F5D3EAB70997D41955809F31A12D61591C15328C
00026,790502384,0, 5383263704489479443,C76893FB192D87EFBEC2F0276337C68826F6CFD3
00026,790502386,0,-6898947707985958328,FE6DE2FF11402076B5CE6DD499D5CDF7627956D7
00026,790502393,0, 8017210547105286156,C429416BC5F3B0AEF6B704E3FCAEA06AB1483D49
00026,790502395,0,-1116320087678261516,BBC0B4110B5F82CBFCC2AC74FA003924F1564489
00026,790502396,0,-6378877192564439485,04982E983A26AB9E227EFCD440C4ACD05F08A212
00026,790502400,0,-0601136165266513814,216A9A6ECDA483EFA9EB43D6D976074E29387599
00026,790502405,0, 3177802797174676396,226F6389EB9866159B4009E0F3A9DB4758FDF513
00026,790502410,0, 0848882406582423016,EB591B5BE11094B095CE652A95266EF732296165
00026,790502411,0, 8242800003038927065,92AE960CD21A7029C39930FF231CAE29E7F0C3F7
00026,790502413,0, 0671416798991034035,8BF129F0686BFC147E83717C70CF0475C5C3E837
00026,790502416,0,-2573369120810312135,8CF4101A25A8ADFC3832340EAA5FD1EBD2D78858
00026,790502417,0, 2537408400853827321,D102FD478BE92D69507090E277454A38DF7BC6B1
00026,790502422,0, 5060545202135102833,2534E4DD784220AAE889139CEE4F2538126B4A7B
00026,790502423,0,-2104058964640750639,71AE4A927F263C724937E106343CE1031B020C9B
00026,790502427,0, 5362275218447985017,FD71700442F3D9F168A0557F8B4CA029320D06E2
00026,790502429,0, 0407435900143919675,7627580F5129A063C6CDDAD487BB0D303FFC5BA3
00026,790502431,0, 7020499100133551826,081F1D8C8976F884D4607F902A395295F7F3EE86
00026,790502433,0,-5790812587849578138,17B36968CCB81FB456144F5004CA58CAA269FED5
00026,790502434,0,-1011991161855986209,649B32EAB365BB582CA04CD01DECEA64F0D876AF
00026,790502436,0,-4856790899763734972,00D0BBC19032DFEAD65904AA159B18DC811F7FAD
00026,790502442,0, 6555104108498825848,655710A927FA1D03273833D0425E9D97AFE69384
00026,790502446,0, 9019322304203187623,90BC3AA73FD6DC6DD9DCE27CAA69DB4770A7CBF8
00026,790502450,0, 3648643014050629069,7899C5FF4AA48B1D6E6835D141458754540046CA
00026,790502451,0, 5260243081153792523,E83D22BEDCC56736CAD52E7AD29634AEF15A26F6
00026,790502452,0,-2735650484435181246,1BD193AA63B62B96F860F5279501AA1F6915BFFA
00026,790502459,0,-3225688881860276161,CA03652330CAD76633E63A25AA4BD0EF45892A73
00026,790502466,0, 8045173026323560152,480D20FF3D64A7163303F22CED9D37F4F5271975
00026,790502468,0, 6389778409399261449,8D918D08F285613B1014AE1BF855DFF875331F5C
00026,790502477,0, 6595592221331754432,12BEFE3688FA1AB2CEA7151381BB72430B27881A
00026,790502481,0,-1807903444148841316,74BA909D360DEDCB5D4F18B06B7DB882F66FC171
00026,790502484,0,-7041482674512258372,8F3C6C574604DB6E8CD9BF8B03DF7DE3C3AE1DC6
00026,790502485,0,-4874555144579112261,51AF60A5D758D44E4483B0E8AB93D0994D3F6184
00026,790502486,0,-7618367660475568807,15A7B6D67412D3AD93C17AAA0F3FB10C4AA6CFB6
00026,790502487,0,-3058986806896726974,3F948E0C21D2E90AB5CFC051A1CA834666AF084C
00026,790502488,0,-4146913211683344878,C0697FBAD73C650B1545F551DB6791B60EEBFDEF
00026,790502489,0, 8190175117164342127,1F7927653038F96FC73DB5BF9FB979DAE7B96AF6
00026,790502492,0,-3886834299861232777,DEF5FC338322A0BC7FFF6077ECA39AC7C94231C8
00026,790502497,0, 3719115253030969909,6BB488148435700BEDE14155F161E3004C1B6C61
00026,790502498,0,-6017686399420650958,BCAA5380B5478B1876B8C7BA48A9745670482D61
00026,790502500,0,-4747602444354127595,F98B77F29E4A9D495353DD007F26C00BB302CF1D
00026,790502501,0, 4837203745531633049,578F2C1A60ACFE53FB1545C269301ED38EE7E083
00026,790502502,0,-3775044179350375828,6D44932A2E487658960AE9719D4970DBE1884323
00026,790502503,0,-2355081665865538183,72C937C0CB3D26D599AF801D13FB42044C9BA71C
00026,790502507,0,-7464352730162844417,B69DE7D86C3B167F4834A3AA91A96579B48A9E97
00026,790502508,0,-6987696662381974844,4EFC2F1998E606FD909B331C0346AE80E1A15C2F
00026,790502509,0,-5442887840970149690,7CD5A8CBE98752C6674E3FB540C9CC3DE9C061F3
00026,790502510,0,-1750341995713280230,0E2082CFB8F820218C4DB7D4C24FCA50C7F77B33
00026,790502511,0,-7946955700619452519,AC4A892C65515B7AF25A13F29C6381322EEFB35B
00026,790502521,0,-6216470585916750508,5BA35A799A6E587ADB442925247ADE2DCAE6AFBE
00026,790502524,0, 6535070329710012303,614E7B51258AF63C3458CA03B50A063F60E9C434
00026,790502525,0, 3415113309898934366,8F2E9FB15AD09490ACD59DA6B1D40C8C2010470E
00026,790502527,0, 1963935746249655895,615372E06F94D6EDE0B4C27F80D4BA73DE00C428
00026,790502531,0, 6707163084643213856,8CD7AF8202B2ADDF9E78AC465465DA18990ACBFE
00026,790502532,0, 3653005193261229440,3D64DA42B4ACF30D8E14AC1FFF096F17109A7F00
00026,790502533,0, 0532256492114496454,B34B75E0D01F4D7026FE72B8DA590B0003FCBF78
00026,790502535,0, 8857511674622048289,75FEC5AFD28AE9EAC7AB41DF09E86CEB568281C0
00026,790502541,0, 4759257851348626820,04CBAE18AC8CFCF75E84CD39B8E1A220936222C9
00026,790502544,0, 8817927190802145895,BD333FB1B5FF77C4654981062D730FCE69F23B04
00026,790502545,0, 6440041969171163487,323DCB28554E65021BC5A57A285110B85DB2461A
00026,790502549,0, 0764553244403985693,3FFC0FE37659B71FC2E47A11DD449937EFD8DD83
00026,790502554,0,-8490252852532963863,FA5C615CBF41EA1DC4E487F6BA0B3CB3E53A13C6
00026,790502555,0, 8322984306107061752,2FEAC76D6C376EF41A4AC5A10EC3F0043EEE9797
00026,790502557,0, 7910360328994042190,AE395D4529AF66A68EED0CE869BAD103335D264B
00026,790502559,0,-7400455587726425746,D67AEBB7B7C9B9D415D457B2ABDDCB749E54A87B
00026,790502562,0,-0545762408026335071,06E099AAD6ECB8C9A8CF26FD48EEC475E8569A7F
00026,790502564,0,-0730086214125438612,07B182B264130B432D18E5D18B284CC0106A69A8
00026,790502565,0, 8927379330171889903,ACCD96EBF2781A2FEC129DFE5BA8AEC65FE9C3AA
00026,790502569,0, 1919095419655662329,7A0C52740E0466DCE0B71058F8B260733288BA4C
00026,790502573,0,-6172396450110524725,5A39B5BA9FF99D882F435E0BDE2AC1956EE63C4F
00026,790502576,0,-7648295421892927818,2EF280FADEC6CD0E611589B5884631FF279D2F2D
00026,790502582,0, 5973364156365687123,3658601383FBA4BCD2B86C0C93AEF98170BDA69A
00026,790502587,0, 3347376335505314439,2F190E4E3505DE7B981801C2D1EF36B3EF6DCC88
00026,790502588,0,-1280587076685575788,F6E5ECF6A1E6E5F9C0279AB949605F370D324A37
00026,790502589,0, 0539941042935665791,B4EC881FAD5C94208B72737D1EC64C062C2495FE
00026,790502600,0,-2824015440890372508,C5635FD3073F13858AF5756E932FFABCDA85C2A1
00026,790502601,0,-1563397668531435902,91CE8457C80620306A4C14A5253A80449E7F861F
00026,790502606,0, 8798024147681950506,3741A0F21FA68C35F6FA2AACC2900BF2069C7928
00026,790502607,0,-7764695308917413031,DB743370F7187994DC7D4F65F5D553FD33514124
00026,790502608,0,-9136650226104986905,AD1E473CED2FDCC23772ECB3AE259F78E1821C17
00026,790502610,0,-1010440596959644325,FDA64F4B237D7259602010D2F163E47F8427BFFC
00026,790502612,0,-4976349027520179099,429160AAD419AEF681F270FE72D7127BB0A9936A
00026,790502613,0,-2922696571052616341,31D0F605A1CB71D9812157CFF5FD79A29AC17E48
00026,790502616,0,-7962633639329286192,B308DEF78945B33D929855DECC5B881525878FA1
00026,790502629,0,-1581576200202202592,20AF28B4AE63A534E1BDE6C21139F104FC32C72D
00026,790502632,0, 6678288321683747373,BFB430E971B5E1EC3F61E0373586D2F638707F2E
00026,790502633,0,-2211378786249504647,0D14ECFEEEBF4C4CFA4CBC6DF58EE132D9198633
00026,790502635,0, 6667779176333729629,3CBAA7C321D62BDB3A8A4AF0EB43E6C3097B2639
00026,790502636,0, 0088184186695446388,178E6BE4387F40CDB7141733EDE69AC5F83580A7
00026,790502638,0,-6623432338956652342,913EE4F0CD3F9729D68942FA5E6865E9C10CB890
00026,790502640,0,-2727917244657977674,45E85F527973C3D12E1E90F717E4E616B99902D8
00026,790502642,0, 7279116130847924661,1E563BA937CDDA62274578212D97AD7458A23493
00026,790502644,0, 1142423685278078334,D31D644203874324B4856916AF931797F70E2F75
00026,790502648,0,-1777038133081218398,3D1412164DA0B22671B57CB654C87B5D4BC97CF8
00026,790502650,0, 4869146494048097477,D8BB272ECB270DA0BED1B182045F0672D5B65018
00026,790502657,0,-5928695628205088484,F017C76D0B31038A80EDF82ED0383E180318FF53
00026,790502658,0,-3294442114230860145,76775564A494A319917B2AB16C8D21211A619A10
00026,790502667,0, 3125920724183898661,D0C4F845FE10673E1FECB01880C5277DF3327D52
00026,790502681,0, 3330953118149466963,A349654B23BA5F9224070988908E78A25C0B2059
00026,790502686,0,-6473051944147218103,95CF6AAF35F68DA2306648711BA44969CACB5B6A
00026,790502690,0, 4691534861256150530,14BBEA87C7BA33C3486825E1B14CAFBE972B0B4F
00026,790502691,0, 8551188341998166914,2D2CCE1A3A5B4A119E5D01B0D648EEA0799177A5
00026,790502697,0, 7661021837953684303,7796F0B5CAFE2911BA14B514EAC071B590BEA4B3
00026,790502701,0,-2209528054510847825,D320D4233A0281EF6B5FED00767FCD3B398E65D9
00026,790502702,0,-4781967186830413657,A054824E0846CB2341392887976EE24948F91C11
00026,790502706,0, 0237644576019127012,6770FF1AC36A5BF0DDB8D5A426F8C35CC7A65CCA
00026,790502707,0, 6749165180232758088,F6CB6491D3D722BD73CF73A5A9D08617A64ABD52
00026,790502708,0, 8078716027495627116,3066F2CCCCADF972D6492A8FE3DC27D6E2F37DE7
00026,790502710,0,-1057760975230518341,A856A79425860E952B71C735E481BE8DF51AEDE3
00026,790502711,0, 4309028374005464003,24A3B2BA8E1FCAE66F2D7AA6B6E480A2B4A179CA
00026,790502713,0,-4021306369118155390,B036097A75644D6572A983DE3252FE6CA824AE6C
00026,790502714,0, 5864547958158575294,6D453755A2BDC49E80F97E7D1A13B31B13CEE4AC
00026,790502716,0,-4634562002827601287,B7384C4F846DB0F8AF06581322A203366FA2C8EF
00026,790502717,0, 2712403030816719673,AAA54960387AD8E9988B4783B67871EEF737B635
00026,790502724,0,-3720917759551293452,36F18A1DCC7BFEC40CD07E498013A144B8F5C899
00026,790502731,0, 3937775242207463734,682A156D1312DECE3846830B8A35F4CDB4BD6806
00026,790502732,0,-5029940257330555175,F70F38F6A0D46BA4610A35BAD535F08DB3852903
00026,790502735,0,-8333817257234176275,41D68C744BB188DBF28BDD4E39A751CD51A8A40F
00026,790502736,0,-1091730647718305231,C50DCC22304BFC23994FD63B5157A401C6E66908
00026,790502739,0,-7256437548657741839,08EACE8F776D16575C226A59D819299DBCE636CA
00026,790502745,0, 2248568584587562156,D6F78EA7757122B6AA3CAD81CD23004BB2B6BAA5
00026,790502747,0,-4877488044569719194,F16627F8DC725CCD9007ABDCAD27054D525E7C1A
00026,790502748,0,-5358959370856216580,4939A67A9E00CFE6800EDD94642761393F48F4EE
00026,790502752,0,-2585150399050487914,EB7E8849C1B2A014EC522E2563F5D6904BA9EF16
00026,790502754,0,-0273154898939956902,F6CA237C550A413DAB72098CFF3A467A4A6DCFEA
00026,790502757,0,-3873484480619166497,20ECEF47F3B855D3ADC92174BEE1938A25D3D7E8
00026,790502759,0,-3008273217782317852,28803BC10103E159C994BDA62770D8912A3D1C7B
00026,790502761,0,-3622518833508276214,4F4C4C39EA05BA2BCAA686EAF4CA88DFD5C21D15
00026,790502763,0, 0282132887037430894,8CB64901A6B8601DC9ECD0DE81D7EDFE63A0D324
00026,790502764,0, 3736156600229369439,844ECEB8D2C8A2F7E23B9988680BC5300084F23A
00026,790502769,0,-4920752341559718842,EDCF8FD60528BE9BBA196D00A7E029B4EE4CBAAF
00026,790502771,0,-2418320359981183949,6702B30971E204C22E84A3A552A90282A6DDA315
00026,790502774,0,-2707999515743209735,70D6E480A73A20E9AEE06777E3747C65067D6309
00026,790502776,0,-1393278656323347992,6EAC3BB554E17E07F3151C7AB64B84F9D448EE5E
00026,790502778,0,-7194159828998517351,41B9669C1F9B28B99975E1E2B7EBA7A057EE0081
00026,790502785,0,-2150414954669941268,B68186869A7D76CAC96FBA4A427F43A75383489C
00026,790502786,0,-5477272684888468565,FD49B8A883EAA0127EFB1C852DFB16FFC94FB445
00026,790502792,0,-5494403713198808285,A0A50135B477F7CCA32403D0D25D01642EA37E05
00026,790502795,0, 2896273422864056104,118110CE2F7DE9B97665FEBF90A32D21E844D1BD
00026,790502796,0, 2696625836670628683,F227C158638684F731C2C081B558E624569C6B7A
00026,790502800,0,-3450434701710657451,4896634F344580B0AFAB4C7418F127B90525CF8E
00026,790502804,0,-6891264295095207376,3D66EA6119AAA4002E77E730A735D3CE9C693613
00026,790502808,0, 6953042680938777035,49D87C33F5A4F33002CD8B2CD17BA21E4D83B99E
00026,790502810,0,-8846170202679205670,523458DC9B3D9D1D227ADAFF0B83EC5EB782FA73
00026,790502812,0,-2504730294212628238,2AB67353AC2451B6268DA93738525BEA21BCFBC0
00026,790502815,0, 2701645187014555045,11BC3549BCE8E95386B72F016BB220BB8F39E62F
00026,790502816,0,-0342179867459664113,79CF0F9B93F2174996772A6B3972337A1CE558E9
00026,790502819,0,-5034119163640223392,477C71C28EC7057DA051286152F43457A0103CBC
00026,790502821,0, 7870133657594307522,678FB24CEA181042797C0906F06561F3FE909B49
00026,790502823,0, 0270356831699925207,444C0DFEE77F523BDC8D92868ABFAB8E55744B2B
00026,790502833,0, 5182916506036071450,55596F7E614C3498BC4E948BF58840D4BACC1353
00026,790502839,0, 4933174798063901426,D4972A6524F0FF247A22FF48CA4F4DE76C0E44BF
00026,790502840,0,-6862717659401185849,F750BF7A6388CA750D9AD169B0451E89D630A2D4
00026,790502848,0,-0614115733014481373,A8F97E27B27650F7CAD6CFD51D142E4E5867D560
00026,790502849,0, 8711496816566325516,1D649A42C1A5A9BF0B07C668F468A85D9B854310
00026,790502852,0,-5769755299820173574,69F352812CABF98FCCFC8AFE0E57EBA1D534C366
00026,790502854,0,-0698778015491433321,F8F476854C4DE1BBB7A7FF73D2575FAE57F56A07
00026,790502855,0, 1711606534293875640,D9BFEFC7D2DB5A9AE3E13C8AA39C78BCE09C116F
00026,790502857,0, 4045802254328274638,ACA4D8FAA2E93BC979BDB1896961493B058A5337
00026,790502858,0, 3867761914713178023,9A853713BB4E87E98AF38EC8C11A0F45666D123F
00026,790502861,0, 8171522985593276166,FDB2341DADA7EB8CF4962CE000FC8A05B05801E5
00026,790502866,0, 6450062147682288525,2EB4767DCF6B545C8D674D8ACFEF267541EAD23A
00026,790502869,0, 7214821228306492886,600E58B39F2547A3718113F6D5F0894D6DF8F2A1
00026,790502872,0,-8518570196390560529,356E43D40415DD0C5B812CA1D5D94085F5C2A85D
00026,790502873,0, 0624161988470326566,47713B20E85536B1D66DD29BD08C453BB13D647A
00026,790502874,0, 7180456592767479749,07B29731E5856D8FC047CA2BA1D016C57B70F663
00026,790502875,0,-8989106974041444114,BF305C7999D0F2D5ADB58BAA299BECD543FE869B
00026,790502877,0,-1225617685591964775,D47EFF1B5190A5E99EED1860D9D63D0CC400046F
00026,790502879,0, 1368815294170408259,DEE21275C5371B5289B75FEECFD2AAF63ECB9088
00026,790502880,0, 7782401819882461033,28DF9F7A6B409D1DE881BB7BCF2EE127CAA5C8BD
00026,790502881,0, 2663189657464153906,0DC59997628C429E166F6BA6C627BD4BC66C8E73
00026,790502883,0, 4339076403401108444,CAA7F73A00D264E3F2B52B31049CBFA01CC5C31A
00026,790502887,0, 6395357007923496151,9A2316BEBFF265B0F3804D4A587B067E9AC67C04
00026,790502888,0, 1304366583977759549,DDC7AC341844D6DDD90D91DE11F96ACBBEC4E9C5
00026,790502891,0,-3920920451480510218,FEAB6A8E61EDB4F33265109854ACA1F9D3919109
00026,790502893,0, 3506674656875887517,41491B4C94EA27359AA110E592A614792FCEE7CC
00026,790502903,0,-1762511766157899929,7EA5893F593AF47F7233FA19EFE3632528A2B3C9
00026,790502909,0,-6206877837348739139,FD0B5377EA7A87E7C9CE39A9DAC19A8A3C76A408
00026,790502914,0,-4165332273421326062,F54342CFA5C442F69AAF38741BD5D7D9E2D98DFF
00026,790502924,0,-6187863746859705776,8DB24A413112DDFA027426C6933B85CB8F78592F
00026,790502927,0,-9003748834521841084,5BDC80BAE79123C47E3B8EEDF52B35C8D902CBA0
00026,790502929,0,-7141845131174673477,BEC3DA4AB66411FB8774CBBDE7F201E8B15B40DC
00026,790502930,0, 3561878567028174103,B72C2F736AC1E08B798DD2C90CA4B8A9E9BD2EBB
00026,790502939,0,-6513012534618372526,8C324014890A94A1B6A1C7B5849C2775A1B32A95
00026,790502943,0,-4697711471449382615,FA8840A195EA1AB53149381F00140C45FDF75BFC
00026,790502944,0,-8412507959384358904,9ADA0D26050140E8CE2E450D24DF83B1F9B79D8B
00026,790502945,0,-1507621723515100681,230F4A9FB92590AAAEBD7604D732264BE41A3645
00026,790502949,0,-3326250865112809536,F1E0141A95183D7D3154F324036B295B685675B9
00026,790502951,0,-7035641646633559060,7D8ADCA72DB5EA9ADB4F657F5710231388CCBF2C
00026,790502952,0, 2606671907751417042,F59C19462C1CB875440303E6C44927BF7B0F7BBF
00026,790502954,0,-4731305262329132805,8D46F5AAF5220BB302C329F5146C92B9E4053250
00026,790502957,0, 7517846997832541044,AB410ADA472D0324E9768EB4233B6134FA1126BC
00026,790502961,0, 2987917315274316044,81BCAF0D8AF2D42516C549E66271F89497A02C8F
00026,790502967,0, 8200896495185003808,E091758E1389BCD5FD01275684BE7EA0B9883CBA
00026,790502968,0, 6857096022393531823,BAE90FA7530E6E7315CC1B5871CBF1236663AB6A
00026,790502974,0, 7847384915199090651,5938B154AA2E1CCB37E6218260925D16920034B6
00026,790502976,0,-5304077772561731052,469CD9D4C5DAC90D46C452AF05A89BBCC42A47A7
00026,790502979,0, 1855607597496672868,9851C17B27343EB6F3324B4CEBE6204D194A5938
00026,790502980,0,-7892914001744038760,F98BF55BA720CCEF5A488F22979141CDE2FAAE94
00026,790502982,0, 5908198453608447113,07C70B5213D64971357919B5B85AE5A2DF3EAB9D
00026,790502985,0, 1652683931957019542,0E246042CBD6748CF92FB4E7395CB3912E0386CA
00026,790502988,0,-3095056326578419305,543954625BA1413603B26E26B89339048ADC834B
00026,790502991,0,-1550737583040065966,D2DC1EDF2C41417BB195046F1AADF16395049810
00026,790502992,0,-9090165323100733083,ADAA989E33FF4C0B24304B32DC1295FAD931AF8C
00026,790502995,0, 2136606876488728092,9EF24D62DC21BB515CF1AE1D8865204E8828119F
00026,790502997,0,-4600937740348340268,1EFC4E1F6D3E17B0D91988A9B9A1818752D4450B
00026,790502998,0, 3700135629274235932,9A1FCFC892A1D9CC2B6AFE7EC3B85B3F8BE8585A
00026,790503000,0, 3673928630184610311,3B4935B190497ED20ADFDCE499CBCAAA7C05BFD0
00026,790503001,0,-5162947279866156813,F5AD390FD9A4139A893A686510DD91D05A6378C0
00026,790503004,0,-6955656124201197540,8B3444E57316E42BDF80B90B79EF6F2E62ED807E
00026,790503006,0,-1332610339026912638,75F0932641A0C96C7DD4CEE994BCD54D61C9C73A
00026,790503016,0,-0844164281943873967,1F1547463E32A2944F1F692A93629BE9D10B285F
00026,790503017,0,-4401629640464811128,6481C9C05EFA33DC0296176D19E76ACA0674B18D
00026,790503018,0, 3078118811624072379,A765050C95E743894CB129E5ADBB0C08196E0BB9
00026,790503021,0, 3792942099719916705,79506D71C1B1E7C73A7DF33D70A883EECBC6D709
00026,790503028,0, 7125179642509392998,09EF757349D903BF81647675EF694443CE8795FF
00026,790503031,0,-0295498399415347544,A79D35696407712EC74531AF18B0D64841C1D872
00026,790503034,0, 4259214606193840204,0F2A0AD0E5312EAA5A48029D17D8C262639A6A9A
00026,790503036,0, 5486134578619876215,C2C3A7A192A207C46EFE2423EB9225A22BCCDA8A
00026,790503038,0, 3407150893779649709,4613C0772BBAB0CAB7B9AE81F13F7A5764A34C1A
00026,790503040,0, 5754053901431166923,416EDC9B298F805478693708333855CFFFE95C70
00026,790503041,0, 2566329212503749960,C5F7B096EF4387B0B00AEE0DC32847B46EDAD5AF
00026,790503042,0,-5832620941540612483,5C1EE4AAAB306A7B8470AAEDCC1A70051832C392
00026,790503044,0, 7495635856722319018,AA9BFC8BFFC929EC5E213256B5CE64564C4C0E76
00026,790503045,0, 4074615031115733261,8224468F52C97797A673ECC6C10475A3962FA40F
00026,790503050,0, 4774371354570719467,24FE0EAB9387645FC68E3A88315F2075C024508E
00026,790503051,0,-0001930445262614429,042F7A8DD898A57C4FCA9FF706A9E342966539AA
00026,790503055,0, 6050548847612843417,6BDD87141695F7C71F5666D79134BA97CE93CF92
00026,790503057,0,-8437892662108773951,18136BA063F3683C8602A9E0E28345D3DEDF2AFE
00026,790503061,0,-8159909035350083857,02D728756A39690EFEBCAB3D92EA538907EA29AC
00026,790503066,0,-6448105612204430797,B5E376F312AFC2913AC78189FB62090370657E14
00026,790503067,0, 1391674551188285460,EFDA4A4ED41DB586CB16A193F52AA23FD591C117
00026,790503078,0,-5717415718225150595,20F26AAFD9E290A5EE22366A07C6BA19C8261397
00026,790503085,0,-6552277133418652867,5B7AF20F7DCD8CA0C071FA17BE50135C52AAD4CF
00026,790503086,0,-4209272356232561217,710B0B5D71346ECA97E3D0043F1457C180A6EBEA
00026,790503091,0,-7308838561828130137,FB0E08E114351F812CCF8A0072AC6EE7A09ED551
00026,790503094,0, 0844303066904339072,42CFBD184C9B2EAB16BBC95176167EAE00E56719
00026,790503096,0,-1213721921555045562,08A257DB7F87D0AD79A65AAFA78AF8207C965466
00026,790503098,0,-2675868811376266030,3048AAD6ACCED93D46BEB8593D3B196A9196D515
00026,790503101,0,-1996404372579681299,99A1D72403E1CC1FC057EAD628495DE9CB83AEBF
00026,790503102,0,-7665887513140388549,DD65437EF0983BFC49136C379D544F82DD920932
00026,790503107,0,-8064653136876839877,996438B8A0B4480A798A46E9C5F056FC4B89B24D
00026,790503109,0, 7853493810719372444,E704982538A307966073974F9CEBADD289C58B4F
00026,790503113,0,-7396932250608003530,899FD7E1A3E2C2D126665DB4E9A8311F1B59BC87
00026,790503114,0, 2436404443616723446,D522F62C234F8614A20D8472FD16F380616D04D3
00026,790503117,0, 3132940572717353034,8BAAA892744B980FD843D393A451628C036C4A18
00026,790503124,0,-8590447013361196201,7A5E117CFB736B0C8A752F506D77A0EDDD00FCCE
00026,790503127,0,-8511452128589256186,559A15EBEA720046CFD7C73F0F9F057CB8B36B22
00026,790503131,0, 1170698977151268473,41335365F706139A65129ACA44B303EFDBD35421
00026,790503135,0,-5739306892561090409,3F94313C1B69B2E253BDD2CE165494164D0F7D30
00026,790503142,0, 7999417388042661409,249C9CB55B29C8948EECA05E7733251BF172B0DD
00026,790503151,0, 2666518106090053609,78CE072910BDC29D6849AFF7177DC48C516CFC8C
00026,790503154,0, 4648008229927546471,11923374CF3A69B4200B327D47A11E41FA440942
00026,790503155,0,-3518407257913538706,5BD0785089D0D0F0E8661F9E84FB7977220C503C
00026,790503161,0, 8677164758922126451,4DD698932E673ED43D86CF7C1E3BE0E2F6C8B5CE
00026,790503163,0, 1471166641516902472,F6E05472FA4D64D14A800D2D5D44F845A52463C6
00026,790503165,0, 2764204981190929152,98DC9EDC96C0CF208C01A7E64520F5C98FE6B2D0
00026,790503166,0, 4903233656329772673,854D2FCF2199ECB07A77830437CB26C676C34B4C
00026,790503168,0, 6913947991262544507,281F7D1535AB5C6B92D0A4693EA38E03278FC80E
00026,790503173,0,-1474324126640947278,9163E1AD8E095C2A2DDDD8C19EEFA524C01933B5
00026,790503184,0, 1720090147105529073,BDF43EAF06A22F564FB5B0C34D75C7B9900E2071
00026,790503185,0,-2821307143408621978,272058AD6CAA3687DA024437C99669C84DF346DD
00026,790503186,0, 2551093763831328436,ACC8C5F649000F010663FB98702F35FDF68BB7EA
00026,790503190,0, 4838782725092840234,F981515D24FE33B4D226B212FA5618E2F2A8D964
00026,790503196,0,-8631730238651999918,00A29ABC41C6F4BC29D27705D24A225CA7805235
00026,790503197,0,-3780109793561395765,8B9B293F0514626FD52A80ECFA564DD49AD95240
00026,790503199,0,-6779007115911590400,84630E27B151A68C9CC3F6CD43838860B10CA873
00026,790503211,0,-9132173434961443654,C2601CE9179795BDBA601F01A907FD6C31D268C6
00026,790503220,0,-0943467637882216659,792BB7C4FA1EDE785CB869B3D27B8BFAB7FCBE6B
00026,790503223,0,-0510915734335327835,9BE0573EB70BB97E2ACEFBC1F51AF55662EB5C43
00026,790503227,0, 5462847145792845620,598AAB4A1ABA48E9A22737FCB7CF7691D3419203
00026,790503228,0, 2745142295587628180,2F08160CCB0EEA50E124BC28389B186585870A57
00026,790503229,0, 1027394033223855717,46BE427B97C4A799E08292F77B575C2F7826E048
00026,790503231,0,-4547832996285528625,6EFF409E6207DE9CC85ECFBDA987D78F1BC97DDB
00026,790503232,0, 1844442921401990415,13F7AF71E42AD88ECE4428753E76263A0D016E69
00026,790503234,0, 4100329198960886463,B32060C837F01C731DE84A50D36B204F33D5D7A2
00026,790503238,0,-3617873973781036848,C0C60726ECFB49957BE014EDFC3ECDAB6F7177C7
00026,790503239,0, 7646845613228528768,5AEF4F3EE455748BA299039030FCD66D8BC7C705
00026,790503243,0, 6463888656017254959,684FDFA8D8A158F187E6B89D1275ACF33061DB8D
00026,790503244,0, 4365055409105441596,3B01431F0944DA3482FCCA9E063567DDBEC3ECF9
00026,790503245,0,-7750565159865409812,59BAD6F2A9EA965D868D4D5008A22BDA43F6B526
00026,790503247,0,-0124803701922946393,8A2047360EFC59AFF8E13703E43FDA02AFB7720E
00026,790503249,0, 7944112091973163248,21C2C405BFFC8444A5780A3177DB1D934FFCB7A3
00026,790503250,0, 3010046669106853574,C01F5BF657FCF269EA62AB70223C374D9A73B6AF
00026,790503252,0,-1497827027853398214,D7AC8A71B0392C75645D38B3F8941ED24989F738
00026,790503253,0, 4445909666649087386,BB9429CC708DA6CAFBEB6A319F54B8AA7A1FC9B1
00026,790503254,0, 3833108706086829764,E808174EDFEFF844249A7BFF1FF6D02BE69EF619
00026,790503256,0, 3311229936470170005,F3A25A480C06FD9486351C804CADBF9D3FAC7971
00026,790503259,0, 3703677846192796565,3C7F7908C089BACF8EB0E4632AFFA80D0E01F9AA
00026,790503262,0, 1070556835488116274,66B059BAAFA8C79C03193DEFCEE794B5357528A8
00026,790503263,0, 8636495929841103248,B259390F28A606A097B7E7CC79736810A84FA64A
00026,790503264,0, 1340053677087522543,57D09DD3C47708EC5DEFCB5CF0F45A9FC762FC52
00026,790503266,0, 3712376650063030581,6D847C2488FF96CB487841068A6C121A2DAF0909
00026,790503277,0, 3847210193146111247,F226480FC0E04E525F5457ED5106997FBD445BA6
00026,790503278,0,-2931686751078059116,FB6ED5379683B3C7BD5E8F8DBD78264B1D0260D4
00026,790503282,0,-2589326338910316735,DDF40A5E47E63B9F8FAC08C1B83A80E2DEEC148D
00026,790503283,0,-0364017924994769797,E216BACD7647B1C2C9CA62C41469247CA07242D6
00026,790503285,0, 2458423617820131119,F6570C38413FA1A26D04664041ADE32CC1120B43
00026,790503289,0,-1976908688572200566,AFD67B472EAD742320CE1A44CF78CC8524A33EBE
00026,790503290,0,-7244126927635644420,BCE80439CDFCB78F2BE8C1AA567D7EF04DE30E84
00026,790503291,0,-0356360581798777848,6D9785E3E0B8EE4008EBB5C550B1F09DB5AD8559
00026,790503292,0, 1919643317375027888,AF8CA074EE6E091B72FA1504E3D94CD39B616AB1
00026,790503296,0, 7278297137095351183,58A5808BEF2F36161DB178CE1E2EA377F1EFA3D4
00026,790503298,0,-4095823447729339330,0E9A7C1583E3566F22E041AB7EC89B89549A416C
00026,790503300,0,-4698129750327186181,2023C44F02DED4C48DD1A3DBCA62EC87F2E65404
00026,790503303,0, 6963632307838614453,578FF59AE101CB377254997C0CB1230295E8ED62
00026,790503308,0, 0443111195397951623,EB183B3FCF0EC50D55DEB80D93C37FC553FF8EC3
00026,790503310,0, 3859965462870581041,1BE01946099BA3363D710FDB99BAD277CAC12659
00026,790503313,0, 2522396871233446375,162F3C658611E114873BD2F96961AAA569598BEB
00026,790503317,0, 3950797016757343749,57EF29A313A47338AB75F2BFE22E1E52DB725D1D
00026,790503321,0, 2331752615504570270,C9AEFC54D85B1A1D21D30EE6EE8FE41EA258C2C8
00026,790503323,0,-7536120216076938624,07089F2D77C8A2612AC05A2119629605FDCDC3ED
00026,790503326,0, 1903356616391980063,6DBDAE55C29EECA9DFDD9611C776C1098C24E4EB
00026,790503328,0, 7649576214255050140,7E00C3E558B8316ED7D5EAEA9B49E0E6FE21DEBF
00026,790503329,0,-5451467714040312766,2F8837D36467106AE25DF06A68E400A8DEB15204
00026,790503330,0, 5004646847947403317,A14F125F2CCBF26FE8428C15E15DB229196B737C
00026,790503332,0, 0444267105009601678,A3177D5011682D7DCC12948EC918A7A93CF68EBB
00026,790503335,0,-4364805784549796754,B72B71D751EED96CC67B806C54FC68F81402FD48
00026,790503337,0, 8735070187336030245,A7FABA6DD9F4F38550C7E34CBB281083D9F27918
00026,790503339,0,-6364976570456048150,5203FC60299C3FE806A8F56311E44EB544BBCEC2
00026,790503340,0,-4271124085721138048,976884033D4BBDE629A60F98656C95A3EC136508
00026,790503341,0,-4798749209604783653,A184EB5CA3B52A5A05052900789B7F1F1405172F
00026,790503345,0,-2891168119524303637,9D1AC3D8E09C128F1AB4BEBC2600608E78214A94
00026,790503347,0, 4152897276840904006,B90DB46CBAF2322371EAFBD344AE6BC3F7EA88B9
00026,790503350,0,-3954837111387116125,FE109750EEFEBA52E0C71583B4F4F4022EE88283
00026,790503351,0,-0861511862512334057,C9E07CA8A8186C8B808269570C1F8FDF5662B844
00026,790503353,0, 9170685358872628435,097A44AD54E257DDE019CB1103DC390137C245DC
00026,790503358,0,-5364263330102500082,FA5CF1097AFE848464FCE06FFB145F8D295F417A
00026,790503359,0, 3656884933092391551,AA5991A7D0DD568AAE1C5A118199B5B979F2E838
00026,790503361,0, 8328187002305871669,976D30E7095A07496BC36C1C52891651674EBE87
00026,790503363,0,-2850422600850620408,F231C9ECC98593FD5A2190424AECDEE8764264AA
00026,790503365,0, 3341913607569257915,43C6E7882AF4B6392F15731B7836F8C05C2EFC41
00026,790503368,0,-0525207207403300270,C9FABCB4EAE7B3B94F596E3AF3EFE0642D5EB893
00026,790503369,0,-1841858836944841523,8C86E93E16C9DEF2C7C79ED05D7E0C1659F5C98E
00026,790503373,0,-2749038115758788050,703C23B6C219A643F7F19C1B34BBFAE1DDCCC426
00026,790503377,0,-2223251725893597939,91C4A5F7AF35EFC790B378C35C5D25DE2BEED1A3
00026,790503378,0, 8123850154037462647,B3D018A93A9B71A4A7A779561307BB6405B67E28
00026,790503381,0, 2518691299016181549,56BD278AB78FD1E3420C733A609B3C14FD48DB09
00026,790503382,0, 5484300296305301728,6626A4E00C0D89DE7CE50CFF7AA8CD4775911E11
00026,790503385,0, 7303463690338554605,C2AC4BDF8E5B3EE79815F0BAE020DCFB9AF51597
00026,790503388,0,-5680862001002465163,84EB785F04DB4978D0351F08156FFF2E1017EC38
00026,790503395,0, 5226340161913660285,B0D1D8C4579A675605137BAB2DD8C110C8A0FD29
00026,790503397,0, 8559064019835254719,40A446D009680C12F44C334EE934A02B6BCCC8BD
00026,790503398,0,-9077304851686638384,29245877D0340B26D816A3CE20CCEB63D89731FD
00026,790503400,0,-5266696381562337641,890EDDBDEBAA49B673C98F8D3C37DE1F9DFA781F
00026,790503403,0, 6068481571621225828,A0983441C62604ECD949B1EE203CF1518388A8E3
00026,790503404,0, 8948023675079866504,B7303ABA55B7A9CD3519F7E9E7E9DE901F7DAA90
00026,790503407,0,-0534934158465430580,A1BBD420BEFEB1002D70DE6BE4FA3C46F3198825
00026,790503410,0, 7867468842156232111,C3B63D265BF05AD2173864C7A5328E8FED0BDF19
00026,790503412,0,-2453693900557161077,DF77C1E9A6A1E36BCC83DFA3A1FBE8F4D639AE7D
00026,790503414,0,-4756142450946972300,B199A73BC816A3C2C79158B13D03F6737204A1A0
00026,790503415,0, 5373517108167595501,890EC0AE6ACA6389A82357E552A4F6804DD827D4
00026,790503421,0,-1454628339764456847,1A5EE99319E3FD5C22F700766D8BFA4171151887
00026,790503423,0, 0728308701121975704,2424819C1421C939695CE80C21F3003456343CD3
00026,790503426,0, 6293525958670559879,3D7CFB2F713E25B6F4FC68B2DD97D80AFBE127DD
00026,790503427,0,-6897836521520919913,B32C83E4FFAA65AD7A0AE75C776ADE3408ACB906
00026,790503430,0, 7959100350596265531,93C3B53CB9EFBAD13C4E87676AFCA9FF1D8D07FF
00026,790503434,0,-4614773532472793077,1575101FE87D5443BBCC0AC240674A806AA35A77
00026,790503435,0, 2240833697763051611,0B96DA1F37CD72992459E0512E2DEA3ED2F04898
00026,790503436,0,-0699480241226917544,3A2ED95A7124B06CE74B394DE3C49CDAD9EE78BA
00026,790503439,0, 3748865937511252598,70F7EEC5E49879AD540F34C1858539B63F31E75D
00026,790503443,0, 4203054718934683932,6A2B5E622214C97393AC6C71F825E39873EBF267
00026,790503445,0, 3682291537135907055,D1314E36A3D349DA4336BC565D093B79EE7F91AC
00026,790503448,0, 5812182191671617885,0E6CBF37E67FB01E23587AE97D43C120C331BE2A
00026,790503450,0,-0821476726978856582,2216FE8C4D54C12E00DA559672A645DA5ED7A466
00026,790503454,0, 8015213483624260545,F1A91B180E1E428F5226BF60EB5F380A97003C81
00026,790503455,0, 6644456429654550894,8EF0F6D2846348E1C79C5173D01375653E7019EA
00026,790503461,0, 1353692044296726438,8E966C8981F6EB48B00ACB14798BBB0B4DDC6126
00026,790503469,0,-2899603388966270899,C338BB155908493825B90F0796D23907A962F21E
00026,790503471,0, 1998117757927510130,708D7690CABAA0421C851399E6EECB9A3EFAFDC7
00026,790503472,0, 0099435423419208587,192EA88908A24177E5854736AF77249C4EE34E7A
00026,790503473,0,-3051709569043700065,3D6822DCFBBEBEBC0B073B69681DDBE07E5B35E7
00026,790503475,0, 1124457974324284842,B0D5211C2CB7861D111CDD494C2EF31C4C1214C8
00026,790503478,0,-0823208328133315993,1506C2029C765CBDB328743CF98F37ACA5F40894
00026,790503480,0, 0968296312351329970,CDA467CA66948986F9DE307402AA6C439856DEEC
00026,790503481,0, 1428545894822121825,CFA35A01A91D0637A4422DD51F751BEDA88BB3EA
00026,790503482,0,-3830921484581471118,CA52D86D52640D80CB4B511D39A43F090C5ADB40
00026,790503484,0,-8903140678155842190,48E6489D7724C0B2053968DA0A01965CD46343AF
00026,790503485,0, 3049885284139658123,88885A0A591C4823CB903C60D24B2FC390744F84
00026,790503489,0,-5628081201328950417,65AB99C86ADA5B1B6ADE71EA389D39933EFCFF4E
00026,790503492,0,-3727631704006519075,A50FEF54ABEB6B8DC3786ADE9F3F17C52CBC42EC
00026,790503493,0, 6618054938356326142,3763F8B205B575C334B5F4C736C0D2DB9B782CE7
00026,790503498,0,-5244235275181518019,AC5FC679F4B9E81C91F2CB678036B512E104AC54
00026,790503502,0, 5769777426480920208,5E339799A9144260BA962EED120B6DF4FE650391
00026,790503503,0, 6326201654730821982,86F9283F9D5C550156976E43AA1B510768C58812
00026,790503505,0,-7291319237709671885,796FEAB240829A110026DE96C5E11216A5FE38DE
00026,790503508,0, 3133643026561029181,07E8FE95FEAFBE9D6FA916D0E2DF2377E98A8E1A
00026,790503510,0, 8980385186210584269,B4C8DB833B9A12544A25724CB2380B0735563AD5
00026,790503512,0, 4915880347099350396,A6E7C25771D811A770D9C615928774A7D501AB92
00026,790503513,0,-3846322553626602056,8894BA87091A786292C5939D50A224E45A17A5FA
00026,790503514,0,-3360524983792490568,BB4947213FC683E6DE44FE8908187081B11A3E17
00026,790503515,0,-9219875492779192501,32E6D3D5EFB3F3C92930C20E8568C3DCCD3849CA
00026,790503516,0,-4104726862913897974,30EBB0446196B059058ECB1BCD1C8C1FCB75BEB6
00026,790503525,0, 5725408834635473487,C613C519119162BBA29AD81A625F92C584F07D50
00026,790503527,0, 7016600390790041614,7F1D5E50E786D575998DCD2D9BD6DAF28E85012B
00026,790503528,0,-5608420948188432499,FF41CC7BB3A8264E6BDF38AAF9304AFB81AE43D3
00026,790503529,0,-0153928472014404105,D3B45825D840363C6DB69DF1AA318413D6653577
00026,790503536,0, 6896370373961704896,DD0D591C431A7717A1657E3864CB191291DACBAA
00026,790503537,0,-0646649895264252522,AAA5BA3A9E3F71E0C17A39B0D7D7CC37A9A3A404
00026,790503541,0, 5287866533504136847,1B42752E826E721A86FD3207A7B88F6468C785D7
00026,790503555,0, 3497934455216164627,ABA2FEA23D642CE5E3E43CF614FF67A31CAEF214
00026,790503556,0, 0716056623392425853,7E1B72D5291ECB2EC3E70ECF6C6AE015C6AD52B1
00026,790503557,0,-8226354689669114458,1D2EE320FAC3A8FD28489875D4C32F454FC69170
00026,790503558,0,-5898986269757981107,150EF1A3224B87282CFE61D7471687B82AF980FB
00026,790503559,0, 1611642598700699462,B7B0CA6202E71F016E23DB8C4F6C2B30E3CF27DF
00026,790503562,0, 7781858383200455921,A10B2A4AEFC7CA2E57305A93A8F725184AB3BC44
00026,790503563,0, 4650684641793686137,41F038C8E5199C7E529CF934873F45976A7094FE
00026,790503564,0, 5832627104704517601,0D0F2347EFEB1E16998FDC2D200E7E9400C9DADD
00026,790503566,0,-5810324058346341086,B9CE03CBDC12E308294656837F78C421D39BCB2E
00026,790503570,0, 3894787522882478914,9FC3F3585F4D27CBB2CAC3B75B68078A9CB1C3A5
00026,790503572,0,-4895945248980379327,F7643A2E028AEF5537C56D75E0A4B6D5F52733AC
00026,790503578,0, 4304705657239200322,BEF72FF4F47B1059803E46C0F91429B58DEB607A
00026,790503579,0, 5974995844545688914,CFF630C5759006799EA162EAF0489ACF81CD8CC1
00026,790503582,0, 0390550323942606605,8D4FB0E0E79E7B76A883C7BD2D348BFB4D39938F
00026,790503590,0,-0317800514795809847,B41045832208B06479536173649E03BB7E77F71D
00026,790503593,0,-6261176104196149234,9FFF0BD8370BBA741E814A23E87FFE7FA5FC9E55
00026,790503595,0,-3578435629350270277,17ADC3891B2F49E22FEE41244B02E080CCE46AD4
00026,790503600,0,-4546524033871755907,52F3255E247027C3FF63F257DBD66238DB3FF27A
00026,790503612,0, 8422936522615832198,B628D45BB02D00C3DF1E76C335A265B25B0DA6E5
00026,790503613,0, 0125360278990010269,69C027A5FB73D8E38E1B9A243EA01B05D6D52210
00026,790503616,0,-7597053239929773153,CF78CD334216198869B1B1D003A03615DD74B341
00026,790503620,0,-3451980342256679030,748C07BDD0339F7D23B18D364E9A5A07D3B4D5E8
00026,790503623,0,-7273724462265606703,56B6E25D4BD06FD7AEE2AB001D5D544E5123236F
00026,790503625,0,-2526928269869683512,B66662BF687147FAA4A4C98C3246A4973DE39B54
00026,790503626,0, 0513926531461943282,F8A025410B6315DDCE0280B6C92E84C8493B2F07
00026,790503628,0,-2814911724871510097,7941840EC71EBA7C97CE70445530BD9D06DB7BBB
00026,790503631,0,-7382121301244644904,5638C7EC08EFFEC7F58E706A888CEBCB366E58C6
00026,790503632,0, 6295702616482893182,73292611814F0A77F1EC0F39B2014CFC196C3126
00026,790503633,0, 0517417288267349041,DABCE3DB0DE4DBE686A2329359CE6107A84CE21D
00026,790503638,0, 7465968403809677313,B3B03FBA20BF4499709F584803A6F2E0B263F826
00026,790503642,0,-8279752805120534195,57EDE6C74992E7F0DD33D8E8BA07CC6F72CF0715
00026,790503658,0, 8777377814076827199,16C8DD0E75C450B25ABD0ABB8B2C8FC93CBA8D51
00026,790503665,0, 4960639389649032361,2E99D15BCF5A3BC08F204DDAB253CFB61DE7AA95
00026,790503668,0, 0709901548563492249,9F67A3948E9741888EC350F1B58D265452EF020A
00026,790503670,0, 6020301242180360404,3B6EBF96AC9C0244CA16E143A0A827CBA742C9C0
00026,790503672,0,-4092668708854316638,A6881F4429190FE1C4DDD03D973F0623BAF302DC
00026,790503673,0, 5498755169031061002,9026B521F662BB6252DAEF28884DECBCF03A5B16
00026,790503676,0,-0644240022627805237,7502E913081B2FB1FE31BDC8B200B54CE223ED5E
00026,790503677,0,-4547386716002527408,BF5E89A64D3BDAB889B24B17E0794EB164BDDE61
00026,790503678,0,-3135284925190097657,C7C3CA4945CC345C51D619665988FF8903B35C74
00026,790503680,0, 9016023741570136457,F7FEFBED0E72AC28AE6B1C5C860A16F544E35379
00026,790503682,0, 6295722987129505604,35EB26D0546FD0351579B27492953ADC46985541
00026,790503685,0, 2345714812005998490,E7BAED8D35624795A5509F8B707E79AE60FB1F2B
00026,790503689,0,-4132027256445328383,286A75321FD1A61842309FE3099A53D2B428DE77
00026,790503695,0,-0894100149435278507,5811677A885EF0F256FFFF1BF0056AD93EA9411C
00026,790503700,0,-5987120703672112103,ED597DE38BF74DE7FB792D1963A2CAE315048476
00026,790503703,0,-0964103628322109261,E9C9CA303CEF31AE6190E7840532EAC94B499C6A
00026,790503705,0,-7227515619176751699,D3B49628294FEEDB4764E736E0340041E2C4FD5F
00026,790503706,0, 5044159908718221967,A27D5D7FA5A575C5B9C1FDF2AC474BC2FDE2AA0B
00026,790503708,0,-7041058024211460705,E51B31783BBA2056A5799850F594CB81DCB76DA5
00026,790503711,0,-1072872427988706956,601C709C53CED18742151238C1912F8B006CE5A9
00026,790503712,0,-2610882328449370100,DC6EA23966DAD5CE2386876A255A8D58A4973CAD
00026,790503714,0, 4285519528255033655,93A77420960D6472AD3526D16C5A2EAAB146038C
00026,790503717,0,-5338614826930603275,CF019D0EA052B218216C960AB847735FCD5B38BF
00026,790503721,0,-4263139992664260789,C94630607556AC3F7EC924D541CB42892EE68D94
00026,790503722,0, 2871709217235362353,95CDD78F5EDD2A2AA838C6944FE15F6330763602
00026,790503724,0, 8434725856337458001,1339009A5554A63EE6641ED245DDCA1529E8E3A1
00026,790503725,0,-4145803932004798064,F21FD93F3D021215B20C2E89502334194EC10811
00026,790503734,0,-0209106240600661603,7633C51C415024549F76A9E3466F43BAAB73D98D
00026,790503736,0,-0314637409981199745,B0487744CA80700125E8972A4DB5CE8ED2BF7099
00026,790503741,0,-8184821714318624036,3C9F96D040821966F3F6D140019E6F513CAAFB57
00026,790503742,0, 6876301160641161339,DB1CB0C5057B1A14558925F51A2ED0A6DD2762DC
00026,790503745,0, 3518004249741496954,FA9F5B8874C51356C971F75D77885764FAD15841
00026,790503754,0, 8053826185689081566,FC62B59382EA3800FE66BFE7BEC70A2D1A4B6921
00026,790503755,0,-2286329478496136978,24B2C322BE47537B69D8C98CC63FC6A9F55B550A
00026,790503758,0,-3474002418793132255,65095A82FEDDD3BB11546DEF03E143848C7A5BA1
00026,790503764,0, 3487426912062393892,215199D934195E34A5648E9608880564BCC9D68F
00026,790503773,0, 0852079134663341373,3F5DE5E3A6E4B6FAB5135A9C962099DE96666D01
00026,790503777,0, 0254799081944359938,E0E950E874AB44C8E2715B4D201F5B66A0C602BD
00026,790503778,0,-0367280026322359251,B6BF8A7AFBBDE47DA518A93BE87CE9B56FFE255C
00026,790503786,0,-1903669988046511775,129A10AE80687F738CC09157CA0B81749AA1E251
00026,790503787,0,-6120099233478681065,909B80125AA5D0FF702E2CDCC4F8F54A1D2594CB
00026,790503788,0, 4056638667484997301,F5F787336C02A9856C8E3B1712F5D88B6831CF0F
00026,790503789,0, 1939427566179529761,FF662A1AB693C54DFEF33571649894AFA4160C37
00026,790503794,0, 4806333310889481828,122A318C660DA9740F74EA2B08DBF257C8CED85E
00026,790503795,0,-7413792160583269888,F44C75BE76743D2370BF79721969E1A6CC6A95CC
00026,790503796,0,-8741928653896938149,34D8EB33B19F9B08C5B4510A6755DDD133880EEE
00026,790503797,0,-2427556936114960644,90B901FCB721D14E7944DDBAADFDECA5DC812D93
00026,790503802,0, 8737795060249433082,BF6835F3B1A193FF7FAD1A924B6382C7AB8B151C
00026,790503803,0,-3680157363411743802,948E14BDC84703D2F4CD365AA1651FE19D2A09FB
00026,790503804,0, 5721832437880995269,8C08E6EBCE1469BB1C9E3665839CFEDF476F23D7
00026,790503805,0,-4101031428194130339,91878A909896E4AF74704062D7FAEF33FE80CD5E
00026,790503806,0,-1476362160203830620,3DE1311BA27A4F0AAF146FD216D6E4A463ED9170
00026,790503807,0,-7831772542024624880,AAD644CC1CA5612C74A3B218230DBF6D53FA86C8
00026,790503810,0,-4643335415004363668,F5F8F0B8455A942CD2CFFD6983065727100B9A14
00026,790503812,0,-7587536084478947995,2334B4317CF74C33BA34A22DE8017898B78AA221
00026,790503816,0, 7466269678069378215,F92AF77D898435A32FBE24F765F22966B4AD5D53
00026,790503817,0,-4329632775983323995,9B4F0F26486E22753AC70D29CD25382C1173E307
00026,790503819,0, 6280675436790704259,BC56D2024E0E7A37EAD67D7409542D4DB5AE46CC
00026,790503821,0, 7037645731797456934,C9EE8A134F0D51A00E24982235D1FBD9FF54789F
00026,790503823,0, 0676185708577725718,616189E5E36E2A2557CA690404865AEF08620267
00026,790503825,0,-4890724076015547098,1A79D2DE04AD0BD40C32AE1354B098CD16156535
00026,790503827,0,-8979097314292515630,201D787665C48BE302CE20F882D27C98A7DB61BB
00026,790503828,0,-4142051934193343770,98676561DE9D40F37B05EB5A60E2592E2521572D
00026,790503841,0, 4387985295859870849,83A670FA061D40AFCA9B4E2787220110C38C497C
00026,790503845,0, 3679160866285073828,E2DBE57BAEF9AB8AEAF7ADA7CE9FBA3EDFF7F407
00026,790503846,0, 0449740526633790988,0F7D6B25A49F469C368042C3984DD5CD4F845BB7
00026,790503847,0, 1247188787911040423,64B6E12FFF20EDAE55C19654018BFA6CA2EF9036
00026,790503849,0,-0851690737441163336,0FCAA6004B85ECE3474B32C8B3CFC362162B2B1D
00026,790503851,0,-2006260433120017978,26379C79EEE843CDAAF8FF093C349D4797338933
00026,790503854,0,-4151336631813332921,C6C4D1369292DC7140427A8F0862A27B596B1DE2
00026,790503857,0,-0589878352158135330,A4213BDDEB8E7DD5197E3AB11209ED00A8A7BFC2
00026,790503858,0, 2979370967879907989,773794698F3D9A98ED708E3E8DFABE6F676CD18A
00026,790503859,0, 5996849750005036912,1F38E8E73012BEE9609A2532C2CF195652671C9A
00026,790503860,0, 6060407398815926263,5DB2B25F15B5B816597CD153086BD7DC9D51C412
00026,790503862,0, 5114069277339122563,CED87066147E52FC3C4FE24C7B154640671618B7
00026,790503864,0,-2509016794910933564,809235F792C5B3A44173C694F3B30D177C898CB0
00026,790503872,0, 4465785301131941282,60DBEA7A0C6042B8CD50CE31C41651A87E7E3D1D
00026,790503877,0, 1249100522033348275,D7F16239599AB02AE8287684E8BD5A13692379D6
00026,790503878,0, 5857283431235778367,5F09D22C13E57E73758C0E713E8DFF57A99E4211
00026,790503887,0,-6888493423464684327,7EC848BCEA5342E3A88B03D2BF1ECA2006022614
00026,790503889,0, 5403766692368037173,4BCAE3FAF4FEA354222B970BCF69040F7FA4EEFF
00026,790503892,0,-1794982797259291949,98307C3B796D1C191F5C4D9919D518CCE411A1C4
00026,790503894,0,-5891763364298876437,B985FDCD01F43420EC2078C81992588EE9159DD3
00026,790503896,0, 4115131831948603156,3846E7487C2D4B1A8569F4755262308160557FAE
00026,790503900,0,-1125418558565334906,F971F0D2F501B2EAB74152D1C330A7092617AB36
00026,790503905,0,-6037741988993302082,478F8F16ACFBBA55F0707DC9F34FFD68C8DAC2C2
00026,790503907,0, 0813121123271776899,67C70559328D632E31C6CEBDBE51BB92A77E7A8E
00026,790503910,0, 5056782152024396685,63FAFF36AF318D48DD356B68233E90FD9B0A637A
00026,790503916,0, 5076727816023739290,F6065903EE5A3484F8D9B7A98C1E306C3B292DC8
00026,790503917,0,-6764069503177168015,8320B1EFEED04BD7E0D7D3EE21966226D619BD27
00026,790503922,0,-8289332009137531253,A17D1EDCCBD1248E37612C8E9B4B28BB9283B529
00026,790503924,0,-8472741745413032709,EB78912159DD3F60CDDC980D6BF4646A63BDE0DE
00026,790503925,0,-1833549440232984511,8A28174E44B51B6A6421AF8F4316E230DAEC89CC
00026,790503935,0, 1160337469242761885,66FAA57A3A7DA339C3F3C9064D7750BE1E8B69F9
00026,790503937,0,-6769238398021111462,B427A83735655255997FF3E82C9BA601E3396EDA
00026,790503938,0, 4449571982572129922,3A384204B7316C0893B564F11951F7C2C42DBB19
00026,790503942,0, 7306364992331477475,8122D374820E6D22B6DA53F1E118CABC515AB8B2
00026,790503951,0, 3191164225640065523,AFC4035744CF6CCE3C676805E1905F177CC763F4
00026,790503952,0, 4843419184254773550,652BFEA9E4A361DA56367C4FA3B2A35CB1A7646D
00026,790503953,0,-3497032355139040617,AE8B51D3B5B180EDB3811E62136452E9FF54FA49
00026,790503956,0, 8939544817635645051,521CFB1B938F66F5F22427AA1250E47BF2D1A7B1
00026,790503960,0,-6488208006590054001,31BB74A12F686B610A2CA91D49272AFEB26E8C88
00026,790503962,0, 5513879362021649224,223E9D0570AF08A87862D3719534B7424E2A45B7
00026,790503964,0,-4717059944381749302,32F815B3E82B996A149948775356F451D0E189B0
00026,790503967,0, 0881345081150727056,9D54CB253ECE1EFDF05C1778BF3B4536556720C4
00026,790503968,0,-5912047972576359017,4D80228236BA8757E9E8F599E414E23F98737F6B
00026,790503969,0,-0093852219869474230,FB30DCB43DC89F600A8633484E515F86ADE4C08E
00026,790503971,0, 4281345818834521892,E538FD261295843055D5B04DC2961C579D146F70
00026,790503973,0,-3312401880147921658,3EF39D827856A3DDCBB84505B6E44847CC19F354
00026,790503975,0, 5406957781461700835,957FBE08CBF9E20D67F1586C69917CF6C19AB21C
00026,790503979,0,-2369273738449297183,D09562C25D81725AC0FB2A8DFF8484619D13A4BA
00026,790503987,0,-3052566045962267536,C306F316B4270752DC3DF891A0C5DB41B21DB88F
00026,790503988,0,-1203057775394706275,1EC18AD6920720E478C6A1FEB1BF1B441DE7B357
00026,790503999,0, 7441722415280088729,FADBC2EBE76F9919D0902369097452D67563C00C
00026,790504001,0, 8494132991187606989,BF1E7490FD91B604558E27C815723FEA9A945CFB
00026,790504002,0,-0179622479438577318,4F19584C5D625D7B6551353F910BE1906F2BD4B2
00026,790504003,0, 1421324188148017178,124A613A1FAE5A740F926E96562E2730ECC4A321
00026,790504004,0,-6152374536418619139,DC55CAF58636C252BC274D15C9FE36596AB2A8BA
00026,790504006,0,-0898753441772744349,CDB2DB9CE7D0A9C188E86CDA2241CA5B5DCBCB57
00026,790504008,0, 1464433013800332894,8B83F6FC3BEDE3324F8D0DF36253799AED84F854
00026,790504010,0, 7471675199434535085,C3E316EBB1CD98219A2BF03D9B4F0743635468CD
00026,790504014,0, 0743758339869940377,ADCB64F885E87324C297C0546A7919B22B4C6565
00026,790504020,0,-3945083999743368473,423F3C693D3A8AC3C9F8EEF4E143849F9F328450
00026,790504021,0,-2777301453054491029,F93BD9CFDF874DFE19EC0CCFEE5345ECD7551927
00026,790504023,0, 0436497405908214857,404D1383A642CB47DE1ECFE1664C5DE127FA9FD9
00026,790504025,0,-5274903928745742421,2CBFCDCAFB10E3B88697249AB57D92550DD169B5
00026,790504027,0,-3886955960892858243,E992BCECB035DA94FCD61AE8563F655F29EB8F98
00026,790504029,0,-4224852640958066594,329F0EFAD0B89C74DCB05BCDD8B6B954069125B4
00026,790504036,0,-8088021701972193399,A212B273964AD81E4652FD139A2017BBE1273ACD
00026,790504039,0,-0529155923734261361,E43E21823DB0E26135E2DE92CCB95F5A5185EB4B
00026,790504040,0,-3134250973497958126,92429B55D59249AF1757F19F61AF4B2F4EF6DAD6
00026,790504042,0,-3204696755842150510,CF25AF899020A012701054316C4933553A20038E
00026,790504045,0,-2871523685627826392,9C0E9ED205947001344D8F713457B8B5A8F79153
00026,790504047,0,-0644954811428296535,825C3AD64DF335E8D5C3E47133D92A78463C744D
00026,790504050,0, 8199209919284191797,FCB9DD694E9F4CCB9C8AA699A2CF426658CF8392
00026,790504051,0, 0975822166080944747,89D18FD6FAB0FF1D1FE0D45B6B206D9E5064CA15
00026,790504055,0,-4563372630028788928,1EB5707AFBCD69CBE19C795BDD1368244C0057C5
00026,790504056,0, 0706424584044517849,FF1A94ECE7411175764EC29A209FD9E49439DA5F
00026,790504060,0,-1216949389158602616,9E9AE58537287A722DBE0B0D6B20654F10FF3844
00026,790504062,0, 5896182139861820719,E7646ED63C843A25E6CF91F31F3D6854FE15629C
00026,790504063,0, 4047920494625682455,2E2B3AE0E981B90B9FED1C6F913CDB5C4C56FED9
00026,790504065,0, 1393793882662719736,98EE88609AC4102A8C8FD00617B4B51614F25E03
00026,790504066,0, 7876969637685314526,0E3B5DA42CD5D31103BAAE24C233CB10F5DB266A
00026,790504071,0, 3603861960907306048,C701A657DD9BEF7427A70CD4B7F8EDEDD1C3042D
00026,790504076,0, 7604956390452505042,D767D0FEBC71AA38B5C63E9C483E94F03363ADCD
00026,790504077,0, 5598964813433669819,1339B90A49C5B31B796A27F3C8CAAAE8F1907F19
00026,790504081,0, 1296502416517750896,5B9414E124C838D66B3F1C4FA1ADAE63591384CF
00026,790504083,0,-1959048912110557684,46791550A59062E98F69EEBD940C81C14651BD62
00026,790504090,0, 3291146834153112423,76263B1F8BBC33A82E821E86110E8632428FE44E
00026,790504093,0, 2090854763397140252,44FD96DD294C13D6E3382B1282F81F9BB993749C
00026,790504095,0,-7198291635362700544,45FA124D7242C902A03DC50CF5676AA667AC9510
00026,790504098,0, 1777418061309111173,3DE48F77B321D52AACEF5EFBC4EC37B393CB3763
00026,790504101,0,-3553564464627076000,B3EB3B06A789B908FBD23EA6C4268E2202ADA792
00026,790504105,0, 0616739828333480844,445A3A75E27A790EDC911644E2367AA3BF9F33F6
00026,790504108,0,-1790704289320488081,8D91661F3DE3AF184E1BF81ABBEB2259D1BEA0DE
00026,790504111,0,-5347442626335736302,6B2E8EE14497D337CEA72CBA968D5B02F971492F
00026,790504112,0,-8039418343512529465,1D88277925B55A66ED0CAD39C8697C3D820A2B5E
00026,790504114,0, 7028585215130164788,1732634650236ED1476899DC46A50957296F8C4F
00026,790504115,0, 8960071759567791742,7227B98F93DCFB980817C1178AFBBECA9E236406
00026,790504116,0,-3393626296310621189,83953F3A35C844FA9572DB15440A14249B6D09C7
00026,790504120,0,-2585844493168172824,DA6157C3106CC6461ED03AB55565D095583992EF
00026,790504121,0, 8850411496164422800,37B530CB582DF41A8173BC5793C6E654C0DF896B
00026,790504123,0,-7423327630410401719,E8EA10431A9B00A57CEED087ADBF3D5EF4BB0CCD
00026,790504125,0,-6039182661008136649,EA9F54761CB2707E0884523627FB5050A6124826
00026,790504126,0,-1241857883911620628,5D70C24A6F85B8DF7A09824203146782FC57ABAD
00026,790504128,0,-2782873495314912655,0A774065EA4B43DBB7F60BD671110FECDBE92782
00026,790504131,0, 1238556310843408607,C380E203917E90A8E704BD4EB18FF6D9AB00C8C3
00026,790504132,0, 0802428033566072334,2DB90312AD84C8BCEFE42458A5542C897A66CD07
00026,790504133,0,-1776668536441708952,9AC318C3DD081D31EB17620F44A3A7F696BF52D4
00026,790504137,0, 3135956238550816150,AF65C8EF88B43A53249FD30792292C4B7FA135A6
00026,790504138,0, 7720360772988210905,9712C381595AE7FC60ADAF1DB5231069927B7673
00026,790504140,0,-1222364103321135028,09A90FD62E4C545B1C434A9317A2C125F37FBC89
00026,790504141,0, 2491941348538221208,AD1F9582FBCD5695121606CDE57DD5DCC652E547
00026,790504143,0, 6805671800871985558,4FD61D857EB84CC2DB76A6141D2BE10002FE274E
00026,790504145,0,-0399675273905776570,5E00538B51068291FB13896A6E10237FE14564E4
00026,790504146,0, 1078332351080586730,7683A005F057853BB1FAA5982B4CC64D71BA46D1
00026,790504147,0, 2808299655552264816,0E6C72C6B572D9CF22D96A29C1CDCC3D69279CB2
00026,790504150,0, 4812728850928426337,6B6C61AD3894A2D132C71EB9CA40C2798D5C832A
00026,790504153,0, 0673989601702747908,5659AEA57F20B1D9B31F89EF17D660CE72A71F92
00026,790504154,0,-3600701624408341317,F2A9A7D0124D4AA4292883AE33D3BBA4FB9AAD14
00026,790504157,0,-5193126539209770278,C7796A4209E4C6CC3C736B95289E8831E3D119CB
00026,790504158,0,-5974429512097543278,532317083C2EBE6DA4E9139ECF47C90AAAABAD7C
00026,790504160,0,-1094878504412603868,AB55E662BAAF66766A79C596AA0038AB237C1C08
00026,790504161,0,-2315818509897264300,910E2D47507D57365E6548F927B39EA68DC40913
00026,790504166,0,-1680714412043582272,A303E74231A5F2E3E20F021C5D788A7B6D0E594C
00026,790504167,0, 2801594024955951576,B9D2B034BF0DCEA3B583DA3D9D47D1801A7B7024
00026,790504168,0, 4057199286811525650,C3BD8F811AA43C75ECCA01ECD71786FB5FF5A6D6
00026,790504175,0,-7085886143466283764,CA375CCCC8A5254F1276E908B241B1D70E4973D7
00026,790504181,0, 8082337987865053551,EDCA4286B36B297B92E571A71C5A7449212C319D
00026,790504183,0, 7802094039571526079,7B10DD1CF1FFDF3D88F196CE3AE25244B1817144
00026,790504184,0,-5932885054505082353,F2D4F157E4870BC87E86337D545FD8394E2AD153
00026,790504185,0,-3414627329393250734,F4E79108771C49E43C992041B0B0E9B60775D511
00026,790504195,0,-6165269010034660713,D8312DDA0D5941923B015D71F5AAD717A93F453B
00026,790504196,0, 7120576854647258147,A59458EEB864AEF17A1446989E4479E43761B7B3
00026,790504202,0, 7943718324169008857,65B5FF3DFE79CA6628DF3BEF69EF03E38C5B000F
00026,790504205,0, 5897964555924981292,66366EB4DDE7187B76756053BEB78EC4C498908D
00026,790504206,0, 3569337268336137552,BD9800FA8DF1EA41204F74DB437C06112C023717
00026,790504210,0,-5449004009608250296,7A4B4FA698976D80AB3C91456058F721C526DBE2
00026,790504215,0, 4337747221670139985,294FE08EAC42438B08D955299B610AB31B6C429C
00026,790504221,0, 2789856009897738299,A177866DD189CB5DBFC98B539D30B250569EB9E3
00026,790504235,0, 3783671120537334236,273E262A27D24D73A913996FF7695E42F0AACBB0
00026,790504241,0,-0562813049585436966,13BFC0FCAE3BB738471B0FE473EF9E2C62DBE8C6
00026,790504242,0,-0557066447225664666,FB7C5F54BE7071AB9A42C41EF966DFDDA783D613
00026,790504245,0,-3338108989079793355,3260F9557EF6C172B1481EC7DD4DAF9D2C6689A0
00026,790504247,0, 3368178306207737025,67D9013588EF594FA7787105D9AC32782FA15FEE
00026,790504252,0,-2362131025245190119,41DECF6C59C0194D5529573683F240D6B1121D79
00026,790504262,0,-7448344049756300847,FED6C4800CDF43CADF1F0AFFD079121706E4032A
00026,790504263,0, 8233745621330636864,D131ACD3B7825936B8588A27510077F225685F34
00026,790504265,0, 2482696148964217496,10DDCD0E9166858C1C7FDB55F5D4F5AA41D110F9
00026,790504266,0, 2403550711685225452,664D97174C7F3B260885888183AF9BAEACC98751
00026,790504268,0, 2264792979909824595,483A0EF16D3F3AEC31429C4E9061EBF9AB71D2CA
00026,790504270,0,-2641405445330835362,BBFCFC1B4B33B092C1568F5C1EB8A8A7E0336400
00026,790504276,0, 8784153687476323290,C209FDE02E33194994F13B96EBFF22E22EE37741
00026,790504283,0, 7352208059180207123,96C175B3DFC3A4E73870378E6C5E567D5665A838
00026,790504288,0, 6261696872693263416,5ED11E9490E5D67C02CBC165399B567F5226A012
00026,790504295,0, 4591505634229469754,5CED20D006958780F3A150D91545AABC1F736F11
00026,790504296,0, 4142246343851015347,8759345EA95075C3D8691A69CB9C70768C490248
00026,790504302,0, 7157057314935795474,DF46F04C3478A11E84A762EE2EEF5673233902E8
00026,790504308,0,-4894059444124216292,E02665B035D83CA4BDE1D2C6D00D0B7F11A2EFDB
00026,790504313,0, 3755683898706841163,69AF5BC2F73D7D41AA68D105FAF0D23D3AB3BF51
00026,790504318,0,-1308410533104595259,56055CBF4895449B54DC5CD02075BE9EC551C75A
00026,790504326,0,-5298294762893774385,76927023073C29326ED3644DC4C836E76D8AC15D
00026,790504328,0,-3647104946857021442,C2894337FB41F689ADF6345BF08DF510C1D3188B
00026,790504331,0, 3541745294283083503,EF8809D4AD3548CF1D0131A9D6616EFF975DB377
00026,790504337,0,-0565724404400935038,83BFC0E691D4A46138890CA521F04F18BA7BFA0C
00026,790504339,0,-2406027164763288952,3F0BC659F71F9F30EBADB56E00F0D6960C0410BB
00026,790504343,0, 0029583029289068838,C3199FDA1D7D6E44D1711CF32B0316FEFC42AB08
00026,790504351,0, 9208673197673306026,D98CDE37A369B320B1C5C88A5390096129700346
00026,790504354,0, 8184378116844806275,7EEA6115ECF9C0644300139F403221F32BECEE70
00026,790504355,0, 6222096968798389582,DDB95D13A57076B58108D87B8402B06469F76C37
00026,790504356,0, 7415151223870914690,E1E372E0563ABB487F9E87FED32328D0AAEDFEB1
00026,790504361,0,-7640868106382093309,35B2D9CC7EFFB0B67F8E01C4BCA2E1958F509F0E
00026,790504362,0, 0870516948731713587,AD6987B821B9A493CB47B3AC3ED8003222211C7D
00026,790504364,0,-5966546631517066194,ADB838D37BE2AC1A777A089E8429F3D587A7951C
00026,790504365,0, 6568973995738722462,6699FB2B1C21D5CD1C33987844EAA249AE581C8C
00026,790504366,0,-5642575961583705698,A8AC83403F9A49A5BAD721EB45BA46E0DC6401CE
00026,790504367,0, 4891332682348052441,D6F8986EC94ECD5F01F614DF6D86D9730074A1A1
00026,790504368,0, 2618269649312185761,C9CB1AAC4693A2CEC64BF80D9A834DA767C60A12
00026,790504369,0, 6886520280326443499,3A16EC1BC40A8AD59329AA26CB332F3CCF9CE833
00026,790504370,0, 7189244136495897453,EE8E630468BCC767420695A34B3DF2E10A8D6BDA
00026,790504372,0,-1681011960778478618,E4AC4549D0A6357F299A0B2FFCB68E6CA3F3B842
00026,790504373,0, 5393065998466748076,99200570D3A1411BB863847D94C00700EA773B88
00026,790504374,0,-4850297166219341079,C0E8775BCC7E31D7AB6B7EF223FBDA0B8700A4E8
00026,790504377,0,-2070109967179394279,9EB4CB9E7DA32FE3CBD99C702E07BCAE79671496
00026,790504378,0,-9175134689864857081,2A7B35715ED9411F488F89FA5F4FDF18F5406F2E
00026,790504379,0, 0782605129162991563,620F59D77649765D102EEA7D127E5501A71DAD47
00026,790504384,0,-5238124642529573234,FCF6C9216C3050C670F8A8BA9FD94D2AFD7FAD8D
00026,790504387,0,-0489077495010022789,CD098927492954FC575596404A65F47AA5BA146B
00026,790504392,0,-7572203469688568435,2B5A10D87D5E7CC71A192CFFDB8919BD8EBA50EE
00026,790504393,0, 8597383415425277267,015DDE12EE18EB090E2BBC42C751DDE6A3C41447
00026,790504395,0,-7055052414342687891,2173AD1B37C2E73025766CFF06754CFD6EFAABF7
00026,790504397,0, 1212757788004180959,1548477B68645275B547062CFC25DCDD102AC0A1
00026,790504398,0,-8668241898685081116,B92C4680F7A6E60F4008E86882370076F40FC369
00026,790504399,0, 4547425279702333659,FF65F5551A438A6464AAC3E6244229BCD93366E9
00026,790504402,0, 5034393209258086979,B24585CD0C9B2B68F81D86F54ED2CA7C2D0E79A1
00026,790504408,0, 1896352173592352586,D3A993223D79A089F525C4AE5172BCD5536A86CE
00026,790504409,0,-3564523385611696271,91E0935E02C744855D0C84BF3189B38D028AFEA9
00026,790504410,0,-3610409411523023195,4AD23EF8A9D00DD1E8B41115A303606D5A0D2521
00026,790504419,0,-5299419836174730074,2A46E74D06B4CA398155B430CF4C239BA0F5C27E
00026,790504421,0, 8957257728777801148,8DB75FDB09DBBA2AAFC2BE2CA2F5AC3E5C472570
00026,790504427,0, 7470614634574807644,13A88AF6D1EE5B58FB08A505E2E9632E3EBADBB4
00026,790504432,0, 2108313054479693998,D0416DF5B7794CA62CEDE9600B6D08A1D5EE095B
00026,790504438,0, 2068215136085019078,6C20D83E71D3F5995C052A4EB9C010DA630CF7BC
00026,790504441,0, 0250669487060466887,75359D0F0AF07CE03DB8C6CDDE331652419FD1BA
00026,790504446,0, 6360757490520617359,1B71E9502300AFB41F61AFCF1B89BCE8F1ADE699
00026,790504448,0,-1050435014472024195,0FA372FDB9F54C90A17063DF59F68971E06FD91C
00026,790504458,0,-3515834272971573943,FC97DF85F51735DEEDB12FA1C867D52378CE97AA
00026,790504459,0,-6465257645761748791,C940D3ABFE9D8ADB5B871DBB8362FF12F14ECE9E
00026,790504476,0,-6396907399141824481,522DC3F08C2744DCDF97E21CD4B334485E8E6088
00026,790504478,0,-5630895356531320427,BCC292F62D42D8EBD9CEE0B44E3A2ED9986A0529
00026,790504479,0, 6572014370462642616,4AC474A5D3053FC84457B170E88EDA61B4F821F5
00026,790504481,0, 7234607303555234846,21F38CB53CCAFCA36A09425B0A50E82A76F028EC
00026,790504484,0,-8716450519148145095,81C724EB2059C05F0B65AB5718121F5CD53429E8
00026,790504489,0,-1172573348491359655,43A4C39F23903545EF978FF9B2C71AB4AF6CA088
00026,790504493,0, 3394882750570471922,B03D5026869CD43CFB6ED13E816FC3F57F96983A
00026,790504496,0, 1754872007449385938,8C90E65D6FC23FBECF7FC2223E0AF1BDC6E71BF7
00026,790504500,0, 5248379493628192492,17ED171A2B1F444ED7034BD641387563E789524D
00026,790504501,0, 8484215757541754803,33F62990465D63AF6D2C56F23E0B86788F57B2F3
00026,790504504,0, 0742523770912693681,C943BE878B7AB2DC69E5A75EDE3C1C76C5691721
00026,790504508,0, 8501487276840055934,64B55C7647929380FA6F08C1AD85DADAF22B7248
00026,790504510,0,-2467678409887868445,C95D2E73DF19316C400451FBA0E913B6F76EA1AA
00026,790504513,0, 0802810712318700268,92662337EEB0A5520CC91DE7F9CDDC13E56F4630
00026,790504516,0,-6437076545435071247,19BB7193362C1072A0745EE274C718DF69C60FAC
00026,790504517,0, 6034481406607077571,B27DA9D649AFE171E3951A6E7CB678BCC3EE334A
00026,790504519,0,-0819875377667036071,121185322A9893E452329C9D40C9F1848C5397D8
00026,790504526,0,-8482346350920577527,BEAC2327B60F0286AFCFCFC1021F65FAD7BDA73E
00026,790504527,0, 1128967013801189097,942D14421602D88C166C37F473C4D267CEAE73FA
00026,790504528,0,-2155283948815918807,55B2800D468FD022C4DA94A3432CAC86DA51B2C5
00026,790504533,0, 7253414724456204053,FBA07A22F38F72E14E58CD87BF80CBF86A40381E
00026,790504534,0, 4393053042607950670,9C1B7B945FFEC869FBD75E1D1E8FD0C04C3C7941
00026,790504535,0,-8450116186275123508,F49E75D89B98DA9E2A357349692418E0CB409E76
00026,790504542,0, 6220020527850695453,1AFEBA7EA14F5D5FFAECC83143DBA4DDC3D73F01
00026,790504544,0,-5135315239665243109,C9AB7807FD7669D52E203FE760A2CC712D9E5132
00026,790504545,0, 0851181172787517525,6111656F88BE1459E0ACDE422B1E4A83DB05AF35
00026,790504546,0, 3361756494620466096,208535D91CD118391BDC275DA74CE00F680463BA
00026,790504551,0,-1150920948543411163,6B383CDDE3E536B497BD698F1E0BFABD048A0214
00026,790504552,0, 8468695313566499528,89A0A1DAB7C9BDF0519468B77C42367BC05D8971
00026,790504554,0, 6772524888408632695,3F326B78631E31EBEF0988ED45BDE61EDF8D8EAA
00026,790504555,0, 8554523845283833568,6A9A13ED903BF255A36A162FEE8223C2F99A35A1
00026,790504558,0, 5470564434380751863,4322397A3F48F580BE6C5C7DE9390989D875A2BE
00026,790504559,0, 2695082533974191535,6034CA325D56AAE753ABD2933611044E419480C8
00026,790504561,0, 9033393862894703392,37270F31157FC26718ACE39E72A277441464D418
00026,790504567,0, 2649418485146305194,0C9F7A90F1C0313BEAEC28041E8CE69FB409B395
00026,790504568,0, 3374998217912429865,372355160A733FAD3B47FFF3A85AB69F0A20C7A4
00026,790504572,0,-1014694802430482839,E8CB62602E547AD9E171796132B04BF802FABB97
00026,790504574,0,-5819466532268392525,4B0CB8445F3EA116DFE56ECE7F6668D9B25148AD
00026,790504575,0, 0086427505874639708,1804B85C234662F05F82D8D163723D7EEA083C67
00026,790504583,0,-8741750532678824924,A67235634A6D0A7D6DE3FC526B7DEC44FF8E8948
00026,790504588,0,-4505109655880671620,A90B196050BE97AAA2B6804C32FEA107EE455D74
00026,790504589,0, 1601375935704644051,7545C1944523C26859A004264E7D1702C01CF4D8
00026,790504590,0, 2608991009336500355,7F0D56FA23E69A51D930B3873221072303F271FE
00026,790504594,0,-8858308174084122165,8BCF35A1993BEC1C9204E863C472BC8221959B93
00026,790504598,0, 3804652419529173118,DD41947E85ED6D8611E78ADD212B5BAE52A60081
00026,790504601,0,-4550216398755463649,26FF59D5D5BA059657C26D39A6B0CAAF9C04D351
00026,790504605,0,-0974626167816055805,D223DF25F4C0D69D5B8BFE3D4E0F5B2FD55EF4C1
00026,790504607,0, 5785014254240762555,29190AD3686122E84F15868FDB71AFF68DE578EC
00026,790504610,0,-5076657846236175129,A7A0F9C3991DB6C81E1C274D1EEE0E2190B06DA7
00026,790504611,0, 6513015054548616271,6F35CB8039885F411BE79E38E65A0858649C0910
00026,790504617,0, 0078388341064746975,DD9D7014D77F10E73E11C343C3C5BB355A905BF6
00026,790504618,0,-8208048538887405988,380564D4DE523B176BE0E975F56C3E257602CEB2
00026,790504625,0, 4029659683356685651,70B91F0791ABFECBF40103E2BBC9629125F6262A
00026,790504626,0, 8294130781737270047,82879226370F6BEF24411DE15A2A2AA79D6FAD45
00026,790504637,0,-0597665299594158908,6AD36EDDA576D6AB80BCAC40F1C28BF22B79D7E8
00026,790504643,0, 3153443211990718801,3E912307BB8D1F2C8E90EAB6BB289442DB421A8D
00026,790504648,0,-7617032722987838987,DA0CBF36E8B5A7022ED2175CE073EEA0EE8A76ED
00026,790504650,0, 7012039028166910246,CCB9EB61BA912FA00F9D4BA54E62EE5DEC05C052
