   A3 extra paper
       (322 mm by 445 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to the intersection of the current clip region and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to intersect with the current clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event. It is
   called before a page
   prints.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>
        <para> Gets the names of all printers installed on the computer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary>
        <para>Gets a collection of toolbox items from the toolbox that match the specified category.</para>
      </summary>
      <param name="category">The toolbox item category to retrieve all the toolbox items from.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items
   that are associated with the specified category.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>
        <para>Adds the specified toolbox item to the toolbox in the specified category.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name=" category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem" /> to.</param>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture used to represent the font.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This method will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Int32,System.Int32)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point  defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>
        <para>
       A5 rotated paper
       (210 mm by 148 mm).
       Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Color.BlueViolet">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the color remap table for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the color remap table cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.WhiteSmoke">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Height">
      <summary>
        <para>Gets or sets the height of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Rectangle" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Rectangle" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Rectangle" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Purple">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text in the active window's title bar.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>
        <para>Specifies a line consisting of a repeating pattern of dash-dot-dot.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the text in the active window's title bar.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class and attempts to find a version of the icon that matches the requested size.</para>
      </summary>
      <param name="original">
        The icon to load the different size from.
      </param>
      <param name="width">
        The width of the new icon.
      </param>
      <param name="height">
        The height of the new icon.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>
        <para>Gets the Joint Photographic Experts Group (JPEG) image format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>
        <para>Gets the enhanced Windows metafile image format (EMF).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.FrameDimension" /> class using the specified <see langword="Guid" /> structure.</para>
      </summary>
      <param name="guid">
        A <see langword="Guid" /> structure that contains a GUID  for this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the specified destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> that specifies the context for this type conversion.
      </param>
      <param name="destinationType">
        The <see langword="Type" /> that represents the type to which you want to convert this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlLightLight">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object to intersect with the current region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image.</para>
      </summary>
      <param name="bitmap">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>
        <para>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="destSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.
      </param>
      <param name="srcSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.
      </param>
      <param name="pts">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to transform.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension. The drawing begins offset from the beginning of the array.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="offset">
        Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.
      </param>
      <param name="numberOfSegments">
        Number of segments after the starting point to include in the curve.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transform.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of the rotation.
      </param>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the center of the rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the rotation is applied.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>
        <para>
       People's Republic of China #7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the bi-level mapping threshold for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <paramref name="type" /> parameter.</para>
      </summary>
      <param name="threshold">
        A threshold value between 0.0 and 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.
      </param>
      <param name="type">
        Specifies the pertinent GDI+ object (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode and tension.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> event.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>
        <para>Gets the last point in the <see langword="PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.PointF" /> structure that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>
        <para>Specifies the system to use when evaluating coordinates.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>
        <para>
       JIS B4 rotated
       paper (364 mm by 257
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>
        <para>Specifies the CCITT3 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>
        <para>Specifies the CCITT4 compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Loads the state of this toolbox item 
      from the stream.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to load from.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the stream characteristics.</param>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Point.Empty">
      <summary>
        <para>Represents a null <see cref="T:System.Drawing.Point" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>
        <para>Specifies no pixel offset.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>
        <para>Specifies a hatch fill.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.YellowGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOrchid">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>
        <para>The unit of measurement is 1 inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>
        <para>
       Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned to the right of
       the line being drawn.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.OliveDrab">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>
        <para>The pixel format is undefined.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.CadetBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>
        <para>Specifies that each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>
        <para>Gets the W3C Portable Network Graphics (PNG) image format.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>
        <para>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a range of numbers.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>
        <para>Sets tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="firstTabOffset">
        The number of spaces between the beginning of a line of text and the first tab stop.
      </param>
      <param name="tabStops">
        An array of distances (in number of spaces) between tab stops.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>
        <para>This callback is used with <see cref="T:Sytsem.Drawing.Graphics.EnumerateMetafileProc" /> to play a record of metafile data.</para>
      </summary>
      <param name="recordType">
      Member of the <see cref="T:System.Drawing.EmfPlusRecordType" /> enumeration that specifies the type of metafile record.
   </param>
      <param name="flags">
      Set of flags that specify attributes of the record.
   </param>
      <param name="dataSize">
      Number of bytes in the record data.
   </param>
      <param name="recordData">
      Array of bytes that contains the record data.
   </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="width">
        The width of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="height">
        The height of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="M:System.Drawing.SizeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an object of this type by using a specified set of property values for the object. This is useful for creating nonchangeable objects that have changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <see langword="GetProperties" /> object.
      </param>
      <returns>
        <para>The newly created object, or null if the object could not be created. The default implementation returns null.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para> Returns whether changing a value on this
 object requires a call to <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a
 new value, using the specified context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <returns>
        <para>
          <see langword="true" /> if changing a property on this
 object requires a call to <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new
 value; otherwise, <see langword="false" />. This method always returns
<see langword="true" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.WhiteSmoke">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Lavender">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.PointConverter">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Point" /> object from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>
        <para>Returns the number of frames of the specified dimension.</para>
      </summary>
      <param name="dimension">
        A <see cref="T:System.Drawing.Imaging.FrameDimension" /> that specifies the identity of the dimension type.
      </param>
      <returns>
        <para>The number of frames in the specified dimension.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>
        <para>Normal text.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IsKnownColor">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Color" /> structure is a pre-defined color. Pre-defined colors are represented by the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Ivory">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>
        <para>Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>
        <para>Encapsulates an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
      <param name="fillMode">
        A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.
      </param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>
        <para>Allows declarative printing permission checks.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkOrange">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SlateGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>
        <para>
       Statement paper (5.5
       in. by 8.5 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PapayaWhip">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>
    Specifies a cubic Bezier curve.
 </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a value indicating whether the specified object 
      which represents a serialized toolbox item can
      be used by the specified designer host.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to test for support for the <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified object is compatible with the
   specified designer host; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Turquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>
        <para>
       Ledger paper (17
       in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>
        <para>Defines a rectangular brush with a hatch style, a foreground color, and a background color. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Bounds">
      <summary>
        <para>Gets or sets the rectangle that indicates the area in which the painting should be done.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.String" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.String" /> to get.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Graphics" /> used to paint the
    page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified file, in the specified format, and with the specified codec parameters.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoder">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" />  object for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoderParams">
        An <see cref="T:System.Drawing.Imaging.EncoderParameters" />  object to use for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>
        <para>
       DL envelope
       (110 mm by 220 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>
        <para>
       The printer's default duplex setting.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.</para>
      </summary>
      <param name="red">
        The red component value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <param name="green">
        The green component value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <param name="blue">
        The blue component value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>
        <para>See <see langword="Graphics.ResetClip" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>
        <para> Gets the number of different paper sizes in the collection.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>
        <para>Specifies that text is aligned far from the origin position of the layout rectangle. In a left-to-right layout, the far position is right. In a right-to-left layout, the far position is left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</para>
      </summary>
      <param name="point1">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.
      </param>
      <param name="point2">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>
        <para>Gets the page dimension.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>
        <para>
       Italy envelope (110 mm by 230 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>
        <para>Underlined text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>
        <para>Specifies flags that are passed to the flags parameter of the <see langword="Bitmap.LockBits" /> method. The <see langword="LockBits" /> method locks a portion of an image so that you can read or write the pixel data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>
        <para>Gets the number of elements in the <see langword="PathPoints" /> array.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.AliceBlue">
      <summary>
        <para>Gets a sytem-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Compares two <see cref="T:System.Drawing.Point" /> objects. The result specifies whether the values of the <see langword="X" /> or <see langword="Y" /> properties of the two <see cref="T:System.Drawing.Point" /> objects are unequal.</para>
      </summary>
      <param name="left">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <param name="right">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the values of either the <see langword="X" /> properties or the <see langword="Y" /> properties of <paramref name="left" /> and <paramref name="right" /> differ; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>
        <para>Specifies the quality level to use during compositing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified handle to a window.</para>
      </summary>
      <param name="hwnd">
        Handle to a window.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified window handle.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
        <para>Creates a gradient with a center color and a linear falloff to one surrounding color.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four, 32-bit integers. The four integers represent a range of fractions. The first two integers represent the smallest fraction in the range, and the remaining two integers represent the largest fraction in the range. Sets the <see langword="ValueType" /> property to ValueTypeRationalRange, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator1">
        A 32-bit integer that represents the numerator of the smallest fraction in the range. Must be nonnegative.
      </param>
      <param name="denominator1">
        A 32-bit integer that represents the denominator of the smallest fraction in the range. Must be nonnegative.
      </param>
      <param name="numerator2">
        A 32-bit integer that represents the numerator of the largest fraction in the range. Must be nonnegative.
      </param>
      <param name="denominator2">
        A 32-bit integer that represents the denominator of the largest fraction in the range. Must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>
        <para>
       A4 rotated paper
       (297 mm by 210 mm).
       Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.Finalize">
      <summary>
      We need to know when we're finalized.
 </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
        <para>Creates and returns an inflated copy of the specified <see cref="T:System.Drawing.Rectangle" /> structure. The copy is inflated by the specified amount. The original <see cref="T:System.Drawing.Rectangle" /> structure remains unmodified.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> with which to start. This rectangle is not modified.
      </param>
      <param name="x">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> horizontally.
      </param>
      <param name="y">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> vertically.
      </param>
      <returns>
        <para>The inflated <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>
        <para>Specifies a hatch that has the appearance of a trellis.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>Begins the control sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> object and opens and uses a new graphics container with the specified scale transformation.</para>
      </summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the container.
      </param>
      <param name="srcrect">
        <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the container.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> object that represents the state of this <see cref="T:System.Drawing.Graphics" /> object at the time of the method call.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a polygon defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the polygon.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>
        <para>Specifies the types of images and colors that will be affected by the color and grayscale adjustment settings of an <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of text in a 3-D element.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>
        <para>Gamma correction is used.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>
        <para>Creates a GDI+ <see langword="LOGFONT" /> structure from this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="logFont">
        An <see langword="Object" /> object that represents the <see langword="LOGFONT" /> structure that this method creates.
      </param>
      <param name="graphics">
        A <see cref="T:System.Drawing.Graphics" /> object that provides additional information for the <see langword="LOGFONT" /> structure.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions. This method prepends the translation to the transformation.</para>
      </summary>
      <param name="dx">
        The dimension by which to translate the transformation in the x direction.
      </param>
      <param name="dy">
        The dimension by which to translate the transformation in the y direction.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, from a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that define the curve.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>
        <para>Identifies a record that is the EMF+ header.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>
        <para>Specifies dashed horizontal lines.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>
        <para>Specifies alignment of content on the drawing surface.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>
        <para>See <see langword="Graphics.DrawPath" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>
        <para>
       People's Republic of
       China #4 envelope (110 mm
       by 208
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>
        <para>
       People's Republic of China #5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>
        <para>
       People's Republic
       of China #7 envelope (160 mm
       by 230
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Goldenrod">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Thistle">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.UITypeEditorEditStyle">
      <summary>
        <para>Specifies identifiers that indicate the value editing style of
      a <see cref="T:System.Drawing.Design.UITypeEditor" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>
        <para>A generic Serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemIcons" /> class is an <see cref="T:System.Drawing.Icon" /> object for Windows system-wide icons. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string can be provided to name the file.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="desc">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>
        <para>Defines an object used to draw lines and curves. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format or the Windows enhanced metafile plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format or the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Peru">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>
        <para>The pixel format is 16 bits per pixel. The color information specifies 65536 shades of gray. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightPink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.Window">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background in the client area of a window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.ToSize">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.SizeF" /> to a <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Size" /> sturcture.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Draws a line connecting two <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> structure that represents the first point to connect.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> structure that represents the second point to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>
        <para>Gets the horizontal resolution, in pixels-per-inch, of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a 32-bit signed integer from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" />type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para> A 32-bit signed integer that represents the converted 
    <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>
        <para>Gets or sets the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumOrchid">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SeaShell">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>
        <para>Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Snow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>
        <para>Gets a byte value that specifies the GDI character set that this <see cref="T:System.Drawing.Font" /> object uses. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>
        <para>Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 64-bit integers. The two arrays represent an array integer ranges. Sets the <see langword="ValueType" /> property to ValueTypeLongRange, and sets the <see langword="NumberOfValues" /> property to the number of elements in the <paramref name="rangebegin" /> array, which must be the same as the number of elements in the <paramref name="rangeend" /> array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="rangebegin">
        An array of 64-bit integers that specifies the minimum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="rangeend">
        An array of 64-bit integers that specifies the maximum values for the integer ranges. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object. A maximum value of a given index is paired with the minimum value of the same index.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOliveGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightCyan">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Lime">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>
        <para>Specifies a 270-degree rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumAquamarine">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>
        <para>
       Japanese double postcard
       (200 mm by 148
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>
        <para>Gets or sets the world transformation for this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Indigo">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>
        <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the rectangle.
      </param>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.Point" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>
        <para>Specifies a 180-degree rotation without flipping.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>
        <para>
       A5 transverse paper
       (148 mm by 210
       mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlDark">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Design.ToolboxItem" /> at the specified index.</para>
      </summary>
      <param name="index">The index of the object to get or set.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.SizeF" /> structures are different.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.SizeF" /> structure on the left of the inequality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.SizeF" /> structure on the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; <see langword="false" /> if <paramref name="sz1" /> and <paramref name="sz2" /> are equal.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>
        <para>
       Japanese postcard (100 mm by 148 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>
        <para>Gets or sets an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>
        <para> Gets or sets the bottom margin, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para> Completes the control sequence that determines when and how
      to preview a page in a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document.</param>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.RectangleF" /> by the specified amount.</para>
      </summary>
      <param name="size">
        The amount to inflate this rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>
        <para>Gets or sets the origin of the drawing surface relative to the display surface.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>
        <para>Specifies that text is right to left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>
        <para>Makes the default transparent color transparent for this <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>
        <para>Gets a value indicating whether the printer
      supports double-sided printing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>
        <para>The pixel data is read-only.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Returns a value that indicates whether the pixel format for this <see cref="T:System.Drawing.Image" /> object contains alpha information.</para>
      </summary>
      <param name="pixfmt">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="pixfmt" /> parameter contains alpha information; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PapayaWhip">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.HighlightText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text of selected items. For example, the <see cref="T:System.Drawing.Color" /> structure may be the color used for the text of selected items in a list box.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromName(System.String)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified name of a pre-defined color.</para>
      </summary>
      <param name="name">
        A string that is the name of a pre-defined color. Valid names are the same as the names of the elements of the <see cref="T:System.Drawing.KnownColor" /> enumeration.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object in the specified order.</para>
      </summary>
      <param name="angle">
        Angle of rotation in degrees.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets the collection of toolbox items that are associated
      with the specified designer host and category from the toolbox.</para>
      </summary>
      <param name="category">The toolbox item category to retrieve the toolbox items from.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items
   that are associated with the specified category and designer host.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>
        <para>Plays an EMF+ file.</para>
      </summary>
      <param name="recordType">
        An <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> enumeration that specifies the type of metafile record being played.
      </param>
      <param name="flags">
        A value that specifies additional information about the metafile.
      </param>
      <param name="dataSize">
        The size of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="data">
        An array of values containing the <see cref="T:System.Drawing.Imaging.Metafile" /> object instructions.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Blue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>
        <para>Specifies a linear gradient fill.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary>
        <para> Gets or sets an array containing the components to add to the toolbox.
      </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>
        <para>Specifies that coordinates are in the device coordinate context. On a computer screen the device coordinates are usually measured in pixels.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Cyan">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Translates the local geometric transform by the specified dimensions in the specified order.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
    </member>
    <member name="M:System.Drawing.Size.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Size" /> class from the specified dimensions.</para>
      </summary>
      <param name="width">
        The width component of the new <see cref="T:System.Drawing.Size" />.
      </param>
      <param name="height">
        The height component of the new <see cref="T:System.Drawing.Size" />.
      </param>
    </member>
    <member name="P:System.Drawing.SystemColors.MenuText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a menu's text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>
        <para>
       The selected pages are printed.
       
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.IPropertyValueUIService">
      <summary>
        <para> Provides an interface that allows management of the property list of the Properties
      window.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>
        <para>Encapsulates the data that makes up a <see cref="T:System.Drawing.Region" /> object. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AliceBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Silver">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>
        <para> Gets the paper source trays that are available on the printer.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>
        <para>Causes control characters such as the left-to-right mark to be shown in the output with a representative glyph.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>
        <para>Specifies that each character is drawn using its antialiased glyph bitmap without hinting. Better quality due to antialiasing. Stem width differences may be noticeable because hinting is turned off.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="y">
        y coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="width">
        Width of the rectangle to test for visibility.
      </param>
      <param name="height">
        Height of the rectangle to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>
        <para>Gets or sets the format of the pixel information in the <see cref="T:System.Drawing.Bitmap" />object that returned this <see cref="T:System.Drawing.Imaging.BitmapData" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Azure">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>
        <para> Gets or sets the page number of the first page to print.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.AntiqueWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>
        <para> Gets the vertical printer resolution,
       in dots per inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>
        <para>Specifies that each value in the array is a 16-bit, unsigned integer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows enhanced metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>
        <para>Specifies a flat line cap.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>
        <para>Specifies that dots per inch information is stored in the image. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amount in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Pink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.TextureBrush" /> class is a <see cref="T:System.Drawing.Brush" /> object that uses an image to fill the interior of a shape. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>
        <para>Specifies how different clipping regions can be combined.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>
        <para>Creates a copy of this <see cref="T:System.Drawing.Printing.PageSettings" /> object.</para>
      </summary>
      <returns>
        <para>A copy of this object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Adds the outline of a pie shape to this path.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="startAngle">
        The starting angle for the pie section, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.
      </param>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <param name="arguments">
        An optional array of arguments to use when doing the conversion. The number and content of these arguments is dependent on the implementer of the value formatter.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that specifies the width between the original outline of the path and the new outline this method creates.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transform to apply to the path before widening.
      </param>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.FontFamily" /> object to a human-readable string representation.</para>
      </summary>
      <returns>
        <para>The string that represents this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>
        <para>Returns a Windows handle to an enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <returns>
        <para>A Windows handle to this enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>
        <para>Clones the <see cref="T:System.Drawing.Icon" /> object, creating a duplicate image.</para>
      </summary>
      <returns>
        <para>An object that can be cast to an <see cref="T:System.Drawing.Icon" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>
        <para>Resets the <see langword="Transform" /> property of this <see cref="T:System.Drawing.TextureBrush" /> object to identity.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>Determines whether the current permission object is a subset of
 the specified permission.</para>
      </summary>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
      <returns>
        <para>
          <see langword="true" /> if the current permission object
 is a subset of <paramref name="target" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>
        <para>Specifies an invalid mode.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Red">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary>
        <para> Refreshes the state of the toolbox items.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>
        <para>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>
        <para>Specifies high quality, low speed rendering.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Ceiling(System.Drawing.PointF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.PointF" /> object to a <see cref="T:System.Drawing.Point" /> object by rounding the values of the <see cref="T:System.Drawing.PointF" /> object to the next higher integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.PointF" /> object to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Point" /> object this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> object and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that multiplies the world transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
      <param name="brush">
        A <see cref="T:System.Drawing.Brush" /> object that determines the fill properties of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Point" /> class from a <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the coordinates for the new <see cref="T:System.Drawing.Point" />.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary>
   Initializes the current <see cref="T:System.Drawing.Design.ToolboxItem" /> with the specified type.
</summary>
      <param name="type">The Type to initialize this <see cref="T:System.Drawing.Design.ToolboxItem" /> with.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>
        <para>Specifies default mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Beige">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Adds the specified project-linked toolbox item to the toolbox in the specified category.</para>
      </summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name=" category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem" /> to.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
    </member>
    <member name="F:System.Drawing.KnownColor.OrangeRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>
        <para>Increments the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object to the next marker in the path and returns the start and stop indexes by way of the out parameters.</para>
      </summary>
      <param name="startIndex">
        [out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.
      </param>
      <param name="endIndex">
        [out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <paramref name="startIndex" /> points.
      </param>
      <returns>
        <para>The number of points between this marker and the next.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>
        <para>Specifies a device pixel as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>
        <para>Gets the width and height of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>
        <para>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the point to test for visibility.
      </param>
      <param name="y">
        y coordinate of the point to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with 1-inch margins.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>
        <para>Returns the height of this <see cref="T:System.Drawing.Font" /> object when drawn by the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="graphics">
        A <see cref="T:System.Drawing.Graphics" /> object that represents the graphics context in which to measure this <see cref="T:System.Drawing.Font" /> object.
      </param>
      <returns>
        <para>The height, in the specified graphics context, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>
        <para>Specifies the different patterns available for <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> objects.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary>
        <para> Provides a base implementation of a toolbox item.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>
        <para>Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSlateBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Fuchsia">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>
        <para>Gets style information for this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>
        <para>Specifies the type of color data in the system palette. The data can be color data with alpha, grayscale data only, or halftone data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain one <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillPie" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Drawing.Size)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.Rectangle" /> by the specified amount.</para>
      </summary>
      <param name="size">
        The amount to inflate this rectangle.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.WindowText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not return any properties. A simple implementation of this method can just call the <see langword="TypeDescriptor.GetProperties" /> method for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that describe the properties.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>
        <para>Specifies the format of the image. Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>
        <para>Specifies a 270-degree rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Plum">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.</para>
      </summary>
      <param name="sx">
        The factor by which to scale the transformation in the x-axis direction.
      </param>
      <param name="sy">
        The factor by which to scale the transformation in the y-axis direction.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.Collected">
    </member>
    <member name="P:System.Drawing.Color.LightSkyBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>
        <para>
       A printer-specific paper source.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Gets a collection that contains a set of standard values for the data type this validator is designed for. Returns <see langword="null" /> if the data type does not support a standard set of values.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <returns>
        <para>A collection that contains a standard set of valid values, or <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that determine the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontFamily" /> object from the specified generic font family.</para>
      </summary>
      <param name="genericFamily">
        The <see cref="T:System.Drawing.Text.GenericFontFamilies" /> enumeration from which to create the new <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures .</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Size">
      <summary>
        <para>Gets or sets the size of this <see cref="T:System.Drawing.Rectangle" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>
        <para>
       Japanese Chou #4 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Drawing.Point)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> to test.
      </param>
      <returns>
        <para>This method returns<see langword=" true" /> if the point represented by <paramref name="pt" /> is contained within this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from a resource in the specified assembly.</para>
      </summary>
      <param name="t">
        A <see langword="Type" /> object that specifies where to find the image from which to construct the new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> class with the specified width, height, and fill property. Whether or not an arrow end cap is filled depends on the argument passed to the <paramref name="isFilled" /> parameter.</para>
      </summary>
      <param name="width">
        The width of the arrow.
      </param>
      <param name="height">
        The height of the arrow.
      </param>
      <param name="isFilled">
        <see langword="true" /> to fill the arrow cap; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>
        <para>Specifies that the image is to be rotated 180 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line segments.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the points to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>
        <para>Specifies two modes for color component values.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> object and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="matrix">
        4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that multiplies the world transformation.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that determines the order of the multiplication.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the render method parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Round(System.Drawing.PointF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.PointF" /> object to a <see cref="T:System.Drawing.Point" /> object by rounding the <see cref="T:System.Drawing.Point" /> object values to the nearest integer.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.PointF" /> object to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Point" /> object this method converts to.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Accelerator">
    </member>
    <member name="P:System.Drawing.Color.SeaShell">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>
        <para>Specifies horizontal lines that are composed of tildes.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>
        <para>Specifies horizontal and vertical lines that cross.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SaddleBrown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>
        <para>Gets the Windows metafile (WMF) image format.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.None">
      <summary>
        <para> Provides no interactive user interface (UI) component.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>
        <para>
       The middle bin of a printer.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>
        <para>Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>
        <para>
       A paper cassette.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Updates the brush's transformation matrix with the product of the brush's transformation matrix  multiplied by another matrix.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that will be multiplied by the brush's current transformation matrix.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies in which order to multiply the two matrices.
      </param>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of a window frame.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the remap table as specified by the <see cref="T:System.Drawing.Imaging.ColorMap" /> object for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration.</para>
      </summary>
      <param name="map">
        An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).
      </param>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>
        <para>Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>
        <para>Specifies the LZW compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the Compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>
        <para>Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object with curves that enclose the area that is filled when this path is drawn by the specified pen.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that specifies the width between the original outline of the path and the new outline this method creates.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transform to apply to the path before widening.
      </param>
      <param name="flatness">
        A value that specifies the flatness for curves.
      </param>
    </member>
    <member name="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if changing a value on this object should require a call to <see langword="CreateInstance" /> to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="CreateInstance" /> method should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system asterisk icon (WIN32: IDI_ASTERISK).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>
        <para>Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</para>
      </summary>
      <param name="angle">
        The angle (extent) of the rotation.
      </param>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the center of the rotation.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SizeF.Width">
      <summary>
        <para>Gets or sets the horizontal component of this <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>
        <para>Returns the cell descent, in design units, of the <see cref="T:System.Drawing.FontFamily" /> object of the specified style. For information about font metrics, see <see langword="Obtaining Font Metrics" />.</para>
      </summary>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that contains style information for the font.
      </param>
      <returns>
        <para>The cell descent metric for this <see cref="T:System.Drawing.FontFamily" /> object that uses the specified <see cref="T:System.Drawing.FontStyle" /> enumeration .</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>
        <para>Gets or sets a value indicating the presence of a placeable metafile header.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSkyBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified data stream, using embedded color management information in that stream.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="useEmbeddedColorManagement">
        Set to <see langword="true" /> to use color management information embedded in the data stream; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>
        <para>Specifies the millimeter as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.RoyalBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.StringTrimming" /> enumeration for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>
        <para>Specifies bilinear interpolation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.
      </param>
      <param name="plgpts">
        An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.
      </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>
        <para>Gets or sets an array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> structures that represents the types of data in the corresponding elements of the <see langword="Points" /> array.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>
        <para>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="destPoints">
        An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.
      </param>
      <param name="srcRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.
      </param>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a geometric transform to apply to the path.
      </param>
      <param name="warpMode">
        A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.
      </param>
      <param name="flatness">
        A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.
      </param>
    </member>
    <member name="P:System.Drawing.Color.LightSteelBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>
        <para>Specifies the type of warp transformation applied in a <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Warp" /> method.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if changing a value on this object should require a call to <see langword="CreateInstance" /> to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="CreateInstance" /> should be called when a change is made to one or more properties of this object; otherwise, false.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Cornsilk">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DodgerBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
 event.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SRDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle and a <see langword="WmfPlaceableFileHeader" /> object.</para>
      </summary>
      <param name="hmetafile">
        A windows handle to a <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="wmfHeader">
        A <see langword="WmfPlaceableFileHeader" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Orchid">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Gray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>
        <para> Paints a representation of the value of an
      object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> that indicates what to paint and where to paint it.</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>
        <para>
       Japanese rotated postcard
       (148 mm by 100
       mm). Requires Windows
       98,
       Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlDarkDark">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Scales the local geometric transformation by the specified factors in the specified order.</para>
      </summary>
      <param name="sx">
        The factor by which to scale the transformation in the x-axis direction.
      </param>
      <param name="sy">
        The factor by which to scale the transformation in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>
        <para>Adds a polygon to this path.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>
        <para>Gets or sets the property value.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>
        <para> Specifies the type of printing that code is allowed to do.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from a handle to the specified existing GDI region.</para>
      </summary>
      <param name="hrgn">
        A handle to an existing <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.RectangleF.Size">
      <summary>
        <para>Gets or sets the size of this <see cref="T:System.Drawing.RectangleF" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Width">
      <summary>
        <para>Gets or sets the width of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>
        <para>Standard paper (10 in. by 14 in.).
       </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>
        <para>
       People's Republic of
       China #10 envelope (324 mm
       by 458
       mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Name">
      <summary>
        <para>Gets the name of this <see langword="Color " />Name. This will either return the user-defined name of the color, if the color was created from a name, or the name of the known color. For custom colors, the RGB value will be returned.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>
        <para>Gets the types of the corresponding points in the <see langword="PathPoints" /> array.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="layoutRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the text.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>
        <para>Specifies the world unit as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</para>
      </summary>
      <param name="fillPath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.
      </param>
      <param name="strokePath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.
      </param>
      <param name="baseCap">
        The LineCap from which to create the custom cap.
      </param>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>
        <para>Display the hot-key prefix.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>
        <para>Specifies an invalid mode.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if this object supports properties. By default, this is <see langword="false" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="GetProperties" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.X">
      <summary>
        <para>Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Y">
      <summary>
        <para>Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line segments.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the 5x5 color-adjust matrix to the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object with the specified <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration.</para>
      </summary>
      <param name="newColorMatrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the new color-adjust matrix.
      </param>
      <param name="mode">
        A <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration member that specifies whether to adjust colors for grayscale, colors, or both grayscale and colors.
      </param>
      <param name="type">
        A <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration member that specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />,  and so on) that use the color-adjust information.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> class with
   serialized data.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>
        <para>Gets or sets the type of printing allowed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>
        <para>Empties the <see langword="PathPoints" /> and <see langword="PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see langword="Alternate" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>
        <para>Specifies horizontal lines that are composed of zigzags.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>
        <para>Content is vertically aligned in the middle, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
        <para>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).
      </param>
    </member>
    <member name="P:System.Drawing.Color.DarkRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>
        <para>Gets a globally unique identifier (GUID) that identifies an image encoder parameter category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the compression parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Size.Empty">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Size" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightCoral">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>
        <para>Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to have the elements of the identity matrix.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>
        <para>Gets or sets an array of blend positions for the gradient.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is the identity matrix.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.CharacterRange" /> structure, specifying a range of character positions within a string.</para>
      </summary>
      <param name="First">
        The position of the first character in the range. For example, if <paramref name="First" /> is set to 0, then the first position of the range is position 0 in the string.
      </param>
      <param name="Length">
        The number of positions in the range.
      </param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified file.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>
        <para>Starts the document's printing process.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="shearX">
        The horizontal shear factor.
      </param>
      <param name="shearY">
        The vertical shear factor.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the shear is applied.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, and a height and two radial lines.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Find">
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary>
        <para>Indicates whether the <see cref="T:System.Drawing.Design.ToolboxItem" /> is currently locked.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>
        <para>Gets or set a value specifying how pixels are offset during rendering of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</para>
      </summary>
      <param name="fillMode">
        The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Magenta">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.
      </param>
      <param name="plgpts">
        An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left coners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>
        <para>The new operation is applied before the old operation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>
        <para>Specifies the available cap styles with which a <see cref="T:System.Drawing.Pen" /> object can end a line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>
        <para>Specifies no rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>
        <para>Specifies no rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Subtraction(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.PointF" /> by the negetive of a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.PointF" /> to compare.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.PointF" /> to compare.
      </param>
      <returns>
        <para>Returns the translated <see cref="T:System.Drawing.PointF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration.</para>
      </summary>
      <param name="options">
        The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>
        <para>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>
        <para> Gets the size of the printed page, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HotPink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>
        <para>Specifies a hatch that has the appearance of a checkerboard placed diagonally.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.SetClip" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>
        <para>Returns the height, in pixels, of this <see cref="T:System.Drawing.Font" /> object when drawn to a device with the specified vertical resolution.</para>
      </summary>
      <param name="dpi">
        The vertical resolution, in dots per inch, used to calculate the height of the font.
      </param>
      <returns>
        <para>The height, in pixels, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointF.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.PointF" /> object.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.PointF" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>
        <para>Gets or sets the ID of the property.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>
        <para>Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to a specified array of points.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.
      </param>
    </member>
    <member name="M:System.Drawing.RectangleConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.RectangleConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>
        <para>Encapsulates a <see cref="T:System.Drawing.Brush" /> object with a linear gradient. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>
        <para>
       A5 paper (148
       mm by 210
       mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Magenta">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.Add(System.IntPtr)">
    </member>
    <member name="T:System.Drawing.SizeF">
      <summary>
        <para>Represents the size of a rectangular region with an ordered pair of width and height.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>
        <para>Encapsulates a GDI+ drawing surface. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object with its original size at the location specified by a coordinate pair.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>
        <para>Content is vertically aligned at the bottom, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain the portion of the specified <see cref="T:System.Drawing.Region" /> object that does not intersect with this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to complement this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Implicit(System.Drawing.Size)~System.Drawing.SizeF">
      <summary>
    Converts the specified <see cref="T:System.Drawing.Size" /> to a
 <see cref="T:System.Drawing.SizeF" />.
 </summary>
      <param name="p">
    The Size to convert.
 </param>
      <returns>
    The <see cref="T:System.Drawing.SizeF" /> conversion of <paramref name="p" />.
 </returns>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>
        <para>Encapsulates a metadata property to be included in an image file. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>
        <para>Starts a new figure without closing the current figure. All subsequent points added to the path are added to this new figure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>
        <para>Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style <see langword="Cross" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>
        <para>Gets or sets the maximum number of objects that exist in the <see cref="T:System.Drawing.Imaging.Metafile" /> object at the same time.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>
        <para>Specifies that the image is stored using a YCBCR color space. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SlateGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn text.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn text.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>
        <para>Gets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.ToPointF">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.SizeF" /> to a <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumTurquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" />.
      </param>
    </member>
    <member name="M:System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF">
      <summary>
        <para>
       Creates a <see cref="T:System.Drawing.PointF" /> with the coordinates of the specified
    <see cref="T:System.Drawing.Point" /> 
    .
 </para>
      </summary>
      <param name="p">
    A <see cref="T:System.Drawing.Point" /> that specifies the coordinates for the new <see cref="T:System.Drawing.PointF" /> .
 </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.RectangleF" /> structure that represents the intersection of two rectangles. If there is no intersection, null is returned.</para>
      </summary>
      <param name="a">
        A rectangle to intersect.
      </param>
      <param name="b">
        A rectangle to intersect.
      </param>
      <returns>
        <para>A third <see cref="T:System.Drawing.RectangleF" /> structure the size of which represents the overlapped area of the two specified rectangles.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>
        <para>Gets or sets an array of blend factors for the gradient.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>
        <para>
       The lower bin of a printer.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is invertible.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Transforms this <see cref="T:System.Drawing.Region" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to transform this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para> Returns whether this converter can
      convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to which you want to convert.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise,
   <see langword="false" />. </para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>
        <para>Specifies a line consisting of dots.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    </member>
    <member name="M:System.Drawing.Color.GetSaturation">
      <summary>
        <para>Gets the hue-saturation-brightness (HSB) saturation value for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The saturation of this <see cref="T:System.Drawing.Color" /> structure. The saturation ranges from 0.0 through 1.0, where 0.0 is grayscale and 1.0 is the most saturated.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
      <param name="gdiVerticalFont">
        A Boolean value indicating whether the new <see cref="T:System.Drawing.Font" /> object is derived from a GDI vertical font.
      </param>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>
        <para>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects available for the specified graphics context.</para>
      </summary>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object from which to return <see cref="T:System.Drawing.FontFamily" /> objects.
      </param>
      <returns>
        <para>An array of <see cref="T:System.Drawing.FontFamily" /> objects available for the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkKhaki">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object using the specified order.</para>
      </summary>
      <param name="scaleX">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.
      </param>
      <param name="scaleY">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Implicit(System.Drawing.Point)">
      <summary>
        <para>Implicitly converts a <see cref="T:System.Drawing.Point" /> to a <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
      <param name="p">
        The <see cref="T:System.Drawing.Point" /> to convert.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>
        <para>Specifies how the interior of a closed path is filled.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>
        <para>Specifies that the format is 16 bits per pixel; 5 bits are used for the red component, 6 bits are used for the green component, and 5 bits are used for the blue component. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>
        <para>Sets the caps used to start and end lines that make up this custom cap.</para>
      </summary>
      <param name="startCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.
      </param>
      <param name="endCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>
        <para>Standard paper (10 in. by 11 in.).
       </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Crimson">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from the specified file name.</para>
      </summary>
      <param name="imageFile">
        The file name for a 16 by 16 bitmap for the component.
      </param>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>
        <para>Specifies the direction of an image's rotation and the axis used to flip the image.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see langword="HatchStyle" /> enumeration, foreground color, and background color.</para>
      </summary>
      <param name="hatchstyle">
        The <see langword="HatchStyle" /> enumeration that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
      <param name="foreColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
      <param name="backColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color of spaces between the lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>
        <para>Gets the size of this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>
        <para>Provides flags for use with codecs.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the right from top points to bottom points, have the same spacing as hatch style <see langword="ForwardDiagonal" />, and are triple its width, but are not antialiased.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</para>
      </summary>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</param>
      <param name="descriptor">The property associated with the icon that was double-clicked.</param>
      <param name="invokedItem">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</param>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.FontConverter">
      <summary>
        <para>Converts <see cref="T:System.Drawing.Font" /> objects from one data type to another. Access the <see cref="T:System.Drawing.FontConverter" /> class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>
        <para>Specifies that all EMF+ records in the metafile are associated with an alternate EMF record. Metafiles of type <see langword="EmfTypeEmfPlusDual" /> can be displayed by GDI or by GDI+.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class and attempts to find a version of the icon that matches the requested size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Icon" /> object from which to load the newly sized icon.
      </param>
      <param name="size">
        A <see cref="T:System.Drawing.Size" /> structure that specifies the height and width of the new <see cref="T:System.Drawing.Icon" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>
        <para>Gets the number of elements in the array of values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Salmon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.PropertyValueUIItem.Reset">
      <summary>
        <para>Resets the UI item.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>
        <para>Defines a 5x5 matrix that contains the coordinates for the RGBA space. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color matrix. Not inheritable.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>
        <para>Reserved. Do not use.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>
        <para> Gets or sets the document name to display (for example, in a
      print status dialog box or printer queue) while printing the
      document.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>
        <para>Specifies individual channels in the CMYK (cyan, magenta, yellow, black) color space. This enumeration is used by the <see cref="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGoldenrod">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>
        <para> Gets the angle, in degrees, that the portrait orientation is rotated
      to produce the landscape orientation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemBrushes" /> class is a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of a Windows display element.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>
        <para> Copies the relevant information from the
   <see cref="T:System.Drawing.Printing.PageSettings" /> to the specified DEVMODE structure.</para>
      </summary>
      <param name="hdevmode">The handle to a Win32 DEVMODE structure.</param>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>
        <para>Reserved.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.Ceiling(System.Drawing.SizeF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.SizeF" /> structure to a <see cref="T:System.Drawing.Size" /> structure by rounding the values of the <see cref="T:System.Drawing.Size" /> structureto the next higher integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.SizeF" /> structure to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Size" /> structure this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 64-bit integers. Sets the <see langword="ValueType" /> property to ValueTypeLong (32-bit), and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of 64-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative. The 64-bit integers are converted to 32-bit integers before they are stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</para>
      </summary>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>
        <para>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="destPoints">
        An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.
      </param>
      <param name="srcRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>
        <para>Indicates whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the face color of a 3-D element.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>
        <para>Indicates whether the specified object is a <see cref="T:System.Drawing.Font" /> object and is identical to this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="obj" /> parameter is a <see cref="T:System.Drawing.Font" /> object and is identical to this <see cref="T:System.Drawing.Font" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.PropertyValueUIItem.#ctor(System.Drawing.Image,System.Drawing.Design.PropertyValueUIItemInvokeHandler,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> class.</para>
      </summary>
      <param name="uiItemImage">The icon to display. The image must must be 8 x 8 pixels.</param>
      <param name="handler">The handler to raise when the image is double-clicked.</param>
      <param name="tooltip">The <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> to display for the property that this <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> is associated with.</param>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>
        <para>Gets a generic monospace <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>
        <para>Gets a generic typographic <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> class with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object for which this helper class is to be initialized.
      </param>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>
        <para>Gets or sets the handle of the metafile in memory.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>
        <para> Gets or sets the code's level of printing access.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Locks a <see cref="T:System.Drawing.Bitmap" /> object into system memory.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure specifying the portion of the <see cref="T:System.Drawing.Bitmap" /> to lock.
      </param>
      <param name="flags">
        An <see cref="T:System.Drawing.Imaging.ImageLockMode" /> enumeration specifying access level (read and write) for the <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration specifying the data format of this <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Imaging.BitmapData" /> object containing information about this lock operation.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a value indicating whether the specified object is 
      a serialized toolbox item, using the specified designer host.</para>
      </summary>
      <param name="serializedObject">The object to inspect.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is making this request.</param>
      <returns>
        <para>
          <see langword="true" /> if the object contains a
   toolbox item object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if this object supports a standard set of values that can be chosen from a list.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="GetStandardValues" /> must be called to find a common set of values the object supports; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>
        <para>Specifies that each value in the array is a 32-bit unsigned integer.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BlueViolet">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Sets a color-adjust matrix for image colors and a separate grayscale-adjust matrix for grayscale values.</para>
      </summary>
      <param name="newColorMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image colors from one color space to another.
      </param>
      <param name="grayMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image grayscales from one color space to another.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>
        <para>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>
        <para>The number of types specified.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>
        <para>Sets the wrap mode, color, and clamp.</para>
      </summary>
      <param name="mode">
        Specifies the wrap mode.
      </param>
      <param name="color">
        Address of a <see cref="T:System.Drawing.Color" /> structure. The default is <see cref="T:System.Drawing.Color" />().
      </param>
      <param name="clamp">
        Specifies whether to clamp the color at the image boundaries. If clamp is <see langword="true" />, clamp to the image boundary. Otherwise, there is no clamping.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>
        <para>Specifies horizontal lines that are spaced 50 percent closer together than Horizontal and are twice the width of <see langword="HatchStyleHorizontal" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>
        <para>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image encoders built in to GDI+.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image encoders.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>
        <para>The unit of measurement is 1 pixel.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF">
      <summary>
    Converts the specified <see cref="T:System.Drawing.Rectangle" /> to a
 <see cref="T:System.Drawing.RectangleF" />.
 </summary>
      <param name="r">
    The <see cref="T:System.Drawing.Rectangle" /> to convert.
 </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Creates components from each type contained in this toolbox
      item.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to host the toolbox item.</param>
      <returns>
        <para>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>
        <para>The pixel data uses a CMYK color space.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>When overridden in a derived class, begins the control sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>
        <para>Specifies that each character is drawn using its antialiased glyph bitmap with hinting. Much better quality due to antialiasing, but at a higher performance cost.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified data stream.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.GetHandleCount">
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>
        <para>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> object by the specified amount.</para>
      </summary>
      <param name="dx">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object horizontally.
      </param>
      <param name="dy">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>
        <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the outlines of the rectangles.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>
        <para>Specifies that coordinates are in the world coordinate context. World coordinates are used in a nonphysical environment, such as a modeling environment.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>
        <para>Gets an array of the property IDs stored in this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>
        <para>
       C65 envelope (114
       mm by 229 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Navy">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.BitmapData" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>
        <para>Gets the width of this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>
        <para>Indicates that the codec supports raster images (bitmaps). </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>
        <para>Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <see langword="ImageCodecFlags" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.FloralWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>
        <para>Specifies that a frame is to be added to the page dimension of an image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.PointF" /> to a human readable string.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.PointF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified file using embedded color management information in that file.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="useEmbeddedColorManagement">
        Set to <see langword="true" /> to use color management information embedded in the image file; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>
        <para>Gets or sets the size, in bytes, of the header file.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>
        <para> Creates a copy of this <see cref="T:System.Drawing.Printing.PrinterSettings" /> object.</para>
      </summary>
      <returns>
        <para> A copy of this object.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>
        <para>Specifies style information applied to text.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>
        <para> Gets all the resolutions that are supported by this printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.ToString">
      <summary>
        <para>Creates a human-readable string that represents this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Size" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object are tiled.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <returns>
        <para>An <see langword="Object" /> object that can be cast to a <see cref="T:System.Drawing.Pen" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system warning icon (WIN32: IDI_WARNING).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
      <param name="fillMode">
        A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>
        <para>Grayscale data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.NeedCollection">
    </member>
    <member name="F:System.Drawing.KnownColor.Green">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Drawing.Design.ToolboxItem" />, if it exists in the collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.ToolboxItem" /> to get the index of in the collection.</param>
      <returns>
        <para>The index of the specified <see cref="T:System.Drawing.Design.ToolboxItem" /> .</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>
        <para>You can use an <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object to pass an array of values to an image encoder. You can also use an <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object to receive a list of possible values supported by a particular parameter of a particular image encoder.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>
        <para>Specifies how to trim characters from a string that does not completely fit into a layout shape.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string  specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>
        <para>See <see langword="Graphics.CompositingQuality" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> class.</para>
      </summary>
      <param name="array">
        <para>An array of type <see cref="T:System.Drawing.Printing.PaperSize" />.</para>
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawImage" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system information icon (WIN32: IDI_INFORMATION).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>
        <para>Gets or sets the gamma correction value for rendering text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>
        <para>Specifies the winding fill mode.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>
        <para>Gets the width and height of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>
        <para>Specifies a mask used to check whether a line cap is an anchor cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>
        <para>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> object by the specified amount.</para>
      </summary>
      <param name="dx">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object horizontally.
      </param>
      <param name="dy">
        The amount to offset this <see cref="T:System.Drawing.Region" /> object vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>
    C6 envelope (114 mm by 162 mm).
 </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>
        <para>Converts each curve in this path into a sequence of connected line segments.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>
        <para>Advances the frame in all images currently being animated. The new frame is drawn the next time the image is rendered.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>
        <para>Specifies a gradient from upper left to lower right.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>
        <para>Specifies a character string, a location, and formatting information.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para> Gets the collection of toolbox items that are associated 
      with the specified designer host from the toolbox.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items 
   that are associated with the specified designer host.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>
        <para>Indicates that the codec supports decoding (reading). </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.SeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>
        <para>Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object a clockwise rotation, around the origin and by the specified angle.</para>
      </summary>
      <param name="angle">
        The angle of the rotation.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>
        <para>Gets a memory bitmap image format.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that represents the path to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Brown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DeepSkyBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>
        <para>High quality, low speed compositing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawRectangles" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>
        <para>Sets the 5x5 color-adjust matrix to the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="newColorMatrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the new color-adjust matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.AppWorkspace">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>
        <para>Provides properties that get the frame dimensions of an image. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Creates and returns an inflated copy of the specified <see cref="T:System.Drawing.RectangleF" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> to be copied. This rectangle is not modified.
      </param>
      <param name="x">
        The amount to inflate the copy of the rectangle horizontally.
      </param>
      <param name="y">
        The amount to inflate the copy of the rectangle vertically.
      </param>
      <returns>
        <para>The inflated <see cref="T:System.Drawing.RectangleF" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>
        <para>Gets the format of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>
        <para>Encapsulates a custom user-defined line cap.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlDarkDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the dark shadow color of a 3-D element. The dark shadow color is applied to the parts of a 3-D element that are the darkest color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Graphics" /> object.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified <see cref="T:System.Drawing.Image" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>
        <para>Copies the <see cref="P:System.Drawing.Drawing2D.GraphicsPathPathPoints" /> property and <see cref="P:System.Drawing.Drawing2D.GraphicsPathPathTypes" /> property arrays of the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into the two specified arrays.</para>
      </summary>
      <param name="points">
        Upon return, contains an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points in the path.
      </param>
      <param name="types">
        Upon return, contains an array of bytes that represents the types of points in the path.
      </param>
      <returns>
        <para>The number of points copied.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an <see cref="T:System.Object" /> given a set
 of property values for the object.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="propertyValues">An <see cref="T:System.Collections.IDictionary" /> of new property values.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> representing
 the specified <see cref="T:System.Collections.IDictionary" />; or <see langword="null" /> if the object cannot be created.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the background of selected items. This includes selected menu items as well as selected text. For example, the pen may be the color used for the background of selected items in a list box.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary>
        <para>Copies the collection to the specified array beginning 
      with the specified destination index.</para>
      </summary>
      <param name="array">The array to copy to.</param>
      <param name=" index">The index to begin copying to.</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="width">
        Width of the rectangle to fill.
      </param>
      <param name="height">
        Height of the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Size.Height">
      <summary>
        <para>Gets or sets the vertical component of this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>
        <para>Specifies an Enhanced Metafile (EMF) file. Such a file contains only GDI records.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>
        <para> Gets or sets the number of copies of the document to print.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary>
        <para> Provides access to the toolbox in the development environment.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect " />parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Highlight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of selected items. This includes selected menu items as well as selected text. For example, the <see cref="T:System.Drawing.Color" /> structure may be the color used for the background of selected items in a list box.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>
        <para>Specifies world units as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.RectangleF" /> class with the specified location and size.</para>
      </summary>
      <param name="location">
        A <see cref="T:System.Drawing.PointF" /> that represents the upper-left corner of the rectangular region.
      </param>
      <param name="size">
        A <see cref="T:System.Drawing.SizeF" /> that represents the width and height of the rectangular region.
      </param>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>
        <para>Specifies whether commands in the graphics stack are terminated (flushed) immediately or executed as soon as possible.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see langword="Width" /> properties.</para>
      </summary>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <param name="width">
        A value indicating the width of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="type">
        The <see langword="Type" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>
        <para>Specifies a millimeter as the unit of measure</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Tomato">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>
        <para>Gets the Exchangeable Image File (Exif) format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>
        <para> Gets or
       sets the height of the paper, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the line.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the line.
      </param>
      <param name="x2">
        The x-coordinate of the endpoint of the line.
      </param>
      <param name="y2">
        The y-coordinate of the endpoint of the line.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>
        <para>Specifies a user-defined custom dash style.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Olive">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>
        <para>
       People's Republic
       of China #8 rotated
       envelope (309 mm
       by 120
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>
        <para>Gets a value indicating whether the clipping region of this <see cref="T:System.Drawing.Graphics" /> object is empty.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>
        <para> Gets or sets the number of the last page to print.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged">
      <summary>
        <para>Occurs when the list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects is modified.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
        <para>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).
      </param>
      <param name="scale">
        A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color)
      </param>
    </member>
    <member name="F:System.Drawing.PointF.Empty">
      <summary>
        <para>Represents a new instance of the <see cref="T:System.Drawing.PointF" /> class with member data left uninitialized.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Creates a copy of the section of this <see cref="T:System.Drawing.Bitmap" /> object defined by <see cref="T:System.Drawing.Rectangle" /> structure and with a specified <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration.</para>
      </summary>
      <param name="rect">
        Defines the portion of this <see cref="T:System.Drawing.Bitmap" /> object to copy. Coordinates are relative to this <see cref="T:System.Drawing.Bitmap" />.
      </param>
      <param name="format">
        Specifies the <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the destination <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.Bitmap" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSeaGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object is to be multiplied.
      </param>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <para>
          <see cref="T:System.Drawing.ImageFormatConverter" /> is a class that can be used to convert colors from one data type to another. Access this class through the <see langword="TypeDescriptor" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Black">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>
        <para>Invalid quality.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.Round(System.Drawing.SizeF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.SizeF" /> structure to a <see cref="T:System.Drawing.Size" /> structure by rounding the values of the <see cref="T:System.Drawing.Size" /> structure to the nearest integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.SizeF" /> structure to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Size" /> structure this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointF.#ctor(System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.PointF" /> class with the specified coordinates.</para>
      </summary>
      <param name="x">
        The horizontal position of the point.
      </param>
      <param name="y">
        The vertical position of the point.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>
        <para>Gets the horizontal resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>
        <para>Gets the vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>
        <para>
       People's Republic of
       China 16K paper (146 mm
       by 215
       mm). Requires Windows
       98, Windows NT 4.0,
       or later.
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>
        <para>Specifies a solid fill.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 8-bit value. Sets the <see langword="ValueType" /> property to ValueTypeUndefined or ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A byte that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="undefined">
        If <see langword="true" />, the <see langword="ValueType" /> property is set to ValueTypeUndefined; otherwise, the <see langword="ValueType" /> property is set to ValueTypeByte.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSlateBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLightLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.EMF">
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Text.PrivateFontCollection" /> class. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>
        <para>Represents a Windows icon, which is a small bitmap image used to represent an object. Icons can be thought of as transparent bitmaps, although their size is determined by the system.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>
        <para> Gets or sets a value indicating whether the printed document is collated.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Drawing.PointF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class from the specified <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.PointF" /> from which to initialize this <see cref="T:System.Drawing.SizeF" />.
      </param>
    </member>
    <member name="P:System.Drawing.Color.Aquamarine">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Wheat">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>
        <para>Specifies that a portion of the image is locked for reading.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>
        <para>Clamps the texture or gradient to the object boundary.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>
        <para>The number of types specified.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> class using the specified collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> to fill the new collection with.</param>
    </member>
    <member name="T:System.Drawing.ColorTranslator">
      <summary>
        <para>Translates colors to and from GDI+ <see cref="T:System.Drawing.Color" /> structures. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveBorder">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string can be provided to name the file.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>
        <para>Contains information about how image colors are manipulated during rendering. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>
        <para>Indicates that an encoder requires a seekable output stream. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>
        <para>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightPink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>
        <para>Gets or sets the version number of the header format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> object that encapsulates arrays of points (<paramref name="points" /> ) and types (<paramref name="types" /> ) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>
        <para>Standard paper (11 in. by 17 in.).
       </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>
        <para>Gets the number of points in the path.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified Windows handle.</para>
      </summary>
      <param name="hfont">
        A Windows handle to a GDI font.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>
        <para>Specifies dashed diagonal lines, that slant to the right from top points to bottom points.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>
        <para>Creates and returns a permission that is the intersection of the current
      permission object and a target permission object.</para>
      </summary>
      <param name="target">A permission object of the same type as the current permission object. </param>
      <returns>
        <para> A new permission object that represents the intersection of
      the current object and the specified target. This object is <see langword="null" /> if
      the intersection is empty.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="y">
        y coordinate of the upper-left corner of the rectangle to test for visibility.
      </param>
      <param name="width">
        Width of the rectangle to test for visibility.
      </param>
      <param name="height">
        Height of the rectangle to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the scan method parameter category.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SandyBrown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DodgerBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>
        <para>Specifies that the array of values is an array of bytes that has no data type defined.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle to fill.
      </param>
      <param name="width">
        Width of the rectangle to fill.
      </param>
      <param name="height">
        Height of the rectangle to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Appends a line segment to the current figure.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the line.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the line.
      </param>
      <param name="x2">
        The x-coordinate of the endpoint of the line.
      </param>
      <param name="y2">
        The y-coordinate of the endpoint of the line.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumPurple">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>
        <para>An abstract base class that provides functionality for <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Icon" /> and <see cref="T:System.Drawing.Imaging.Metafile" /> descended classes.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>
        <para>Specifies the last frame in a multiple-frame image. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>
        <para>Defines a particular format for text, including font face, size, and style attributes. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>
        <para>
       A4 extra
       paper
       (236 mm by 322 mm). This value is specific to the PostScript driver and is used only
       by Linotronic printers to help save paper.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Top">
      <summary>
        <para>Gets the y-coordinate of the top edge of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>
        <para>Defines a brush of a single color. Brushes are used to fill graphics shapes, such as rectangles, ellipses, pies, polygons, and paths. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and two arrays of 32-bit integers. The two arrays represent an array of fractions. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeRational" />, and sets the <see langword="NumberOfValues" /> property to the number of elements in the <paramref name="numerator" /> array, which must be the same as the number of elements in the <paramref name="denominator" /> array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator">
        An array of 32-bit integers that specifies the numerators of the fractions. The integers in the array must be nonnegative.
      </param>
      <param name="denominator">
        An array of 32-bit integers that specifies the denominators of the fractions. The integers in the array must be nonnegative. A denominator of a given index is paired with the numerator of the same index.
      </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Gets a value indicating whether the specified tool is supported by the current
      designer.</para>
      </summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to be tested for toolbox support.</param>
      <returns>
        <para>
          <see langword="true" /> if the tool
   is supported by the toolbox and can be
   enabled; <see langword="false" /> if the document designer does not know how
   to use the tool.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Drawing.Color)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified <see cref="T:System.Drawing.Color" /> structure, but with the new specified alpha value. Although this method allows a 32-bit value to be passed for the alpha value, the value is limited to 8 bits.</para>
      </summary>
      <param name="alpha">
        The alpha value for the new <see cref="T:System.Drawing.Color" /> structure. Valid values are 0 through 255.
      </param>
      <param name="baseColor">
        The <see cref="T:System.Drawing.Color" /> structure from which to create the new <see cref="T:System.Drawing.Color" /> structure.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.R">
      <summary>
        <para>Gets the red component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />or
<see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> event of a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> object and <see langword="Width" />.</para>
      </summary>
      <param name="brush">
        A <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of this <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <param name="width">
        The width of the new <see cref="T:System.Drawing.Pen" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MidnightBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.Remove(System.IntPtr,System.Int32)">
    </member>
    <member name="M:System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)">
      <summary>
        <para>Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangular region  represented by <paramref name="rect" /> is entirely contained within this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>
        <para>Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>
        <para> The pages between <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> and
 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
 are
 printed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>
        <para>Gets a human-readable string that describes the <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
      <returns>
        <para>A string that describes the <see cref="T:System.Drawing.Icon" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>
        <para>Copies the relevant information out of the given handle and
      into the <see cref="T:System.Drawing.Printing.PrinterSettings" />.</para>
      </summary>
      <param name="hdevnames">The handle to a Win32 DEVNAMES structure.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> event.</para>
      </summary>
      <param name="args">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="hmetafile">
        The handle to the <see cref="T:System.Drawing.Imaging.Metafile" /> object for which to return a header.
      </param>
      <param name="wmfHeader">
        A <see langword="WmfPlaceableFileHeader" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PowderBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>
        <para> Gets the rectangular area that represents the portion of the page inside the margins.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GhostWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>
        <para> Gets or sets the printer setting for double-sided printing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>
        <para>Returns the height of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>The height, in font design units, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>
        <para>Specifies the default mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>
        <para>Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into a sequence of connected line segments.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.
      </param>
      <param name="flatness">
        Specifies the maximum permitted error between the curve and its flattened approximation. A value of 0.25 is the default. Reducing the flatness value will increase the number of line segments in the approximation.
      </param>
    </member>
    <member name="M:System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Rectangle" /> class with the specified location and size.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="width">
        The width of the rectangle.
      </param>
      <param name="height">
        The height of the rectangle.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Transparent">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DeepPink">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>
        <para>
       Japanese You #4 rotated envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the curve.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the curve.
      </param>
      <param name="x2">
        The x-coordinate of the first control point for the curve.
      </param>
      <param name="y2">
        The y-coordinate of the first control point for the curve.
      </param>
      <param name="x3">
        The x-coordinate of the second control point for the curve.
      </param>
      <param name="y3">
        The y-coordinate of the second control point for the curve.
      </param>
      <param name="x4">
        The x-coordinate of the endpoint of the curve.
      </param>
      <param name="y4">
        The y-coordinate of the endpoint of the curve.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.Point" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Color" /> structure to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that is the name of the color of this <see cref="T:System.Drawing.Color" /> structure, if the <see cref="T:System.Drawing.Color" /> structure is created from a pre-defined color by using either the <see langword="FromName" /> method or the <see langword="FromKnownColor" /> method; otherwise, a string that consists of the ARGB component names and their values.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>
        <para>Specifies hatch style <see langword="Horizonal" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>
        <para>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        x coordinate of the point to test for visibility.
      </param>
      <param name="y">
        y coordinate of the point to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>
        <para>The pixel data is partially scalable, but there are some limitations.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not return any properties. A simple implementation of this method can just call <see langword="TypeDescriptor.GetProperties" /> for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that describe the properties.
      </param>
      <returns>
        <para>The set of properties that are exposed for this data type. If no properties are exposed, this method might return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>
        <para>Reserved. Do not use.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.ToOle(System.Drawing.Color)">
      <summary>
        <para>Translates the specified <see cref="T:System.Drawing.Color" /> structure to an OLE color.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure to translate.
      </param>
      <returns>
        <para>The OLE color value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.PeachPuff">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>
        <para>No hot-key prefix.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the chrominance table parameter category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Teal">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>
        <para>Classes derived from this abstract base class define objects used to fill the interiors of graphical shapes such as rectangles, ellipses, pies, polygons, and paths.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="desc">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.PaintValueEventArgs.#ctor(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> class using the specified values.</para>
      </summary>
      <param name="context">The context in which the value appears.</param>
      <param name="value">The value to paint.</param>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> object with which drawing is to be done.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> in which drawing is to be done.</param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>
        <para>
       Letter extra paper
       (9.275 in. by
       12 in.). This value is specific to the PostScript driver and is used only
       by Linotronic printers in order to conserve paper.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Draws a line connecting two <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> structure that represents the first point to connect.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> structure that represents the second point to connect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>
        <para>
       People's Republic of
       China 32K big paper (97
       mm by
       151 mm). Requires Windows 98, Windows
       NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>
        <para>The pixel data can be cached for faster access.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>
        <para>
       German standard fanfold
       (8.5 in. by 12 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>
        <para> Gets the type of paper.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.PointF" /> structure that specifies the location to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.Info">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a ToolTip.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Dual enhanced metafile format. This format supports both the enhanced and the enhanced plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Dual enhanced metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Equals(System.Object)">
      <summary>
        <para>Tests whether <paramref name="obj" /> is a <see cref="T:System.Drawing.RectangleF" /> with the same location and size of this <see cref="T:System.Drawing.RectangleF" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.RectangleF" /> and its <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties are equal to the  corresponding properties of this <see cref="T:System.Drawing.RectangleF" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>
        <para>The pixel format contains premultiplied alpha values.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>
        <para>Specifies substitution digits that correspond with the official national language of the user's locale.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>
        <para>Specifies that the pixel size is stored in the image. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>
        <para>Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned on the inside of the theoretical line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Plum">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a double-precision floating point number from 
       one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A double-precision floating point number that represents the converted 
    <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and a character string. The string is converted to a null-terminated ASCII string before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeAscii" />, and sets the <see langword="NumberOfValues" /> property to the length of the ASCII string including the NULL terminator.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A <see langword="String" /> that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.RectangleF.Top">
      <summary>
        <para>Gets the y-coordinate of the top edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>
        <para>Creates a handle to a DEVNAMES structure that corresponds to the printer
      settings.</para>
      </summary>
      <returns>
        <para>A handle to a DEVNAMES structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system error icon (WIN32: IDI_ERROR).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the shadow color of a 3-D element. The shadow color is applied to parts of a 3-D element that face away from the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the ellipse.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>
        <para>Occurs when the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and
   before the first page
   of
   the document prints.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>
        <para>Specifies horizontal and vertical lines, each of which is composed of dots, that cross.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
      Determines if this object supports a standard set of values
      that can be picked from a list.
 </summary>
      <param name="context">
      A type descriptor through which additional context may be provided.
 </param>
      <returns>
      Returns true if GetStandardValues should be called to find
      a common set of values the object supports.
 </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DimGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>
        <para>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>
        <para>One clipping region is replaced by another.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies formatting conventions for a particular culture.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will pass an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Adds the specified project-linked toolbox item
      to the toolbox.</para>
      </summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Info">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.ColorConverter">
      <summary>
        <para>Converts colors from one data type to another. Access this class through the TypeDescriptor.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>
        <para>Restores the state of this <see cref="T:System.Drawing.Graphics" /> object to the state represented by a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object.</para>
      </summary>
      <param name="gstate">
        <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object that represents the state to which to restore this <see cref="T:System.Drawing.Graphics" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>
        <para>
       Letter rotated paper (11
       in. by
       8.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
        <para>Edits the specified object's value using the editor style
      indicated by <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>
        <para>The new value of the object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that defines the interior of the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
        <para>Creates a gradient with a center color and a linear falloff to each surrounding color.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
      <param name="scale">
        A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.
      </param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain the portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure that does not intersect with this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to complement this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="width">
        Width of the drawn image.
      </param>
      <param name="height">
        Height of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>
        <para>See <see langword="Graphics.FillRegion" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)">
      <summary>
        <para>Edits the value of the specified object using the editor style
      indicated by <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />.</para>
      </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
      <returns>
        <para>The new value of the object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>
        <para>Specifies that the image is to be flipped vertically (about the horizontal axis). Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.Equals(System.Object)">
      <summary>
        <para>Tests to see whether the specified object is a <see cref="T:System.Drawing.SizeF" /> with the same dimensions as this <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.SizeF" /> and has the same width and height as this <see cref="T:System.Drawing.SizeF" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>
        <para>Defines a blend pattern for a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the right from top points to bottom points, are spaced 50 percent closer together than, and are twice the width of <see langword="ForwardDiagonal" />. This hatch pattern is not antialiased. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler">
      <summary>
        <para> Gets or sets the handler that is raised when a user double-clicks this item.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The data stream from which to load the <see cref="T:System.Drawing.Icon" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Size" /> structures are different.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.Size" /> structure on the left of the inequality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.Size" /> structure on the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; <see langword="false" /> if <paramref name="sz1" /> and <paramref name="sz2" /> are equal.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> and
 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> events.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>
        <para> Gets the paper source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>
        <para>Specifies
      the size of a piece of paper.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a line connecting the two points specified by coordinate pairs.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the line.
      </param>
      <param name="x1">
        x-coordinate of the first point.
      </param>
      <param name="y1">
        y-coordinate of the first point.
      </param>
      <param name="x2">
        x-coordinate of the second point.
      </param>
      <param name="y2">
        y-coordinate of the second point.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>
        <para>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> object by specified amounts in the horizontal and vertical directions.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.RectangleF">
      <summary>
        <para>Stores the location and size of a rectangular region. For more advanced region functions, use a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>
        <para>Gets the color of hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>
        <para> Gets the image of the printed page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="linearGradientMode">
        A <see langword="LinearGradientMode" /> enumeration that specifies the orientation of the gradient.
      </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies formatting conventions for a particular culture.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary>
        <para>Gets or sets the name of the assembly that the type of 
      this <see cref="T:System.Drawing.Design.ToolboxItem" /> belongs to.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>
        <para>Gets or sets the number of units between the outline of the arrow cap and the fill.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the highlight color of a 3-D element. The highlight color is applied to the parts of a 3-D element that are the lightest color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one, 16-bit integer. Sets the <see langword="ValueType" /> property to ValueTypeShort, and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A 16-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawArc" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>This <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object has a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object associated with it. The <see langword="NextMarker" /> method increments the associated <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object passed in to the parameter.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to which the points will be copied.
      </param>
      <returns>
        <para>The number of points between this marker and the next.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary>
        <para>Gets the names of all the tool categories currently on the toolbox.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>
        <para>Disables fallback to alternate fonts for characters not supported in the requested font. Any missing characters are displayed with the fonts missing glyph, usually an open square.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>
        <para>
       SuperA/SuperA/A4 paper (227
       mm by 356 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image, bounding rectangle, and image attributes.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
      <param name="imageAttr">
        An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains additional information about the image used by this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Drawing.Image" /> object from the specified file.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file from which to create the <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Indigo">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>
        <para>Gets the hash code for this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>The hash code for this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.SteelBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>
        <para>A pattern of vertical lines.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>
        <para>Specifies substitution digits that correspond with the user's native script or language, which may be different from the official national language of the user's locale.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>
        <para>Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object, if it is invertible.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>
        <para>Resets the clip region of this <see cref="T:System.Drawing.Graphics" /> object to an infinite region.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ImageFormat" /> class using the specified <see langword="Guid" /> structure.</para>
      </summary>
      <param name="guid">
        The <see langword="Guid" /> structure that specifies a particular image format.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>
        <para>Gets the nearest color to the specified <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> structure for which to find a match.
      </param>
      <returns>
        <para>The method returns a <see cref="T:System.Drawing.Color" /> structure that represents the nearest color to the one specified with the <paramref name="color" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>
        <para>Specifies that the format is 64 bits per pixel; 16 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied according to the alpha component. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.Modal">
      <summary>
        <para> Displays a <see langword="..." /> button to start a modal dialog.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the curve.
      </param>
    </member>
    <member name="P:System.Drawing.Color.BurlyWood">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of a ToolTip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the color depth parameter category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Orange">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumVioletRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>
        <para>
       Medium resolution.
       
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Highlight">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies formatting conventions used by a particular culture.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveCaptionText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Point.IsEmpty">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.Point" /> is empty.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</para>
      </summary>
      <param name="sx">
        The transform scale factor in the x-axis direction.
      </param>
      <param name="sy">
        The transform scale factor in the y-axis direction.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>
        <para>Specifies no compression. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image, wrap mode, and bounding rectangle.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawLines" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>
        <para>
       Double-sided, vertical printing.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the <see langword="TypeDescriptor.GetProperties" /> method for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that describe the properties.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>
        <para>Returns an array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects that contain information about the image decoders built in to GDI+.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> objects. Each <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> object in the array contains information about one of the built-in image decoders.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)">
      <summary>
        <para>Determines if this rectangle intersects with <paramref name="rect" />.</para>
      </summary>
      <param name="rect">
        The rectangle to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if there is any intersection.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>
        <para>Gets or sets the interpolation mode associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>
        <para>Specifies hatch style <see langword="SolidDiamond" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>
        <para> Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>
        <para>Specifies no anchor.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>
        <para>Specifies a gradient from upper right to lower left.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.#ctor(System.String,System.Int32,System.Int32)">
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>
        <para>The pixel data uses an RGB color space.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points and wrap mode.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that make up the vertices of the path.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object are tiled.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.RotateTransform" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Offset(System.Single,System.Single)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="x">
        The amount to offset the location horizontally.
      </param>
      <param name="y">
        The amount to offset the location vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Point.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Point" /> object.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.Point" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary>
        <para> Represents the method that handles the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="P:System.Drawing.Color.MediumSeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>
        <para>Specifies a hatch that has the appearance of a plaid material.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>
        <para>Returns the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
      <param name="language">
        The language in which the name is returned.
      </param>
      <returns>
        <para>A <see langword="String" /> object that represents the name, in the specified language, of this <see cref="T:System.Drawing.FontFamily" /> object. It creates a <see cref="T:System.Drawing.FontFamily" /> object, gets the name of that font family, and then draws the name to the screen as text.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>
        <para> Represents
      the resolution supported by a printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.StringFormat" /> object with the specified <see cref="T:System.Drawing.StringFormatFlags" /> enumeration and language.</para>
      </summary>
      <param name="options">
        The <see cref="T:System.Drawing.StringFormatFlags" /> enumeration for the new <see cref="T:System.Drawing.StringFormat" /> object.
      </param>
      <param name="language">
        A value that indicates the language of the text.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightYellow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.AntiqueWhite">
      <summary>
        <para>Gets a system-defined color .</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>
        <para>Specifies that when a color is rendered, it overwrites the background color. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
      <param name="offset">
        The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.
      </param>
      <param name="numberOfSegments">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified handle to a device context.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified device context.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>
        <para>Translates an OLE color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="oleColor">
        The OLE color to translate.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that represents the translated OLE color.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
        <para>Color adjustment information for <see cref="T:System.Drawing.Bitmap" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary>
        <para> Provides an interface that allows testing of the toolbox for toolbox item
      support capabilities and selecting the current tool.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size and format.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration for the new <see cref="T:System.Drawing.Bitmap" />.
      </param>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>
        <para> Gets the name of the paper source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>
        <para> Gets the rectangular area that represents the total area of the page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>
        <para>An array of characters that contains the data that makes up a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>
        <para>Gets or sets a <see langword="Guid" /> structure that contains a GUID that identifies the codec's format.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> object from the specified Windows resource.</para>
      </summary>
      <param name="hinstance">
        A handle to an instance of the executable file that contains the resource.
      </param>
      <param name="bitmapName">
        A string containing the name of the resource bitmap.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Bitmap">
      <summary>
        <para>Encapsulates a GDI+ bitmap, which consists of the pixel data for a graphics image and its attributes. A <see cref="T:System.Drawing.Bitmap" /> object is an object used to work with images defined by pixel data. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary>
        <para>Gets or sets the name of the currently selected tool category from the toolbox.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>
        <para>Marks an object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines if this converter can convert an object in the given source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptor" /> object that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.
      </param>
      <param name="sourceType">
        The type from which you want to convert.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemColors.ScrollBar">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of a scroll bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>
        <para>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Equals(System.Object)">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Point" /> contains the same coordinates as the specified <see langword="Object" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Point" /> and has  the same coordinates as this <see cref="T:System.Drawing.Point" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>
        <para>Specifies vertical lines that are spaced 50 percent closer together than <see langword="Vertical" /> and are twice its width.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>
        <para>Specifies a 270-degree rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>
        <para>Returns an array that contains all the <see cref="T:System.Drawing.FontFamily" /> objects associated with the current graphics context.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>
        <para>Specifies a path gradient fill.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of a scroll bar.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary>
        <para> Represents the
      method that will handle the ToolboxItemCreatorCallback event.</para>
      </summary>
      <param name="serializedObject">The object which represents the serialized <see cref="T:System.Drawing.Design.ToolboxItem" /> to create.</param>
      <param name=" format">The clipboard format name for the <see cref="T:System.Drawing.Design.ToolboxItem" /> .</param>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object supports only the Windows enhanced metafile plus format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object supports only the Windows enhanced metafile plus format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>
        <para>Specifies a diamond anchor cap.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>
        <para>Unlocks this <see cref="T:System.Drawing.Bitmap" /> from system memory.</para>
      </summary>
      <param name="bitmapdata">
        A <see cref="T:System.Drawing.Imaging.BitmapData" /> object specifying information about the lock operation.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the points that determine the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>
        <para>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> object by specified amounts in the horizontal and vertical directions.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.</para>
      </summary>
      <param name="alpha">
        The alpha component. Valid values are 0 through 255.
      </param>
      <param name="red">
        The red component. Valid values are 0 through 255.
      </param>
      <param name="green">
        The green component. Valid values are 0 through 255.
      </param>
      <param name="blue">
        The blue component. Valid values are 0 through 255.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Specifies the wrap mode that is used to decide how to tile a texture across a shape, or at shape boundaries. A texture is tiled across a shape to fill it in when the texture is smaller than the shape it is filling. The wrap mode is used by the various <see cref="T:System.Drawing.Brush" /> classes where fills are used to fill a shape.</para>
      </summary>
      <param name="mode">
        Specifies the wrap mode, using a value from the <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>
        <para>
       A4 transverse paper
       (210 mm by 297 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>
        <para>Specifies 1/75 inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt">
        A <see cref="T:System.Drawing.Point" /> structure that represents the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>
        <para>
       People's Republic of
       China #3 rotated envelope
       (176 mm by
       125 mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount in the specified order.</para>
      </summary>
      <param name="angle">
        The angle (extent)of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.
      </param>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.FontFamily" /> object associated with this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>
        <para>Gets the width of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Drawing.Printing.PreviewPageInfo" />
       class.
    </para>
      </summary>
      <param name="image">
    The image of the printed page.
 </param>
      <param name="physicalSize">
    The size of the printed page, in hundredths of an inch.
 </param>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> object from a handle to a GDI bitmap.</para>
      </summary>
      <param name="hbitmap">
        The GDI bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of a menu's text.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>
        <para>
       Executive paper (7.25
       in. by 10.5
       in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Navy">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>
        <para>Clears the gamma value for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>
        <para>A generic Monospace <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary>
        <para>Provides support for Object's ToString method.</para>
      </summary>
      <returns>
        <para>A string representation of the current object's value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Desktop">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the specified value.</para>
      </summary>
      <param name="value">The category name to retrieve the index of in the collection.</param>
      <returns>
        <para>The index in the collection, or <see langword="null" /> if the string does
   not exist in the collection.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>
        <para>Specifies the RLE compression scheme. Can be passed to the TIFF encoder as a parameter that belongs to the compression category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using
   the default printer.
   </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>
        <para>
       Gets or sets the value of the specified element of this <see cref="T:System.Drawing.Imaging.ColorMatrix" />.
    </para>
      </summary>
      <param name=" row">
    The row of the element.
 </param>
      <param name=" column">
    The column of the element.
 </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>
        <para>Indicates that the codec supports vector images (metafiles). </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified path.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the area filled by this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>
        <para>Specifies that the pixel data has alpha values other than 0 (transparent) and 255 (opaque). </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.Rectangle" /> by the specified amount.</para>
      </summary>
      <param name="width">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> horizontally.
      </param>
      <param name="height">
        The amount to inflate this <see cref="T:System.Drawing.Rectangle" /> vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>
        <para>Gets a generic serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>
        <para>
       All pages are printed.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>
        <para>See <see langword="Graphics.AddMetafileComment" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PropertyValueUIItem.Image">
      <summary>
        <para> Gets or sets the 8
      x 8 pixel image that will be drawn on the Properties window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Color.Empty">
      <summary>
        <para>Represents a null color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.YellowGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LavenderBlush">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkSlateGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary>
        <para>Gets a value indicating whether the specified object is 
      a serialized toolbox item.</para>
      </summary>
      <param name="serializedObject">The object to inspect.</param>
      <returns>
        <para>
          <see langword="true" /> if the object contains a
   toolbox item object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with 
   the level of printing access specified.</para>
      </summary>
      <param name="printingLevel">One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</param>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>
        <para>Gets a generic sans serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Region" /> object that limits the drawing region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>
        <para>
       ISO B5 extra
       paper (201 mm by 276 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>
        <para>See <see langword="Graphics.PixelOffsetMode" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Addition(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.PointF" /> by a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.PointF" /> to translate.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the pair of numbers to add to the coordinates of <paramref name="pt" />.
      </param>
      <returns>
        <para>Returns the translated <see cref="T:System.Drawing.PointF" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>
        <para>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Gainsboro">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified combining operation of the current clip region and the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> object that specifies the clip region to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>
        <para>Specifies vertical lines that are spaced 75 percent closer together than hatch style <see langword="Vertical" /> (or 25 percent closer together than <see langword="LightVertical" />).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.CategoryNameCollection" /> class using the specified array of names.</para>
      </summary>
      <param name="value">An array of strings that contains the names of the categories to initialize the collection values to.</param>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows metafile format.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is in the Windows metafile format; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object, using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Crimson">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Adds the width and height of one <see cref="T:System.Drawing.SizeF" /> structure to the width and height of another <see cref="T:System.Drawing.SizeF" /> structure.</para>
      </summary>
      <param name="sz1">
        The first <see cref="T:System.Drawing.SizeF" /> to add.
      </param>
      <param name="sz2">
        The second <see cref="T:System.Drawing.SizeF" /> to add.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Size" /> structure that is the result of the addition operation.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>
        <para>
       #9 envelope (3.875
       in. by 8.875 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether any portion of the specified <see cref="T:System.Drawing.Rectangle" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>
        <para>Closes the current figure and starts a new figure. If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to a <see cref="T:System.Drawing.Point" /> object.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
        <para>Sets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the pixel to set.
      </param>
      <param name="y">
        The y-coordinate of the pixel to set.
      </param>
      <param name="color">
        A <see cref="T:System.Drawing.Color" /> structure that represents the color to assign to the specified pixel.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>
        <para> Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> property designates the
   default printer, except when the user explicitly sets <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
   .</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleTurquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>
        <para>Gets the pixel format for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>
        <para>Encapsulates a <see cref="T:System.Drawing.Brush" /> object that fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object with a gradient. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.CornflowerBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>
        <para>Gets or sets the type of the property.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>
        <para>See Graphics.<see langword="TransformPoints" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>
        <para>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="x">
        x coordinate of the upper-left corner of the drawn text.
      </param>
      <param name="y">
        y coordinate of the upper-left corner of the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
        <para>Paints a representation of the value of the specified object to the specified
      canvas.</para>
      </summary>
      <param name="value">The object whose value this type editor will display.</param>
      <param name="canvas">A drawing canvas on which to paint the representation of the object's value.</param>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> within whose boundaries to paint the value. </param>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Design.UITypeEditor">
      <summary>
        <para> Provides a base class that can be used to design
      value editors that can provide a user interface for representing and
      editing the values of objects of the supported data type(s).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>
        <para>
       Japanese rotated double
       postcard (148 mm by
       200 mm). Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>
        <para>Defines a placeable metafile. Not inheritable. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>
        <para>Gets the name of this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>
        <para>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="offsetX">
        The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="offsetY">
        The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Creates a new <see cref="T:System.Drawing.Graphics" /> object from the specified handle to a device context and handle to a device.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <param name="hdevice">
        Handle to a device.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified device context and device.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>
        <para>See Graphics.<see langword="TransformPoints" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>
        <para>Gets the category name at the specified index.</para>
      </summary>
      <param name="index">The index of the collection element to access.</param>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>
        <para>The unit of measurement is 0.01 millimeter. Provided for compatibility with GDI.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
        <para>Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para> Begins the control sequence
      that determines when and how to preview a page in a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains data about how to preview a page in the print document. Initially, the <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" qualify="true" /> property of this parameter will be <see langword="null" />. The value returned from this method will be used to set this property.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Graphics" /> that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>
        <para>Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object to the specified array of points.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.
      </param>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>
        <para> Specifies a series of conversion methods that are useful when
       interoperating with the Win32 printing Application Program Interface (API).
       This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>
        <para>Content is vertically aligned at the top, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>
        <para>Specifies that the format is 8 bits per pixel, indexed. The color table therefore has 256 colors in it.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Teal">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>
        <para>Sets the remap table for converting <see cref="T:System.Drawing.Brush" /> colors. The remap table maps existing colors in a brush to new colors.</para>
      </summary>
      <param name="map">
        An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color in the brush and the color to which it will be mapped.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>
        <para>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>
        <para>
       Custom resolution.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>
        <para>Specifies a bilinear warp.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.AppWorkspace">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the application workspace. The application workspace is the area in a multiple-document view that is not being occupied by documents.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary>
        <para> Represents the method that handles the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.op_Inequality(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>
       Compares two <see cref="T:System.Drawing.PointF" /> objects. The result specifies whether the values
       of the <see cref="P:System.Drawing.PointF.X" /> or <see cref="P:System.Drawing.PointF.Y" /> properties of the two
    <see cref="T:System.Drawing.PointF" /> 
    objects are unequal.
 </para>
      </summary>
      <param name=" left">
    A <see cref="T:System.Drawing.PointF" /> to compare.
 </param>
      <param name=" right">
    A <see cref="T:System.Drawing.PointF" /> to compare.
 </param>
      <returns>
        <see langword="true" /> if the values of 
    either the X properties or the Y properties of left and right differ; otherwise,
 <see langword="false" />.
 </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Aquamarine">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>
        <para>Reserved.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>
        <para>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.
      </param>
    </member>
    <member name="P:System.Drawing.SystemColors.Desktop">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the desktop.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>
        <para>Specifies the paper tray from which the printer gets paper.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>
        <para>
       B4 paper (250 mm by 353 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>
        <para>
       B5 paper (176
       mm by 250 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>
        <para>Gets or sets the width of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>
        <para>Specifies that text is aligned in the center of the layout rectangle.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>
        <para>
       The paper size is defined by the user.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SkyBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The <see langword="Stream" /> object from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object defines the text format of the string.
      </param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Point.Y">
      <summary>
        <para>Gets or sets the y-coordinate of this <see cref="T:System.Drawing.Point" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Point.X">
      <summary>
        <para>Gets or sets the x-coordinate of this <see cref="T:System.Drawing.Point" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para> Gets the currently selected toolbox item if it is available
      to all designers, or if it supports the specified designer.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that the selected tool must be associated with for it to be returned.</param>
      <returns>
        <para> The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.MistyRose">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PaleVioletRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of text in a 3-D element.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.White">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary>
        <para>Initializes
      a new instance of the <see cref="T:System.Drawing.Design.ToolboxItem" /> class
      using the specified type and display name.</para>
      </summary>
      <param name="toolType">The type of tool for this toolbox item.</param>
      <param name="">The name to display on the toolbox for this tool.</param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>
        <para>Gets the size, in bytes, of the enhanced metafile plus header file.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.Region" /> object is identical to this <see cref="T:System.Drawing.Region" /> object on the specified drawing surface.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a drawing surface.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the interior of region is identical to the interior of this region when the transformation associated with the <paramref name="g" /> parameter is applied; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <para> A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that
   indicates the style of editor used by <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this
   method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>
        <para>Gets the tab stops for this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="firstTabOffset">
        The number of spaces between the beginning of a text line and the first tab stop.
      </param>
      <returns>
        <para>An array of distances (in number of spaces) between tab stops.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Snow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>
        <para>
       SuperB/SuperB/A3 paper (305
       mm by 487 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the given value object to
       the specified destination type using the specified context and arguments.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name=" culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides the language to convert to.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to which to convert the value.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> that represents 
    the converted value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>
        <para>Gets or sets the checksum value for the previous ten <see langword="WORD" />s in the header.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>
        <para>
       B6 envelope (176
       mm by 125 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>
        <para>Content is vertically aligned at the bottom, and horizontally aligned on the left.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumSlateBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightSeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        The <see cref="T:System.Drawing.Point" /> structure to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>
        <para>
       B5 envelope (176
       mm by 250 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.PointF.IsEmpty">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Drawing.PointF" /> is empty.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>
        <para>Reverses the texture or gradient vertically and then tiles the texture or gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Removes the specified toolbox item from the toolbox.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>
        <para> Gets the entire collection of toolbox items 
      from the toolbox.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.CornflowerBlue">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>
        <para>Sets the remap table as specified in <see langword="ColorMap[]" /> for all GDI+ objects (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="map">
        An array of color pairs of type <see cref="T:System.Drawing.Imaging.ColorMap" />. Each color pair contains an existing color (the first value) and the color that it will be mapped to (the second value).
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Round(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.RectangleF" /> to a <see cref="T:System.Drawing.Rectangle" /> by rounding the <see cref="T:System.Drawing.RectangleF" /> values to the nearest integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.RectangleF" /> to be converted.
      </param>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MenuText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Context">
      <summary>
        <para>Gets or sets the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object
   to be used to gain additional information about the context this value appears in.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MidnightBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Purple">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.ToArgb">
      <summary>
        <para>Gets the 32-bit ARGB value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The 32-bit ARGB value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Gold">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Gets the set of properties for this type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        The value of the object to get the properties for.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this can return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>
        <para> The
       printer's large-capacity bin.
       </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>
        <para>Provides a <see cref="T:System.Drawing.Printing.MarginsConverter" /> for <see cref="T:System.Drawing.Printing.Margins" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>
        <para>Assume linear values.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>
        <para>Gets the hatch style of this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>
        <para>Specifies a 90-degree rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>
        <para>Gets the bitmap image format (BMP).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>
        <para>Copies the color data for a rectangle of pixels in a DIB to the specified destination rectangle.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text of selected items. This includes selected menu items as well as selected text. For example, the pen may be the color used for the text of selected items in a list box.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>
        <para>Closes all open figures in this path and starts a new figure. It closes each open figure by connecting a line from its endpoint to its starting point.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.CadetBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>
        <para>Gets the size, in points, of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> structure that determines the color, width, and style of the curve.
      </param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        <see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        <see cref="T:System.Drawing.Point" /> structure that represents the ending point of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Size.Width">
      <summary>
        <para>Gets or sets the horizontal component of this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of 16-bit integers. Sets the <see langword="ValueType" /> property to ValueTypeShort, and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of 16-bit integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The integers in the array must be nonnegative.
      </param>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object are filled.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>
        <para>A pattern of horizontal lines.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.BlanchedAlmond">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveBorder">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of an inactive window's border.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>
        <para>
       C5 envelope
       (162 mm by 229 mm).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ControlLight">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SizeF.Empty">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>
        <para>
       People's Republic of China #6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified data stream and with the specified width and height.</para>
      </summary>
      <param name="stream">
        The data stream from which to load the icon.
      </param>
      <param name="width">
        The width of the icon.
      </param>
      <param name="height">
        The height of the icon.
      </param>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>
        <para>Specifies a printer's em size of 32 as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the low color value and the high color value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="colorLow">
        The low color value.
      </param>
      <param name="colorHigh">
        The high color value.
      </param>
      <param name="type">
        A <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> that specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to another type. The most common types to convert are to and from a string object. </para>
      </summary>
      <param name="context">
        A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may also return null.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture to represent the Color.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object. If this method cannot convert to the destination type, it throws a <see langword="NotSupportedException" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>
        <para>A generic Sans Serif <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>
        <para>Specifies that no part of any glyph overhangs the bounding rectangle. By default some glyphs overhang the rectangle slightly where necessary to appear at the edge visually. For example when an italic lowercase letter f in a font such as Garamond is aligned at the far left of a rectangle, the lower part of the f will reach slightly further left than the left edge of the rectangle. Setting this flag will ensure no painting outside the rectangle but will cause the aligned edges of adjacent lines of text to appear uneven.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumPurple">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>
        <para>
       Japanese rotated Kaku #2 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>
        <para>Specifies a 270-degree rotation without flipping.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines if this object supports properties. By default, this is <see langword="false" />.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <see langword="GetProperties" /> should be called to find the properties of this object; otherwise, false.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>
        <para>Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>
        <para>Specifies a smooth, rounded join.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary>
        <para>Gets or sets the fully qualified name of the type that 
      this <see cref="T:System.Drawing.Design.ToolboxItem" /> will create.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LightGoldenrodYellow">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>
        <para>Specifies that the pixel format is 1 bit per pixel and that it uses indexed color. The color table therefore has two colors in it.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>
        <para>Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>
        <para>Specifies that the format is 32 bits per pixel; 8 bits each are used for the alpha, red, green, and blue components. The red, green, and blue components are premultiplied according to the alpha component. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>
        <para>See <see langword="Graphics.Restore" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>
        <para>Contains information about a windows-format (WMF) metafile.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)">
      <summary>
        <para>Replaces this <see cref="T:System.Drawing.Rectangle" /> with the intersection of itself and the specified <see cref="T:System.Drawing.Rectangle" />.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> with which to intersect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Drawing.PointF)">
      <summary>
        <para>Determines if the specified point is contained within this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.PointF" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point represented by the <paramref name="pt" /> parameter is contained within this <see cref="T:System.Drawing.RectangleF" /> structure; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.ActiveCaption">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Wheat">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the ellipse.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union of itself and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to unite with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>
        <para> One-tenth of a millimeter
       (0.1 mm).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>
        <para>Specifies that the format is 48 bits per pixel; 16 bits each are used for the red, green, and blue components. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>
        <para>Gets or sets an array of <see cref="T:System.Drawing.PointF" /> structures that represents the points through which the path is constructed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
        <para>Color adjustment information for <see cref="T:System.Drawing.Pen" /> objects.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.PaleTurquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangular bounds of the ellipse from which the arc is taken.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkSlateGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</para>
      </summary>
      <param name="angle">
        The angle (extent) of rotation.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="width">
        Maximum width of the string.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>
        <para>
       D paper (22
       in. by 34 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>
        <para>Specifies high quality, low speed rendering.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>
        <para>Displays a multiple-frame image as an animation.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object to animate.
      </param>
      <param name="onFrameChangedHandler">
        An <see langword="EventHandler" /> object that specifies the method that is called when the animation frame changes.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>
        <para>
       Quarto paper (215
       mm by 275 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>
        <para>Gets a <see langword="Guid" /> structure that represents this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>
        <para>Gets the vertical resolution, in pixels-per-inch, of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.PaintValueEventArgs">
      <summary>
        <para> Provides data for the <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
event.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Truncate(System.Drawing.PointF)">
      <summary>
        <para>Convets the specified <see cref="T:System.Drawing.PointF" /> object to a <see cref="T:System.Drawing.Point" /> object by truncating the values of the <see cref="T:System.Drawing.Point" /> object.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.PointF" /> object to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Point" /> object this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that represents the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Point" /> class with the specified coordinates.</para>
      </summary>
      <param name="x">
        The horizontal position of the point.
      </param>
      <param name="y">
        The vertical position of the point.
      </param>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>
        <para>Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Sienna">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>
        <para>Gets the array of <see cref="T:System.Drawing.FontFamily" /> objects associated with this <see cref="T:System.Drawing.Text.FontCollection" /> object. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.RectangleConverter">
      <summary>
        <para>Converts rectangles from one data type to another. Access this class through the TypeDescriptor.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>
        <para>Gets the height of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>
        <para>Represents the fonts installed on the system. This class cannot be inherited. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para> Returns whether this converter can convert an object of the specified source type to the native
 type of the converter using the specified context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type from which you want to convert.</param>
      <returns>
        <para>
          <see langword="true " />if an object can perform the
 conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Cursor">
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>
        <para>Specifies an EMF+ Dual file. Such a file contains GDI+ records along with alternative GDI records and can be displayed by using either GDI or GDI+. Displaying the records using GDI may cause some quality degradation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>
        <para>Gets or sets the pixel width of the <see cref="T:System.Drawing.Bitmap" /> object. This can also be thought of as the number of pixels in one scan line.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Gets an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the layout rectangle for the string.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>
        <para>Gets a bounding rectangle for this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of unsigned 8-bit integers. Sets the <see langword="ValueType" /> property to ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of 8-bit unsigned integers that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Color.LightGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>
        <para>Gets or sets the element at the 2nd row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>
        <para>Gets or sets the element at the 2nd row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>
        <para>Gets or sets the element at the 2nd row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>
        <para>Gets or sets the element at the 2nd row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>
        <para>Gets or sets the element at the 2nd row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Location">
      <summary>
        <para>Gets or sets the coordinates of the upper-left corner of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</para>
      </summary>
      <param name="fillPath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.
      </param>
      <param name="strokePath">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>
        <para>Adds a sequence of connected cubic Bézier curves to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.
      </param>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>
        <para>Overhanging parts of glyphs, and unwrapped text reaching outside the formatting rectangle are allowed to show. By default all text and glyph parts reaching outside the formatting rectangle are clipped. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>
        <para>Gets or sets an array of colors.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>
        <para>Specifies the document unit (1/300 inch) as the unit of measure.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>
        <para>Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>
        <para>Translates an HTML color representation to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="htmlColor">
        The string representation of the Html color to translate.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that represents the translated HTML color.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.Margins" /> class with the specified left, right, top, and bottom
    margins.</para>
      </summary>
      <param name="left">The left margin, in hundredths of an inch.</param>
      <param name="right">The right margin, in hundredths of an inch.</param>
      <param name="top">The top margin, in hundredths of an inch.</param>
      <param name="bottom">The bottom margin, in hundredths of an inch.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from the specified file name.</para>
      </summary>
      <param name="fileName">
        The file to load the <see cref="T:System.Drawing.Icon" /> object from.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and four arrays of 32-bit integers. The four arrays represent an array rational ranges. A rational range is the set of all fractions from a minimum fractional value through a maximum fractional value. Sets the <see langword="ValueType" /> property to ValueTypeRationalRange, and sets the <see langword="NumberOfValues" /> property to the number of elements in the <paramref name="numerator1" /> array, which must be the same as the number of elements in the other three arrays.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="numerator1">
        An array of 32-bit integers that specifies the numerators of the minimum values for the ranges. The integers in the array must be nonnegative.
      </param>
      <param name="denominator1">
        An array of 32-bit integers that specifies the denominators of the minimum values for the ranges. The integers in the array must be nonnegative.
      </param>
      <param name="numerator2">
        An array of 32-bit integers that specifies the numerators of the maximum values for the ranges. The integers in the array must be nonnegative.
      </param>
      <param name="denominator2">
        An array of 32-bit integers that specifies the denominators of the maximum values for the ranges. The integers in the array must be nonnegative.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>
        <para>Reverses the texture or gradient horizontally and then tiles the texture or gradient.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>
        <para>Specifies a print controller that sends information to a printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>
        <para>Releases a device context handle obtained by a previous call to the <see langword="GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="hdc">
        Handle to a device context obtained by a previous call to the <see langword="GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>
        <para> Gets a value indicating whether the printer is a plotter.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>
        <para>Removes the specified toolbox item from the toolbox.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
      <param name=" category">The toolbox item category to remove the <see cref="T:System.Drawing.Design.ToolboxItem" /> from.</param>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>
        <para>Specifies settings
      that apply to a single, printed page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>
        <para>Gets a handle to the current Windows halftone palette.</para>
      </summary>
      <returns>
        <para>Internal pointer that specifies the handle to the palette.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>
        <para>Specifies the printer's duplex setting.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>Reconstructs a security object with a specified state from an XML
       encoding.</para>
      </summary>
      <param name="esd">The XML encoding to use to reconstruct the security object.</param>
      <returns>
        <para>None.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.RectangleF" /> structures differ in location or size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the left of the inequality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if any of the <see langword="X" />, <see langword="Y" />, <see langword="Width" />, or <see langword="Height" /> properties of the two <see cref="T:System.Drawing.Rectangle" /> structures are unequal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Removes a previously added toolbox creator of the 
      specified data format that is associated with the specified designer host.</para>
      </summary>
      <param name="format">The data format of the creator to remove. </param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the creator to remove. </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>
        <para> Creates the permission based on the requested
      access levels, which are set through the <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> property on the attribute.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> object that defines a multicolor linear gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
        <para>Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the <see langword="TypeDescriptor.GetProperties" /> method for the correct data type.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="value">
        The value of the object to get the properties for.
      </param>
      <param name="attributes">
        An array of <see langword="MemberAttribute" /> objects that specify the attributes of the properties.
      </param>
      <returns>
        <para>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return <see langword="null" />. The default implementation always returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that can iterate through the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Maroon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>
        <para> Gets or sets the page's paper source (for example, the printer's upper tray).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>
        <para>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>
        <para>Gets or sets the element at the 0th row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>
        <para>Gets or sets the element at the 0th row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>
        <para>Gets or sets the element at the 0th row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>
        <para>Gets or sets the element at the 0th row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>
        <para>Default name is <see langword="null" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Translates the local geometric transformation by the specified dimensions in the specified order.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>
        <para>Gets or sets the element at the 0th row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>
        <para>Specifies high quality interpolation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Cornsilk">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>
        <para>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> object to exclude the area specified by a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object that specifies the region to exclude from the clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text in the client area of a window.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>
        <para>Specifies a hatch that has the appearance of confetti, and is composed of larger pieces than <see langword="SmallConfetti" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>
        <para>Content is vertically aligned at the bottom, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>
        <para>See <see langword="Graphics.InterpolationMode" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>
        <para>Specifies a WMF (Windows Metafile) file that has a placeable metafile header in front of it.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>
        <para>Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.Truncate(System.Drawing.SizeF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.SizeF" /> structure to a <see cref="T:System.Drawing.Size" /> structure by truncating the values of the <see cref="T:System.Drawing.Size" /> structure to the next lower integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.SizeF" /> structure to convert.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Size" /> structure this method converts to.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>
        <para>Creates an exact copy if this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Region" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
      <param name="gdiVerticalFont">
        A Boolean value indicating whether the new <see cref="T:System.Drawing.Font" /> object is derived from a GDI vertical font.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structuresthat represents the points that define the curve.
      </param>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para> Indicates whether the specified context supports painting a representation of an object's value
      within the specified context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <para>
          <see langword="true" />
if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> is implemented; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of the text of a ToolTip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>
        <para>Gets or sets the element at the 3rd row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>
        <para>Gets or sets the element at the 3rd row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>
        <para>Gets or sets the element at the 3rd row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>
        <para>Gets or sets the element at the 3rd row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>
        <para>Gets or sets the element at the 3rd row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para> Completes the control 
       sequence that determines when and how to print a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Text.FontCollection" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Gold">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>
        <para>Gets the color of the specified pixel in this <see cref="T:System.Drawing.Bitmap" />.</para>
      </summary>
      <param name="x">
        The x-coordinate of the pixel to retrieve.
      </param>
      <param name="y">
        The y-coordinate of the pixel to retrieve.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Color" /> structure that represents the color of the specified pixel.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LawnGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>
        <para>Specifies that coordinates are in the page coordinate context. Their units are defined by the <see langword="Graphics.PageUnit" /> property, and must be one of the elements of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightYellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>
        <para>
       Monarch envelope (3.875
       in. by 7.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image and with the specified size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="newSize">
        The <see cref="T:System.Drawing.Size" /> structure that represent the size of the new <see cref="T:System.Drawing.Bitmap" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>
        <para>Indicates whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.RectangleF" /> structure that bounds the clipping region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object defines the text format of the string.
      </param>
      <param name="origin">
        <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the string.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in pixels, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
      <summary>
        <para>Removes the specified <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> from 
    the property value UI service.</para>
      </summary>
      <param name="newHandler">The handler to remove.</param>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</para>
      </summary>
      <param name="sx">
        The amount by which to scale the transform in the x-axis direction.
      </param>
      <param name="sy">
        The amount by which to scale the transform in the y-axis direction.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the color-key values for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). </para>
      </summary>
      <param name="type">
        Specifies the GDI+ object (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that is to have the color key information cleared.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.HDC">
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>
        <para>Specifies an EMF+ file. Such a file contains only GDI+ records and must be displayed by using GDI+. Displaying the records using GDI may cause unpredictable results.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>
        <para> Indicates whether the specified category is contained
      in the collection.</para>
      </summary>
      <param name="value">The string to check for in the collection.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified category is contained in the
   collection; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>
        <para>
       Retrieves a duplicate of this object, member by member.
    </para>
      </summary>
      <returns>
        <para>
       A duplicate of this object.
    </para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>
        <para>
       People's Republic of
       China 32K paper (97 mm
       by 151
       mm). Requires Windows 98, Windows
       NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>
        <para>Represents the internal data of a graphics container. This class is used when saving the state of a <see cref="T:System.Drawing.Graphics" /> object using the <see langword="BeginContainer" /> and <see langword="EndContainer" /> methods. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.NavajoWhite">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>
        <para>Gets or sets the type of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object containing the <see cref="T:System.Drawing.Imaging.Metafile" /> object for which a header is retrieved.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>
        <para>Specifies the type of fill a <see cref="T:System.Drawing.Pen" /> object uses to fill lines.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>
        <para>Sets the NoOp correction value for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on. During rendering, no color adjustment is performed while NoOp is set.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the path.
      </param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>
        <para>Gets or sets the element at the 1st row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>
        <para>Gets or sets the element at the 1st row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>
        <para>Gets or sets the element at the 1st row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>
        <para>Gets or sets the element at the 1st row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Returns a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type to which you want to convert.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the opertation; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>
        <para>Specifies that the <see cref="T:System.Drawing.Pen" /> object is centered over the theoretical line.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>
        <para>Brushes for all the standard colors. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified <see langword="Stream" /> object in the specified format.</para>
      </summary>
      <param name="stream">
        The <see langword="Stream" /> object to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" /> class for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>
        <para>Reverses the texture or gradient horizontally and vertically and then tiles the texture or gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>
        <para>Sets the specified property item to the specified value.</para>
      </summary>
      <param name="propitem">
        The ID of the property item to set.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Design.PaintValueEventArgs.Value">
      <summary>
        <para>Gets or sets the value to paint.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkOrange">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontConverter" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>
        <para>Specifies that all the records in the metafile are EMF records, which can be displayed by GDI or GDI+.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified file name.</para>
      </summary>
      <param name="filename">
        A <see langword="String" /> object that represents the file name from which to create the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>
        <para>Specifies an inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>
        <para>Alpha data.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Rectangle" /> structure that contains the union of two R<see langword="ectangle" /> structures.</para>
      </summary>
      <param name="a">
        A rectangle to union.
      </param>
      <param name="b">
        A rectangle to union.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Rectangle" /> structure that bounds the union of the two <see cref="T:System.Drawing.Rectangle" /> structures.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkViolet">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>
        <para>Gets or sets a string that contains the codec's Multipurpose Internet Mail Extensions (MIME) type.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>
        <para>Gets or sets the limit of the thickness of the join on a mitered corner.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>
        <para>Gets or sets the element at the 4th row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromKnownColor(System.Drawing.KnownColor)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from the specified pre-defined color.</para>
      </summary>
      <param name="color">
        An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>
        <para>Gets or sets the element at the 4th row and 2nd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>
        <para>Gets or sets the element at the 4th row and 3rd column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>
        <para>Gets or sets the element at the 4th row and 0th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>
        <para>Gets or sets the element at the 4th row and 1st column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.PaleGoldenrod">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>
        <para>Creates an exact copy of this path.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Moccasin">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawBeziers" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Selects the specified tool.</para>
      </summary>
      <param name="tool">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>
        <para>Indicates whether the path associated with this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object contains a curve.</para>
      </summary>
      <returns>
        <para>This method returns <see langword="true" /> if the current subpath contains a curve; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>
        <para>Gets or sets an array of colors that correspond to the points in the path this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object fills.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>
        <para>Gets or sets the focus point for the gradient falloff.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the output channel selection and color-profile file for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the output channel selection and color-profile file cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)">
      <summary>
        <para>Adds the specified <see cref="T:System.Drawing.Design.PropertyValueUIHandler" />
to this service.</para>
      </summary>
      <param name="newHandler">The property value UI handler to add.</param>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the color of dimmed text. Items in a list that are disabled are displayed in dimmed text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>
        <para>When overridden in a derived class, creates an exact copy of this <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
      <returns>
        <para>The new <see cref="T:System.Drawing.Brush" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>
        <para>The unit of measurement is 1/300 of an inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Coral">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>
        <para>
       Folio paper (8.5
       in. by 13 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The data stream used to load the image.
      </param>
      <param name="useIcm">
        Set to <see langword="true" /> to use color correction for this <see cref="T:System.Drawing.Bitmap" /> object; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, and a height and two radial lines.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="width">
        Width of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="height">
        Height of the bounding rectangle that defines the ellipse from which the pie section comes.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the first side of the pie section.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.LightSalmon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>
        <para>Specifies the inch as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.IsEmpty">
      <summary>
        <para>Tests whether all numeric properties of this <see cref="T:System.Drawing.Rectangle" /> have values of zero.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds the outline of a pie shape to this path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="startAngle">
        The starting angle for the pie section, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>
        <para>
       This element specifies to leave the color
       channel unchanged from the last selected channel.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure and two radial lines.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the pie shape.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.
      </param>
      <param name="startAngle">
        Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.
      </param>
      <param name="sweepAngle">
        Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumOrchid">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>
        <para>Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.RectangleF" /> structure with upper-left corner and lower-right corner at the specified locations.</para>
      </summary>
      <param name="left">
        The x-coordinate of the upper-left corner of the rectangular region.
      </param>
      <param name="top">
        The y-coordinate of the upper-left corner of the rectangular region.
      </param>
      <param name="right">
        The x-coordinate of the lower-right corner of the rectangular region.
      </param>
      <param name="bottom">
        The y-coordinate of the lower-right corner of the rectangular region.
      </param>
      <returns>
        <para>The new <see cref="T:System.Drawing.RectangleF" /> that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.Offset(System.Drawing.PointF)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="pos">
        The amount to offset the location.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines if this converter can convert an object in the given source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object specifies a horizontal line through the font.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>
        <para>Specifies the type of graphic shape to use on both ends of each dash in a dashed line.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>
        <para>Gets or sets an array values that specify a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>
        <para> Gets or sets
      the
      page numbers that the user has specified to be printed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>
        <para>Standard paper (9 in. by 11
       in.).
       </para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object with an image from a resource with the specified name in the specified assembly.</para>
      </summary>
      <param name="t">
        A <see langword="Type" /> object that specifies where to find the image from which to construct the new <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <param name="name">
        The name of the image from which to construct the new <see langword="ToolboxBitmapAttributev" />.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSalmon">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>
        <para>Specifies a triangular cap that points both ends of each dash.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.GhostWhite">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>
        <para>Occurs immediately before each <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> event.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>
        <para>The pixel data contains color-indexed values, which means the values are an index to colors in the system color table, as opposed to individual color values.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> event.</para>
      </summary>
      <param name="args">A <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the line.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the line.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the arc.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>
        <para>Resets the <see langword="Transform" /> property to identity.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SpringGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>
        <para>Gets the height of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>
        <para>Gets or sets the rendering mode for text associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Bisque">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see langword="PathTypes" /> and <see langword="PathPoints" /> arrays.</para>
      </summary>
      <param name="pts">
        An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
      <param name="types">
        An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumerations that specifies the type of each corresponding point in the <paramref name="pts" /> array.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>
        <para>Specifies low quality interpolation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.Drawing2D.RegionData" /> object that represents the information that describes this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Drawing2D.RegionData" /> object that represents the information that describes this <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>
        <para>Returns information about the parameters supported by the specified image encoder.</para>
      </summary>
      <param name="encoder">
        A GUID that specifies the image encoder.
      </param>
      <returns>
        <para>An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object that contains an array of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects. Each <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object contains information about one of he parameters supported by the specified image encoder.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>
        <para>Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> object to identity.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.TranslateClip" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LimeGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the text of selected items. This includes selected menu items as well as selected text. For example, the brush may be the color used for the text of selected items in a list box.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>
        <para>
       An envelope.
       
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.GrayText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of dimmed text. Items in a list that are disabled are displayed in dimmed text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified <see langword="Stream" /> object in the specified format.</para>
      </summary>
      <param name="stream">
        The <see langword="Stream" /> object to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoder">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" /> object for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="encoderParams">
        An <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object to use for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontFamily" /> object in the specified <see cref="T:System.Drawing.Text.FontCollection" /> object with the specified name.</para>
      </summary>
      <param name="name">
        A <see langword="String" /> object that represents the name of the new <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
      <param name="fontCollection">
        The <see cref="T:System.Drawing.Text.FontCollection" /> object that contains this <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object in the specified order.</para>
      </summary>
      <param name="sx">
        Scale factor in the x direction.
      </param>
      <param name="sy">
        Scale factor in the y direction.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>
        <para>Specifies the quality of text rendering.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>
        <para>Disables wrapping of text between lines when formatting within a rectangle. This flag is implied when a point is passed instead of a rectangle, or when the specified rectangle has a zero line length. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>
        <para> Gets or sets the print controller
      that guides the printing process.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.ScrollBar">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>
        <para>Gets the height of this <see cref="T:System.Drawing.Icon" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>
        <para>Sets the gamma value for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <param name="gamma">
        Specifies the gamma correction value. Typical values for Gamma run from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful under some circumstances.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>
        <para>Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>
        <para>
       Letter paper (8.5 in.
       by 11 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>
        <para>Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Adds the outline of a pie shape to this path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse from which the pie is drawn.
      </param>
      <param name="startAngle">
        The starting angle for the pie section, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.
      </param>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary>
        <para> Gets or sets the display name for this toolbox item.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object in the specified order.</para>
      </summary>
      <param name="dx">
        x component of the translation.
      </param>
      <param name="dy">
        y component of the translation.
      </param>
      <param name="order">
        Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSeaGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary>
        <para>Gets or sets a bitmap that will represent 
      this <see cref="T:System.Drawing.Design.ToolboxItem" /> in the toolbox.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>
        <para>Gets or sets the color palette used for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>
        <para>Gets or sets a <see langword="Guid" /> structure that contains a GUID that identifies a specific codec.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Lavender">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object this class creates, cast as an object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>
        <para>Specifies that when a color is rendered, it is blended with the background color. The blend is determined by the alpha component of the color being rendered. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Color.Orchid">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>
        <para>Returns a hash code value that represents this object.</para>
      </summary>
      <returns>
        <para>Returns a hash code that represents this object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.MediumBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>
        <para>Gets or sets the size, in bytes, of the largest record in the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Rectangle" /> class with the specified location and size.</para>
      </summary>
      <param name="location">
        A <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the rectangular region.
      </param>
      <param name="size">
        A <see cref="T:System.Drawing.Size" /> that represents the width and height of the rectangular region.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>
        <para>
       People's Republic of China #6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>
        <para>Resets the <see langword="Transform" /> property to identity.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Right">
      <summary>
        <para>Gets the x-coordinate of the right edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveCaption">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Red">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified shape and size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Coral">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Sets the low color value and the high color value for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <param name="colorLow">
        The low color value.
      </param>
      <param name="colorHigh">
        The high color value.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>
        <para>Gets or sets the color at the center of the path gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Bitmap" /> object from a handle to a GDI bitmap and a handle to a GDI palette.</para>
      </summary>
      <param name="hbitmap">
        The GDI bitmap handle from which to create the <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="hpalette">
        A handle to a GDI palette used to define the bitmap colors if the bitmap specified in the <paramref name="hBitmap" /> parameter is not a device-independent bitmap (DIB).
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Bitmap" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>
        <para>Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the scale vector.</para>
      </summary>
      <param name="scaleX">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.
      </param>
      <param name="scaleY">
        The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>
        <para>Gets an array of <see cref="T:System.Drawing.Imaging.PropertyItem" /> objects that describe this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Rectangle.Empty">
      <summary>
        <para>Represents a <see cref="T:System.Drawing.Rectangle" /> structure with its properties left uninitialized.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>
        <para>Internal method. Do not use.</para>
      </summary>
      <param name="hwnd">
        Handle to a window.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified window handle.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>
        <para>Sets the output color channels, as specified by the <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> enumeration, for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
      <param name="flags">
        Specifies which color channels will be used. Individual channels can be set or they can be combined using the Boolean <see langword="OR" /> operator.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>
        <para>Specifies the attributes of the pixel data contained in an <see cref="T:System.Drawing.Image" /> object. The <see langword="Image.Flags" /> property returns a member of this enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.PointF.Y">
      <summary>
        <para>Gets the y-coordinate of this <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.PointF.X">
      <summary>
        <para>Gets the x-coordinate of this <see cref="T:System.Drawing.PointF" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Implicit(System.Drawing.Size)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.Size" /> to a <see cref="T:System.Drawing.SizeF" />.</para>
      </summary>
      <param name="p">
        The <see cref="T:System.Drawing.Size" /> to convert.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>
        <para>Specifies a round line cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that uses the specified image and wrap mode.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="wrapMode">
        A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that specifies how this <see cref="T:System.Drawing.TextureBrush" /> object is tiled.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="width">
        Width of the drawn image.
      </param>
      <param name="height">
        Height of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>
        <para>Tests whether any portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of <paramref name="rect" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to combine.
      </param>
      <param name="combineMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>
        <para>Content is vertically aligned at the top, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the given object to the converter's native type.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptor" /> object that provides a format context. You can use this object to get additional information about the environment from which this converter is being invoked.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture to represent the Color.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This method will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>
        <para>The pixel data contains alpha values that are not premultiplied.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>
        <para>Gets or sets the starting and ending colors of the gradient.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>
        <para>Specifies a hatch that has the appearance of diagonally-layered shingles that slant to the right from top points to bottom points.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Gets a serializable object that represents the specified 
      toolbox item.</para>
      </summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to serialize.</param>
      <returns>
        <para>An object that represents the specified <see cref="T:System.Drawing.Design.ToolboxItem" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>
        <para> Gets or sets the paper size for the page.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SRDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>
        <para>Indicates whether the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>
        <para>Standard paper (15 in. by 11 in.).
       </para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>
        <para>Specifies to disable substitutions.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>
        <para>This method clears the <see cref="T:System.Drawing.Brush" /> object color-remap table.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>
        <para> 
       Specifies the part of the document to print.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>
        <para>Saves the current state of this <see cref="T:System.Drawing.Graphics" /> object and identifies the saved state with a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object.</para>
      </summary>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> object that represents the saved state of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image and with the specified size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.RectangleF.Left">
      <summary>
        <para>Gets the x-coordinate of the left edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>
        <para>Gets or sets the language that corresponds with the substitution digits.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LemonChiffon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>
        <para>
       A6
       rotated paper
       (148 mm by 105 mm).
       Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para> Adds a new toolbox
      item creator.</para>
      </summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format this creator responds to. If a creator responds to more than one format, call <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)" /> more than once. It is an error to add more than one creator for the same format.</param>
      <param name="host">The designer host to associate with the creator. If this parameter is set to <see langword="null" /> , this creator will be available to all designers. If a designer host is supplied, the creator will only be available to designers using the specified host.</param>
    </member>
    <member name="M:System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size">
      <summary>
        <para>
       Creates a <see cref="T:System.Drawing.Size" /> with the coordinates of the specified <see cref="T:System.Drawing.Point" /> .
    </para>
      </summary>
      <param name="p">
    A <see cref="T:System.Drawing.Point" /> that specifies the coordinates for the new <see cref="T:System.Drawing.Size" />.
 </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> class using the specified array of toolbox items.</para>
      </summary>
      <param name="value">An array of type <see cref="T:System.Drawing.Design.ToolboxItem" /> containing the toolbox items to fill the collection with.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.
      </param>
      <param name="pt3">
        A <see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.
      </param>
      <param name="pt4">
        A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the curve.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>
        <para>Sets color-adjust matrices for image colors or grayscale, or both, depending on the argument passed for the flags parameter.</para>
      </summary>
      <param name="newColorMatrix">
        Contains the address of a 5x5 color matrix of type <see cref="T:System.Drawing.Imaging.ColorMatrix" />. The matrix is used to transform the image colors from one color space to another.
      </param>
      <param name="grayMatrix">
        Contains the address of a 5x5 grayscale matrix of type <see cref="T:System.Drawing.Imaging.ColorMatrix" />. The matrix is used to transform the image grayscales from one color space to another.
      </param>
      <param name="flags">
        Value that specifies whether color values or grayscale values, or both, are to be modified using the matrices. The default is <see langword="ColorMatrixFlag.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary>
        <para>Throws an exception if the <see cref="T:System.Drawing.Design.ToolboxItem" /> is currently locked.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.IndianRed">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>
        <para>See <see langword="Graphics.FillPath" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in the active window's title bar.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>
        <para>Legal extra
       paper (9.275 in.
       by 15 in.). This value is specific to the PostScript driver and is used
       only by Linotronic printers in order to conserve paper.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>
        <para>Gets or sets the number of positions in this <see cref="T:System.Drawing.CharacterRange" />.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds a cubic Bézier curve to the current figure.</para>
      </summary>
      <param name="x1">
        The x-coordinate of the starting point of the curve.
      </param>
      <param name="y1">
        The y-coordinate of the starting point of the curve.
      </param>
      <param name="x2">
        The x-coordinate of the first control point for the curve.
      </param>
      <param name="y2">
        The y-coordinate of the first control point for the curve.
      </param>
      <param name="x3">
        The x-coordinate of the second control point for the curve.
      </param>
      <param name="y3">
        The y-coordinate of the second control point for the curve.
      </param>
      <param name="x4">
        The x-coordinate of the endpoint of the curve.
      </param>
      <param name="y4">
        The y-coordinate of the endpoint of the curve.
      </param>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>
        <para> Specifies information about how a document is printed, including the
      printer that prints it.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> class with the specified points.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that make up the vertices of the path.
      </param>
    </member>
    <member name="M:System.Drawing.ColorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Retrieves a collection containing a set of standard values for the data type for which this validator is designed. This will return null if the data type does not support a standard set of values.</para>
      </summary>
      <param name="context">
        A formatter context. Use this object to extract additional information about the environment from which this converter is being invoked. Always check whether this value is null. Also, properties on the context object may also return null.
      </param>
      <returns>
        <para>A collection containing null or a standard set of valid values. The default implementation always returns null.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>
        <para>Text with a line through the middle.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Updates the brush's transformation matrix with the product of brush's transformation matrix multiplied by another matrix.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that will be multiplied by the brush's current transformation matrix.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="s">
        String to draw.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the color and texture of the drawn text.
      </param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.
      </param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.ColorConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.ColorConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>
        <para>Used internally.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>
        <para>Terminates a running animation.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object to stop animating.
      </param>
      <param name="onFrameChangedHandler">
        An <see langword="EventHandler" /> object that specifies the method that is called when the animation frame changes.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>
        <para>Gets a rectangular region that defines the starting and ending points of the gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.Linen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color used to designate a hot-tracked item. Single-clicking a hot-tracked item executes the item.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkKhaki">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSlateGray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>
    Specifies the ending point of a subpath.
 </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>
        <para>Specifies the overall quality when rendering GDI+ objects.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>
        <para>Gets or sets the color of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>
        <para>Clears the output channel selection for all the pertinent GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Rectangle" /> structures have equal location and size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the left of the equality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two <see cref="T:System.Drawing.Rectangle" /> structures have equal <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> class.</para>
      </summary>
      <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the item.</param>
      <param name="marginBounds">The area between the margins.</param>
      <param name="pageBounds">The total area of the paper.</param>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> for the page.</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transform by the specified amount in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the rotation matrix.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>
    Specifies a mask point.
 </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>
        <para>Specifies a 90-degree rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>
        <para>Specifies a 90-degree rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DimGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>
        <para>Specifies a square cap that squares off both ends of each dash. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightGoldenrodYellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumSpringGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Tan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>
        <para>
       ISO B4 (250 mm by 353 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> class.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PrinterResolution" />.</param>
    </member>
    <member name="P:System.Drawing.Color.Orange">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>
        <para>Gets or sets the geometric transformation for this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>
        <para>Specifies that the buffer used for reading or writing pixel data is allocated by the user. If this flag is set, the <paramref name="flags" /> parameter of the <see langword="Bitmap.LockBits" /> method serves as an input parameter (and possibly as an output parameter). If this flag is cleared, then the <paramref name="flags" /> parameter serves only as an output parameter.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>
        <para>Specifies several of the units of measure that
       the Win32 Application Programming Interface (API) uses for printing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the gamma value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="gamma">
        Specifies the gamma correction value. Typical values for Gamma run from 1.0 to 2.2; however, values from 0.1 to 5.0 could prove useful under some circumstances.
      </param>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Region" /> object from the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that defines the interior of the new <see cref="T:System.Drawing.Region" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>
        <para>Gets the version number of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>
        <para>
       Tabloid paper (11
       in. by 17 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>
        <para>The unit of measurement is 1 printer's point.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>
        <para>Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>
        <para>Gets an array of <see cref="T:System.Drawing.Color" /> structures.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>
        <para>Specifies dashed diagonal lines, that slant to the left from top points to bottom points.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.GrayText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an object of this type by using a specified set of property values for the object. This is useful for creating nonchangeable objects that have changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from the <see langword="GetProperties" /> object.
      </param>
      <returns>
        <para>The newly created object, or <see langword="null" /> if the object could not be created. The default implementation returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Blue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.TextureBrush" /> object that usesthe specified image, bounding rectangle, and image attributes.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object with which this <see cref="T:System.Drawing.TextureBrush" /> object fills interiors.
      </param>
      <param name="dstRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
      <param name="imageAttr">
        An <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that contains additional information about the image used by this <see cref="T:System.Drawing.TextureBrush" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object with its original size at the specified location.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="width">
        Width of the drawn image.
      </param>
      <param name="height">
        Height of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>
        <para> Gets or sets the margins for this page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IndianRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>
        <para>Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by prepending the translation vector.</para>
      </summary>
      <param name="offsetX">
        The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
      <param name="offsetY">
        The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillClosedCurve" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="P:System.Drawing.Color.DarkOliveGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Printing.Margins" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Printing.Margins" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Printing.Margins" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMap" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Cyan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary>
        <para>Gets or sets the filter for this <see cref="T:System.Drawing.Design.ToolboxItem" /> .</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified existing <see cref="T:System.Drawing.Font" /> object and <see cref="T:System.Drawing.FontStyle" /> enumeration.</para>
      </summary>
      <param name="prototype">
        The existing <see cref="T:System.Drawing.Font" /> object from which to create the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="newStyle">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to apply to the new <see cref="T:System.Drawing.Font" /> object. Multiple values of the <see cref="T:System.Drawing.FontStyle" /> enumeration can be combined with the <see langword="OR" /> operator.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>
        <para>Specifies a gradient from left to right.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="angle">
        The angle (extent) of the rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>
        <para>Specifies a hatch that has the appearance of confetti.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>
        <para>Gets the size of the page, taking into account the page orientation specified by the
   <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> property.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.Offset(System.Int32,System.Int32)">
      <summary>
        <para>Translates this <see cref="T:System.Drawing.Point" /> by the specified amount.</para>
      </summary>
      <param name="dx">
        The amount to offset the x-coordinate.
      </param>
      <param name="dy">
        The amount to offset the y-coordinate.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Size.Equals(System.Object)">
      <summary>
        <para>Tests to see whether the specified object is a <see cref="T:System.Drawing.Size" /> with the same dimensions as this <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Size" /> and has the same width and height as this <see cref="T:System.Drawing.Size" />; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>
        <para>Specifies the units of measure for a text string.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumSpringGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.FromArgb(System.Int32)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Color" /> structure from a 32-bit ARGB value.</para>
      </summary>
      <param name="argb">
        A value specifying the 32-bit ARGB value.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>
        <para>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures. The drawing begins offset from the beginning of the array.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="offset">
        Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.
      </param>
      <param name="numberOfSegments">
        Number of segments after the starting point to include in the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.FontFamily" /> object with the specified name.</para>
      </summary>
      <param name="name">
        The name of the new <see cref="T:System.Drawing.FontFamily" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> class.</para>
      </summary>
      <param name="host">The designer host that is making the request.</param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and an array of bytes. Sets the <see langword="ValueType" /> property to ValueTypeUndefined or ValueTypeByte, and sets the <see langword="NumberOfValues" /> property to the number of elements in the array.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        An array of bytes that specifies the values stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
      <param name="undefined">
        If <see langword="true" />, the <see langword="ValueType" /> property is set to ValueTypeUndefined; otherwise, the <see langword="ValueType" /> property is set to ValueTypeByte.
      </param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class with the specified size and with the resolution of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="g">
        The <see cref="T:System.Drawing.Graphics" /> object that specifies the resolution for the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkTurquoise">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="type">
        The <see langword="Type" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.
      </param>
      <param name="imgName">
        The name of the image file to look for.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the left from top points to bottom points and are spaced 50 percent closer together than <see langword="BackwardDiagonal" />, but they are not antialiased.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillPolygon" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>
        <para>Specifies a round anchor cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified Windows handle to a device context.</para>
      </summary>
      <param name="hdc">
        A handle to a device context.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A descriptive string can also be added.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.StringFormatFlags" /> enumeration that contains formatting information.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the save flag parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, from a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A descriptive string can be added as well.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.RectangleF" /> to a <see cref="T:System.Drawing.Rectangle" /> by truncating the <see cref="T:System.Drawing.RectangleF" /> values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.RectangleF" /> to be converted.
      </param>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background in the client area of a window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>
        <para>Creates a Windows HBITMAP from this <see cref="T:System.Drawing.Bitmap" /> object. You must de-allocate HBITMAP with <see langword="Windows.DeleteObject(handle)" />.</para>
      </summary>
      <returns>
        <para>The handle to the Windows HBITMAP object that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>
        <para>Gets a value that specifies how composited images are drawn to this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>
        <para> Gets or sets the printer resolution for the page.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>
        <para>Specifies a 180-degree rotation followed by a horizontal flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>
        <para>Specifies a 180-degree rotation followed by a vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>
        <para>Specifies that text is trimmed to the nearest word.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>
        <para> Gets or sets the name of the printer to use.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>
        <para>Content is vertically aligned in the middle, and horizontally aligned on the right.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>
        <para>Specifies a printer's point (1/72 inch) as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Size.op_Explicit(System.Drawing.Size)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.Size" /> to a <see cref="T:System.Drawing.Point" />.</para>
      </summary>
      <param name="size">
        The <see cref="T:System.Drawing.Size" /> to convert.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object is underlined.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>
        <para>
       Japanese Chou #3 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>
        <para>Gets a hash code for this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <returns>
        <para>The hash code for this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.UITypeEditor.GetEditStyle">
      <summary>
        <para>Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.</para>
      </summary>
      <returns>
        <para> A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration 
   value that indicates the style of editor used by the current <see cref="T:System.Drawing.Design.UITypeEditor" />. By default, this method will return
<see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> .</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>
        <para>Gets or sets whether the arrow cap is filled.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>
        <para>Objects in the <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> class define the images associated with a specified component. The component can offer a small and large image (large is optional).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>
        <para>Halftone data.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.MistyRose">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.ScaleTransform" /><see langword=" Methods" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
        <para>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.SandyBrown">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>
        <para>
       Japanese rotated Chou #4 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the output color channels, as specified by the <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> enumeration, for the GDI+ object (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration.</para>
      </summary>
      <param name="flags">
        Specifies which color channels will be used. Individual channels can be set or the flags can be combined for all channels using the Boolean <see langword="OR" /> operator.
      </param>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color channel information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Font" /> object from the specified GDI <see langword="LOGFONT" /> structure.</para>
      </summary>
      <param name="lf">
        An <see langword="Object" /> object that represents the GDI <see langword="LOGFONT" /> structure from which to create the <see cref="T:System.Drawing.Font" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Font" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>
        <para> Gets the
       number of available printer resolutions in the collection.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>
        <para>Specifies that the format is 24 bits per pixel; 8 bits each are used for the red, green, and blue components. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the gamma value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the gamma value cleared. If not supplied, the value defaults to <see langword="ColorAdjustType.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para> Begins the control sequence that determines when and how to preview a print document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document being previewed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains data about how to print the document.</param>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.HotTrack">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.BurlyWood">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>
        <para>Gets the points in the path. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="layoutRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the text.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>
        <para>
       People's Republic of
       China #1 envelope (102 mm
       by 165
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>
        <para>
       People's Republic of
       China #2 envelope (102 mm
       by 176
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightCyan">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>
        <para>Specifies the type of display for hot-key prefixes that relate to text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>
        <para>Returns a value that indicates whether the specified object is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </summary>
      <param name="o">
        The object to test.
      </param>
      <returns>
        <para>Returns <see langword="true" /> if <paramref name="o" /> is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object; otherwise, returns <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
      Determines if this converter can convert an object in the given source
      type to the native type of the converter.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="sourceType">
      The type you wish to convert from.
 </param>
      <returns>
      True if this object can perform the conversion.
 </returns>
    </member>
    <member name="M:System.Drawing.Size.#ctor(System.Drawing.Point)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Size" /> class from the specified <see cref="T:System.Drawing.Point" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> from which to initialize this <see cref="T:System.Drawing.Size" />.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>
        <para>
       People's Republic of China #9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>
        <para>Marks the end of a multiple-format section.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions in the specified order.</para>
      </summary>
      <param name="dx">
        The dimension by which to translate the transformation in the x direction.
      </param>
      <param name="dy">
        The dimension by which to translate the transformation in the y direction.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.StringFormat" /> object to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string representation of this <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>
    C paper (17 in. by 22 in.).
 </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>
        <para>Internal method. Do not use.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <returns>
        <para>This method returns a new <see cref="T:System.Drawing.Graphics" /> object for the specified device context.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>
        <para>Gets or sets the line alignment.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>
        <para>Gets or sets a value indicating whether the printing output is sent
      to a file instead of a port.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>
        <para> Gets
      a value indicating whether this printer supports color printing.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary>
        <para>Indicates whether the collection contains the specified 
   <see cref="T:System.Drawing.Design.ToolboxItem" /> .</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.ToolboxItem" /> to search the collection for.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the 
   specified object; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>
        <para>Specifies the standard paper sizes.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.SolidBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.SolidBrush" /> object that this method creates.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to the converter's native type.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name=" culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides the language to convert to.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> that
 represents the converted value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>
        <para>Gets or sets the distance between the cap and the line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DeepPink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>
        <para> Gets or sets the left margin, in hundredths of an inch.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.InfoText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>
        <para> Defines a reusable object that sends output to a
      printer.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Lime">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets color-adjust matrices for image colors or grayscale, or both, depending on the argument passed for the flags parameter. The type of GDI+ object on which the color adjustment is to be made, is specified in the <paramref name="type" /> parameter.</para>
      </summary>
      <param name="newColorMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image colors from one color space to another.
      </param>
      <param name="grayMatrix">
        A 5x5 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object that represents the matrix used to transform image grayscales from one color space to another.
      </param>
      <param name="mode">
        Value that specifies whether color values or grayscale values, or both, are to be modified using the matrices. The default is <see langword="ColorMatrixFlag.Default" />.
      </param>
      <param name="type">
        GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjustment information. The default is <see langword="ColorAdjustType.Default" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>
        <para>Color adjustment information that is used by all GDI+ objects that do not have their own color adjustment information.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.DarkSeaGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.OrangeRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Icon" /> class from a resource in the specified assembly.</para>
      </summary>
      <param name="type">
        A <see langword="Type" /> object that specifies the assembly in which to look for the resource.
      </param>
      <param name="resource">
        The resource name to load.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Fills the interior of a polygon defined by an array of points  specified by <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.
      </param>
      <param name="fillMode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the given object to a <see cref="T:System.Drawing.Rectangle" /> object.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will throw an exception if the conversion could not be performed.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>
        <para>Specifies that a portion of the image is locked for writing.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Azure">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>
        <para>** DESCRIPTION PARA MISSING **</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> class.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.String" />.</param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>
        <para>
       People's Republic of China #4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillRectangles" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Brush" /> object that determines attributes of this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>
        <para>Creates a <see cref="T:System.Drawing.Pen" /> object from the specified <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="c">
        The <see cref="T:System.Drawing.Color" /> structure for the new <see cref="T:System.Drawing.Pen" /> object.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Pen" /> object this method creates.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>
        <para>Specifies that the format is 4 bits per pixel, indexed. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>
        <para>Specifies a print controller that displays a document on
      a screen as a series of images.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>
        <para>Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system exclamation icon (WIN32: IDI_EXCLAMATION).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>
        <para> Gets or sets a value indicating whether the page should be printed in color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Tests whether any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to test.
      </param>
      <param name="width">
        The width of the rectangle to test.
      </param>
      <param name="height">
        The height of the rectangle to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when any portion of the specified rectangle is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified existing image and with the specified size.</para>
      </summary>
      <param name="original">
        The <see cref="T:System.Drawing.Image" /> object from which to create the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="width">
        The width, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
      <param name="height">
        The height, in pixels, of the new <see cref="T:System.Drawing.Bitmap" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.InactiveCaptionText">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>
        <para>Specifies high speed, low quality rendering.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>
        <para>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object and drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.
      </param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object in the specified order.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transformation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies the order in which to multiply the two matrices.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified shape and size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>
        <para>Gets or sets the rendering quality of composited images drawn to this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>
        <para>Specifies that each character is drawn using its glyph CT bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary>
        <para>Represents a collection of toolbox items.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Rotates the local geometric transformation by the specified angle in the specified order.</para>
      </summary>
      <param name="angle">
        The angle of rotation.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>
        <para>
       #11 envelope (4.5
       in. by 10.375 in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>
        <para>Gets the logical vertical resolution, in dots per inch, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>
        <para>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
      <param name="tension">
        A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LimeGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Equals(System.Object)">
      <summary>
        <para>Tests whether <paramref name="obj" /> is a <see cref="T:System.Drawing.Rectangle" /> structure with the same location and size of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Rectangle" /> structure and its <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties are equal to the  corresponding properties of this <see cref="T:System.Drawing.Rectangle" /> structure; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>
        <para>Initializes a new instance of the <see langword="WmfPlaceableFileHeader" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.Equals(System.Object)">
      <summary>
        <para>Tests whether the specified object is a <see cref="T:System.Drawing.Color" /> structure and is equivalent to this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.Color" /> structure equivalent to this <see cref="T:System.Drawing.Color" /> structure; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>
        <para>
       People's Republic of
       China 16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>
        <para>
       Specifies that the corresponding segment is dashed.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.ForestGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>
        <para>
       Japanese Kaku #2 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>
        <para>Gets the next figure (subpath) from this <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> object's associated path.</para>
      </summary>
      <param name="path">
        A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.
      </param>
      <param name="isClosed">
        [out] Indicates whether the current subpath is closed. It is <see langword="true" /> if the if the figure is closed, otherwise it is <see langword="false" />.
      </param>
      <returns>
        <para>The number of data points in the retrieved figure (subpath). If there are no more figures to retrieve, zero is returned.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.SkyBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>
        <para>Specifies vertical lines that are spaced 50 percent closer together than <see langword="Vertical" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object and using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <param name="graphics">
        The <see cref="T:System.Drawing.Graphics" /> object for which to test visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object as drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>
        <para>Specifies a printer resolution.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>
        <para>Gets or sets the y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the background of an inactive window's title bar.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Indicates whether this object supports a standard set of values that can be picked from a list.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="GetStandardValues" /> method should be called to find a common set of values the object supports.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>
        <para>
       C4 envelope (229
       mm by 324 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.ColorMatrix" /> class using the elements in the specified matrix <paramref name="newColorMatrix" />.</para>
      </summary>
      <param name="newColorMatrix">
        The values of the elements for the new <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>
        <para>Specifies that each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font smoothing settings the user has selected for the system.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>
        <para>The unit of measurement is 1 millimeter.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PageSettings" /> class using
   a specified printer.</para>
      </summary>
      <param name="printerSettings">The <see cref="T:System.Drawing.Printing.PrinterSettings" /> that describes the printer to use.</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> class with the specified <see cref="T:System.Drawing.Imaging.Encoder" /> object and one 64-bit integer. Sets the <see langword="ValueType" /> property to <see langword="ValueTypeLong" /> (32 bits), and sets the <see langword="NumberOfValues" /> property to 1.</para>
      </summary>
      <param name="encoder">
        An <see cref="T:System.Drawing.Imaging.Encoder" /> object that encapsulates the globally unique identifier of the parameter category.
      </param>
      <param name="value">
        A 64-bit integer that specifies the value stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. Must be nonnegative. This parameter is converted to a 32-bit integer before it is stored in the <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that specifies a transformation to be applied to this path before the bounding rectangle is calculated. This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleF.ToString">
      <summary>
        <para>Converts the <see langword="Location" /> and <see cref="T:System.Drawing.Size" /> of this <see cref="T:System.Drawing.RectangleF" /> to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string that contains the position, width, and height of this <see cref="T:System.Drawing.RectangleF" /> structure¾for example, "{X=20, Y=20, Width=100, Height=50}".</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Printing.PaperSource" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSource" /> to get.</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>
        <para>Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the polygon.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" /> object from which to take the new clip region.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Design.UITypeEditorEditStyle.DropDown">
      <summary>
        <para> Displays a down arrow button and the
      user interface will be hosted in a drop-down
      dialog.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Inflate(System.Single,System.Single)">
      <summary>
        <para>Inflates this <see cref="T:System.Drawing.RectangleF" /> structure by the specified amount.</para>
      </summary>
      <param name="x">
        The amount to inflate this <see cref="T:System.Drawing.RectangleF" /> structure horizontally.
      </param>
      <param name="y">
        The amount to inflate this <see cref="T:System.Drawing.RectangleF" /> structure vertically.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>
        <para>The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>
        <para>Specifies a pixel as the unit of measure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the Point class using coordinates specified by an integer value.</para>
      </summary>
      <param name="dw">
        A 32-bit integer that specifies the coordinates for the new <see cref="T:System.Drawing.Point" />.
      </param>
    </member>
    <member name="M:System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)">
      <summary>
        <para>Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this <see cref="T:System.Drawing.RectangleF" />; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>
        <para>Specifies the direction of a linear gradient.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>
        <para> Gets the number of different paper sources in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.Control">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the face color of a 3-D element.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Firebrick">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>
        <para>Tests whether the specified point is contained within this <see cref="T:System.Drawing.Region" /> object when drawn using the specified <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a graphics context.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when the specified point is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
        <para>Specifies how data is interpolated between endpoints.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>
        <para>The integer values supplied are 32-bit values.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkGreen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>
        <para>A pattern of lines on a diagonal from upper left to lower right.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object to a human-readable string.</para>
      </summary>
      <returns>
        <para>A string representing this <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>
        <para>
       Specifies that the <see cref="T:System.Drawing.Pen" /> is positioned to the left of
       the line being drawn.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled. This parameter is required but ignored.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.op_Inequality(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Tests whether two specified <see cref="T:System.Drawing.Color" /> structures are different.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Color" /> structure that is to the left of the inequality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Color" /> structure that is to the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two <see cref="T:System.Drawing.Color" /> structures are different; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>
        <para> One-hundredth of a millimeter
       (0.01 mm).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>
        <para> Creates a handle to a DEVMODE structure that corresponds to the printer settings.</para>
      </summary>
      <returns>
        <para>A handle to a DEVMODE structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>
        <para>Contains attributes of an associated <see cref="T:System.Drawing.Imaging.Metafile" /> object. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="origin">
        A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object and formatted with the specified <see cref="T:System.Drawing.StringFormat" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the text format of the string.
      </param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.
      </param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" /> object that represents formatting information, such as line spacing, for the string.
      </param>
      <param name="charactersFitted">
        Number of characters in the string.
      </param>
      <param name="linesFilled">
        Number of text lines in the string.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in pixels, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.ImageFormatConverter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.PathData" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary>
        <para>Removes a previously added toolbox creator of the specified data format.</para>
      </summary>
      <param name="format">The data format of the creator to remove. </param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>
        <para> Gets the number of strings in the collection.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object within the specified layout area.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object defines the text format of the string.
      </param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>
        <para>Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>
        <para>Translates a Windows color value to a GDI+ <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <param name="win32Color">
        The Windows color to translate.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Color" /> structure that represents the translated Windows color.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>
        <para>Gets or sets text alignment information.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the default application icon (WIN32: IDI_APPLICATION).</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>
        <para>Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>
        <para>Gets or sets the stride width (also called scan width) of the <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>
        <para>Adds a font from the specified file to this <see cref="T:System.Drawing.Text.PrivateFontCollection" /> object. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
      <param name="filename">
        A <see langword="String" /> containing the file name of the font to add.
      </param>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>
        <para>Defines a graphic metafile. A metafile contains records that describe a sequence of graphics operations that can be recorded (constructed) and played back (displayed). Not inheritable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Olive">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.GetBrightness">
      <summary>
        <para>Gets the hue-saturation-brightness (HSB) brightness value for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The brightness of this <see cref="T:System.Drawing.Color" /> structure. The brightness ranges from 0.0 through 1.0, where 0.0 represents black and 1.0 represents white.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)">
      <summary>
        <para>Translates a <see cref="T:System.Drawing.Point" /> by the negative of a given <see cref="T:System.Drawing.Size" />.</para>
      </summary>
      <param name="pt">
        The <see cref="T:System.Drawing.Point" /> to translate.
      </param>
      <param name="sz">
        A <see cref="T:System.Drawing.Size" /> that specifies the pair of numbers to subtract from the coordinates of <paramref name="pt" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>
        <para>Indicates invalid data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>
        <para>Gets the Tag Image File Format (TIFF) image format.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>
        <para>Default quality.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> class with the specified width and height. The arrow end caps created with this constructor are always filled.</para>
      </summary>
      <param name="width">
        The width of the arrow.
      </param>
      <param name="height">
        The height of the arrow.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
        <para>Color adjustment information for <see cref="T:System.Drawing.Brush" /> objects.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>
        <para>Defines a map for converting colors. Several methods of the <see cref="T:System.Drawing.Imaging.ImageAttributes" /> class adjust image colors by using a color-remap table, which is an array of <see cref="T:System.Drawing.Imaging.ColorMap" /> structures. Not inheritable.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with either fully restricted
   or unrestricted access, as specified.</para>
      </summary>
      <param name="state">
        <para>One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </para>
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>
        <para>Gets or sets the x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified data stream.</para>
      </summary>
      <param name="stream">
        The data stream used to load the image.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>
        <para>Specifies that the image has more than one frame (page). Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>
        <para>Sets the resolution for this <see cref="T:System.Drawing.Bitmap" />.</para>
      </summary>
      <param name="xDpi">
        The horizontal resolution, in dots per inch, of the <see cref="T:System.Drawing.Bitmap" />.
      </param>
      <param name="yDpi">
        The vertical resolution, in dots per inch, of the <see cref="T:System.Drawing.Bitmap" />.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>
        <para> Creates a handle to a DEVMODE structure that corresponds
      to the printer and the page settings specified through the <paramref name="pageSettings" />
      parameter.</para>
      </summary>
      <param name="pageSettings">The <see cref="T:System.Drawing.Printing.PageSettings" /> object that the DEVMODE structure's handle corresponds to.</param>
      <returns>
        <para>A handle to a DEVMODE structure.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>
        <para>Gets the Windows icon image format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.SlateBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent closer together than <see langword="BackwardDiagonal" />, and are twice its width, but the lines are not antialiased.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.IsEmpty">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.Color" /> structure is uninitialized.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Linen">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>
        <para>Occurs when the
      last page of the document has printed.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>
        <para>
       JIS B6
       rotated paper (182 mm by 128
       mm). Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the Windows logo icon (WIN32: IDI_WINLOGO).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.TextureBrush" /> object this method creates, cast as an <see langword="Object" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>
        <para>Adds a font contained in system memory to this <see cref="T:System.Drawing.Text.PrivateFontCollection" /> object.</para>
      </summary>
      <param name="memory">
        The memory address of the font to add.
      </param>
      <param name="length">
        The memory length of the font to add.
      </param>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Returns an array of <see cref="T:System.Drawing.RectangleF" /> structures that approximate this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents a geometric transformation to apply to the region.
      </param>
      <returns>
        <para>An array of <see cref="T:System.Drawing.RectangleF" /> structures that approximate this <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintDocument" />
class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>
        <para>
       JIS B5 transverse
       paper (182 mm by 257 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary>
        <para>Locks the <see cref="T:System.Drawing.Design.ToolboxItem" />, preventing changes to 
   its properties and setting it to read-only.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>
        <para>
       A4 paper (210
       mm by 297
       mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>
        <para>There is no format information.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>
        <para>
       A3 paper
       (297 mm by 420 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> class that can contain the specified number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects.</para>
      </summary>
      <param name="count">
        An integer that specifies the number of <see cref="T:System.Drawing.Imaging.EncoderParameter" /> objects that the <see cref="T:System.Drawing.Imaging.EncoderParameters" /> object can contain.
      </param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary>
        <para>Initializes
      a new instance of the <see cref="T:System.Drawing.Design.ToolboxItem" /> class
      using the specified type.</para>
      </summary>
      <param name="">The type of tool for this toolbox item.</param>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>
        <para>Gets or sets the rendering quality for this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>
        <para>
       Draft-quality resolution.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>
        <para>Returns a value that indicates whether the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is device dependent.</para>
      </summary>
      <returns>
        <para>Returns <see langword="true" /> if the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object is device dependent; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>
        <para>Gets the number of subpaths in the path.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.G">
      <summary>
        <para>Gets the green component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.B">
      <summary>
        <para>Gets the blue component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>
        <para>
       People's Republic of China #1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.A">
      <summary>
        <para>Gets the alpha component value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>
        <para>See <see langword="Graphics.GetHdc" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>
        <para>Content is vertically aligned in the middle, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>
        <para>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> object to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object to combine.
      </param>
      <param name="combineMode">
        Member from the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>
        <para>The black color channel.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>
        <para>Specifies that a portion of the image is locked for reading or writing.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>
        <para>Initializes a new instance of the <see langword="MetaHeader" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>
        <para>The cyan color channel.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>
        <para>Gets the face name of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>
        <para>Specifies that the format is 32 bits per pixel; 8 bits each are used for the red, green, and blue components. The remaining 8 bits are not used. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>
        <para>
       Invite envelope (220
       mm by 220 mm).
    </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>
        <para>Specifies the type of point in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the arc.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the rectangle that defines the ellipse.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the rectangle that defines the ellipse.
      </param>
      <param name="width">
        Width of the rectangle that defines the ellipse.
      </param>
      <param name="height">
        Height of the rectangle that defines the ellipse.
      </param>
      <param name="startAngle">
        Angle in degrees measured clockwise from the x-axis to the starting point of the arc.
      </param>
      <param name="sweepAngle">
        Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the threshold value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the threshold value cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ActiveCaption">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the background of the active window's title bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Pen" /> object that is the face color of a 3-D element.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.RosyBrown">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Honeydew">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>
        <para>Gets or sets a two dimensional array of bytes that represents the signature of the codec.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.Bottom">
      <summary>
        <para>Gets the y-coordinate of the bottom edge of this <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</para>
      </summary>
      <param name="point1">
        A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.
      </param>
      <param name="point2">
        A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> class.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Drawing.Printing.PaperSource" />.</param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>
        <para>Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>
        <para>Returns a value that indicates whether the pixel format is canonical.</para>
      </summary>
      <param name="pixfmt">
        The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <paramref name="pixfmt" /> parameter is canonical; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeConverter.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.SizeConverter" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>
        <para>Specifies the alignment of a text string relative to its layout rectangle.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the luminance table parameter category.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>
        <para>Gets the unit of measure for this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.InactiveCaptionText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of the text in an inactive window's title bar.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.MediumVioletRed">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>
        <para>Specifies the hatch style <see langword="Cross" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>
        <para>Releases all resources used by this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Color.ToKnownColor">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.KnownColor" /> value of this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>An element of the <see cref="T:System.Drawing.KnownColor" /> enumeration, if the <see cref="T:System.Drawing.Color" /> structure is created from a pre-defined color by using either the <see langword="FromName" /> method or the <see langword="FromKnownColor" /> method; otherwise, zero.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF)~System.Drawing.PointF">
      <summary>
        <para>
       Converts the specified <see cref="T:System.Drawing.SizeF" /> to a
    <see cref="T:System.Drawing.PointF" />.
    </para>
      </summary>
      <param name="size">
    The <see cref="T:System.Drawing.SizeF" /> to convert.
 </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, and the supplied units of measure.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>When overridden in a derived class, completes the control sequence that determines when and 
       how to print a page of a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>
        <para>Not used in GDI+ version 1.0.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>
        <para>Converts a <see cref="T:System.Drawing.Point" /> from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <see cref="T:System.Drawing.Printing.PrinterUnit" /> type.</para>
      </summary>
      <param name="value">The <see cref="T:System.Drawing.Point" /> being converted.</param>
      <param name=" fromUnit">The unit to convert from.</param>
      <param name=" toUnit">The unit to convert to.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Point" /> that represents the converted 
 <see cref="T:System.Drawing.Printing.PrinterUnit" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.PointF">
      <summary>
        <para>Represents an ordered pair of floating point x- and y-coordinates that defines a point in a two-dimensional plane.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.#ctor(System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.SizeF" /> class from the specified dimensions.</para>
      </summary>
      <param name="width">
        The width component of the new <see cref="T:System.Drawing.SizeF" />.
      </param>
      <param name="height">
        The height component of the new <see cref="T:System.Drawing.SizeF" />.
      </param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> event.
   It is called after the <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> method is called and
   before the first page of the document
   prints.</para>
      </summary>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>
        <para>Occurs when the output to print for the current page is needed. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>
        <para>Gets or sets the bounding rectangle of the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>
        <para>Indicates whether the specified object is a <see cref="T:System.Drawing.FontFamily" /> object and is identical to this <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
      <param name="obj">
        The object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is both a <see cref="T:System.Drawing.FontFamily" /> object and is identical to this <see cref="T:System.Drawing.FontFamily" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>
        <para>Returns the handle to an icon.</para>
      </summary>
      <returns>
        <para>A Windows handle to an icon.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> class with the specified <see langword="HatchStyle" /> enumeration and foreground color.</para>
      </summary>
      <param name="hatchstyle">
        The <see langword="HatchStyle" /> enumeration that represents the pattern drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
      <param name="foreColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color of lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" />.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>
        <para>Marks a multiple-format section.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>
        <para>Gets the currently selected toolbox item.</para>
      </summary>
      <returns>
        <para> The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
        <para>The <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration specifies how to substitute digits in a string according to a user's locale or language.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Creates components from each type contained in this toolbox
      item.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to use when creating the components.</param>
      <returns>
        <para>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>
        <para>Specifies bicubic interpolation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>
        <para>
       Double-sided, horizontal printing.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> event that occurs
   when components are added to the toolbox.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary>
        <para>Notifies the toolbox service that the selected tool has been used.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>
        <para>Only entire lines are laid out in the formatting rectangle. By default layout continues until the end of the text, or until no more lines are visible as a result of clipping, whichever comes first. Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height. To ensure that only whole lines are seen, specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>
        <para>
       6 3/4 envelope
       (3.625 in. by 6.5 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the quality parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.RectangleF" /> structures have equal location and size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the left of the equality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.RectangleF" /> structure that is to the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two specified <see cref="T:System.Drawing.RectangleF" /> structures have equal <see langword="X" />, <see langword="Y" />, <see langword="Width" />, and <see langword="Height" /> properties.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>
        <para>Controls how a document is printed.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>
        <para>Represents
       the
       exception that is thrown when trying to access a printer using invalid printer settings.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>
        <para> One-thousandth of an inch
       (0.001 in.).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>
        <para>Returns a value that indicates whether the specified object is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </summary>
      <param name="o">
        The object to test.
      </param>
      <returns>
        <para>Returns <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.SolidBrush" /> object that is the color of the text in the client area of a window.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Design.CategoryNameCollection" /> class using the specified collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Drawing.Design.CategoryNameCollection" /> that contains the names to initialize the collection values to.</param>
    </member>
    <member name="P:System.Drawing.Color.LightBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>
        <para> The upper bin of a printer (or, if the printer only has one bin, that bin).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> class.</para>
      </summary>
      <param name="pageSettings">The page settings for the page to be printed.</param>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Window">
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a rectangle specified by a coordinate pair, a width, and a height.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the rectangle.
      </param>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle to draw.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle to draw.
      </param>
      <param name="width">
        The width of the rectangle to draw.
      </param>
      <param name="height">
        The height of the rectangle to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>
        <para> Gets the printer resolution.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
      <param name="isAngleScaleable">
        Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.DarkBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>
        <para>Specifies antialiased rendering.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>
        <para>Gets or sets the number of twips per inch.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.ImageConverter" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.BeginContainer" /><see langword="_Methods" />. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>
        <para> Gets a value indicating whether the <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
property designates a valid printer.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>
        <para>Gets a value that indicates whether this <see cref="T:System.Drawing.Font" /> object is bold.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified parallelogram.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>
        <para>See <see langword="Graphics.RenderingOrigin" />.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>
        <para> Controls access to printers. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Printing.PrinterResolution" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PrinterResolution" /> to get.</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>
        <para>
       High resolution.
       
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> object and opens and uses a new graphics container with the specified scale transformation.</para>
      </summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the new graphics container.
      </param>
      <param name="srcrect">
        <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the new graphics container.
      </param>
      <param name="unit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> object that represents the state of this <see cref="T:System.Drawing.Graphics" /> object at the time of the method call.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a toolbox item from the specified object that 
      represents a toolbox item in serialized
      form, using the specified designer host.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name=" host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to associate with this <see cref="T:System.Drawing.Design.ToolboxItem" />. </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from deserialization.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>
        <para>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="destSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.
      </param>
      <param name="srcSpace">
        Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.
      </param>
      <param name="pts">
        Array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transformation.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>
        <para>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="point">
        A <see cref="T:System.Drawing.Point" /> structure that represents the point to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Bitmap" /> class from the specified file.</para>
      </summary>
      <param name="filename">
        The name of the bitmap file.
      </param>
    </member>
    <member name="P:System.Drawing.Color.Maroon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>
        <para>Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Adds an ellipse to the current path.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.
      </param>
      <param name="width">
        The width of the bounding rectangle that defines the ellipse.
      </param>
      <param name="height">
        The height of the bounding rectangle that defines the ellipse.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>
        <para>Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to this path.</para>
      </summary>
      <param name="addingPath">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.
      </param>
      <param name="connect">
        A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path. A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path. A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>
        <para>Gets or sets the length of the property.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>
        <para>Equivalent to the Invalid element of the <see cref="T:System.Drawing.Drawing2D.QualityMode" /> enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Text.InstalledFontCollection" /> class. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>
        <para>Reserved.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>
        <para>See <see langword="Graphics.TextContrast" />.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>
        <para>Gets the height, in font design units, of the em square for the specified style. For information about font metrics, see <see langword="Obtaining Font Metrics" />.</para>
      </summary>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration for which to get the em height.
      </param>
      <returns>
        <para>The height of the em square.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Thistle">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>
        <para>Specifies horizontal lines that are spaced 75 percent closer together than hatch style <see langword="Horizontal" /> (or 25 percent closer together than <see langword="LightHorizontal" />).</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>
        <para>Adds a text string to this path.</para>
      </summary>
      <param name="s">
        The <see langword="String" /> to add.
      </param>
      <param name="family">
        A <see cref="T:System.Drawing.FontFamily" /> object that represents the name of the font with which the test is drawn.
      </param>
      <param name="style">
        A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on). This must be cast as an integer (see the example code later in this section).
      </param>
      <param name="emSize">
        The height of the Em square box that bounds the character.
      </param>
      <param name="origin">
        A <see cref="T:System.Drawing.Point" /> structure that represents the point where the text starts.
      </param>
      <param name="format">
        A <see cref="T:System.Drawing.StringFormat" /> object that specifies text formatting information, such as line spacing and alignment.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.Gray">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
      Determines if the list of standard values returned from
      GetStandardValues is an exclusive list.  If the list
      is exclusive, then no other values are valid, such as
      in an enum data type.  If the list is not exclusive,
      then there are other valid values besides the list of
      standard values GetStandardValues provides.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <returns>
      True if the collection returned from GetStandardValues
      is an exhaustive list of possible values, or false if
      other values are possible.  The default for this method
      always returns false;
 </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>
        <para> Gets the maximum number of copies that the printer allows you to print at a time.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>
        <para>Sets the 5x5 color-adjust matrix to the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> object with the specified <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration.</para>
      </summary>
      <param name="newColorMatrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the new color-adjust matrix.
      </param>
      <param name="flags">
        A <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> enumeration member that specifies whether to adjust colors for grayscale, colors, or both grayscale and colors.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>
        <para>The integer values supplied are 64-bit values.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>
        <para>Reverses the order of points in the <see langword="PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Salmon">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="angle">
        The angle, measured in degrees clockwise from the x-axis, that defines the orientation of the gradient.
      </param>
      <param name="isAngleScaleable">
        Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.
      </param>
    </member>
    <member name="P:System.Drawing.Color.DarkTurquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class with the specified file name, using a Windows handle to a device context, and A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object that represents the file name of the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>
        <para>The maximum value for this enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
        <para>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="pt1">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the line.
      </param>
      <param name="pt2">
        A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the line.
      </param>
    </member>
    <member name="P:System.Drawing.Color.DarkSlateBlue">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>
        <para>Gets the size, in bytes, of the associated <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the transformation parameter category.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified device context, bounded by the specified rectangle that uses the supplied units of measure.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object. A string that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object can be added.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="description">
        A <see langword="String" /> object that contains a descriptive name for the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.SystemColors.WindowText">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that  is the color of the text in the client area of a window.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary>
        <para>Occurs when components are created.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>
        <para>Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
        <para>An <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates a globally unique identifier (GUID) that identifies the category of an image encoder parameter.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Icon" /> object to the specified output <see langword="Stream" /> object.</para>
      </summary>
      <param name="outputStream">
        The <see langword="Stream" /> object to save to. This can be a file, data object, or other <see langword="Stream" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>
        <para>Gets or sets a value indicating whether to use anti-aliasing when displaying
      the print preview.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Aqua">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>
        <para>Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the outlines of the rectangles.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to draw.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
        <para>Creates a gradient falloff based on a bell-shaped curve.</para>
      </summary>
      <param name="focus">
        A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).
      </param>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects that match the specified
   context and property descriptor characteristics.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name=" propDesc">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that indicates the property to match with the properties to return.</param>
      <returns>
        <para>An array of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects that match the specified
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>
        <para>Indicates whether the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> structure to test for visibility.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
        <para>The <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> class provides the necessary storage members and methods to retrieve all pertinent information about the installed image codecs. Not inheritable. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>
        <para>
       People's Republic of China #9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.
      </param>
      <param name="srcX">
        x-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcY">
        y-coordinate of the upper-left corner of the portion of the source image to draw.
      </param>
      <param name="srcWidth">
        Width of the portion of the source image to draw.
      </param>
      <param name="srcHeight">
        Height of the portion of the source image to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.
      </param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <param name="callback">
        <see langword="Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image. This method is called frequently to check whether to stop execution of the <see langword="DrawImage" /> method according to application-determined criteria.
      </param>
      <param name="callbackData">
        Value specifying additional data for the <see langword="DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.SizeF.IsEmpty">
      <summary>
        <para>Gets a value indicating  whether this <see cref="T:System.Drawing.SizeF" /> has zero width and height.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>
        <para>Clears the color-adjust matrix to all zeroes.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>
        <para>Specifies the default mode.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SaddleBrown">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>
        <para>Gets an <see cref="T:System.Drawing.Icon" /> object that contains the system question icon (WIN32: IDI_QUESTION).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>
        <para>
       Legal paper (8.5 in.
       by 14
       in.).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.FloralWhite">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>
        <para>Gets the data type of the values stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Khaki">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>
        <para>Initializes this <see cref="T:System.Drawing.Region" /> object to an empty interior.</para>
      </summary>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.OliveDrab">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
        <para>Saves this <see cref="T:System.Drawing.Image" /> object to the specified file in the specified format.</para>
      </summary>
      <param name="filename">
        A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <param name="format">
        The <see cref="T:System.Drawing.Imaging.ImageFormat" /> object for this <see cref="T:System.Drawing.Image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.RectangleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an instance of this type given a set of property values for the object. This is useful for objects that are immutable but still want to provide changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from a call to the <see langword="GetProperties" /> method.
      </param>
      <returns>
        <para>The newly created object, or <see langword="null" /> if the object could not be created. The default implementation returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.LightCoral">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>
        <para>Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of <see langword="SmallCheckerBoard" />.</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\tools\x86\managed\urt\v1.0.3705\system.web.services.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Web.Services</name>
  </assembly>
  <members>
    <member name="M:System.Web.Services.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Web.Services.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Web.Services.WebMethodAttribute">
      <summary>
        <para> Adding this attribute to a method within an XML Web service created using ASP.NET makes the method callable from remote Web clients.
      This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" /> 
 class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" />
class.</para>
      </summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method.</param>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" />
class.</para>
      </summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method.</param>
      <param name=" transactionOption">Initializes the transaction support of an XML Web service method.</param>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" />
class.</para>
      </summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method.</param>
      <param name=" transactionOption">Initializes the transaction support of an XML Web service method.</param>
      <param name=" cacheDuration">Initializes the number of seconds the response is cached.</param>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" />
class.</para>
      </summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method.</param>
      <param name="transactionOption">Initializes the transaction support of an XML Web service method.</param>
      <param name=" cacheDuration">Initializes the number of seconds the response is cached.</param>
      <param name=" bufferResponse">Initializes whether the response for this request is buffered.</param>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.Description">
      <summary>
        <para> A descriptive message describing the XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.EnableSession">
      <summary>
        <para> Indicates whether session state is enabled for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.CacheDuration">
      <summary>
        <para> Gets or sets the number of seconds the response should be held in the cache.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.BufferResponse">
      <summary>
        <para> Gets or sets whether the response for this request is buffered.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.TransactionOption">
      <summary>
        <para> Indicates the transaction support of an XML Web service method. </para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.MessageName">
      <summary>
        <para> The name used for the XML Web service method in the data passed
      to and returned from an XML Web service method.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.WebService">
      <summary>
        <para> Defines the optional base class for XML Web
      services, which provides direct access to common ASP.NET objects, such as application and
      session
      state.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebService.Application">
      <summary>
        <para> Gets the application object for the current HTTP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebService.Context">
      <summary>
        <para>Gets the ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request,
   which encapsulates all HTTP-specific context
   used by the HTTP server to process Web requests.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebService.Session">
      <summary>
        <para> Gets the <see cref="T:System.Web.SessionState.HttpSessionState" />
instance for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebService.Server">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpServerUtility" />
for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebService.User">
      <summary>
        <para>Gets the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object. Can be used to authenticate whether a user is authorized to execute the request.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.WebServiceAttribute">
      <summary>
        <para> Used to add additional information to an XML Web service, such as a
      string describing its functionality.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.WebServiceAttribute.#ctor">
      <summary>
    Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceAttribute" /> class.
 </summary>
    </member>
    <member name="P:System.Web.Services.WebServiceAttribute.Description">
      <summary>
        <para> A descriptive message for the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebServiceAttribute.Namespace">
      <summary>
        <para>Gets or sets the default XML namespace to use for the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebServiceAttribute.Name">
      <summary>
        <para>Gets or sets the name of the XML Web service.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.WebServiceBindingAttribute">
      <summary>
        <para> Declares the binding one or more XML Web service
      methods implemented within the class implementing the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class setting
   the name of the binding the XML Web service method is implementing.</para>
      </summary>
      <param name="name">The name of the binding an XML Web service method is implementing an operation for. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Name" /> property.</param>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class.</para>
      </summary>
      <param name="name">The name of the binding an XML Web service method is implementing an operation for. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Name" /> property.</param>
      <param name=" ns">The namespace associated with the binding. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Namespace" /> property.</param>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class.</para>
      </summary>
      <param name="name">The name of the binding an XML Web service method is implementing an operation for. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Name" /> property.</param>
      <param name=" ns">The namespace associated with the binding. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Namespace" /> property.</param>
      <param name=" location">The location where the binding is defined.</param>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.Location">
      <summary>
        <para>Gets or sets the location where the binding is defined.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.Name">
      <summary>
        <para>Gets or sets the name of the binding.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.Namespace">
      <summary>
        <para>Gets or sets the namespace associated with the binding.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.WebServicesDescriptionAttribute.#ctor(System.String)">
      <summary>
    Constructs a new sys description.
 </summary>
      <param name="description">description text.</param>
    </member>
    <member name="P:System.Web.Services.WebServicesDescriptionAttribute.Description">
      <summary>
        <para>Retrieves the description text.</para>
      </summary>
      <returns>
        <para>description</para>
      </returns>
    </member>
    <member name="T:System.Web.Services.Protocols.WebClientProtocol">
      <summary>
        <para> Specifies the base class for all
      XML Web service client proxies created using ASP.NET.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.Abort">
      <summary>
        <para>Cancels a request to an XML Web service method.</para>
      </summary>
      <returns>
        <para>
          <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> cancels a 
   synchronous XML Web service request. Since a synchronous request will block the
   thread until the response has been processed you must call <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> from a separate thread.
   Calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> will cause a <see cref="T:System.Net.WebException" /> to be
   thrown from the XML Web service method call. The <see cref="P:System.Net.WebException.Status" qualify="true" /> property will have the value <see cref="F:System.Net.WebExceptionStatus.RequestCanceled" qualify="true" />. To abort an asynchronous call, you need to cast the
<see cref="T:System.IAsyncResult" /> 
returned from the <see langword="Begin" /> method to a <see cref="T:System.Web.Services.Protocols.WebClientAsyncResult" /> and call the <see cref="M:System.Web.Services.Protocols.WebClientAsyncResult.Abort" qualify="true" /> method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
      <summary>
        <para> Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified
<paramref name="url" />. This protected method is called by the XML 
   Web service client infrastructure to get a new <see cref="T:System.Net.WebRequest" /> transport object to transmit the
   XML Web service request.</para>
      </summary>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />. </param>
      <returns>
        <para> The <see cref="T:System.Net.WebRequest" /> instance.
   </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)">
      <summary>
        <para> Returns a response from a synchronous request to an XML Web service method.</para>
      </summary>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> to get the response from. </param>
      <returns>
        <para> A <see cref="T:System.Net.WebResponse" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>
        <para>Returns a response from an asynchronous request to a Web 
      Service method. This protected method is called by the XML Web service
      client infrastructure to get the response from an asynchronous XML Web
      service request.</para>
      </summary>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> to get the response from. </param>
      <param name="result">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />. when the response has completed. </param>
      <returns>
        <para> The <see cref="T:System.Net.WebResponse" /> instance.
   </para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
      <summary>
        <para> Gets or sets security credentials for Web
      Service client authentication.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
      <summary>
        <para> Gets or sets the name of the connection
      group for the request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
      <summary>
        <para> Gets or sets whether pre-authentication is enabled.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.Url">
      <summary>
        <para>Gets or sets the base URL of the XML Web service the client is requesting.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
      <summary>
        <para>The <see cref="T:System.Text.Encoding" /> used to make the client request to the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
      <summary>
        <para> Indicates the time an XML Web service client waits for a synchronous XML Web service request to complete (in milliseconds).</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.WebClientAsyncResult">
      <summary>
        <para> Provides an implementation of <see cref="T:System.IAsyncResult" />
for use by XML Web service proxies to implement the standard asynchronous method pattern.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientAsyncResult.Abort">
      <summary>
        <para>Cancels an asynchronous XML Web service request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncState">
      <summary>
        <para>Gets the object provided in the last parameter to the 
   <see langword="Begin" /> 
   method asynchronous call.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle">
      <summary>
        <para> Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an
   asynchronous operation to complete.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously">
      <summary>
        <para> Gets a value indicating
      whether the Begin call completed synchronously.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted">
      <summary>
        <para>Gets a value indicating whether the asynchronous XML Web service request has completed.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpWebClientProtocol">
      <summary>
        <para> The base class for all XML Web service client proxies that use the HTTP transport
      protocol.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)">
      <summary>
        <para>Creates a <see cref="T:System.Net.WebRequest" /> for the specified URI.</para>
      </summary>
      <param name="uri">The <see cref="T:System.Uri" /> for creating the <see cref="T:System.Net.WebRequest" />.</param>
      <returns>
        <para>The made <see cref="T:System.Net.WebRequest" /> . </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)">
      <summary>
        <para>Returns a response from a synchronous request to an XML Web service method.</para>
      </summary>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> from which to get the response.</param>
      <returns>
        <para>The <see cref="T:System.Net.WebResponse" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>
        <para>Returns a response from an asynchronous request to an XML Web service method.</para>
      </summary>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> from which to get the response.</param>
      <param name=" result">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />. when the response has completed.</param>
      <returns>
        <para>The <see cref="T:System.Net.WebResponse" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect">
      <summary>
        <para> Gets or sets whether the client automatically follows server redirects.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer">
      <summary>
        <para>Gets or sets the collection of cookies.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates">
      <summary>
        <para> Gets the collection of client certificates.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent">
      <summary>
        <para> Gets or sets the value for the user agent header that is
      sent with each request.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy">
      <summary>
        <para>Gets or sets proxy information for making an XML Web service request through a firewall.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
      <summary>
        <para> The base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
      <summary>
        <para>Invokes an XML Web service method using HTTP.</para>
      </summary>
      <param name="methodName">The name of the XML Web service method in the derived class that is invoking <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />.</param>
      <param name="requestUrl">The URL of the XML Web service method the client is requesting.</param>
      <param name="parameters">An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</param>
      <returns>
        <para>An array of objects containing the return value and any
      by-reference or out parameters of the derived class method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>
        <para> Starts an asynchronous invocation of a method of an XML Web service.</para>
      </summary>
      <param name="methodName">The name of the XML Web service method.</param>
      <param name="requestUrl">The url to use when creating the<see cref="T:System.Net.WebRequest" />.</param>
      <param name="parameters">An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</param>
      <param name="callback">The delegate to call when the asynchronous method call is complete. If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</param>
      <param name="asyncState">Additional information supplied by a client.</param>
      <returns>
        <para>An <see cref="T:System.IAsyncResult" /> which can be passed to <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> to obtain the return values from
   the XML Web service method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
      <summary>
        <para>Completes asynchronous invocation of an XML Web service method using HTTP.</para>
      </summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
      <returns>
        <para>An array of objects containing the return value and any by reference or
      out parameters for the XML Web service method.</para>
      </returns>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpGetClientProtocol">
      <summary>
        <para>The base class for XML Web service client
      proxies that use the HTTP-GET protocol.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)">
      <summary>
        <para>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</para>
      </summary>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the<see cref="T:System.Net.WebRequest" />.</param>
      <returns>
        <para>The<see cref="T:System.Net.WebRequest" /> instance.</para>
      </returns>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpMethodAttribute">
      <summary>
        <para> Applying this attribute to an XML Web service client using HTTP-GET or HTTP-POST, sets the
      types that serialize the parameters sent to an XML Web service method and read the response from the XML Web
      service method. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor">
      <summary>
    Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" /> class.
 </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />.</para>
      </summary>
      <param name="returnFormatter">Initializes the <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" /> property to a <see cref="T:System.Type" /> that deserializes the response from an XML Web service method.</param>
      <param name="parameterFormatter">Initializes the <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" /> property to a <see cref="T:System.Type" /> that serializes parameters sent from an XML Web service client to an XML Web service method.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter">
      <summary>
        <para>Gets or sets a <see cref="T:System.Type" /> that deserializes the response from
   an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter">
      <summary>
        <para>Gets or sets a <see cref="T:System.Type" /> that
   serializes parameters sent from an XML Web service client to the XML Web service method.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpPostClientProtocol">
      <summary>
        <para> The base class for XML Web service client
      proxies that use the HTTP-POST protocol.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)">
      <summary>
        <para>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</para>
      </summary>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</param>
      <returns>
        <para>The <see cref="T:System.Net.WebRequest" /> instance. </para>
      </returns>
    </member>
    <member name="T:System.Web.Services.Protocols.LogicalMethodTypes">
      <summary>
        <para>Specifies how the XML Web service method was invoked.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.LogicalMethodTypes.Sync">
      <summary>
        <para> The XML Web service method is invoked synchronously.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.LogicalMethodTypes.Async">
      <summary>
        <para> The XML Web service method is invoked asynchronously.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.LogicalMethodInfo">
      <summary>
        <para>Represents the attributes and metadata for an XML Web service method. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class with the <see cref="T:System.Reflection.MethodInfo" /> passed in.</para>
      </summary>
      <param name="methodInfo">A <see cref="T:System.Reflection.MethodInfo" /> to initialize the properties of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> common to the <see cref="T:System.Reflection.MethodInfo" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.ToString">
      <summary>
        <para>Returns a string that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.String" /> that
   represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])">
      <summary>
        <para>Invokes the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> .</para>
      </summary>
      <param name=" target">The instance of the <see cref="T:System.Object" /> to invoke the method.</param>
      <param name=" values">An argument list for the invoked method. This is an array of objects with the same number, order, and type as the parameters of the method. If the method does not require any parameters, the <paramref name="values" /> parameter should be <see langword="null" />.</param>
      <returns>
        <para>An array of type <see cref="T:System.Object" /> representing the return value and out
   parameters of the invoked method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)">
      <summary>
        <para>Begins an asynchronous invocation of the method
      represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> .</para>
      </summary>
      <param name=" target">The instance of the <see cref="T:System.Object" /> on which to invoke the method on.</param>
      <param name=" values">An argument list for the invoked method. This is an array of objects with the same number, order, and type as the parameters of the method. If the method does not require any parameters, <paramref name="values" /> should be <see langword="null" />.</param>
      <param name=" callback">The delegate to call when the asynchronous invoke is complete. If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</param>
      <param name=" asyncState">State information that is passed on to the delegate.</param>
      <returns>
        <para>An <see cref="T:System.IAsyncResult" /> which is passed to <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> to obtain the return values from
   the remote method call.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)">
      <summary>
        <para>Ends an asynchronous invocation of the method represented by the current
   <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> .</para>
      </summary>
      <param name=" target">The instance of the <see cref="T:System.Object" /> on which to invoke the method.</param>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />.</param>
      <returns>
        <para>An array of objects containing the return value and any by-reference or out
      parameters of the derived class method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)">
      <summary>
        <para>Returns the custom attributes applied to the specified type.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> to which the custom attributes are applied.</param>
      <returns>
        <para>An array of <see cref="T:System.Object" /> containing the custom attributes applied to
<paramref name="type" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)">
      <summary>
        <para> Returns the first custom attribute applied to the
      type, if any custom attributes are applied to the type.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> to which the custom attributes are applied.</param>
      <returns>
        <para> An <see cref="T:System.Object" /> containing the first custom attribute applied to the 
<paramref name="type" />parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)">
      <summary>
        <para>Returns a value indicating whether the method passed in 
      represents a <see langword="Begin" />
      method of an asynchronous invocation.</para>
      </summary>
      <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo" /> that might be a <see langword="Begin" /> method of an asynchronous invocation.</param>
      <returns>
        <para>
          <see langword="true" /> if 
   the <paramref name="methodInfo" /> parameter is a
<see langword="Begin" /> 
method of an asynchronous invocation; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)">
      <summary>
        <para>Returns a value indicating whether the method passed in
      represents an <see langword="End" />
      method of an asynchronous invocation.</para>
      </summary>
      <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo" /> that might be an <see langword="End" /> method of an asynchronous invocation.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the
<paramref name="methodInfo" /> parameter is an 
<see langword="End" /> 
method of an asynchronous invocation; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])">
      <summary>
        <para>Given an array of <see cref="T:System.Reflection.MethodInfo" /> that can contain information about both asynchronous and synchronous
   methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</para>
      </summary>
      <param name="methodInfos">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects. </param>
      <returns>
        <para>An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within
<paramref name="methodInfos" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)">
      <summary>
        <para>Given an array of <see cref="T:System.Reflection.MethodInfo" />, where the
   returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> can be restricted to only asynchronous or synchronous
   methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</para>
      </summary>
      <param name="methodInfos">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects. </param>
      <param name=" types">A bitwise combination of the <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> values. Determines whether just asynchronous or synchronous methods or both are included in the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</param>
      <returns>
        <para>An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, 
   representing the methods within <paramref name="methodInfos, " />filtered by the value of
<paramref name="types" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType">
      <summary>
        <para> Gets the class that declares the method represented
      by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.Name">
      <summary>
        <para>Gets the name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> .</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter">
      <summary>
        <para>Gets the return value of a <see langword="Begin" /> asynchronous method invocation.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter">
      <summary>
        <para>Gets the parameter information for the
      <paramref name="AsyncCallback" />
   parameter of a Begin method in an asynchronous invocation.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter">
      <summary>
        <para>Gets the parameter information for the
      <paramref name="AsyncState" /> parameter of a <see langword="Begin" />
   method in an asynchronous invocation.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnType">
      <summary>
        <para>Gets the return type of this method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.IsVoid">
      <summary>
        <para>Gets a value indicating whether the return type for the 
 method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is
 <see langword="void" />
 .</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync">
      <summary>
        <para>Gets a value indicating whether the method represented 
 by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is invoked asynchronously.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters">
      <summary>
        <para>Gets the parameters passed into the method represented
      by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters">
      <summary>
        <para>Gets the out parameters for the method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters">
      <summary>
        <para> Gets the parameters for the method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider">
      <summary>
        <para>Gets the custom attributes applied to the method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider">
      <summary>
        <para>Gets the custom attributes for the return type.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo">
      <summary>
        <para> Gets the attributes and metadata for a
      synchronous method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo">
      <summary>
        <para> Gets the attributes and metadata for a
   <see langword="Begin" /> method in an
      asynchronous invocation.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo">
      <summary>
        <para> Gets the attributes and metadata for an
   <see langword="End" /> method of an asynchronous invocation to
      a method.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.MatchAttribute">
      <summary>
        <para>Represents the attributes of a match made using text pattern matching. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MatchAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MatchAttribute" /> class with the specified pattern.</para>
      </summary>
      <param name="pattern">A string that represents the pattern to match.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.Pattern">
      <summary>
        <para>Gets or sets a regular expression that represents the pattern to match.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.Group">
      <summary>
        <para>Gets or sets a value that represents a grouping of related matches.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.Capture">
      <summary>
        <para>Gets or sets a value that represents the index of a match within a grouping.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.IgnoreCase">
      <summary>
        <para>Gets or sets a value that indicates whether the pattern to match is
      case insensitive. </para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.MaxRepeats">
      <summary>
        <para>Gets or sets the maximum number of values to return from the match.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapClientMessage">
      <summary>
        <para> Represents the data in a SOAP request sent or a SOAP
      response received by an XML Web service client at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapMessage">
      <summary>
        <para>Represents the data in a SOAP request or SOAP response at
      a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> .</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)">
      <summary>
        <para>Gets the parameter passed into the XML Web service method at
      the specified index.</para>
      </summary>
      <param name="index"> The zero-based index of the parameter in the array of parameters.</param>
      <returns>
        <para>An <see cref="T:System.Object" />
representing the parameter at the specified index.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)">
      <summary>
        <para>Gets the out parameter passed into the XML Web service
      method at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter in the array of parameters.</param>
      <returns>
        <para>An <see cref="T:System.Object" />
representing the parameter at the specified index.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue">
      <summary>
        <para>Gets the return value of an XML Web service method.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Object" />
representing the return value of the XML Web service method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage">
      <summary>
        <para>When overridden in a derived class, asserts that the
      current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> stage is a stage where out
      parameters are available.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage">
      <summary>
        <para>When overridden in a derived class, asserts that the
      current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where in
      parameters are available.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)">
      <summary>
        <para>Ensures that the <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the call to the Web
   Service method is the stage or stages passed in. If the current
   processing stage is not one of the stages passed in, an exception is thrown.</para>
      </summary>
      <param name="stage">The <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> asserted.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.OneWay">
      <summary>
        <para>Gets a value indicating the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" qualify="true" />
property of either the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> or
the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> attribute applied to the XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Exception">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Protocols.SoapException" /> from the call to
   the XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.MethodInfo">
      <summary>
        <para>When overridden in a derived class, gets a representation of the method
      prototype for the XML Web service method for which the SOAP request is intended.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Headers">
      <summary>
        <para>A collection of the SOAP headers applied to
      the current SOAP request or SOAP response.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Stream">
      <summary>
        <para>Gets the data representing the SOAP request or SOAP
      response in the form of a <see cref="T:System.IO.Stream" /> .</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.ContentType">
      <summary>
        <para>Gets or sets the HTTP Content-Type of the SOAP request or SOAP response.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Stage">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the <see cref="T:System.Web.Services.Protocols.SoapMessage" /> .</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Url">
      <summary>
        <para> When overridden in a derived class, gets the base URL of
      the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Action">
      <summary>
        <para>When overridden in a derived class, gets the
      SOAPAction HTTP request header field for the SOAP request or SOAP response.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapClientMessage.EnsureOutStage">
      <summary>
        <para> Asserts that the
      current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />
      is a stage where out parameters are available. If not, an
      exception is thrown.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapClientMessage.EnsureInStage">
      <summary>
        <para> Asserts that the
      current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where in
      parameters are available. If not, an
      exception is thrown.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.OneWay">
      <summary>
        <para>Gets a value indicating whether the client waits for
      the server to finish processing an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.Client">
      <summary>
        <para>Gets an instance of the client proxy class, which derives
      from <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> .</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.MethodInfo">
      <summary>
        <para>Gets a representation of the method prototype of
      the XML Web service method for which the SOAP request is intended.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.Url">
      <summary>
        <para> Gets the URL of the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.Action">
      <summary>
        <para>Gets the <see langword="SOAPAction" /> HTTP request header field for the
   SOAP request or SOAP response.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
      <summary>
        <para> Specifies the class client proxies derive from when using SOAP.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
      <summary>
        <para>Dynamically binds to an XML Web service described in the
      discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> .</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
      <summary>
        <para>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified
<paramref name="url" /> .</para>
      </summary>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</param>
      <returns>
        <para>The <see cref="T:System.Net.WebRequest" /> instance. </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
      <summary>
        <para>Invokes an XML Web service method synchronously using SOAP.</para>
      </summary>
      <param name="methodName">The name of the XML Web service method.</param>
      <param name=" parameters">An array of objects containing the parameters to pass to the XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</param>
      <returns>
        <para>An array of objects containing the return value and any by reference or out
      parameters of the derived class method.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>
        <para>Starts an asynchronous invocation of an XML Web service method using SOAP.</para>
      </summary>
      <param name="methodName">The name of the XML Web service method in the derived class that is invoking <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
      <param name=" parameters">An array of objects containing the parameters to pass to the XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</param>
      <param name=" callback">The delegate to call when the asynchronous invoke is complete. If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</param>
      <param name=" asyncState">Extra information supplied by the caller.</param>
      <returns>
        <para>An <see cref="T:System.IAsyncResult" /> which is passed to <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> to obtain the return values from
   the remote method call.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
      <summary>
        <para>Ends an asynchronous invocation of an XML Web service method using SOAP.</para>
      </summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />.</param>
      <returns>
        <para>An array of objects containing the return value and any by-reference or out
      parameters of the derived class method.</para>
      </returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute">
      <summary>
        <para> Applying the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> to a
   method specifies that SOAP messages to and from the method use
<see langword="Document" /> 
formatting.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> class, setting the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" />
property to the value of the <paramref name="action" /> parameter.</para>
      </summary>
      <param name="action">The <see langword="SOAPAction" /> HTTP header field of the SOAP request. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action">
      <summary>
        <para>Gets or sets the <see langword="SOAPAction" /> HTTP header field of the SOAP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay">
      <summary>
        <para>Gets or sets whether a XML Web service client waits for the
      Web server to finish processing an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace">
      <summary>
        <para>Gets or sets the namespace associated with the SOAP
      request for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace">
      <summary>
        <para>Gets or sets the XML namespace associated with the SOAP
      response for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName">
      <summary>
        <para>Gets or sets the XML element associated with the SOAP
      request for an XML Web service method, which is defined
      in a service description as an operation.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName">
      <summary>
        <para>Gets or sets the XML element associated with the SOAP
      response for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use">
      <summary>
        <para>Gets or sets the parameter formatting for an XML Web service
      method within the XML portion of a SOAP message.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle">
      <summary>
        <para>Gets or sets whether parameters are encapsulated within a single
      XML element beneath the <see langword="Body" /> element in the XML
      portion of a SOAP message.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding">
      <summary>
        <para>Gets or sets the binding an XML Web service method is
      implementing an operation for.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute">
      <summary>
        <para>Applying the optional <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> to an
   XML Web service sets the default format
   of SOAP requests and responses sent to and from XML
   Web service methods within the XML Web service.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> class 
   setting all properties to their default values.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> class setting the parameter
   formatting.</para>
      </summary>
      <param name="use">The parameter formatting of the XML Web service. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse,System.Web.Services.Protocols.SoapParameterStyle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> class
   that sets the parameter formatting and
   sets whether parameters are encapsulated within a single XML element, under the
<see langword="Body" /> element, in SOAP messages.</para>
      </summary>
      <param name="use">The parameter formatting style. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use" /> property.</param>
      <param name=" paramStyle">Sets whether parameters are encapsulated within a single XML element, under the <see langword="Body" /> element, in SOAP messages sent to and from XML Web service methods within the XML Web service. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use">
      <summary>
        <para>Gets or sets the default parameter formatting for an XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle">
      <summary>
        <para>Gets or sets the default setting that controls whether parameters are
      encapsulated within a single element following the <see langword="&lt;Body&gt;" />
      element in the XML portion of a SOAP message for XML Web service methods of the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle">
      <summary>
        <para>Gets or sets how SOAP messages are routed to the XML Web service.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapException">
      <summary>
        <para> The exception that is thrown when an
      XML Web service method is called over SOAP and an exception
      occurs.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.ServerFaultCode">
      <summary>
        <para>Specifies a SOAP fault code representing an error occurred during
      the processing of a client call on the server, where the problem was not due to the message contents.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.ClientFaultCode">
      <summary>
        <para>Specifies a SOAP fault code representing a client call was not formatted correctly or did
      not contain the appropriate information.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode">
      <summary>
        <para>A SOAP fault code representing an invalid namespace for a SOAP Envelope was found during the
      processing of the SOAP message.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode">
      <summary>
        <para>A SOAP Fault Code representing a SOAP 
      element marked with the MustUnderstand attribute was not processed.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.DetailElementName">
      <summary>
        <para>Gets an <see cref="T:System.Xml.XmlQualifiedName" /> representing the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> element of a SOAP Fault code.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class that sets the exception message,
   exception code and the piece of code that caused the exception.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class that sets the exception message,
   exception code, the piece of code that casued the exception and a reference to the root
   cause of the exception.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name="innerException">A reference to the root cause of an exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class that sets the exception message
   and exception code.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class that sets the exception message,
   exception code and a reference to the root cause of the exception.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" innerException">A reference to the root cause of the exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class
   that sets the exception message, exception code, piece of code that caused the
   exception and application specific exception information.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" detail">The application specific exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class
   that sets the exception message, exception code, piece of code that caused the
   exception, application specific exception information and a reference to the root cause of
   the exception.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" detail">The application specific exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property.</param>
      <param name=" innerException">A reference to the root cause of the exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode,System.Xml.XmlNode[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class that sets
   the exception message, exception code, piece of code that caused the exception,
   application specific exception information and optional exception
   information.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" detail">The application specific exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property.</param>
      <param name=" otherElements">Optional exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.OtherElements" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode,System.Xml.XmlNode[],System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class that sets the exception
   message, exception code, piece of code that caused the exception, application
   specific exception information, optional exception information, and
   a reference to the root cause of the exception.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" detail">The application specific exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property.</param>
      <param name=" otherElements">Optional exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.OtherElements" /> property.</param>
      <param name=" innerException">A reference to the root cause of the exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Actor">
      <summary>
        <para> Gets the piece of
      code that caused the exception.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Code">
      <summary>
        <para> Gets the type of SOAP fault code.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Detail">
      <summary>
        <para> Gets an <see cref="T:System.Xml.XmlNode" />
representing the application specific error information.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.OtherElements">
      <summary>
        <para>Gets an array of <see cref="T:System.Xml.XmlNode" /> with the optional error information.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapExtension">
      <summary>
        <para>The base class for SOAP extensions for XML Web services created using ASP.NET.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
      <summary>
        <para>When overridden in a derived class, allows a SOAP extension to initialize data specific to a XML Web service
      method using an attribute applied to the XML Web service method at a one time performance cost.</para>
      </summary>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the specific function prototype for the XML Web service method to which the SOAP extension is applied.</param>
      <param name=" attribute">The <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> applied to the XML Web service method. </param>
      <returns>
        <para>The <see cref="T:System.Object" />
that the SOAP extension initializes for caching.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
      <summary>
        <para> When overridden in a
      derived class, allows a SOAP extension to initialize data specific to a class implementing
      a XML Web service at a one time performance cost.</para>
      </summary>
      <param name="serviceType">The type of the class implementing the XML Web service to which the SOAP extension is applied.</param>
      <returns>
        <para>The <see cref="T:System.Object" />
that the SOAP extension initializes for caching.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
      <summary>
        <para>When overridden in a derived class, allows a SOAP
      extension to initialize itself using the data cached in the <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      method.</para>
      </summary>
      <param name="initializer">The <see cref="T:System.Object" /> returned from <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> cached by ASP.NET.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
      <summary>
        <para>When overridden in a derived class, allows a SOAP
      extension to receive a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process at each <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> .</para>
      </summary>
      <param name="message">The <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
      <summary>
        <para>When overridden in a derived class, allows a SOAP
      extension access to the memory buffer containing the SOAP request or response.</para>
      </summary>
      <param name="stream">A memory buffer containing the SOAP request or response. </param>
      <returns>
        <para>A <see cref="T:System.IO.Stream" /> representing a new memory buffer that this SOAP extension can
   modify.</para>
      </returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapExtensionAttribute">
      <summary>
        <para>When overridden in a derived class, specifies a SOAP
      extension should run with an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType">
      <summary>
        <para>When overridden in a derived class, gets the <see cref="T:System.Type" /> of the SOAP extension.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapExtensionAttribute.Priority">
      <summary>
        <para>When overridden in a derived class, gets or set the
      priority of the SOAP extension.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeader">
      <summary>
        <para> When overridden in a derived class, represents the content of a SOAP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand">
      <summary>
        <para>Gets or sets the value of the
   <see langword="mustUnderstand" /> XML attribute
      for the SOAP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Protocols.SoapHeader" />
must be understood.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.Actor">
      <summary>
        <para>Gets or sets the recipient of the SOAP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand">
      <summary>
        <para> Gets or sets a value indicating whether
      an XML Web service method properly processed a SOAP header.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderAttribute">
      <summary>
        <para> This attribute is applied to an XML Web service method or an XML Web service client to specify a SOAP header the
      Web service method or XML Web service client can process. This class
      cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" /> class,
   setting the member of the XML Web service class representing the SOAP header contents.</para>
      </summary>
      <param name="memberName">The member of the XML Web service class representing the SOAP header contents. The <see cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" /> property will be set to the value of this parameter.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName">
      <summary>
        <para>Gets or sets the member of the XML Web service
      class representing the SOAP header contents.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderAttribute.Direction">
      <summary>
        <para>Gets or sets whether the SOAP header is intended for the XML Web service or
      the XML Web service client or both.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderAttribute.Required">
      <summary>
        <para> Gets or sets a value indicating whether the SOAP
      header must be understood and processed by the recipient XML Web service or XML Web service client.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderDirection">
      <summary>
        <para>Specifies whether the recipient of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is the
   XML Web service, the XML Web service client, or both.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.In">
      <summary>
        <para>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to the XML Web service.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.Out">
      <summary>
        <para>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to the XML Web service client.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.InOut">
      <summary>
        <para>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to both the XML Web service
   and the XML Web service client.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderException">
      <summary>
        <para> The exception that is thrown when an XML Web service method is
      called over SOAP and an exception occurs during processing of the SOAP
      header.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</para>
      </summary>
      <param name=" message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" innerException">A reference to the root cause of an exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" innerException">A reference to the root cause of an exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" otherElements">Optional exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.OtherElements" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode[],System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</para>
      </summary>
      <param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name=" code">The type of error that occurred. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name=" actor">The piece of code that caused the exception. Typically, a URL to an XML Web service method. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name=" otherElements">Optional exception information. Sets the <see cref="P:System.Web.Services.Protocols.SoapException.OtherElements" /> property.</param>
      <param name=" innerException">A reference to the root cause of an exception. Sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderCollection">
      <summary>
        <para>Contains a collection of instances of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Add(System.Web.Services.Protocols.SoapHeader)">
      <summary>
        <para>Adds a <see cref="T:System.Web.Services.Protocols.SoapHeader" />to the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> .</para>
      </summary>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to add to the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> .</param>
      <returns>
        <para> The position at which the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> was inserted.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Insert(System.Int32,System.Web.Services.Protocols.SoapHeader)">
      <summary>
        <para>Inserts a <see cref="T:System.Web.Services.Protocols.SoapHeader" /> into the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />
at the specified index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> into the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> .</param>
      <param name=" header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to insert into the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> .</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.IndexOf(System.Web.Services.Protocols.SoapHeader)">
      <summary>
        <para>Determines the index of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> 
.</para>
      </summary>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" />to locate in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</param>
      <returns>
        <para>The index of the <paramref name="header" /> 
parameter, if found in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Contains(System.Web.Services.Protocols.SoapHeader)">
      <summary>
        <para>Determines whether the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> contains a specific <see cref="T:System.Web.Services.Protocols.SoapHeader" /> .</para>
      </summary>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to locate in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the value 
   of the <paramref name="header" /> parameter is found in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />; otherwise,
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Remove(System.Web.Services.Protocols.SoapHeader)">
      <summary>
        <para>Removes the first occurrence of a specific <see cref="T:System.Web.Services.Protocols.SoapHeader" /> from the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> . </para>
      </summary>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to remove from the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.CopyTo(System.Web.Services.Protocols.SoapHeader[],System.Int32)">
      <summary>
        <para>Copies the elements of the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> to an <see cref="T:System.Array" />, starting at a particular index of
   the <see cref="T:System.Array" /> .</para>
      </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. The array must have zero-based indexing.</param>
      <param name=" index">The zero-based index in the <paramref name="array" /> parameter at which copying begins. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> at the specified index of the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> .</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to get or set.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapMessageStage">
      <summary>
        <para>Specifies the processing stage of a SOAP message.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize">
      <summary>
        <para>The stage just prior to a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> being serialized.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />
stage occurs after a client
invokes an XML Web service method, but prior to the invocation being serialized.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />
stage
occurs after the invocation to the XML Web service method returns, but prior to the
return values being serialized and sent over the wire back to the client.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize">
      <summary>
        <para> The stage just after a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> is serialized, but before the
   SOAP message is sent over the wire.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />
stage occurs
after a client invokes an XML Web service method and the
parameters are serialized into XML, but prior to the SOAP message containing that XML is sent
over the network.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />
stage occurs
after an XML Web service method returns and any
return values are serialized into XML, but prior to the SOAP message containing that
XML is sent over the network.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize">
      <summary>
        <para>The stage just before a <see cref="T:System.Web.Services.Protocols.SoapMessage" />
is deserialized from the SOAP message sent across the network into an object.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize" /> stage occurs
after the network response from an XML Web service method invocation has been received, but just before the response containing the
SOAP message is deserialized into an object.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize" /> stage occurs
after a network request containing the SOAP message for an XML Web service
method invocation is received by the Web server, but prior to the SOAP message being deserialized
into an object.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize">
      <summary>
        <para>The stage just after a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> is deserialized from a SOAP
   message into an object.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stage occurs
after the SOAP message containing the
response from an XML Web service method invocation has been deserialized into an object,
but prior to the client receiving the deserialized results.</para>
        <para>During <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> processing, the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stage occurs
after a network request containing a SOAP message representing a Web
Service method
invocation is deserialized into an object, but prior to the method on that object
representing the XML Web service method is called.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapParameterStyle">
      <summary>
        <para> Specifies how parameters are formatted
      in a SOAP message.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapParameterStyle.Default">
      <summary>
        <para>Specifies using the default <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> for
   the XML Web service. The default for an
   XML Web service can be set by applying a <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" />
   to the class implementing the XML Web service. If
   a <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> is
   not applied to the class implementing
   the XML Web service, the default is <see cref="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped" />.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapParameterStyle.Bare">
      <summary>
        <para>Parameters sent to and from an XML Web service method are placed in XML elements
      directly following the <see langword="Body" /> element of
      a SOAP request or SOAP response.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped">
      <summary>
        <para> Parameters sent to and from an XML Web service method are encapsulated within
      a single XML element followig the <see langword="Body" /> element of
      the XML portion of a SOAP request or SOAP response.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapRpcMethodAttribute">
      <summary>
        <para>Applying the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> to a
   method specifies that SOAP messages sent to and from the method use
<see langword="RPC" /> 
formatting.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> class, 
   setting
   all properties to their default values.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> class,
   setting the <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> property
   to the value of the
<paramref name="action" /> parameter.</para>
      </summary>
      <param name="action">The intent of the SOAP request. Sets the <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action">
      <summary>
        <para>Gets or sets the <see langword="SOAPAction" /> HTTP header field of the SOAP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay">
      <summary>
        <para>Gets or sets whether an XML Web service client waits for the Web server to
      finish processing an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace">
      <summary>
        <para>Gets or sets the XML namespace associated with the SOAP
      request for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace">
      <summary>
        <para>Gets or sets the XML namespace associated with the
      SOAP response for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName">
      <summary>
        <para>Gets or sets the XML element associated with the SOAP request for an XML Web
      service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName">
      <summary>
        <para>Gets or sets the XML element associated with the SOAP
      response for an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding">
      <summary>
        <para>Gets or sets the binding an XML Web service method is
      implementing an operation for.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapRpcServiceAttribute">
      <summary>
        <para>Applying the optional <see cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" /> to an XML Web service sets the default
   format of SOAP requests and responses sent to and from XML Web service methods
   within the XML Web service.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapRpcServiceAttribute.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" /> class.
</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcServiceAttribute.RoutingStyle">
      <summary>
        <para>Gets or sets how SOAP messages are routed to the XML Web service.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServerMessage">
      <summary>
        <para>Represents the data in a SOAP request received or a
      SOAP response sent by an XML Web service method at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />. This class cannot be
      inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage">
      <summary>
        <para>Asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where out
   parameters are available. If not, an exception is thrown.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerMessage.EnsureInStage">
      <summary>
        <para>Asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where in
   parameters are available. If not, an exception is thrown.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.OneWay">
      <summary>
        <para>Gets a value indicating whether the client waits for the server to finish
      processing an XML Web service method.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.Url">
      <summary>
        <para>Gets the base URL of the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.Action">
      <summary>
        <para>Gets the SOAPAction HTTP request header field for the SOAP request or SOAP
      response.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.Server">
      <summary>
        <para>Gets the instance of the class handling the
      method invocation on the Web server.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.MethodInfo">
      <summary>
        <para>Gets a representation of the method prototype for the XML Web service method for
      which the SOAP request is intended.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServiceRoutingStyle">
      <summary>
        <para> Specifies how a SOAP message is routed to the Web server hosting the
      XML Web service.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapServiceRoutingStyle.SoapAction">
      <summary>
        <para>The SOAP message is routed based on the
   <see langword="SOAPAction" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapServiceRoutingStyle.RequestElement">
      <summary>
        <para>The SOAP Message is routed based on the first child element
      following the <see langword="&lt;Body&gt;" /> XML element of the SOAP message.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapUnknownHeader">
      <summary>
        <para> Represents the data received from a SOAP header
      that was not understood by the recipient XML Web service or XML Web service client. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapUnknownHeader.Element">
      <summary>
        <para>Gets or sets the XML Header element for a SOAP request or response.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.NopHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
      IHttpHandler.ProcessRequest.
 </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.NopHandler.IsReusable">
      <summary>
      IHttpHandler.IsReusable.
 </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.ContractReference">
      <summary>
        <para>Represents a reference in a discovery document to a
      service description.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryReference">
      <summary>
        <para> The base class for discoverable references using XML Web
      services discovery.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>
        <para>When overridden in a derived class, writes the document
      to a <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="document">The document to write into a <see cref="T:System.IO.Stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> into which the <paramref name="document" /> is written.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.ReadDocument(System.IO.Stream)">
      <summary>
        <para>Reads the passed <see cref="T:System.IO.Stream" /> and returns an instance of the
 class representing the type of referenced document.</para>
      </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />containing the reference document.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> with an underlying type matching the type of referenced
 document.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl(System.String)">
      <summary>
        <para> Returns a file name based on the passed URL.</para>
      </summary>
      <param name="url">The URL on which the name of the file is based. </param>
      <returns>
        <para>Name of the file based on the passed URL.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.Resolve">
      <summary>
        <para>Downloads the referenced document at <see cref="P:System.Web.Services.Discovery.DiscoveryReference.Url" /> to
   resolve whether the referenced document is valid.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.Resolve(System.String,System.IO.Stream)">
      <summary>
        <para> Resolves whether the referenced document is valid.</para>
      </summary>
      <param name="contentType">The MIME type of <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> containing the referenced document.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol">
      <summary>
        <para>Gets or sets the instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReference.DefaultFilename">
      <summary>
        <para> Gets the name of the
 default file to use when saving the referenced discovery document, XSD schema, or Service Description.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReference.Url">
      <summary>
        <para>Gets or sets the URL of the referenced document.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Discovery.ContractReference.Namespace">
      <summary>
        <para>XML namespace for service description references in
      discovery documents.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractReference" /> class using default values.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractReference" /> class
 using the supplied
 reference to a Service
 Description.</para>
      </summary>
      <param name="href">The URL for a Sevice Descritpion. Initializes the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property value.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractReference" /> class
   using the supplied references to a service description and
   a
   XML Web service implementing the service description.</para>
      </summary>
      <param name="href">The URL for a service description. Initializes the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property value.</param>
      <param name=" docRef">The URL for a XML Web service implementing the service description at <paramref name="href" />. Initializes the <see cref="P:System.Web.Services.Discovery.ContractReference.DocRef" /> property value.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>
        <para> Writes the passed-in service description into
      the passed-in <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="document">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to write into <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> into which the serialized <see cref="T:System.Web.Services.Description.ServiceDescription" /> is written.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.ReadDocument(System.IO.Stream)">
      <summary>
        <para>Reads the service description from the passed <see cref="T:System.IO.Stream" /> and returns the service description.</para>
      </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the service description.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.ServiceDescription" /> containing the
   contents of the referenced service description.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.Resolve(System.String,System.IO.Stream)">
      <summary>
        <para> Resolves whether the the referenced document is valid.</para>
      </summary>
      <param name="contentType">The MIME content type of <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> containing the referenced document.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.Ref">
      <summary>
        <para> Gets or sets the URL to the referenced service description.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.DocRef">
      <summary>
        <para> Gets and sets the URL for a XML Web service implementing the
      service description referenced in the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.Url">
      <summary>
        <para>Gets or sets the URL for the referenced Service
      Description.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.Contract">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.ServiceDescription" qualify="true" />
object representing
the service description.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.DefaultFilename">
      <summary>
        <para>Gets the name of the file to use by default when saving the
      referenced service description.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoverySearchPattern.GetDiscoveryReference(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoverySearchPattern.Pattern">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection">
      <summary>
        <para>Represents a collection of documents discovered during XML Web services discovery that have been downloaded to the client. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Add(System.String,System.Object)">
      <summary>
        <para> Adds an object with the specified URL to the
   <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> .</para>
      </summary>
      <param name="url">The URL for the document to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> .</param>
      <param name=" value">A discovered document to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> .</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Contains(System.String)">
      <summary>
        <para>Determines if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> contains an object with the specified URL.</para>
      </summary>
      <param name="url">The URL for the document to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> .</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> contains an object with
   the specified URL; otherwise, <see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Remove(System.String)">
      <summary>
        <para>Removes an object with the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</para>
      </summary>
      <param name="url">The URL for the discovered document to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Item(System.String)">
      <summary>
        <para>Gets or sets a client discovery document object from the
   <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />
   with the specified URL.</para>
      </summary>
      <param name="url">The URL of the discovery document to get or set from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Keys">
      <summary>
        <para>Gets an <see cref="T:System.Collections.ICollection" qualify="true" /> object with all the keys in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Values">
      <summary>
        <para>Gets an <see cref="T:System.Collections.ICollection" qualify="true" /> object with all the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientProtocol">
      <summary>
        <para> Provides support for programmatically
      invoking XML Web services discovery.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)">
      <summary>
        <para>Discovers the supplied URL to determine if it is a discovery document.</para>
      </summary>
      <param name="url">The URL where XML Web services discovery begins.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the results of XML Web services discovery at the supplied URL.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)">
      <summary>
        <para>Discovers the supplied URL to determine if it is a discovery document, service description
      or an XML Schema Definition (XSD) schema.</para>
      </summary>
      <param name="url">The URL where XML Web services discovery begins.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />
containing the results of XML Web services discovery at the supplied URL. If the
<paramref name="url" />
parameter refers to a service description or an XSD Schema, a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />
is created in memory for it.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@)">
      <summary>
        <para>Downloads the discovery document at the supplied URL into a <see cref="T:System.IO.Stream" /> object.</para>
      </summary>
      <param name="url">The URL of the discovery document to download.</param>
      <returns>
        <para>A <see cref="T:System.IO.Stream" />
containing the document at the supplied URL.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@,System.String@)">
      <summary>
        <para>Downloads the discovery document at the supplied URL
 into a <see cref="T:System.IO.Stream" /> object, setting the <paramref name="contentType" /> parameter to
 the MIME encoding of the discovery document.</para>
      </summary>
      <param name="url">The URL of the discovery document to download.</param>
      <param name=" contentType">The MIME encoding of the downloaded discovery document.</param>
      <returns>
        <para>A <see cref="T:System.IO.Stream" /> containing the document at the supplied URL.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)">
      <summary>
        <para>Reads in a file containing a map of saved discovery
      documents populating the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> and <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" />
      properties, with discovery documents, XML Schema Definition (XSD) schemas,
      and service descriptions referenced in the file.</para>
      </summary>
      <param name="topLevelFilename">Name of file to read in, containing the map of saved discovery documents. </param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />
containing the results found in the file with the map of saved discovery
documents. The file format is a <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile" /> class serialized into XML; however, one would typically create
the file using only the <see cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)" />
method or Disco.exe. </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll">
      <summary>
        <para>Resolves all references to discovery documents, XML Schema Definition (XSD)
      schemas, and service descriptions in the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" />
      property, as well as references found in referenced
      discovery documents.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel">
      <summary>
        <para>Resolves all references to discovery documents, XML Schema Definition (XSD)
      schemas and service descriptions in <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" />, as well as references found in those
      discovery documents.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)">
      <summary>
        <para>Writes all discovery documents, XML Schema Definition (XSD) schemas, and Service
      Descriptions in the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> property
      to the supplied directory and creates a
      file in that directory.</para>
      </summary>
      <param name="directory">The directory in which to save all documents currently in the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> property.</param>
      <param name=" topLevelFilename">The name of the file to create or overwrite containing a map of all documents saved.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> containing the results of all
   files saved.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation">
      <summary>
        <para>Gets information in addition to references found in the discovery document.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents">
      <summary>
        <para>Gets a collection of discovery documents.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors">
      <summary>
        <para> Gets a collection of exceptions that occurred
 during invocation of method from this class.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References">
      <summary>
        <para> A collection of references founds in resolved
      discovery documents.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile.Results">
      <summary>
        <para>Gets a collection of <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> objects.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientResultCollection">
      <summary>
        <para>Contains a collection of <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> 
objects. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.Add(System.Web.Services.Discovery.DiscoveryClientResult)">
      <summary>
        <para>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />.</param>
      <returns>
        <para>The position into which the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> was 
   inserted.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.Contains(System.Web.Services.Discovery.DiscoveryClientResult)">
      <summary>
        <para>Determines whether the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> contains a specific <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to locate in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> is found in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />; otherwise,
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.Remove(System.Web.Services.Discovery.DiscoveryClientResult)">
      <summary>
        <para>Removes the first occurrence of a specific <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResultCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> at position <paramref name="i" /> of the
<see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> .</para>
      </summary>
      <param name="i">The zero-based index of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to get or set.</param>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientResult">
      <summary>
        <para> Represents the details of a discovery reference without the contents
      of the referenced document. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResult.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResult.#ctor(System.Type,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> class
   and sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.ReferenceTypeName" /> property to
<paramref name="referenceType" />, the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Url" /> property to 
<paramref name="url" /> and the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Filename" /> property to 
<paramref name="filename" />.</para>
      </summary>
      <param name="referenceType">Name of the class representing the type of reference in the discovery document. Sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.ReferenceTypeName" /> property.</param>
      <param name=" url">URL for the reference. Sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Url" /> property.</param>
      <param name=" filename">Name of the file in which the reference was saved. Sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Filename" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResult.ReferenceTypeName">
      <summary>
        <para>Name of the class representing the type of reference in the discovery document.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResult.Url">
      <summary>
        <para>Gets or sets the URL for the reference.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResult.Filename">
      <summary>
        <para>Gets or sets the name of the file in which the reference is saved.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection">
      <summary>
        <para>Represents a collection of <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> objects. This
 class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Add(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>
        <para>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Add(System.String,System.Web.Services.Discovery.DiscoveryReference)">
      <summary>
        <para>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL
   and value to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</para>
      </summary>
      <param name="url">The URL for the reference to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</param>
      <param name=" value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Contains(System.String)">
      <summary>
        <para>Determines if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> contains a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL.</para>
      </summary>
      <param name="url">The URL for the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />
contains a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the
specified URL; otherwise,<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Remove(System.String)">
      <summary>
        <para>Removes a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL from the
<see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</para>
      </summary>
      <param name="url">A string that represents the URL for the object to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Item(System.String)">
      <summary>
        <para>Gets or sets a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> object from the
<see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> with the specified URL.</para>
      </summary>
      <param name="url">The URL for the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to get or set from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Keys">
      <summary>
        <para>Gets an <see cref="T:System.Collections.ICollection" qualify="true" /> object with all the keys
   in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Values">
      <summary>
        <para>Gets an <see cref="T:System.Collections.ICollection" qualify="true" /> object with all the
   values in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> .</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryDocument">
      <summary>
        <para>Represents a discovery document. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Discovery.DiscoveryDocument.Namespace">
      <summary>
        <para>Namespace of the discovery XML element of a discovery document.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.Stream)">
      <summary>
        <para>Reads and returns a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> from the passed <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> .</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing
   the contents of a discovery document from the passed <see cref="T:System.IO.Stream" /> .</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.TextReader)">
      <summary>
        <para>Reads and returns a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> from the passed <see cref="T:System.IO.TextReader" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> .</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the contents of
   a discovery document from the passed <see cref="T:System.IO.TextReader" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Read(System.Xml.XmlReader)">
      <summary>
        <para>Reads and returns a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> from the passed <see cref="T:System.Xml.XmlReader" />.</para>
      </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> from which to read the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> .</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the contents of
   a discovery document from the passed <see cref="T:System.Xml.XmlReader" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.CanRead(System.Xml.XmlReader)">
      <summary>
        <para> Returns a value indicating whether the passed <see cref="T:System.Xml.XmlReader" /> can be
   deserialized into a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />.</para>
      </summary>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> that is tested whether it can be deserialized into a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />.</param>
      <returns>
        <para>
          <see langword="true" /> if <see cref="T:System.Xml.XmlReader" /> can be deserialized into a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />; otherwise,
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.TextWriter)">
      <summary>
        <para>Writes this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the
   passed <see cref="T:System.IO.TextWriter" />.</para>
      </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> into which this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is written.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.Stream)">
      <summary>
        <para>Writes this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the
   passed <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> into which this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is written.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Write(System.Xml.XmlWriter)">
      <summary>
        <para>Writes this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the
   passed <see cref="T:System.Xml.XmlWriter" />.</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> into which this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is written.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocument.References">
      <summary>
        <para>A list of references contained within the discovery document.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern.GetDiscoveryReference(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern.Pattern">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryDocumentReference">
      <summary>
        <para> Represents a reference to a discovery document. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> class, setting the <see cref="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Ref" /> 
property to the value of <paramref name="href" />.</para>
      </summary>
      <param name="href">Reference to a discovery document. The <see cref="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Ref" /> property is set to the value of <paramref name="href" />.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>
        <para> Writes the passed <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the
 passed <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="document">The <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> to write into <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> into which the serialized discovery document is written.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.ReadDocument(System.IO.Stream)">
      <summary>
        <para>Reads and returns the discovery document from the passed <see cref="T:System.IO.Stream" /> 
.</para>
      </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the discovery document.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the
 contents of the referenced discovery document.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.Resolve(System.String,System.IO.Stream)">
      <summary>
        <para> Resolves whether the referenced
      document is valid.</para>
      </summary>
      <param name="contentType">The MIME type of <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> containing the referenced document.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.ResolveAll">
      <summary>
        <para>Verifies that all referenced documents within the discovery document are valid.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Ref">
      <summary>
        <para>Gets or sets the reference to a discovery document.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.DefaultFilename">
      <summary>
        <para> Gets the name of the default file to use when saving the referenced
 discovery document.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Document">
      <summary>
        <para>Gets the contents of the referenced discovery document
 as a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Url">
      <summary>
        <para>Gets or sets the URL of the referenced discovery document.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern.GetDiscoveryReference(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern.Pattern">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary">
      <summary>
        <para> Collects exceptions that occurred during XML Web services discovery. This class cannot
      be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Add(System.String,System.Exception)">
      <summary>
        <para>Adds an <see cref="T:System.Exception" /> with a key of <paramref name="url" /> to the
<see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</para>
      </summary>
      <param name="url">The URL that caused an exception during XML Web services discovery.</param>
      <param name=" value">The <see cref="T:System.Exception" /> that occurred during XML Web services discovery.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Contains(System.String)">
      <summary>
        <para>Determines whether the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />
contains an <see cref="T:System.Exception" /> with the specified URL.</para>
      </summary>
      <param name="url">The URL of the <see cref="T:System.Exception" /> to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />
contains an <see cref="T:System.Exception" /> with
the specified URL; otherwise, <see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Remove(System.String)">
      <summary>
        <para>Removes an <see cref="T:System.Exception" /> with the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</para>
      </summary>
      <param name="url">The URL of the <see cref="T:System.Exception" /> to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Item(System.String)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Exception" /> that occurred while discovering the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</para>
      </summary>
      <param name="url">The URL of the discovery document that caused an exception to be thrown during XML Web services discovery.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Keys">
      <summary>
        <para>Gets a <see cref="T:System.Collections.ICollection" qualify="true" /> object with all the keys in the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Values">
      <summary>
        <para>Gets a <see cref="T:System.Collections.ICollection" qualify="true" /> object containing all the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryReferenceCollection">
      <summary>
        <para>A collection of discovery references. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.Add(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>
        <para>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />. </param>
      <returns>
        <para> The position where the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> was inserted in
   the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />. </para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.Contains(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>
        <para>Determines whether the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" /> contains a specific <see cref="T:System.Web.Services.Discovery.DiscoveryReference" />.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" /> contains the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.Remove(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>
        <para>Removes a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> from the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReferenceCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> 
at the specified index.</para>
      </summary>
      <param name="i">The zero-based index of the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to get or set.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoSearcher.Search(System.String)">
      <summary>
 Main function. Searches dir recursively for primary (.vsdisco) and seconary (.asmx) files.
 </summary>
    </member>
    <member name="F:System.Web.Services.Discovery.DynamicDiscoveryDocument.Namespace">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoveryDocument.#ctor">
      <summary>
     Default constructor.
 </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoveryDocument.Write(System.IO.Stream)">
      <summary>
    Write this instance to a stream.
 </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoveryDocument.Load(System.IO.Stream)">
      <summary>
    Read an instance of WebMethodsFile from a stream.
 </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DynamicDiscoveryDocument.ExcludePaths">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicVirtualDiscoSearcher.Search(System.String)">
      <summary>
 Main function. Searches dir recursively for primary (.vsdisco) and seconary (.asmx) files.
 </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ExcludePathInfo.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ExcludePathInfo.#ctor(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.ExcludePathInfo.Path">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.SchemaReference">
      <summary>
        <para>Represents a reference in a discovery document to an XML Schema Definition (XSD) language schema. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Discovery.SchemaReference.Namespace">
      <summary>
        <para> XML namespace for XSD schema references in discovery documents.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.SchemaReference" /> class using default values.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.SchemaReference" /> 
class using the supplied URL as the XSD schema reference.</para>
      </summary>
      <param name="url">The URL for the XSD schema. Initializes the <see cref="P:System.Web.Services.Discovery.SchemaReference.Ref" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>
        <para> Writes the passed XSD schema into
 the passed <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="document">The <see cref="T:System.Xml.Schema.XmlSchema" /> to write into <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> into which the serialized XSD schema is written.</param>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.ReadDocument(System.IO.Stream)">
      <summary>
        <para> Reads and returns the XSD schema from the passed <see cref="T:System.IO.Stream" /> .</para>
      </summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the XSD schema.</param>
      <returns>
        <para>An <see cref="T:System.Xml.Schema.XmlSchema" /> containing the
 contents of the referenced XSD schema.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.Resolve(System.String,System.IO.Stream)">
      <summary>
        <para> Resolves whether the referenced document is valid.</para>
      </summary>
      <param name="contentType">The MIME content type of <paramref name="stream" />.</param>
      <param name=" stream">The <see cref="T:System.IO.Stream" /> containing the referenced document.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.Ref">
      <summary>
        <para> Gets or sets the URL to the referenced XSD schema.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.TargetNamespace">
      <summary>
        <para>Gets or sets the <see langword="targetNamespace" /> XML attribute of the XSD schema.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.Url">
      <summary>
        <para>Gets or sets the URL for the schema reference.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.DefaultFilename">
      <summary>
        <para> Gets the name of the default file to use when saving the referenced XSD
 schema.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.Schema">
      <summary>
        <para>Gets an <see cref="T:System.Xml.Schema.XmlSchema" /> object representing the XSD schema.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Discovery.SoapBinding">
      <summary>
        <para>Represents a SOAP binding in a discovery
      document. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Discovery.SoapBinding.Namespace">
      <summary>
        <para>The XML namespace of the element that specifies
      a SOAP binding within a discovery document.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SoapBinding.Address">
      <summary>
        <para>Gets or sets the URL of the XML Web service implementing
      the SOAP binding.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SoapBinding.Binding">
      <summary>
        <para>Gets or sets the XML qualified name of the SOAP binding
      implemented by the XML Web service.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.HttpAddressBinding">
      <summary>
        <para>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.Port" /> within an XML Web
   service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionFormatExtension">
      <summary>
        <para> Represents an extensibility element added to an XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtension.Parent">
      <summary>
        <para> Gets the parent of the
      <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtension.Required">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> 
is necessary for the action
to which it refers.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtension.Handled">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is 
   used by the import process when the
   extensibility element is imported.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.HttpAddressBinding.Location">
      <summary>
        <para> Gets or sets a value representing
      the URL of the XML Web service.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.HttpBinding">
      <summary>
        <para>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.Binding" />
within an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.HttpBinding.Namespace">
      <summary>
        <para> Specifies the URI for the XML namespace representing the
      HTTP transport for use with SOAP. This field is
      constant.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.HttpBinding.Verb">
      <summary>
        <para>Gets or sets a value indicating whether the HTTP
      request will be made using the "GET" or "POST" method.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.HttpOperationBinding">
      <summary>
        <para> Represents an extensibility
      element added to an
   <see cref="T:System.Web.Services.Description.OperationBinding" /> 
   within an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.HttpOperationBinding.Location">
      <summary>
        <para>Gets or sets the URL relative to the location specified by the 
<see cref="T:System.Web.Services.Description.HttpAddressBinding" />, within the Web Services Description Language (WSDL) document, of the operation supported by the 
<see cref="T:System.Web.Services.Description.HttpOperationBinding" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.HttpUrlEncodedBinding">
      <summary>
        <para>Represents an extensibility element added to an
   <see cref="T:System.Web.Services.Description.InputBinding" /> 
   within an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.HttpUrlReplacementBinding">
      <summary>
        <para>Represents an extensibility element added to an
   <see cref="T:System.Web.Services.Description.InputBinding" /> 
   within an XML Web service. It specifies the format for data transmission through HTTP. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimeContentBinding">
      <summary>
        <para>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or
   an <see cref="T:System.Web.Services.Description.OutputBinding" />
   within a Web Service, specifying the MIME format for
   the body of the HTTP transmission. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.MimeContentBinding.Namespace">
      <summary>
        <para>Specifies the URI for the XML namespace of the <see cref="T:System.Web.Services.Description.MimeContentBinding" /> class. This field is constant.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeContentBinding.Part">
      <summary>
        <para>Gets or sets the name of the
   <see cref="T:System.Web.Services.Description.MessagePart" /> to which the <see cref="T:System.Web.Services.Description.MimeContentBinding" /> applies.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeContentBinding.Type">
      <summary>
        <para>Gets or sets a value indicating the format of the body of the HTTP transmission. </para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimePart">
      <summary>
        <para> Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" />, specifying the concrete MIME
   type for the <see cref="T:System.Web.Services.Description.MessagePart" /> to which the
<see langword="MimePart" /> applies. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimePart.Extensions">
      <summary>
        <para>Gets the collection of MIME extensibility elements for the part of the <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" /> of
   which the <see cref="T:System.Web.Services.Description.MimePart" /> is a member.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimeMultipartRelatedBinding">
      <summary>
        <para>Represents an extensibility element added to an 
   <see cref="T:System.Web.Services.Description.InputBinding" /> or an 
   <see cref="T:System.Web.Services.Description.OutputBinding" />,
      specifying the individual MIME formats for the parts
      of the HTTP transmission. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeMultipartRelatedBinding.Parts">
      <summary>
        <para> Gets the collection of extensibility elements added to
      the <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" /> to specify the MIME format for
      the parts of the MIME
      message.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimeXmlBinding">
      <summary>
        <para>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.MimePart" />, an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" />. It
   specifies the schema for XML messages that are not SOAP
   compliant. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeXmlBinding.Part">
      <summary>
        <para>Gets or sets the name of the 
   <see cref="T:System.Web.Services.Description.MessagePart" /> to which the 
   <see cref="T:System.Web.Services.Description.MimeXmlBinding" /> applies.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimePartCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.MimePart" /> class.
      This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Add(System.Web.Services.Description.MimePart)">
      <summary>
        <para>Adds the specified
      <see cref="T:System.Web.Services.Description.MimePart" /> to the end of the <see cref="T:System.Web.Services.Description.MimePartCollection" />.</para>
      </summary>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="mimePart" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Insert(System.Int32,System.Web.Services.Description.MimePart)">
      <summary>
        <para>Adds the specified
      <see cref="T:System.Web.Services.Description.MimePart" /> to the
      <see cref="T:System.Web.Services.Description.MimePartCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="mimePart" /> parameter.</param>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.IndexOf(System.Web.Services.Description.MimePart)">
      <summary>
        <para>Searches for the specified
   <see cref="T:System.Web.Services.Description.MimePart" /> and
      returns the zero-based index of the first occurrence within the collection.</para>
      </summary>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> for which to search the <see cref="T:System.Web.Services.Description.MimePartCollection" />.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Contains(System.Web.Services.Description.MimePart)">
      <summary>
        <para>Returns a value indicating whether the specified
   <see cref="T:System.Web.Services.Description.MimePart" /> is
      a member of the <see cref="T:System.Web.Services.Description.MimePartCollection" />.</para>
      </summary>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to check for collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the <paramref name="mimePart" /> parameter
   is a member of the <see langword="MimePartCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Remove(System.Web.Services.Description.MimePart)">
      <summary>
        <para>Removes the first occurrence of the specified
   <see cref="T:System.Web.Services.Description.MimePart" /> from the
   <see cref="T:System.Web.Services.Description.MimePartCollection" />.</para>
      </summary>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.CopyTo(System.Web.Services.Description.MimePart[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.MimePartCollection" /> to a compatible
   one-dimensional array of type
<see cref="T:System.Web.Services.Description.MimePart" />,
   starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.MimePart" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="P:System.Web.Services.Description.MimePartCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a
      <see cref="T:System.Web.Services.Description.MimePart" />
   at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.MimePart" /> whose value is modified or returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.MimeTextBinding">
      <summary>
        <para>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" />, an <see cref="T:System.Web.Services.Description.OutputBinding" />, or a <see cref="T:System.Web.Services.Description.MimePart" />,
   specifying the text patterns for which to search the HTTP transmission.
   This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.MimeTextBinding.Namespace">
      <summary>
        <para>Specifies the URI for the XML namespace of the <see cref="T:System.Web.Services.Description.MimeTextBinding" /> class. This field is constant.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextBinding.Matches">
      <summary>
        <para>Gets the collection of MIME text patterns for which the
      HTTP transmission is searched.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimeTextMatch">
      <summary>
        <para>Represents a text pattern for which the HTTP transmission
      is searched. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.MimeTextMatch" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Type">
      <summary>
        <para>Gets or sets a value indicating the MIME format of the
      text to be searched.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Group">
      <summary>
        <para>Gets or sets a value indicating the number of groups
      in which to place the results of the text search.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Capture">
      <summary>
        <para>Gets or sets a value indicating the zero-based index of a <see cref="T:System.Web.Services.Description.MimeTextMatch" /> within a group.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Repeats">
      <summary>
        <para>Gets or sets a value indicating the number of times the
      search is to be performed.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.RepeatsString">
      <summary>
        <para>Gets or sets a value indicating the number of times the
      search is to be performed.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Pattern">
      <summary>
        <para>Gets or sets the text pattern for the search.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.IgnoreCase">
      <summary>
        <para>Gets or sets a value indicating whether the search 
 should disregard the case of the text to be searched.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Matches">
      <summary>
        <para>Gets the collection of text pattern matches that have 
      been found by the search.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MimeTextMatchCollection">
      <summary>
        <para>Provides a collection of instances of the <see cref="T:System.Web.Services.Description.MimeTextMatch" /> class. This class cannot be
   inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Add(System.Web.Services.Description.MimeTextMatch)">
      <summary>
        <para>Adds the specified
   <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to the end of the 
   <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" />.</para>
      </summary>
      <param name="match">The
<see cref="T:System.Web.Services.Description.MimeTextMatch" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the
   <paramref name="match" /> parameter has been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Insert(System.Int32,System.Web.Services.Description.MimeTextMatch)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="match" /> parameter.</param>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.IndexOf(System.Web.Services.Description.MimeTextMatch)">
      <summary>
        <para>Searches for the specified
      <see cref="T:System.Web.Services.Description.MimeTextMatch" /> and returns the zero-based
      index of the first occurrence within the collection.</para>
      </summary>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Contains(System.Web.Services.Description.MimeTextMatch)">
      <summary>
        <para>Returns a value indicating whether the specified
   <see cref="T:System.Web.Services.Description.MimeTextMatch" /> is a member of the 
   <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" />.</para>
      </summary>
      <param name="match">The<see cref="T:System.Web.Services.Description.MimeTextMatch" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the
<paramref name="match" /> parameter is a member of the 
<see langword="MimeTextMatchCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Remove(System.Web.Services.Description.MimeTextMatch)">
      <summary>
        <para>Removes the first occurrence of the specified
      <see cref="T:System.Web.Services.Description.MimeTextMatch" /> from
      the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" />.</para>
      </summary>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.CopyTo(System.Web.Services.Description.MimeTextMatch[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> to a compatible one-dimensional
   array of type <see cref="T:System.Web.Services.Description.MimeTextMatch" />,
   starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">The array of type <see cref="T:System.Web.Services.Description.MimeTextMatch" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatchCollection.Item(System.Int32)">
      <summary>
        <para> Gets or sets the value of the member of the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> at the
   specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.MimeTextMatch" /> whose value is returned or modified.</param>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescription">
      <summary>
        <para> Provides a means of creating and formatting a valid Web Services Description Language (WSDL) document file, complete with
      appropriate namespaces, elements, and attributes, for describing an XML Web service. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.DocumentableItem">
      <summary>
        <para>Represents the abstract base class from
      which several classes in the
   <see langword="System.Web.Services.Description" /> namespace
      are derived.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.DocumentableItem.Documentation">
      <summary>
        <para>Gets or sets the text documentation for the instance of the
   <see cref="T:System.Web.Services.Description.DocumentableItem" />.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescription.Namespace">
      <summary>
        <para>The XML namespace in which the <see langword="ServiceDescription" /> class is defined ("http://schemas.xmlsoap.org/wsdl/").
 This field is constant.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.TextReader)">
      <summary>
        <para>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from a <see cref="T:System.IO.TextReader" />.</para>
      </summary>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> instance, passed by reference, that contains the text to be read.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.Stream)">
      <summary>
        <para>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from a <see cref="T:System.IO.Stream" /> instance.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" />, passed by reference, that contains the bytes to be read.</param>
      <returns>
        <para> A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.Xml.XmlReader)">
      <summary>
        <para>Initializes an instance of the
      <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from an
      <see cref="T:System.Xml.XmlReader" />.</para>
      </summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" />, passed by reference, that contains the XML data to be read.</param>
      <returns>
        <para>Returns a <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.String)">
      <summary>
        <para>Initializes an instance of a <see cref="T:System.Web.Services.Description.ServiceDescription" />
object by directly loading the XML from the specified file.</para>
      </summary>
      <param name="fileName">The path to the file to be read.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.CanRead(System.Xml.XmlReader)">
      <summary>
        <para>Gets a value indicating whether an <see cref="T:System.Xml.XmlReader" /> represents a valid Web Services Description Language (WSDL) file that can be parsed.</para>
      </summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /></param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can recognize the node
   on which the <see cref="T:System.Xml.XmlReader" /> is positioned; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.String)">
      <summary>
        <para>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> as a Web Services Description 
   Language (WSDL) file to the specified path.</para>
      </summary>
      <param name="fileName"> The path to which the WSDL file is written.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.IO.TextWriter)">
      <summary>
        <para>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> as a Web Services Description Language (WSDL) file
   to the <see cref="T:System.IO.TextWriter" />.</para>
      </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> that contains the WSDL file produced.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.IO.Stream)">
      <summary>
        <para>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" />
to the specified <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" />, passed by reference, that contains the Web Services Description Language (WSDL) file produced.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.Xml.XmlWriter)">
      <summary>
        <para>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the <see cref="T:System.Xml.XmlWriter" /> as a Web Services Description Language (WSDL) file.</para>
      </summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />, passed by reference, that contains the WSDL file produced.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.RetrievalUrl">
      <summary>
        <para>Gets or sets the URL of the XML Web service to which the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instance applies.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.ServiceDescriptions">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> instance of which
   the <see cref="T:System.Web.Services.Description.ServiceDescription" />
   is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Imports">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.Import" /> elements contained in the
<see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Types">
      <summary>
        <para> Gets or sets the <see cref="T:System.Web.Services.Description.Types" /> contained by the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Messages">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.Message" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.PortTypes">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.PortType" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Bindings">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.Binding" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Services">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.Service" /> instances contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.TargetNamespace">
      <summary>
        <para>Gets or sets the XML <see langword="targetNamespace" />
attribute of the <see langword="&lt;descriptions&gt;" />
tag enclosing a Web Services Description Language (WSDL) file.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Name">
      <summary>
        <para>Gets or sets the XML <see langword="name" /> attribute of
   the <see langword="&lt;descriptions&gt;" /> tag enclosing the Web Services
   Description Language (WSDL) file.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Import">
      <summary>
        <para> Associates an XML Namespace with a document
      location. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Import.ServiceDescription">
      <summary>
        <para>Gets a reference to the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the <see cref="T:System.Web.Services.Description.Import" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Import.Namespace">
      <summary>
        <para>Gets or sets a reference to the XML Namespace of the 
<see cref="T:System.Web.Services.Description.Import" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Import.Location">
      <summary>
        <para>Gets or sets a reference to the XML
   <see langword="&lt;location&gt;" />
   attribute of the <see cref="T:System.Web.Services.Description.Import" />
   instance.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Port">
      <summary>
        <para>Defines an individual endpoint contained in the XML Web
      service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Port.Service">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.Service" /> of which the <see cref="T:System.Web.Services.Description.Port" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Port.Extensions">
      <summary>
        <para>Gets the collection of extensibility
      elements associated with the <see langword="Port" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Port.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.Port" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Port.Binding">
      <summary>
        <para>Gets or sets the value of the 
      XML <see langword="&lt;binding&gt;" /> attribute of the <see cref="T:System.Web.Services.Description.Port" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Service">
      <summary>
        <para> Groups together a set of related instances of the 
<see cref="T:System.Web.Services.Description.Port" /> class that are associated with a Web Service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Service.ServiceDescription">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of 
   which the <see cref="T:System.Web.Services.Description.Service" />
   is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Service.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements associated with the 
   <see cref="T:System.Web.Services.Description.Service" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Service.Ports">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.Port" /> instances contained in the 
<see cref="T:System.Web.Services.Description.Service" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Service.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.Service" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.FaultBinding">
      <summary>
        <para> Specifies the format for any error messages that might be output as a result of the operation.
      This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MessageBinding">
      <summary>
        <para>Describes how abstract content is mapped into a concrete
      format.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessageBinding.OperationBinding">
      <summary>
        <para>Gets the 
<see cref="T:System.Web.Services.Description.OperationBinding" /> of which the current 
<see cref="T:System.Web.Services.Description.MessageBinding" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessageBinding.Name">
      <summary>
        <para>Gets or sets the name of the
      <see cref="T:System.Web.Services.Description.MessageBinding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessageBinding.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements associated with the current
   <see cref="T:System.Web.Services.Description.MessageBinding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.FaultBinding.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements associated with the
      current <see cref="T:System.Web.Services.Description.FaultBinding" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.InputBinding">
      <summary>
        <para>Provides a set of specifications for data formats and protocols used by the XML Web service
      for input messages. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.InputBinding.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements associated with the current 
   <see cref="T:System.Web.Services.Description.InputBinding" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OutputBinding">
      <summary>
        <para>Provides a set of specifications for data formats and protocols used by the XML Web
      service for output messages. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OutputBinding.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements associated with the current 
   <see langword="OutputBinding" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationBinding">
      <summary>
        <para> Provides specifications for protocols and data formats for the messages used in the action
      supported by the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Binding">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.Binding" /> of which the current <see cref="T:System.Web.Services.Description.OperationBinding" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.OperationBinding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements
      specific to the current <see cref="T:System.Web.Services.Description.OperationBinding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Input">
      <summary>
        <para>Gets or sets the <see cref="T:System.Web.Services.Description.InputBinding" /> associated
   with the <see cref="T:System.Web.Services.Description.OperationBinding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Output">
      <summary>
        <para>Gets or sets the <see cref="T:System.Web.Services.Description.OutputBinding" /> associated with the 
<see cref="T:System.Web.Services.Description.OperationBinding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Faults">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.FaultBindingCollection" /> associated
   with the <see cref="T:System.Web.Services.Description.OperationBinding" /> instance.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Binding">
      <summary>
        <para> Specifies the concrete data
      format and protocols used in the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Binding.ServiceDescription">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of
   which the <see cref="T:System.Web.Services.Description.Binding" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Binding.Extensions">
      <summary>
        <para>Gets the collection of extensibility elements used in the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Binding.Operations">
      <summary>
        <para> Gets the collection of specifications for data formats
      and message protocols used in the action supported by the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Binding.Name">
      <summary>
        <para>Gets or sets a string value containing the name of the
   <see cref="T:System.Web.Services.Description.Binding" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Binding.Type">
      <summary>
        <para>Gets or sets a value representing the
      namespace-qualified name of the <see cref="T:System.Web.Services.Description.PortType" /> with which the
   <see langword="Binding" /> is associated.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationMessage">
      <summary>
        <para> Represents a message
      type passed by the action of an XML Web service. </para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessage.Operation">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.Operation" /> of which the <see cref="T:System.Web.Services.Description.OperationMessage" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessage.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.OperationMessage" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessage.Message">
      <summary>
        <para>Gets or sets an abstract, typed definition of the data 
      being communicated.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationFault">
      <summary>
        <para> Defines
      the specifications for error messages returned by the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationInput">
      <summary>
        <para> Defines the specifications for input messages received by the XML Web
      service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationOutput">
      <summary>
        <para> Defines the specifications for output messages returned by the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Operation">
      <summary>
        <para> Provides an abstract definition of an action supported by the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.Operation.IsBoundBy(System.Web.Services.Description.OperationBinding)">
      <summary>
        <para>Returns a value indicating whether the specified
   <see cref="T:System.Web.Services.Description.OperationBinding" /> is
      used in the <see cref="T:System.Web.Services.Description.Operation" />.</para>
      </summary>
      <param name="operationBinding">An <see cref="T:System.Web.Services.Description.OperationBinding" /> to be checked to determine whether it is used by the <see langword="Operation" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="Operation" /> instance uses the
<paramref name="operationBinding" /> parameter; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Description.Operation.PortType">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.PortType" /> of which the <see cref="T:System.Web.Services.Description.Operation" /> 
is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Operation.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.Operation" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Operation.ParameterOrderString">
      <summary>
        <para>Gets or sets an optional Remote Procedure Call signature
      ordering specification for request-response or solicit-response operations.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Operation.ParameterOrder">
      <summary>
        <para>Gets or sets an array of the elements contained in the
   <see cref="P:System.Web.Services.Description.Operation.ParameterOrderString" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Operation.Messages">
      <summary>
        <para>Gets the collection of instances of the <see cref="T:System.Web.Services.Description.Message" /> 
class defined by the current <see cref="T:System.Web.Services.Description.Operation" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Operation.Faults">
      <summary>
        <para> Gets the collection of faults, or error messages, defined
      by the current <see cref="T:System.Web.Services.Description.Operation" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.PortType">
      <summary>
        <para> Represents a
      named set of abstract operations and the corresponding abstract messages. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.PortType.ServiceDescription">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the
<see cref="T:System.Web.Services.Description.PortType" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.PortType.Operations">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.Operation" /> instances defined by the <see cref="T:System.Web.Services.Description.PortType" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.PortType.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.PortType" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Message">
      <summary>
        <para> Provides an abstract definition of data passed
      by an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.Message.FindPartsByName(System.String[])">
      <summary>
        <para>Searches the <see cref="T:System.Web.Services.Description.MessagePartCollection" /> returned by the
<see cref="P:System.Web.Services.Description.Message.Parts" /> property and returns an array of type 
<see cref="T:System.Web.Services.Description.MessagePart" /> 
containing the named instances.</para>
      </summary>
      <param name="partNames">An array of names of the <see cref="T:System.Web.Services.Description.MessagePart" /> instances to be returned.</param>
      <returns>
        <para>An array of type <see cref="T:System.Web.Services.Description.MessagePart" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.Message.FindPartByName(System.String)">
      <summary>
        <para>Searches the <see cref="T:System.Web.Services.Description.MessagePartCollection" /> returned by the <see cref="P:System.Web.Services.Description.Message.Parts" /> property, and returns the named <see cref="T:System.Web.Services.Description.MessagePart" />.</para>
      </summary>
      <param name="partName">A string naming the <see cref="T:System.Web.Services.Description.MessagePart" /> to be returned.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.MessagePart" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Description.Message.ServiceDescription">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of
   which the current <see cref="T:System.Web.Services.Description.Message" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Message.Parts">
      <summary>
        <para> Gets the collection of the <see cref="T:System.Web.Services.Description.MessagePart" /> objects contained in the
<see cref="T:System.Web.Services.Description.Message" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Message.Name">
      <summary>
        <para>Gets or sets the name of the current 
   <see cref="T:System.Web.Services.Description.Message" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.MessagePart">
      <summary>
        <para> Allows
      messages to be broken up into their logical units, with specific abstract
      information for
      each part. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Message">
      <summary>
        <para>Gets the <see cref="T:System.Web.Services.Description.Message" /> of which the
<see langword="MessagePart" /> is a member.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Name">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Web.Services.Description.MessagePart" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Element">
      <summary>
        <para> Gets or sets the name of the XML element corresponding to the current
   <see cref="T:System.Web.Services.Description.MessagePart" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Type">
      <summary>
        <para>Gets or sets the XML data type of the
   <see cref="T:System.Web.Services.Description.MessagePart" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.Types">
      <summary>
        <para> Describes
      data type definitions relevant to exchanged messages. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Types.Schemas">
      <summary>
        <para> Gets the collection of XML schemas included as data type definitions for the XML Web
      service. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.Types.Extensions">
      <summary>
        <para>Gets the collection of <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> 
elements included in the XML
Web service. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection">
      <summary>
        <para>Represents the collection of extensibility elements used by the XML Web
      service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionBaseCollection">
      <summary>
        <para> Forms the basis for the strongly typed collections that 
 are members of the <see cref="N:System.Web.Services.Description" /> namespace.
 </para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the key associated with the value
      passed by reference.</para>
      </summary>
      <param name="value">An object for which to return the name of the key.</param>
      <returns>
        <para>A null reference.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para> Sets the parent object of the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />
instance.</para>
      </summary>
      <param name="value">The object for which to set the parent object.</param>
      <param name="parent">The object to set as the parent.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <para> Performs additional custom processes after inserting a new element into the
   <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" /> .</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="value" /> parameter.</param>
      <param name="value">The element to insert into the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <para> Removes an element from the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />.</para>
      </summary>
      <param name="index"> The zero-based index of the <paramref name="value" /> parameter to be removed.</param>
      <param name=" value">The element to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnClear">
      <summary>
        <para>Clears the contents of the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" /> instance.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <para>Replaces one value with another within the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />
.</para>
      </summary>
      <param name="index"> The zero-based index where the <paramref name="oldValue" /> parameter can be found.</param>
      <param name="oldValue"> The object to replace with the <paramref name="newValue" /> parameter.</param>
      <param name="newValue"> The object that replaces the <paramref name="oldValue" /> parameter.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionBaseCollection.Table">
      <summary>
        <para>Gets an interface that implements the association of the keys and values in the 
   <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> class.</para>
      </summary>
      <param name="parent">The object of which this collection is a member.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Add(System.Object)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to the end of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</para>
      </summary>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> , passed by reference, to add to the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</param>
      <returns>
   The zero-based index where the <paramref name="extension" />
   parameter has been added.
</returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to
   the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> at the
   specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="extension" /> parameter.</param>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.IndexOf(System.Object)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> and returns the zero-based 
   index of the first instance with the collection.</para>
      </summary>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Contains(System.Object)">
      <summary>
        <para>Returns a value indicating whether the specified 
   <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is a
      member of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</para>
      </summary>
      <param name="extension"> The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if 
   the <paramref name="extension" /> parameter is a member of the collection; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Remove(System.Object)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> from the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</para>
      </summary>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to remove from the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.CopyTo(System.Object[],System.Int32)">
      <summary>
        <para> Copies the entire <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> 
into a one-dimensional array of type <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />,
starting at the specified zero-based index of the
target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> serving as the destination of the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Find(System.Type)">
      <summary>
        <para> Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> and 
   returns the first element of the specified derived <see cref="T:System.Type" />.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type" /> for which to search the collection.</param>
      <returns>
        <para>If the search is successful, an object of the specified <see cref="T:System.Type" />; otherwise 
<see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.FindAll(System.Type)">
      <summary>
        <para> Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> and 
   returns an array of all elements of the specified <see cref="T:System.Type" />.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type" /> for which to search the collection.</param>
      <returns>
        <para> An array of <see cref="T:System.Object" /> instances representing all collection members of the 
   specified
   type.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Find(System.String,System.String)">
      <summary>
        <para>This method searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> for 
   a member with the specified name and namespace URI.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Xml.XmlElement" /> to be found.</param>
      <param name=" ns">The XML namespace URI of the <see cref="T:System.Xml.XmlElement" /> to be found.</param>
      <returns>
        <para>If the search is successful, an <see cref="T:System.Xml.XmlElement" />; otherwise
<see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.FindAll(System.String,System.String)">
      <summary>
        <para> Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> and returns an
   array of all members with the specified name and
   namespace URI.</para>
      </summary>
      <param name="name">The XML name attribute of the <see cref="T:System.Xml.XmlElement" /> objects to be found.</param>
      <param name=" ns">The XML namespace URI attribute of the <see cref="T:System.Xml.XmlElement" /> objects to be found.</param>
      <returns>
        <para> An array of <see cref="T:System.Xml.XmlElement" /> instances.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.IsHandled(System.Object)">
      <summary>
        <para>Returns a value indicating whether the specified object 
      is used by the import process when the extensibility element is
      imported into the XML Web service.</para>
      </summary>
      <param name="item">An object, either of type <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to check for use by the import process.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the <paramref name="item" /> parameter is used;
   otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.IsRequired(System.Object)">
      <summary>
        <para>Returns a value indicating whether the specified object is
      necessary for the operation of the XML Web service.</para>
      </summary>
      <param name="item">An object, either of type <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />, to check whether it is necessary.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the
<paramref name="item" /> parameter is required; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent object of a member of
      the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for which to set the parent.</param>
      <param name="parent">The object to be set as parent.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.OnValidate(System.Object)">
      <summary>
        <para>Performs a check on the <see cref="T:System.Type" /> of the object when
   validating it.</para>
      </summary>
      <param name="value">The object to be validated.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a member of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</para>
      </summary>
      <param name="index">The zero-based index of the member whose value is modified or returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.OperationFlow">
      <summary>
        <para> Specifies the type of transmission an endpoint of the XML Web service
      can support.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.None">
      <summary>
        <para>Indicates that the endpoint of the XML Web service receives no transmissions.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.OneWay">
      <summary>
        <para>Indicates that the endpoint of the XML Web service receives a message.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.Notification">
      <summary>
        <para>Indicates that the endpoint of the XML Web service sends a message.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.RequestResponse">
      <summary>
        <para> Indicates that the endpoint of the XML Web service receives a
      message, then sends a correlated message.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.SolicitResponse">
      <summary>
        <para> Indicates that the endpoint of the XML Web service sends a message,
      then receives a correlated message.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationMessageCollection">
      <summary>
        <para>Represents a collection of
   <see cref="T:System.Web.Services.Description.OperationInput" /> and
   <see cref="T:System.Web.Services.Description.OperationOutput" /> messages related to an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Add(System.Web.Services.Description.OperationMessage)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> to the end of the <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</para>
      </summary>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="operationMessage" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Insert(System.Int32,System.Web.Services.Description.OperationMessage)">
      <summary>
        <para>Adds the specified
   <see cref="T:System.Web.Services.Description.OperationMessage" /> to the
   <see cref="T:System.Web.Services.Description.OperationMessageCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="operationMessage" /> parameter.</param>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.IndexOf(System.Web.Services.Description.OperationMessage)">
      <summary>
        <para>Searches for the specified 
   <see cref="T:System.Web.Services.Description.OperationMessage" /> and returns the zero-based index of the first occurrence within the collection.</para>
      </summary>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Contains(System.Web.Services.Description.OperationMessage)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> is 
   a member of the <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</para>
      </summary>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if 
   the <paramref name="operationMessage" /> parameter is a member of the <see langword="OperationMessageCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Remove(System.Web.Services.Description.OperationMessage)">
      <summary>
        <para>Removes the first occurrence of the specified
   <see cref="T:System.Web.Services.Description.OperationMessage" /> from the
   <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</para>
      </summary>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.CopyTo(System.Web.Services.Description.OperationMessage[],System.Int32)">
      <summary>
        <para>Copies the entire 
<see cref="T:System.Web.Services.Description.OperationMessageCollection" /> to a compatible one-dimensional array of type 
<see cref="T:System.Web.Services.Description.OperationMessage" />, starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.OperationMessage" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.Operation" /> of the
<see langword="OperationMessageCollection" />.</para>
      </summary>
      <param name="value">An object, of type <see cref="T:System.Web.Services.Description.OperationMessage" /> or a derived type, within the collection.</param>
      <param name="parent">The <see cref="T:System.Web.Services.Description.Operation" /> to set as the parent.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <para>Performs validation upon insertion of an <see cref="T:System.Web.Services.Description.OperationMessage" /> at
   the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the specified <see cref="T:System.Web.Services.Description.OperationMessage" />.</param>
      <param name="value">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to be added to the <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <para>Performs validation upon replacement of the specified member of the
      <see cref="T:System.Web.Services.Description.OperationMessageCollection" /> with a new
      <see cref="T:System.Web.Services.Description.OperationMessage" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to change the <paramref name="oldValue" /> parameter to the <paramref name="newValue" /> parameter.</param>
      <param name="oldValue">The member of the <see cref="T:System.Web.Services.Description.OperationMessageCollection" /> to be replaced by the <paramref name="newValue" /> parameter.</param>
      <param name="newValue">The <see cref="T:System.Web.Services.Description.OperationMessage" /> with which to replace the <paramref name="oldValue" /> parameter.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.OnValidate(System.Object)">
      <summary>
        <para>When validating the specified object, performs a check on the type
      of the object.</para>
      </summary>
      <param name="value">The object to be validated.</param>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of an <see cref="T:System.Web.Services.Description.OperationMessage" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.OperationMessage" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Input">
      <summary>
        <para>Gets the first occurrence of an <see cref="T:System.Web.Services.Description.OperationInput" />
within the collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Output">
      <summary>
        <para>Gets the first occurrence of an <see cref="T:System.Web.Services.Description.OperationOutput" /> within the collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Flow">
      <summary>
        <para>Gets the type of transmission 
 supported by the <see langword="OperationMessageCollection" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ImportCollection">
      <summary>
        <para> Provides a collection of instances
      of the <see cref="T:System.Web.Services.Description.Import" /> class representing documents to
      be imported into the Web Service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Add(System.Web.Services.Description.Import)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Import" /> to the end of the
<see cref="T:System.Web.Services.Description.ImportCollection" />.</para>
      </summary>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="import" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Insert(System.Int32,System.Web.Services.Description.Import)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Import" /> instance to the <see cref="T:System.Web.Services.Description.ImportCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="import" /> parameter.</param>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.IndexOf(System.Web.Services.Description.Import)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.Import" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Contains(System.Web.Services.Description.Import)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Import" /> is
   a member of the <see cref="T:System.Web.Services.Description.ImportCollection" />.</para>
      </summary>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the <paramref name="import" /> parameter is a member of the <see cref="T:System.Web.Services.Description.ImportCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Remove(System.Web.Services.Description.Import)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Import" /> from the <see cref="T:System.Web.Services.Description.ImportCollection" />.</para>
      </summary>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.CopyTo(System.Web.Services.Description.Import[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.ImportCollection" /> to a compatible one-dimensional
   array of type <see cref="T:System.Web.Services.Description.Import" />, starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Import" /> serving as the destination of the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.ServiceDescription" /> of a member of the 
<see cref="T:System.Web.Services.Description.ImportCollection" />.</para>
      </summary>
      <param name="value"> An <see cref="T:System.Web.Services.Description.Import" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.ImportCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of an <see cref="T:System.Web.Services.Description.Import" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Import" /> whose value is modified or returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.MessageCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.Message" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Add(System.Web.Services.Description.Message)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Message" /> to the end of the <see cref="T:System.Web.Services.Description.MessageCollection" />.</para>
      </summary>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="message" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Insert(System.Int32,System.Web.Services.Description.Message)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Message" /> to the <see cref="T:System.Web.Services.Description.MessageCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="message" /> parameter.</param>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.IndexOf(System.Web.Services.Description.Message)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.Message" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Contains(System.Web.Services.Description.Message)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Message" /> is
   a member of the <see cref="T:System.Web.Services.Description.MessageCollection" />.</para>
      </summary>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the <paramref name="message" /> parameter is a member of the
<see cref="T:System.Web.Services.Description.MessageCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Remove(System.Web.Services.Description.Message)">
      <summary>
        <para>Removes the first occurrence of the specified
   <see cref="T:System.Web.Services.Description.Message" />
   from the <see cref="T:System.Web.Services.Description.MessageCollection" />.</para>
      </summary>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.CopyTo(System.Web.Services.Description.Message[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.MessageCollection" /> to a compatible one-dimensional
   array of type <see cref="T:System.Web.Services.Description.Message" />,
   starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Message" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.Message" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.Message" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.ServiceDescription" /> of 
   a member of the <see cref="T:System.Web.Services.Description.MessageCollection" />.</para>
      </summary>
      <param name="value"> A <see cref="T:System.Web.Services.Description.Message" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.MessageCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Message" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Message" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.MessageCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.Message" /> specified
   by its <see cref="P:System.Web.Services.Description.Message.Name" />
   property.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Message" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.PortCollection">
      <summary>
        <para> Represents a collection of instances of the 
   <see cref="T:System.Web.Services.Description.Port" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Add(System.Web.Services.Description.Port)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Port" /> to the end of the <see cref="T:System.Web.Services.Description.PortCollection" />.</para>
      </summary>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="port" /> 
parameter has
been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Insert(System.Int32,System.Web.Services.Description.Port)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Port" /> instance to the
<see langword="PortCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="port" /> parameter.</param>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.IndexOf(System.Web.Services.Description.Port)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.Port" /> and returns the zero-based 
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Contains(System.Web.Services.Description.Port)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Port" /> is a member of the <see cref="T:System.Web.Services.Description.PortCollection" />.</para>
      </summary>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   specified <see cref="T:System.Web.Services.Description.Port" /> is
   a member of the <see cref="T:System.Web.Services.Description.PortCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Remove(System.Web.Services.Description.Port)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Port" /> from the <see cref="T:System.Web.Services.Description.PortCollection" />.</para>
      </summary>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.CopyTo(System.Web.Services.Description.Port[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.PortCollection" /> to a one-dimensional array of
   type <see cref="T:System.Web.Services.Description.Port" />, starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Port" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.Port" /> instance associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.Port" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.Service" /> of a member of the <see cref="T:System.Web.Services.Description.PortCollection" />.</para>
      </summary>
      <param name="value">An <see cref="T:System.Web.Services.Description.Port" /> within the collection.</param>
      <param name="parent">The <see cref="T:System.Web.Services.Description.Service" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.PortCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Port" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Port" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.PortCollection.Item(System.String)">
      <summary>
        <para> Gets a <see cref="T:System.Web.Services.Description.Port" /> specified by its <see cref="P:System.Web.Services.Description.Port.Name" />
property.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Port" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.PortTypeCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.PortType" /> class; that is, a collection of sets of
      operations supported by the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Add(System.Web.Services.Description.PortType)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.PortType" /> to the end of the <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</para>
      </summary>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the 
   <paramref name="portType" /> 
   parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Insert(System.Int32,System.Web.Services.Description.PortType)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.PortType" /> to the <see cref="T:System.Web.Services.Description.PortTypeCollection" /> at the
   specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="portType" /> parameter.</param>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.IndexOf(System.Web.Services.Description.PortType)">
      <summary>
   Searches for the specified <see cref="T:System.Web.Services.Description.PortType" /> and returns the zero-based
   index of the first occurrence within the collection.
</summary>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Contains(System.Web.Services.Description.PortType)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.PortType" /> is a member of the <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</para>
      </summary>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> for which to check for collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
<paramref name="portType" /> parameter is a member of the <see cref="T:System.Web.Services.Description.PortTypeCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Remove(System.Web.Services.Description.PortType)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.PortType" />
from the <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</para>
      </summary>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.CopyTo(System.Web.Services.Description.PortType[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.PortTypeCollection" /> to 
   a one-dimensional array of type <see cref="T:System.Web.Services.Description.PortType" />
   , starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.PortType" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.PortType" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.PortType" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.ServiceDescription" /> of 
   a member of the
<see cref="T:System.Web.Services.Description.PortTypeCollection" />.</para>
      </summary>
      <param name="value"> A <see cref="T:System.Web.Services.Description.PortType" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.PortTypeCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.PortType" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.PortType" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.PortTypeCollection.Item(System.String)">
      <summary>
        <para> Gets the <see cref="T:System.Web.Services.Description.PortType" /> specified by its <see cref="P:System.Web.Services.Description.PortType.Name" />
property.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.PortType" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.BindingCollection">
      <summary>
        <para> Represents a collection of instances of the <see cref="T:System.Web.Services.Description.Binding" /> class supported by the XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Add(System.Web.Services.Description.Binding)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Binding" /> to the end of the
<see cref="T:System.Web.Services.Description.BindingCollection" />.</para>
      </summary>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="binding" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Insert(System.Int32,System.Web.Services.Description.Binding)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Binding" /> to the
<see cref="T:System.Web.Services.Description.BindingCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="binding" /> parameter.</param>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> to be added to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.IndexOf(System.Web.Services.Description.Binding)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.Binding" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Contains(System.Web.Services.Description.Binding)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Binding" /> is
   a member of the <see cref="T:System.Web.Services.Description.BindingCollection" />.</para>
      </summary>
      <param name="binding">A <see cref="T:System.Web.Services.Description.Binding" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the <paramref name="binding" /> parameter is a member of the
<see cref="T:System.Web.Services.Description.BindingCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Remove(System.Web.Services.Description.Binding)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Binding" />
from the <see cref="T:System.Web.Services.Description.BindingCollection" />.</para>
      </summary>
      <param name="binding">
        <para> The <see cref="T:System.Web.Services.Description.Binding" /> to remove from the collection.</para>
      </param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.CopyTo(System.Web.Services.Description.Binding[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.BindingCollection" /> to
   a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.Binding" />,
   starting at the specified zero-based index
   of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Binding" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.Binding" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.Binding" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.ServiceDescription" /> of a member of the 
<see cref="T:System.Web.Services.Description.BindingCollection" />.</para>
      </summary>
      <param name="value"> A <see cref="T:System.Web.Services.Description.Binding" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.BindingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Binding" />
at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Binding" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.BindingCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.Binding" /> specified by its <see cref="P:System.Web.Services.Description.Binding.Name" />
property.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Binding" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.ServiceCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.Service" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Add(System.Web.Services.Description.Service)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Service" /> to the end of the <see cref="T:System.Web.Services.Description.ServiceCollection" />.</para>
      </summary>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> instance to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="service" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Insert(System.Int32,System.Web.Services.Description.Service)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Service" /> instance to the <see cref="T:System.Web.Services.Description.ServiceCollection" /> at the
   specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="service" /> parameter.</param>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.IndexOf(System.Web.Services.Description.Service)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.Service" /> and
   returns the zero-based index of the first occurrence within the
<see langword="ServiceCollection" />.</para>
      </summary>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Contains(System.Web.Services.Description.Service)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Service" /> 
instance is a member of the <see cref="T:System.Web.Services.Description.ServiceCollection" />.</para>
      </summary>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
<paramref name="service" /> parameter is a member of the <see cref="T:System.Web.Services.Description.ServiceCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Remove(System.Web.Services.Description.Service)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Service" /> from the <see cref="T:System.Web.Services.Description.ServiceCollection" />.</para>
      </summary>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.CopyTo(System.Web.Services.Description.Service[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.ServiceCollection" /> to a one-dimensional array
   of type <see cref="T:System.Web.Services.Description.Service" />, starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Service" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.Service" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.Service" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.ServiceDescription" /> of a member of the 
<see cref="T:System.Web.Services.Description.ServiceCollection" />.</para>
      </summary>
      <param name="value"> A <see cref="T:System.Web.Services.Description.Service" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Service" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Service" /> to be modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.Service" /> specified by its <see cref="P:System.Web.Services.Description.Service.Name" />
property.</para>
      </summary>
      <param name="name"> The name of the <see cref="T:System.Web.Services.Description.Service" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.MessagePartCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.MessagePart" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Add(System.Web.Services.Description.MessagePart)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.MessagePart" /> to the end of the
<see cref="T:System.Web.Services.Description.MessagePartCollection" />.</para>
      </summary>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="messagePart" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Insert(System.Int32,System.Web.Services.Description.MessagePart)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.MessagePart" /> to the <see cref="T:System.Web.Services.Description.MessagePartCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="messagePart" /> parameter.</param>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.IndexOf(System.Web.Services.Description.MessagePart)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.MessagePart" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Contains(System.Web.Services.Description.MessagePart)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.MessagePart" /> is
   a member of the <see langword="MessagePartCollection" />.</para>
      </summary>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the <paramref name="messagePart" /> parameter is a member of the <see cref="T:System.Web.Services.Description.MessagePartCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Remove(System.Web.Services.Description.MessagePart)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.MessagePart" /> from
   the <see cref="T:System.Web.Services.Description.MessagePartCollection" />.</para>
      </summary>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.CopyTo(System.Web.Services.Description.MessagePart[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.MessagePartCollection" />
to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.MessagePart" />,
starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.MessagePart" /> serving as the destination of the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.MessagePart" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.MessagePart" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.Message" /> of a member of the 
<see cref="T:System.Web.Services.Description.MessagePartCollection" />.</para>
      </summary>
      <param name="value"> A <see cref="T:System.Web.Services.Description.MessagePart" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.Message" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.MessagePartCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a
      <see cref="T:System.Web.Services.Description.MessagePart" /> at the specified zero-based
      index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.MessagePart" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.MessagePartCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.MessagePart" /> specified by 
   its <see cref="P:System.Web.Services.Description.MessagePart.Name" />
   property.</para>
      </summary>
      <param name="name"> The name of the <see cref="T:System.Web.Services.Description.MessagePart" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.OperationBindingCollection">
      <summary>
        <para> Represents a collection of instances of the
      <see cref="T:System.Web.Services.Description.OperationBinding" /> class.
      This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Add(System.Web.Services.Description.OperationBinding)">
      <summary>
        <para>Adds the specified
      <see cref="T:System.Web.Services.Description.OperationBinding" /> to the end of the
      <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</para>
      </summary>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> to add to the collection.</param>
      <returns>
        <para> The zero-based index where the <paramref name="bindingOperation" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Insert(System.Int32,System.Web.Services.Description.OperationBinding)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> instance to the <see cref="T:System.Web.Services.Description.OperationBindingCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="bindingOperation" /> parameter.</param>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.IndexOf(System.Web.Services.Description.OperationBinding)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Contains(System.Web.Services.Description.OperationBinding)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> is
   a member of the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</para>
      </summary>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the <paramref name="bindingOperation" /> parameter is a member of
   the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Remove(System.Web.Services.Description.OperationBinding)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.OperationBinding" />
from the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</para>
      </summary>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.CopyTo(System.Web.Services.Description.OperationBinding[],System.Int32)">
      <summary>
        <para>Copies the entire <see langword="OperationBindingCollection" /> to
   a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.OperationBinding" />, starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.OperationBinding" /> serving as the destination for the copy action.</param>
      <param name="index"> The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.Binding" /> of a member of the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</para>
      </summary>
      <param name="value"> An <see cref="T:System.Web.Services.Description.OperationBinding" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.Binding" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.OperationBindingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of an <see cref="T:System.Web.Services.Description.OperationBinding" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.OperationBinding" /> whose value is modified or returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.FaultBindingCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.FaultBinding" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Add(System.Web.Services.Description.FaultBinding)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> to the end of the
<see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</para>
      </summary>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="bindingOperationFault" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Insert(System.Int32,System.Web.Services.Description.FaultBinding)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> to the
<see langword="FaultBindingCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="bindingOperationFault" />parameter.</param>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.IndexOf(System.Web.Services.Description.FaultBinding)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Contains(System.Web.Services.Description.FaultBinding)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> is a
   member of the <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</para>
      </summary>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the <paramref name="bindingOperationFault" /> parameter is a member of the
<see langword="FaultBindingCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Remove(System.Web.Services.Description.FaultBinding)">
      <summary>
        <para>Removes the first occurrence the specified <see cref="T:System.Web.Services.Description.FaultBinding" />
from the <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</para>
      </summary>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.CopyTo(System.Web.Services.Description.FaultBinding[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.FaultBindingCollection" /> to a
   compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.FaultBinding" />, starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.FaultBinding" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.FaultBinding" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.FaultBinding" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.OperationBinding" /> of a member of the <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</para>
      </summary>
      <param name="value"> A <see cref="T:System.Web.Services.Description.FaultBinding" /> within the collection.</param>
      <param name="parent"> The <see cref="T:System.Web.Services.Description.OperationBinding" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.FaultBindingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.FaultBinding" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.FaultBinding" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.FaultBindingCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.FaultBinding" /> specified by its <see cref="P:System.Web.Services.Description.MessageBinding.Name" />
property.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.FaultBinding" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.OperationCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.Operation" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Add(System.Web.Services.Description.Operation)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Operation" /> to the end of the
<see cref="T:System.Web.Services.Description.OperationCollection" />.</para>
      </summary>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="operation" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Insert(System.Int32,System.Web.Services.Description.Operation)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.Operation" /> to the <see cref="T:System.Web.Services.Description.OperationCollection" /> at the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="operation" /> parameter.</param>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.IndexOf(System.Web.Services.Description.Operation)">
      <summary>
        <para>Searches for the specified
      <see cref="T:System.Web.Services.Description.Operation" /> and returns the zero-based
      index of the first occurrence within the collection.</para>
      </summary>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Contains(System.Web.Services.Description.Operation)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Operation" /> is a
   member of the <see cref="T:System.Web.Services.Description.OperationCollection" />.</para>
      </summary>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if <paramref name="operation" /> is a member of the
<see cref="T:System.Web.Services.Description.OperationCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Remove(System.Web.Services.Description.Operation)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Operation" /> from
   the <see cref="T:System.Web.Services.Description.OperationCollection" />.</para>
      </summary>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.CopyTo(System.Web.Services.Description.Operation[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.OperationCollection" /> to a compatible one-dimensional array of type
<see cref="T:System.Web.Services.Description.Operation" />, 
   starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Operation" /> serving as the destination for the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.PortType" /> of a member of the <see cref="T:System.Web.Services.Description.OperationCollection" />.</para>
      </summary>
      <param name="value">An <see cref="T:System.Web.Services.Description.Operation" /> within the <see langword="OperationCollection" />.</param>
      <param name="parent">The <see cref="T:System.Web.Services.Description.PortType" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.OperationCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of an <see cref="T:System.Web.Services.Description.Operation" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Operation" /> whose value is modified or returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.OperationFaultCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.OperationFault" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Add(System.Web.Services.Description.OperationFault)">
      <summary>
        <para>Adds the specified
   <see cref="T:System.Web.Services.Description.OperationFault" /> to the end of the 
   <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</para>
      </summary>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> to add to the collection.</param>
      <returns>
        <para>The zero-based index where the <paramref name="operationFaultMessage" /> parameter has
   been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Insert(System.Int32,System.Web.Services.Description.OperationFault)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.OperationFault" /> to the <see cref="T:System.Web.Services.Description.OperationFaultCollection" /> at
   the specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index at which to insert the <paramref name="operationFaultMessage" /> parameter.</param>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.IndexOf(System.Web.Services.Description.OperationFault)">
      <summary>
        <para>Searches for the specified <see cref="T:System.Web.Services.Description.OperationFault" /> and returns the zero-based
   index of the first occurrence within the collection.</para>
      </summary>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Contains(System.Web.Services.Description.OperationFault)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.OperationFault" /> is a 
   member of the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</para>
      </summary>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the <paramref name="operationFaultMessage" /> parameter is a member of the 
<see cref="T:System.Web.Services.Description.OperationFaultCollection" />; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Remove(System.Web.Services.Description.OperationFault)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.OperationFault" /> from
   the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</para>
      </summary>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.CopyTo(System.Web.Services.Description.OperationFault[],System.Int32)">
      <summary>
        <para>Copies the entire 
<see cref="T:System.Web.Services.Description.OperationFaultCollection" /> to a compatible one-dimensional array of type 
<see cref="T:System.Web.Services.Description.OperationFault" />, starting at the specified zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.OperationFault" /> serving as the destination of the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.Services.Description.OperationFault" /> associated with the value
   passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.OperationFault" /> for which to return the name.</param>
      <returns>
        <para>The name of the <paramref name="value" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.SetParent(System.Object,System.Object)">
      <summary>
        <para>Sets the parent <see cref="T:System.Web.Services.Description.Operation" /> of a member of the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</para>
      </summary>
      <param name="value">An <see cref="T:System.Web.Services.Description.OperationFault" /> within the collection.</param>
      <param name="parent">The <see cref="T:System.Web.Services.Description.Operation" /> to set as the parent.</param>
    </member>
    <member name="P:System.Web.Services.Description.OperationFaultCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of an <see cref="T:System.Web.Services.Description.OperationFault" /> at the
   specified zero-based index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.OperationFault" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.OperationFaultCollection.Item(System.String)">
      <summary>
        <para>Gets an <see cref="T:System.Web.Services.Description.OperationFault" /> by its <see cref="P:System.Web.Services.Description.OperationMessage.Name" />
property.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.OperationFault" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionImportWarnings">
      <summary>
        <para>Specifies the type of warnings produced by <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.NoCodeGenerated">
      <summary>
        <para>Specifies that no proxy class was generated by the <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" /> method.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.OptionalExtensionsIgnored">
      <summary>
        <para>Specifies that at least one optional <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported has been ignored.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.RequiredExtensionsIgnored">
      <summary>
        <para>Specifies that at least one necessary <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported has been ignored.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedOperationsIgnored">
      <summary>
        <para>Specifies that at least one <see cref="T:System.Web.Services.Description.Operation" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported is
 of an unsupported type and has been ignored.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedBindingsIgnored">
      <summary>
        <para>Specifies that at least one <see cref="T:System.Web.Services.Description.Binding" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported is of an unsupported type and has been ignored.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.NoMethodsGenerated">
      <summary>
        <para>Specifies that the proxy class generated by the <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" /> method
 includes no methods.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionImportStyle">
      <summary>
        <para>Specifies whether the Import is made to the server or to the client computer.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Client">
      <summary>
        <para>Specifies that the Import should be made to the client computer.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Server">
      <summary>
        <para>Specifies that the Import should be made to the server.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionImporter">
      <summary>
        <para> Exposes a means of generating
      client proxy classes for XML Web services.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.#ctor">
      <summary>
        <para>Initializes a new instance of the 
<see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> class.
</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription(System.Web.Services.Description.ServiceDescription,System.String,System.String)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the
<see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> 
collection. It also sets the
<see cref="P:System.Web.Services.Description.ServiceDescription.AppSettingUrlKey" /> and <see cref="P:System.Web.Services.Description.ServiceDescription.AppSettingBaseUrl" /> 
properties of the
<see cref="T:System.Web.Services.Description.ServiceDescription" /> to be added.</para>
      </summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> instance to add to the collection</param>
      <param name="appSettingUrlKey">Sets the initial value of the <see langword="Url" /> property of the proxy class to be generated from the instance represented by the <paramref name="serviceDescription" /> parameter. Specifies that it should be generated from the web.config file's <see langword="&lt;appsetting&gt;" /> section.</param>
      <param name="appSettingBaseUrl">Sets the initial value of the <see langword="Url" /> property of the proxy class to be generated from the instance represented by the <paramref name="serviceDescription" /> parameter. Specifies that it should be constructed from a combination of the value of this parameter and the URL specified by the <see langword="location" /> attribute in the WSDL document.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <summary>
        <para> Imports a <see cref="T:System.Web.Services.Description.ServiceDescription" />
from the specified namespace,
and generates code for client proxy classes.</para>
      </summary>
      <param name=" codeNamespace">A <see cref="T:System.CodeDom.CodeNamespace" /> that determines the namespace of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported.</param>
      <param name=" codeCompileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that will add references to the appropriate assemblies.</param>
      <returns>
        <para>One of the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> values.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions">
      <summary>
        <para>Gets the
   <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> being imported by the 
   <see langword="ServiceDescriptionImporter" />.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.Schemas">
      <summary>
        <para>Gets the <see cref="T:System.Xml.Serialization.XmlSchemas" /> collection contained in the XML Web
   service to be imported. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.Style">
      <summary>
        <para>Gets or sets the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportStyle" /> 
associated with the <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
instance.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName">
      <summary>
        <para>Gets or sets the name of the protocol to be imported.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionReflector">
      <summary>
        <para>Provides a managed way of dynamically viewing,
      creating or invoking types supported by an XML Web service.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionReflector.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionReflector.Reflect(System.Type,System.String)">
      <summary>
        <para>Creates a <see cref="T:System.Web.Services.Description.ServiceDescription" /> including the
   specified <see cref="T:System.Type" /> for the XML Web service at the specified URL.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the class or interface to reflect.</param>
      <param name="url">The address (URL) of the Web Service.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionReflector.ServiceDescriptions">
      <summary>
        <para>Gets a reference to the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />
associated with the XML Web service.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionReflector.Schemas">
      <summary>
        <para>Gets a reference to the <see cref="T:System.Xml.Serialization.XmlSchemas" /> associated with the XML Web service.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionCollection">
      <summary>
        <para> Represents a collection of instances
      of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Add(System.Web.Services.Description.ServiceDescription)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the end of the
<see langword="ServiceDescriptionCollection" />.</para>
      </summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to add to the collection.</param>
      <returns>
        <para> The zero-based index where the 
   <paramref name="serviceDescription" /> parameter has been added.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Insert(System.Int32,System.Web.Services.Description.ServiceDescription)">
      <summary>
        <para>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescription" />
instance to the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> at
the specified zero-based index.</para>
      </summary>
      <param name=" index">The zero-based index at which to insert the <paramref name="serviceDescription" /> parameter.</param>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.IndexOf(System.Web.Services.Description.ServiceDescription)">
      <summary>
   Searches for the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> and
   returns the zero-based index of the first occurrence within the collection.
</summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> for which to search in the collection.</param>
      <returns>
        <para> A 32-bit signed integer.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Contains(System.Web.Services.Description.ServiceDescription)">
      <summary>
        <para>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> is a member of
   the collection.</para>
      </summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> for which to check collection membership.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
<paramref name="serviceDescription" /> parameter is a member of the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Remove(System.Web.Services.Description.ServiceDescription)">
      <summary>
        <para>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.ServiceDescription" />
from the collection.</para>
      </summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.CopyTo(System.Web.Services.Description.ServiceDescription[],System.Int32)">
      <summary>
        <para>Copies the entire <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> to a one-dimensional
   array of type <see cref="T:System.Web.Services.Description.ServiceDescription" />, starting at the specified
   zero-based index of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.ServiceDescription" /> serving as the destination of the copy action.</param>
      <param name="index">The zero-based index at which to start placing the copied collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetKey(System.Object)">
      <summary>
        <para>Returns the <see cref="P:System.Web.Services.Description.ServiceDescription.TargetNamespace" /> property of the
<see cref="T:System.Web.Services.Description.ServiceDescription" /> associated with the value passed by reference.</para>
      </summary>
      <param name="value">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> for which to return the <see cref="P:System.Web.Services.Description.ServiceDescription.TargetNamespace" />.</param>
      <returns>
        <para>The <see langword="TargetNamespace" /> of the 
<see langword="ServiceDescription" /> 
passed by reference.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetMessage(System.Xml.XmlQualifiedName)">
      <summary>
        <para>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> and
   returns the <see cref="T:System.Web.Services.Description.Message" />
   with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the
   collection.</para>
      </summary>
      <param name="name">The <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.Message" /> returned.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.Message" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetPortType(System.Xml.XmlQualifiedName)">
      <summary>
        <para>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> and
   returns the <see cref="T:System.Web.Services.Description.PortType" />
   with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the
   collection.</para>
      </summary>
      <param name="name">The <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.PortType" /> returned.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.PortType" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetService(System.Xml.XmlQualifiedName)">
      <summary>
        <para>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> and
   returns the <see cref="T:System.Web.Services.Description.Service" />
   with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the
   collection.</para>
      </summary>
      <param name="name">The <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.Service" /> returned.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.Service" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetBinding(System.Xml.XmlQualifiedName)">
      <summary>
        <para>Searches the <see langword="ServiceDescriptionCollection" /> and
   returns the <see cref="T:System.Web.Services.Description.Binding" />
   with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the
   collection.</para>
      </summary>
      <param name="name">An <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.Binding" /> returned.</param>
      <returns>
        <para>A <see cref="T:System.Web.Services.Description.Binding" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the value of a <see cref="T:System.Web.Services.Description.ServiceDescription" /> at the specified zero-based
   index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> whose value is modified or returned.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionCollection.Item(System.String)">
      <summary>
        <para>Gets a <see cref="T:System.Web.Services.Description.ServiceDescription" /> specified by its <see cref="P:System.Web.Services.Description.ServiceDescription.TargetNamespace" /> property.</para>
      </summary>
      <param name="ns">The namespace of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> returned.</param>
    </member>
    <member name="T:System.Web.Services.Description.SoapBinding">
      <summary>
        <para>Represents an extension added to a <see cref="T:System.Web.Services.Description.Binding" /> within an
   XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBinding.Namespace">
      <summary>
        <para> Gets the URI for the XML namespace of the <see cref="T:System.Web.Services.Description.SoapBinding" />
class. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBinding.HttpTransport">
      <summary>
        <para> Gets the URI for
      the standard protocol specifying HTTP
      transmission of SOAP data. This field is constant.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBinding.Transport">
      <summary>
        <para> Gets or sets the URI with the specification for HTTP
      transmission of SOAP data.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBinding.Style">
      <summary>
        <para>Specifies the type of SOAP binding used by the 
      current <see cref="T:System.Web.Services.Description.SoapBinding" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapBindingStyle">
      <summary>
        <para>Specifies the type of action that occurs in the XML Web service at the level of the
      class hierarchy to which this enumeration is applied.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingStyle.Default">
      <summary>
        <para> The default type of action for the current hierarchical level of the Web Services Description Language (WSDL) file.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingStyle.Document">
      <summary>
        <para> The message being transmitted is document-oriented.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingStyle.Rpc">
      <summary>
        <para>The message being transmitted contains the parameters to call a procedure or the return
      values from that procedure. RPC is an acronym for "remote procedure call."</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapOperationBinding">
      <summary>
        <para>Represents an extension added to an <see cref="T:System.Web.Services.Description.OperationBinding" /> within an XML Web service. This class
   cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapOperationBinding.SoapAction">
      <summary>
        <para> Gets or sets the URI for the SOAP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapOperationBinding.Style">
      <summary>
        <para>Gets or sets the type of SOAP binding used by the
   <see cref="T:System.Web.Services.Description.SoapOperationBinding" />.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapBodyBinding">
      <summary>
        <para>Represents an extensibility element added to an 
<see cref="T:System.Web.Services.Description.InputBinding" /> or an 
<see cref="T:System.Web.Services.Description.OutputBinding" />. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Use">
      <summary>
        <para> Indicates whether the message parts are encoded using
      specified encoding rules, or define the concrete schema of the message.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Namespace">
      <summary>
        <para>Get or sets the URI representing the location of the specifications for encoding of content not
      specifically defined by the <see cref="P:System.Web.Services.Description.SoapBodyBinding.Encoding" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Encoding">
      <summary>
        <para>Gets or sets a string containing a list of space-delimited URIs. The
      URIs represent the encoding style (or styles) to be used to encode messages within the SOAP body.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.PartsString">
      <summary>
        <para>Gets or sets a value indicating which parts of the transmitted message appear within the SOAP
      body portion of the transmission.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Parts">
      <summary>
        <para>Gets or sets a value indicating which parts of the transmitted message appear within the SOAP
      body portion of the transmission.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapBindingUse">
      <summary>
        <para> Specifies whether the
      message parts are encoded as abstract type definitions or concrete schema definitions.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingUse.Default">
      <summary>
        <para>Specifies an empty string ("") value for the 
      corresponding XML <see langword="use " />
      attribute.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingUse.Encoded">
      <summary>
        <para> The message parts are encoded using given encoding rules.</para>
      </summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingUse.Literal">
      <summary>
        <para> The message parts represent a concrete schema.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapFaultBinding">
      <summary>
        <para>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.FaultBinding" /> 
within an XML Web
service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Use">
      <summary>
        <para> Specifies whether the fault message is encoded
      using rules specified by the <see cref="P:System.Web.Services.Description.SoapFaultBinding.Encoding" />
      property, or is encapsulated
      within a concrete XML schema.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Namespace">
      <summary>
        <para> Get or sets the URI representing
      the location of the specification for encoding of content not
      specifically defined by the <see cref="P:System.Web.Services.Description.SoapFaultBinding.Encoding" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Encoding">
      <summary>
        <para> Gets or sets a URI representing the encoding style used to encode the SOAP fault message.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapHeaderBinding">
      <summary>
        <para>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> 
within an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.MapToProperty">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> instance is mapped to a specific
   property in generated proxy classes.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Message">
      <summary>
        <para>Gets or sets a value specifying the name of
      the <see cref="T:System.Web.Services.Description.Message" />
      within the XML Web service to which the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> applies.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Part">
      <summary>
        <para>Gets or sets a value indicating to which
   <see cref="T:System.Web.Services.Description.MessagePart" /> 
   within the XML Web service the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> applies.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Use">
      <summary>
        <para> Specifies whether the header is
      encoded using rules specified by the <see cref="P:System.Web.Services.Description.SoapHeaderBinding.Encoding" /> property,
      or is encapsulated within
      a concrete XML schema.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Encoding">
      <summary>
        <para> Gets or sets a URI representing the encoding style used to encode the SOAP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Namespace">
      <summary>
        <para>Get or sets the URI representing the location of the specification for encoding of content not
      specifically defined by the <see cref="P:System.Web.Services.Description.SoapHeaderBinding.Encoding" />
      property.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapHeaderFaultBinding">
      <summary>
        <para>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> 
within an XML Web service. It specifies
the SOAP header types used to transmit error information within the SOAP
header. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Message">
      <summary>
        <para>Gets or sets a value specifying the name of
      the <see cref="T:System.Web.Services.Description.Message" />
      within
      the XML Web service to which the <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> applies.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Part">
      <summary>
        <para>Gets or sets a value indicating which
   <see cref="T:System.Web.Services.Description.MessagePart" /> within the XML Web service the
   <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> applies to.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Use">
      <summary>
        <para> Specifies whether the header is encoded
      using rules specified by the <see cref="P:System.Web.Services.Description.SoapHeaderBinding.Encoding" />
      property, or is encapsulated
      within a concrete schema.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Encoding">
      <summary>
        <para> Gets or sets a URI representing the encoding style used to encode the error
      message for the SOAP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Namespace">
      <summary>
        <para>Get or sets a URI representing the location of the specifications for encoding content not
      specifically defined by the <see cref="P:System.Web.Services.Description.SoapHeaderFaultBinding.Encoding" />
      property.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapAddressBinding">
      <summary>
        <para>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.Port" /> within an XML Web service. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapAddressBinding.Location">
      <summary>
        <para>Gets or sets a value representing the URI for the
   <see cref="T:System.Web.Services.Description.Port" /> to 
      which the <see cref="T:System.Web.Services.Description.SoapAddressBinding" /> applies.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapTransportImporter">
      <summary>
        <para>Serves as a base class for derived classes that import SOAP transmission protocols into XML Web services.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapTransportImporter.IsSupportedTransport(System.String)">
      <summary>
        <para>When overridden in a derived class, this method
      determines whether the specified transport protocol is supported
      by the XML Web service.</para>
      </summary>
      <param name="transport">A URI representing the transport protocol to be checked.</param>
      <returns>
        <para>
          <see langword="true" /> if the transport protocol is supported; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.Services.Description.SoapTransportImporter.ImportClass">
      <summary>
        <para>When overridden in a derived class, this method uses 
      information contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" /> object model (available through the <see cref="P:System.Web.Services.Description.SoapTransportImporter.ImportContext" /> property)
      to add transport-specific code to the class being generated.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapTransportImporter.ImportContext">
      <summary>
        <para>Gets or sets a reference to the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> 
performing the import action.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.ServerProtocolFactories">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.ReturnWriterTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.ParameterReaderTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.ProtocolReflectorTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.MimeReflectorTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.ProtocolImporterTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.MimeImporterTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.SoapExtensionTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.SoapExtensionImporterTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.SoapExtensionReflectorTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.DiscoveryReferenceTypes">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.DiscoveryDocumentSerializer">
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesConfiguration.Current">
    </member>
    <member name="M:System.Web.Services.Configuration.WebServicesConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    </member>
    <member name="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute">
      <summary>
        <para>Specifes that a service description format extension runs at one or more
      extension points. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> 
class specifying the XML element and namespace to add when running at the
specified extension point.</para>
      </summary>
      <param name="elementName">
        <para>The XML element added to the service description by the service description format extension.</para>
      </param>
      <param name=" ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name=" extensionPoint1">The extension point at which to run the service description format extension.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> 
class specifying the XML element and namespace to add when running at the
specified extension points.</para>
      </summary>
      <param name="elementName">
        <para>The XML element added to the service description by the service description format extension.</para>
      </param>
      <param name=" ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name=" extensionPoint1">
        <para>An extension point at which to run the service description format extension.</para>
      </param>
      <param name=" extensionPoint2">
        <para>An extension point at which to run the service description format extension.</para>
      </param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type,System.Type,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> 
class specifying the XML element and namespace to add when running at the
specified extension points.</para>
      </summary>
      <param name="elementName">
        <para>The XML element added to the service description by the service description format extension.</para>
      </param>
      <param name=" ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name=" extensionPoint1">An extension point at which to run the service description format extension.</param>
      <param name=" extensionPoint2">An extension point at which to run the service description format extension.</param>
      <param name=" extensionPoint3">An extension point at which to run the service description format extension.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type,System.Type,System.Type,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> 
class specifying the XML element and namespace to add when running at the
specified extension point.</para>
      </summary>
      <param name="elementName">
        <para>The XML element added to the service description by the service description format extension.</para>
      </param>
      <param name=" ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name=" extensionPoint1">An extension point at which to run the service description format extension.</param>
      <param name=" extensionPoint2">An extension point at which to run the service description format extension.</param>
      <param name=" extensionPoint3">An extension point at which to run the service description format extension.</param>
      <param name=" extensionPoint4">An extension point at which to run the service description format extension.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> 
class specifying the XML element and namespace to add when running at the
specified extension point.</para>
      </summary>
      <param name="elementName">
        <para>The XML element added to the service description by the service description format extension.</para>
      </param>
      <param name=" ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name=" extensionPoints">An array of extension points at which to run the service description format extension.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionAttribute.ExtensionPoints">
      <summary>
        <para>The stages at which the service description format
      extension is to run.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionAttribute.Namespace">
      <summary>
        <para>Gets or sets the XML namespace for the XML element added to the service description by the 
      service description format extension.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionAttribute.ElementName">
      <summary>
        <para> Gets or sets the XML element added to the service description by the
      service description format extension.</para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute">
      <summary>
        <para>Specifies the XML namespace and XML namespace prefix to use for a service description
      format extension within a service description. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute" /> class.</para>
      </summary>
      <param name="memberName">The member of the class implementing the service description format extension that can have a service description format extension associated with it.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.MemberName">
      <summary>
        <para> Specifies that the member of the class implementing the service description format extension can have
      a service description format extension
      associated with it.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.AllowElements">
      <summary>
        <para>Gets or sets a value indicating whether the member of the class implementing the service description
      format extension specified in the <see cref="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.MemberName" /> property can accept raw XML
      elements. </para>
      </summary>
    </member>
    <member name="T:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute">
      <summary>
        <para>Specifies the XML namespace and XML namespace prefix to use for a service description
      format extension within a service description. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute" />
class, setting the XML namespace and XML namespace prefix for a
service description format extension.</para>
      </summary>
      <param name="prefix">The XML namespace prefix associated with a service description format extension.</param>
      <param name=" ns">The XML namespace associated with a service description format extension.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.Prefix">
      <summary>
        <para>Gets or sets the XML namespace prefix associated with a
      service description format extension.</para>
      </summary>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.Namespace">
      <summary>
        <para> Gets or sets the XML namespace associated with a
      service description format extension.</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\tools\x86\managed\urt\v1.0.3705\webserviceadmin.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebServiceAdmin</name>
    </assembly>
    <members>
        <member name="T:Microsoft.DevApps.WebServices.HttpGet">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.#ctor(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.#ctor(System.String,System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.OpenUriStreamReader(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.OpenResponseStreamReader(System.Net.WebResponse)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.OpenUriStream(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.HttpMakeRequest(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.MakeFilename(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.PerformSave">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:SerializerGenerator">
            <!-- Badly formed XML file "doc\SerializerGenerator.uex" cannot be included -->
        </member>
        <member name="M:SerializerGenerator.Run(System.String[])">
            <!-- Badly formed XML file "doc\SerializerGenerator.uex" cannot be included -->
        </member>
        <member name="M:SerializerGenerator.Gen">
            <!-- Badly formed XML file "doc\SerializerGenerator.uex" cannot be included -->
        </member>
        <member name="T:Microsoft.DevApps.WebServices.WebServiceAdmin">
            <!-- Badly formed XML file "doc\WebServiceAdmin.uex" cannot be included -->
            <devdoc>
             This class provides support to install web services and support to
            generate source from an WSDL file.
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.WebServiceAdmin.Main(System.String[])">
            <!-- Badly formed XML file "doc\WebServiceAdmin.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.WsdlSaver">
            <!-- Badly formed XML file "doc\wsdlsaver.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.WsdlSaver.SaveWsdl(System.String,System.String)">
            <!-- Badly formed XML file "doc\wsdlsaver.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\tools\x86\managed\urt\v1.0.3705\webserviceutil.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebServiceUtil</name>
    </assembly>
    <members>
        <member name="T:Microsoft.DevApps.WebServices.DiscoveryGenerator">
            <!-- Badly formed XML file "doc\DiscoveryGenerator.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.DiscoveryGenerator.GenerateDiscovery(System.String,System.String,System.Boolean)">
            <!-- Badly formed XML file "doc\DiscoveryGenerator.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.CheckingRule">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.CommandRule">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:Microsoft.DevApps.WebServices.CommandRule.ValueOptional">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:Microsoft.DevApps.WebServices.CommandRule.ValueRequired">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.#ctor">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch)">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.#ctor(System.Text.RegularExpressions.Regex)">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.#ctor(System.String)">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.String)">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.Text.RegularExpressions.Regex)">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandRule.AnyOf(System.String[])">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandRule.Cswitch">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandRule.Pattern">
            <!-- Badly formed XML file "doc\CommandRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(System.Text.RegularExpressions.Regex)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(System.String)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.Text.RegularExpressions.Regex)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.String)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.Text.RegularExpressions.Regex,System.Boolean)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.String,System.Boolean)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.Text.RegularExpressions.Regex,System.Boolean,System.Boolean)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.String,System.Boolean,System.Boolean)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CheckingRule.CheckRule(Microsoft.DevApps.WebServices.ArgumentDictionary)">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CheckingRule.MultipleValuesAllowed">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CheckingRule.SwitchRequired">
            <!-- Badly formed XML file "doc\CheckingRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.ArgumentDictionary">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>
                    A "dictionary" strongly typedto the StringCollection class.  
                    It also includes a couple convenience methods which make it more
                    intuitive to retrieve argument values
                    The key is case-insensitive, but the contents are case-sensitive
               </para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.#ctor">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.#ctor(System.Int32)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.Add(System.String,System.Collections.Specialized.StringCollection)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.Add(System.String,System.String)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.Clear">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.Contains(System.String)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.ContainsValue(System.Collections.Specialized.StringCollection)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.CopyTo(System.Array,System.Int32)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.GetArgument(System.String,System.Int32)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.GetArguments(System.String)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.GetEnumerator">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.ArgumentDictionary.Remove(System.String)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.Count">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.IsReadOnly">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.IsFixedSize">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.IsSynchronized">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.Keys">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.SyncRoot">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.Item(System.String)">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.ArgumentDictionary.Values">
            <!-- Badly formed XML file "doc\ArgumentDictionary.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.CommandLineException">
            <!-- Badly formed XML file "doc\CommandLineException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.CommandLineArgumentException">
            <!-- Badly formed XML file "doc\CommandLineArgumentException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandLineArgumentException.#ctor(System.String)">
            <!-- Badly formed XML file "doc\CommandLineArgumentException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandLineArgumentException.#ctor(System.String,System.Exception)">
            <!-- Badly formed XML file "doc\CommandLineArgumentException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandLineException.#ctor(Microsoft.DevApps.WebServices.CommandRule,System.String)">
            <!-- Badly formed XML file "doc\CommandLineException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandLineException.#ctor(Microsoft.DevApps.WebServices.CommandRule,System.String,System.Exception)">
            <!-- Badly formed XML file "doc\CommandLineException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandLineException.OffendingRule">
            <!-- Badly formed XML file "doc\CommandLineException.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.CommandSwitch">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandSwitch.#ctor(System.String,System.String)">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandSwitch.#ctor(System.String,System.String,System.String)">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandSwitch.#ctor(System.String,System.String,System.String,System.String)">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandSwitch.Equals(System.String)">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandSwitch.FancyName">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandSwitch.FindSwitch(System.String,Microsoft.DevApps.WebServices.CommandSwitch[])">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandSwitch.Name">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandSwitch.Abbreviation">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandSwitch.Description">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:Microsoft.DevApps.WebServices.CommandSwitch.ValueName">
            <!-- Badly formed XML file "doc\CommandSwitch.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.AssignmentRule">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.#ctor">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch)">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.#ctor(System.Text.RegularExpressions.Regex)">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.#ctor(System.String)">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.Text.RegularExpressions.Regex)">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.#ctor(Microsoft.DevApps.WebServices.CommandSwitch,System.String)">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.AssignmentRule.AssignDefaults(Microsoft.DevApps.WebServices.ArgumentDictionary)">
            <!-- Badly formed XML file "doc\AssignmentRule.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.HttpSaver">
            <!-- Badly formed XML file "doc\HttpSaver.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpSaver.SaveFile(System.String,System.String,System.String)">
            <!-- Badly formed XML file "doc\HttpSaver.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.WebServiceUtil">
            <!-- Badly formed XML file "doc\WebServiceUtil.uex" cannot be included -->
            <devdoc>
             This class provides support to generate source from an WSDL file.
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.WebServiceUtil.Main(System.String[])">
            <!-- Badly formed XML file "doc\WebServiceUtil.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.HttpGet">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.#ctor(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.#ctor(System.String,System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.OpenUriStreamReader(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.OpenResponseStreamReader(System.Net.WebResponse)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.OpenUriStream(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.HttpMakeRequest(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.MakeFilename(System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.MakeFilename(System.String,System.String)">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.HttpGet.PerformSave">
            <!-- Badly formed XML file "doc\HttpGet.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:Microsoft.DevApps.WebServices.CommandParser">
            <!-- Badly formed XML file "doc\CommandParser.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandParser.AssignUnknowns(Microsoft.DevApps.WebServices.ArgumentDictionary,Microsoft.DevApps.WebServices.AssignmentRule[])">
            <!-- Badly formed XML file "doc\CommandParser.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandParser.CheckRules(Microsoft.DevApps.WebServices.ArgumentDictionary,Microsoft.DevApps.WebServices.CheckingRule[])">
            <!-- Badly formed XML file "doc\CommandParser.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandParser.ParseCommand(System.String[],Microsoft.DevApps.WebServices.CommandSwitch[])">
            <!-- Badly formed XML file "doc\CommandParser.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:Microsoft.DevApps.WebServices.CommandParser.PrintHelp(Microsoft.DevApps.WebServices.CheckingRule[],Microsoft.DevApps.WebServices.CommandSwitch[],System.Boolean)">
            <!-- Badly formed XML file "doc\CommandParser.uex" cannot be included -->
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\tools\x86\managed\urt\v1.0.3705\system.xml.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Xml</name>
  </assembly>
  <members>
    <member name="M:System.Xml.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Xml.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>
        <para>Reads data from any data store using a cursor model.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>
        <para> Creates a new <see langword="XPathNavigator" /> positioned
   at the same node as this <see langword="XPathNavigator" />
   
   .</para>
      </summary>
      <returns>
        <para>A new <see langword="XPathNavigator" /> object positioned at the same node
   as the original <see langword="XPathNavigator" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>
        <para> Gets the value of the attribute with the
      specified <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" /> and <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> .</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The value of the specified attribute; String.Empty if a 
      matching attribute is not found or if the navigator is not positioned on an element node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>
        <para> Moves to the attribute with matching <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" /> and <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />
.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found;
   otherwise, <see langword="false" />. If <see langword="false" />, the position
   of the navigator does not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>
        <para> Moves to the first attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the first attribute; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>
        <para> Moves to the next attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the next attribute;
<see langword="false" /> if there are no more attributes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>
        <para> Returns the value of the namespace node
      corresponding to the specified local name.</para>
      </summary>
      <param name="name">The local name of the namespace node.</param>
      <returns>
        <para>The value of the namespace node; String.Empty if a 
      matching namespace node is not found or if the
      navigator is not positioned on an element node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>
        <para> Moves the
   <see langword="XPathNavigator" /> to the namespace
      node with the specified local name.</para>
      </summary>
      <param name="name">The local name of the namespace node.</param>
      <returns>
        <para>
          <see langword="true" /> if the move was
   successful; <see langword="false" /> if a matching namespace node was not found or
   if the navigator is not positioned on an element node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>
        <para> Moves the
   <see langword="XPathNavigator" /> to first namespace node of the current element.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the
   first namespace node; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>
        <para> Moves the
   <see langword="XPathNavigator" />
   to the next namespace node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the
   next namespace node; otherwise <see langword="false" />. If <see langword="false" />, the position of
   the navigator is unchanged.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>
        <para>Moves the <see langword="XPathNavigator" /> to the first
   namespace node matching the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.</para>
      </summary>
      <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope.</param>
      <returns>
        <para>
          <see langword="true" /> if the navigator is successful moving to the first namespace node; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>
        <para>Moves the <see langword="XPathNavigator" /> to the next namespace node matching
   the <see cref="T:System.Xml.XPath.XPathNamespaceScope" />
   specified. </para>
      </summary>
      <param name="namespaceScope">An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope.</param>
      <returns>
        <para>
          <see langword="true" /> if the navigator is successful moving to the next
   namespace node; otherwise <see langword="false" />. If <see langword="false" />, the
   position of the navigator is unchanged.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>
        <para> Moves to the
      next sibling of the current node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the next sibling node;
<see langword="false" /> if there are no more siblings or if the 
   navigator is currently positioned on an attribute node. If
<see langword="false" /> 
, the position of the navigator is unchanged.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>
        <para> Moves to the
      previous sibling of the current node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the previous sibling node;
<see langword="false" /> if there is no 
   previous sibling or if the navigator is currently positioned on an attribute node. </para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>
        <para> Moves to the
      first sibling of the current node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
   navigator is successful moving to the first sibling node;
<see langword="false" /> if there is no 
   first sibling or if the navigator is currently positioned on an attribute node. </para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>
        <para> Moves to the
      first child of the current node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there is a first child node; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>
        <para> Moves to
      the parent of the current node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there is a parent node; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>
        <para> Moves to the root node
      to which the current node belongs.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para> Moves to the same
      position as the specified <see langword="XPathNavigator" />
      .</para>
      </summary>
      <param name="other">The <see langword="XPathNavigator" /> positioned on the node that you want to move to.</param>
      <returns>
        <para>
          <see langword="true " />if successful; otherwise <see langword="false" />. If <see langword="false" /> , the position of the
   navigator is unchanged.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>
        <para> Moves to the
      node that has an attribute of type ID whose
      value matches the specified string.</para>
      </summary>
      <param name="id">A string representing the ID value of the node to which you want to move. This argument does not need to be atomized.</param>
      <returns>
        <para>
          <see langword="true " />if the move
   was successful; otherwise <see langword="false" />. If
<see langword="false" /> , the position of the navigator is unchanged.</para>
        <note type="note">
   If the navigator is implemented over
   an <see cref="T:System.Xml.XmlDataDocument" />, this method always returns <see langword="false" />
   and the position of the navigator is not changed.
</note>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para> Determines whether
      the current <see langword="XPathNavigator" /> is at the same position as the
      specified <see langword="XPathNavigator" />
      .</para>
      </summary>
      <param name="other">The <see langword="XPathNavigator" /> that you want to compare against.</param>
      <returns>
        <para>
          <see langword="true" /> if the two navigators have the
   same position; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>
        <para> Compiles a string representing an XPath expression and returns
      an <see cref="T:System.Xml.XPath.XPathExpression" />
      .</para>
      </summary>
      <param name="xpath">A string representing an XPath expression.</param>
      <returns>
        <para>An <see langword="XPathExpression" /> object representing
   the XPath expression.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>
        <para>Evaluates the <see cref="T:System.Xml.XPath.XPathExpression" /> and returns the typed result (number, Boolean,
   string, or node set). Use the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> to iterate over a set of
   nodes.</para>
      </summary>
      <param name="expr">An <see langword="XPathExpression" /> that can be evaluated.</param>
      <returns>
        <para>The result of the expression.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>
        <para>Evaluates the <see cref="T:System.Xml.XPath.XPathExpression" /> using the supplied context and returns the
   typed result (number, Boolean, string, or node set).</para>
      </summary>
      <param name="expr">An <see langword="XPathExpression" /> that can be evaluated.</param>
      <param name=" context">An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected node set that the evaluation is to be performed on.</param>
      <returns>
        <para>The result of the expression.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>
        <para>Evaluates the string representing an XPath expression and
      returns the typed result (number, Boolean, string, or node set). Use
      the <see cref="T:System.Xml.XPath.XPathNodeIterator" />
      to iterate over a set of nodes.</para>
      </summary>
      <param name="xpath">A string representing an XPath expression that can be evaluated.</param>
      <returns>
        <para>The result of the expression.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>
        <para>Determines whether the current node matches the
      specified <see cref="T:System.Xml.XPath.XPathExpression" />
      .</para>
      </summary>
      <param name="expr">An <see langword="XPathExpression" /> encapsulating a compiled XSLT pattern.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   current node matches the <see langword="XPathExpression" />
   ; otherwise,
<see langword="false" />
.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>
        <para>Determines whether the current node matches the
      specified XSLT pattern.</para>
      </summary>
      <param name="xpath">A string representing an XSLT pattern.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   current node matches the XSLT pattern; otherwise,
<see langword="false" />
.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>
        <para>Selects a node set using the specified <see cref="T:System.Xml.XPath.XPathExpression" />
.</para>
      </summary>
      <param name="expr">An <see langword="XPathExpression" /> .</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the
   selected node set.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>
        <para>Selects a node set using the specified XPath expression.</para>
      </summary>
      <param name="xpath">A string representing an XPath expression.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the
   selected node set.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>
        <para> Selects all the child nodes of the current node
      with the matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</para>
      </summary>
      <param name="type">The <see langword="XPathNodeType" /> of the child nodes.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>
        <para>Selects all the child element nodes of the current node
      with the supplied local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the child nodes.</param>
      <param name=" namespaceURI">The namespace URI of the child nodes.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>
        <para> Selects all the descendant nodes of the current
      node with the matching <see cref="T:System.Xml.XPath.XPathNodeType" /> .</para>
      </summary>
      <param name="type">The <see langword="XPathNodeType" /> of the descendant nodes.</param>
      <param name=" matchSelf">
        <see langword="true" /> to include the context node in the selection; otherwise <see langword="false" /> .</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>
        <para>Selects all the descendant element nodes of the current
      node with the supplied local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the descendant nodes.</param>
      <param name=" namespaceURI">The namespace URI of the descendant nodes.</param>
      <param name=" matchSelf">
        <see langword="true" /> to include the context node in the selection; otherwise <see langword="false" /> .</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>
        <para>Selects all the ancestor element nodes of the current
      node with the matching <see cref="T:System.Xml.XPath.XPathNodeType" /> .</para>
      </summary>
      <param name="type">The <see langword="XPathNodeType" /> of the ancestor nodes.</param>
      <param name=" matchSelf">
        <see langword="true" /> to include the context node in the selection; otherwise <see langword="false" /> .</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>
        <para>Selects all the ancestor element nodes of the current
      node with the supplied local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the ancestor nodes.</param>
      <param name=" namespaceURI">The namespace URI of the ancestor nodes.</param>
      <param name=" matchSelf">
        <see langword="true" /> to include the context node in the selection; otherwise <see langword="false" /> .</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para> Compares the position of the current navigator with the
      position of the specified <see langword="XPathNavigator" /> .</para>
      </summary>
      <param name="nav">The <see langword="XPathNavigator" /> to compare against.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeOrder" /> value representing the comparative position of the
   two navigators. The following table describes the <see langword="XmlNodeOrder" />
   enumeration.</para>
        <list type="table">
          <listheader>
            <term>XmlNodeOrder</term>
            <description>Description</description>
          </listheader>
          <item>
            <term> Before</term>
            <description>
              <para> The current node of this navigator is before the current node
            of the supplied navigator.</para>
            </description>
          </item>
          <item>
            <term> After</term>
            <description>
              <para> The current node of this navigator is after the current node of
               the supplied navigator.</para>
            </description>
          </item>
          <item>
            <term> Same</term>
            <description>
              <para> The two navigators are positioned
                  on the same node.</para>
            </description>
          </item>
          <item>
            <term> Unknown</term>
            <description>
              <para>The node positions cannot be determined in document order, relative to
                     each other. This could occur if the two nodes reside in different
                     trees.</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para>Determines whether the specified
 <see langword="XPathNavigator" /> is a descendant of the current
 <see langword="XPathNavigator" />.</para>
      </summary>
      <param name="nav">The <see langword="XPathNavigator" /> that you want to compare against. </param>
      <returns>
        <para>
          <see langword="true" /> if <paramref name="nav" />
is a descendant of the current navigator; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>
        <para>Gets the text value of the current node. This
      method is equivalent to returning the <see cref="P:System.Xml.XPath.XPathNavigator.Value" /> property.</para>
      </summary>
      <returns>
        <para>The content returned depends on the <see cref="P:System.Xml.XPath.XPathNavigator.NodeType" /> of the node. </para>
        <list type="table">
          <listheader>
            <term>Node Type</term>
            <description>Value</description>
          </listheader>
          <item>
            <term> Attribute</term>
            <description>The value of the attribute.</description>
          </item>
          <item>
            <term> Element</term>
            <description>The <see cref="P:System.Xml.XmlNode.InnerText" /> of the element.</description>
          </item>
          <item>
            <term> Comment</term>
            <description>The content of the comment.</description>
          </item>
          <item>
            <term> ProcessingInstruction</term>
            <description>The entire content excluding the target.</description>
          </item>
          <item>
            <term> Text</term>
            <description>
              <para>The content of the text node.</para>
            </description>
          </item>
          <item>
            <term> Whitespace</term>
            <description>The white space between mark-up.</description>
          </item>
          <item>
            <term> SignificantWhitespace</term>
            <description>The white space between markup in a mixed content 
      model or white space within an xml:space= 'preserve' scope.</description>
          </item>
          <item>
            <term> Root</term>
            <description>The <see cref="P:System.Xml.XmlNode.InnerText" /> of the root 
   node.</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>
        <para> Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>
        <para> Gets the name of the current node without the namespace prefix.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>
        <para> Gets the namespace URI (as defined in the W3C Namespace Specification) of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>
        <para> Gets the qualified name of
      the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>
        <para> Gets the prefix associated with
      the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Value">
      <summary>
        <para> Gets the text value of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>
        <para> Gets the base URI for the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>
        <para> Gets the
   <see langword="xml:lang" /> scope for the
      current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>
        <para> Gets a value indicating whether
      the current
      node is an empty element (for example, &lt;MyElement/&gt;).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>
        <para> Gets
      the <see cref="T:System.Xml.XmlNameTable" />
      associated with this implementation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>
        <para> Gets a
      value indicating whether the element node has any attributes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>
        <para> Gets a value indicating whether
      the current node has child nodes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>
        <para>Enables a class to return an <see cref="T:System.Xml.XmlNode" /> from the
   current context or position.</para>
      </summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>
        <para>Returns the <see cref="T:System.Xml.XmlNode" /> for the current position.</para>
      </summary>
      <returns>
        <para>The <see langword="XmlNode" /> for the
   current position.</para>
      </returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>
        <para> Provides an iterator over a set of selected nodes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>
        <para>When overridden in a derived class, creates a new
   <see langword="XPathNodeIterator" />.</para>
      </summary>
      <returns>
        <para>A new
   <see langword="XPathNodeIterator" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>
        <para>When overridden in a derived class, moves
      the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next node in the selected set.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the
<see langword="XPathNavigator" /> moved to the next node; 
<see langword="false" /> if there are no more selected nodes.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>
        <para>When overridden in a derived class, returns the
      navigator for this <see langword="XPathNodeIterator" /> positioned on the current
      node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>
        <para>When overridden in a derived class, gets the index of the current position in the selected
      set of nodes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>
        <para>Gets the index of the last node in the selected set of nodes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>
        <para>Specifies how entities are handled.</para>
      </summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>
        <para> Expands all entities. This is the default.
 </para>
        <para> Entity reference nodes (<see cref="P:System.Xml.XmlValidatingReader.NodeType" />= XmlNodeType.EntityReference) are not returned. The entity text is
 expanded in place of the entity references.
 </para>
      </summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>
        <para>Expands character entities and returns general entities
      as nodes (<see cref="P:System.Xml.XmlValidatingReader.NodeType" />=XmlNodeType.EntityReference, <see cref="P:System.Xml.XmlValidatingReader.Name" />=the name of the entity, <see cref="P:System.Xml.XmlValidatingReader.HasValue" />
      =
      false).</para>
        <para>You must call <see cref="M:System.Xml.XmlReader.ResolveEntity" /> to see what the general entities expand to. This
   enables you to optimize entity handling by only expanding the entity the
   first time it is used.</para>
        <para>When set to ExpandCharEntities, a reader call to the <see cref="M:System.Xml.XmlReader.GetAttribute(System.String)" />
method expands all entities
(both general and character entities).</para>
      </summary>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>
        <para>Provides an interface to enable a class to return line and position information.</para>
      </summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>
   Gets a value indicating whether the class can return
   line information.
</summary>
      <returns>
        <see langword="true" /> if <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> can be provided; otherwise, <see langword="false" />.
</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>
        <para>Gets the current line number.</para>
      </summary>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>
        <para>Gets the current line position.</para>
      </summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>
        <para>Implements a single-threaded <see cref="T:System.Xml.XmlNameTable" /> .</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>
        <para> Table of atomized string objects.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>When overridden in a derived class, gets the atomized 
      string containing the
      same characters as the specified range of characters in the given array.</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</para>
      </summary>
      <param name="array">The character array containing the name to look up.</param>
      <param name="offset">The zero-based index into the array specifying the first character of the name.</param>
      <param name="length">The number of characters in the name.</param>
      <returns>
        <para> The atomized string or <see langword="null" /> if the
   string has not already been atomized. If <paramref name="length" /> is zero,
   String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>
        <para>When overridden in a derived class, gets the atomized 
      string containing the same
      value as the specified string.</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</para>
      </summary>
      <param name="array">The name to look up.</param>
      <returns>
        <para>The atomized string or <see langword="null" /> if the
   string has not already been atomized.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>When overridden in a derived class, atomizes the 
      specified string and adds it to the <see langword="XmlNameTable" />.</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</para>
      </summary>
      <param name="array">The character array containing the name to add.</param>
      <param name="offset">Zero based index into the array specifying the first character of the name.</param>
      <param name="length">The number of characters in the name.</param>
      <returns>
        <para>The new atomized string or the existing one if it
      already exists. If length is zero, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>
        <para>When overridden in a derived class, atomizes the
      specified string and adds it to the <see langword="XmlNameTable" /> .</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</para>
      </summary>
      <param name="array">The name to add.</param>
      <returns>
        <para>The new atomized string or the existing one if it already
      exists.</para>
      </returns>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>
        <para>Initializes a new instance of the 
 <see langword="NameTable" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>
        <para> Atomizes the specified string and adds it to the
   <see langword="NameTable" />
   .</para>
        <para> For more information on atomized strings, see <see cref="T:System.Xml.NameTable" />
.</para>
      </summary>
      <param name="key">The string to add.</param>
      <returns>
        <para>The atomized string or the existing string if it already
      exists in the <see langword="NameTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Atomizes the specified string and adds it to the
   <see langword="NameTable" />
   .</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.NameTable" />.</para>
      </summary>
      <param name="key">The character array containing the string to add.</param>
      <param name="start">The zero-based index into the array specifying the first character of the string.</param>
      <param name="len">The number of characters in the string.</param>
      <returns>
        <para>The atomized string or the existing string if one already
      exists in the <see langword="NameTable" />
      . If <paramref name="len" /> is zero, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>
        <para> Gets the atomized string with the specified
      value.</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.NameTable" /> 
.</para>
      </summary>
      <param name="value">The name to find.</param>
      <returns>
        <para>The atomized string object or
   <see langword="null" /> if the string has not already been atomized.</para>
      </returns>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>Gets the atomized string
      containing the same characters as the specified range of characters in the given
      array.</para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.NameTable" />.</para>
      </summary>
      <param name="key">The character array containing the name to find.</param>
      <param name="start">The zero-based index into the array specifying the first character of the name.</param>
      <param name="len">The number of characters in the name.</param>
      <returns>
        <para>The atomized string or <see langword="null" /> if the
   string has not already been atomized. If <paramref name="len" /> is zero,
   String.Empty is returned.</para>
      </returns>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>
        <para>Specifies the state of the reader.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>
        <para>The <see langword="Read" /> method has not been called.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>
        <para>The <see langword="Read" /> method 
 has been called. Additional methods may be called on the reader.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>
    An error occurred that prevents the
    read operation from continuing.
 </summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>
        <para>The end of the file has been reached
      successfully.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>
        <para>The <see cref="M:System.Xml.XmlReader.Close" /> method has been called.</para>
      </summary>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>
        <para>Specifies the type of validation to perform.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>
        <para>Creates an XML 1.0 compliant non-validating parser. 
      Default attributes are reported and general entities can be resolved by calling
   <see cref="M:System.Xml.XmlValidatingReader.ResolveEntity" />
   . The DOCTYPE is not used
   for validation purposes.</para>
        <para> No validation
   errors are thrown.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>
        <see cref="T:System.Xml.XmlValidatingReader" />validates if DTD or 
   schema information is found.
</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>
        <para>Validates according to the DTD.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>
        <para> Validate according to XDR schemas; including inline
 schemas. XDR schemas are recognized using the <see langword="x-schema" />
 namespace prefix
 or the <see cref="P:System.Xml.XmlValidatingReader.Schemas" />
 property.</para>
      </summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>
        <para> Validate according to XSD schemas; including inline
 schemas. XSD schemas are associated with namespace URIs either by using the
 <see langword="schemaLocation" />
 attribute or the provided <see cref="P:System.Xml.XmlValidatingReader.Schemas" />
 property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>
        <para> Specifies how white space is handled.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>
        <para>Return <see langword="Whitespace" /> and 
<see langword="SignificantWhitespace" /> 
nodes. This is the default.</para>
      </summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>
        <para> Return <see langword="SignificantWhitespace" /> nodes only.
   </para>
      </summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>
        <para>Return no <see langword="Whitespace" /> and no 
<see langword="SignificantWhitespace" /> 
nodes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>
        <para> Represents an attribute. Valid and default values for the attribute are defined in a DTD or schema.
      </para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>
        <para> Represents a single node in the XML document.
      </para>
      </summary>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>
        <para>Provides an accessor to the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>
        <para>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> for this
<see langword="IXPathNavigable" /> interface.</para>
      </summary>
      <returns>
        <para>An <see langword="XPathNavigator" />
object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this object.</para>
      </summary>
      <returns>
        <para>An <see langword="XPathNavigator" />
object. The <see langword="XPathNavigator" /> is positioned on the node from
which the method was called. It is not positioned on the root of the
document.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>
        <para>Selects the first <see langword="XmlNode" /> that matches the
   XPath expression.</para>
      </summary>
      <param name="xpath">The XPath expression.</param>
      <returns>
        <para>The first <see langword="XmlNode" /> that matches the
   XPath query or <see langword="null" /> if no matching node was found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>
        <para>Selects the first <see langword="XmlNode" /> that matches the XPath
   expression. Any prefixes found in the XPath expression are resolved using the supplied <see cref="T:System.Xml.XmlNamespaceManager" />
   .</para>
      </summary>
      <param name="xpath">The XPath expression.</param>
      <param name=" nsmgr">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</param>
      <returns>
        <para>The first <see langword="XmlNode" />
that matches the XPath query or <see langword="null" /> if no matching node was
found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>
        <para>Selects a list of nodes matching the XPath
      expression.</para>
      </summary>
      <param name="xpath">The XPath expression.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes
   matching the XPath query.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>
        <para>Selects a list of nodes matching the XPath expression.
      Any prefixes found in the XPath expression are resolved using the supplied
   <see cref="T:System.Xml.XmlNamespaceManager" /> .</para>
      </summary>
      <param name="xpath">The XPath expression.</param>
      <param name=" nsmgr">An <see cref="T:System.Xml.XmlNamespaceManager" /> to use for resolving namespaces for prefixes in the XPath expression.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeList" /> containing a collection of nodes matching the XPath
   query.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
        <para>Inserts the specified node immediately before the specified reference node.</para>
      </summary>
      <param name="newChild">The <see langword="XmlNode" /> to insert.</param>
      <param name="refChild">The <see langword="XmlNode" /> that is the reference node. The <paramref name="newChild" /> is placed before this node.</param>
      <returns>
   The node being inserted.
</returns>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
        <para>Inserts the specified node immediately after the specified reference node.</para>
      </summary>
      <param name="newChild">The <see langword="XmlNode" /> to insert.</param>
      <param name="refChild">The <see langword="XmlNode" /> that is the reference node. The <paramref name="newNode" /> is placed after the <paramref name="refNode" /> .</param>
      <returns>
   The node being inserted.
</returns>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>
        <para>Replaces the child node <paramref name="oldChild" />
with <paramref name="newChild" /> node.</para>
      </summary>
      <param name="newChild">The new node to put in the child list.</param>
      <param name="oldChild">The node being replaced in the list.</param>
      <returns>
        <para>The node replaced.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>
        <para>Removes specified child node.</para>
      </summary>
      <param name="oldChild">The node being removed.</param>
      <returns>
        <para>The node removed.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>
        <para>Adds the specified node to the beginning of the list of children of
      this node.</para>
      </summary>
      <param name="newChild">The node to add. If it is an <see cref="T:System.Xml.XmlDocumentFragment" /> , the entire contents of the document fragment are moved into the child list of this node.</param>
      <returns>
        <para>The node added.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>
        <para>Adds the specified node to the end of the list of children of
      this node.</para>
      </summary>
      <param name="newChild">The node to add. If it is a <see cref="T:System.Xml.XmlDocumentFragment" /> , the entire contents of the document fragment are moved into the child list of this node.</param>
      <returns>
        <para>The node added.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>
        <para>When overridden in a derived class, creates a duplicate of the node.</para>
      </summary>
      <param name="deep">
        <see langword="true" />to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>
        <para> Puts all XmlText nodes in the full depth of the sub-tree underneath
      this XmlNode into a "normal" form where only markup
      (that is, tags, comments, processing instructions, CDATA sections,
      and entity references) separates XmlText nodes, that is, there
      are no adjacent XmlText nodes.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>
        <para> Test if the DOM implementation implements a specific feature.
      </para>
      </summary>
      <param name="feature">The package name of the feature to test. This name is case-insensitive. </param>
      <param name="version">This is the version number of the package name to test. If the version is not specified (null), supporting any version of the feature will cause the method to return true. </param>
      <returns>
        <para>
          <see langword="true" /> if the feature is implemented in the specified version;
   otherwise, <see langword="false" />.
   </para>
The following table describes the combinations that
return <see langword="true" />.
<list type="table"><listheader><term> Feature</term><description> Version</description></listheader><item><term> XML</term><description> 1.0</description></item><item><term> XML</term><description>2.0</description></item></list></returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>
        <para> Provides support for the for each style iteration over
      the nodes in the <see langword="XmlNode" />
      .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>When overridden in a derived class, saves the current node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>When overridden in a derived class, saves all the children of the node to the specified
   <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>
        <para>Removes all the children and/or attributes
      of the current node.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>
        <para>Looks up the closest xmlns declaration for the given
      prefix that is in scope for the current node and returns
      the namespace URI in the declaration.</para>
      </summary>
      <param name="prefix">Prefix whose namespace URI you want to find</param>
      <returns>
        <para>The namespace URI of the specified prefix.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>
        <para>Looks up the closest xmlns declaration for the given namespace
      URI that is in scope for the current node and returns
      the prefix defined in that declaration.</para>
      </summary>
      <param name="namespaceURI">Namespace URI whose prefix you want to find</param>
      <returns>
        <para>The prefix for the specified namespace URI.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>
        <para>When overridden in a derived class, gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>
        <para>When overridden in a derived class, gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>
        <para>Gets the parent of this node (for nodes that can have
      parents).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>
        <para>Gets all the children of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>
        <para>Gets
      the node immediately preceding this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>
        <para>Gets
      the node immediately following this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>
        <para>Gets an <see cref="T:System.Xml.XmlAttributeCollection" />
containing the attributes
of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>
        <para>Gets the first child of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>
        <para>Gets the last child of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>
        <para>Gets a value indicating whether this node has any child nodes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>
        <para>Gets the namespace URI of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>
        <para>Gets or sets the namespace prefix of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>
        <para> When overridden in a derived class, gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>
        <para> Gets a value indicating whether the node is read-only.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>
        <para>Gets or sets the concatenated values of the node and
      all its children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>
        <para>Gets the markup
      representing this node and all its children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>
        <para>Gets or sets the markup representing
      just the children of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>
        <para>Gets the base URI of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>
        <para> Gets the first child element with the specified
   <see cref="P:System.Xml.XmlNode.Name" /> .</para>
      </summary>
      <param name="name">The qualified name of the element to retrieve</param>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>
        <para> Gets the first child element with the
      specified <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
      .</para>
      </summary>
      <param name="localname">The local name of the element.</param>
      <param name=" ns">The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself </param>
      <returns>
        <para>The duplicate node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified 
   <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>
   Gets the parent of this node. For
<see langword="XmlAttribute" /> nodes, this property always returns 
<see langword="null" />.
</summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>
        <para>Gets the namespace URI of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>
        <para>Gets or sets the namespace prefix of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>
        <para>Gets or sets the concatenated values of the node and all
      its children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>
        <para>Gets a value indicating whether the attribute value was
      explicitly set.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlElement" /> to which the attribute
   belongs.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>
        <para> Gets or sets the markup representing
      the children of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>
        <para>Gets the base URI of the node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>
        <para>
       Represents a collection of attributes that can be accessed by name or
       index.
    </para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>
        <para>
       Represents a
       collection of nodes that can be accessed by name or index.
    </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>
        <para>Retrieves an <see cref="T:System.Xml.XmlNode" />
specified by name.</para>
      </summary>
      <param name="name">The qualified name of the node to retrieve. It is matched against the <see cref="P:System.Xml.XmlNode.Name" /> property of the matching node.</param>
      <returns>
        <para>An <see langword="XmlNode" /> with 
   the specified name or <see langword="null" /> if a matching node is
   not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>
        <para>Adds an <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</para>
      </summary>
      <param name="node">An <see langword="XmlNode" /> to store in the <see langword="XmlNamedNodeMap" /> . If a node with that name is already present in the map, it is replaced by the new one.</param>
      <returns>
        <para>If the <paramref name="node" /> replaces an
   existing node with the same name, the old node is returned;
   otherwise, <see langword="null" />
   is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>
        <para>Removes the node from the
   <see langword="XmlNamedNodeMap" /> .</para>
      </summary>
      <param name="name">The qualified name of the node to remove. The name is matched against the <see cref="P:System.Xml.XmlNode.Name" /> property of the matching node.</param>
      <returns>
        <para>The <see langword="XmlNode" /> removed from this
<see langword="XmlNamedNodeMap" /> or <see langword="null" /> if a 
   matching node was
   not found. </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>
        <para>Retrieves the node at the specified index in the
   <see langword="XmlNamedNodeMap" />
   .</para>
      </summary>
      <param name="index">The index position of the node to retrieve from the <see langword="XmlNamedNodeMap" /> . The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
      <returns>
        <para>The <see cref="T:System.Xml.XmlNode" /> at the specified index. If <paramref name="index" /> is less than 0 or
   greater than or equal to the <see cref="P:System.Xml.XmlNamedNodeMap.Count" />
   property, <see langword="null" /> is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>
        <para>Retrieves a node with the matching <see cref="P:System.Xml.XmlNode.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
.</para>
      </summary>
      <param name="localName">The local name of the node to retrieve.</param>
      <param name=" namespaceURI">The namespace URI of the node to retrieve.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNode" /> with 
   the matching local name and namespace URI or <see langword="null" /> if a
   matching node was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>
        <para> Removes a node with the matching <see cref="P:System.Xml.XmlNode.LocalName" />
and <see cref="P:System.Xml.XmlNode.NamespaceURI" /> .</para>
      </summary>
      <param name="localName">The local name of the node to remove.</param>
      <param name=" namespaceURI">The namespace URI of the node to remove.</param>
      <returns>
        <para>The <see cref="T:System.Xml.XmlNode" /> removed or
<see langword="null" /> if a matching node was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>
        <para>Provides support for the "foreach" style iteration over 
      the collection of nodes in the <see langword="XmlNamedNodeMap" />
      .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> .</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>
        <para>Gets the number of nodes in the
   <see langword="XmlNamedNodeMap" /> .</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>
        <para>Adds a <see cref="T:System.Xml.XmlNode" /> using its <see cref="P:System.Xml.XmlNode.Name" /> property</para>
      </summary>
      <param name="node">An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</param>
      <returns>
        <para>If the <paramref name="node" /> replaces an 
   existing node with the same name, the old node is returned; otherwise, the added
   node
   is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>
        <para>Inserts the specified attribute as the first node in the collection.</para>
      </summary>
      <param name="node">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</param>
      <returns>
        <para>The <see langword="XmlAttribute" />
added to the collection.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>
        <para>Inserts the specified attribute as the last node in the collection.</para>
      </summary>
      <param name="node">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</param>
      <returns>
        <para>The <see langword="XmlAttribute" /> to
   append to the collection.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>
        <para>Inserts the specified attribute immediately before the specified reference attribute.</para>
      </summary>
      <param name="newNode">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</param>
      <param name="refNode">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute. <paramref name="newNode" /> is placed before the <paramref name="refNode" /> .</param>
      <returns>
        <para>The <see langword="XmlAttribute" /> to insert into the
   collection.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>
        <para>Inserts the specified attribute immediately after the specified reference attribute.</para>
      </summary>
      <param name="newNode">The <see cref="T:System.Xml.XmlAttribute" /> to insert.</param>
      <param name="refNode">The <see cref="T:System.Xml.XmlAttribute" /> that is the reference attribute. <paramref name="newNode" /> is placed after the <paramref name="refNode" /> .</param>
      <returns>
        <para>The <see langword="XmlAttribute" /> to
   insert into the collection.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>
        <para> Removes the specified attribute from the collection.</para>
      </summary>
      <param name="node">The <see cref="T:System.Xml.XmlAttribute" /> to remove.</param>
      <returns>
        <para>The node removed
      or <see langword="null" /> if it is not found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the attribute corresponding to the specified index from the collection.</para>
      </summary>
      <param name="i">The index of the node to remove. The first node has index 0.</param>
      <returns>
        <para>Returns <see langword="null" /> if
   there is no attribute at the specified index.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>
        <para>Removes all attributes from the collection.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>
        <para> Copies all the <see cref="T:System.Xml.XmlAttribute" /> objects from
   this collection into the given array.</para>
      </summary>
      <param name="array">The array that is the destination of the objects copied from this collection.</param>
      <param name=" index">The index in <paramref name="array" /> where copying begins. </param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>
        <para>Gets the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>
        <para>Gets the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>
        <para>Gets the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>
 Represents a CDATA section.
</summary>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>
   Provides text manipulation methods that are used by
   several classes.
</summary>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>
        <para>Gets the node immediately preceding or following this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>
        <para>Gets the node immediately preceding this
      node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>
        <para>Gets the node immediately following this
      node.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>
        <para> Retrieves a substring, of the full string, from the specified range.
      </para>
      </summary>
      <param name="offset">The position within the string to start retrieving. An offset of zero indicates the starting point is at the start of the data. </param>
      <param name=" count">The number of characters to retrieve. </param>
      <returns>
   The substring corresponding to the
   specified range.
</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>
        <para> Appends the specified string to the end of the character
      data of the node.
      </para>
      </summary>
      <param name="strData">The string to insert into the existing string. </param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>
        <para> Insert the specified string at the specified character offset.
      </para>
      </summary>
      <param name="offset">The position within the string to insert the supplied string data. </param>
      <param name="strData">The string data that is to be inserted into the existing string. </param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>
        <para>Remove a range of characters from the node.</para>
      </summary>
      <param name="offset">The position within the string to start deleting. </param>
      <param name=" count">The number of characters to delete. </param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>
        <para>Replace the specified number of characters starting at the specified offset with the
      specified string.</para>
      </summary>
      <param name="offset">The position within the string to start replacing. </param>
      <param name=" count">The number of characters to replace. </param>
      <param name="strData">The new data that replaces the old string data. </param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>
        <para> Gets or sets the concatenated values of the node and all the children
      of the node.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>
        <para> Contains the data of the node.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>
        <para>Gets the length of the data, in characters.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. Because CDATA nodes do not have children, regardless of the parameter setting, the cloned node will always include the data content .</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the children of the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>
        <para>Represents an ordered collection of nodes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>
        <para>Retrieves a node at the given index.</para>
      </summary>
      <param name="index">Zero-based index into the list of nodes.</param>
      <returns>
        <para>The <see cref="T:System.Xml.XmlNode" /> in the collection. If <paramref name="index" /> is greater
   than or equal to the number of nodes in the list, this returns
<see langword="null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>
        <para>Provides a simple "foreach" style iteration over the 
      collection of nodes in the <see langword="XmlNodeList" />
      .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> .</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>
        <para>Gets the number of nodes in the 
   <see langword="XmlNodeList" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>
        <para>Retrieves a node at the given index.</para>
      </summary>
      <param name="i">Zero-based index into the list of nodes.</param>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>
        <para> Represents the content of an XML comment.
 </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. Because comment nodes do not have children, the cloned node always includes the text content, regardless of the parameter setting.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified
   <see cref="T:System.Xml.XmlWriter" /> . Because comment 
      nodes do not have children this method has no effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>
        <para>Encodes and decodes XML names and provides methods for
      converting between common language runtime types and XML Schema definition
      language (XSD) types. When converting data types the values returned are locale independent.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>
        <para> Converts the
      name to a valid XML name.</para>
      </summary>
      <param name="name">A name to be translated.</param>
      <returns>
        <para>Returns the name with any invalid characters replaced by
      an escape string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>
        <para> Verifies the
      name is valid according to the XML specification.</para>
      </summary>
      <param name="name">The name to be encoded.</param>
      <returns>
        <para>The encoded name.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>
        <para> Converts the name to a valid XML local name.</para>
      </summary>
      <param name="name">The name to be encoded.</param>
      <returns>
        <para>The encoded name.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>
        <para> Decodes a name. This method does the reverse of
      the <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> and <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> methods.</para>
      </summary>
      <param name="name">The name to be transformed.</param>
      <returns>
        <para>The decoded name.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>
        <para> Verifies that the name is a valid name according
      to the W3C Extended Markup Language recommendation.</para>
      </summary>
      <param name="name">The name to verify.</param>
      <returns>
        <para>The name, if it is a valid XML name.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>
        <para>Verifies that the name is a valid NCName according to
      the W3C Extended Markup Language recommendation.</para>
      </summary>
      <param name="name">The name to verify.</param>
      <returns>
        <para>The name, if it is a valid NCName.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>
        <para>Converts the <see cref="T:System.Boolean" /> to a <see cref="T:System.String" />.</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the <see langword="Boolean" />,
   that is, "true" or "false".</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>
        <para>Converts the <see cref="T:System.Char" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the <see langword="Char" /> 
.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>
        <para>Converts the <see cref="T:System.Decimal" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the 
   <see langword="Decimal" /> 
   .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>
        <para>Converts the <see cref="T:System.SByte" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="SByte" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>
        <para>Converts the <see cref="T:System.Int16" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="Int16" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>
        <para>Converts the <see cref="T:System.Int32" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
      <see langword="Int32" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>
        <para>Converts the <see cref="T:System.Int64" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="Int64" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>
        <para>Converts the <see cref="T:System.Byte" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="Byte" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>
        <para>Converts the <see cref="T:System.UInt16" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="UInt16" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>
        <para>Converts the <see cref="T:System.UInt32" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="UInt32" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>
        <para>Converts the <see cref="T:System.UInt64" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
   A string representation of the
<see langword="UInt64" />.
</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>
        <para>Converts the <see cref="T:System.Single" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="Single" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>
        <para>Converts the <see cref="T:System.Double" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="Double" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>
        <para>Converts the <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="TimeSpan" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>
        <para>Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
   <see langword="DateTime" /> in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>
        <para>Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <param name=" format">The format structure that defines how to display the converted string. Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets. </param>
      <returns>
   A string representation of the
<see langword="DateTime" /> in the specified format.
</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>
        <para>Converts the <see cref="T:System.Guid" /> to a <see cref="T:System.String" /> .</para>
      </summary>
      <param name="value">The value to convert.</param>
      <returns>
        <para>A string representation of the
      <see langword="Guid" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Boolean" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Boolean" /> value, 
   that is,
<see langword="true" /> or <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Char" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Char" /> representing
   the first character in the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Decimal" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Decimal" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.SByte" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>An <see langword="SByte" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int16" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>An <see langword="Int16" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int32" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>An <see langword="Int32" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int64" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>An <see langword="Int64" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Byte" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Byte" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt16" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="UInt16" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt32" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="UInt32" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt64" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="UInt64" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Single" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Single" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Double" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Double" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="TimeSpan" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="DateTime" />
equivalent of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <param name=" format">The format structure to apply to the converted <see langword="DateTime" />. Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets. The string is validated against this format.</param>
      <returns>
   A <see langword="DateTime" /> equivalent
   of the string.
</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <param name=" formats">An array containing the format structures to apply to the converted <see langword="DateTime" /> . Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</param>
      <returns>
        <para>A <see langword="DateTime" /> equivalent
   of the string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> to a <see cref="T:System.Guid" /> equivalent.</para>
      </summary>
      <param name="s">The string to convert.</param>
      <returns>
        <para>A <see langword="Guid" /> 
equivalent of the string.</para>
      </returns>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>
        <para>Represents the XML declaration node: &lt;?xml version='1.0' ...?&gt;. </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. Because <see langword="XmlDeclaration" /> nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para> Saves the children of the node to the specified 
   <see cref="T:System.Xml.XmlWriter" /> .</para>
        <para>Because <see langword="XmlDeclaration" /> nodes 
   do not have children, this method has no effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>
        <para> Gets the
      XML version of the document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>
        <para>Gets or sets the encoding level of the XML
      document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>
        <para>Gets or sets the value of the standalone attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>
        <para>Gets or sets the value of the
 <see langword="XmlDeclaration" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>
        <para> Gets or sets the concatenated values of the
 <see langword="XmlDeclaration" />
 .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>
        <para> Represents an XML
 document.
 </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlDocument" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>
        <para>Initializes a new instance of the 
   <see langword="XmlDocument" /> class with the specified <see cref="T:System.Xml.XmlNameTable" /> 
   .</para>
      </summary>
      <param name="nt">The <see langword="XmlNameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>
        <para>Initializes a new instance of the <see langword="XmlDocument" /> class with the 
   specified <see cref="T:System.Xml.XmlImplementation" /> .</para>
      </summary>
      <param name="imp">The <see langword="XmlImplementation" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" />to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The cloned <see langword="XmlDocument" /> node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlDocument.Name" /> .</para>
      </summary>
      <param name="name">The qualified name of the attribute. If the name contains a colon, the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the first colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name following the first colon. The <see cref="P:System.Xml.XmlNode.NamespaceURI" /> remains empty unless the prefix is a recognized built-in prefix such as xmlns. In this case <see langword="NamespaceURI" /> has a value of http://www.w3.org/2000/xmlns/ . </param>
      <returns>
        <para>The new <see langword="XmlAttribute" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlCDataSection" /> containing the specified data.</para>
      </summary>
      <param name="data">The content of the new <see langword="XmlCDataSection" /> .</param>
      <returns>
        <para>The new <see langword="XmlCDataSection" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlComment" /> containing the specified data.</para>
      </summary>
      <param name="data">The content of the new <see langword="XmlComment" /> .</param>
      <returns>
        <para>The new <see langword="XmlComment" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Returns a new <see cref="T:System.Xml.XmlDocumentType" /> object.</para>
      </summary>
      <param name="name">Name of the document type.</param>
      <param name="publicId">The public identifier of the document type or <see langword="null" /> .</param>
      <param name="systemId">The system identifier of the document type or <see langword="null" /> .</param>
      <param name="internalSubset">The DTD internal subset of the document type or <see langword="null" /> .</param>
      <returns>
        <para>The new <see langword="XmlDocumentType" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlDocumentFragment" /> .</para>
      </summary>
      <returns>
        <para>The new <see langword="XmlDocumentFragment" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>
        <para>Creates an element with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the element. If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property reflects the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property reflects the part of the name after the colon. The qualified name cannot include a prefix of'xmlns'.</param>
      <returns>
        <para>The new <see langword="XmlElement" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</para>
      </summary>
      <param name="name">The name of the entity reference.</param>
      <returns>
        <para>The new <see langword="XmlEntityReference" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlProcessingInstruction" /> with the specified
   name and data.</para>
      </summary>
      <param name="target">The name of the processing instruction.</param>
      <param name="data">The data for the processing instruction.</param>
      <returns>
        <para>The new <see langword="XmlProcessingInstruction" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlDeclaration" /> node with the specified values. </para>
      </summary>
      <param name="version">The version must be "1.0".</param>
      <param name=" encoding">
        <para>The value of the encoding attribute. This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument" /> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding" /> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fails. If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used. </para>
        <para>
          <see langword="Note:" /> If the <see langword="XmlDocument" /> is saved to either a <see cref="T:System.IO.TextWriter" /> or an <see cref="T:System.Xml.XmlTextWriter" />, this encoding value is discarded. Instead, the encoding of the <see langword="TextWriter" /> or the <see langword="XmlTextWriter" /> is used. This ensures that the XML written out can be read back using the correct encoding.</para>
      </param>
      <param name=" standalone">The value must be either "yes" or "no". If this is <see langword="null" /> or String.Empty, the <see langword="Save" /> method does not write a standalone attribute on the XML declaration.</param>
      <returns>
        <para>The new <see langword="XmlDeclaration" /> node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlText" /> with the specified text.</para>
      </summary>
      <param name="text">The text for the Text node.</param>
      <returns>
        <para>The new <see langword="XmlText" /> node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlSignificantWhitespace" /> node.</para>
      </summary>
      <param name="text">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</param>
      <returns>
        <para>A new <see langword="XmlSignificantWhitespace" /> node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>
        <para> Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> object
   for navigating this document.</para>
      </summary>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlWhitespace" /> node.</para>
      </summary>
      <param name="text">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</param>
      <returns>
        <para>A new <see langword="XmlWhitespace" /> node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>
        <para>Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant
   elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />
   .</para>
      </summary>
      <param name="name"> The qualified name to match. It is matched against the <see langword="Name" /> property of the matching node. The special value "*" matches all tags.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified qualified
   name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
   .</para>
      </summary>
      <param name="qualifiedName">The qualified name of the attribute. If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon.</param>
      <param name="namespaceURI">The namespaceURI of the attribute. If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/ .</param>
      <returns>
        <para>The new <see langword="XmlAttribute" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlElement" /> with the qualified name and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
.</para>
      </summary>
      <param name="qualifiedName">The qualified name of the element. If the name contains a colon then the <see cref="P:System.Xml.XmlNode.Prefix" /> property will reflect the part of the name preceding the colon and the <see cref="P:System.Xml.XmlDocument.LocalName" /> property will reflect the part of the name after the colon. The qualified name cannot include a prefix of'xmlns'.</param>
      <param name="namespaceURI">The namespace URI of the element.</param>
      <returns>
        <para>The new <see langword="XmlElement" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>
        <para>Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant
   elements that match the specified <see cref="P:System.Xml.XmlDocument.LocalName" /> and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
   .</para>
      </summary>
      <param name="localName">The LocalName to match. The special value "*" matches all tags.</param>
      <param name="namespaceURI">NamespaceURI to match.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlElement" /> with the
   specified ID.</para>
      </summary>
      <param name="elementId">The attribute ID to match.</param>
      <returns>
        <para>The <see langword="XmlElement" /> with
   the matching ID or <see langword="null" /> if no matching element is found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>
        <para>Imports a node from another document to the current document.</para>
      </summary>
      <param name="node">The node being imported.</param>
      <param name="deep">
        <see langword="true" />to perform a deep clone; otherwise, <see langword="false" /> .</param>
      <returns>
        <para>The imported <see cref="T:System.Xml.XmlNode" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlAttribute" /> with the specified <see cref="P:System.Xml.XmlNode.Prefix" />,
<see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
.</para>
      </summary>
      <param name="prefix">The prefix of the attribute (if any). String.Empty and <see langword="null" /> are equivalent.</param>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute (if any). String.Empty and <see langword="null" /> are equivalent. If <paramref name="prefix" /> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</param>
      <returns>
        <para>The new <see langword="XmlAttribute" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>
        <para>Creates a default attribute with the specified prefix,
      local name and namespace URI.</para>
      </summary>
      <param name="prefix">The prefix of the attribute (if any).</param>
      <param name=" localName">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute (if any).</param>
      <returns>
        <para>The new <see cref="T:System.Xml.XmlAttribute" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>
        <para>Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />,
<see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
.</para>
      </summary>
      <param name="prefix">The prefix of the new element (if any). String.Empty and <see langword="null" /> are equivalent.</param>
      <param name=" localName">The local ame of the new element.</param>
      <param name=" namespaceURI">The namespace URI of the new element (if any). String.Empty and <see langword="null" /> are equivalent.</param>
      <returns>
        <para> The new <see cref="T:System.Xml.XmlElement" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>
        <para>Creates a <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />,
<see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" /> .</para>
      </summary>
      <param name="type">The <see langword="XmlNodeType" /> of the new node.</param>
      <param name=" prefix">The prefix of the new node.</param>
      <param name=" name">The local name of the new node.</param>
      <param name=" namespaceURI">The namespace URI of the new node.</param>
      <returns>
        <para>The new <see langword="XmlNode" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlNode" /> with the specified node type, <see cref="P:System.Xml.XmlDocument.Name" />,
   and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
   .</para>
      </summary>
      <param name="nodeTypeString">String version of the <see cref="T:System.Xml.XmlNodeType" /> of the new node. This parameter must be one of the values listed in the table below.</param>
      <param name=" name">The qualified name of the new node. If the name contains a colon, it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</param>
      <param name=" namespaceURI">The namespace URI of the new node.</param>
      <returns>
        <para>The new <see langword="XmlNode" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlNode" /> with the specified <see cref="T:System.Xml.XmlNodeType" />,
<see cref="P:System.Xml.XmlDocument.Name" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" />
.</para>
      </summary>
      <param name="type">The <see langword="XmlNodeType" /> of the new node.</param>
      <param name=" name">The qualified name of the new node. If the name contains a colon then it is parsed into <see cref="P:System.Xml.XmlNode.Prefix" /> and <see cref="P:System.Xml.XmlDocument.LocalName" /> components.</param>
      <param name=" namespaceURI">The namespace URI of the new node.</param>
      <returns>
        <para>The new <see langword="XmlNode" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlNode" /> object based on the information in
   the <see cref="T:System.Xml.XmlReader" /> .
   The reader must be positioned on a node or attribute.</para>
      </summary>
      <param name="reader">The Xml source</param>
      <returns>
        <para>The new <see langword="XmlNode" /> or <see langword="null" /> if no more nodes exist.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>
        <para>Loads the XML document from the specified URL.</para>
      </summary>
      <param name="filename">URL for the file containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>
        <para>Loads the XML document from the specified stream.</para>
      </summary>
      <param name="inStream">The stream containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>
        <para>Loads the XML document from the specified <see cref="T:System.IO.TextReader" /> .</para>
      </summary>
      <param name="txtReader">The <see langword="TextReader" /> used to feed the XML data into the document.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>
        <para>Loads the XML document from the specified <see cref="T:System.Xml.XmlReader" /> .</para>
      </summary>
      <param name="reader">The <see langword="XmlReader" /> used to feed the XML data into the document.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>
        <para>Loads the XML document from the specified string.</para>
      </summary>
      <param name="xml">String containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>
        <para>Saves the XML document to the specified file.</para>
      </summary>
      <param name="filename">The location of the file where you want to save the document.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>
        <para>Saves the XML document to the specified stream.</para>
      </summary>
      <param name="outStream">The stream to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>
        <para>Saves the XML document to the specified <see cref="T:System.IO.TextWriter" /> .</para>
      </summary>
      <param name="writer">The <see langword="TextWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the XML document to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the
   <see langword="XmlDocument" /> node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="xw">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>
        <para> Gets the type of the current node.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>
        <para>Gets the node containing the DOCTYPE declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>
        <para> Gets the <see cref="T:System.Xml.XmlImplementation" /> object for the current document.
   </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>
        <para> Gets the qualified name of the node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>
        <para> Gets the local name of the node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>
        <para>Gets the root <see cref="T:System.Xml.XmlElement" /> for the document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlDocument" /> to which the current node belongs.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>
        <para>Sets the <see cref="T:System.Xml.XmlResolver" /> to use for resolving external
   resources.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this
   implementation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>
        <para>Gets or sets a value indicating whether to preserve white space.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>
        <para> Gets a value indicating whether the current node is read-only.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>
        <para>Gets or sets the markup representing the children
      of the current node.</para>
      </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>
        <para>Occurs when a node belonging to this document is
      about to be inserted into another node.</para>
      </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>
        <para>Occurs when a node belonging to this
      document has been inserted into another node.</para>
      </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>
        <para> Occurs when a node belonging to this document
      is about to be removed from the document.</para>
      </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>
        <para>Occurs when a node belonging to this
      document has been removed from its parent.</para>
      </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>
        <para> Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node
   belonging to this document is about to be changed.</para>
      </summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>
        <para>Occurs when the <see cref="P:System.Xml.XmlNode.Value" /> of a node
   belonging to this document has been changed.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>
        <para>Gets the base URI of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>
        <para>
       Represents a lightweight object that is useful for tree insert
       operations.
    </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified
      <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>
        <para> Gets the local name of the node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>
        <para>Gets the parent of this node (for nodes that can have
      parents).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>
        <para> Gets or sets the markup representing
      the children of this node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>
        <para> Represents the document type declaration.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified 
   <see cref="T:System.Xml.XmlWriter" />. For <see langword="XmlDocumentType" /> nodes, this method has no effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>
        <para> Gets the local name of the node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the node is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>
        <para>Gets the collection of <see cref="T:System.Xml.XmlEntity" /> nodes declared in the document type declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>
        <para>Gets the collection of <see cref="T:System.Xml.XmlNotation" /> nodes present in the document type declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>
        <para>
       Gets
       the value of the public identifier on the DOCTYPE declaration.
    </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>
        <para>
       Gets the value of
       the system identifier on the DOCTYPE declaration.
    </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>
        <para> Gets the value of the DTD internal subset
 on the DOCTYPE
 declaration.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>
        <para> Represents a writer that provides a fast, non-cached, forward-only way
 of generating streams or files containing XML data that conforms to the
 W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML
 recommendations.
 </para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>
        <para> Represents a writer that provides a fast, non-cached, forward-only means of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>
        <para> When overridden in a derived class, writes the XML declaration with the version "1.0".</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>
        <para> When overridden in a derived class, writes the XML declaration with the version "1.0" and the
      standalone attribute.</para>
      </summary>
      <param name="standalone">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no"</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>
        <para>When overridden in a derived class, closes any open elements or attributes and
      puts the writer back in the Start state.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes the DOCTYPE declaration with the specified name
      and optional attributes.</para>
      </summary>
      <param name="name">The name of the DOCTYPE. This must be non-empty.</param>
      <param name="pubid">If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</param>
      <param name="sysid">If pubid is <see langword="null" /> and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</param>
      <param name="subset">If non-null it writes [subset] where subset is replaced with the value of this argument.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes the specified start tag and associates it with the
      given namespace.</para>
      </summary>
      <param name="localName">
        <para> The local name of the element.</para>
      </param>
      <param name="ns">
        <para> The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</para>
      </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes the specified start tag and
      associates it with the given namespace and prefix.</para>
      </summary>
      <param name="prefix">The namespace prefix of the element.</param>
      <param name="localName">The local name of the element.</param>
      <param name="ns">The namespace URI to associate with the element.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out a start tag with the specified local name.</para>
      </summary>
      <param name="localName">The local name of the element.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>
        <para>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>
        <para>When overridden in a derived class, closes one element and pops the
      corresponding namespace scope.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes an attribute with the specified
      parameters.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" ns">The namespace URI to associate with the attribute.</param>
      <param name=" value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, writes out the attribute with the specified local name and value.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, writes out the attribute with the specified prefix, local
      name, namespace URI and value.</para>
      </summary>
      <param name="prefix">The namespace prefix of the attribute.</param>
      <param name=" localName">The local name of the attribute.</param>
      <param name=" ns">The namespace URI of the attribute.</param>
      <param name=" value">The value of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, writes the start of an attribute.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" ns">The namespace URI of the attribute</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, writes the start of an attribute.</para>
      </summary>
      <param name="prefix">The namespace prefix of the attribute.</param>
      <param name=" localName">The local name of the attribute.</param>
      <param name=" ns">The namespace URI for the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>
        <para>When overridden in a derived class, closes the previous <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
call.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing
      the specified text.</para>
      </summary>
      <param name="text">The text to place inside the CDATA block.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out a comment &lt;!--...--&gt; containing
      the specified text.</para>
      </summary>
      <param name="text">Text to place inside the comment.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, writes out a processing instruction with a space between
      the name and text as follows: &lt;?name text?&gt;.</para>
      </summary>
      <param name="name">The name of the processing instruction.</param>
      <param name=" text">The text to include in the processing instruction.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out an entity reference as follows:
      &amp;<paramref name="name" /> ;.</para>
      </summary>
      <param name="name">The name of the entity reference.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>
        <para>When overridden in a derived class, forces the
 generation of a character entity for the specified Unicode character value.</para>
      </summary>
      <param name="ch">The Unicode character for which to generate a character entity.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out the given white space.</para>
      </summary>
      <param name="ws">The string of white space characters.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>
        <para> When overridden in a derived class, writes the given text content.</para>
      </summary>
      <param name="text">The text to write.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>
        <para>When overridden in a derived class, generates and writes the surrogate character entity
      for the surrogate character pair.</para>
      </summary>
      <param name="lowChar">The low surrogate. This must be a value between 0xDC00 and 0xDFFF. </param>
      <param name=" highChar">The high surrogate. This must be a value between 0xD800 and 0xDBFF.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>When overridden in a derived class, writes text a buffer at a time.</para>
      </summary>
      <param name=" buffer">Character array containing the text to write.</param>
      <param name="index">The position within the buffer indicating the start of the text to write.</param>
      <param name="count">The number of characters to write.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> When overridden in a derived class, writes raw markup manually from a character buffer.
 </para>
      </summary>
      <param name="buffer">Character array containing the text to write. </param>
      <param name="index">The position within the buffer indicating the start of the text to write. </param>
      <param name="count">The number of characters to write. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>
        <para>When overridden in a derived class, writes raw markup manually from a string.</para>
      </summary>
      <param name="data">String containing the text to write.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>When overridden in a derived class, encodes the specified binary bytes as base64 and writes out
 the resulting text.</para>
      </summary>
      <param name="buffer">Byte array to encode.</param>
      <param name="index">The position within the buffer indicating the start of the bytes to write.</param>
      <param name="count">The number of bytes to write.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> When overridden in a derived class, encodes the specified binary bytes as binhex and writes out
 the resulting text.
 </para>
      </summary>
      <param name="buffer">Byte array to encode. </param>
      <param name="index">The position within the buffer indicating the start of the bytes to write. </param>
      <param name="count">The number of bytes to write. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>
        <para>When overridden in a derived class, closes this stream and the underlying stream.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>
        <para>When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the
 underlying stream.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>
        <para> When overridden in a derived class, returns the closest prefix defined in the
      current namespace scope for the namespace URI.</para>
      </summary>
      <param name="ns">The namespace URI whose prefix you want to find.</param>
      <returns>
        <para>The matching prefix or <see langword="null" /> if no matching namespace URI is found in the current scope.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to
 the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</para>
      </summary>
      <param name="name">The name to write.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>
        <para>When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to
 the W3C XML 1.0 recommendation
 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</para>
      </summary>
      <param name="name">The name to write.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes out the namespace-qualified name. This method looks up the prefix
 that is in scope for the given namespace.</para>
      </summary>
      <param name="localName">The local name to write.</param>
      <param name=" ns">The namespace URI for the name.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <para> When overridden in a derived class, writes out all the attributes found at the
      current position in the <see cref="T:System.Xml.XmlReader" />
      .</para>
      </summary>
      <param name="reader">The <see langword="XmlReader" /> from which to copy the attributes.</param>
      <param name="defattr">
        <see langword="true" /> to copy the default attributes from the <see langword="XmlReader" /> ; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <para>When overridden in a derived class, copies everything from the reader to the writer and
 moves the reader to the start of the next
 sibling.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to read from.</param>
      <param name="defattr">
        <see langword="true" /> to copy the default attributes from the <see langword="XmlReader" /> ; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes an element with the specified local name and value.</para>
      </summary>
      <param name="localName">The local name of the element</param>
      <param name=" value">The value of the element</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>
        <para> When overridden in a derived class, writes an element with the specified parameters.</para>
      </summary>
      <param name="localName">The local name of the element</param>
      <param name="ns">The namespace URI to associate with the element</param>
      <param name=" value">The value of the element</param>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>
        <para>When overridden in a derived class, gets the state of the writer.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>
        <para> When overridden in a derived class, gets an <see cref="T:System.Xml.XmlSpace" /> representing the current xml:space scope.
   </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>
        <para> When overridden in a derived class, gets the current xml:lang scope.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>
        <para>Creates an instance of the <see langword="XmlTextWriter" /> class using the specified
   stream.</para>
      </summary>
      <param name="w">The stream to which you want to write.</param>
      <param name=" encoding"> The encoding to generate. If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the ProcessingInstruction.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>
        <para>Creates an instance of the <see langword="XmlTextWriter" /> class using the specified file.</para>
      </summary>
      <param name="filename"> The filename to write to. If the file exists, it will truncate it and overwrite it with the new content.</param>
      <param name=" encoding"> The encoding to generate. If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the ProcessingInstruction.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>
        <para> Creates an instance of the <see langword="XmlTextWriter" />
class using the specified <see cref="T:System.IO.TextWriter" />
.</para>
      </summary>
      <param name="w">The <see langword="TextWriter" /> to write to. It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding. </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>
        <para> Writes the XML declaration with the
      version "1.0".</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>
        <para> Writes the XML declaration with the
      version "1.0" and the standalone attribute.</para>
      </summary>
      <param name="standalone">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no"</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>
        <para>Closes any open elements or attributes and puts the
      writer back in the Start state.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>
        <para> Writes the DOCTYPE declaration with the specified name
      and optional attributes.</para>
      </summary>
      <param name="name">The name of the DOCTYPE. This must be non-empty.</param>
      <param name="pubid">If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</param>
      <param name="sysid">If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</param>
      <param name="subset">If non-null it writes [subset] where subset is replaced with the value of this argument.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>
        <para> Writes the specified start tag and associates it with the given namespace
      and prefix.</para>
      </summary>
      <param name=" prefix">The namespace prefix of the element.</param>
      <param name="localName">
        <para> The local name of the element.</para>
      </param>
      <param name="ns">
        <para>The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer will automatically write that prefix also.</para>
      </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>
        <para>Closes one element and pops the corresponding namespace scope.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>
        <para>Closes one element and pops the corresponding namespace scope.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>
        <para>Writes the start of an attribute.</para>
      </summary>
      <param name=" prefix">Namespace prefix of the attribute.</param>
      <param name="localName">LocalName of the attribute.</param>
      <param name=" ns">NamespaceURI of the attribute</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>
        <para>Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
call.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>
        <para>Writes out a &lt;![CDATA[...]]&gt; block containing
      the specified text.</para>
      </summary>
      <param name="text">Text to place inside the CDATA block.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>
        <para>Writes out a comment &lt;!--...--&gt; containing
      the specified text.</para>
      </summary>
      <param name="text">Text to place inside the comment.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>
        <para>Writes out a processing instruction with a space between
      the name and text as follows: &lt;?name text?&gt;.</para>
      </summary>
      <param name="name">Name of the processing instruction.</param>
      <param name=" text">Text to include in the processing instruction.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>
        <para>Writes out an entity reference as follows:
      &amp;<paramref name="name" /> ;.</para>
      </summary>
      <param name="name">Name of the entity reference.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>
        <para>Forces the
 generation of a character entity for the specified Unicode character value.</para>
      </summary>
      <param name="ch">Unicode character for which to generate a character entity.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>
        <para>Writes out the given white space.</para>
      </summary>
      <param name="ws">The string of white space characters.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>
        <para> Writes the given text content.</para>
      </summary>
      <param name="text">Text to write.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>
        <para> Generates and writes the surrogate character entity
      for the surrogate character pair.</para>
      </summary>
      <param name="lowChar">The low surrogate. This must be a value between 0xDC00 and 0xDFFF. </param>
      <param name=" highChar">The high surrogate. This must be a value between 0xD800 and 0xDBFF.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Writes text a buffer at a time.
      </para>
      </summary>
      <param name="buffer">Character array containing the text to write. </param>
      <param name="index">The position within the buffer indicating the start of the text to write. </param>
      <param name="count">The number of characters to write. </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Writes raw markup manually from a character buffer.
 </para>
      </summary>
      <param name="buffer">Character array containing the text to write. </param>
      <param name="index">The position within the buffer indicating the start of the text to write. </param>
      <param name="count">The number of characters to write. </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>
        <para>Writes raw markup manually from a string.</para>
      </summary>
      <param name="data">String containing the text to write.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>Encodes the specified binary bytes as base64 and writes out
 the resulting text.</para>
      </summary>
      <param name="buffer">Byte array to encode.</param>
      <param name="index">The position within the buffer indicating the start of the bytes to write.</param>
      <param name="count">The number of bytes to write.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Encodes the specified binary bytes as binhex and writes out
 the resulting text.
 </para>
      </summary>
      <param name="buffer">Byte array to encode. </param>
      <param name="index">The position within the buffer indicating the start of the bytes to write. </param>
      <param name="count">The number of bytes to write. </param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>
        <para>Closes this stream and the underlying stream.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>
        <para>Flushes whatever is in the buffer to the underlying streams and also flushes the
 underlying stream.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>
        <para>Writes out the specified name, ensuring it is a valid 
 name according to the W3C XML 1.0 recommendation(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name
 ).</para>
      </summary>
      <param name="name">Name to write.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>
        <para> Writes out the namespace-qualified name. This method looks up the prefix
 that is in scope for the given namespace.</para>
      </summary>
      <param name="localName">The local name to write.</param>
      <param name=" ns">The namespace URI to associate with the name.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>
        <para> Returns the closest prefix defined in the
      current namespace scope for the namespace URI.</para>
      </summary>
      <param name="ns">Namespace URI whose prefix you want to find.</param>
      <returns>
        <para>The matching prefix. Or <see langword="null" /> if no matching namespace URI is found in the current scope.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>
        <para>Writes out the specified name, ensuring it is a valid NmToken according
 to the W3C XML 1.0 recommendation(http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</para>
      </summary>
      <param name="name">Name to write.</param>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>
        <para>Gets the underlying stream object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>
        <para>Gets
      or sets a value indicating whether to do namespace support.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>
        <para> Indicates how the output
      is formatted.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>
        <para>Gets or sets how many IndentChars to write for each level
      in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to
   <see langword="Formatting.Indented" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>
        <para>Gets or sets which character to use for indenting
      when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to Formatting.Indented.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>
        <para>Gets or sets which character to use to quote attribute
      values.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>
        <para>Gets the state of the writer.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>
        <para> Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current xml:space scope.
   </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>
        <para> Gets the current xml:lang scope.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDOMTextWriter.WriteStartElement(System.String,System.String,System.String)">
    </member>
    <member name="M:System.Xml.XmlDOMTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>
        <para>
       Represents an element.
    </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself (and its attributes if the node is an <see langword="XmlElement" /> ).</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>
        <para>Returns the value for the attribute with the specified name.</para>
      </summary>
      <param name="name">The name of the attribute to retrieve. This is a qualified name. It is matched against the <see langword="Name" /> property of the matching node. </param>
      <returns>
        <para>The value of the specified attribute. An empty string is 
      returned if a matching attribute is not found or if the attribute does not have a specified or default value.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>
        <para>Sets the value of the attribute
      with the specified name.</para>
      </summary>
      <param name="name">The name of the attribute to create or alter. This is a qualified name. If the name contains a colon it is parsed into prefix and local name components.</param>
      <param name=" value">The value to set for the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>
        <para>Removes an attribute by name.</para>
      </summary>
      <param name="name">The name of the attribute to remove.This is a qualified name. It is matched against the <see langword="Name" /> property of the matching node.</param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>
        <para>Returns the <see langword="XmlAttribute" /> with the specified name.</para>
      </summary>
      <param name="name">The name of the attribute to retrieve. This is a qualified name. It is matched against the <see langword="Name" /> property of the matching node.</param>
      <returns>
        <para>The specified <see langword="XmlAttribute" /> or
<see langword="null" /> if a matching attribute was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>
        <para>Adds the specified <see cref="T:System.Xml.XmlAttribute" /> .</para>
      </summary>
      <param name="newAttr">The <see langword="XmlAttribute" /> node to add to the attribute collection for this element.</param>
      <returns>
        <para>If the attribute replaces an existing attribute with the 
      same name, the old <see langword="XmlAttribute" />
      is returned; otherwise,
   <see langword="null" />
   is
   returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>
        <para>Removes the specified <see cref="T:System.Xml.XmlAttribute" /> .</para>
      </summary>
      <param name="oldAttr">The <see langword="XmlAttribute" /> node to remove. If the removed attribute has a default value, it is immediately replaced.</param>
      <returns>
        <para>The removed <see langword="XmlAttribute" /> or 
<see langword="null" /> if <paramref name="oldAttr" /> is not an attribute node of the 
<see langword="XmlElement" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>
        <para>Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant
   elements that match the specified <see cref="P:System.Xml.XmlElement.Name" />
   .</para>
      </summary>
      <param name="name">The name tag to match. This is a qualified name. It is matched against the <see langword="Name" /> property of the matching node. The asterik (*) is a special value that matches all tags.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>
        <para>Returns the value for the attribute with the
      specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute to retrieve.</param>
      <param name="namespaceURI">The namespace URI of the attribute to retrieve.</param>
      <returns>
        <para>The value of the specified attribute. An empty string is returned if a matching attribute is not found or if the attribute does not have a specified or default value.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>
        <para>Sets the value of the attribute with the
      specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <param name="value">The value to set for the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>
        <para>Removes an attribute with the specified local name and namespace URI.</para>
        <note type="note">
      If the removed attribute has a
      default value, it is immediately replaced.
   </note>
      </summary>
      <param name="localName">The local name of the attribute to remove.</param>
      <param name="namespaceURI">The namespace URI of the attribute to remove.</param>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>
        <para>Returns the <see cref="T:System.Xml.XmlAttribute" /> with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The specified <see langword="XmlAttribute" /> or
<see langword="null" /> if a matching attribute was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>
        <para>Adds the specified <see cref="T:System.Xml.XmlAttribute" /> .</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The <see langword="XmlAttribute" /> to add.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>
        <para>Removes the <see cref="T:System.Xml.XmlAttribute" />specified by the local name and namespace URI.</para>
        <note type="note">
   If the removed attribute has a
   default value, it is immediately replaced.
</note>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name="namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The removed <see langword="XmlAttribute" /> or
<see langword="null" /> if the <see langword="XmlElement" /> does not have a 
   matching attribute node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>
        <para>Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant
   elements that match the specified <see cref="P:System.Xml.XmlElement.LocalName" /> and <see cref="P:System.Xml.XmlElement.NamespaceURI" />
   .</para>
      </summary>
      <param name="localName">The local name to match. The asterik (*) is a special value that matches all tags.</param>
      <param name="namespaceURI">The namespace URI to match.</param>
      <returns>
        <para>An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>
        <para>Determines whether the current node has an attribute with the specified
      name.</para>
      </summary>
      <param name="name">The name of the attribute to find. This is a qualified name. It is matched against the <see langword="Name" /> property of the matching node.</param>
      <returns>
        <para>
          <see langword="true" /> if the current node has the specified attribute;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>
        <para>Determines whether the current node has an attribute
      with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute to find.</param>
      <param name="namespaceURI">The namespace URI of the attribute to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the current node has the specified attribute;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the current node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified
   <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>
        <para> Removes the attribute node with the specified index from the element. </para>
        <note type="note">
      If the removed attribute has a
      default value, it is immediately replaced.
      
   </note>
      </summary>
      <param name="i">The index of the node to remove. The first node has index 0.</param>
      <returns>
        <para>The attribute node removed or
   <see langword="null " />if there is no node at the given index.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>
        <para>Removes all specified attributes from the element. Default attributes are not removed.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>
        <para>Removes all specified attributes and children of the current node. Default
      attributes are not removed.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>
        <para> Gets the local name of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>
        <para>Gets the namespace URI of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>
        <para>Gets or sets the namespace prefix of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlDocument" /> to which this node belongs.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>
        <para> Gets or sets the tag format of the element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>
        <para>Gets an <see cref="T:System.Xml.XmlAttributeCollection" /> containing the list of attributes for this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>
        <para>Gets a <see langword="boolean" /> value indicating whether the current node
   has any attributes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>
        <para>Gets or sets the markup representing just
      the children of this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>
        <para>Gets or sets the concatenated values of the
      node and all its children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>
   Gets the <see cref="T:System.Xml.XmlNode" /> immediately following this element.
</summary>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>
        <para> Represents an entity declaration: &lt;!ENTITY ... &gt;.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node. Entity nodes 
      cannot be cloned. Calling this method on an <see langword="XmlEntity" /> object throws an exception.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
For <see langword="XmlEntity" /> nodes, this
method has no effect.
</summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified
   <see cref="T:System.Xml.XmlWriter" /> .</para>
        <para>For <see langword="XmlEntity" /> nodes, this method has no effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the node is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>
        <para>Gets the name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>
        <para> Gets the name of the node without the namespace prefix.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>
        <para>Gets the concatenated values of the entity node and all
      its children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>
        <para>Gets the type of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>
        <para>Gets
      the value of the public identifier on the entity declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>
        <para>Gets the value of
      the system identifier on the entity declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>
        <para>Gets
      the name of the optional NDATA attribute on the
      entity declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>
        <para>Gets the markup representing this node and all its
      children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>
        <para> Gets the markup representing the children of
      this node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>
        <para>Gets the base URI of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>
        <para> Represents a reader that provides
      fast, non-cached, forward-only
      access to XML data.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>
        <para> Represents a reader that provides fast, non-cached, forward-only access
      to XML data.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>
        <para>When overridden in a derived class, gets the value of the attribute with the specified
 <see cref="P:System.Xml.XmlReader.Name" /> .</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, gets the value of the attribute with the
 specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> .</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned. This method does not move the reader.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>
        <para>When overridden in a derived class, gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
      <returns>
        <para>The value of the specified attribute. This method does not move the reader.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>
        <para>When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" /> .</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found;
 otherwise, <see langword="false" />. If <see langword="false" />,
 the reader's position does not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" />
and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> .</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" ns">The namespace URI of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found; otherwise,
<see langword="false" />. If <see langword="false" />, the reader's position does
 not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>
        <para>When overridden in a derived class, moves to the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>
        <para>When overridden in a derived class, moves to the first attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if an 
 attribute exists (the reader moves to the first attribute); otherwise,
<see langword="false " />(the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>
        <para>When overridden in a derived class, moves to the next attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there is a next attribute;
<see langword="false" /> if there are no more attributes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>
        <para>When overridden in a derived class, moves to the element that contains the current attribute node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the reader 
 is positioned on an attribute (the reader moves to the element that owns
 the attribute); <see langword="false" /> if the reader is not
 positioned on an attribute
 (the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>
        <para>When overridden in a derived class, reads the next
 node from the stream.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the next node was read successfully;
<see langword="false" /> if there are no more nodes to read. </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>
        <para> When overridden in a derived class, changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to 
<see langword="Closed" />
.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>
        <para> Skips the children of the current node.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>
        <para>When overridden in a derived class, reads the contents of an element or text node as a string.</para>
      </summary>
      <returns>
        <para>The contents of the element or text node. This can be an empty string if
      the reader is positioned on something other than an element or text node, or
      if there is no more text content to return in the current context.</para>
        <para>
          <see langword="Note:" /> The text node can be either an element or
   an attribute text node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>
        <para> Checks whether the current node is a content (non-white
      space text, <see langword="CDATA" />, <see langword="Element" />,
   <see langword="EndElement" />, <see langword="EntityReference" />, or
   <see langword="EndEntity" /> )
      node. If the node is not a content node, the reader skips ahead to the
      next content node or end of file. It skips over nodes of the following type:
   <see langword="ProcessingInstruction" />, <see langword="DocumentType" />,
   <see langword="Comment" />, <see langword="Whitespace" />, or
   <see langword="SignificantWhitespace" />.</para>
      </summary>
      <returns>
        <para> The <see cref="P:System.Xml.XmlReader.NodeType" /><see langword=" " />of the current
   node found by the method or <see langword="XmlNodeType.None" />
   if the reader has reached the end of the input stream.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>
        <para>Checks that the current node is an element and advances the reader to the next
       node.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>
        <para>Checks that the current content node is an element with
 the given <see cref="P:System.Xml.XmlReader.Name" /> and
 advances the reader to the next node.</para>
      </summary>
      <param name="name">The qualified name of the element.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>
        <para>Checks that the current content node is an element with
 the given <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />
 and advances the reader to the next node.</para>
      </summary>
      <param name="localname">The local name of the element.</param>
      <param name="ns"> The namespace URI of the element.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>
        <para>Reads a text-only element.</para>
      </summary>
      <returns>
        <para> The text contained in the element that was read.
 An empty string if the element is empty
 (<c>&lt;item&gt;&lt;/item&gt;</c> or <c>&lt;item/&gt;</c>).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>
        <para>Checks that the <see cref="P:System.Xml.XmlReader.Name" />
property of the element found
matches the given string before reading a text-only element.</para>
      </summary>
      <param name="name">The name to check.</param>
      <returns>
        <para>The text contained in the element that was read.
 An empty string if the element is empty
 (<c>&lt;item&gt;&lt;/item&gt;</c> or <c>&lt;item/&gt;</c>).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>
        <para>Checks that the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found
 matches the given strings before reading a text-only element.</para>
      </summary>
      <param name="localname">The local name to check.</param>
      <param name=" ns">The namespace URI to check.</param>
      <returns>
        <para>The text contained in the element that was read.
 An empty string if the element is empty
 (<c>&lt;item&gt;&lt;/item&gt;</c> or <c>&lt;item/&gt;</c>).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>
        <para>Checks that the current content node is an end tag and advances the reader to
 the next node.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>
        <para>Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current
   content node is a start tag or empty element tag.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if
<see langword="MoveToContent" /> finds a start tag or empty element
   tag; <see langword="false" /> if a node type other than
<see langword="XmlNodeType.Element" /> 
was found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>
        <para>Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is
   a start tag or empty element tag and if the
<see cref="P:System.Xml.XmlReader.Name" />
property of the element found matches the given argument.</para>
      </summary>
      <param name="name">The string matched against the <see langword="Name" /> property of the element found.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   resulting node is an element and the <see langword="Name " />
   property matches the specified
   string. <see langword="false" /> if a node type other than
<see langword="XmlNodeType.Element" /> 
was found or if the element <see langword="Name" /> property does not match the specified string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>
        <para>Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the
   current content node is a start tag or empty element tag and if
   the <see cref="P:System.Xml.XmlReader.LocalName" /> and
<see cref="P:System.Xml.XmlReader.NamespaceURI" />
properties of the element found match the given strings.</para>
      </summary>
      <param name="localname">The string to match against the <see langword="LocalName" /> property of the element found.</param>
      <param name="ns">The string to match against the <see langword="NamespaceURI" /> property of the element found. </param>
      <returns>
        <para>
          <see langword="true" /> if the
   resulting node is an element. <see langword="false" /> if a
   node type other than <see langword="XmlNodeType.Element" /> was found or if the
<see langword="LocalName" /> and <see langword="NamespaceURI " />properties of
   the element do not match the specified strings.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>
        <para>Gets a value indicating whether
 the string argument is a valid XML name.</para>
      </summary>
      <param name="str">The name to validate.</param>
      <returns>
        <para>
          <see langword="true" /> if the name 
 is valid; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>
        <para>Gets a value indicating whether or not the
      string argument is a valid XML name token.</para>
      </summary>
      <param name="str">The name token to validate.</param>
      <returns>
        <para>
          <see langword="true" /> if it is a
   valid name token; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>
        <para>When overridden in a derived class, reads all the content, including markup, as a string.</para>
      </summary>
      <returns>
        <para> All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.</para>
        <para>If the current node is neither an element nor attribute, an empty
 string is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>
        <para>When overridden in a derived class, reads the content, including markup, representing this node and all its children.</para>
      </summary>
      <returns>
        <para>If the reader is positioned on an element or an attribute node, this method
 returns all the XML content, including markup, of the current node and all its
 children; otherwise, it returns an empty string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>
        <para> When overridden in a derived class, resolves a namespace prefix in the current element's scope.
 </para>
      </summary>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized. </param>
      <returns>
        <para> The namespace URI to which the prefix maps or <see langword="null" /> if no
 matching prefix is found.
 </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>
        <para> When overridden in a derived class, resolves the entity
 reference for <see langword="EntityReference" /> nodes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>
        <para>When overridden in a derived class, parses the attribute 
      value into one or more <see langword="Text" />, <see langword="EntityReference" />,
      or <see langword="EndEntity" /> nodes.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are nodes to return.</para>
        <para>
          <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</para>
        <para>An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>
        <para>When overridden in a derived class, gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>
        <para> When overridden in a derived class, gets
 the qualified name of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>
        <para> When overridden in a derived class, gets the local name of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>
        <para>When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace
 specification) of the node on which the reader is positioned. </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>
        <para> When overridden in a derived class, gets the namespace prefix associated with the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>
        <para>When overridden in a derived class, gets a value indicating whether the current node can have a
   <see cref="P:System.Xml.XmlReader.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>
        <para>When overridden in a derived class, gets the text value of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>
        <para> When overridden in a derived class, gets the depth of
 the current node in the XML document.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>
        <para> When overridden in a derived class, gets the base URI of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>
        <para>When overridden in a derived class, gets a value indicating whether the current node is an
 empty element (for example, <c>&lt;MyElement/&gt;</c>
 ).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>
        <para> When overridden in a derived class, gets a value indicating whether the current node is an
 attribute that was generated from the default value defined
 in the DTD or schema.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>
        <para> When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute
 node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>
        <para>When overridden in a derived class, gets the current <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>
        <para>When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>
        <para> When overridden in a derived class, gets the number of attributes on the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>
        <para>When overridden in a derived class, gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>
        <para>When overridden in a derived class, gets the value of the attribute with the specified
 <see cref="P:System.Xml.XmlReader.Name" /> .</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, gets the value of the attribute with the
 specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> .</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>
        <para>Gets a value indicating whether this reader can parse
      and resolve entities.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>
        <para> When overridden in a derived class, gets a
 value indicating whether the reader is positioned at the end of the
 stream.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>
        <para> When overridden in a derived class, gets the state of the reader.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>
        <para>Gets a value indicating whether the current node
      has any attributes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>
        <para>When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this
 implementation.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>
        <para>Initializes a new instance of the 
 <see langword="XmlTextReader" /> .</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlTextReader" /> class with the specified stream.</para>
      </summary>
      <param name="input">The stream containing the XML data to read.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the 
 <see langword="XmlTextReader" /> 
 class with the specified URL and stream.</para>
      </summary>
      <param name="url">The URL to use for resolving external resources. The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</param>
      <param name=" input">The stream containing the XML data to read.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlTextReader" /> class with the specified stream and <see cref="T:System.Xml.XmlNameTable" /> .</para>
      </summary>
      <param name="input">The stream containing the XML data to read.</param>
      <param name="nt">The <see langword="XmlNameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>
        <para>Initializes a new instance of the 
 <see langword="XmlTextReader" /> class with the specified URL, stream and <see cref="T:System.Xml.XmlNameTable" /> 
 .</para>
      </summary>
      <param name=" url">The URL to use for resolving external resources. The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</param>
      <param name="input">The stream containing the XML data to read.</param>
      <param name=" nt">The <see langword="XmlNameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>
        <para> Initializes a new instance of the 
 <see langword="XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> .
 </para>
      </summary>
      <param name="input">The <see langword="TextReader" /> containing the XML data to read. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlTextReader" /> class with the specified URL and <see cref="T:System.IO.TextReader" />
   .</para>
      </summary>
      <param name="url">The URL to use for resolving external resources. The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</param>
      <param name=" input">The <see langword="TextReader" /> containing the XML data to read.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>
        <para> Initializes a new instance of the 
 <see langword="XmlTextReader" /> class with the specified <see cref="T:System.IO.TextReader" /> and 
 <see cref="T:System.Xml.XmlNameTable" /> 
 .
 </para>
      </summary>
      <param name="input">The <see langword="TextReader" /> containing the XML data to read. </param>
      <param name="nt">The <see langword="XmlNameTable" /> to use. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlTextReader" /> class with the specified URL, <see cref="T:System.IO.TextReader" /> and
   <see cref="T:System.Xml.XmlNameTable" />
   .</para>
      </summary>
      <param name="url">The URL to use for resolving external resources. The <see cref="P:System.Xml.XmlTextReader.BaseURI" /> is set to this value.</param>
      <param name=" input">The <see langword="TextReader" /> containing the XML data to read.</param>
      <param name=" nt">The <see langword="XmlNameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlTextReader" />
   class with the specified values.</para>
      </summary>
      <param name="xmlFragment">The stream containing the XML fragment to parse.</param>
      <param name=" fragType">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment. This also determines what the fragment can contain. (See table below.)</param>
      <param name=" context">
        <para>The <see cref="T:System.Xml.XmlParserContext" /> in which the <paramref name="xmlFragment" /> is to be parsed. This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</para>
      </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlTextReader" />
   class with the specified values.</para>
      </summary>
      <param name="xmlFragment">The string containing the XML fragment to parse.</param>
      <param name=" fragType">The <see cref="T:System.Xml.XmlNodeType" /> of the XML fragment. This also determines what the fragment string can contain. (See table below.)</param>
      <param name=" context">
        <para>The <see cref="T:System.Xml.XmlParserContext" /> in which the <paramref name="xmlFragment" /> is to be parsed. This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c>, and the <c>xml:space</c> scope.</para>
      </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the 
   <see langword="XmlTextReader" /> class with the specified file.
      </para>
      </summary>
      <param name="url"> The URL for the file containing the XML data. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>
        <para> Initializes a new instance of the 
 <see langword="XmlTextReader" /> class with the specified file and <see cref="T:System.Xml.XmlNameTable" /> .
 </para>
      </summary>
      <param name="url">The URL for the file containing the XML data to read. </param>
      <param name="nt">The <see langword="XmlNameTable" /> to use. </param>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>
        <para>Gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
      <returns>
        <para>The value of the specified attribute.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned. This method does not move the reader.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>
        <para>Moves to the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found;
 otherwise, <see langword="false" />. If <see langword="false" />,
 the reader's position does not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>
        <para>Moves to the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found; otherwise,
<see langword="false" />. If <see langword="false" />, the reader's position does
 not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>
        <para>Moves to the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>
        <para>Moves to the first attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false " />(the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>
        <para>Moves to the next attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there is a next attribute;
<see langword="false" /> if there are no more attributes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>
        <para>Moves to the element that contains the current attribute node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns
 the attribute); <see langword="false" /> if the reader is not positioned on an attribute
 (the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>
        <para>Resets the state of the reader to ReadState.Initial.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>
        <para>Reads the next
      node from the stream.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the next node was read successfully;
<see langword="false" /> if there are no more nodes to read.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>
        <para> Changes the <see cref="P:System.Xml.XmlReader.ReadState" />
to Closed.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadInnerXml">
      <summary>
        <para>Reads all the content, including markup, as a string.</para>
      </summary>
      <returns>
        <para> All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.</para>
        <para>If the current node is neither an element nor attribute, an empty
 string is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadOuterXml">
      <summary>
        <para>Reads the content, including markup, representing this node and all its children.</para>
      </summary>
      <returns>
        <para>If the reader is positioned on an element or an attribute node, this method
 returns all the XML content, including markup, of the current node and all its
 children; otherwise, it returns an empty string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>
        <para> Gets the remainder of the buffered XML.</para>
      </summary>
      <returns>
   A <see cref="T:System.IO.TextReader" /> containing
   the remainder of the buffered XML.
</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>Reads the text contents of an element into a character
      buffer. This method is designed to read large streams of embedded text by
      calling it successively.</para>
      </summary>
      <param name="buffer">The array of characters that serves as the buffer to which the text contents are written.</param>
      <param name=" index">The position within <paramref name="buffer" /> where the method can begin writing text contents.</param>
      <param name=" count">The number of characters to write into <paramref name="buffer" />.</param>
      <returns>
        <para>The number of characters read. This can be 0 if the reader is not positioned on an element or if there
      is no more text content to return in the current context.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>
        <para>Reads the contents of an element or a text node as a string.</para>
      </summary>
      <returns>
        <para>The contents of the element or text node. This can be an empty string if
      the reader is positioned on something other than an element or text node, or
      if there is no more text content to return in the current context.</para>
        <para>
          <see langword="Note:" /> The text node can be either an element or
   an attribute text node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>Decodes Base64 and returns the decoded binary bytes.</para>
      </summary>
      <param name="array">The array of characters that serves as the buffer to which the text contents are written.</param>
      <param name="offset">
        <para>The zero-based index into the array specifying where the method can begin to write to the buffer.</para>
      </param>
      <param name="len">The number of bytes to write into the buffer.</param>
      <returns>
        <para>The number of bytes written to the buffer.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>Decodes BinHex and returns the decoded binary
      bytes.</para>
      </summary>
      <param name="array">The byte array that serves as the buffer to which the decoded binary bytes are written.</param>
      <param name=" offset">The zero-based index into the array specifying where the method can begin to write to the buffer.</param>
      <param name=" len">The number of bytes to write into the buffer.</param>
      <returns>
        <para>The number of bytes written to your buffer.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>
        <para> Resolves a namespace prefix in the current element's scope.
 </para>
      </summary>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized. </param>
      <returns>
        <para> The namespace URI to which the prefix maps or <see langword="null" /> if no
 matching prefix is found.
 </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>
        <para> Resolves the entity reference for EntityReference nodes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>
        <para>Parses the attribute value into one or more 
   <see langword="Text" />, <see langword="EntityReference" />, or 
   <see langword="EndEntity" /> nodes.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are nodes to return.</para>
        <para>
          <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</para>
        <para>An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>
        <para> Gets
 the qualified name of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>
        <para> Gets the local name of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>
        <para> Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>
        <para> Gets the namespace prefix associated with the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>
        <para>Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlTextReader.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>
        <para>Gets the text value of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>
        <para> Gets the depth of
 the current node in the XML document.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>
        <para> Gets the base URI of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>
        <para>Gets a value indicating whether the current node is an 
 empty element (for example, <c>&lt;MyElement/&gt;</c>
 ).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>
        <para> Gets a value indicating whether the current node is an
 attribute that was generated from the default value defined
 in the DTD or schema.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>
        <para>
       Gets the quotation mark character used to enclose the value of an attribute
       node.
    </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>
        <para>Gets the current <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>
        <para>Gets the current <see langword="xml:lang" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>
        <para>Gets the number of attributes on the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Item(System.Int32)">
      <summary>
        <para>Gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.Item(System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.Item(System.String,System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>
        <para> Gets a
 value indicating whether the reader is positioned at the end of the
 stream.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>
        <para> 
      Gets the state of the reader.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this
 implementation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>
        <para> Gets or sets a value indicating whether to do namespace support.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>
        <para>Gets or sets a value indicating whether to normalize white
      space and attribute values.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>
        <para> Gets the encoding of the
 document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>
        <para>Gets or sets a value that specifies how white
      space is handled.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>
        <para> Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving DTD
   references.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>
        <para>Gets the current line number.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>
        <para>Gets the current line position.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>
        <para>
       Represents an entity reference node.
    </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. For <see langword="XmlEntityReference" /> nodes, this method always returns an entity reference node with no children. The replacement text is set when the node is inserted into a parent.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified 
   <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>
        <para>Gets the name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>
        <para>Gets the type of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the node is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>
        <para>Gets the base URI of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>
        <para> Specifies the type of node change. </para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>
        <para> A node is being inserted in the tree.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>
        <para> A node is being removed from the tree.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>
        <para> A node value is being changed.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>
    Returns detailed information about the last exception.
 </summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the
 <see langword="XmlException" /> class using the information in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" /> object containing all the properties of an <see langword="XmlException" />. </param>
      <param name=" context">The <see langword="StreamingContext" /> object containing the context information.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
   Streams all the <see langword="XmlException" /> properties
   into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.
</summary>
      <param name="info">The <see langword="SerializationInfo" /> object.</param>
      <param name=" context">The <see langword="StreamingContext" /> object.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see langword="XmlException" /> class.</para>
      </summary>
      <param name="message">The description of the error condition.</param>
      <param name=" innerException">The <see cref="T:System.Exception" /> that threw the <see langword="XmlException" />, if any. This value can be <see langword="null" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>
    Gets the line number indicating where the
    error occurred.
 </summary>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>
    Gets the line position indicating where the
    error occurred.
 </summary>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>
        <para>Defines the context for a set of <see cref="T:System.Xml.XmlDocument" />
objects.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>
        <para>
       Initializes a new instance of the XmlImplementation class.
    </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>
        <para> Tests if the DOM implementation implements a specific feature.
 </para>
      </summary>
      <param name="strFeature">The package name of the feature to test. This name is not case-sensitive. </param>
      <param name=" strVersion">This is the version number of the package name to test. If the version is not specified (<see langword="null" />), supporting any version of the feature causes the method to return <see langword="true" /> . </param>
      <returns>
        <para>
          <see langword="true" /> if the feature is implemented in the specified version;
 otherwise, <see langword="false" />.
 </para>
        <para> The following table shows the combinations that cause 
<see langword="HasFeature" /> to return <see langword="true" /> .
 </para>
        <list type="table">
          <listheader>
            <term> strFeature</term>
            <description> strVersion</description>
          </listheader>
          <item>
            <term> XML</term>
            <description> 1.0</description>
          </item>
          <item>
            <term> XML</term>
            <description> 2.0</description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>
        <para>Creates a new <see cref="T:System.Xml.XmlDocument" /> .</para>
      </summary>
      <returns>
        <para>The new <see langword="XmlDocument" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeEnumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next item in
       the collection.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the move 
    was successfull; <see langword="false" /> if the enumerator has passed the end of
    the collection.</para>
      </returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>
        <para>Resolves, adds and removes namespaces to a collection and
      provide scope management for these namespaces. This class is used by
      the <see cref="T:System.Xml.Xsl.XsltContext" />
      and <see cref="T:System.Xml.XmlReader" /> classes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlNamespaceManager" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />
   .</para>
      </summary>
      <param name="nameTable">The <see langword="XmlNameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>
        <para>Pushes a namespace scope onto the stack.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>
        <para>Pops a namespace scope off the stack.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are
   namespace scopes left on the stack; <see langword="false" /> if there are no more
   namespaces to pop.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>
        <para>Adds the given namespace to the collection.</para>
      </summary>
      <param name="prefix">The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.</param>
      <param name=" uri">The namespace to add.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>
        <para>Removes the given namespace for the given
      prefix.</para>
      </summary>
      <param name="prefix">The prefix for the namespace</param>
      <param name=" uri">The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored. Exceptions are never thrown.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>
        <para>Provides support for the "foreach" style iteration over 
      the collection of namespaces in the <see langword="XmlNamespaceManager" />
      .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>
        <para>Gets the namespace URI for the specified
      prefix.</para>
      </summary>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.</param>
      <returns>
        <para>Returns the namespace URI for <paramref name="prefix" /> or <see langword="null" /> if there is no mapped namespace. The returned
   string is atomized. </para>
        <para>For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>
        <para>Finds the prefix declared for the given
      namespace URI.</para>
      </summary>
      <param name="uri">The namespace to resolve for the prefix.</param>
      <returns>
        <para>The matching prefix. If there is no mapped prefix,
      the method returns String.Empty. If a null value is supplied then
   <see langword="null" /> is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>
        <para>Gets a value indicating whether the supplied prefix has
      a namespace defined for the current pushed scope.</para>
      </summary>
      <param name="prefix">The prefix of the namespace you want to find.</param>
      <returns>
        <para>
          <see langword="true" /> if there is a
   namespace defined; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>
        <para> Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>
        <para>Gets the namespace URI for the default
      namespace.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> and <see cref="E:System.Xml.XmlDocument.NodeRemoving" /> events.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>
        <para>Gets a value indicating what type of node
      change event is occurring.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>
   Gets the <see cref="T:System.Xml.XmlNode" /> that is
   being added, removed or changed.
</summary>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>
   Gets the value of the <see cref="P:System.Xml.XmlNode.ParentNode" />
   before the operation began.
</summary>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>
        <para>Gets the value of the <see cref="P:System.Xml.XmlNode.ParentNode" /> after the operation completes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>
        <para>Represents the method that handles
 <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> and <see cref="E:System.Xml.XmlDocument.NodeRemoving" /> events.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> containing the event data.</param>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>
        <para>Describes the document order of a node compared to a
      second node.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>
        <para> The current node of this navigator is before the
      current node of the supplied navigator.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>
        <para> The current node of this navigator is after the
      current node of the supplied navigator.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>
        <para> The two
      navigators are positioned on the same node.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>
        <para> The node positions
 cannot be determined in document order, relative to each other. This could occur if the
 two nodes reside in different trees.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>
        <para>Represents a reader that provides fast, non-cached
      forward only access to XML data in an <see cref="T:System.Xml.XmlNode" /><see langword="." /></para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>
        <para>Creates an instance of the <see langword="XmlNodeReader" /> class using the
   specified <see cref="T:System.Xml.XmlNode" />
   .</para>
      </summary>
      <param name="node">The <see langword="XmlNode" /> you want to read.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>
        <para>Gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="attributeIndex">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
      <returns>
        <para>The value of the specified attribute.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>
        <para>Moves to the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found;
 otherwise, <see langword="false" />. If <see langword="false" />,
 the reader's position does not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>
        <para>Moves to the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found; otherwise,
<see langword="false" />. If <see langword="false" />, the reader's position does
 not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>
        <para>Moves to the attribute with the specified index.</para>
      </summary>
      <param name="attributeIndex">The index of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>
        <para>Moves to the first attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false " />(the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>
        <para>Moves to the next attribute.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there is a next attribute;
<see langword="false" /> if there are no more attributes.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>
        <para>Moves to the element that contains the current attribute node.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns
 the attribute); <see langword="false" /> if the reader is not positioned on an attribute
 (the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>
        <para>Reads the next
 node from the stream.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the next node was read successfully;
<see langword="false" /> if there are no more nodes to read. </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>
        <para> Changes the <see cref="P:System.Xml.XmlNodeReader.ReadState" /> to <see langword="Closed" />
.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>
        <para>Skips the children of the current node. </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>
        <para>Reads the contents of an element or text node as a string.</para>
      </summary>
      <returns>
        <para>The contents of the element or text-like node (This can include CDATA, Text nodes, and so on). This can be an empty string if
      the reader is positioned on something other than an element or text node, or
      if there is no more text content to return in the current context.</para>
        <para>
          <see langword="Note:" /> The text node can be either an element or
   an attribute text node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadInnerXml">
      <summary>
        <para>Reads all the content, including markup, as a string.</para>
      </summary>
      <returns>
        <para> All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.</para>
        <para>If the current node is neither an element nor attribute, an empty
 string is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadOuterXml">
      <summary>
        <para>Reads the content, including markup, representing this node and all its children.</para>
      </summary>
      <returns>
        <para>If the reader is positioned on an element or an attribute node, this method
 returns all the XML content, including markup, of the current node and all its
 children; otherwise, it returns an empty string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>
        <para> Resolves a namespace prefix in the current element's scope.
 </para>
      </summary>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized. </param>
      <returns>
        <para> The namespace URI to which the prefix maps or <see langword="null" /> if no
 matching prefix is found.
 </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>
        <para> Resolves the entity reference for 
   <see langword="EntityReference" /> nodes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>
        <para>Parses the attribute value into one or more 
   <see langword="Text" />, <see langword="EntityReference" />, or 
   <see langword="EndEntity" /> nodes.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are nodes to return.</para>
        <para>
          <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</para>
        <para>An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>
        <para> Gets
 the qualified name of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>
        <para> Gets the local name of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>
        <para>Gets the namespace URI (as defined in the W3C Namespace
 specification) of the node on which the reader is positioned. </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>
        <para> Gets the namespace prefix associated with the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>
        <para>Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlNodeReader.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>
        <para>Gets the text value of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>
        <para> Gets the depth of
      the current node in the XML document.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>
        <para> Gets the base URI of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>
        <para>Gets a value indicating whether this reader can parse
 and resolve entities.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>
        <para>Gets a value indicating whether the current node is an
      empty element (for example, <c>&lt;MyElement/&gt;</c>
   ).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>
        <para> Gets a value indicating whether the current node is an
      attribute that was generated from the default value defined
      in the DTD or schema.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.QuoteChar">
      <summary>
        <para> Gets the quotation mark character used to enclose the value of an attribute
      node.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>
        <para>Gets the current <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>
        <para>Gets the current <see langword="xml:lang" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>
        <para>Gets the number of attributes on the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>
        <para>Gets a
       value indicating whether the reader is positioned at the end of the
       stream.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>
        <para> 
      Gets the state of the reader.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>
        <para>Gets a value indicating whether the current node
      has any attributes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this
 implementation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Item(System.Int32)">
      <summary>
        <para>Gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Item(System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Item(System.String,System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>
    Specifies the type of node.
 </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>
        <para>This is returned by the <see cref="T:System.Xml.XmlReader" /> if a <see langword="Read" /> 
method has not been called.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>
        <para> An element.
      </para>
        <para> Example XML: <c>&lt;item&gt;</c></para>
An <see langword="Element" /> node can have the
following child node types: <see langword="Element" />, <see langword="Text" />,
<see langword="Comment" />, <see langword="ProcessingInstruction" />, 
<see langword="CDATA" />, and <see langword="EntityReference" />. It can be the 
child of the <see langword="Document" />, <see langword="DocumentFragment" />,
<see langword="EntityReference" />, and <see langword="Element" />
nodes.
</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>
        <para> An
 attribute.
 </para>
        <para> Example XML: <c>id='123'</c></para>
        <para> An <see langword="Attribute" /> node can have the
following child node types: <see langword="Text" /> and
<see langword="EntityReference" />. The <see langword="Attribute" /> node does not 
appear as the child node of any other node type. It is not considered a
child node of an <see langword="Element" />
.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>
        <para> The
      text content of a node.
      </para>
        <para> A <see langword="Text" /> node cannot have any child nodes. 
   It can appear as the child node of the <see langword="Attribute" />,
<see langword="DocumentFragment" />, <see langword="Element" />, and 
<see langword="EntityReference" /> 
nodes.
</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>
        <para>A CDATA 
      
      section.</para>
        <para>Example XML: <c>&lt;![CDATA[my 
      escaped text]]&gt;</c></para>
        <para> 
      CDATA sections are used to escape blocks of text that would otherwise
      be recognized as markup. A <see langword="CDATA" /> node cannot have any child
      nodes. It can appear as the child of the <see langword="DocumentFragment" />,
   <see langword="EntityReference" />, and <see langword="Element" /> nodes.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>
        <para>A reference to an entity.</para>
        <para>Example XML: <c>&amp;num;</c></para>
        <para> An <see langword="EntityReference" /> node can have the 
   following child node types: <see langword="Element" />,
<see langword="ProcessingInstruction" />, <see langword="Comment" />, 
<see langword="Text" />, <see langword="CDATA" />, and 
<see langword="EntityReference" />. It can appear as the child of the 
<see langword="Attribute" />, <see langword="DocumentFragment" />, 
<see langword="Element" />, and <see langword="EntityReference" /> 

nodes.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>
        <para>An entity declaration.</para>
        <para>Example XML: <c>&lt;!ENTITY ...&gt;</c></para>
        <para>An <see langword="Entity" /> node can have child nodes 
   that represent the expanded entity (for example, <see langword="Text" /> and
<see langword="EntityReference" /> nodes). It can appear as the child of the 
<see langword="DocumentType" /> 
node.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>
        <para> A processing instruction.
      </para>
        <para> Example XML: <c>&lt;?pi test?&gt;</c></para>
        <para> A <see langword="ProcessingInstruction" /> node cannot have 
any child nodes. It can appear as the child of the <see langword="Document" />,
<see langword="DocumentFragment" />, <see langword="Element" />, and 
<see langword="EntityReference" /> 
nodes.
</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>
        <para> A comment.
      </para>
        <para> Example XML: <c>&lt;!-- my comment --&gt;</c></para>
        <para> A <see langword="Comment" /> node cannot have any child 
nodes. It can appear as the child of the <see langword="Document" />,
<see langword="DocumentFragment" />, <see langword="Element" />, and 
<see langword="EntityReference" /> 
nodes.
</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>
        <para> A document object that, as the root of the document tree, provides access
 to the entire XML document.
 </para>
        <para> A <see langword="Document" /> node 
 can have the following child node types:
<see langword="XmlDeclaration" /> 
, <see langword="Element" /> (maximum of one),
<see langword="ProcessingInstruction" />, <see langword="Comment" />, and 
<see langword="DocumentType" /> 
. It cannot
appear as the child of any node types.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>
        <para> The document type declaration, indicated by the following tag.
      </para>
        <para> Example XML: <c>&lt;!DOCTYPE ...&gt;</c></para>
        <para> A <see langword="DocumentType" /> node can have the 
following child node types: <see langword="Notation" /> and
<see langword="Entity" />. It can appear as the child of the 
<see langword="Document" /> 
node.
</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>
        <para> A document fragment.
      </para>
        <para> The <see langword="DocumentFragment" /> node associates a 
   node or subtree with a document without actually being contained within the
   document. A <see langword="DocumentFragment" /> node can have the following child
   node types: <see langword="Element" />, <see langword="ProcessingInstruction" />,
<see langword="Comment" />, <see langword="Text" />, <see langword="CDATA" />, and 
<see langword="EntityReference" /> 

. It
cannot appear as the child of any node types.
</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>
        <para> A notation in the document type declaration.
      </para>
        <para> Example XML: <c>&lt;!NOTATION ...&gt;</c></para>
        <para> A <see langword="Notation" /> node cannot have any child 
nodes. It can appear as the child of the <see langword="DocumentType" />
node.
</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>
        <para> White space between markup.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>
        <para> White space between markup in a mixed content model or white
      space within the <c>xml:space="preserve"</c> scope.
   </para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>
        <para> An end element tag.</para>
        <para>Example XML: <c>&lt;/item&gt;</c></para>
        <para>Returned when <see cref="T:System.Xml.XmlReader" /> gets to the end of an element.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>
        <para>Returned when <see langword="XmlReader" /> gets to the end of the entity
   replacement as a result of a call to <see cref="M:System.Xml.XmlReader.ResolveEntity" />
   .</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>
        <para> The XML declaration.
 </para>
        <para> Example XML: <c>&lt;?xml version='1.0'?&gt;</c></para>
        <para> The <see langword="XmlDeclaration" /> 
node must be the first node in the document. It cannot have children. It is a
child of the <see langword="Document" />
node. It can have attributes that provide version
and encoding information.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>
        <para> Represents a notation declaration: &lt;!NOTATION ... &gt;.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node. Notation 
      nodes cannot be cloned. Calling this method on an
   <see langword="XmlNotation" /> object throws an exception.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
        <para>For <see langword="XmlNotation" />
nodes, this method has no
effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the children of the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
        <para>For <see langword="XmlNotation " />nodes, this method has no effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>
        <para> Gets the name of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>
        <para> Gets the name of the current node without the namespace prefix.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the node is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>
        <para>Gets
      the value of the public identifier on the notation declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>
        <para>Gets the value of
      the system identifier on the notation declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>
        <para>Gets the markup representing this node and all its
      children.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>
        <para> Gets the markup representing the children of
      this node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>
        <para> Provides all the context information required 
      by <see cref="T:System.Xml.XmlTextReader" /> or <see cref="T:System.Xml.XmlValidatingReader" />
      to parse an XML fragment.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlParserContext" /> class with the specified
      values.</para>
      </summary>
      <param name="nt">The <see cref="T:System.Xml.XmlNameTable" /> to use to atomize strings. If this is <see langword="null" />, the name table used to construct the <paramref name="nsMgr" /> is used instead. For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</param>
      <param name="nsMgr">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for looking up namespace information. </param>
      <param name="xmlLang">The <see langword="xml:lang" /> scope.</param>
      <param name=" xmlSpace">An <see cref="T:System.Xml.XmlSpace" /> value indicating the <see langword="xml:space" /> scope. </param>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlParserContext" /> class with the specified values.</para>
      </summary>
      <param name="nt">The <see cref="T:System.Xml.XmlNameTable" /> to use to atomize strings. If this is <see langword="null" />, the name table used to construct the <paramref name="nsMgr" /> is used instead. For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</param>
      <param name=" nsMgr">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for looking up namespace information.</param>
      <param name="xmlLang">The <see langword="xml:lang" /> scope.</param>
      <param name=" xmlSpace">An <see cref="T:System.Xml.XmlSpace" /> value indicating the <see langword="xml:space" /> scope. </param>
      <param name=" enc">An <see cref="T:System.Text.Encoding" /> object indicating the encoding setting.</param>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlParserContext" />
   class with the specified values.</para>
      </summary>
      <param name="nt">The <see cref="T:System.Xml.XmlNameTable" /> to use to atomize strings. If this is <see langword="null" />, the name table used to construct the <paramref name="nsMgr" /> is used instead. For more information on atomized strings, see<see cref="T:System.Xml.XmlNameTable" /> .</param>
      <param name="nsMgr">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for looking up namespace information. </param>
      <param name="docTypeName">The name of the document type declaration.</param>
      <param name="pubId">The public identifier.</param>
      <param name="sysId">The system identifier.</param>
      <param name="internalSubset">The internal DTD subset.</param>
      <param name="baseURI">The base URI for the XML fragment (the location from which the fragment was loaded).</param>
      <param name="xmlLang">The <see langword="xml:lang" /> scope.</param>
      <param name=" xmlSpace">An <see cref="T:System.Xml.XmlSpace" /> value indicating the <see langword="xml:space" /> scope. </param>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlParserContext" /> class with the specified values.</para>
      </summary>
      <param name="nt">The <see cref="T:System.Xml.XmlNameTable" /> to use to atomize strings. If this is <see langword="null" />, the name table used to construct the <paramref name="nsMgr" /> is used instead. For more information on atomized strings, see <see cref="T:System.Xml.XmlNameTable" /> .</param>
      <param name=" nsMgr">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for looking up namespace information.</param>
      <param name=" docTypeName">The name of the document type declaration.</param>
      <param name=" pubId">The public identifier.</param>
      <param name="sysId">The system identifier.</param>
      <param name="internalSubset">The internal DTD subset.</param>
      <param name="baseURI">The base URI for the XML fragment (the location from which the fragment was loaded).</param>
      <param name="xmlLang">The <see langword="xml:lang" /> scope.</param>
      <param name=" xmlSpace">An <see cref="T:System.Xml.XmlSpace" /> value indicating the <see langword="xml:space" /> scope. </param>
      <param name=" enc">An <see cref="T:System.Text.Encoding" /> object indicating the encoding setting.</param>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlNameTable" /> used to atomize strings. For more information 
   on atomized strings, see <see cref="T:System.Xml.XmlNameTable" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>
        <para>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>
        <para>Gets or sets the name of the document type declaration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>
        <para>Gets or sets the public identifier.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>
        <para>Gets or sets the system identifier.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>
        <para>Gets or sets the base URI.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>
        <para>Gets or sets the internal DTD subset.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>
        <para>Gets or sets the current <see langword="xml:lang" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>
        <para>Gets or sets the current <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>
   Gets or sets the encoding type.
</summary>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>
        <para> Represents a processing instruction, which XML defines to keep
 processor-specific information in the text of the document.
 </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The duplicate node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified
   <see cref="T:System.Xml.XmlWriter" /> . Because 
      ProcessingInstruction nodes do not have children, this method has no effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>
        <para> Gets the target of the processing instruction.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>
        <para> Gets or sets the content of the processing instruction,
 excluding the target.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>
        <para> Gets or sets the concatenated values of the node and
      all its children.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>
        <para>Represents an XML qualified name.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>
        <para>Provides an empty <see langword="XmlQualifiedName" />.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlQualifedName" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see langword="XmlQualifedName" /> class with the specified name.</para>
      </summary>
      <param name="name">The local name to use as the name of the <see langword="XmlQualifiedName" /> object.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the
 <see langword="XmlQualifedName" /> class with the specified name and namespace.</para>
      </summary>
      <param name="name">The local name to use as the name of the <see langword="XmlQualifiedName" /> object. </param>
      <param name=" ns">The namespace for the <see langword="XmlQualifiedName" /> object.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>
        <para>Returns the hash code for the
 <see langword="XmlQualifiedName" /> .</para>
      </summary>
      <returns>
        <para>A hash code for this object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>
        <para>Returns the string value of the
 <see langword="XmlQualifiedName" />.</para>
      </summary>
      <returns>
        <para>The string value of the
 <see langword="XmlQualifiedName" /> in the format of 
 <see langword="namespace:localname" /> . If the 
 object does not have a namespace defined, this method returns just the local
 name.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>
        <para>Checks if the specified
 <see langword="XmlQualifiedName" /> is the same instance object as this object.</para>
      </summary>
      <param name="other">The <see langword="XmlQualifiedName" /> to compare.</param>
      <returns>
        <para>
          <see langword="true" /> if the two are
 the same instance object; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
        <para>Compares two <see langword="XmlQualifiedName" /> objects.</para>
      </summary>
      <param name="a">An <see langword="XmlQualifiedName" /> to compare.</param>
      <param name=" b">An <see langword="XmlQualifiedName" /> to compare.</param>
      <returns>
        <para>
          <see langword="true" /> if the two
 objects have the same name and namespace values; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>
        <para>Compares two <see langword="XmlQualifiedName" /> objects.</para>
      </summary>
      <param name="a">An <see langword="XmlQualifiedName" /> to compare.</param>
      <param name=" b">An <see langword="XmlQualifiedName" /> to compare.</param>
      <returns>
        <para>
          <see langword="true" /> if the name
 and namespace values for the two objects differ; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>
        <para>Returns the string value of the
 <see langword="XmlQualifiedName" />.</para>
      </summary>
      <param name="name">The name of the object.</param>
      <param name=" ns">The namespace of the object.</param>
      <returns>
        <para>The string value of the
 <see langword="XmlQualifiedName" /> in the format of 
 <see langword="namespace:localname" /> . If the
 object does not have a namespace defined, this method returns just the local
 name.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>
        <para> Gets a string representation of the namespace
      of the <see langword="XmlQualifiedName" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>
        <para> Gets a string representation of the qualified name
 of the <see langword="XmlQualifiedName" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>
   Gets a value indicating whether the
<see langword="XmlQualifedName" /> is empty.
</summary>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>
        <para>Resolves external XML resources named by a URI.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
        <para>When overridden in a derived class, maps a
 URI to an object containing the actual resource.</para>
      </summary>
      <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /></param>
      <param name="role">The current version does not use this parameter when resolving URIs. This is provided for future extensibility purposes. For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
      <param name="ofObjectToReturn">The type of object to return. The current version only returns System.IO.Stream objects.</param>
      <returns>
        <para>A <see langword="System.IO.Stream" /> object or <see langword="null" /> if a type other than stream is specified.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>
        <para>When overridden in a derived class, resolves the absolute URI from the base and
 relative URIs.</para>
      </summary>
      <param name="baseUri">The base URI used to resolve the relative URI</param>
      <param name=" relativeUri">
        <para> The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <paramref name="baseUri" /> value. If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</para>
      </param>
      <returns>
        <para>The absolute URI or
 <see langword="null" /> if the relative URI can not be resolved.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>
        <para> When overridden in a derived class, sets the credentials used to authenticate Web
 requests.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>
        <para>Represents white space between markup in a mixed content
      mode or white space within an xml:space= 'preserve' scope. This is also referred
      to as significant white space.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. For significant white space nodes, the cloned node always includes the data value, regardless of the parameter setting.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified 
   <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>
        <para>Specifies the current <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>
        <para>No <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>
        <para>The <see langword="xml:space" /> scope equals 
<see langword="default" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>
        <para>The <see langword="xml:space" /> scope equals 
<see langword="preserve" /> .</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>
        <para> Represents the text content of an element or attribute.
 </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>
        <para> Splits the node into two nodes at the specified offset, keeping
      both in the tree as siblings.
      </para>
      </summary>
      <param name="offset">The offset at which to split the node. </param>
      <returns>
   The new node.
</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified
   <see cref="T:System.Xml.XmlWriter" /> . 
   <see langword="XmlText" /> nodes do not have children, so this method has no 
      effect.</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>
        <para>Gets the type of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>
 Represents the XML type for the string. This allows the
 string to be read as a particular XML type, for example a CDATA section type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>
   CDATA type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>
        <para> ID type.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>
        <para> IDREF type.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>
   IDREFS type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>
        <para> ENTITY type.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>
        <para> ENTITIES type.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>
        <para> NMTOKEN type.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>
   NMTOKENS type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>
        <para> NOTATION type.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>
   ENUMERATION type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>
   QName type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>
   NCName type.
</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>
   No type.
</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>
        <para> Resolves external XML resources
      named by a URI.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>
        <para> Creates a new instance of the 
   <see langword="XmlUrlResolver" /> class.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>
        <para>Maps a
 URI to an object containing the actual resource.</para>
      </summary>
      <param name="absoluteUri">The URI returned from <see cref="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)" /></param>
      <param name="role">The current implementation does not use this parameter when resolving URIs. This is provided for future extensibility purposes. For example, this can be mapped to the xlink:role and used as an implementation specific argument in other scenarios.</param>
      <param name="ofObjectToReturn">The type of object to return. The current implementation only returns <see langword="System.IO.Stream" /> objects.</param>
      <returns>
        <para>A <see langword="System.IO.Stream" /> object or <see langword="null" /> if a
 type other than stream is specified.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>
        <para>Resolves the absolute URI from the base and relative URIs.</para>
      </summary>
      <param name="baseUri">The base URI used to resolve the relative URI</param>
      <param name="relativeUri">
        <para> The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <paramref name="baseUri" /> value. If relative, it combines with the <paramref name="baseUri" /> to make an absolute URI.</para>
      </param>
      <returns>
        <para>The absolute URI or <see langword="null" /> if the relative URI can not be resolved.</para>
      </returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>
        <para> Sets credentials used to authenticate Web
      requests.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>
        <para> Represents a reader that provides DTD, XML-Data Reduced (XDR) schema, and
      XML Schema definition
      language (XSD) schema validation.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>
        <para>Initializes a new instance of the
 <see langword="XmlValidatingReader" />
 class that validates the content returned from the given <see cref="T:System.Xml.XmlReader" />
 .</para>
      </summary>
      <param name="reader">The <see langword="XmlReader" /> to read from while validating. The current implementation only supports <see cref="T:System.Xml.XmlTextReader" /> .</param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlValidatingReader" /> class with the specified
      values.</para>
      </summary>
      <param name="xmlFragment">The string containing the XML fragment to parse.</param>
      <param name=" fragType">The <see cref="T:System.Xml.XmlNodeType" />of the XML fragment. This also determines what the fragment string can contain (see table below).</param>
      <param name=" context">
        <para>The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed. This includes the <see cref="T:System.Xml.NameTable" /> to use, encoding, namespace scope, the current xml:lang and the xml:space scope.</para>
      </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlValidatingReader" />
   class with the specified values.</para>
      </summary>
      <param name="xmlFragment">The stream containing the XML fragment to parse.</param>
      <param name="fragType">The <see cref="T:System.Xml.XmlNodeType" />of the XML fragment. This determines what the fragment can contain (see table below).</param>
      <param name="context">
        <para>The <see cref="T:System.Xml.XmlParserContext" /> in which the XML fragment is to be parsed. This includes the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <see langword="xml:lang" /> and the <see langword="xml:space" /> scope.</para>
      </param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>
        <para>Gets the common language runtime type for the specified XML Schema definition language (XSD) type.</para>
      </summary>
      <returns>
        <para>The common language runtime type for the specified
      XML Schema (XSD) type.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>
        <para>Gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
      <returns>
        <para>The value of the specified attribute.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>The value of the specified attribute. If the attribute 
 is not found, String.Empty is returned. This
 method does not move the reader.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>
        <para>Moves to the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found;
 otherwise, <see langword="false" />. If <see langword="false" />, the position
 of the reader does not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>
        <para>Moves to the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="localName">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
      <returns>
        <para>
          <see langword="true" /> if the attribute is found; otherwise,
<see langword="false" />. If <see langword="false" />, the position of the reader does
 not change.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>
        <para>Moves to the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>
        <para> Moves to the first attribute.
 </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false " />(the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>
        <para> Moves to the next attribute.
 </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there is a next attribute;
<see langword="false" /> if there are no more attributes.
 </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>
        <para> Moves to the element that contains the current attribute node.
 </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns
 the attribute); <see langword="false" /> if the reader is not positioned on an attribute
 (the position of the reader does not change).</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>
        <para>Reads the next
 node from the stream.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the next node was read successfully;
<see langword="false" /> if there are no more nodes to read.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>
        <para> Changes the <see cref="P:System.Xml.XmlReader.ReadState" />
to Closed.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadInnerXml">
      <summary>
        <para>Reads all the content, including markup, as a string.</para>
      </summary>
      <returns>
        <para> All the XML content, including markup, in the current node. If the current node has no children, an empty string is returned.</para>
        <para>If the current node is neither an element nor attribute, an empty
 string is returned.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadOuterXml">
      <summary>
        <para>Reads the content, including markup, representing this node and all its children.</para>
      </summary>
      <returns>
        <para>If the reader is positioned on an element or an attribute node, this method
 returns all the XML content, including markup, of the current node and all its
 children; otherwise, it returns an empty string.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>
        <para>Reads the contents of an element or text node as a string.</para>
      </summary>
      <returns>
        <para>The contents of the element or text node. This can be an empty string if
 the reader is positioned on something other than an element or text node, or
 if there is no more text content to return in the current context.</para>
        <para>
          <see langword="Note:" /> The text node can be either an element or
 an attribute text node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>
        <para> Resolves a namespace prefix in the current element's scope.
 </para>
      </summary>
      <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized. </param>
      <returns>
        <para> The namespace URI to which the prefix maps or <see langword="null" /> if no
 matching prefix is found.
 </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>
        <para> Resolves the entity reference for
 <see langword="EntityReference" /> nodes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>
        <para>Parses the attribute value into one or more 
   <see langword="Text" />, <see langword="EntityReference" />, or 
   <see langword="EndEntity" /> nodes.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are nodes to return.</para>
        <para>
          <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</para>
        <para>An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</para>
      </returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>
        <para>Sets an event handler for receiving information about DTD, XML-Data Reduced (XDR) schema, and XML Schema definition language (XSD) schema
      validation errors.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>
        <para> Gets the type of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>
        <para> Gets
 the qualified name of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>
        <para> Gets the local name of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>
        <para>Gets the namespace URI (as defined in the W3C Namespace
 specification) of the node on which the reader is positioned. </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>
        <para> Gets the namespace prefix associated with the current node.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>
        <para> Gets a <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> to use for validation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>
        <para>Gets a schema type object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>
        <para>Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlValidatingReader.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>
        <para>Gets the text value of the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>
        <para> Gets the depth of
 the current node in the XML document.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>
        <para> Gets the base URI of the current node.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>
        <para>Gets a value indicating whether the current node is an 
 empty element (for example, <c>&lt;MyElement/&gt;</c>
 ).</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>
        <para> Gets a value indicating whether the current node is an
 attribute that was generated from the default value defined
 in the DTD or schema.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>
        <para>
       Gets the quotation mark character used to enclose the value of an attribute
       node.
    </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>
        <para>Gets the current <see langword="xml:space" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>
        <para>Gets the current <see langword="xml:lang" /> scope.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>
        <para>Gets the number of attributes on the current node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlReader" /> used to construct this
<see langword="XmlValidatingReader" /> 
.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>
        <para>Gets a value describing what type of validation to
      perform.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Item(System.Int32)">
      <summary>
        <para>Gets the value of the attribute with the specified index.</para>
      </summary>
      <param name="i">The index of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Item(System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified name.</para>
      </summary>
      <param name="name">The qualified name of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Item(System.String,System.String)">
      <summary>
        <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
      </summary>
      <param name="name">The local name of the attribute.</param>
      <param name=" namespaceURI">The namespace URI of the attribute.</param>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>
        <para> Gets a
 value indicating whether the reader is positioned at the end of the
 stream.
 </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>
        <para> 
      Gets the state of the reader.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this
 implementation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>
        <para>Gets or sets a value that specifies how the reader handles entities.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>
        <para>Gets the encoding attribute for the
 document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>
        <para> Sets the <see cref="T:System.Xml.XmlResolver" /> used for resolving external DTD and schema location
   references. The <see langword="XmlResolver" /> is also used to
   handle any import or include elements
   found in XML Schema definition language (XSD) schemas.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>
        <para>Gets a value indicating whether this reader can parse
 and resolve entities.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>
        <para> Gets or sets a value indicating whether to do namespace support.
 </para>
      </summary>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>
        <para>Represents white space in element content.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of this node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself. For white space nodes, the cloned node always includes the data value, regardless of the parameter setting.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>
        <para>Saves all the children of the node to the specified 
   <see cref="T:System.Xml.XmlWriter" /> .</para>
      </summary>
      <param name="w">The <see langword="XmlWriter" /> to which you want to save.</param>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>
        <para>Gets the qualified name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>
        <para> Gets the local name of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>
        <para> Gets the type of the node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>
        <para>Gets or sets the value of the node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>
        <para> Specifies formatting options for the <see cref="T:System.Xml.XmlTextWriter" /> .
   </para>
      </summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>
        <para> No special formatting is applied. This is the default.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>
        <para> Causes child elements to be indented
      according to the <see cref="P:System.Xml.XmlTextWriter.Indentation" /> and <see cref="P:System.Xml.XmlTextWriter.IndentChar" /> settings. This option indents element
      content only; mixed content is not affected. For the XML 1.0
      definitions of
      
      these terms, see the W3C documentation (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content and http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content).</para>
      </summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>
        <para> Specifies the state of the <see cref="T:System.Xml.XmlWriter" /> .
   </para>
      </summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>
        <para> A Write method has not been called.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>
        <para> The prolog is being written.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>
        <para> An element start tag is being written.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>
        <para> An attribute value is being written.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>
        <para> The element content is being written.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>
        <para> The <see cref="M:System.Xml.XmlWriter.Close" /> method has been called.
   </para>
      </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>
        <para> Encapsulates a compiled XPath expression. This class is returned as a
      result of a call to <see cref="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" /> and is used by the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />, <see cref="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" /> and <see cref="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)" /> methods.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>
        <para> Sorts the nodes
      selected by the <see langword="XPathExpression" />,
      according to the <see cref="T:System.Collections.IComparer" />
      interface.</para>
      </summary>
      <param name="expr">
        <para>An expression representing the sort key. This can be a string or an <see langword="XPathExpression" /> object. The result of this expression is converted to a string, according to the XPath specification, for comparison. In an XSLT stylesheet, if xsl:sort is used, but no select expression is specified, then string(.) is used by default.</para>
      </param>
      <param name=" comparer">A class derived from the <see langword="IComparer" /> interface to use for the data type comparison.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>
        <para> Sorts the nodes selected by the
   <see langword="XPathExpression" /> according to the supplied parameters.</para>
      </summary>
      <param name="expr">
        <para>An expression representing the sort key. This can be a string or an <see langword="XPathExpression" /> object. The result of this expression is converted to a string, according to the XPath specification, for comparison. In an XSLT stylesheet, if <see langword="xsl:sort" /> is used, but no select expression is specified, then string(.) is used by default.</para>
      </param>
      <param name=" order">A <see cref="T:System.Xml.XPath.XmlSortOrder" /> value indicating the sort order.</param>
      <param name=" caseOrder">A <see cref="T:System.Xml.XPath.XmlCaseOrder" /> value indicating how to sort upper/lower case letters. This is language dependent, providing a <paramref name="lang" /> parameter is supplied.</param>
      <param name=" lang">
        <para>The language to use for comparison. Uses the <see cref="T:System.Globalization.CultureInfo" /> class that can be passed to the <see langword="String.Compare" /> method for the language types, for example, "us-en" for US English. If an empty string is specified, the system environment is used to determine the <see langword="CultureInfo" /> .</para>
      </param>
      <param name=" dataType">
        <see cref="T:System.Xml.XPath.XmlDataType" />indicating sort order for data type.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>
        <para> Clones the <see langword="XPathExpression" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="XPathExpression" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>
        <para> Specifies the <see cref="T:System.Xml.XmlNamespaceManager" />
to use for resolving namespaces.</para>
      </summary>
      <param name="nsManager">The <see langword="XmlNamespaceManager" /> object used for resolving namespaces.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>
        <para> Gets a string representation of the
   <see langword="XPathExpression" />
   .</para>
      </summary>
      <summary>
        <para> When overridden in a derived class, gets a string representation of the
   <see langword="XPathExpression" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>
        <para> Gets the result type
      of the <see langword="XPathExpression" /> as defined
      by the W3C XPath specification.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>
        <para>Encapsulates the current execution context of the XSLT processor allowing XPath
      to resolve functions, parameters, and namespaces within XPath expressions.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltContext" /> class with the specified <see cref="T:System.Xml.NameTable" /> .</para>
      </summary>
      <param name="table">The <see langword="NameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Xsl.XsltContext" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, resolves variable reference and returns an <see cref="T:System.Xml.Xsl.IXsltContextVariable" />
representing the variable.</para>
      </summary>
      <param name="prefix">The prefix of the variable as it appears in the XPath expression.</param>
      <param name=" name">The name of the variable.</param>
      <returns>
        <para>An <see langword="IXsltContextVariable" /> representing
 the variable at runtime.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>
        <para>When overridden in a derived class, resolves a function
 reference and returns an <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> representing the
 function. The <see langword="IXsltContextFunction" />
 is used at execution time to get the
 return value of the function.</para>
      </summary>
      <param name="prefix">The prefix of the function as it appears in the XPath expression.</param>
      <param name=" name">The name of the function.</param>
      <param name=" ArgTypes">An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods).</param>
      <returns>
        <para>An <see langword="IXsltContextFunction" /> representing
 the function.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para>When overridden in a derived class, evaluates whether to preserve
      white space nodes or strip them for the given context.</para>
      </summary>
      <param name="node">The white space node that is to be preserved or stripped in the current context.</param>
      <returns>
        <para>Returns <see langword="true" /> if 
   the white space
   is to be preserved or <see langword="false" /> if the white space is to be
   stripped.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>
        <para>When overridden in a derived class, compares the base URIs of two documents based upon the
      order the documents were loaded by the XSLT processor (that is the <see cref="T:System.Xml.Xsl.XslTransform" /> class).</para>
      </summary>
      <param name="baseUri">The base URI of the first document to compare.</param>
      <param name=" nextbaseUri">The base URI of the second document to compare.</param>
      <returns>
        <para>An integer value describing the relative order of the 
      two base URIs. <see langword="-1" /> if
   <paramref name="baseUri" /> occurs before <paramref name="nextbaseUri" />, <see langword="0" /> if the
      two base URIs are identical and <see langword="1" /> if <paramref name="baseUri" /> occurs
      after <paramref name="nextbaseUri" />.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>
        <para>When overridden in a derived class, gets a value indicating whether to include white space nodes in
      the output.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.Constant">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.Child">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.Attribute">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.Descendant">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.Ancestor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.Sort">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.Querytype.None">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathArrayIterator.#ctor(System.Collections.ArrayList)">
    </member>
    <member name="M:System.Xml.XPath.XPathArrayIterator.#ctor(System.Xml.XPath.XPathArrayIterator)">
    </member>
    <member name="M:System.Xml.XPath.XPathArrayIterator.Clone">
    </member>
    <member name="M:System.Xml.XPath.XPathArrayIterator.MoveNext">
    </member>
    <member name="M:System.Xml.XPath.XPathArrayIterator.Reset">
    </member>
    <member name="P:System.Xml.XPath.XPathArrayIterator.Current">
    </member>
    <member name="P:System.Xml.XPath.XPathArrayIterator.CurrentPosition">
    </member>
    <member name="P:System.Xml.XPath.XPathArrayIterator.Count">
    </member>
    <member name="T:System.Xml.XPath.XPathDocument">
      <summary>
        <para>Provides a fast and performant read-only cache for XML document processing using XSLT.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XPathDocument" /> class. </para>
      </summary>
      <param name=" reader">An <see cref="T:System.Xml.XmlReader" /> containing the data to load.</param>
      <param name="space">An <see cref="T:System.Xml.XmlSpace" /> value indicating whether to preserve white space. Setting this to XmlSpace.Default preserves only significant white space; XmlSpace.Preserve preserves all whitespace. </param>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XPathDocument" /> class.</para>
      </summary>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /> containing the data to load.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.TextReader)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XPathDocument" /> class.</para>
      </summary>
      <param name="reader">A <see cref="T:System.IO.TextReader" /> containing the data to load.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XPathDocument" /> class.</para>
      </summary>
      <param name="stream">The stream containing the data to load.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XPathDocument" /> class.</para>
      </summary>
      <param name="uri">A URI that specifies a file containing the data to load.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String,System.Xml.XmlSpace)">
      <summary>
        <para>Initializes a new instance of the <see langword="XPathDocument" /> class. </para>
      </summary>
      <param name="uri">A URI that specifies a file containing the data to load.</param>
      <param name=" space">An <see cref="T:System.Xml.XmlSpace" /> value indicating whether to preserve whitespace. Setting this to XmlSpace.Default preserves only significant white space; XmlSpace.Preserve preserves all white space.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathDocument.CreateNavigator">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for navigating this document.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Xml.XPath.XPathNavigator" />
object.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XPath.XPathEmptyIterator.#ctor">
    </member>
    <member name="M:System.Xml.XPath.XPathEmptyIterator.Clone">
    </member>
    <member name="M:System.Xml.XPath.XPathEmptyIterator.MoveNext">
    </member>
    <member name="M:System.Xml.XPath.XPathEmptyIterator.Reset">
    </member>
    <member name="P:System.Xml.XPath.XPathEmptyIterator.Current">
    </member>
    <member name="P:System.Xml.XPath.XPathEmptyIterator.CurrentPosition">
    </member>
    <member name="P:System.Xml.XPath.XPathEmptyIterator.Count">
    </member>
    <member name="T:System.Xml.XPath.XPathException">
      <summary>
        <para> The exception that is thrown when an error occurs when processing an
      XPath expression.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XPathException" /> class using the information in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" /> object containing all the properties of an <see langword="XPathException" />.</param>
      <param name=" context">The <see langword="StreamingContext" /> object.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Streams all the <see langword="XPathException" /> properties
   into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" /> object.</param>
      <param name=" context">The <see langword="StreamingContext" /> object.</param>
    </member>
    <member name="M:System.Xml.XPath.XPathException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the 
   <see langword="XPathException" /> class using the message and <see cref="T:System.Exception" /> object.</para>
      </summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The <see langword="Exception" /> which threw the <see langword="XPathException" />, if any. This value can be <see langword="null" />.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathException.Message">
      <summary>
   Gets the error message describing the
   exception.
</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>
        <para>Specifies the sort order.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>
        <para>Nodes are sorted in ascending order. For example, if the 
 numbers 1,2,3,4 were being sorted in an ascending order, they would appear
 as 1,2,3,4.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>
        <para>Nodes are sorted in descending order. For example, 
 if the numbers 1,2,3,4 were being sorted in an descending order, they would
 appear as, 4,3,2,1.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>
        <para> Specifies the sort
      order for upper and lower case letters.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>
        <para> Ignore the case.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>
    Upper case letters are sorted before lower
    case letters.
 </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>
    Lower case letters are sorted before upper
    case letters.
 </summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>
        <para>Specifies the data type used to determine sort order.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>
    Values are sorted alphabetically.
 </summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>
    Values are sorted numerically.
 </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>
        <para> Specifies the return type of the XPath expression.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>
        <para>A numeric value.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>
        <para>A string value.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>
        <para>Boolean value <see langword="true" /> or <see langword="false" />.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>
   A node collection.
</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>
        <para>A tree fragment.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>
   Any of the XPath node types.
</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>
   The expression does not evaluate to the correct XPath
   type.
</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>
        <para>Defines the namespace scope. The enumeration can be
      passed to the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" qualify="true" />
      and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" qualify="true" /> methods to specify the type of namespace node
      to move to.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>
        <para> Returns all namespaces defined in the scope of the 
      current node. This includes the xmlns:xml namespace which is always
      declared implicitly. The order of the namespaces returned is not defined.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>
        <para> Returns all namespaces defined in the 
      scope of the current node, excluding the xmlns:xml namespace, which
      is always declared implicitly. The order of the namespaces returned is not defined.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>
        <para> Returns all namespaces that are defined locally at 
      the current node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>
        <para>Specifies the XPath node types that can be returned from the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        <para>For more information on XPath node types, see the Data Model section of the
   W3C XML Path Language (XPath) Version 1.0 Recommendation located at
   http://www.w3.org/TR/xpath#data-model.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>
        <para>The root of the node tree.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>
        <para> An element in the node tree.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>
   An attribute in the node tree.
</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>
        <para> 
      A namespace node.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>
        <para> The text content of an element.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>
        <para>A node with white space characters and xml:space set to preserve.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>
        <para>A node with only white space characters and no significant white
      space.</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>
        <para>A processing instruction. <see langword="Important:" /> This does not include XML declarations, which are
   not visible to the <see cref="T:System.Xml.XPath.XPathNavigator" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>
   A comment.
</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>
        <para>All node types.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XPath.XPathSingletonIterator.#ctor(System.Xml.XPath.XPathNavigator)">
    </member>
    <member name="M:System.Xml.XPath.XPathSingletonIterator.MakeNewCopy">
    </member>
    <member name="M:System.Xml.XPath.XPathSingletonIterator.Clone">
    </member>
    <member name="M:System.Xml.XPath.XPathSingletonIterator.MoveNext">
    </member>
    <member name="M:System.Xml.XPath.XPathSingletonIterator.Reset">
    </member>
    <member name="P:System.Xml.XPath.XPathSingletonIterator.Current">
    </member>
    <member name="P:System.Xml.XPath.XPathSingletonIterator.CurrentPosition">
    </member>
    <member name="P:System.Xml.XPath.XPathSingletonIterator.Count">
    </member>
    <member name="M:System.Xml.Xsl.Debugger.IStackFrame.GetVariablesCount">
    </member>
    <member name="M:System.Xml.Xsl.Debugger.IStackFrame.GetVariable(System.Int32)">
    </member>
    <member name="M:System.Xml.Xsl.Debugger.IStackFrame.GetVariableValue(System.Int32)">
    </member>
    <member name="P:System.Xml.Xsl.Debugger.IStackFrame.Instruction">
    </member>
    <member name="P:System.Xml.Xsl.Debugger.IStackFrame.NodeSet">
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>
        <para>Provides an interface to a given variable that is defined in the
 stylesheet during runtime execution.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>
        <para> Evaluates the variable at runtime
      and returns an object that represents the value of the variable.</para>
      </summary>
      <param name="xsltContext">An <see cref="T:System.Xml.Xsl.XsltContext" /> representing the execution context of the variable.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> representing the value of the
   variable. Possible return types include number, string, Boolean, document
   fragment or node set.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>
        <para> Gets a value indicating whether the variable is
 local.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>
        <para>Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformation (XSLT) parameter. This can be a parameter to
      a stylesheet or a template.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type 
   of the variable.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.Debugger.IVariable.Instruction">
    </member>
    <member name="P:System.Xml.Xsl.Debugger.IVariable.IsLocal">
    </member>
    <member name="P:System.Xml.Xsl.Debugger.IVariable.IsParam">
    </member>
    <member name="M:System.Xml.Xsl.InputScopeManager.ResolveXmlNamespace(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.Debugger.IXsltProcessor.GetStackFrame(System.Int32)">
    </member>
    <member name="P:System.Xml.Xsl.Debugger.IXsltProcessor.StackDepth">
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>
        <para> Contains a variable number of arguments
 which are either XSLT parameters or extension objects.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>
   Implements a new instance of the
<see langword="XsltArgumentList" />.
</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>
        <para>Gets the parameter associated with the namespace qualified
      name.</para>
      </summary>
      <param name="name">The name of the parameter. <see langword="XsltArgumentList" /> does not check to ensure the name passed is a valid local name; however, the name cannot be <see langword="null" /> .</param>
      <param name=" namespaceUri">The namespace URI associated with the parameter.</param>
      <returns>
        <para>The parameter object or
   <see langword="null" /> if one was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>
        <para>Gets the object associated with the given namespace.</para>
      </summary>
      <param name="namespaceUri">The namespace URI of the object. </param>
      <returns>
        <para>The namespace URI object or <see langword="null" /> if one
   was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>
        <para>Adds a parameter to the <see langword="XsltArgumentList" />
and associates it with the namespace qualified name.</para>
      </summary>
      <param name="name">The name to associate with the parameter.</param>
      <param name=" namespaceUri">The namespace URI to associate with the parameter. To use the default namespace, specify an empty string.</param>
      <param name=" parameter">The parameter value or object to add to the list.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>
        <para>Adds a new object to the
   <see langword="XsltArgumentList" /> and
      associates it with the namespace URI.</para>
      </summary>
      <param name="namespaceUri">The namespace URI to associate with the object. To use the default namespace, specify an empty string.</param>
      <param name=" extension">The object to add to the list.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>
        <para>Removes the parameter from the
   <see langword="XsltArgumentList" />.</para>
      </summary>
      <param name="name">The name of the parameter to remove. <see langword="XsltArgumentList" /> does not check to ensure the name passed is a valid local name; however, the name cannot be <see langword="null" /> .</param>
      <param name=" namespaceUri">The namespace URI of the parameter to remove.</param>
      <returns>
        <para>The parameter object or <see langword="null" /> if one was
   not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>
        <para>Removes the object with the namespace URI from the
   <see langword="XsltArgumentList" />.</para>
      </summary>
      <param name="namespaceUri">The namespace URI associated with the object to remove.</param>
      <returns>
        <para> The object with the namespace URI or
   <see langword="null" /> if one was not found.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>
        <para>Removes all parameters and extension objects from the
   <see langword="XsltArgumentList" />.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileContext.LookupNamespace(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileContext.ResolveVariable(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltCompileContext.DefaultNamespace">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltCompileContext.Whitespace">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>
        <para>Provides an interface to a given function defined in the 
      XSLT stylesheet during runtime execution. </para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>
        <para>Provides the method to invoke the function with the
      given arguments in the given context.</para>
      </summary>
      <param name="xsltContext"> The XSLT context for the function call.</param>
      <param name=" args">The arguments of the function call. Each argument is an element in the array.</param>
      <param name=" docContext">The context node for the function call.</param>
      <returns>
        <para>An <see cref="T:System.Object" /> representing the return value of the
   function.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>
        <para>Gets the minimum number of arguments for the function.
      This enables the user to differentiate between overloaded functions.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>
        <para>Gets the maximum number of arguments for the function. This enables the
      user to differentiate between overloaded functions.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XPath.XPathResultType" /> representing the XPath type
   returned by the function.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>
        <para>Gets the supplied XPath types for the function's argument
      list. This information can be used to discover the signature of the function
      which allows you to differentiate between overloaded functions.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.Debugger.IXsltDebugger.OnInstructionCompile(System.Xml.XPath.XPathNavigator)">
    </member>
    <member name="M:System.Xml.Xsl.Debugger.IXsltDebugger.OnInstructionExecute(System.Xml.Xsl.Debugger.IXsltProcessor)">
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>
        <para> The exception 
      that is thrown when an error occurs while processing an Extensible Stylesheet
      Language (XSL) transform.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
   Initializes a new instance of the
<see langword="XsltException" /> class using the information in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.
</summary>
      <param name="info">The <see langword="SerializationInfo" /> object containing all the properties of an <see langword="XsltException" />.</param>
      <param name=" context">The <see langword="StreamingContext" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Streams all the <see langword="XsltException" /> properties
   into the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" /> object.</param>
      <param name=" context">The <see langword="StreamingContext" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see langword="XsltException" /> class.</para>
      </summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> which threw the <see langword="XsltException" />, if any. This value can be <see langword="null" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>
   Gets the location path of the stylesheet.
</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>
        <para> Gets the line number indicating where
      the error occurred in the stylesheet.</para>
        <note type="note">
      This property is used by
      the <see cref="T:System.Xml.Xsl.XsltCompileException" /> class.
   </note>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>
        <para> Gets the line position indicating
      where the error occurred in the stylesheet.</para>
        <note type="note">
      This property is used by
      the <see cref="T:System.Xml.Xsl.XsltCompileException" /> class.
   </note>
      </summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>
   Gets the formatted error message describing
   the current exception.
</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>
        <para>The exception that is thrown by the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String)" /> method when an error is found in 
   the Extensible Stylesheet Transformation (XSLT) stylesheet.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see langword="XsltCompileException" /> class 
 using the information in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" /> object containing all the properties of an <see langword="XsltCompileException" />. </param>
      <param name="context">The <see langword="StreamingContext" /> object containing the context information.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Streams all the <see langword="XsltCompileException" /> properties into the 
<see cref="T:System.Runtime.Serialization.SerializationInfo" /> class for the given <see cref="T:System.Runtime.Serialization.StreamingContext" />.</para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" /> object.</param>
      <param name="context">The <see langword="StreamingContext" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see langword="XsltCompileException" />
class.</para>
      </summary>
      <param name="inner">The <see cref="T:System.Exception" /> that threw the <see langword="XsltCompileException" />.</param>
      <param name=" sourceUri">The location path of the stylesheet.</param>
      <param name=" lineNumber">The line number indicating where the error occurred in the stylesheet.</param>
      <param name=" linePosition">The line position indicating where the error occurred in the stylesheet.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltCompileException.Message">
      <summary>
        <para>Gets the formatted error message describing the location
      of the error. To get the actual error, you need to use the message
      on the inner exception.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>
        <para>Transforms XML data using an XSLT stylesheet.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>
        <para>Initializes a new instance of the 
   <see langword="XslTransform" /> 
   class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" />
using the specified <paramref name="args" />
and outputs the result to an <see cref="T:System.Xml.XmlReader" />
.</para>
      </summary>
      <param name="input">An object implementing the <see langword="IXPathNavigable" /> interface. In the .NET Framework this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <returns>
        <para>An <see langword="XmlReader" /> containing the results of the transform.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" />
and outputs the result to a <see cref="T:System.IO.TextWriter" />
.</para>
      </summary>
      <param name="input">An object implementing the <see langword="IXPathNavigable" /> interface. In the .NET Framework this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <param name="output">The <see langword="TextWriter" /> to which you want to output.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" />
and outputs the result to a <see cref="T:System.IO.Stream" />
.</para>
      </summary>
      <param name="input">An object implementing the <see langword="IXPathNavigable" /> interface. In the .NET Framework this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" /> ), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <param name="output">The stream to which you want to output.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" />
and outputs the result to an <see cref="T:System.Xml.XmlWriter" />
.</para>
      </summary>
      <param name="input">An object implementing the <see langword="IXPathNavigable" /> interface. In the .NET Framework this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <param name="output">The <see langword="XmlWriter" /> to which you want to output.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>
        <para>Loads the XSLT stylesheet specified by a URL.</para>
      </summary>
      <param name="url">The URL that specifies the XSLT stylesheet to load.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>
        <para>Loads the XSLT stylesheet specified by a URL.</para>
      </summary>
      <param name="url">The URL that specifies the XSLT stylesheet to load.</param>
      <param name=" resolver">The <see cref="T:System.Xml.XmlResolver" /> to use to load any stylesheets referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements. If this is <see langword="null" /> , external resources are not resolved.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>
        <para> Loads the XSLT stylesheet contained in the
   <see cref="T:System.Xml.XmlReader" />
   .</para>
      </summary>
      <param name="stylesheet">An <see langword="XmlReader" /> object that contains the XSLT stylesheet.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>
        <para> Loads the XSLT stylesheet contained in the
   <see cref="T:System.Xml.XmlReader" />
   .</para>
      </summary>
      <param name="stylesheet">An <see langword="XmlReader" /> object that contains the XSLT stylesheet.</param>
      <param name=" resolver">The <see cref="T:System.Xml.XmlResolver" /> used to load any stylesheets referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements. If this is <see langword="null" /> , external resources are not resolved.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>
        <para> Loads the XSLT stylesheet contained in the
   <see cref="T:System.Xml.XPath.XPathNavigator" /> .</para>
      </summary>
      <param name="stylesheet">An <see langword="XPathNavigator" /> object that contains the XSLT stylesheet.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>
        <para> Loads the XSLT stylesheet contained in the
   <see cref="T:System.Xml.XPath.XPathNavigator" /> .</para>
      </summary>
      <param name="stylesheet">An <see langword="XPathNavigator" /> object that contains the XSLT stylesheet.</param>
      <param name=" resolver">The <see cref="T:System.Xml.XmlResolver" /> used to load any stylesheets referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements. If this is <see langword="null" /> , external resources are not resolved.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>
        <para>Loads the XSLT stylesheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</para>
      </summary>
      <param name="stylesheet">An object implementing the <see langword="IXPathNavigable" /> interface. In the .NET Framework this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT stylesheet.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>
        <para>Loads the XSLT stylesheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</para>
      </summary>
      <param name="stylesheet">An object implementing the <see langword="IXPathNavigable" /> interface. In the .NET Framework this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT stylesheet.</param>
      <param name=" resolver">The <see cref="T:System.Xml.XmlResolver" /> used to load any stylesheets referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements. If this is <see langword="null" /> , external resources are not resolved.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" />
using the specified <paramref name="args" />
and outputs the result to an <see cref="T:System.Xml.XmlReader" />
.</para>
      </summary>
      <param name="input">An <see langword="XPathNavigator" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <returns>
        <para>An <see langword="XmlReader" /> containing the results of the transform.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using
   the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />
   .</para>
      </summary>
      <param name="input">An <see langword="XPathNavigator" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <param name="output">The <see langword="XmlWriter" /> to which you want to output.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" />
and outputs the result to a <see cref="T:System.IO.Stream" />
.</para>
      </summary>
      <param name="input">An <see langword="XPathNavigator" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <param name="output">The stream to which you want to output.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>
        <para>Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" />
and outputs the result to a <see cref="T:System.IO.TextWriter" />
.</para>
      </summary>
      <param name="input">An <see langword="XPathNavigator" /> containing the data to be transformed.</param>
      <param name="args">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</param>
      <param name="output">The <see langword="TextWriter" /> to which you want to output.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>
        <para>Transforms the XML data in the input file and outputs
 the result to an output file.</para>
      </summary>
      <param name="inputfile">The URL of the source document to be transformed.</param>
      <param name=" outputfile">The URL of the output file.</param>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>
        <para> Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" /> method
   is called.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>
        <para> Represents the abstract class for mapping XML Schema definition language
      (XSD) and .NET Framework types.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager)">
      <summary>
        <para>Parses values from the 
   <see langword="XmlNameTable" /> .</para>
      </summary>
      <param name="s">string</param>
      <param name=" nameTable">
        <see langword="XmlNameTable" />
      </param>
      <param name=" nsmgr">
        <see langword="XmlNamespaceManager" />
      </param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>
        <para> Gets the .NET Framework type for
      the specified XML Schema definition language (XSD) type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>
        <para>Gets the type for the string as specified in the World Wide Web Consortium (W3C)
      XML 1.0 specification.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>
        <para>Returns detailed information related to the
   <see langword="ValidationEventHandler" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>
        <para>Gets the severity of the validation event.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>
   Gets the <see cref="T:System.Xml.Schema.XmlSchemaException" /> associated with the
   validation event.
</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>
        <para>Gets the text description corresponding to the
      validation event.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>
        <para> Represents the method that handles the <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>
        <para>Contains the definition of a schema. All XML Schema definition language (XSD) elements are children of the
   <see langword="schema" /> element. Represents the World Wide Web Consortium (W3C)
   <see langword="schema" />
   element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>
        <para>Creates an empty schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>
        <para>Gets or sets the line number in the file to which the <see langword="schema" />
element refers.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>
        <para>Gets or sets the line position in the file to which the
   <see langword="schema" /> element refers.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>
        <para>Gets or sets the source location for the file
      that loaded the schema.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>
        <para>Provides the namespace for validation.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>
        <para>Provides the instance namespace.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>
        <para>Constructs a new, empty schema.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>
        <para>Reads an XSD Schema from the supplied text reader.</para>
      </summary>
      <param name="reader">The supplied TextReader.</param>
      <param name=" validationEventHandler">The validation event handler that receives information about the XML Schema syntax errors.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>
        <para>Reads an XML Schema fefinition language (XSD) schema
      from the supplied stream.</para>
      </summary>
      <param name="stream">The supplied data stream.</param>
      <param name=" validationEventHandler">The validation event handler that receives information about XML Schema syntax errors.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>
        <para>Reads an XML Schema definition language (XSD) schema
      from the supplied reader.</para>
      </summary>
      <param name="reader">The supplied XmlReader.</param>
      <param name=" validationEventHandler">The validation event handler that receives information about the XML Schema syntax errors.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>
        <para>Writes the XML Schema to the supplied data stream.</para>
      </summary>
      <param name="stream">The supplied datat stream.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>
        <para> Writes the XML Schema definition language (XSD) schema
      to the supplied <see langword="stream" /> .</para>
      </summary>
      <param name="stream">The supplied data stream.</param>
      <param name=" namespaceManager">The XmlNamespaceManager.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>
        <para>Writes the XML Schema definition language (XSD) schema
      to the supplied <see langword="TextWriter" /> .</para>
      </summary>
      <param name="writer">The supplied TextWriter.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>
        <para>Writes the XML Schema definition language (XSD) schema
      to the supplied <see langword="TextWriter" /> .</para>
      </summary>
      <param name="writer">The supplied TextWriter.</param>
      <param name=" namespaceManager">The XmlNamespaceManager.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>
        <para>Writes the XML Schema Definition language (XSD) schema
      to the supplied <see langword="XmlWriter" /> .</para>
      </summary>
      <param name="writer">The supplied XmlWriter.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>
        <para> Writes the XML Schema Definition language (XSD) schema
      to the supplied <see langword="XmlWriter" /> .</para>
      </summary>
      <param name="writer">The supplied XmlWriter.</param>
      <param name=" namespaceManager">The XmlNamespaceManager.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>
        <para> Compiles the XML Schema definition language (XSD)
      Schema Object Model (SOM) into schema information for validation. Used to check
      the syntactic and semantic structure of the programmatically-built SOM. Semantic
      validation checking is performed during compilation.</para>
      </summary>
      <param name="validationEventHandler">The validation event handler that receives information about XML schema validation errors.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>
        <para>Gets or sets the form for attributes declared in the target
      namespace of the schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>
        <para> Gets or sets the <see langword="BlockDefault" /> attribute on element and complex type 
   elements in the <see langword="targetNamespace" />
   of the schema. The <see langword="block" /> attribute prevents a complex
   type (or element) that has the specified
   type of derivation from being used in place of the inherited complex type (or
   element). The type of derivation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>
        <para>Gets or sets the default value of
      the <see langword="final" />
      attribute on element and complex type elements in the target namespace
      of this schema. The <see langword="final" /> attribute prevents the specified
      type of derivation of an element
      or complex type. The type of derivation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>
        <para>Gets or sets the form for elements declared in the target
      namespace of the schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>
        <para>Gets or sets the property for the schema target namespace. The URI reference of
      the namespace of this schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>
        <para>Gets or sets the version of the schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>
        <para> Gets the collection of
      included and imported schemas.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>
        <para> Gets the <see langword="Items" />
collection that is used to
add new element types at the <see langword="schema" />
element level.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>
        <para> Gets information that indicates if the schema has been compiled.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" />, for all attributes in the schema,
   which holds the post-compilation value of the <see langword="Attribute" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" /> for all attribute groups in the
   schema, which holds the post-compilation value of
   the <see langword="AttributeGroups" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" />for all schema types in the schema,
   which holds the post-compilation value of the <see langword="SchemaTypes" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" /> for all elements in the schema,
   which holds the post-compilation value of the <see langword="Elements" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>
        <para>Gets or sets the string id.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>
        <para>Gets and sets the qualified attributes which do not belong to the schema 
      target namespace.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" /> for all groups in the schema,
   which holds the post-compilation value of the <see langword="Groups" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" /> for all notations in the schema.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>
        <para> Permits the elements in the group to appear (or not appear) in any order
      in the containing element. Represents the World Wide Web Consortium (W3C)<see langword=" all" /> element
      (compositor).</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>
        <para> An abstract class for <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaAll" />, or <see langword="XmlSchemaSequence" />
.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>
        <para>Base class for all particle types.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>
        <para> The base class for any element that can contain 
      annotation elements.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>
        <para>Gets or sets the string id.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>
        <para> Gets or sets the <see langword="annotation" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>
        <para>Gets or sets the qualified attributes that do not belong to the schema
      target namespace.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>
        <para> Gets or sets the number as a string value. The minimum number of times the particle
      can occur. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>
        <para> Gets or sets the number as a string
      value. Maximum number of times the particle can occur. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>
        <para>Gets or sets the minimum number of times the particle can occur.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>
        <para>Gets or sets the maximum number of times the particle can occur.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>
        <para>This collection is used to add new elements to the 
      compositor.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>
        <para>Gets the collection of <see langword="XmlSchemaElement" /> elements contained within
   the <see langword="all" /> compositor.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>
        <para>Defines an annotation. Represents the World Wide Web Consortium (W3C)
   <see langword="annotation" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>
        <para>Gets or sets the string id.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>
        <para>Gets the <see langword="Items" /> 
collection that is used to store the <see langword="appinfo" /> and
<see langword="documentation" /> child 
elements.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>
        <para>Gets and sets the qualified attributes that do not belong to the schema target
      namespace.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>
        <para>Enables any element from the specified namespace or namespaces to
      appear in the containing <see langword="complexType" />element. Represents the World Wide Web Consortium (W3C)
   <see langword="any" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>
        <para>Gets or sets the namespaces containing the elements that can be used.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>
        <para>Gets or sets information about how an application or XML processor should
      handle the validation of XML documents for the elements specified by the
   <see langword="any" /> element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>
        <para>Enables any attribute from the specified namespace or namespaces to
      appear in the containing <see langword="complexType" />
      element. Represents the World
      Wide Web Consortium
      (W3C) <see langword="anyAttribute" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>
        <para>Gets or sets the namespaces containing the attributes that can be used.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>
        <para>Gets or sets information about how an application or XML processor should
      handle the validation of XML documents for the attributes specified by the
   <see langword="anyAttribute" /> element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>
        <para> Defines application specific information within an annotation. Represents the World
      Wide Web Consortium (W3C) <see langword="appinfo" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>
        <para>Gets or sets the source of the application information.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>
        <para>Gets or sets an array of <see langword="XmlNode" /> that represents the AppInfo child nodes. </para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>
        <para>Class for attribute types. Represents the World Wide Web Consortium (W3C) <see langword="attribute" /> element. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>
        <para>Gets or sets the default value for the attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>
        <para>Gets or sets the fixed value for the attribute. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>
        <para>Gets or sets the form for the attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>
        <para> Gets or sets the name of the attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>
        <para> Gets or sets the name of an attribute declared in this schema (or another schema indicated by the specified namespace).</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>
        <para>Gets or sets the name of the simple type defined in this schema (or
      another schema indicated by the specified namespace). </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>
        <para> 
      Gets or sets the attribute type to a simple type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>
        <para>Gets or sets information about how the attribute is used.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>
        <para> Gets the qualified name for the attribute which holds the 
      post-compilation value of the <see langword="QualifiedName" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>
        <para>Gets the common runtime library (CLR) object based on
      the <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> or <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" />
      of the attribute that holds the post-compilation value of the
   <see langword="AttributeType" /> property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>
        <para>Class for attribute groups. Groups a set of attribute declarations so that they
      can be incorporated as a group into complex type definitions. Represents the World
      Wide Web Consortium (W3C) <see langword="attributeGroup" />
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>
        <para>Gets or sets the name of the attribute group.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>
        <para>Gets the collection of attributes for the attribute group.
      Contains <see langword="XmlSchemaAttribute" /> and
   <see langword="XmlSchemaAttributeGroupRef" /> elements.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>
        <para>Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> component of the
   attribute group. </para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>
        <para>Class for the attribute group reference. Represents the World Wide Web Consortium (W3C) <see langword="attributeGroup" /> element with the <see langword="ref" />
attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>
        <para>Gets or sets the name of the referenced 
   <see langword="attributeGroup" /> element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>
        <para>Allows only one of its children to appear in an instance. Represents the World
      Wide Web Consortium (W3C) <see langword="choice" />
      (compositor) element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>
        <para>Gets the collection of the elements contained with the 
      compositor (<see langword="choice" />
      ): <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />,
   <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" />, or
   <see langword="XmlSchemaAny" />
   .</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>
        <para> Contains a cache of XML Schema definition language (XSD) and XML-Data
      Reduced (XDR) schemas. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlSchemaCollection" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlSchemaCollection" />
   class with the specified <see cref="T:System.Xml.XmlNameTable" /> . The <see langword="XmlNameTable" />
   is used when loading schemas.</para>
      </summary>
      <param name="nametable">The <see langword="XmlNameTable" /> to use.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>
        <para>Adds the schema located by the given URL into the schema
      collection.</para>
      </summary>
      <param name="ns">The namespace URI associated with the schema. For XML Schema Definition language (XSD) schemas, this will typically be the <see langword="targetNamespace" /> .</param>
      <param name=" uri">The URL that specifies the schema to load.</param>
      <returns>
        <para>The <see cref="T:System.Xml.Schema.XmlSchema" /> added to the schema collection;
<see langword="null" /> if the the schema being added is an XDR schema or if there 
   are compilation errors in the schema.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>
        <para>Adds the given schema into the schema collection.</para>
      </summary>
      <param name="ns">The namespace URI associated with the schema. For XML Schema definition language (XSD) schemas, this will typically be the <see langword="targetNamespace" /> .</param>
      <param name=" reader">
        <see cref="T:System.Xml.XmlReader" /> containing the schema to add.</param>
      <returns>
        <para>The <see cref="T:System.Xml.Schema.XmlSchema" /> added to the schema collection;
<see langword="null" /> if the schema being added is an XML-Data Reduced (XDR) schema or if there 
   are
   compilation errors in the schema.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>Adds the <see cref="T:System.Xml.Schema.XmlSchema" /> to the collection.</para>
      </summary>
      <param name="schema">The <see langword="XmlSchema" /> to add to the collection.</param>
      <returns>
 The <see langword="XmlSchema" /> object.
</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>
        <para>Adds all the namespaces defined in the given collection
      (including their associated schemas) to this collection.</para>
      </summary>
      <param name="schema">The <see langword="XmlSchemaCollection" /> you want to add to this collection.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>Gets a value indicating whether the 
   <see langword="targetNamespace" /> of the
      specified <see cref="T:System.Xml.Schema.XmlSchema" /> is in the collection.</para>
      </summary>
      <param name="schema">The <see langword="XmlSchema" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if there is a 
   schema in the collection with the same <see langword="targetNamespace" />
   ; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a schema with the specified namespace is in the
      collection.</para>
      </summary>
      <param name="ns">The namespace URI associated with the schema. For XML Schema Definition language (XSD) schemas, this will typically be the target namespace.</param>
      <returns>
        <para>
          <see langword="true" /> if a schema 
   with the specified namespace is in the collection; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>
        <para>Provides support for the "for each" style iteration over the collection of schemas.</para>
      </summary>
      <returns>
        <para>An enumerator for iterating over all schemas in the
      current collection.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
        <para>Copies all the <see langword="XmlSchema" /> objects from this
   collection into the given array starting at the given index.</para>
      </summary>
      <param name="array">The array to copy the objects to.</param>
      <param name=" index">The index in <paramref name="array" /> where copying will begin.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>
        <para> Gets the number of namespaces defined in this collection.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>
        <para>Gets the default <see langword="XmlNameTable" /> used by
   the <see langword="XmlSchemaCollection" /> when loading new schemas.</para>
      </summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>
        <para> Sets an event handler for receiving information about the XML-Data Reduced (XDR) and XML
      Schema definition language (XSD) schema validation errors.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>
        <para> Gets the <see cref="T:System.Xml.Schema.XmlSchema" /> associated with the given namespace URI.</para>
      </summary>
      <param name="ns">The namespace URI associated with the schema you want to return. This will typically be the <see langword="targetNamespace" /> of the schema.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>
        <para>Supports a simple iteration over a collection. This class cannot be
       inherited.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the
      next schema in the collection.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the move was successful; <see langword="false" /> if the enumerator has passed the end of the collection.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>
        <para>Gets the current <see cref="T:System.Xml.Schema.XmlSchema" /> in the collection.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>
        <para>Class that represents the complex content model for complex
      types. Contains extensions or restrictions on a complex type that has mixed
      content or elements only. Represents the World Wide Web Consortium
      (W3C) <see langword="complexContent" />
      element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>
        <para>An abstract class for the schema content model.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>
        <para>Gets or sets the content of the type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>
        <para> Gets or sets information that determines if the type has a mixed content model. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>
        <para>Gets or sets the content.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>
        <para> Class for complex types with a complex content model 
      derived by extension. Extends the complex type by adding attributes or elements.
      Represents the World Wide Web Consortium (W3C) <see langword="extension" />
      element for complex content.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>
        <para>An abstract class for schema content.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>
        <para>Gets or sets the name of the
      complex type from which this type is derived by extension.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>
        <para>Gets or sets one of the <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, 
   or
<see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 
classes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>
   Gets the collection of attributes for the complex
   content. Contains <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> and
<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> elements.
</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>
        <para>Gets or sets the <see langword="XmlSchemaAnyAttribute" /> component of the complex
   content model.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>
        <para> Class for complex types with a complex content model that
      are derived by restriction. Restricts the contents of the complex type to a
      subset of the inherited complex type. Represents the World Wide Web Consortium
      (W3C) <see langword="restriction" />
      element for complex
      content.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>
        <para> Gets or sets
      the name of a complex type from which this type is derived by restriction.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>
        <para>Gets or sets one of the <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, 
   or
<see cref="T:System.Xml.Schema.XmlSchemaSequence" />classes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>
        <para>Gets the collection of attributes for the complex type. 
      Contains the <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> and
   <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> 
   elements.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>
        <para>Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> component of the complex content
   model.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>
        <para>Class for complex types. Defines a complex type that
      determines the set of attributes and content of an element. Represents the World
      Wide Web Consortium (W3C) <see langword="complexType" />
      element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>
        <para>The base class for all simple types and complex
      types.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>
        <para>Gets or sets the name of the type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>
        <para>Gets or sets the <see langword="final" /> property to indicate that no further derivations are allowed.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>
        <para>Gets the qualified name for the type built from the <see langword="Name " />attribute of this type. This holds 
   the post-compilation value.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>
        <para>Gets the post-compilation value of the <see langword="Final" /> property that holds the post-compilation
   value of the <see langword="Final" />
   property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>
        <para> Gets the object of the <see langword="simpleType" />
element or <see langword="complexType" /> element. This is a post-schema-validation-infoset variable.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>
        <para> When overridden in a derived class, this property gets information that indicates how this element
      has been derived from a base type. This property holds the post-compilation
      value.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>
        <para>Gets the data type that holds the post-compilation
      value.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>
        <para>Indicates that this type has a mixed content model. This
      property is only valid in a complex type.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>
        <para>Used to create a <see langword="complexType" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>
        <para>Gets or sets the information that determines if the <see langword="complexType " /> element can be used in the instance document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>
        <para>Gets or sets the <see langword="block" /> attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>
        <para> Gets or sets information that determines if the complex type has a mixed content
      model (markup within the content).</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>
        <para>Gets or sets the content model type. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>
        <para> Gets or sets the compositor type as one of the
   <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />,
      or <see cref="T:System.Xml.Schema.XmlSchemaSequence" />
      classes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>
        <para>Gets the collection of attributes for the complex type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>
        <para>Gets or sets the value for the
   <see langword="XmlSchemaAnyAttribute" /> component of the complex
      type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>
        <para>Gets the content model of the complex type which holds
      the post-compilation value.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>
        <para>Gets the particle which holds the post-compilation value
      of the <see langword="ContentTypeParticle" /> property. This
   <see langword="ContentTypeParticle" /> is determined after the content models of the most derived types and the base complex type have been resolved
      according to the rules defined in the World Wide Web Consortium (W3C) XML Schema
      definition language (XSD) specification. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>
        <para> Gets the value after the type has been compiled to the
      post-schema-validation infoset. This value indicates how the type is enforced when
   <see langword="xsi:type" />
   is used in
   the instance document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>
        <para> Gets the collection of all the attributes from this 
      complex type and its base types which holds the post-compilation value of the
   <see langword="AttributeUses" /> 
   property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>
        <para>Gets the <see langword="anyAttribute" /> element from this complex type and
   its base types which holds the post-compilation value of
   the <see langword="AttributeWildcard" />
   property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>
        <para>Provides information about the validation mode of
   <see langword="any" /> and <see langword="anyAttribute" /> element replacements.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>
        <para>The item is not validated.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>
        <para>The item must consist of well-formed XML and is not
      validated by the schema.</para>
        <para>The XML processor attempts to notify the client through a validation event
      handler with <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> =
   <see langword="XmlSeverityType.Warning" />
   that no validation took place for the given
   item. If a validation event handler has not been setup, no information
   is returned when the warning is produced. </para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>
        <para>If the item has a uniquely determined declaration
      available, it must be valid with respect to that
      definition. Otherwise, the item is not validated.</para>
        <para>If the item is not validated, the XML processor attempts to notify the client through a validation event handler
      with <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> =
   <see langword="XmlSeverityType.Warning" />
   . If a validation
   event handler has not been setup, no information is returned when the warning is
   produced.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>
        <para>The item must be schema-valid based on the schema
      definition obtained from the namespace-qualified item name.</para>
   If a validation error occurs, and a validation event handler is not provided,
   an exception is thrown.
</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>
        <para> Enumerations for the content model of the complex
      type. This represents the content in the post-schema-validation infoset.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>
        <para> Text-only content.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>
        <para> Empty content.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>
        <para> Element-only content.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>
        <para> Mixed content.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>
        <para> Provides different
      methods for preventing derivation.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>
        <para>Override default derivation method to allow any
      derivation.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>
        <para> Refers to derivations by 
   <see langword="Substitution" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>
        <para> Refers to derivations by <see langword="Extension" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>
        <para> Refers to derivations by 
   <see langword="Restriction" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>
        <para>Refers to derivations by <see langword="List" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>
        <para> Refers to derivations by <see langword="Union" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
        <para>
          <see langword="#all" /> . Refers to all
   derivation methods.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>
   Accepts the default derivation method.
</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>
        <para> Class that specifies information to be read or used by humans within an annotation.
      Represents the World Wide Web Consortium (W3C) <see langword="documentation" />
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>
        <para> Gets or sets the URI source of the information.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>
        <para>Gets or sets the <see langword="xml:lang" /> attribute. This serves as an indicator of
   the language used in the contents.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>
        <para>Gets or sets an array of <see langword="XmlNodes" /> that represents the documentation child nodes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>
        <para> Class for elements. Represents the World Wide Web Consortium (W3C)
   <see langword="element" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>
        <para>Gets or sets information to indicate if the element
      can be used in an instance document.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>
        <para>Gets or sets a <see langword="Block" /> derivation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>
        <para>Gets or sets the default value of the element if its content
      is a simple type or content of the element is <see langword="textOnly" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>
        <para>Gets or sets the <see langword="Final" /> property to indicate that no further derivations are allowed.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>
        <para>Gets or sets the fixed value.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>
        <para>Gets or sets the form for the element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>
        <para>Gets or sets the name of the element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>
        <para>Gets or sets information that indicates if <see langword="xsi:nil" /> can occur in the instance data.
   Indicates if an explicit nil value can be assigned to the element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>
        <para>Gets or sets the reference name of an element declared
      in this schema (or another schema indicated by the specified namespace).</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>
        <para> Gets or sets the name of an element that is being substituted by this
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>
        <para>Gets or sets the name of a built-in data type defined in this schema or another schema
      indicated by the specified namespace. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>
        <para>Gets or sets the type of the element. This can either be a complex type
      or a simple type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>
        <para>Gets the collection of constraints on the element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>
        <para>Gets the actual qualified name for the given element.
      This is the name that a <see langword="ref" /> attribute
      refers to. The qualified name consists of the NCName of the element. For
      example, element name = "NCName", and the prefix used to describe the
   <see langword="targetNamespace" />
   of the schema. This property holds the
   post-compilation value of the <see langword="QualifiedName" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>
        <para>Gets a common language runtime (CLR) object based on
      the <see cref="T:System.Xml.Schema.XmlSchemaElement" /> or <see cref="T:System.Xml.Schema.XmlSchemaElement" />of the element
      which holds the post-compilation value of the <see langword="ElementType" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>
        <para>Gets the post-compilation value of
      the <see langword="Block" /> property which holds the post-compilation
      value of the <see langword="Block" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>
        <para>Gets the post-compilation value of the
   <see langword="Final" /> property which holds the post-compilation
      value of the <see langword="Final" />
      property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>
        <para> Returns detailed information about the schema exception.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Constructs a new <see langword="XmlSchemaException" /> object with the given
<see langword="SerializationInfo" /> and <see langword="StreamingContext" /> 
information that contains all the
properties of the <see langword="XmlSchemaException" />. </para>
      </summary>
      <param name="info">SerializationInfo</param>
      <param name="context">StreamingContext</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Streams all the <see langword="XmlSchemaException" /> properties into the
<see langword="SerializationInfo" /> class for the given 
<see langword="StreamingContext" /> 
. </para>
      </summary>
      <param name="info">The <see langword="SerializationInfo" />.</param>
      <param name=" context">The <see langword="StreamingContext" />information.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>
        <para>The formatted error message describing the error code.</para>
      </summary>
      <param name="message">The string.</param>
      <param name=" innerException">The exception.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>
        <para> Gets the location of the file used to load the schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>
    Gets the line number indicating where the
    error occurred.
 </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>
        <para>Gets the line position indicating where the error occurred.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>
        <para>The <see langword="XmlSchemaObject" />
that produced the
<see langword="XmlSchemaException" /> 
.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>
        <para>An abstract class. Provides information about the included schema.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>
        <para>Gets or sets the URI location for the schema, which tells the schema processor
      where the schema physically resides.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>
        <para>Gets or sets the <see langword="XmlSchema" /> for the referenced schema. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>
        <para>Gets or sets the string id.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>
        <para>Gets and sets the qualified attributes which do not belong to the schema 
      target namespace.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>
        <para> Abstract class for all facets that are used when simple types
      are derived by restriction.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>
        <para>Gets or sets the <see langword="value" /> attribute of the facet.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>
        <para> Gets or sets information that indicates that this facet is fixed.</para>
        <para>This property is unused by <see langword="XmlSchemaEnumerationFacet" /> and
<see langword="XmlSchemaPatternFacet" /> because these classes cannot be 
   fixed.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>
        <para>Abstract class for defining <see langword="numeric" /> facets.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>
        <para>Class for defining <see langword="length" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="length" />
   facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>
        <para>Class for defining <see langword="minLength" /> facets. Represents the World Wide Web 
   Consortium (W3C) <see langword="minLength" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>
        <para>Class for defining <see langword="maxLength" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="maxLength" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>
        <para>Class for defining <see langword="pattern" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="pattern" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>
        <para>Class for defining <see langword="enumeration" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="enumeration" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>
        <para>Class for defining <see langword="minExclusive" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="minExclusive" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>
        <para>Class for defining <see langword="minInclusive" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="minInclusive" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>
        <para>Class for defining <see langword="maxExclusive" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="maxExclusive" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>
        <para>Class for defining <see langword="maxInclusive" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="maxInclusive" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>
        <para>Class for defining <see langword="totalDigits" /> facets. Represents the World Wide Web 
   Consortium (W3C) <see langword="totalDigits" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>
        <para>Class for defining <see langword="fractionDigits" /> facets. Represents the World Wide
   Web Consortium (W3C) <see langword="fractionDigits" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>
        <para>Class for defining <see langword="whiteSpace" /> facets. Represents the World Wide Web
   Consortium (W3C) <see langword="whiteSpace" /> facet.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>
        <para>Indicates if attributes or elements need to
      be qualified or left unqualified.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>
        <para>Form has not been specified. The default is 
   <see langword="Unqualified" /> .</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>
        <para> Attribute or element must be qualified with the namespace prefix.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>
        <para>Attribute or element is not required to be qualified with the namespace prefix.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>
        <para>Class that defines groups at the <see langword="schema" /> level that are referenced from the complex
   types. Groups a set of element declarations so that they can be incorporated as
   a group into complex type definitions. Represents the World Wide Web Consortium
   (W3C) <see langword="group" />
   element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>
        <para>Gets or sets the name of the schema group.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>
        <para>Gets or sets one of the <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, or <see cref="T:System.Xml.Schema.XmlSchemaSequence" />
classes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>
        <para>Class used within complex types that defines the
      reference to groups defined at the <see langword="schema" />
      level. Represents the World Wide Web Consortium
      (W3C) <see langword="group" /> element with <see langword="ref" />
      attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>
        <para> Gets or sets the name of a group defined in this schema (or another schema
      indicated by the specified namespace).</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>
        <para> Gets one of the <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" />, or <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> classes which holds the post-compilation
   value of the <see langword="Particle" /> property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>
        <para> Class for the identity constraints:
   <see langword="key" />, <see langword="keyref" />, 
      and <see langword="unique" /> elements.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>
        <para>Gets or sets the name of the identity constraint.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>
        <para>Gets or sets the XML Path Language (XPath) expression 
   <see langword="selector" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>
        <para>Gets the collection of fields that apply as children for the XML Path Language
      (XPath) expression selector.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>
        <para> Gets the qualified name of the identity constraint which 
      holds the post-compilation value of the <see langword="QualifiedName" /> property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>
        <para>Class for XML Path Language (XPath) expressions. 
      Represents the World Wide Web Consortium (W3C) <see langword="selector" />
      element. The World Wide Web Consortium (W3C) <see langword="field" /> element is a
      collection of <see langword="XmlSchemaXPath" />
      classes.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>
        <para>Gets or sets the attribute for the XML Path Language (XPath) expression.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>
        <para> Identifies a unique constraint among a set of elements.
      Represents the World Wide Web Consortium (W3C) <see langword="unique" />
      element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>
        <para>Identifies a <see langword="key" /> constraint. Represents the World Wide
   Web Consortium (W3C) <see langword="key" /> element.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>
        <para>Identifies a <see langword="keyref" /> constraint. Represents the World
   Wide Web Consortium (W3C) <see langword="keyref" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>
        <para>Gets or sets the name of the key that this constraint refers to in another
      simple or complex type.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>
        <para>The class to import schema components from any schema.
      Represents the World Wide Web Consortium (W3C) <see langword="import" /> element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>
        <para>Gets or sets the target namespace for the imported schema as a URI reference.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>
        <para>Gets or sets the <see langword="annotation" /> property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>
        <para> Class to include declarations and definitions from an
      external schema. Allows them to be available for processing in the containing
      schema. Represents the World Wide Web Consortium
      (W3C) <see langword="include" />
      element.
      </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>
        <para>Gets or sets the <see langword="annotation" /> property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>
        <para>Class represents a notation. An XML Schema definition language (XSD) notation declaration
      is a reconstruction of XML 1.0 NOTATION declarations. The purpose of notations
      is to describe the format of non-XML data within an XML document. Represents the
      World Wide Web Consortium (W3C) <see langword="notation" />
      element. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>
        <para>Gets or sets the name of the notation.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>
        <para>Gets or sets the <see langword="public" /> identifier.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>
        <para>Gets or sets the <see langword="system" /> identifier.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>
        <para>An object collection class to handle 
   <see langword="XmlSchemaObjects" /> when
      collections are returned from method calls.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlSchemaObjectCollection" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlSchemaObjectCollection" /> class that takes an
   <see langword="XmlSchemaObject" /> .</para>
      </summary>
      <param name="parent">The <see langword="XmlSchemaObject" /> .</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator for iterating through the
   <see langword="XmlSchemaObjects" /> contained in the
   <see langword="XmlSchemaObjectCollection" /> .</para>
      </summary>
      <returns>
        <para>The iterator returns 
   <see langword="XmlSchemaObjectEnumerator" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>
        <para> Adds an <see langword="XmlSchemaObject" /> to the
<see langword="XmlSchemaObjectCollection" /> .</para>
      </summary>
      <param name="item">The <see langword="XmlSchemaObject" /> .</param>
      <returns>
        <para>The index at which the item has been added.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>
        <para>Inserts an <see langword="XmlSchemaObject " />to the
<see langword="XmlSchemaObjectCollection" />.</para>
      </summary>
      <param name="item">The <see langword="XmlSchemaObject" /> to insert.</param>
      <param name=" index">The zero-based index at which item should be inserted.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>
        <para>Gets the index of the specified
   <see langword="XmlSchemaObject" /> within the collection<see langword=" " />of the
      specified item.</para>
      </summary>
      <param name="item">The <see langword="XmlSchemaObject" /> .</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>
        <para>Indicates if the specified qualified name is located in the
   <see langword="XmlSchemaObjectCollection" />.</para>
      </summary>
      <param name="item">The <see langword="XmlSchemaObject" /> .</param>
      <returns>
        <para>
          <see langword="true" /> if the specified qualified name is in the
   collection. Otherwise returns <see langword="false" /> . If null is supplied,
<see langword="false" /> is returned because there is no qualified name with a null 
   name. </para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>
        <para>Removes an <see langword="XmlSchemaObject " />from the
<see langword="XmlSchemaObjectCollection" /> .</para>
      </summary>
      <param name="item">The <see langword="XmlSchemaObject" />to remove.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>
        <para>Copies all the <see langword="XmlSchemaObjects" />
from the collection into the given array starting at the given index.</para>
      </summary>
      <param name="array">
        <para>The one-dimensional array that is the destination of the elements copied from the <see langword="XmlSchemaObjectCollection" />. The array must have zero-based indexing. </para>
      </param>
      <param name=" index">
        <para>The zero-based index in the array at which copying begins. </para>
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <para>
          <see langword="OnInsert" /> is
   invoked before the standard <see langword="Insert" /> behavior. For
   more information, see <see langword="OnInsert" /> method <see cref="T:System.Collections.CollectionBase" />
   .</para>
      </summary>
      <param name="index">The index of <see langword="XmlSchemaObject" />.</param>
      <param name=" item">The item.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <para>
          <see langword="OnSet" /> is invoked
   before the standard <see langword="Set" /> behavior. For more
   information, see OnSet method for <see cref="T:System.Collections.CollectionBase" /> .</para>
      </summary>
      <param name="index">The index of <see langword="XmlSchemaObject" />.</param>
      <param name=" oldValue">The old value.</param>
      <param name=" newValue">The new value.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>
        <para>
          <see langword="OnClear" /> is invoked
   before the standard <see langword="Clear" /> behavior. For
   more information, see OnClear method for <see cref="T:System.Collections.CollectionBase" /> .</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <para>
          <see langword="OnRemove" /> is
   invoked before the standard <see langword="Remove" /> behavior. For
   more information, see <see langword="OnRemove" /> method for <see cref="T:System.Collections.CollectionBase" /> .</para>
      </summary>
      <param name="index">The index of <see langword="XmlSchemaObject" />.</param>
      <param name=" item">The item.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>
        <para>Looks up the qualified name using the supplied
   <see langword="XmlQualifiedName" /> and returns the
   <see langword="XmlSchemaObject" />, the XML Schema definition language (XSD) element for this qualified name.</para>
      </summary>
      <param name="index">The index of the <see langword="XmlSchemaObject" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>
        <para>An enumerator class to walk the 
   <see langword="XmlSchemaObjectCollection " /> 
   collections.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>
        <para>Resets the enumerator to the start of the collection. </para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>
        <para>Moves to the next item in the collection.</para>
      </summary>
      <returns>
        <para>
          <see langword="false" /> at the end of the collection.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>
        <para>Returns the <see langword="XmlSchemaObject" /> for the position of
   the current enumerator.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>
        <para>A collection class that provides read-only helpers for 
   <see langword="XmlSchemaObject " /> 
   objects. This class is used to provide the collections for
   contained elements that are within the schema as collections that are accessed
   from the <see langword="XmlSchema" /> class
   (for example, <see langword="Attributes" />, <see langword="AttributeGroups" />,
<see langword="Elements" />
, and so on).</para>
      </summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>
        <para>Returns <see langword="true" /> if the specified qualified name is in the collection.</para>
      </summary>
      <param name="name">The <see langword="XmlQualifiedName" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the qualified
   name is in the collection; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>
        <para>Returns an enumerator for
      the <see langword="XmlSchemaObject" /> contained in the collection. </para>
      </summary>
      <returns>
        <para>Returns the <see langword="XmlSchemaObject " /> objects.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>
   Gets the count of the items in the table.
</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>
        <para>Looks up the qualified name by the supplied <see langword="XmlQualifiedName" />
and returns the <see langword="XmlSchemaObject" /> which is the XML Schema definition
language (XSD) element for this qualified name. Returns a null reference if there is a qualified "no" name associated with
the given name. </para>
      </summary>
      <param name="name">The <see langword="XmlQualifiedName" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>
        <para>Returns a collection of all the named elements in the collection as
   <see langword="XmlSchemaObject" />. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>
        <para>Returns a collection of the values for all the elements in the
      collection as <see langword="XmlSchemaObject" />. </para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>
        <para>Allows simple and complex types, groups, and attribute
      groups from external schema files to be redefined in the current schema. This
      class provides versioning for the schema elements. Represents the World Wide Web
      Consortium (W3C) <see langword="redefine" />
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>
        <para>Gets the collection of the following classes: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, and <see cref="T:System.Xml.Schema.XmlSchemaGroup" />
.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" />, for all attributes in the
   schema, which holds the post-compilation value of
   the <see langword="AttributeGroups" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" />,<see langword=" " />for all simple and complex
   types in the schema, which holds the post-compilation value of the
<see langword="SchemaTypes" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>
        <para>Gets the <see langword="XmlSchemaObjectTable" />, for all groups in the schema,
   which holds the post-compilation value of the <see langword="Groups" /> property.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>
        <para>Requires the elements in the group to appear in the specified sequence within the
      containing element. Represents the World Wide Web Consortium (W3C)
   <see langword="sequence" />
   (compositor) element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>
        <para>The elements contained within the compositor. Collection 
      of <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" />, or <see cref="T:System.Xml.Schema.XmlSchemaAny" />
      .</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>
        <para>Class for simple types and complex types with a simple
      content model. Represents the World Wide Web Consortium
      (W3C) <see langword="simpleContent" />
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>
        <para> Gets one of the <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> or <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />
.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>
        <para> Class for simple types that are derived by extension. 
      Extends the simple type content of the element by adding attributes. Represents
      the World Wide Web Consortium (W3C) <see langword="extension" />
      element for simple content.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>
        <para> Gets or sets the name of a built-in data type or simple type from which this type is extended.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>
        <para>Gets the collection of <see langword="XmlSchemaAttribute" /> and
<see langword="XmlSchemaAttributeGroupRef" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>
        <para>Gets or sets the <see langword="XmlSchemaAnyAttribute" /> to be used for the attribute value.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>
        <para> Class for simple types that are derived by restriction. 
      Restricts the range of values for the element to a subset of the inherited
      simple types. Represents the World Wide Web Consortium
      (W3C) <see langword="restriction" />
      element for
      simple content.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>
        <para> Gets or sets the name of the built-in data type or simple type from which this type is
      derived.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>
        <para> Gets or sets the simple type base value.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>
        <para>Gets one or more of the following classes:</para>
        <para>
          <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" /> 
.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>
        <para>Gets the <see langword="XmlSchemaAttribute" /> and
<see langword="XmlSchemaAttributeGroupRef" /> .
   Collection of attributes for the simple type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>
        <para>Gets or sets an <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> to be used for the
   attribute value.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>
        <para>Class defines a simple type that determines the
      information and constraints for the values of attributes or elements with
      text-only content. Represents the World Wide Web Consortium
      (W3C) <see langword="simpleType" />
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>
        <para>Gets or sets one of <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />, or <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />
.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>
        <para>Abstract class for simple type content classes.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>
        <para>Class for the list of <see langword="simpleType" />
elements. Defines a <see langword="simpleType" /> element as a list of values of a
specified data type. Represents the World Wide Web Consortium
(W3C) <see langword="list" />
element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>
        <para> Gets or sets the name of a built-in
      data type or <see langword="simpleType" />
      element defined in this schema (or another schema
      indicated by the specified namespace).</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>
        <para>Gets or sets the <see langword="simpleType" /> element that is derived from the type specified by
   the base value.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>
        <para>Class for the restriction of <see langword="simpleType" /> elements. Represents the World Wide Web 
   Consortium (W3C) <see langword="restriction" /> element for simple types.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>
        <para>Gets or sets the name of the qualified base type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>
        <para>Gets or sets information on the base type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>
        <para>Gets one or more of the following classes: <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" /> , <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />

.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>
        <para>Class for the union of <see langword="simpleType" />
elements. Defines a <see langword="simpleType" /> element as a list of values of a
specified data type. Represents the World Wide Web Consortium
(W3C) <see langword="union" />
element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypesSource">
      <summary>
        <para>Gets or sets the list of members of built-in data types or
   <see langword="simpleType" />
   elements defined in this schema (or another schema indicated by the
   specified namespace). </para>
      </summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>
        <para>Gets the collection of base types.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>
        <para>Indicator of how the attribute is used.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>
        <para> Attribute use not specified.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>
   Attribute is optional.
</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>
        <para>Attribute cannot be used.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>
        <para>Attribute must appear once.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>
        <para>Represents the severity of the validation event.</para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>
        <para> Indicates a validation error occurred when validating the instance document. This applies to
      document type definitions (DTDs) and XML-Data Reduced (XDR) and XML Schema definition
      language (XSD) schemas. The World Wide Web Consortium (W3C) validity constraints
      are considered errors. If no validation event handler has been created,
      errors throw an exception.
      </para>
      </summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>
        <para>Warnings indicate that a validation event occurred that is not an error but may be important
      enough to warn the user about. A warning is typically issued when there is
      no DTD, XML-Data Reduced (XDR) or XML Schema (XSD) to
      validate a particular element or attribute against. The <see cref="P:System.Xml.XmlValidatingReader.ValidationType" qualify="true" /> setting determines the
      type of the schema used. Unlike errors, warnings do not throw an exception
      if there is no validation event handler. </para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <returns>
        <para>An <see cref="T:System.Xml.Schema.XmlSchema" /> object that represents the XML schema.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>
        <para>Converts an XML document into an object using the specified reader.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> used to read the XML document.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <para>Converts the serializable members of an object into an XML document.</para>
      </summary>
      <param name="writer">The XmlWriter used to write the XML-document instance.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>
        <para>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should serialize the class member as an encoded SOAP attribute.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> class using the specified value as the
   name of the XML attribute. </para>
      </summary>
      <param name="attrName">The name of the XML attribute.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>
        <para> Gets or sets the name of the XML attribute generated
      by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>
        <para>Gets or sets the XML namespace of the XML attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>
        <para> Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute
      generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>
        <para>Allows you to override property, field, and class
      attributes when you use an <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize
      or deserialize an object as encoded SOAP.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>
        <para>Adds a <see cref="T:System.Xml.Serialization.SoapAttributes" /> to a collection of collection
   of <see cref="T:System.Xml.Serialization.SoapAttributes" /> objects. The <paramref name="type" /> parameter specifies an object to be overridden by the <see cref="T:System.Xml.Serialization.SoapAttributes" /> .</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object that will be overridden.</param>
      <param name=" attributes">A <see cref="T:System.Xml.Serialization.SoapAttributes" /> that represents the overriding attributes.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>
        <para>Adds a <see cref="T:System.Xml.Serialization.SoapAttributes" /> to the collection
   of <see cref="T:System.Xml.Serialization.SoapAttributes" /> objects contained by the <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> . The <paramref name="type" /> parameter
   specifies the object to be overridden by the <see cref="T:System.Xml.Serialization.SoapAttributes" /> . The <paramref name="member" /> parameter
   specifies the name of a member that will be overridden.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to override.</param>
      <param name=" member">The name of the member to override.</param>
      <param name="attributes">A <see cref="T:System.Xml.Serialization.SoapAttributes" /> that represents the overriding attributes.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>
        <para>Gets the object associated with the specified (base class) type.</para>
      </summary>
      <param name="type">The base class class <see cref="T:System.Type" /> that is associated with the collection of attributes you want to retrieve. </param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>
        <para>Gets the object associated with the specified (base
      class) type. The <paramref name="member " />parameter
      specifies the base class member that is overridden.</para>
      </summary>
      <param name="type">The base class class <see cref="T:System.Type" /> that is associated with the collection of attributes you want to override. </param>
      <param name=" member">The name of the overridden member that specifies the <see cref="T:System.Xml.Serialization.SoapAttributes" /> to return.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>
        <para>Represents a collection of attribute objects that control
      how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes SOAP methods.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapAttributes" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>
        <para>Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> how to serialize an object type into encoded SOAP XML.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>
        <para>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" />
serializes a SOAP enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>
        <para>Gets or sets a value that specifies whether the <see cref="T:System.Xml.Serialization.XmlSerializer" />
serializes a public field or property as encoded SOAP  XML.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>
        <para>Gets or sets a <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> to override.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>
        <para>Gets or sets the <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> to override.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>
        <para>Gets or sets the default value of an XML element or attribute.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapCodeExporter.IncludeMetadata">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>
        <para> Specifies
      that the public member value be serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" />
      as an encoded SOAP XML element.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> class and specifies the
   name of the XML element.</para>
      </summary>
      <param name="elementName">The XML element name of the serialized member.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>
        <para>Gets or sets the name of the generated XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>
        <para>Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should serialize a member that is set
   to <see langword="null " />into the <see langword="xsi:nil " />attribute set to
<see langword="true" />.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>
        <para>Controls how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> class, using the
   specified element name.</para>
      </summary>
      <param name="name">The XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>
        <para>Gets or sets the value generated in an XML document when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration, or the
   value recognized when it deserializes the enumeration member.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>
        <para>Instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> not to serialize the public field or
   public read/write property value.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> class.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>
        <para>Allows the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to recognize a type
   when it serializes or deserializes an object as encoded SOAP XML.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> class using the
   specified type.</para>
      </summary>
      <param name="type">The type of the object to include.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>
        <para> Gets or sets the type of the object that should be
      used when serializing or deserializing an object. </para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>
        <para>Returns a object used to map from a type to an XML representation using the 
      specified type.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to reflect.</param>
      <returns>
        <para>An XmlTypeMapping that maps the type to an XML 
      representation.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>
        <para>Returns a object used to map from a type to an XML
      representation using the specified type and namespace.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to reflect.</param>
      <param name=" defaultNamespace">The default XML namespace.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)">
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>
        <para> Controls the schema generated by
      the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when a class instance is serialized
      as SOAP encoded XML.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class,
   specifying the name of the XML type.</para>
      </summary>
      <param name="typeName">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class,
   specifying the name and XML namespace of the type.</para>
      </summary>
      <param name="typeName">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</param>
      <param name=" ns">The XML namespace of the type.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>
        <para> Gets or sets a value indicating whether to include
      the type in SOAP-encoded XML Schema documents.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>
        <para>Gets or sets the name of the XML type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>
        <para>Gets or sets the namespace of the XML type.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>
        <para>Specifies that the member (a field that returns an
      array of <see cref="T:System.Xml.XmlAttribute" />
      objects)
      can contain any XML attributes.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>
        <para>Constructs a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> class.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>
        <para>Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement" /> or
<see cref="T:System.Xml.XmlNode" /> 
objects) can contain objects that represent any XML element that has no
corresponding member in the object being serialized or deserialized.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class; specifies the XML element name
   generated in the XML document.</para>
      </summary>
      <param name="name">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class; specifies the XML element name
   generated in the XML document and its XML namespace.</para>
      </summary>
      <param name="name">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</param>
      <param name=" ns">The XML namespace of the XML element.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>
        <para>Gets or sets the XML element name.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>
        <para>Gets or sets the XML namespace generated in the XML document.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>
        <para>Represents a collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <para>Adds an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />to the collection.</para>
      </summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to add.</param>
      <returns>
        <para>The index of the newly added <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <para>Inserts an <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> into the collection 
   at the specified index.</para>
      </summary>
      <param name=" index">The index where the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> will be inserted.</param>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to insert.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> .</para>
      </summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> whose index you want.</param>
      <returns>
        <para>The index of the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <para>Gets a value indicating whether the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> exists in the collection.</para>
      </summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> you are interested in.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> exists in the 
   collection; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <para>Removes the specified <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> from the collection.</para>
      </summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> to remove.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> at the specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>
        <para>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should serialize a particular class member as an array of XML elements.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />
class; specifies the XML element name generated in
the XML-document instance.</para>
      </summary>
      <param name="elementName">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>
        <para>Gets or sets the XML element name given to the serialized array.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>
        <para> Gets or set the namespace of the XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should 
   serialize a member as an empty XML tag
   with the <see langword="xsi:nil " /> attribute set to <see langword="true" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>
        <para>Gets or sets a value indicating whether the XML element
      name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified or unqualified.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>
        <para>Specifies the derived types that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can place in a serialized array.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class;
   specifies
   the name of the XML element generated in the XML document.</para>
      </summary>
      <param name="elementName">The name of the XML element. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class;
   specifies the <see cref="T:System.Type" /> that can be inserted into the serialized array.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to serialize.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class;
   specifies the
   name of the XML element generated in the XML document, and the
<see cref="T:System.Type" /> that can 
   be inserted into the generated XML document.</para>
      </summary>
      <param name="elementName">The name of the XML element.</param>
      <param name=" type">The <see cref="T:System.Type" /> of the object to serialize. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>
        <para> Gets or sets the type allowed in an array.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>
        <para> Gets or sets the name of the generated XML element. </para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>
        <para> Gets or sets
      the namespace of the generated XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>
        <para>Gets or sets the level in a hierarchy of XML elements
      that the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> affects.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>
        <para>Gets or sets the XML data type of the generated XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should
   serialize a member as an empty XML tag with the <see langword="xsi:nil " />attribute set to <see langword="true" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>
        <para>Gets or sets a value indicating whether the name of the generated XML element is
      qualified.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>
        <para>Represents a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
        <para>Adds an <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to the collection.</para>
      </summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> to add to the collection.</param>
      <returns>
        <para>The index of the added item.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>
        <para>Gets or sets the item at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the collection member to get or set.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>
        <para>Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should serialize the class member as an XML attribute.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />
class and specifies the name of the generated XML attribute.</para>
      </summary>
      <param name="attributeName">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>
        <para>Gets or sets the name of the XML attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>
        <para>Gets or sets the XML namespace of the XML attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>
        <para>Gets or sets the XSD data type of the XML attribute
      generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>
        <para>Gets or sets a value indicating whether the XML
      attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>
        <para>Allows you to override property, field, and class attributes
      when you use the <see cref="T:System.Xml.Serialization.XmlSerializer" />
      to serialize or deserialize an object.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <para>Adds an <see cref="T:System.Xml.Serialization.XmlAttributes" /> object to the
   collection of <see cref="T:System.Xml.Serialization.XmlAttributes" /> objects. The <paramref name="type" /> parameter
   specifies an object to be overridden by the <see cref="T:System.Xml.Serialization.XmlAttributes" /> object.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object that will be overridden.</param>
      <param name=" attributes">An <see cref="T:System.Xml.Serialization.XmlAttributes" /> object that represents the overriding attributes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <para>Adds an <see cref="T:System.Xml.Serialization.XmlAttributes" /> object to the
   collection of <see cref="T:System.Xml.Serialization.XmlAttributes" /> objects. The <paramref name="type" /> parameter
   specifies an object to be overridden. The <paramref name="member " />parameter specifies
   the name of a member that will be overridden.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to override.</param>
      <param name=" member">The name of the member to override.</param>
      <param name="attributes">An <see cref="T:System.Xml.Serialization.XmlAttributes" /> object that represents the overriding attributes.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>
        <para>Gets the object associated with the specified, base-class, type.</para>
      </summary>
      <param name="type">The base-class class <see cref="T:System.Type" /> that is associated with the collection of attributes you want to retrieve. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>
        <para>Gets the object associated with the specified (base-class) type. The
      member parameter specifies the base-class member that is overridden.</para>
      </summary>
      <param name="type">The base-class class <see cref="T:System.Type" /> that is associated with the collection of attributes you want. </param>
      <param name=" member">The name of the overridden member that specifies the <see cref="T:System.Xml.Serialization.XmlAttributes" /> to return.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>
        <para>Represents a collection of attribute objects that control
      how the <see cref="T:System.Xml.Serialization.XmlSerializer" />
      serializes and deserializes an object.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>
        <para> Gets or sets a collection of objects that specify how the
   <see cref="T:System.Xml.Serialization.XmlSerializer" />
   serializes a public field or read/write property as
   an XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>
        <para> Gets or sets an object that specifies how the
   <see cref="T:System.Xml.Serialization.XmlSerializer" /> 
   serializes a public field or public read/write property as an XML attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>
        <para> Gets or sets an object that
      specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" />
      serializes an enumeration member.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>
        <para> Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a
   public field or public read/write property as XML
   text.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>
        <para> Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field
   or read/write property that returns an array.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>
        <para> Gets or sets a collection of objects that specify
      how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes
      items inserted into an array returned by a public field or read/write property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>
        <para>Gets or sets the default value of an XML element or attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>
        <para>Gets or sets a value that specifies whether or not the
   <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>
        <para>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which
   the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />
   has been applied.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>
        <para>Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>
        <para>Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>
        <para>Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>
        <para> Gets or sets an object that allows you
      to disambiguate between a set of choices.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>
        <para>Specifies that the member can be further disambiguated
      by using an enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> class.</para>
      </summary>
      <param name="name">The member name that returns the enumeration used to disambiguate a choice.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>
        <para>Gets or sets the name of the field that returns the
      enumeration to use when disambiguating types.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlCodeExporter.IncludeMetadata">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>
        <para> Indicates that a public field or property represents an XML element when the
   <see cref="T:System.Xml.Serialization.XmlSerializer" />
   serializes or deserializes the containing object.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and
   specifies the name of the XML element.</para>
      </summary>
      <param name="elementName">The XML element name of the serialized member.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class
   and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied,
   which is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing a containing object.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of an object derived from the member's type.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> ;
   specifies the name of the XML element and a derived type for the member to which
   the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied,
   which is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a containing object.</para>
      </summary>
      <param name="elementName">The XML element name of the serialized member. </param>
      <param name="type">The <see cref="T:System.Type" /> of an object derived from the member's type. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>
        <para>Gets or sets the object type used to represent the XML
      element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>
        <para> Gets or sets the
      name of the generated XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>
        <para> Gets or sets the namespace assigned
      to the XML element that results when the class is serialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>
        <para> Gets or sets the XML Schema definition (XSD)
      data type of the XMl element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should serialize a member that is set
   to <see langword="null " />as
   an empty tag with the <see langword="xsi:nil " />attribute set to
<see langword="true" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>
        <para>Gets or sets a value indicating whether the element is qualified.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>
        <para>Represents a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" />,
   which the <see cref="T:System.Xml.Serialization.XmlSerializer" /> uses to
   override the default way it serializes a class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
        <para>Adds an <see cref="T:System.Xml.Serialization.XmlElementAttribute" />to the collection.</para>
      </summary>
      <param name="attribute">The <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> to add.</param>
      <returns>
        <para>The zero-based index of the newly added item.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>
        <para>Gets or sets an <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> from the collection.</para>
      </summary>
      <param name="index">The zero-based index of the collection member to get or set.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>
        <para> Controls how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration
   member.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> class, and specifies the XML value
   that the <see cref="T:System.Xml.Serialization.XmlSerializer" />
   generates or recognizes (when it
   serializes or deserializes the enumeration, respectively).</para>
      </summary>
      <param name="name">The overriding name of the enumeration member.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>
        <para>Gets or sets the value generated in an XML-document
      instance when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration, or the
      value recognized when it deserializes the enumeration member.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>
        <para> Instructs the <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> method of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> not to serialize the public field or
   public read/write property value.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /> class.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>
        <para>Allows the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to recognize a type when
   it serializes or deserializes an object.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 
class.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the object to include.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>
        <para> Gets or sets the type of the object to include.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.ElementName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Namespace">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>
        <para> Identifies a class, structure, enumeration, or interface as the root (or top-level) element of an XML-document
      instance.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class, and specifies the name of the
   XML root element.</para>
      </summary>
      <param name="elementName">The name of the XML root element.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>
        <para>Gets or sets the name of the XML element that is
      generated and recognized by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class's
   <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> and <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> methods,
      respectively.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>
        <para> Gets or sets the namespace for the
      XML root element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>
        <para>Gets or sets the XSD data type of the XML root element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>
        <para>Gets or sets a value indicating whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should serialize a member that is set
   to <see langword="null " />into the <see langword="xsi:nil " />attribute set to
<see langword="true" />.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Form">
      <summary>
        <para>Gets or sets a value indicating whether the name of the XML
      root element is qualified.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlSerializationReader.SoapArrayInfo.qname">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlSerializationReader.SoapArrayInfo.dimensions">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlSerializationReader.SoapArrayInfo.length">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>
        <para>Serializes and deserializes objects into and from
      XML documents. The <see cref="T:System.Xml.Serialization.XmlSerializer" /> enables you to control how objects are
      encoded into XML.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of
   type <see cref="T:System.Object" /> into XML
   document instances, and vice versa. Each object to be serialized can itself
   contain instances of classes, which this overload can override with other classes. This overload
   also specifies the default namespace for all the
   XML elements, and the class to use as the XML root element.</para>
      </summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name=" overrides">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> .</param>
      <param name=" extraTypes">A <see cref="T:System.Type" /> array of additional object types to serialize. </param>
      <param name=" root">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</param>
      <param name=" defaultNamespace">The default namespace of all XML elements in the XML document.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into
   XML documents, and vice versa. Specifies the default
   namespace for all the XML elements.</para>
      </summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name="defaultNamespace">The default namespace to use for all the XML elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of
   the specified type into XML documents, and vice versa. Specifies the
   class to use as the XML root element.</para>
      </summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize. </param>
      <param name="root">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that represents the XML root element.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of
   the specified type into XML documents, and vice versa. If a property or
   field returns an array, the <paramref name="extraTypes" />
   parameter specifies objects
   that can be inserted into the array.</para>
      </summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</param>
      <param name="extraTypes">A <see cref="T:System.Type" /> array of additional object types to serialize.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of
   the specified type into XML documents, and vice versa. Each object to be
   serialized can itself contain instances of classes, which this overload can override
   with other classes.</para>
      </summary>
      <param name="type">The type of the object to serialize.</param>
      <param name="overrides">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> .</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>
        <para>Initializes an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class using an object
   that maps one type to another.</para>
      </summary>
      <param name="xmlTypeMapping">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of
   the specified type into XML documents, and vice versa.</para>
      </summary>
      <param name="type">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>
        <para>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using
   the specified <see cref="T:System.IO.TextWriter" />.</para>
      </summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</param>
      <param name="o">The <see cref="T:System.Object" /> to serialize.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
        <para>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using
   the specified <see cref="T:System.IO.TextWriter" /> , referencing the specified namespaces.</para>
      </summary>
      <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</param>
      <param name="o">The <see cref="T:System.Object" /> to serialize.</param>
      <param name="namespaces">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> containing namespaces for the generated XML document. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>
        <para>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using
   the specified <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> used to write the XML document.</param>
      <param name="o">The <see cref="T:System.Object" /> to serialize.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
        <para>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using
   the specified <see cref="T:System.IO.Stream" />, referencing the specified namespaces.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> used to write the XML document.</param>
      <param name="o">The <see cref="T:System.Object" /> to serialize.</param>
      <param name="namespaces">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>
        <para>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using
   the specified <see cref="T:System.Xml.XmlWriter" />.</para>
      </summary>
      <param name="xmlWriter">The <see cref="T:System.xml.XmlWriter" /> used to write the XML document.</param>
      <param name="o">The <see cref="T:System.Object" /> to serialize.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>
        <para>Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using
   the specified <see cref="T:System.Xml.XmlWriter" /> , referencing the specified namespaces.</para>
      </summary>
      <param name="xmlWriter">The <see cref="T:System.xml.XmlWriter" /> used to write the XML document.</param>
      <param name=" o">The <see cref="T:System.Object" /> to serialize.</param>
      <param name=" namespaces">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>
        <para>Deserializes the XML document contained by the specified <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> containing the XML document to deserialize.</param>
      <returns>
        <para>The <see cref="T:System.Object" />
being deserialized.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>
        <para>Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader" />.</para>
      </summary>
      <param name="textReader">The <see cref="T:System.IO.TextReader" /> containing the XML document to deserialize.</param>
      <returns>
        <para>The <see cref="T:System.Object" />
being deserialized.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>
        <para>Deserializes the XML document contained by the specified <see cref="T:System.xml.XmlReader" />.</para>
      </summary>
      <param name="xmlReader">The <see cref="T:System.xml.XmlReader" /> containing the XML document to deserialize.</param>
      <returns>
        <para>The <see cref="T:System.Object" />
being deserialized.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>
        <para>Gets a value indicating whether this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize a specified
   XML document.</para>
      </summary>
      <param name="xmlReader">An <see cref="T:System.Xml.XmlReader" /> that points to the document to deserialize.</param>
      <returns>
        <para>
          <see langword="true" /> if an
   this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize the object which
   the <see cref="T:System.Xml.XmlReader" /> points to; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>
        <para>Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of
   types.</para>
      </summary>
      <param name="types">An array of <see cref="T:System.Type" /> objects.</param>
      <returns>
        <para>An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</para>
      </returns>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>
        <para>Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML node of unknown type during deserialization.</para>
      </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>
        <para>Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML attribute of unknown
   type during deserialization.</para>
      </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>
        <para>Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML element of unknown
   type during deserialization.</para>
      </summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>
        <para>Occurs during deserialization of a SOAP-encoded XML
      stream, when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters a recognized type that is
      not used (unreferenced).</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>
        <para> Contains the XML namespaces and prefixes that the
   <see cref="T:System.Xml.Serialization.XmlSerializer" /> uses to generate qualified names in an XML-document
      instance.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> class.</para>
      </summary>
      <param name="namespaces">An array of <see cref="T:System.Xml.XmlQualifiedName" /> objects.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>
        <para> Adds a prefix-namespace pair to an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object.</para>
      </summary>
      <param name="prefix">The prefix associated with an XML namespace.</param>
      <param name=" ns">An XML namespace.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>
        <para>Gets the array of prefix-namespace pairs in an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Xml.XmlQualifiedName" /> objects that are used as qualified names in an
   XML document.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>
        <para>Gets the number of prefix-namespace pairs in the collection.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>
        <para>Indicates to the <see cref="T:System.Xml.Serialization.XmlSerializer" /> that the member should be treated as
   XML text when the containing class is serialized or deserialized.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> class.</para>
      </summary>
      <param name="type">The <see cref="T:System.Type" /> of the member to be serialized.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>
        <para>Gets or sets the type of the member.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>
        <para> Gets or sets the XML Schema definition language (XSD) data type of the text
      generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>
        <para>Controls the XML schema generated when the attribute
      target is serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> .</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class, specifying the
   name of the XML type.</para>
      </summary>
      <param name="typeName">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>
        <para> Gets or sets a value indicating whether to include
      the type in XML schema documents.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>
        <para> Gets or sets the name of the XML type.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>
        <para>Gets or sets the namespace of the XML type.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>
        <para>Contains a mapping of one type to another.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.ElementName">
      <summary>
        <para>Gets the XML element name of the mapped object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.Namespace">
      <summary>
        <para>Gets the XML namespace of the mapped object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>
        <para>Gets the type name of the mapped object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>
        <para>The fully qualified type name, including the namespace
      (or namespaces) and type.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></para>
      </summary>
      <param name=" sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>
        <para> Gets the object being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>
        <para>Gets an object that represents the unknown XML attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>
        <para>Gets the line number of the unknown XML attribute.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>
        <para>Gets the position in the line of the unknown XML attribute.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> event of an <see cref="T:System.Xml.Serialization.XmlSerializer" />
.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>
        <para>Gets the object the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is deserializing.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>
        <para>Gets the object that represents the unknown XML element.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>
        <para>Gets the line number where the unknown element was
      encountered if the XML reader is an <see cref="T:System.Xml.XmlTextReader" /> .</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>
        <para>Gets the place in the line where the unknown element
      occurs if the XML reader is an <see cref="T:System.Xml.XmlTextReader" /> .</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event of an <see cref="T:System.Xml.Serialization.XmlSerializer" />
.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>
        <para> Gets the object being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>
        <para>Gets the type of the XML node being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>
        <para>Gets the name of the XML node being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>
        <para>Gets the XML local name of the XML node being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>
        <para>Gets the namespace URI that is associated with the XML node being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>
        <para>Gets the text of the XML node being deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>
        <para>Gets the line number of the unknown XML node.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>
        <para>Gets the position in the line of the unknown XML node.</para>
      </summary>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> event of an <see cref="T:System.Xml.Serialization.XmlSerializer" /> .</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>
        <para>Provides data for the known, but unreferenced, object 
      found in an encoded SOAP XML stream during deserialization.</para>
      </summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> class.</para>
      </summary>
      <param name="o">The unreferenced object.</param>
      <param name=" id">A unique string used to identify the unreferenced object.</param>
      <returns>
        <para>An <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> that contains
   information about the unreferenced object.</para>
      </returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>
        <para>Gets the deserialized, but unreferenced, object.</para>
      </summary>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>
        <para>Gets the ID of the object.</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\tools\x86\managed\urt\v1.0.3705\wincv.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>WinCV</name>
  </assembly>
  <members>
    <member name="M:Microsoft.Tools.SRDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:Microsoft.Tools.SRDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:Microsoft.Tools.RtfTextWriter">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.#ctor(System.IO.TextWriter)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.#ctor">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.ToString">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.OutputTabs">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteBeginRtf">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteBeginFontTable">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteFont(System.Drawing.Font)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteEndFontTable">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteBeginColorTable">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteColor(System.Drawing.Color)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteEndColorTable">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteBeginGroup">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteEndGroup">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteFontAttribute(System.Int32,System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteForeColorAttribute(System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteBackColorAttribute(System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteBoldAttribute">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteItalicAttribute">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteUnderlineAttribute(Microsoft.Tools.UnderlineStyle)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteEndRtf">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.String)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Boolean)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Char)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Char[])">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Char[],System.Int32,System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Double)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Single)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Int64)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.Object)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.String,System.Object)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.String,System.Object,System.Object)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.Write(System.String,System.Object[])">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLineNoTabs(System.String)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.String)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Boolean)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Char)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Char[])">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Double)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Single)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Int32)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Int64)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.Object)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.String,System.Object)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.String,System.Object,System.Object)">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.String,System.Object[])">
    </member>
    <member name="M:Microsoft.Tools.RtfTextWriter.WriteLine(System.UInt32)">
    </member>
    <member name="P:Microsoft.Tools.RtfTextWriter.Encoding">
    </member>
    <member name="T:Microsoft.Tools.UnderlineStyle">
    </member>
    <member name="F:Microsoft.Tools.UnderlineStyle.None">
    </member>
    <member name="F:Microsoft.Tools.UnderlineStyle.Single">
    </member>
    <member name="F:Microsoft.Tools.UnderlineStyle.Word">
    </member>
    <member name="F:Microsoft.Tools.UnderlineStyle.Dotted">
    </member>
    <member name="F:Microsoft.Tools.UnderlineStyle.Doubled">
    </member>
    <member name="F:Microsoft.Tools.UnderlineStyle.Wave">
    </member>
    <member name="T:Microsoft.Tools.TextPane">
    </member>
    <member name="M:Microsoft.Tools.TextPane.#ctor">
    </member>
    <member name="M:Microsoft.Tools.TextPane.OnPaint(System.Windows.Forms.PaintEventArgs)">
    </member>
    <member name="M:Microsoft.Tools.TextPane.OnFontChanged(System.EventArgs)">
    </member>
    <member name="M:Microsoft.Tools.TextPane.OnTextChanged(System.EventArgs)">
    </member>
    <member name="M:Microsoft.Tools.TextPane.WndProc(System.Windows.Forms.Message@)">
    </member>
    <member name="P:Microsoft.Tools.TextPane.CreateParams">
    </member>
    <member name="P:Microsoft.Tools.TextPane.Lines">
    </member>
    <member name="T:Microsoft.Tools.TextPaneLine">
    </member>
    <member name="M:Microsoft.Tools.TextPaneLine.#ctor(System.String)">
    </member>
    <member name="M:Microsoft.Tools.TextPaneLine.#ctor(System.String,System.Drawing.Color)">
    </member>
    <member name="P:Microsoft.Tools.TextPaneLine.BackColor">
    </member>
    <member name="P:Microsoft.Tools.TextPaneLine.Bounds">
    </member>
    <member name="P:Microsoft.Tools.TextPaneLine.ForeColor">
    </member>
    <member name="P:Microsoft.Tools.TextPaneLine.Text">
    </member>
    <member name="T:Microsoft.Tools.WinCV">
    </member>
    <member name="M:Microsoft.Tools.WinCV.Main(System.String[])">
    </member>
    <member name="M:Microsoft.Tools.WinCV.#ctor">
    </member>
    <member name="M:Microsoft.Tools.BaseGenerator.AppendMethodReturnType(Microsoft.Tools.RtfTextWriter,System.Reflection.MethodInfo,Microsoft.Tools.TypeNames)">
    </member>
    <member name="M:Microsoft.Tools.BaseGenerator.AppendMethodModifiers(Microsoft.Tools.RtfTextWriter,System.Reflection.MethodInfo)">
    </member>
    <member name="M:Microsoft.Tools.BaseGenerator.AppendClassModifiers(Microsoft.Tools.RtfTextWriter,System.Type)">
    </member>
    <member name="M:Microsoft.Tools.BaseGenerator.AppendFieldModifiers(Microsoft.Tools.RtfTextWriter,System.Reflection.FieldInfo)">
    </member>
    <member name="M:Microsoft.Tools.BaseGenerator.AppendFieldType(Microsoft.Tools.RtfTextWriter,System.Reflection.FieldInfo,Microsoft.Tools.TypeNames)">
    </member>
    <member name="M:Microsoft.Tools.BaseGenerator.AppendFieldVisibility(Microsoft.Tools.RtfTextWriter,System.Reflection.FieldInfo)">
    </member>
    <member name="M:Microsoft.Tools.RtfGenerator.AppendClassModifiers(Microsoft.Tools.RtfTextWriter,System.Type)">
    </member>
    <member name="M:Microsoft.Tools.RtfGenerator.AppendFieldModifiers(Microsoft.Tools.RtfTextWriter,System.Reflection.FieldInfo)">
    </member>
    <member name="M:Microsoft.Tools.RtfGenerator.AppendMethodModifiers(Microsoft.Tools.RtfTextWriter,System.Reflection.MethodInfo)">
    </member>
    <member name="M:Microsoft.Tools.RtfGenerator.AppendFieldVisibility(Microsoft.Tools.RtfTextWriter,System.Reflection.FieldInfo)">
    </member>
    <member name="T:Microsoft.Tools.WinCVSectionHandler">
    </member>
    <member name="M:Microsoft.Tools.WinCVSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\tools\x86\managed\urt\v1.0.3705\system.web.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Web</name>
  </assembly>
  <members>
    <member name="M:System.Web.SRDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Web.SRDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Web.BeginEventHandler">
      <summary>
        <para> Represents the method
      that handles asynchronous events such as application events. This delegate is called at the
      start of an asynchronous operation.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <param name=" cb">The delegate to call when the asynchronous method call is complete. If <paramref name="cb" /> is <see langword="null" /> , the delegate is not called.</param>
      <param name=" extraData">Any additional data needed to process the request.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" /> that represents the result of
   the <see langword="BeginEventHandler" /> operation.</para>
      </returns>
    </member>
    <member name="T:System.Web.EndEventHandler">
      <summary>
        <para>Represents the method that handles asynchronous events 
      such as application events. This delegate is called by the event source when
      completion of the asynchronous operation is signaled by a callback to the
   <see cref="T:System.Web.BeginEventHandler" /> 
   
   delegate.</para>
      </summary>
      <param name="ar">The <see cref="T:System.IAsyncResult" /> that is the result of the <see cref="T:System.Web.BeginEventHandler" /> operation.</param>
    </member>
    <member name="T:System.Web.HttpApplication">
      <summary>
        <para> Defines the methods, properties, and events common to all
      application objects within an ASP.NET application. This class is the
      base class for applications defined
      by the user in the global.asax file.</para>
      </summary>
    </member>
    <member name="T:System.Web.IHttpAsyncHandler">
      <summary>
        <para>When implemented by a class, defines the contract that HTTP asynchronous handler objects must
      implement.</para>
      </summary>
    </member>
    <member name="T:System.Web.IHttpHandler">
      <summary>
        <para> Defines the contract that ASP.NET implements to synchronously process HTTP
      Web requests using custom HTTP handlers.</para>
      </summary>
    </member>
    <member name="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
        <para> Enables processing of HTTP Web requests by a custom
   <see langword="HttpHandler " />
   that implements the <see cref="T:System.Web.IHttpHandler" /> interface.
   </para>
      </summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />)<see langword="" /> used to service HTTP requests. </param>
    </member>
    <member name="P:System.Web.IHttpHandler.IsReusable">
      <summary>
        <para> Gets a value indicating whether another request can use 
      the <see cref="T:System.Web.IHttpHandler" />
      instance.</para>
      </summary>
    </member>
    <member name="M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>
        <para>Initiates an asynchronous call to the HTTP handler.</para>
      </summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />)<see langword="" /> used to service HTTP requests. </param>
      <param name=" cb">The <see cref="T:System.AsyncCallback" /> to call when the asynchronous method call is complete. If <paramref name="cb" /> is a null reference (<see langword="Nothing" /> in Visual Basic), the delegate is not called.</param>
      <param name=" extraData">Any extra data needed to process the request.</param>
      <returns>
        <para>An <see cref="T:System.IAsyncResult" />that contains information about the status of the process.</para>
      </returns>
    </member>
    <member name="M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>
        <para> Executes clean-up code when the process ends.</para>
      </summary>
      <param name="result">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process. </param>
    </member>
    <member name="M:System.Web.HttpApplication.CompleteRequest">
      <summary>
        <para>Causes ASP.NET to bypass all events in the HTTP pipeline chain of
      execution and directly execute <see cref="E:System.Web.HttpApplication.EndRequest" />.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous
<see langword="BeginRequest" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to
   the collection of asynchronous <see langword="AuthenticateRequest" />
   event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous
<see langword="AuthorizeRequest" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous
<see langword="ResolveRequestCache" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to
   the collection of <see langword="AcquireRequestState" /> event
   handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous
<see langword="PreRequestHandlerExecute" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the
   collection of asynchronous <see langword="PostRequestHandlerExecute" />
   event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">
        <para>The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</para>
      </param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous
<see langword="ReleaseRequestState" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous
<see langword="UpdateRequestCache" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
      <summary>
        <para>Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous
<see langword="EndRequest" /> event handlers for the current request.</para>
      </summary>
      <param name="bh">The <see cref="T:System.Web.BeginEventHandler" /> delegate that starts asynchronous processing of the event.</param>
      <param name=" eh">The <see cref="T:System.Web.EndEventHandler" /> delegate that ends asynchronous processing of the event.</param>
    </member>
    <member name="M:System.Web.HttpApplication.Init">
      <summary>
        <para> 
      Executes custom
      initialization code after all event-handler modules
      have been added.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplication.Dispose">
      <summary>
        <para> Cleans up the instance variables of a
      module.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
      <summary>
        <para>Provides an application-wide implementation of the <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /> property.</para>
      </summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> that contains information about the current Web request</param>
      <param name=" custom">The custom string that specifies which cached response is used to response to the current request.</param>
      <returns>
        <para> If
      the value of the <paramref name="custom" /> parameter is "browser", the browser's
   <see cref="P:System.Web.HttpBrowserCapabilities.Type" /> ; otherwise,
   <see langword="null" /> .</para>
      </returns>
    </member>
    <member name="P:System.Web.HttpApplication.Context">
      <summary>
        <para> 
      Gets HTTP-specific information about the current instance
      of the application.
      </para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.Disposed">
      <summary>
        <para> Occurs when ASP.NET completes the chain of execution
      when responding to a request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Events">
      <summary>
        <para>Gets the list of event handler delegates that process all
      application events.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Request">
      <summary>
        <para>Gets the intrinsic request<see langword=" " /> object
   for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Response">
      <summary>
        <para>Gets the intrinsic response<see langword=" " />
object for the current
request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Session">
      <summary>
        <para> Gets the intrinsic session<see langword=" " /> object that provides access to session data.
   </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Application">
      <summary>
        <para>Gets the state (a collection of all files, pages, 
      handlers, modules, and code) for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Server">
      <summary>
   Gets the intrinsic server<see langword=" " />object for the current request.
</summary>
    </member>
    <member name="P:System.Web.HttpApplication.User">
      <summary>
        <para>Gets the intrinsic user object for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Modules">
      <summary>
        <para> Gets the collection of modules for the current application.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.AcquireRequestState">
      <summary>
        <para> Occurs when ASP.NET acquires the current state (for
      example, session state) associated with the current request.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.AuthenticateRequest">
      <summary>
        <para> Occurs when a security module has established the identity of the user.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.AuthorizeRequest">
      <summary>
        <para> Occurs when a security module has verified user authorization.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.BeginRequest">
      <summary>
        <para>Occurs as the first event in the HTTP pipeline
      chain of execution when ASP.NET responds to a request.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.EndRequest">
      <summary>
        <para> Occurs as the last event to in the HTTP pipeline chain of execution
      when ASP.NET responds to a request.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.Error">
      <summary>
        <para> Occurs when an unhandled exception is
      thrown.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.PreSendRequestHeaders">
      <summary>
        <para> Occurs just before ASP.NET sends HTTP headers
      to the client.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.PreSendRequestContent">
      <summary>
        <para> Occurs just before ASP.NET sends content to the client.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.PreRequestHandlerExecute">
      <summary>
        <para> Occurs just before ASP.NET begins executing a handler such as
      a page or XML Web service.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.PostRequestHandlerExecute">
      <summary>
        <para> Occurs when the ASP.NET handler (page,
      XML Web service) finishes execution.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.ReleaseRequestState">
      <summary>
        <para> Occurs after ASP.NET finishes executing all request 
      handlers. This event causes state
      modules to save the current state data.</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.ResolveRequestCache">
      <summary>
        <para> Occurs when ASP.NET completes an authorization event to let
      the caching modules serve requests from the cache, bypassing execution of the handler
      (the page or Web service, for example).</para>
      </summary>
    </member>
    <member name="E:System.Web.HttpApplication.UpdateRequestCache">
      <summary>
        <para> Occurs when ASP.NET finishes executing a handler in order
      to let caching modules store responses that will be used to serve
      subsequent requests from the cache.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplication.Site">
      <summary>
        <para>Provides a site interface for an <see cref="T:System.ComponentModel.IComponent" /> implementation.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpApplicationState">
      <summary>
        <para> Enables sharing of global information across multiple sessions
      and requests within an ASP.NET application.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
      <summary>
        <para>Adds a new object to the <see cref="T:System.Web.HttpApplicationState" />
 collection.</para>
      </summary>
      <param name="name">The name of the object to be added to the collection.</param>
      <param name=" value">The value of the object.</param>
    </member>
    <member name="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
      <summary>
        <para>Updates the value of an object
      in an <see cref="T:System.Web.HttpApplicationState" /> collection.</para>
      </summary>
      <param name="name">The name of the object to be updated.</param>
      <param name=" value">The updated value of the object.</param>
    </member>
    <member name="M:System.Web.HttpApplicationState.Remove(System.String)">
      <summary>
        <para>Removes the named object from an <see cref="T:System.Web.HttpApplicationState" />
collection.</para>
      </summary>
      <param name="name">The name of the object to be removed from the collection.</param>
    </member>
    <member name="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
      <summary>
        <para>Removes an object from an <see cref="T:System.Web.HttpApplicationState" /> 
collection by index.</para>
      </summary>
      <param name="index">The position in the collection of the item to be removed.</param>
    </member>
    <member name="M:System.Web.HttpApplicationState.Clear">
      <summary>
        <para>Removes all objects from an <see cref="T:System.Web.HttpApplicationState" />
collection.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplicationState.RemoveAll">
      <summary>
        <para>Removes all objects from an <see cref="T:System.Web.HttpApplicationState" />
collection.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplicationState.Get(System.String)">
      <summary>
        <para> Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name.</para>
      </summary>
      <param name="name">The name of the object.</param>
      <returns>
        <para>The object referenced by <paramref name="name" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpApplicationState.Get(System.Int32)">
      <summary>
        <para> Gets an <see cref="T:System.Web.HttpApplicationState" />
object by numerical index.</para>
      </summary>
      <param name="index">The index of the application state object.</param>
      <returns>
        <para> The object referenced by <paramref name="index" /> .</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
      <summary>
        <para> Gets an <see cref="T:System.Web.HttpApplicationState" /> object name by index.</para>
      </summary>
      <param name="index">The index of the application state object.</param>
      <returns>
        <para>The name under which the application state object was saved.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpApplicationState.Lock">
      <summary>
        <para>Locks access to an <see cref="T:System.Web.HttpApplicationState" />
variable to facilitate access
synchronization.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpApplicationState.UnLock">
      <summary>
        <para>Unlocks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access
   synchronization.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplicationState.Count">
      <summary>
        <para> Gets the number of objects in the <see cref="T:System.Web.HttpApplicationState" />
collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplicationState.Item(System.String)">
      <summary>
        <para> Gets the value of a single <see cref="T:System.Web.HttpApplicationState" /> object by name.</para>
      </summary>
      <param name="name">The name of the object in the collection.</param>
    </member>
    <member name="P:System.Web.HttpApplicationState.Item(System.Int32)">
      <summary>
        <para> Gets a single <see cref="T:System.Web.HttpApplicationState" />
object by index.</para>
      </summary>
      <param name="index">The numerical index of the object in the collection.</param>
    </member>
    <member name="P:System.Web.HttpApplicationState.AllKeys">
      <summary>
        <para> Gets the access keys in the <see cref="T:System.Web.HttpApplicationState" />
collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplicationState.Contents">
      <summary>
        <para> Gets a reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpApplicationState.StaticObjects">
      <summary>
        <para>Gets all objects declared by an &lt;object&gt; tag where the scope is set to 
      "Application" within the ASP.NET application.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpBrowserCapabilities">
      <summary>
        <para> Enables the server to gather information on
      the capabilities of the browser that is running on the client.</para>
      </summary>
    </member>
    <member name="T:System.Web.Configuration.HttpCapabilitiesBase">
      <summary>
        <para>Defines the base class for client user-agent capabilities.</para>
      </summary>
    </member>
    <member name="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)">
      <summary>
        <para>Returns individual browser capabilities for the current request.</para>
      </summary>
      <param name="configKey">The name of the configuration section of the capability.</param>
      <param name=" request">The <see cref="T:System.Web.HttpRequest" /> that contains the server variables used during evaluation. Usually the current <see langword="HttpRequest" /> .</param>
      <returns>
        <para>An <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> that provides access to individual user-agent 
   capabilities.</para>
      </returns>
    </member>
    <member name="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)">
      <summary>
        <para>Gets the value of the specified browser capability.</para>
      </summary>
      <param name="key">The name of the browser capability to retrieve.</param>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.ClrVersion">
      <summary>
        <para> Gets the version number of the
      .NET common language runtime installed on the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Type">
      <summary>
   Gets the name and major (that is, integer) version
   number of the client browser.
</summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Browser">
      <summary>
        <para> Gets the browser string (if any) that was
      transmitted in the <see langword="User-Agent " /> header.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Version">
      <summary>
        <para> Gets the full (integer and
      decimal) version number of the client browser.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.MajorVersion">
      <summary>
        <para>Gets the major (that is, integer) version number of the client browser.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.MinorVersion">
      <summary>
        <para>Gets the minor (that is, decimal) version number of the client browser.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Platform">
      <summary>
        <para>Gets the name of the platform that the client uses.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.EcmaScriptVersion">
      <summary>
        <para>Gets the version number of ECMA script that the client browser supports.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.MSDomVersion">
      <summary>
        <para>Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM)
 that the client browser supports.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.W3CDomVersion">
      <summary>
        <para>Gets the version of the World Wide Web Consortium (W3C) XML
      Document Object Model (DOM) that the client browser supports.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Beta">
      <summary>
        <para>Gets a value indicating whether the browser is a beta release.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Crawler">
      <summary>
        <para>Gets a value indicating whether the client browser is a Web crawler search engine.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.AOL">
      <summary>
        <para> Gets a value indicating whether the client is an America Online (AOL) browser.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Win16">
      <summary>
        <para>Gets a value indicating whether the client is a Win16-based computer.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Win32">
      <summary>
        <para>Gets a value indicating whether the client is a Win32-based computer.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Frames">
      <summary>
        <para>Gets a value indicating whether the client browser supports HTML frames.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Tables">
      <summary>
        <para>Gets a value indicating whether the client browser supports HTML tables.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.Cookies">
      <summary>
        <para>Gets a value indicating whether the client browser supports cookies.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.VBScript">
      <summary>
        <para>Gets a value indicating whether the client browser supports VBScript.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.JavaScript">
      <summary>
        <para>Gets a value indicating whether the client browser supports JavaScript.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.JavaApplets">
      <summary>
        <para>Gets a value indicating whether the client browser supports Java applets.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.ActiveXControls">
      <summary>
        <para>Gets a value indicating whether the client browser supports ActiveX controls.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.BackgroundSounds">
      <summary>
        <para>Gets a value indicating whether the client browser supports background sounds.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpBrowserCapabilities.CDF">
      <summary>
        <para>Gets a value indicating whether the client browser supports Channel Definition Format (CDF) for webcasting.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpCacheVaryByParams">
      <summary>
        <para> Provides a type-safe way to set the <see cref="P:System.Web.HttpCachePolicy.VaryByParams" /> property that identifies the HTTP
<see langword="Get" /> or <see langword="Post" /> 
parameters that ASP.NET uses to choose a response from multiple cached
responses.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCacheVaryByParams.Item(System.String)">
      <summary>
        <para>Gets or sets the name of the HTTP <see langword="Get" />
or <see langword="Post" /> parameter that is used to select one of several different cached responses.</para>
      </summary>
      <param name="header">The name of the custom header.</param>
    </member>
    <member name="P:System.Web.HttpCacheVaryByParams.IgnoreParams">
      <summary>
        <para> Gets or sets a value indicating whether HTTP header cache-control parameters are
      ignored.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpCacheability">
      <summary>
        <para> Provides enumerated values that are used to set
 the <see langword="Cache-Control " /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheability.NoCache">
      <summary>
        <para>Sets the <see langword="Cache-Control: no-cache " /> header. Without 
    a field name, the directive applies to the entire request and a shared
    (proxy server) cache must force a successful revalidation with the origin Web server before
    satisfying the request. With a field name, the directive applies only
    to the named field;the rest of the response may be supplied from a
    shared cache.</para>
        <para>For more information, refer to RFC 2616: Hypertext Transfer Protocol -- 
    HTTP/1.1, available on the World Wide Web Consortium's site at
    http://www.w3c.org. See section 14.9 "Cache-Control" and section 13, "Caching in
    HTTP" for complete details.</para>
        <para>Note: <see langword="NoCache " />
 does not send the common HTTP 1.0 request directive
 <see langword="Pragma: no-cache" />.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheability.Private">
      <summary>
        <para>Default value. Sets <see langword="Cache-Control: private " /> to specify that the response is cacheable only on the client and not by
    shared (proxy server) caches.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheability.Server">
      <summary>
        <para> Specifies that the response is cached only at the origin 
       server. Similar to the <see langword="NoCache " />option. Clients receive a
    <see langword="Cache-Control: no-cache " />directive but the document is cached on 
       the origin
       server.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheability.Public">
      <summary>
        <para>Sets <see langword="Cache-Control: public " /> to specify that the response is cacheable by clients and shared (proxy) caches.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpCacheRevalidation">
      <summary>
        <para> Provides enumerated values that are used to set revalidation-specific <see langword=" Cache-Control " /> HTTP
    headers.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheRevalidation.AllCaches">
      <summary>
        <para>Sets the <see langword="Cache-Control: must-revalidate " /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheRevalidation.ProxyCaches">
      <summary>
        <para>Sets the <see langword="Cache-Control: proxy-revalidate " /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpCacheRevalidation.None">
      <summary>
        <para> Default value. If this value is set,
       no cache-revalidation directive is sent.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpValidationStatus">
      <summary>
        <para>Provides enumerated values that indicate cache validation status.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpValidationStatus.Invalid">
      <summary>
        <para> Indicates that the cache is invalid. The item is evicted 
      from the cache and the request is handled as a cache
      miss.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpValidationStatus.IgnoreThisRequest">
      <summary>
        <para>Indicates that the request is treated as a cache miss 
      and the page is executed. The cache is not invalidated.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpValidationStatus.Valid">
      <summary>
        <para> Indicates that the cache is 
       valid.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpCacheValidateHandler">
      <summary>
        <para>Delegate method that is called when a cached item is validated. Cache items
      invalidated within the method are treated as cache misses.</para>
      </summary>
      <param name="context">The <see cref="T:System.Web.HttpContext" /> object containing information about the current request.</param>
      <param name=" data">User-supplied data used to validate the cached item.</param>
      <param name=" validationStatus">An <see cref="T:System.Web.HttpValidationStatus" /> enumeration value. Your delegate should set this value to indicate the result of the validation.</param>
    </member>
    <member name="P:System.Web.HttpCachePolicySettings.NoServerCaching">
    </member>
    <member name="T:System.Web.HttpCachePolicy">
      <summary>
        <para> Contains methods for setting
       cache-specific HTTP headers and for controlling the ASP.NET page output cache.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetNoServerCaching">
      <summary>
        <para> Stops all origin-server caching for the current response. </para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)">
      <summary>
        <para>Sets the <see langword="Vary " />HTTP
   header to the specified text string.</para>
      </summary>
      <param name="custom">The text to set the <see langword="Vary" /> header to.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.AppendCacheExtension(System.String)">
      <summary>
        <para>Appends the specified text to
      the <see langword="Cache-Control " /> HTTP
      header.</para>
      </summary>
      <param name="extension">The text to append to the <see langword="Cache-Control" /> header.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetNoTransforms">
      <summary>
        <para>Sets the <see langword="CacheControl: no-transform " /> 
 directive.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)">
      <summary>
        <para>Sets the <see langword="Cache-Control " /> header to one of the values of
<see cref="T:System.Web.HttpCacheability" />
.</para>
      </summary>
      <param name="cacheability">An <see cref="T:System.Web.HttpCacheability" /> enumeration value.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)">
      <summary>
        <para> Sets the <see langword="Cache-Control " /> header to one of the values of <see cref="T:System.Web.HttpCacheability" /> and
   appends an extension to the directive.</para>
      </summary>
      <param name="cacheability">The <see cref="T:System.Web.HttpCacheability" /> enumeration value to set the header to.</param>
      <param name=" field">The cache control extension to add to the header.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetNoStore">
      <summary>
        <para> 
       Sets the <see langword="Cache-Control: no-store " />
       directive.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetExpires(System.DateTime)">
      <summary>
        <para> Sets the <see langword="Expires " /> HTTP header to an absolute date and time.</para>
      </summary>
      <param name="date">The absolute <see cref="T:System.DateTime" /> value to set the <see langword="Expires" />header to.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)">
      <summary>
        <para>Sets the <see langword="Cache-Control: max-age " />HTTP header based on the specified time span.</para>
      </summary>
      <param name="delta">The time span used to set the <see langword="Cache" />-<see langword="Control: max-age" /> header.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)">
      <summary>
        <para>Sets the <see langword="Cache-Control: s-maxage " /> HTTP header based on the specified time span.</para>
      </summary>
      <param name="delta">The time span used to set the <see langword="Cache-Control: s-maxage" /> header.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)">
      <summary>
        <para> 
       Sets cache expiration to sliding.</para>
      </summary>
      <param name="slide">
        <see langword="true" /> or <see langword="false" /> .</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)">
      <summary>
        <para>Specifies whether the ASP.NET cache should ignore 
      HTTP <see langword="Cache-Control" /> headers sent by the client that
      invalidate the cache.</para>
      </summary>
      <param name="validUntilExpires">
        <see langword="true" /> if the cache ignores <see langword="Cache-Control" /> invalidation headers; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)">
      <summary>
        <para>Sets the <see langword="Cache-Control " />HTTP header
   to either the <see langword="must-revalidate " />or the
<see langword="proxy-revalidate " />directives based on the supplied enumeration
   value.</para>
      </summary>
      <param name="revalidation">The <see cref="T:System.Web.HttpCacheRevalidation" /> enumeration value to set the <see langword="Cache-Control" /> header to.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetETag(System.String)">
      <summary>
        <para>Sets the <see langword="ETag " /> HTTP header to the specified string.</para>
      </summary>
      <param name="etag">The text to use for the <see langword="ETag" /> header.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetLastModified(System.DateTime)">
      <summary>
        <para>Sets the <see langword="Last-Modified " />HTTP header to the <see cref="T:System.DateTime" /> value supplied.</para>
      </summary>
      <param name="date">The new <see cref="T:System.DateTime" /> value for the <see langword="Last-Modified" /> header.</param>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies">
      <summary>
        <para>Sets the <see langword="Last-Modified " />HTTP header based on the time stamps
    of the handler's file dependencies.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCachePolicy.SetETagFromFileDependencies">
      <summary>
        <para>Sets the <see langword="ETag" /> HTTP header based on the time stamps of 
    the handler's file dependencies.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)">
      <summary>
        <para>Registers a validation callback for the current response.</para>
      </summary>
      <param name="handler">The <see cref="T:System.Web.HttpCacheValidateHandler" /> value.</param>
      <param name="data">The arbitrary user-supplied data that is passed back to the <see langword="AddValidationCallback" /> delegate.</param>
    </member>
    <member name="P:System.Web.HttpCachePolicy.VaryByHeaders">
      <summary>
        <para> Gets the list of all HTTP headers that will be
      used to vary cache output.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCachePolicy.VaryByParams">
      <summary>
        <para>Gets the list of parameters received by a <see langword="GET " />(querystring) or <see langword="POST " />(in the body of the HTTP
   request) that affect
   caching.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpCacheVaryByHeaders">
      <summary>
        <para> Provides a type-safe way to set the <see cref="P:System.Web.HttpCachePolicy.VaryByHeaders" /> property that identifies the request 
   headers that ASP.NET adds to the <see langword="Vary" />
   HTTP header sent to the
   client.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCacheVaryByHeaders.VaryByUnspecifiedParameters">
      <summary>
        <para>Causes ASP.NET to set the <see langword="Vary" /> HTTP
   header to the value * (an asterisk) and causes
   all other <see langword="Vary" />
   header information to be dropped.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCacheVaryByHeaders.AcceptTypes">
      <summary>
        <para> Gets or sets a value indicating whether the origin server
      adds the <see langword="Accept" /> field to the
   <see langword="Vary" />
   HTTP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCacheVaryByHeaders.UserLanguage">
      <summary>
        <para> Gets or sets a value indicating whether the origin
      server adds the <see langword="Accept-Language" /> field to the
   <see langword="Vary" />
   HTTP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCacheVaryByHeaders.UserAgent">
      <summary>
   Gets or sets a value indicating whether
   the origin server adds the <see langword="User-Agent" /> header to the
<see langword="Vary" /> HTTP header.
</summary>
    </member>
    <member name="P:System.Web.HttpCacheVaryByHeaders.UserCharSet">
      <summary>
        <para> Gets or sets a value indicating whether the
      origin server adds the <see langword="Accept-Charset" /> field
      to the
   <see langword="Vary" /> 
   HTTP header.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCacheVaryByHeaders.Item(System.String)">
      <summary>
        <para> Gets or sets a custom header field that the origin server 
      adds to the <see langword="Vary" /> HTTP
      header.</para>
      </summary>
      <param name="header">The name of the custom header.</param>
    </member>
    <member name="T:System.Web.HttpClientCertificate">
      <summary>
        <para> Provides the client certificate fields issued by the client in response to the server's request for the client's identity.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpClientCertificate.Get(System.String)">
      <summary>
        <para>Returns individual client certificate fields by name.</para>
      </summary>
      <param name="field">The item in the collection to retrieve.</param>
      <returns>
        <para>The value of the item specified by <paramref name="field." /></para>
      </returns>
    </member>
    <member name="P:System.Web.HttpClientCertificate.Cookie">
      <summary>
        <para>Gets the unique ID for the client certificate, if provided.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.Certificate">
      <summary>
        <para>Gets a string containing the binary stream of the entire certificate content, in ASN.1 format.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.Flags">
      <summary>
        <para>A set of flags that provide additional client certificate information. </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.KeySize">
      <summary>
        <para> Gets the number of bits in the digital certificate key size.
      For example, 128. </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.SecretKeySize">
      <summary>
        <para>Gets the number of bits in the server certificate 
      private key. For example, 1024.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.Issuer">
      <summary>
        <para> A string that contains a list of subfield values containing
      information about the certificate issuer.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.ServerIssuer">
      <summary>
        <para>Gets the issuer field of the server certificate.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.Subject">
      <summary>
        <para>Gets the subject field of the client certificate.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.ServerSubject">
      <summary>
        <para>Gets the subject field of the server certificate.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.SerialNumber">
      <summary>
        <para> Provides the certificate serial number as an
      ASCII representation of hexadecimal bytes separated by hyphens. For example,
      04-67-F3-02.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.ValidFrom">
      <summary>
        <para> Gets the date when the certificate becomes valid. The date varies with
      international settings. </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.ValidUntil">
      <summary>
        <para> Gets the certificate expiration date.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.CertEncoding">
      <summary>
        <para> Gets the encoding of the certificate.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.PublicKey">
      <summary>
        <para>Gets the public key binary value from the certificate.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.BinaryIssuer">
      <summary>
        <para>Gets or sets the certificate issuer, in binary format.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.IsPresent">
      <summary>
        <para>Gets a value that indicates whether the client certificate is present.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpClientCertificate.IsValid">
      <summary>
        <para>Gets a value that indicates whether the client
      certificate is valid.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpContext">
      <summary>
        <para> Encapsulates all HTTP-specific information about an individual HTTP request.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class.
   </para>
      </summary>
      <param name="request">The <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request. </param>
      <param name=" response">The <see cref="T:System.Web.HttpResponse" /> object for the current HTTP request. </param>
    </member>
    <member name="M:System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class.
   </para>
      </summary>
      <param name="wr">The <see cref="T:System.Web.HttpWorkerRequest" /> object for the current HTTP request. </param>
    </member>
    <member name="M:System.Web.HttpContext.AddError(System.Exception)">
      <summary>
        <para> Adds an exception to the exception collection for the current HTTP request.
      </para>
      </summary>
      <param name="errorInfo">The <see cref="T:System.Exception" /> object to add to the exception collection. </param>
    </member>
    <member name="M:System.Web.HttpContext.ClearError">
      <summary>
        <para> Clears all errors for the current HTTP request.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.HttpContext.GetConfig(System.String)">
      <summary>
        <para>Returns requested configuration information for the current HTTP
      request.</para>
      </summary>
      <param name="name">The configuration tag that information is requested for.</param>
      <returns>
        <para>The object containing the requested configuration information.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpContext.GetAppConfig(System.String)">
      <summary>
        <para>Returns requested configuration information for the
      current application</para>
      </summary>
      <param name="name">The application configuration tag that information is requested for.</param>
      <returns>
        <para>An object containing configuration information.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpContext.RewritePath(System.String)">
      <summary>
        <para> Assigns an internal rewrite path.</para>
      </summary>
      <param name="path">The internal rewrite path.</param>
    </member>
    <member name="P:System.Web.HttpContext.Current">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.ApplicationInstance">
      <summary>
        <para> Gets or sets the <see cref="T:System.Web.HttpApplication" /><see langword=" " /> object for the current HTTP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Application">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current
   HTTP request.
   </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Handler">
      <summary>
        <para> Gets or sets the <see cref="T:System.Web.IHttpHandler" /> object 
   for the current HTTP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Request">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpRequest" /> object 
   for the current HTTP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Response">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpResponse" /> object 
   for the current HTTP response.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Trace">
      <summary>
        <para> Gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP
   response.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Items">
      <summary>
        <para> Gets a key-value collection that can be
      used to organize and share data between an <see cref="T:System.Web.IHttpModule" /> and an <see cref="T:System.Web.IHttpHandler" /> during
      an HTTP
      request.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Session">
      <summary>
        <para> Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> instance for the current HTTP request.
   </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Server">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpServerUtility" /> object
   that provides methods used
   in processing Web
   requests.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Error">
      <summary>
        <para> Gets the first
      error (if any) accumulated during HTTP request processing.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.AllErrors">
      <summary>
        <para> Gets an array of errors accumulated while processing an HTTP
      request.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.User">
      <summary>
        <para> Gets or sets security information for the current HTTP request.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.SkipAuthorization">
      <summary>
        <para>Gets or sets a value that specifies whether the
      URLAuthorization module will skip the authorization check for the
      current request. </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.IsDebuggingEnabled">
      <summary>
        <para> Gets a value indicating whether the current HTTP request is in debug mode.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.IsCustomErrorEnabled">
      <summary>
        <para> Gets a value indicating whether custom errors are enabled for the current HTTP request.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Timestamp">
      <summary>
        <para>Gets the initial timestamp of the current HTTP request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpContext.Cache">
      <summary>
        <para> Gets the <see cref="T:System.Web.Caching.Cache" /> object for the current HTTP request.
   </para>
      </summary>
    </member>
    <member name="T:System.Web.HttpCookie">
      <summary>
        <para> Provides a type-safe way to
       create and manipulate individual HTTP cookies.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCookie.#ctor(System.String)">
      <summary>
        <para> Creates and names a new 
       cookie.</para>
      </summary>
      <param name="name">The name of the new cookie.</param>
    </member>
    <member name="M:System.Web.HttpCookie.#ctor(System.String,System.String)">
      <summary>
        <para> 
       Creates, names, and assigns a value to a new
       cookie.</para>
      </summary>
      <param name="name">The name of the new cookie.</param>
      <param name=" value">The value of the new cookie.</param>
    </member>
    <member name="P:System.Web.HttpCookie.Name">
      <summary>
        <para>Gets or
       sets the name of a cookie.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Path">
      <summary>
        <para>Gets or sets the virtual path to transmit with the
       current cookie.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Secure">
      <summary>
        <para>Gets or sets a value indicating whether to transmit the cookie securely (that is, over HTTPS only).</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Domain">
      <summary>
        <para> Gets or sets the domain to associate the cookie with.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Expires">
      <summary>
        <para>Gets or sets the expiration date and time for the cookie.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Value">
      <summary>
        <para>Gets
       or
       sets an individual cookie value.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.HasKeys">
      <summary>
        <para> Gets
       a value indicating whether a cookie has subkeys.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Values">
      <summary>
        <para>Gets a collection of key-and-value value pairs that are contained within a single cookie object.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCookie.Item(System.String)">
      <summary>
        <para>Shortcut for
   <see langword="HttpCookie.Values[" />key<see langword="]. " /> This property
      is provided for compatibility with previous versions of ASP.</para>
      </summary>
      <param name="key">Key (index) of cookie value.</param>
    </member>
    <member name="T:System.Web.HttpCookieCollection">
      <summary>
        <para>
       Provides a type-safe
       way to manipulate HTTP cookies.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCookieCollection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.HttpCookieCollection" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCookieCollection.Add(System.Web.HttpCookie)">
      <summary>
        <para>Adds the specified cookie to the cookie collection.</para>
      </summary>
      <param name="cookie">The <see cref="T:System.Web.HttpCookie" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.HttpCookieCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies members of the cookie collection to an 
    <see cref="T:System.Array" /> beginning at the 
       specified index of the array.</para>
      </summary>
      <param name="dest">The destination <see cref="T:System.Array" />.</param>
      <param name=" index">The index of the destination array where copying starts.</param>
    </member>
    <member name="M:System.Web.HttpCookieCollection.Set(System.Web.HttpCookie)">
      <summary>
        <para> Updates the value of an existing cookie in a cookie collection.</para>
      </summary>
      <param name="cookie">The <see cref="T:System.Web.HttpCookie" /> object to update.</param>
    </member>
    <member name="M:System.Web.HttpCookieCollection.Remove(System.String)">
      <summary>
        <para>Removes the cookie with the specified name from the collection.</para>
      </summary>
      <param name="name">The name of the cookie to remove from the collection.</param>
    </member>
    <member name="M:System.Web.HttpCookieCollection.Clear">
      <summary>
        <para>Clears all cookies from the cookie collection.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpCookieCollection.GetKey(System.Int32)">
      <summary>
        <para>Returns the key (name) of the cookie at the specified numerical index.</para>
      </summary>
      <param name="index">The index of the key to retrieve from the collection.</param>
      <returns>
        <para>The name of the cookie specified by <paramref name="index" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.HttpCookieCollection.Item(System.String)">
      <summary>
        <para> Gets the cookie with the specified name from the cookie collection.</para>
      </summary>
      <param name="name">Name of cookie to retrieve.</param>
    </member>
    <member name="P:System.Web.HttpCookieCollection.Item(System.Int32)">
      <summary>
        <para> Gets the
      cookie
      with the specified numerical index from the cookie collection.</para>
      </summary>
      <param name="index">The index of the cookie to retrieve from the collection.</param>
    </member>
    <member name="P:System.Web.HttpCookieCollection.AllKeys">
      <summary>
        <para>Gets a string array containing all the keys (cookie names) in the cookie collection.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpDebugHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
        <para>Drives web processing execution.</para>
      </summary>
      <param name="context">HttpContext object.</param>
    </member>
    <member name="P:System.Web.HttpDebugHandler.IsReusable">
      <summary>
        <para>Indicates whether an HttpDebugHandler instance can be recycled and used for 
       another request.</para>
      </summary>
      <returns>
        <para>Always returns <see langword="true " />for 
    HttpDebugHandler<see langword="." /></para>
      </returns>
    </member>
    <member name="T:System.Web.HttpException">
      <summary>
        <para> Provides a means of generating HTTP exceptions.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpException.CreateFromLastError(System.String)">
      <summary>
        <para>Creates a new <see cref="T:System.Exception" /> based on the error code returned from the Win32 API 
<see langword="GetLastError()" /> method. </para>
      </summary>
      <param name="message">The message to be displayed to the client when the exception is thrown. </param>
      <returns>
        <para>An <see langword="Exception" /> based 
   on the error code that is returned from a
   call to the Win32 API <see langword="GetLastError()" /> method.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpException.#ctor">
      <summary>
        <para>Constructs an empty <see langword="Exception " />
object.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpException.#ctor(System.String)">
      <summary>
        <para> Constructs an <see cref="T:System.Exception" /> using a supplied error message.
   </para>
      </summary>
      <param name="message"> The message displayed to the client when the exception is thrown. </param>
    </member>
    <member name="M:System.Web.HttpException.#ctor(System.String,System.Int32)">
      <summary>
        <para>Constructs an <see cref="T:System.Exception" /> using error message and an exception code.</para>
      </summary>
      <param name="message"> The error message displayed to the client when the exception is thrown. </param>
      <param name=" hr">The exception code that defines the error.</param>
    </member>
    <member name="M:System.Web.HttpException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Constructs an <see cref="T:System.Exception" /> using an error message and the
<see cref="P:System.Exception.InnerException" /> property.</para>
      </summary>
      <param name="message">The message displayed to the client when the exception is thrown. </param>
      <param name=" innerException">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</param>
    </member>
    <member name="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)">
      <summary>
        <para>Constructs an <see cref="T:System.Exception" /> using an HTTP error code, an error message,
   and the <see cref="P:System.Exception.InnerException" />
   property.
   </para>
      </summary>
      <param name="httpCode">The HTTP error code displayed to the client. </param>
      <param name=" message">The message displayed to the client. </param>
      <param name=" innerException">The <see cref="P:System.Exception.InnerException" /> , if any, that threw the current exception.</param>
    </member>
    <member name="M:System.Web.HttpException.#ctor(System.Int32,System.String)">
      <summary>
        <para>Constructs an <see cref="T:System.Exception" /> using
   an HTTP error code and an error message.</para>
      </summary>
      <param name="httpCode"> The HTTP error code displayed on the client. </param>
      <param name=" message">The message displayed to the client when the exception is thrown.</param>
    </member>
    <member name="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)">
      <summary>
        <para> Constructs an <see cref="T:System.Exception" /> using HTTP error code, an error message, and an exception
   code.</para>
      </summary>
      <param name="httpCode">The HTTP error code displayed on the client.</param>
      <param name=" message">The error message displayed to the client. </param>
      <param name=" hr">The error code that defines the error.</param>
    </member>
    <member name="M:System.Web.HttpException.GetHttpCode">
      <summary>
        <para>Returns the HTTP error code to send back to the client.
      If there is a nonzero HTTP code, it is returned. Otherwise, the <see cref="P:System.Exception.InnerException" />
      code is returned. If neither an <see cref="P:System.Exception.InnerException" /> code nor a
      nonzero HTTP code is available,
      
      the HTTP error code 500 is returned.</para>
      </summary>
      <returns>
        <para>The HTTP code representing the exception.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpException.GetHtmlErrorMessage">
      <summary>
        <para>Returns the HTML error message to send back to the
      client.</para>
      </summary>
      <returns>
        <para>The HTML error message.</para>
      </returns>
    </member>
    <member name="T:System.Web.HttpCompileException">
      <summary>
        <para>The exception that is thrown when a compiler error occurs.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCompileException.Results">
      <summary>
        <para>Gets compiler output and error information for
 the exception. </para>
      </summary>
    </member>
    <member name="P:System.Web.HttpCompileException.SourceCode">
      <summary>
        <para>Gets a string containing the
      source code being compiled when the error occurs. </para>
      </summary>
    </member>
    <member name="T:System.Web.HttpParseException">
      <summary>
        <para>The exception that is thrown when a parse error occurs.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpParseException.FileName">
      <summary>
        <para>Gets the name of the file being parsed when the error occurs.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpParseException.Line">
      <summary>
        <para>Gets the number of the line being parsed when the error occurs.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpFileCollection">
      <summary>
        <para> Provides access to and organizes files uploaded by a
       client.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpFileCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies members of the file collection to an 
    <see cref="T:System.Array" /> beginning at the specified index of the array.</para>
      </summary>
      <param name="dest">The destination <see cref="T:System.Array" />.</param>
      <param name=" index">The index of the destination array where copying starts.</param>
    </member>
    <member name="M:System.Web.HttpFileCollection.GetKey(System.Int32)">
      <summary>
        <para>Returns the name of the <see cref="T:System.Web.HttpFileCollection" /> member with
   the specified numerical index.</para>
      </summary>
      <param name="index">The index of the object name to be returned.</param>
      <returns>
        <para>The name of the <see langword="HttpFileCollection" /> member specified by 
<paramref name="index." /></para>
      </returns>
    </member>
    <member name="P:System.Web.HttpFileCollection.Item(System.String)">
      <summary>
        <para>Gets the object with the specified name from the file collection.</para>
      </summary>
      <param name="name">Name of item to be returned.</param>
    </member>
    <member name="P:System.Web.HttpFileCollection.Item(System.Int32)">
      <summary>
        <para>Gets the object with the specified numerical index from
      the <see cref="T:System.Web.HttpFileCollection" />
      . </para>
      </summary>
      <param name="index">The index of the item to get from the file collection.</param>
    </member>
    <member name="P:System.Web.HttpFileCollection.AllKeys">
      <summary>
        <para>Gets a string array containing the keys (names) of all members in the file collection.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpModuleCollection">
      <summary>
        <para>Provides a means of indexing and retrieving a collection 
      of <see cref="T:System.Web.IHttpModule" />
      objects.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpModuleCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies members of the module collection to an
   <see cref="T:System.Array" /> beginning
      at the specified index of the array.</para>
      </summary>
      <param name="dest">The destination <see langword="Array" />.</param>
      <param name=" index">The index of the destination <see langword="Array" /> where copying starts.</param>
    </member>
    <member name="M:System.Web.HttpModuleCollection.Get(System.String)">
      <summary>
        <para>Returns the <see cref="T:System.Web.IHttpModule" /> object with the specified name
   from the <see cref="T:System.Web.HttpModuleCollection" />
   .</para>
      </summary>
      <param name="name">Key of the item to be retrieved.</param>
      <returns>
        <para>The <see langword="IHttpModule" /> member specified by <paramref name="name" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpModuleCollection.Get(System.Int32)">
      <summary>
        <para>Returns the <see cref="T:System.Web.IHttpModule" />object with the specified index from
   the <see cref="T:System.Web.HttpModuleCollection" />
   .</para>
      </summary>
      <param name="index">Index of the <see cref="T:System.Web.IHttpModule" /> object to return from the collection.</param>
      <returns>
        <para>The <see langword="IHttpModule" /> member specified by <paramref name="index" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpModuleCollection.GetKey(System.Int32)">
      <summary>
        <para>Returns the key (name) of the <see cref="T:System.Web.IHttpModule" /> object
   at the specified numerical index..</para>
      </summary>
      <param name="index">Index of the key to retrieve from the collection.</param>
      <returns>
        <para>The name of the <see langword="IHttpModule" /> member specified by <paramref name="index" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.HttpModuleCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Web.IHttpModule" /><see langword=" " />object with the
   specified name from the <see cref="T:System.Web.HttpModuleCollection" />
   .</para>
      </summary>
      <param name="name">Key of the item to be retrieved.</param>
    </member>
    <member name="P:System.Web.HttpModuleCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Web.IHttpModule" /> object with the specified numerical
   index from the <see cref="T:System.Web.HttpModuleCollection" />
   .</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Web.IHttpModule" /> object to retrieve from the collection. </param>
    </member>
    <member name="P:System.Web.HttpModuleCollection.AllKeys">
      <summary>
        <para>Gets a string array containing all the keys (module
      names) in the <see cref="T:System.Web.HttpModuleCollection" />.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.HttpNotFoundHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
        <para>Drives web processing execution.</para>
      </summary>
      <param name="context">HttpContext object.</param>
    </member>
    <member name="P:System.Web.HttpNotFoundHandler.IsReusable">
      <summary>
        <para>Indicates whether an HttpNotFoundHandler instance can be recycled and used 
       for another request.</para>
      </summary>
      <returns>
        <para>Always returns <see langword="true" /> for 
    HttpNotFoundHandler.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpForbiddenHandler.ProcessRequest(System.Web.HttpContext)">
    </member>
    <member name="P:System.Web.HttpForbiddenHandler.IsReusable">
    </member>
    <member name="M:System.Web.HttpMethodNotAllowedHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
        <para> Drives 
       web processing execution.</para>
      </summary>
      <param name="context">HttpContext object</param>
    </member>
    <member name="P:System.Web.HttpMethodNotAllowedHandler.IsReusable">
      <summary>
        <para>Indicates whether an HttpForbiddenHandler instance can be recycled and used 
       for another request.</para>
      </summary>
      <returns>
        <para>Always returns <see langword="true" /> for HttpForbiddenHandler.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpNotImplementedHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>
        <para>Drives web processing execution.</para>
      </summary>
      <param name="context">HttpContext object</param>
    </member>
    <member name="P:System.Web.HttpNotImplementedHandler.IsReusable">
      <summary>
        <para>Indicates whether an HttpNotImplementedHandler instance can be recycled and 
       used for another request.</para>
      </summary>
      <returns>
        <para>Always returns <see langword="true" /> for HttpForbiddenHandler.</para>
      </returns>
    </member>
    <member name="T:System.Web.HttpPostedFile">
      <summary>
        <para>Provides a way to access individual files that
       have been uploaded by a client.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpPostedFile.SaveAs(System.String)">
      <summary>
        <para> Saves an uploaded MIME message body to a file on the server.</para>
      </summary>
      <param name="filename">The name of the file.</param>
    </member>
    <member name="P:System.Web.HttpPostedFile.FileName">
      <summary>
        <para> Gets the fully-qualified name of the file on the client's computer (for
       example "C:\MyFiles\Test.txt").</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpPostedFile.ContentType">
      <summary>
        <para> Gets the MIME content type of a file sent by a client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpPostedFile.ContentLength">
      <summary>
        <para>Gets the size in bytes of an uploaded file.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpPostedFile.InputStream">
      <summary>
        <para> Gets a <see cref="T:System.IO.Stream" /> object which points to an uploaded file to prepare for
    reading the contents of the file.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpRequest">
      <summary>
        <para> Enables ASP.NET to read the HTTP values sent by
      a client during a Web request.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
      <summary>
        <para>Performs a binary read of a specified number of bytes from the current input
      stream.</para>
      </summary>
      <param name="count">Number of bytes to read.</param>
      <returns>
        <para>A <see langword="byte" /> array.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpRequest.MapImageCoordinates(System.String)">
      <summary>
        <para> Maps an incoming image-field form parameter to appropriate x/y
      coordinate values.</para>
      </summary>
      <param name="imageFieldName">A string reference to a form image map.</param>
      <returns>
        <para>A two-dimensional array of <see langword="integers" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
      <summary>
        <para>Saves an HTTP request to disk.</para>
      </summary>
      <param name="filename">A string reference to a physical drive path.</param>
      <param name="includeHeaders">A <see langword="Boolean" /> value specifying whether an HTTP header should be saved to disk.</param>
    </member>
    <member name="M:System.Web.HttpRequest.MapPath(System.String)">
      <summary>
        <para>Maps the specified virtual path to a physical path.</para>
      </summary>
      <param name="virtualPath">The virtual path (absolute or relative) for the current request.</param>
      <returns>
        <para>The physical path on the server specified by <paramref name="virtualPath" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
      <summary>
        <para>Maps the specified virtual path to a physical path.</para>
      </summary>
      <param name="virtualPath">The virtual path (absolute or relative) for the current request.</param>
      <param name="baseVirtualDir">The virtual base directory path used for relative resolution.</param>
      <param name="allowCrossAppMapping">If <see langword="true" />, the <paramref name="virtualPath " /> may belong to another application.</param>
      <returns>
        <para>The physical path on the server.</para>
      </returns>
    </member>
    <member name="P:System.Web.HttpRequest.HttpMethod">
      <summary>
        <para> Gets the HTTP data transfer method (such as
   <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" /> ) used by the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.RequestType">
      <summary>
        <para>Gets or sets the HTTP data transfer method 
      (<see langword="GET" /> or <see langword="POST" /> ) used by
      the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.ContentType">
      <summary>
        <para> Gets the MIME content type of the incoming request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.ContentLength">
      <summary>
        <para>Specifies the length, in bytes, of content sent by the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.ContentEncoding">
      <summary>
        <para> Gets the character set of the entity-body.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.AcceptTypes">
      <summary>
        <para> Gets a string array of client-supported MIME accept types.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.IsAuthenticated">
      <summary>
        <para> 
       Gets a
       value indicating whether the user has been authenticated.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.IsSecureConnection">
      <summary>
        <para> Gets a value indicting whether the HTTP connection uses secure sockets (that is, HTTPS).</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Path">
      <summary>
        <para> Gets
      the virtual
      path of the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.FilePath">
      <summary>
        <para> Gets the virtual path of the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.CurrentExecutionFilePath">
      <summary>
        <para>Gets the virtual path of the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.PathInfo">
      <summary>
        <para>Gets additional path information for a resource with a
      URL extension.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.PhysicalPath">
      <summary>
        <para> Gets the physical
       file
       system path corresponding to the requested URL.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.ApplicationPath">
      <summary>
        <para> Gets the ASP.NET
      application's virtual application root path on the server.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.PhysicalApplicationPath">
      <summary>
        <para> Gets the physical file system path
      of the currently executing server application's root directory.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.UserAgent">
      <summary>
        <para> Gets the raw user agent
      string of the client browser.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.UserLanguages">
      <summary>
        <para> Gets a sorted
      string array of client language preferences.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Browser">
      <summary>
        <para> Gets information about the requesting client's browser
       capabilities.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.UserHostName">
      <summary>
        <para> Gets the DNS
       name of the remote client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.UserHostAddress">
      <summary>
        <para> Gets the IP
       host address of the remote client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.RawUrl">
      <summary>
        <para> Gets the raw URL of the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Url">
      <summary>
        <para> Gets Information about the URL of the current request.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.UrlReferrer">
      <summary>
        <para> Gets information about the URL of the client's
      previous request that linked to the current URL.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Params">
      <summary>
        <para>Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> 
items.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.QueryString">
      <summary>
        <para>Gets the collection of HTTP query string variables.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Form">
      <summary>
        <para> Gets a collection of form variables.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Headers">
      <summary>
        <para> Gets a collection of HTTP headers.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.ServerVariables">
      <summary>
        <para> Gets a collection of Web server variables.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Cookies">
      <summary>
        <para> Gets a collection of cookies sent by the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Files">
      <summary>
        <para> Gets
      the collection of client-uploaded files (Multipart MIME format).</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.InputStream">
      <summary>
        <para> Gets the contents of the incoming HTTP entity
       body.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.TotalBytes">
      <summary>
        <para> Gets
      the number of bytes in the current input stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.Filter">
      <summary>
        <para>Gets or sets the filter to use when reading the current input stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRequest.ClientCertificate">
      <summary>
        <para> Gets the current request's client security certificate.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpResponse">
      <summary>
        <para> Encapsulates HTTP response
      information from an ASP.NET operation .</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
      <summary>
        <para>Initializes a new instance of the <see langword="HttpResponse" /> class.</para>
      </summary>
      <param name="writer">A <see langword="TextWriter" /> object enabling custom HTTP output.</param>
    </member>
    <member name="M:System.Web.HttpResponse.AddFileDependency(System.String)">
      <summary>
        <para>Adds a single file name to the collection of file names on which the current response is dependent.</para>
      </summary>
      <param name="filename"> The name of the file to add.</param>
    </member>
    <member name="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
      <summary>
        <para>Adds a group of file names to the collection of file names on which the current response is dependent.</para>
      </summary>
      <param name="filenames">The collection of files to add.</param>
    </member>
    <member name="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
      <summary>
        <para>Makes the validity of a cached item dependent 
      on another item in the cache.</para>
      </summary>
      <param name="cacheKey">The key of the item that the cached response is dependent upon.</param>
    </member>
    <member name="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
      <summary>
        <para>Makes the validity of a cached item dependent 
      on other items in the cache.</para>
      </summary>
      <param name="cacheKeys">The <see cref="T:System.Collections.ArrayList" /> containing the keys of the items the current cached response is dependent upon.</param>
    </member>
    <member name="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
      <summary>
        <para>Static method removes from the cache all cached 
      items associated with the specified path.</para>
      </summary>
      <param name="path">The physical path to the items that are removed from the cache.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Close">
      <summary>
        <para>Closes the socket connection to a client.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
      <summary>
        <para>Writes a string of binary characters to the HTTP output stream.</para>
      </summary>
      <param name="buffer"> The bytes to write to the output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Pics(System.String)">
      <summary>
        <para> Appends a <see langword="PICS-Label " /> HTTP header to the output stream.</para>
      </summary>
      <param name="value">The string to add to the <see langword="PICS-Label" /> header.</param>
    </member>
    <member name="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
      <summary>
        <para>Adds an HTTP
      header to the output stream.</para>
      </summary>
      <param name="name">The name of the HTTP header to add to the output stream.</param>
      <param name="value">The string to append to the header.</param>
    </member>
    <member name="M:System.Web.HttpResponse.ClearHeaders">
      <summary>
        <para>Clears all headers from the buffer stream.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.ClearContent">
      <summary>
        <para>Clears all content output from the buffer stream.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.Clear">
      <summary>
        <para> Clears all content output from the buffer stream.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.Flush">
      <summary>
        <para>Sends all currently buffered output to the client.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.AppendToLog(System.String)">
      <summary>
        <para>Adds custom log information to the IIS log file.</para>
      </summary>
      <param name="param">The text to add to the log file.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Redirect(System.String)">
      <summary>
        <para>Redirects a client to a new URL and specifies the new URL.</para>
      </summary>
      <param name="url">The target location.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
      <summary>
        <para> Redirects a client to a new URL. Specifies the new URL 
      and whether execution of the current page should terminate.</para>
      </summary>
      <param name="url">The target location.</param>
      <param name=" endResponse">Indicates whether execution of the current page should terminate. </param>
    </member>
    <member name="M:System.Web.HttpResponse.Write(System.String)">
      <summary>
        <para>Writes a string to an HTTP output content stream.</para>
      </summary>
      <param name="s">The string to write to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Write(System.Object)">
      <summary>
        <para>Writes an <see langword="Object" /> to an HTTP output content stream.</para>
      </summary>
      <param name="obj">The <see langword="Object" /> to write to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Write(System.Char)">
      <summary>
        <para>Writes a character to an HTTP output content stream.</para>
      </summary>
      <param name="ch">The character to write to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Writes an array of characters to an 
      HTTP output content stream.</para>
      </summary>
      <param name="buffer"> The character array to write.</param>
      <param name=" index">The position in the character array where writing starts.</param>
      <param name=" count">The number of characters to write, beginning at <paramref name="index" />.</param>
    </member>
    <member name="M:System.Web.HttpResponse.WriteFile(System.String)">
      <summary>
        <para>Writes
       the specified file directly to an HTTP content output stream.</para>
      </summary>
      <param name="filename"> The name of the file to write to the HTTP output.</param>
    </member>
    <member name="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
      <summary>
        <para> Writes the contents of the specified file into a memory block.</para>
      </summary>
      <param name="filename"> The name of the file to write into a memory block.</param>
      <param name="readIntoMemory">Indicates whether the file will be written into a memory block.</param>
    </member>
    <member name="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
      <summary>
        <para>Writes the specified file directly to an HTTP content output stream.</para>
      </summary>
      <param name=" filename">The name of the file to write to the HTTP output stream.</param>
      <param name="offset">The byte position in the file where writing will start.</param>
      <param name=" size"> The number of bytes to write to the output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
      <summary>
        <para>Writes the specified file directly to an HTTP content output stream.</para>
      </summary>
      <param name="fileHandle">The file handle of the file to write to the HTTP output stream.</param>
      <param name=" offset">The byte position in the file where writing will start.</param>
      <param name=" size">The number of bytes to write to the output stream.</param>
    </member>
    <member name="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
      <summary>
        <para> Adds an HTTP header to the output stream.</para>
        <para>
          <see langword="AddHeader" /> is provided
   for compatibility with previous versions of ASP.</para>
      </summary>
      <param name="name">The name of the HTTP header to add <paramref name="value " /> to.</param>
      <param name=" value">The string to add to the header.</param>
    </member>
    <member name="M:System.Web.HttpResponse.End">
      <summary>
        <para> Sends all currently buffered output to the client,
      stops execution of the page, and raises the <see langword="Application_EndRequest " />
      event.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
      <summary>
        <para>Adds a session ID to the virtual path and returns the 
      combined path.</para>
      </summary>
      <param name="virtualPath">The virtual path to a resource.</param>
      <returns>
        <para>The <paramref name="virtualPath" /> with the session ID appended.</para>
      </returns>
    </member>
    <member name="P:System.Web.HttpResponse.Cookies">
      <summary>
        <para> Gets the response cookie collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.StatusCode">
      <summary>
        <para>Gets or sets
       the HTTP status code of the output returned to the
       client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.StatusDescription">
      <summary>
        <para>Gets or sets the HTTP status string of the output returned to the
       client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.BufferOutput">
      <summary>
        <para>Gets or sets a value indicating whether to buffer output and send it after 
       the entire page is finished processing.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.ContentType">
      <summary>
        <para>Gets or sets the HTTP MIME
      type of the output stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Charset">
      <summary>
        <para>Gets or sets the HTTP character set of
      the output stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.ContentEncoding">
      <summary>
        <para> Gets or sets the HTTP
       character set of the output stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Cache">
      <summary>
        <para> Gets the caching policy (expiration time, privacy, vary
       clauses) of a Web page.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.IsClientConnected">
      <summary>
        <para>Gets a value
       indicating whether the client is still connected to the server.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Output">
      <summary>
        <para> Enables output of text to the outgoing HTTP response stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.OutputStream">
      <summary>
        <para>Enables binary output to the outgoing HTTP content body.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Filter">
      <summary>
        <para>Gets or sets a wrapping filter object used to modify the HTTP entity body
      before transmission.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.SuppressContent">
      <summary>
        <para> Gets or sets a value indicating whether to send HTTP content to the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Status">
      <summary>
        <para>Sets the <see langword="Status " />line that is returned to the client.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Buffer">
      <summary>
        <para> Gets or sets a value indicating whether to
      buffer output and send it after the entire response is finished processing.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.Expires">
      <summary>
        <para> Gets or sets the number of minutes before a page cached on a browser
      expires. If the user returns to the same page before it expires, the cached
      version is displayed.</para>
        <see cref="P:System.Web.HttpResponse.Expires" />
is provided for compatiblility with previous versions of ASP.
</summary>
    </member>
    <member name="P:System.Web.HttpResponse.ExpiresAbsolute">
      <summary>
        <para> Gets or sets the absolute date and time at which
      to remove cached information from
      the cache.</para>
        <para>
          <see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided
   for compatibility with previous versions of ASP.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpResponse.CacheControl">
      <summary>
        <para>Sets the <see langword="Cache-Control " />HTTP header to
<see langword="Public " />or <see langword="Private" />
.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpRuntime">
      <summary>
        <para>Provides a set of ASP.NET run-time services for the current application.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest)">
      <summary>
        <para> Drives
      all ASP.NET Web processing execution.</para>
      </summary>
      <param name="wr">An <see cref="T:System.Web.HttpWorkerRequest" /> for the current application. </param>
    </member>
    <member name="M:System.Web.HttpRuntime.Close">
      <summary>
        <para>Removes all items from the cache and shuts down the common language runtime.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.Cache">
      <summary>
        <para>Gets the <see cref="T:System.Web.Caching.Cache" /> for the current application.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.AspInstallDirectory">
      <summary>
        <para>Gets the physical path of the directory where the
      ASP.NET executable files are installed.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.ClrInstallDirectory">
      <summary>
        <para> Gets the physical path to the directory where the
      common language runtime executable files are installed.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.MachineConfigurationDirectory">
      <summary>
        <para>Gets the physical path to the directory where the
      Machine.config file for the current application is located.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.CodegenDir">
      <summary>
        <para>Gets the physical path to the directory where ASP.NET stores temporary
      files (generated sources, compiled assemblies, and so on) for the
      current application.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.AppDomainAppId">
      <summary>
        <para>Gets the application identification of the
      application domain where the <see cref="T:System.Web.HttpRuntime" /> exists.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.AppDomainAppPath">
      <summary>
        <para>Gets the physical drive path of the application
      directory for the application hosted in the current application domain.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.AppDomainAppVirtualPath">
      <summary>
        <para>Gets the virtual path of the directory that
      contains the application hosted in the current application domain.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.AppDomainId">
      <summary>
        <para>Gets the application identification of the application domain where
      the <see cref="T:System.Web.HttpRuntime" /> exists.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.BinDirectory">
      <summary>
        <para> Gets the physical path to the /bin directory for the
      current application.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpRuntime.IsOnUNCShare">
      <summary>
        <para>Gets a value that indicates whether the application is mapped to
      a universal naming convention (UNC) share.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpStaticObjectsCollection">
      <summary>
        <para>Provides a static objects collection for the <see cref="P:System.Web.HttpApplicationState.StaticObjects" />
property.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)">
      <summary>
        <para> Returns the object with the specified name from the 
      collection. This property is an alternative to the <see langword="this " /> accessor.</para>
      </summary>
      <param name="name">The case-insensitive name of the object to return.</param>
      <returns>
        <para>An object from the collection.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollection.GetEnumerator">
      <summary>
        <para>Returns a dictionary enumerator used for iterating through the key-and-value
      pairs contained in the collection.</para>
      </summary>
      <returns>
        <para>The enumerator for the collection.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies members of an <see langword="HttpStaticObjectsCollection " /> into an array.</para>
      </summary>
      <param name="array">The array to copy the <see langword="HttpStaticObjectsCollection" /> into.</param>
      <param name=" index">The member of the collection where copying starts.</param>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollection.Item(System.String)">
      <summary>
        <para> Gets the object with the specified name from the
      collection. </para>
      </summary>
      <param name="name">The case-insensitive name of the object to get.</param>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollection.Count">
      <summary>
        <para>Gets the number of objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access to the collection.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollection.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the collection is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpStaticObjectsCollection.IsSynchronized">
      <summary>
        <para>Gets a value indicating whether the collection is synchronized (that is, thread-safe).</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpServerUtility">
      <summary>
        <para> 
      Provides helper methods for processing Web requests.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpServerUtility.CreateObject(System.String)">
      <summary>
        <para> Creates a server instance of a COM object identified by the object's Programmatic Identifier (ProgID).</para>
      </summary>
      <param name="progID">The class or type of object to be instantiated.</param>
      <returns>
        <para> The new object.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
      <summary>
        <para>Creates a server instance of a COM object identified by
      the object's type.</para>
      </summary>
      <param name="type">A <see cref="T:System.Type" /> representing the object to create.</param>
      <returns>
        <para>The new object.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
      <summary>
        <para> Creates a server instance of a COM object identified by the object's class identifier (CLSID).</para>
      </summary>
      <param name="clsid">The class identifier of the object to be instantiated.</param>
      <returns>
        <para> The new object.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.MapPath(System.String)">
      <summary>
        <para>Returns the physical file path that corresponds to the specified virtual path on the Web server.</para>
      </summary>
      <param name="path">The virtual path on the Web server.</param>
      <returns>
        <para>The physical file path that corresponds to <paramref name="path" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.GetLastError">
      <summary>
        <para> Returns the previous exception.</para>
      </summary>
      <returns>
        <para>The previous exception that was thrown.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.ClearError">
      <summary>
        <para>Clears the previous exception.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpServerUtility.Execute(System.String)">
      <summary>
        <para> Executes a request to another page using the specified URL path to
      the page.</para>
      </summary>
      <param name="path">The URL path of the new request.</param>
    </member>
    <member name="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
      <summary>
        <para>Executes a request to another page using the specified 
      URL path to the page. A <see cref="T:System.IO.TextWriter" /> captures output from
      the page.</para>
      </summary>
      <param name="path">The URL path of the new request.</param>
      <param name="writer">The <see cref="T:System.IO.TextWriter" />to capture the output.</param>
    </member>
    <member name="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
      <summary>
        <para> Terminates execution of the current page and begins 
      execution of a new page using the specified URL path to the page. Specifies
      whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" />
      collections.</para>
      </summary>
      <param name="path">The URL path of the new page on the server to execute.</param>
      <param name=" preserveForm">If <see langword="true" />, the <see langword="QueryString" /> and <see langword="Form" /> collections are preserved. If <see langword="false" />, they are cleared. The default is <see langword="false" /> .</param>
    </member>
    <member name="M:System.Web.HttpServerUtility.Transfer(System.String)">
      <summary>
        <para>Terminates execution of the current page and begins 
      execution of a new page using the specified
      URL path to the page.</para>
      </summary>
      <param name="path">The URL path of the new page on the server to execute.</param>
    </member>
    <member name="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
      <summary>
        <para> Decodes an HTML-encoded string and
      returns the decoded string.</para>
      </summary>
      <param name="s">The HTML string to decode.</param>
      <returns>
        <para> The decoded text.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>
        <para> Decodes an HTML-encoded string and sends the resulting
      output to a <see cref="T:System.IO.TextWriter" />
      output
      stream.</para>
      </summary>
      <param name="s">The HTML string to decode.</param>
      <param name=" output">The <see cref="T:System.IO.TextWriter" /> output stream containing the decoded string.</param>
    </member>
    <member name="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
      <summary>
        <para> HTML-encodes a string and
      returns the encoded string.</para>
      </summary>
      <param name="s">The text string to encode.</param>
      <returns>
        <para> The HTML-encoded text.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>
        <para> HTML-encodes a string and sends the resulting output to 
      a <see cref="T:System.IO.TextWriter" />
      output stream.</para>
      </summary>
      <param name="s">The string to encode.</param>
      <param name=" output">The <see cref="T:System.IO.TextWriter" /> output stream containing the encoded string.</param>
    </member>
    <member name="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
      <summary>
        <para> URL-encodes a
      string and returns the encoded string.</para>
      </summary>
      <param name="s">The text to URL-encode.</param>
      <returns>
        <para>The URL encoded text.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
      <summary>
        <para> URL-encodes the path portion of a URL string and returns the encoded string.</para>
      </summary>
      <param name="s">The text to URL-encode.</param>
      <returns>
        <para>The URL encoded text.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
      <summary>
        <para> URL encodes
      a string and sends the resulting output to a TextWriter output stream.</para>
      </summary>
      <param name="s">The text string to encode.</param>
      <param name=" output">The <see cref="T:System.IO.TextWriter" /> output stream containing the encoded string. </param>
    </member>
    <member name="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
      <summary>
        <para> URL-decodes a string and returns the decoded string.</para>
      </summary>
      <param name="s">The text string to decode.</param>
      <returns>
        <para> The decoded
      text.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
      <summary>
        <para> Decodes an HTML string received
      in a URL and sends the resulting output to a
   <see cref="T:System.IO.TextWriter" /> output
      stream.</para>
      </summary>
      <param name="s">The HTML string to decode.</param>
      <param name=" output">The <see cref="T:System.IO.TextWriter" /> output stream containing the decoded string. </param>
    </member>
    <member name="P:System.Web.HttpServerUtility.MachineName">
      <summary>
        <para>Gets
      the server's computer name.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpServerUtility.ScriptTimeout">
      <summary>
        <para>Gets and sets the request time-out in seconds.</para>
      </summary>
    </member>
    <member name="T:System.Web.HttpUtility">
      <summary>
        <para>Provides methods for encoding and decoding URLs when processing Web
 requests.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpUtility.HtmlDecode(System.String)">
      <summary>
        <para>Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</para>
      </summary>
      <param name="s">The string to decode.</param>
      <returns>
        <para> The decoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>
        <para>Converts a string that has been HTML-encoded into a
      decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</para>
      </summary>
      <param name=" s">The string to decode.</param>
      <param name="output">A <see cref="T:System.IO.TextWriter" /> stream of output.</param>
    </member>
    <member name="M:System.Web.HttpUtility.HtmlEncode(System.String)">
      <summary>
        <para>Converts a string to an HTML-encoded string for reliable
      HTTP transmission from the Web server to a client.</para>
      </summary>
      <param name="s">The string to encode.</param>
      <returns>
        <para> The encoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>
        <para>Converts a string into an HTML-encoded string, and returns the output as a TextWriter stream of
      output.</para>
      </summary>
      <param name="s">The string to encode</param>
      <param name=" output">A <see cref="T:System.IO.TextWriter" /> output stream.</param>
    </member>
    <member name="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)">
      <summary>
        <para> Minimally converts a string to an HTML-encoded string.
      </para>
      </summary>
      <param name="s">The string to encode. </param>
      <returns>
        <para> The encoded string.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)">
      <summary>
        <para> Minimally converts a string into an HTML-encoded string and sends
      the encoded string to a <see cref="T:System.IO.TextWriter" />
      output
      stream.
      </para>
      </summary>
      <param name="s">The string to encode </param>
      <param name=" output">A <see cref="T:System.IO.TextWriter" /> output stream. </param>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncode(System.String)">
      <summary>
        <para> Encodes a URL string for reliable HTTP
      transmission from the Web server to a client.</para>
      </summary>
      <param name="str">The text to encode.</param>
      <returns>
        <para>The encoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)">
      <summary>
        <para>Encodes a URL string for reliable HTTP transmission from the Web server
      to a client, using the specified encoding method.</para>
      </summary>
      <param name="str">The text to encode.</param>
      <param name=" e">The <see cref="T:System.Text.Encoding" /> object that specifies the encoding scheme.</param>
      <returns>
        <para>The encoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncode(System.Byte[])">
      <summary>
        <para>Converts a byte array into an encoded
      URL string for reliable HTTP transmission from the Web server to a client.</para>
      </summary>
      <param name="bytes">The byte array to encode.</param>
      <returns>
        <para>The encoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Converts a byte array into a URL-encoded string for
      reliable HTTP transmission from the Web server to a client, starting at the
      specified position in the array and continuing for the specified number of bytes.</para>
      </summary>
      <param name="bytes">The byte array to encode.</param>
      <param name=" offset">The position in the byte array to begin encoding.</param>
      <param name=" count">The number of bytes to encode, starting at <paramref name="offset" />.</param>
      <returns>
        <para>The encoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)">
      <summary>
        <para>Converts a string into a URL-encoded array of bytes .</para>
      </summary>
      <param name="str">The string to encode.</param>
      <returns>
        <para>The encoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)">
      <summary>
        <para>Converts a string into a URL-encoded array of bytes, using the specified encoding method.</para>
      </summary>
      <param name="str">The string to encode</param>
      <param name=" e">The <see cref="T:System.Text.Encoding" /> that specifies the encoding method.</param>
      <returns>
        <para> The encoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])">
      <summary>
        <para>Converts an array of bytes into a
      URL-encoded array of bytes.</para>
      </summary>
      <param name="bytes">The array of bytes to encode.</param>
      <returns>
        <para>The encoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>Converts an array of bytes into a
      URL-encoded array of bytes, starting at the specified position in the
      array and continuing for the specified number of bytes.</para>
      </summary>
      <param name="bytes">The array of bytes to encode.</param>
      <param name=" offset">The position in the byte array to begin encoding.</param>
      <param name=" count">The number of bytes to encode, starting at <paramref name="offset" />.</param>
      <returns>
        <para>The encoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncodeUnicode(System.String)">
      <summary>
        <para>Converts a string into a Unicode string.</para>
      </summary>
      <param name="str">The string to convert.</param>
      <returns>
        <para>The Unicode string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)">
      <summary>
        <para>Converts a string into a Unicode array of bytes.</para>
      </summary>
      <param name="str">The string to convert.</param>
      <returns>
        <para>The Unicode byte array.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecode(System.String)">
      <summary>
        <para>Converts a string that has been encoded for
      transmission in a URL into a decoded string.</para>
      </summary>
      <param name="str">The string to decode.</param>
      <returns>
        <para>The decoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)">
      <summary>
        <para>Converts a URL-encoded string into a decoded string,
      using the specified decoding method.</para>
      </summary>
      <param name="str">The string to decode.</param>
      <param name=" e">The <see cref="T:System.Text.Encoding" /> that specifies the decoding method.</param>
      <returns>
        <para>The decoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)">
      <summary>
        <para>Converts a URL-encoded byte array into a decoded
      string, using the specified decoding method.</para>
      </summary>
      <param name="bytes">The byte array to decode.</param>
      <param name=" e">The <see cref="T:System.Text.Encoding" /> that specifies the decoding method.</param>
      <returns>
        <para>The decoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)">
      <summary>
        <para> Converts a URL-encoded byte array into a decoded
      string, using the specified decoding method, starting at the specified position
      in the array, and continuing for the specified number of bytes.</para>
      </summary>
      <param name="bytes">The array of bytes to decode.</param>
      <param name=" offset">The position in the byte to begin decoding.</param>
      <param name=" count">The number of bytes to decode starting at <paramref name="offset" />.</param>
      <param name=" e">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding method.</param>
      <returns>
        <para> The decoded string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)">
      <summary>
        <para>Converts a URL-encoded string into a decoded array of
      bytes .</para>
      </summary>
      <param name="str">The string to decode.</param>
      <returns>
        <para>The decoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)">
      <summary>
        <para>Converts a URL-encoded string into a decoded array of
      bytes, using the specified decoding method.</para>
      </summary>
      <param name="str">The string to decode.</param>
      <param name=" e">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding method.</param>
      <returns>
        <para>The decoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])">
      <summary>
        <para>Converts a URL-encoded array of bytes into a decoded array of bytes.</para>
      </summary>
      <param name="bytes">The array of bytes to decode.</param>
      <returns>
        <para>The decoded array of bytes.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Converts a URL-encoded array of bytes into a
      decoded array of bytes, starting at the specified position in the
      array and continuing for the specified number of bytes.</para>
      </summary>
      <param name="bytes">The array of bytes to decode.</param>
      <param name=" offset">The position in the byte array to begin decoding.</param>
      <param name=" count">The number of bytes to decode, starting at <paramref name="offset" />.</param>
      <returns>
        <para>The decoded array of bytes.</para>
      </returns>
    </member>
    <member name="T:System.Web.HttpWriter">
      <summary>
        <para> Provides a <see cref="T:System.IO.TextWriter" /> object that is accessed through the
   intrinsic <see cref="T:System.Web.HttpResponse" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpWriter.Close">
      <summary>
        <para> Sends all buffered output to the HTTP output stream and closes the socket connection.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpWriter.Flush">
      <summary>
        <para> Sends all buffered output to the HTTP output stream.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpWriter.Write(System.Char)">
      <summary>
        <para> Sends a single character to the HTTP output stream.</para>
      </summary>
      <param name="ch">The character to send to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Sends a stream of characters with the specified starting position
      and number of characters to the HTTP output stream. </para>
      </summary>
      <param name="buffer"> The memory buffer containing the characters to send to the HTTP output stream</param>
      <param name=" index">The buffer position of the first character to send.</param>
      <param name=" count">The number of characters to send beginning at the position specified by <paramref name="index" />. </param>
    </member>
    <member name="M:System.Web.HttpWriter.Write(System.String)">
      <summary>
        <para>Sends a string to the HTTP output stream.</para>
      </summary>
      <param name="s">The string to send to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpWriter.WriteString(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Sends a string with the specified starting position 
      and number of characters to the HTTP output stream.</para>
      </summary>
      <param name="s">The string to send to the HTTP output stream.</param>
      <param name=" index">The character position of the first byte to send.</param>
      <param name=" count">The number of characters to send, beginning at the character position specified by <paramref name="index" /> .</param>
    </member>
    <member name="M:System.Web.HttpWriter.Write(System.Object)">
      <summary>
        <para>Sends an <see langword="Object" /> to the HTTP output stream.</para>
      </summary>
      <param name="obj">The <see langword="Object" /> to send to the HTTP output stream.</param>
    </member>
    <member name="M:System.Web.HttpWriter.WriteBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Sends a stream of bytes with the specified starting
      position and number of bytes to the HTTP output stream.</para>
      </summary>
      <param name="buffer"> The memory buffer containing the bytes to send to the HTTP output stream.</param>
      <param name=" index"> The buffer position of the first byte to send.</param>
      <param name=" count">The number of bytes to send, beginning at the byte position specified by <paramref name="index" /> .</param>
    </member>
    <member name="M:System.Web.HttpWriter.WriteLine">
      <summary>
        <para>Sends a carriage return + line feed (CRLF) pair of characters to the HTTP output stream.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpWriter.Encoding">
      <summary>
        <para> Gets an <see cref="T:System.Text.Encoding" /> object for the <see cref="T:System.IO.TextWriter" /> .</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpWriter.OutputStream">
      <summary>
        <para> Gets a <see cref="T:System.IO.Stream" /> object to enable HTTP output directly from
   the <see langword="Stream " /> .</para>
      </summary>
    </member>
    <member name="T:System.Web.IHttpHandlerFactory">
      <summary>
        <para> Defines the contract that class factories
      must implement to create new <see cref="T:System.Web.IHttpHandler" />
      objects.</para>
      </summary>
    </member>
    <member name="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
      <summary>
        <para> Returns an instance of a class that implements the IHttpHandler interface.
      </para>
      </summary>
      <param name="context">An instance of the <see cref="T:System.Web.HttpContext" /> class that provides references to intrinsic server objects (For example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />)<see langword="" /> used to service HTTP requests. </param>
      <param name=" requestType">The HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) that the client uses.</param>
      <param name=" url">The <see cref="P:System.Web.HttpRequest.RawUrl" /> of the requested resource.</param>
      <param name=" pathTranslated">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath" /> to the requested resource.</param>
      <returns>
        <para>A new <see langword="IHttpHandler " /> object that processes the request.</para>
      </returns>
    </member>
    <member name="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
      <summary>
        <para> Enables a factory to reuse an existing handler
      instance.
      </para>
      </summary>
      <param name="handler">The IHttpHandler object to reuse. </param>
    </member>
    <member name="M:System.Web.IHttpMapPath.MapPath(System.String)">
      <summary>
        <para>Provides the inheriting class with a method to find a file system path 
       given another path.</para>
      </summary>
      <param name="path">The path, virtual or disk-based, for which a path is to be found.</param>
    </member>
    <member name="P:System.Web.IHttpMapPath.MachineConfigPath">
      <summary>
        <para>Provides the inheriting class with a method to find the file system path 
       to the configuration file.</para>
      </summary>
    </member>
    <member name="T:System.Web.IHttpModule">
      <summary>
        <para>Provides module initialization and disposal events to the inheriting class.</para>
      </summary>
    </member>
    <member name="M:System.Web.IHttpModule.Init(System.Web.HttpApplication)">
      <summary>
        <para> Initializes a module and prepares it to handle
      requests.</para>
      </summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see langword="Request" />, <see langword="Response" />, <see langword="Session" />, and <see langword="Server" />) used to service HTTP requests.</param>
    </member>
    <member name="M:System.Web.IHttpModule.Dispose">
      <summary>
   Disposes of the resources (other than memory) used by the
   module that implements <see langword="IHttpModule." /></summary>
    </member>
    <member name="M:System.Web.Caching.OutputCacheModule.Init(System.Web.HttpApplication)">
      <summary>
        <para>Initializes the output cache for an application.</para>
      </summary>
      <param name="app">The application to be initialized.</param>
    </member>
    <member name="M:System.Web.Caching.OutputCacheModule.Dispose">
      <summary>
        <para>Disposes of items from the output cache.</para>
      </summary>
    </member>
    <member name="M:System.Web.Caching.OutputCacheModule.OnEnter(System.Object,System.EventArgs)">
      <summary>
        <para>Raises the <see langword="Enter" /> 
 event, which searches the output cache for an item to satisfy the HTTP request. </para>
      </summary>
      <param name="source">The source of the event.</param>
      <param name=" eventArgs">An argument that contains the event data.</param>
      <returns>
        <para>The requested item from the output cache.</para>
      </returns>
    </member>
    <member name="M:System.Web.Caching.OutputCacheModule.OnLeave(System.Object,System.EventArgs)">
      <summary>
        <para>Raises the <see langword="Leave" /> event, which causes any cacheable items to 
    be put into the output cache.</para>
      </summary>
      <param name="source">The source of the event.</param>
      <param name=" eventArgs">An argument that contains the event data.</param>
    </member>
    <member name="T:System.Web.ProcessStatus">
      <summary>
        <para>Provides enumerated values that indicate the current status of a process.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessStatus.Alive">
      <summary>
        <para>Indicates that the process is running.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessStatus.ShuttingDown">
      <summary>
        <para>Indicates that the process has begun to shut down.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessStatus.ShutDown">
      <summary>
        <para> Indicates that the process has shut down normally after 
      receiving a shut down message from the IIS process.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessStatus.Terminated">
      <summary>
        <para> Indicates that the process was forced to terminate by the IIS process.</para>
      </summary>
    </member>
    <member name="T:System.Web.ProcessShutdownReason">
      <summary>
        <para> Provides enumerated values that indicate why a process has shut
      down.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.None">
      <summary>
        <para> Indicates that the process has not shut down.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.Unexpected">
      <summary>
        <para> Indicates that the process shut down unexpectedly.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.RequestsLimit">
      <summary>
        <para> Indicates that requests executed by the process exceeded the allowable
      limit.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.RequestQueueLimit">
      <summary>
        <para> Indicates that requests assigned to the process exceeded the allowable number
      in the queue.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.Timeout">
      <summary>
        <para>Indicates that the process restarted because it was alive longer than allowed.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.IdleTimeout">
      <summary>
        <para> Indicates that the process exceeded the allowable idle time.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.MemoryLimitExceeded">
      <summary>
        <para> Indicates that the process exceeded the per-process memory limit.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.PingFailed">
      <summary>
        <para>Indicates that the worker process did not respond to a ping from the IIS process.</para>
      </summary>
    </member>
    <member name="F:System.Web.ProcessShutdownReason.DeadlockSuspected">
      <summary>
        <para>Indicates that a deadlock was suspected because the response time limit was exceeded with requests in the 
      queue.</para>
      </summary>
    </member>
    <member name="T:System.Web.ProcessInfo">
      <summary>
        <para> Provides information on processes currently executing.</para>
      </summary>
    </member>
    <member name="M:System.Web.ProcessInfo.SetAll(System.DateTime,System.TimeSpan,System.Int32,System.Int32,System.Web.ProcessStatus,System.Web.ProcessShutdownReason,System.Int32)">
      <summary>
        <para>Sets internal information indicating the status of the process.</para>
      </summary>
      <param name=" startTime">A <see cref="T:System.DateTime" /> that indicates the time at which the process started.</param>
      <param name=" age">A <see cref="T:System.TimeSpan" /> that indicates the time elapsed since the process started.</param>
      <param name="processID">The ID number assigned to the process.</param>
      <param name=" requestCount">The number of start requests for the process.</param>
      <param name=" status">One of the <see cref="T:System.Web.ProcessStatus" /> values that indicates the time elapsed since tha process started.</param>
      <param name=" shutdownReason">One of the <see cref="T:System.Web.ProcessShutdownReason" /> values.</param>
      <param name=" peakMemoryUsed">The maximum memory used (in megabytes [MB]).</param>
    </member>
    <member name="M:System.Web.ProcessInfo.#ctor(System.DateTime,System.TimeSpan,System.Int32,System.Int32,System.Web.ProcessStatus,System.Web.ProcessShutdownReason,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see langword="ProcessInfo" /> class and sets internal information
 indicating the status of the process.</para>
      </summary>
      <param name="startTime">A <see cref="T:System.DateTime" /> that indicates the time at which the process started.</param>
      <param name=" age">The <see cref="T:System.TimeSpan" /> that indicates the time elapsed since the process started.</param>
      <param name=" processID">The ID number assigned to the process.</param>
      <param name=" requestCount">The number of start requests for the process.</param>
      <param name=" status">One of the <see cref="T:System.Web.ProcessStatus" /><see langword="" /> values that indicates the current status of the process.</param>
      <param name=" shutdownReason">One of the <see cref="T:System.Web.ProcessShutdownReason" /><see langword="" /> values.</param>
      <param name=" peakMemoryUsed">The maximum memory used (in bytes).</param>
    </member>
    <member name="M:System.Web.ProcessInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.ProcessInfo" /> class.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.StartTime">
      <summary>
        <para> Gets the time at which the process started.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.Age">
      <summary>
        <para>Gets the length of time the process has been running.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.ProcessID">
      <summary>
        <para>Gets the ID number assigned to the process.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.RequestCount">
      <summary>
        <para>Gets the number of start requests for the process.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.Status">
      <summary>
        <para>Gets the current status of the process.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.ShutdownReason">
      <summary>
        <para>Gets a value that indicates why the process shut down.</para>
      </summary>
    </member>
    <member name="P:System.Web.ProcessInfo.PeakMemoryUsed">
      <summary>
        <para>Gets the maximum amount of memory the process has used.</para>
      </summary>
    </member>
    <member name="T:System.Web.ProcessModelInfo">
      <summary>
        <para>Contains methods that return information about worker processes.</para>
      </summary>
    </member>
    <member name="M:System.Web.ProcessModelInfo.GetCurrentProcessInfo">
      <summary>
        <para>Returns information about the worker process executing the current request.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Web.ProcessInfo" /> that contains information about the current
   process.</para>
      </returns>
    </member>
    <member name="M:System.Web.ProcessModelInfo.GetHistory(System.Int32)">
      <summary>
        <para>Returns information about recent worker processes.</para>
      </summary>
      <param name="numRecords">The number of processes for which information is requested.</param>
      <returns>
        <para>An array of the most recent <see cref="T:System.Web.ProcessInfo" /> objects (maximum of 100).
   If the number of available objects is less than <paramref name="numrecords" />, all
   available objects are returned.</para>
      </returns>
    </member>
    <member name="M:System.Web.WebCategoryAttribute.#ctor(System.String)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.ComponentModel.CategoryAttribute" /> class.
    </para>
      </summary>
      <param name="category">
    The name of the category.
 </param>
    </member>
    <member name="M:System.Web.WebCategoryAttribute.GetLocalizedString(System.String)">
      <summary>
     This method is called the first time the category property
     is accessed.  It provides a way to lookup a localized string for
     the given category.  Classes may override this to add their
     own localized names to categories.  If a localized string is
     available for the given value, the method should return it.
     Otherwise, it should return null.
 </summary>
      <param name="value">
     The value of the string.
 </param>
    </member>
    <member name="M:System.Web.WebSysDescriptionAttribute.#ctor(System.String)">
    </member>
    <member name="P:System.Web.WebSysDescriptionAttribute.Description">
    </member>
    <member name="T:System.Web.HttpWorkerRequest">
      <summary>
        <para>This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderCacheControl">
      <summary>
        <para>The index that represents the HTTP
   <see langword="Cache-Control" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderConnection">
      <summary>
        <para> Specifies the index number for the
   <see langword="Connection" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderDate">
      <summary>
        <para>Specifies the index number for
      the <see langword="Date" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderKeepAlive">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Keep-Alive" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderPragma">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Pragma" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderTrailer">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Trailer" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderTransferEncoding">
      <summary>
        <para>Specifies the index number for
      the <see langword="Transfer-Encoding" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderUpgrade">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Upgrade" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderVia">
      <summary>
        <para>Specifies the index number for the <see langword="Via" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderWarning">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Warning" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAllow">
      <summary>
        <para>Specifies the index number for
      the <see langword="Allow" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentLength">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Content-Length" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentType">
      <summary>
        <para>Specifies the index number for
      the <see langword="Content-Type" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentEncoding">
      <summary>
        <para>Specifies the index number for the <see langword="Content-Encoding" /> HTTP 
   header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentLanguage">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Content-Language" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentLocation">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Content-Location" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentMd5">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Content-MD5" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderContentRange">
      <summary>
        <para>Specifies the index number for the 
   <see langword="Content-Range" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderExpires">
      <summary>
        <para>Specifies the index number for
      the <see langword="Expires" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderLastModified">
      <summary>
        <para>Specifies the index number for
      the <see langword="Last-Modified" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAccept">
      <summary>
        <para>Specifies the index number for the
   <see langword="Accept" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAcceptCharset">
      <summary>
        <para>Specifies the index number for
      the <see langword="Accept-Charset" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAcceptEncoding">
      <summary>
        <para>Specifies the index number for
      the <see langword="Accept-Encoding" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAcceptLanguage">
      <summary>
        <para>Specifies the index number for
      the <see langword="Accept-Language" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAuthorization">
      <summary>
        <para>Specifies the index number for
      the <see langword="Authorization" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderCookie">
      <summary>
        <para>Specifies the index number for
      the <see langword="Cookie" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderExpect">
      <summary>
        <para>Specifies the index number for
      the <see langword="Except" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderFrom">
      <summary>
        <para>Specifies the index number for
      the <see langword="From" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderHost">
      <summary>
        <para>Specifies the index number for
      the <see langword="Host" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderIfMatch">
      <summary>
        <para>Specifies the index number for
      the <see langword="If-Match" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderIfModifiedSince">
      <summary>
        <para>Specifies the index number for
      the <see langword="If-Modified-Since" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderIfNoneMatch">
      <summary>
        <para>Specifies the index number for
      the <see langword="If-None-Match" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderIfRange">
      <summary>
        <para>Specifies the index number for
      the <see langword="If-Range" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderIfUnmodifiedSince">
      <summary>
        <para>Specifies the index number for
      the <see langword="If-Unmodified-Since" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderMaxForwards">
      <summary>
        <para>Specifies the index number for
      the <see langword="Max-Forwards" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderProxyAuthorization">
      <summary>
        <para>Specifies the index number for
      the <see langword="Proxy-Authorization" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderReferer">
      <summary>
        <para>Specifies the index number for
      the <see langword="Referer" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderRange">
      <summary>
        <para>Specifies the index number for
      the <see langword="Range" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderTe">
      <summary>
        <para>Specifies the index number for
      the <see langword="TE" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderUserAgent">
      <summary>
        <para>Specifies the index number for the <see langword="User-Agent " />HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.RequestHeaderMaximum">
      <summary>
        <para>Specifies the index number for
      the <see langword="Maximum" /> HTTP request header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAcceptRanges">
      <summary>
        <para>Specifies the index number for
      the <see langword="Accept-Ranges" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderAge">
      <summary>
        <para>Specifies the index number for
      the <see langword="Age" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderEtag">
      <summary>
        <para>Specifies the index number for
      the <see langword="ETag" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderLocation">
      <summary>
        <para>Specifies the index number for
      the <see langword="Location" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderProxyAuthenticate">
      <summary>
        <para>Specifies the index number for
      the <see langword="Proxy-Authenticate " />HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderRetryAfter">
      <summary>
        <para>Specifies the index number for
      the <see langword="Retry-After" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderServer">
      <summary>
        <para>Specifies the index number for
      the <see langword="Server" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderSetCookie">
      <summary>
        <para>Specifies the index number for
      the <see langword="Set-Cookie " />HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderVary">
      <summary>
        <para>Specifies the index number for
      the <see langword="Vary" /> HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.HeaderWwwAuthenticate">
      <summary>
        <para>Specifies the index number for
      the <see langword="WWW-Authenticate " />HTTP header.</para>
      </summary>
    </member>
    <member name="F:System.Web.HttpWorkerRequest.ResponseHeaderMaximum">
      <summary>
        <para>Specifies the index number for
      the <see langword="Maximum" /> HTTP response header.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetUriPath">
      <summary>
        <para> Returns the virtual path to the requested URI.</para>
      </summary>
      <returns>
        <para> The path to the requested URI.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetQueryString">
      <summary>
        <para> Returns the query string specified in the request URL.</para>
      </summary>
      <returns>
        <para> The request query string.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetRawUrl">
      <summary>
        <para> Returns the URL path contained in the request header with the query string appended.</para>
      </summary>
      <returns>
        <para>The raw URL path of the request header.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetHttpVerbName">
      <summary>
        <para> Returns the specified member of the request header.</para>
      </summary>
      <returns>
        <para>The HTTP verb returned in the request header.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetHttpVersion">
      <summary>
        <para>Provides access to the HTTP version of the request (for example, "HTTP/1.1").</para>
      </summary>
      <returns>
        <para>The HTTP version returned in the request header.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetRemoteAddress">
      <summary>
        <para> Provides access to the specified member of the request header.</para>
      </summary>
      <returns>
        <para> The client's IP address.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetRemotePort">
      <summary>
        <para> Provides access to the specified member of the request header.</para>
      </summary>
      <returns>
        <para> The client's HTTP port number.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetLocalAddress">
      <summary>
        <para>Provides access to the specified member of the request header.</para>
      </summary>
      <returns>
        <para>The server IP address returned in the request header.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetLocalPort">
      <summary>
        <para>Provides access to the specified member of the request header.</para>
      </summary>
      <returns>
        <para>The server port number returned in the request header.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetQueryStringRawBytes">
      <summary>
        <para>When overridden in a derived class, returns the response query string as an array of bytes.</para>
      </summary>
      <returns>
        <para>An array of bytes containing the response.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetRemoteName">
      <summary>
        <para>When overridden in a derived class, returns the name of the client computer.</para>
      </summary>
      <returns>
        <para>The name of the client computer.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetServerName">
      <summary>
        <para>When overridden in a derived class, returns the name of the local server.</para>
      </summary>
      <returns>
        <para>The name of the local server.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetUserToken">
      <summary>
        <para>When overridden in a derived class, returns the client's impersonation token.</para>
      </summary>
      <returns>
        <para>A value representing the client's impersonation token. The default is 0.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.IsSecure">
      <summary>
        <para> Returns a value indicating whether the connection is secure (using SSL).</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if the connection is secure; otherwise,
<see langword="false" />. The default is <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetProtocol">
      <summary>
        <para>When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).</para>
      </summary>
      <returns>
        <para>HTTPS if the <see cref="M:System.Web.HttpWorkerRequest.IsSecure" /> method is <see langword="true" />, otherwise HTTP.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetFilePath">
      <summary>
        <para>When overridden in a derived class, returns the physical path to the requested URI.</para>
      </summary>
      <returns>
        <para>The path to the requested URI.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetFilePathTranslated">
      <summary>
        <para> Returns the physical file path to the requested URI (and translates it from virtual
      path to physical path: for example, "/proj1/page.aspx" to "c:\dir\page.aspx") </para>
      </summary>
      <returns>
        <para>The translated physical file path to the requested URI.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetPathInfo">
      <summary>
        <para> Returns additional path information for a resource with 
      a URL extension. That is, for the path /virdir/page.html/tail, the
   <see langword="GetPathInfo" />
   
   value is /tail. </para>
      </summary>
      <returns>
        <para>Additional path information for a resource.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetAppPath">
      <summary>
        <para> Returns the virtual path to the
      currently executing server application.</para>
      </summary>
      <returns>
        <para>The virtual path of the current application.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetAppPathTranslated">
      <summary>
        <para> Returns the UNC-translated path to
      the currently executing server application.</para>
      </summary>
      <returns>
        <para> The physical path of the current application.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody">
      <summary>
        <para>Returns the portion of the HTTP request body that has already been read.</para>
      </summary>
      <returns>
        <para>The portion of the request body that has been read.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded">
      <summary>
        <para>Returns a value indicating whether all request data 
      is available and no further reads from the client are required.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if all request data is available; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.ReadEntityBody(System.Byte[],System.Int32)">
      <summary>
        <para>Reads request data from the client (when not preloaded).</para>
      </summary>
      <param name="buffer">The byte array to read data into.</param>
      <param name=" size">The maximum number of bytes to read.</param>
      <returns>
        <para>The number of bytes read.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)">
      <summary>
        <para>Returns the standard HTTP request header that
      corresponds to the specified index.</para>
      </summary>
      <param name="index">The index of the header. For example, the <see cref="F:System.Web.HttpWorkerRequest.HeaderAllow" /> field. </param>
      <returns>
        <para>The HTTP request header.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeader(System.String)">
      <summary>
        <para>Returns a nonstandard HTTP request header value.</para>
      </summary>
      <param name="name">The header name.</param>
      <returns>
        <para>The header value.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetUnknownRequestHeaders">
      <summary>
        <para>Get all nonstandard HTTP header name-value pairs.</para>
      </summary>
      <returns>
        <para>An array of header name-value pairs.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetServerVariable(System.String)">
      <summary>
        <para> Returns a single server variable from
      a dictionary of server variables associated with the request.</para>
      </summary>
      <param name="name">The name of the requested server variable.</param>
      <returns>
        <para>The requested server variable.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.MapPath(System.String)">
      <summary>
        <para>Returns the physical path corresponding to the specified virtual path.</para>
      </summary>
      <param name="virtualPath">The virtual path.</param>
      <returns>
        <para>The physical path that corresponds to the virtual path
      specified in the <paramref name="virtualPath" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendStatus(System.Int32,System.String)">
      <summary>
        <para>Specifies the HTTP status code and status description of
      the response; for example SendStatus(200, "Ok").</para>
      </summary>
      <param name="statusCode">The status code to send</param>
      <param name=" statusDescription">The status description to send.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)">
      <summary>
        <para>Adds a standard HTTP header to the response.</para>
      </summary>
      <param name="index">The header index. For example, <see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" />. </param>
      <param name=" value">The value of the header.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendUnknownResponseHeader(System.String,System.String)">
      <summary>
        <para>Adds a nonstandard HTTP header to the response.</para>
      </summary>
      <param name="name">The name of the header to send.</param>
      <param name=" value">The value of the header.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.Byte[],System.Int32)">
      <summary>
        <para>Adds the specified number of bytes from a byte array to the response.</para>
      </summary>
      <param name="data">The byte array to send.</param>
      <param name=" length">The number of bytes to send, starting at the first byte.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendResponseFromMemory(System.IntPtr,System.Int32)">
      <summary>
        <para>Adds the specified number of bytes from a block of memory 
      to the response.</para>
      </summary>
      <param name=" data">An unmanaged pointer to the block of memory.</param>
      <param name="length">The number of bytes to send.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.String,System.Int64,System.Int64)">
      <summary>
        <para> Adds the contents of the specified file to the response
      and specifies the starting position in the file and the number of bytes to send.</para>
      </summary>
      <param name="filename">The name of the file to send.</param>
      <param name=" offset">The starting position in the file.</param>
      <param name=" length">The number of bytes to send.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendResponseFromFile(System.IntPtr,System.Int64,System.Int64)">
      <summary>
        <para> Adds the contents of the specified file to the response and
      specifies the starting position in the file and the number of bytes to send.</para>
      </summary>
      <param name="handle">The handle of the file to send.</param>
      <param name=" offset">The starting position in the file.</param>
      <param name=" length">The number of bytes to send.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.FlushResponse(System.Boolean)">
      <summary>
        <para>Sends all pending response data to the client.</para>
      </summary>
      <param name="finalFlush">
        <see langword="true" /> if this is the last time response data will be flushed; otherwise, <see langword="false" /> . </param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.EndOfRequest">
      <summary>
        <para>Used by the runtime to notify the <see cref="T:System.Web.HttpWorkerRequest" /> 
that request processing for the current request is complete.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SetEndOfSendNotification(System.Web.HttpWorkerRequest.EndOfSendNotification,System.Object)">
      <summary>
        <para> Registers for an optional notification when all
      the response data is sent.</para>
      </summary>
      <param name="callback">The notification callback that is called when all data is sent (out-of-band).</param>
      <param name=" extraData">An additional parameter to the callback.</param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.SendCalculatedContentLength(System.Int32)">
      <summary>
        <para>Adds a <see langword="Content-Length" /> HTTP
   header to the response.</para>
      </summary>
      <param name="contentLength">The length of the response, in bytes. </param>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.HeadersSent">
      <summary>
        <para>Returns a value indicating whether HTTP response headers 
      have been sent to the client for the current request.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if HTTP response headers have been sent to the client; 
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.IsClientConnected">
      <summary>
        <para>Returns a value indicating whether the client 
      connection is still active.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the client connection is still active; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.CloseConnection">
      <summary>
        <para>Terminates the connection with the client.</para>
      </summary>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.HasEntityBody">
      <summary>
        <para>Returns a value indicating whether the 
      request contains body data.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the request contains body data; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)">
      <summary>
        <para>Returns a string that describes the name of the specified
      HTTP status code.</para>
      </summary>
      <param name="code">The HTTP status code.</param>
      <returns>
        <para>The status description. For example,
   <see langword="GetStatusDescription" /> (404) returns “Not
      Found”.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderIndex(System.String)">
      <summary>
        <para>Returns the index number of the specified HTTP request header.</para>
      </summary>
      <param name="header">The name of the header.</param>
      <returns>
        <para>The index number of the HTTP request 
      header specified in the <paramref name="header" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetKnownRequestHeaderName(System.Int32)">
      <summary>
        <para>Returns the name of the specified HTTP request header.</para>
      </summary>
      <param name="index">The index number of the header.</param>
      <returns>
        <para>The name of the HTTP request header specified in the 
   <paramref name="index" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderIndex(System.String)">
      <summary>
        <para>Returns the index number of the specified HTTP response header.</para>
      </summary>
      <param name="header">The name of the HTTP header.</param>
      <returns>
        <para>The index number of the HTTP response header specified
      in the <paramref name="header" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Web.HttpWorkerRequest.GetKnownResponseHeaderName(System.Int32)">
      <summary>
        <para>Returns the name of the specified HTTP response header.</para>
      </summary>
      <param name="index">The index number of the header.</param>
      <returns>
        <para>The name of the HTTP response header specified in
      the <paramref name="index" /> parameter.</para>
      </returns>
    </member>
    <member name="P:System.Web.HttpWorkerRequest.MachineConfigPath">
      <summary>
        <para>Gets the full physical path to the Machine.config file.</para>
      </summary>
    </member>
    <member name="P:System.Web.HttpWorkerRequest.MachineInstallDirectory">
      <summary>
        <para> Gets the physical path to the directory where the
      ASP.NET binaries are installed.</para>
      </summary>
    </member>
    <member name="T:System.Web.Caching.CacheItemRemovedCallback">
      <summary>
        <para> Defines a callback method for notifying
      applications when a cached item is removed from the <see cref="T:System.Web.Caching.Cache" />
      .</para>
      </summary>
      <param name="key">The index location for the item removed from the cache.</param>
      <param name="value">The <see cref="T:System.Object" /> item removed from the cache.</param>
      <param name="reason">The reason the item was removed from the cache, as specified by the <see cref="T:System.Web.Caching.CacheItemRemovedReason" /> enumeration.</param>
    </member>
    <member name="T:System.Web.Caching.CacheItemPriority">
      <summary>
        <para> Specifies the relative priority of items stored in the <see cref="T:System.Web.Caching.Cache" /> .</para>
      <