table, the individual function for the instruction is called.  For instructions that have variable list, the function recursively calls the parser again at the end.  The following declaration shows the structure of the argument data. #define DATATYPE_UNKNOWN        0 #define DATATYPE_NAME           1 #define DATATYPE_NUM            2 #define DATATYPE_BUFFER         3 #define DATATYPE_STRING         4 #define DATATYPE_PACKAGE        5 typedef struct _amldata     ULONG  dwDataType;     ULONG  dwDataLen;     union     {         PUCHAR pbDataBuff;         ULONG  dwData;     } Data; } AMLDATA, *PAMLDATA; All data types except DATATYPE_NUM use the field Data.pbDataBuff to point to buffer to hold the argument data and dwDataLen indicates the length of the buffer.  For the data type DATATYPE_NUM, the field Data.dwData is used to store numeric data up to the size of four bytes and the dwDataLen indicates the number of bytes used. Self-contain and modular component with simple interface The interpreter exports only six APIs.  The following lists the detail of each one: AMLIEvalNameSpaceObject NTSTATUS AMLIEvalNameSpaceObject(PNSOBJ pns, PAMLDATA pData)  Evaluate a name space object. This function evaluate a given object.  If the given object is a control method, it will execute it.  If the given object is a data object, the data value is returned in a given buffer. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code. Parameters Pointer to the object to be evaluated. pData Pointer to the data object to hold the result of evaluation.  The type of data returned depends on the type of object evaluated.  pData->dwDataLen must be initialized to zero unless there is a buffer attached to pData->pbDataBuff in which case pData->dwDataLen must be initialize to indicate the size of the buffer.  This procedure will modify pData->dwDataLen to reflect the real data length copied to the buffer.  Note that if the expected data is of DATATYPE_NUM, no buffer is required.  Instead, pData->dwDataLen is initialized to zero.  Then this procedure will return the number in pData->Data.dwData and update the pData->dwDataLen to show the data size (1 for BYTE, 2 for WORD, 4 for DWORD). If the name space object is of type NSTYPE_NAME, it is treated as DATATYPE_NUM with a length of 4. AMLIGetNameSpaceObject NTSTATUS AMLIGetNameSpaceObject(PCHAR pszObjPath, PPNSOBJ ppns)  Find an object in the ACPI name space. This function accepts an absolute object path as well as a relative object path in the form of an ASCIIZ string. It will search through the name space in the appropriate scope for the given object path and returns the object pointer when it is found. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code. Parameters pszObjPath Pointer to an ASCIIZ string specifying the object path. Pointer to a variable to hold the object point. AMLIInitialize NTSTATUS AMLIInitialize(void)  AML Interpreter initialization. This function must be called before any AML interpreter functions can be called.  This function will typically allocate and initialize global resources, create the ACPI name space etc. It is typically called in the initialization of the ACPI core driver. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code. AMLILoadDDB NTSTATUS AMLILoadDDB(PDSDT pDSDT, PPDDBOBJ ppddbObj)  Load Differentiated Definition Block. This function loads and parses the given Differentiated System Description Table as well as any dynamic Differentiated Definition Block.  It will parse the DDB and populate the ACPI name space accordingly. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code if encountering parse error. Parameters pDSDT Pointer to a DSDT block. ppddbObj Pointer to the variable that will receive the DDBOBJ pointer. Developer Notes The whole DDB will be unloaded even though the parse error occurs towards the end of the DDB block.  In other words, there will not be partial DDB loaded. AMLITerminate VOID AMLITerminate(void)  AML Interpreter termination. This function is called to clean up all the global resources used by the AML interpreter. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value None. AMLIUnloadDDB VOID AMLIUnloadDDB(PDDBOBJ pddbObj)  Unload the Differentiated Definition Block. This function is called to unload the given dynamic DDB object and clean it out of the name space.  Note that this function does not differentiate between a DSDT from a dynamic DDB, so it is the caller's responsibility to not freeing the DSDT accidentally. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value None. Parameters pddbObj Pointer to the DDB object returned by AMLILoadDDB. Built-in AML debugger The built-in debugger is used in conjunction with the kernel debugger.  Basically, the  ..acpi  command will bring you into the ACPI debugger where a menu of subcommands are displayed.  One of the subcommand will be invoking the AML debugger at which point an AML debugger prompt will appear and debugger commands are accepted. The proposed debugger commands are list below: command to unassemble AML instructions and display them in ASL form. command to dump the content of the ACPI name space. command to alter the AML instruction pointer. command to single step AML instructions. command to evaluate and print the value of any name space objects. command to set/clear/list break points on any AML instruction. Robust with intensive error checking and reporting In the debug version, all parse errors are reported to the debug terminal.  In the retail version, error code will be reported to the core driver.  For HCT and other testing purposes, the interpreter also implements an error reporting system where a client can call an exported API to create an error handle so that when parse error occurs, the interpreter will dump information into the error handle and returns an error.  Then, the client can call another API to retrieve the error information to be processed or displayed. The error reporting APIs are: AMLICreateErrorHandle AMLIDestroyErrorHandle AMLIGetErrorInfo In most cases, the error information will probably be a string describing the error.   This document describes the design architecture of the AML interpreter. The AML Interpreter consists of the following components: Exported AMLI APIs (amliapi.c): Although the interpreter is not a simple component, it has a very small set of exported APIs.  These APIs are primarily for the core driver.  It includes Normal Heading 1 Heading 2 Heading 3 Default Paragraph Font Term1  functions to initialize the Interpreter component, load/unload description blocks and access to the ACPI Name Space.  Later on, there may also be APIs (i.e. hooks) for the HCTs which allow the test component to control the level of parse error checking and reporting. Parser Common Code (parseaml.c): This component contains parser code common to all AML instructions.  For example, it contains the main parser entry point (a function to parse an AML instruction including all nested levels).  It also contains a generic argument data parser which parses and assembles all different argument data types for the AML instruction before it is executed. Named Objects Parser Code (namedobj.c): This component parses all  Named Object Creator  instructions and creates corresponding name space objects.   Named Object Creator  instructions includes Alias, Name, Scope, Device, Field, IndexField, Method, Mutex, OperationRegion, PowerResource, Processor, Thermal etc. String utility functions (string.c): Since the AML Interpreter is part of the ACPI core driver which is a WDM driver, it cannot make any calls to VxD helper functions (i.e. VMM calls).  The run-time string functions provided by NTKERN is also very limited.  Because of all these and the fact that the Interpreter does very intensive string manipulation during parsing, it becomes apparent that a generic string function library is needed.  The string library includes fundamental string functions such as StrLen, StrCpy, StrCat, StrCmp, StrChr and StrRChr. List Management functions (list.c): Although NT provides some list management macros, they are not suitable to manage the Name Space Object structure because it involves two doubly-linked list in the same node.  This component provides the suitable list management functions including: ListRemoveEntry, ListRemoveHead, ListRemoveTail, ListInsertHead, ListInsertTail. Name Space Manipulation functions (acpins.c): This component   (e.g. AMLIInitialize, AMLITerminate, AMLILoadDDB, AMLIUnloadDDB, AMLIGetNameSpaceObject, AMLIEvalNameSpaceObject) and macros to navigate in the ACPI Name S cpace (e.g. NSGETPARENT, NSGETFIRSTCHILD, NSGETPREVSIBLING, NSGETNEXTSIBLING) Virtual Machine Operators and Function Operator functions (amlop.c): This component parses and executes all the Virtual Machine Operator and Function Operator instructions such as Acquire, Add, And, Break, Concatenate, CondRefStore, CreateField, Debug, Decrement, Divide, Equal, Fatal, FromBCD, If, IfElse, Increment, Index, Land, Lequal, Lgreater, LGreaterEqual, Lless, LLessEqual, LNot, LNotEqual, Load, Lor, Match, Multiply, Nand, Nor, Not, Notify, ObjectType, One, Ones, Or, Release, ReturnValue, Revision, ShiftLeft, ShiftRight, Signal, Sleep, Stall, Store, StoreRef, Subtract, ToBCD, Unload, Wait, While, Xor.provides all the Name Space object manipulation functions including CreateNameSpaceObject and FreeNameSpaceObjects.  Note that this component does not explicitly provide Name Space navigation functions.  Instead, the Name Space navigation functions are provided as a set of macros as part of the exported Interpreter APIs.Exported Data Structure Descriptions Generic Circular Doubly-Linked List (LIST) typedef struct _List     struct _List *plistPrev;     struct _List *plistNext; } LIST, *PLIST, **PPLIST; This structure is used in various structures that require double link lists.  For example, it is used in both the DDBOBJ structure as well as the Name Space object structure which will be described more fully in their respective sections. Device Description Block Object (DDBOBJ) #define SIG_DDBOBJ      0x4f424444      //"DDBO" typedef struct _DDBObj     LIST  list;                 //NOTE: list must be first in structure     ULONG dwSig;     PDSDT pDSDT; } DDBOBJ, *PDDBOBJ, **PPDDBOBJ; Whenever AMLILoadDDB is called with a DSDT, a new DDBOBJ structure is created.  The purpose of the DDBOBJ is to track ownership of Name Space objects so that if a dynamic DDB is unloaded, all Name Space objects owned by the DDB are destroyed as well.  All DDB objects are linked in a doubly-link list.  A new DDB is always appended at the tail of the list. Name Space Object (NSOBJ) #define SIG_NSOBJ       0x5f534e5f      //"_NS_" typedef struct _NSObj     LIST   list;                //NOTE: list must be first in structure     struct _NSObj *pnsParent;     struct _NSObj *pnsFirstChild;     ULONG   dwSig;     PDDBOBJ pddbOwner;     ULONG   dwNameSeg;     OBJDATA ObjData; } NSOBJ, *PNSOBJ, **PPNSOBJ; The ACPI Name Space is a hierarchical space of objects (i.e. a tree of objects).  Each object must have a  parent (except for the   object) and optionally one or more children.  Since the number of children of an object can vary, all children of an object are linked into a circular double-link list.  The parent object only points to the first child object in the list.  A Name Space object can be of various types.  The ObjData field in the structure determines the type of object and the associated data.  More detail description of the data types is in the following section. Name Space Object Data (OBJDATA) #define DATATYPE_UNKNOWN        0 #define DATATYPE_UNUSABLE       1       //??? #define DATATYPE_INTEGER        2 #define DATATYPE_BUFFER         3 #define DATATYPE_STRING         4 #define DATATYPE_FIELD          5       //??? #define DATATYPE_VIRTUAL        6       //???Operation Region??? #define DATATYPE_DATA           7 #define DATATYPE_CODE           8       //??? #define DATATYPE_METHOD         9 #define DATATYPE_DEVICE         10      //no data??? #define DATATYPE_POWERRES       11 #define DATATYPE_THERMALZONE    12 #define DATATYPE_ALIAS          100 typedef struct _ObjData     ULONG  dwDataType;     ULONG  dwEvalResult;     ULONG  dwDataLen;     union     {         ULONG  dwData;         PUCHAR pbData;     } Data; } OBJDATA, *POBJDATA; As mentioned in the above section, a Name Space object can be one of several types.  The data types are defined above.  These types are loosely related to the type information returned by the AML instruction  ObjectType .  Some of the object types require buffer of various lengths to hold the associated data.  Therefore, an indirect data pointer (i.e. Data.pbData) is used to point to the extra data buffer with its length stored in dwDataLen.  Some of the data types such as  Integer  or object data structures which have a length of four or less can store their data directly into Data.dwData and have no associated data buffer.  In these cases, dwDataLen is always zero indicating no associated buffer.  Also, some of the data types can be evaluated (e.g. a control method).  The result of such evaluation is stored in the dwEvalResult field. Various Named Object Structures These are the named objects defined in the AML language in the DDB.  After the corresponding object definition instruction is parsed, the associated attributes of the object is stored in these structures.  Note that if the object structure has a length of four or less, the entire object structure is stored in the Data.dwData field of the OBJDATA structure directly so that no buffer allocation is necessary. typedef struct _FieldObj     UCHAR bFieldFlags;     UCHAR bStartBitPos;     UCHAR bNumBits; } FIELDOBJ, *PFIELDOBJ; The Field objects describe various bit fields of the parent object.  Each field describes the starting bit position and the bit length relative to the parent object. typedef struct _IndexFieldObj     USHORT wLen;     PNSOBJ pnsIndex;     PNSOBJ pnsData; } INDEXFIELDOBJ, *PINDEXFIELDOBJ; The Index Field object describes a data object which is accessed via Index/Data style of reference.  It describes the length of the indexed object block, the Name Space Objects of the Index and Data access ports. typedef struct _MethodObj     UCHAR bMethodFlags;     UCHAR abCodeBuff[ANYSIZE_ARRAY]; } METHODOBJ, *PMETHODOBJ; The Method object contains the code for the control method as well as the bMethodFlags which specifies information such as the number of arguments to the control method. typedef struct _MutexObj     UCHAR bLevel; } MUTEXOBJ, *PMUTEXOBJ; The Mutex object describes the level in the bLevel field. typedef struct _OpRegionObj     UCHAR bRegionSpace;     ULONG dwOffset;     ULONG dwLen; } OPREGIONOBJ, *POPREGIONOBJ; The Operation Region object describes an operation region in a given region space (e.g. System Memory, System I/O, PCI Config., Embedded Control) with the given offset in the region space and the length of the region. typedef struct _PowerResObj     NAMESEG dwSystemLevel;     UCHAR   bResOrder; } POWERRES, *PPOWERRES; The Power Resource object describes the power resource and its associated system level (e.g. S0, S1, S2, S3 etc.) and the resource order. typedef struct _ProcessorObj     UCHAR bProcessorFlags;     UCHAR bApicID;     ULONG dwPBlk;     ULONG dwPBlkLen; } PROCESSOROBJ, *PPROCESSOROBJ; The Processor object describes the processor with the associated processor flags, Apic ID, PBlk and PBlk length. typedef struct _ThermalObj     UCHAR bTBD;    //??? } THERMALOBJ, *PTHERMAL; TBD in v0.72 spec. Internal Data Structure Descriptions AML Term Table Entry (AMLTERM) // pszArgTypes characters #define ARGTYPE_NAME            'N'             //namestr #define ARGTYPE_DATA            'D' #define ARGTYPE_KEYWORD         'K' // dwfOpcode flags #define OF_VARIABLE_LIST        0x00000001 typedef NTSTATUS (LOCAL *PFNOP)(PDDBOBJ, PUCHAR *, PUCHAR, POBJDATA); typedef struct _amlterm     ULONG dwOpcode;     PCHAR pszArgTypes;     ULONG dwfOpcode;     PFNOP pfnOpcode; } AMLTERM, *PAMLTERM; The AMLTERM structure is used to describe the information about an AML instruction.  The dwOpcode field contains the opcode for the instruction.  The pszArgTypes field contains a string of characters each of which indicates the type of expected argument.  Therefore, the number of arguments for the instruction is implicitly indicated by the string length.  For example, the  Alias  instruction needs two arguments: the one must be a  namestr  and the second one is   and the pszArgTypes string is  .  This string is used by the generic argument parser to parse and assemble various argument types for the instruction.  The dwfOpcode field contains flags for the instruction.  For example, OF_VARIABLE_LIST indicates whether the instruction has a variable list part.  Finally, the pfnOpcode  field contains the function pointer to handle the instruction. Opcode Map Table Entry (OPCODEMAP) typedef struct _opcodemap     ULONG    dwOpcode;     PAMLTERM pterm; } OPCODEMAP, *POPCODEMAP; For fast first level parsing, a lookup table of 256 entries of AMLTERM pointer is built, one for each possible opcode.  For invalid opcodes in the table, a NULL pointer is stored.  For those two-byte instructions (i.e. the ones with a prefix code of 0x5b), the number of instructions in this category is just 20+.  It may be too wasteful to build another 256-entry table.  Instead, a table of 20+ entries of OPCODEMAP is built.  When a prefixed instruction is encountered, a linear search in this table is required to locate the corresponding AMLTERM entry. Detailed Component Descriptions AMLIEvalNameSpaceObject NTSTATUS AMLIEvalNameSpaceObject(PNSOBJ pns, POBJDATA pdata)  Evaluate a name space object. This function evaluate a given object.  If the given object is a control method, it will execute it.  If the given object is a data object, the data value is returned in a given buffer. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code. Parameters Pointer to the object to be evaluated. pdata Pointer to the data object to hold the result of evaluation.  The type of data returned depends on the type of object evaluated.  pdata->dwDataLen must be initialized to zero unless there is a buffer attached to pdata->pbDataBuff in which case pdata->dwDataLen must be initialize to indicate the size of the buffer.  This procedure will modify pdata->dwDataLen to reflect the real data length copied to the buffer.  Note that if the expected data is of OBJTYPE_INTEGER, no buffer is required. Instead, pdata->dwDataLen is initialized to zero.  Then this procedure will return the integer in pdata->dwDataValue and update the pdata->dwDataLen to show the data size (1 for BYTE, 2 for WORD, 4 for DWORD). AMLIGetNameSpaceObject NTSTATUS AMLIGetNameSpaceObject(PCHAR pszObjPath, PPNSOBJ ppns)  Find an object in the ACPI name space. This function accepts an absolute object path as well as a relative object path in the form of an ASCIIZ string. It will search through the name space in the appropriate scope for the given object path and returns the object pointer when it is found. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code. Parameters pszObjPath Pointer to an ASCIIZ string specifying the object path. Pointer to a variable to hold the object point. AMLIInitialize NTSTATUS AMLIInitialize(void)  AML Interpreter initialization. This function must be called before any AML interpreter functions can be called.  This function will typically allocate and initialize global resources, create the ACPI name space etc. It is typically called in the initialization of the ACPI core driver. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code. AMLILoadDDB NTSTATUS AMLILoadDDB(PDSDT pDSDT, PPDDBOBJ ppddbObj)  Load Differentiated Definition Block. This function loads and parses the given Differentiated System Description Table as well as any dynamic Differentiated Definition Block.  It will parse the DDB and populate the ACPI name space accordingly. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value SUCCESS - Returns STATUS_SUCCESS. FAILURE - Returns NT status code if encountering parse error. Parameters pDSDT Pointer to a DSDT block. ppddbObj Pointer to the variable that will receive the DDBOBJ pointer. Developer Notes The whole DDB will be unloaded even though the parse error occurs towards the end of the DDB block.  In other words, there will not be partial DDB loaded. AMLITerminate VOID AMLITerminate(void)  AML Interpreter termination. This function is called to clean up all the global resources used by the AML interpreter. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value None. AMLIUnloadDDB VOID AMLIUnloadDDB(PDDBOBJ pddbObj)  Unload the Differentiated Definition Block. This function is called to unload the given dynamic DDB object and clean it out of the name space.  Note that this function does not differentiate between a DSDT from a dynamic DDB, so it is the caller's responsibility to not freeing the DSDT accidentally. Defined in: F:/P/PNP/VXD/ACPI/AMLI/AMLIAPI.C Return Value None. Parameters pddbObj Pointer to the DDB object returned by AMLILoadDDB. NTSTATUS LOCAL ParseAML(PDDBOBJ pddb, PUCHAR *ppbOp, BOOL fExOp, POBJDATA pArgs) This function parses and executes one complete AML instruction.  This means that it will parse and execute all the nested instructions as well.  pddb is to indicate the DDB owner of the instruction so that any new Name Space objects created as a result of the AML instruction can also be associated with the same owner.  ppbOp is the pointer to the  instruction pointer .  After the AML instruction is executed, *ppbOp will be updated to point to the next instruction.  fExOp indicates if an instruction prefix byte has been encountered so that the Extended Opcode Map should be used to look up the instruction.  pArgs points to arguments array provided by the caller so that this function can be re-entered.  The argument array is empty storage space that this function will fill in by calling the generic argument parser.  This function first look up the opcode pointed by *ppbOp in appropriate opcode table to find the corresponding AMLTERM structure.  It then passes the updated instruction pointer and the AMLTERM pointer to the generic argument parser which parses the arguments and fills the argument array.  Then it calls the function indicated in the AMLTERM structure to parse and execute the instruction passing along the argument array and other information.  The parse function for the instruction may recursively call this function if nested instructions are possible for that instruction. NTSTATUS LOCAL ParseAMLEx(PDDBOBJ pddb, PUCHAR *ppbOp, PUCHAR pbOpNext, POBJDATA pArgs) This function is the parse function for the extended instruction prefix opcode.  It is very similar to ParseAML except that it is called when an extended opcode prefix has been encountered.  It will call ParseAML with the fExOp argument set to TRUE. PAMLTERM LOCAL FindOpcodeTerm(ULONG dwOp, POPCODEMAP pOpTable) This function is called to look up the extended prefix opcode from a given opcode map table.  If the opcode is found, the corresponding AMLTERM pointer is returned, otherwise NULL is returned. NTSTATUS LOCAL ParseArgs(PUCHAR *ppbOp, PAMLTERM pterm, POBJDATA pArgs) This function determines the number of arguments by computing the string length of the pszArgTypes field in the given pterm.  Then for each argument with its type, the appropriate argument parse function is called. The functions in this module are the parse functions for the Named Object Creator instructions.  The functions have the following format: NTSTATUS LOCAL (*PFNOP)(PDDBOBJ pddb, PUCHAR *ppbOp, PUCHAR pbOpNext, POBJDATA pArgs); Since there are too many functions in this component, the detail implementation of each function is not included here. Virtual Machine Operators and Function Operator functions The functions in this module are the parse functions for the Virtual Machine Operators and Function Operator instructions.  The functions have the following format: NTSTATUS LOCAL (*PFNOP)(PDDBOBJ pddb, PUCHAR *ppbOp, PUCHAR pbOpNext, POBJDATA pArgs); Since there are too many functions in this component, the detail implementation of each function is not included here. ULONG LOCAL StrLen(PSZ psz) This function computes the string length of a given ASCIIZ string. PSZ LOCAL StrCpy(PSZ pszDst, PSZ pszSrc, ULONG n) This function copies the source string to the destination string.  If n is -1, the entire source string is copied.  Otherwise, only n characters or the length of the source string whichever is shorter is copied. PSZ LOCAL StrCat(PSZ pszDst, PSZ pszSrc, ULONG n) This function concatenates the source string to the end of the destination string. If n is -1, the entire source string is concatenated.  Otherwise, only n characters or the length of the source string whichever is shorter is concatenated. LONG LOCAL StrCmp(PSZ psz1, PSZ psz2, ULONG n, BOOL fMatchCase) This function compares the two given strings.  If string 1 is greater than string 2, positive value is returned.  If string 1 is less than string 2, a negative value is returned.  If the two strings are equal, zero is returned. If n is -1, the two entire strings are compared.  Otherwise, only the first n characters of each string are compared.  fMatchCase indicates if the compare should match exact case or should be case insensitive. PSZ LOCAL StrChr(PSZ pszStr, CHAR c) This function searches the given string for the given character.  If found, the pointer to the found character is returned.  Otherwise, NULL is returned. PSZ LOCAL StrRChr(PSZ pszStr, CHAR c) This function is similar to StrChr except that it searches the string in reverse direction starting from the end of the string. VOID LOCAL ListRemoveEntry(PLIST plist, PPLIST pplistHead) This function removes the given entry from a circular doubly-linked list.  If the entry removed is at the head of the list, *pplistHead will be updated appropriately. PLIST LOCAL ListRemoveHead(PPLIST pplistHead) This function removes the first entry from a circular doubly-linked list and updates the *pplistHead appropriately.  The removed entry is returned. PLIST LOCAL ListRemoveTail(PPLIST pplistHead) This function removes the last entry from a circular doubly-linked list.  If the removed entry is the only entry in the list, *pplistHead is cleared.  The removed entry is returned. VOID LOCAL ListInsertHead(PLIST plist, PPLIST pplistHead) This function inserts the given entry to the head of a circular doubly-linked list and updates the *pplistHead appropriately. VOID LOCAL ListInsertTail(PLIST plist, PPLIST pplistHead) This function inserts the given entry to the tail of a circular doubly-linked list and updates the *pplistHead appropriately. NTSTATUS LOCAL CreateNameSpaceObject(PSZ pszName, PPNSOBJ ppns, PDDBOBJ pddb) This function first makes sure the given object path does not already exist in the ACPI Name Space.  If the object already exists, an error is returned.  Then it examines the path to determine what scope the object should be created under and look for the parent scope.  If the parent scope is not found, an error is returned, otherwise, a new object is created under the parent scope.  The new object created is marked owned by the given DDB. VOID LOCAL AddNameSpaceChild(PNSOBJ pnsParent, PNSOBJ pnsChild) This function links the given child object to the parent object. VOID LOCAL FreeNameSpaceObjects(PNSOBJ pnsObj, PDDBOBJ pddb) This function walks the given Name Space subtree and free all the objects which are owned by the given DDB.  If pddb is NULL, all objects are free regardless of ownership.  Note that if the parent object is free, all children objects are also free regardless if some of the children are not owned by the same DDB (i.e. there is no possibility of orphans). AML Debugger functions (debugger.c): This component only exists in the debug version of the Interpreter.  It provides all the AML debugger functions.  This includes dumping the content of the entire ACPI Name Space or a specified Name Space object, unassembling AML code, setting/clearing/disabling/enabling/listing  break points in the AML code, single stepping the AML code.  The AML debugger is not a standalone component.  It complements the kernel debugger (wdeb386.exe), therefore, it does not duplicate any functions that can be found in the kernel debugger. AML Debugger functions NTSTATUS LOCAL DBGDumpNameSpaceObject(PSZ pszName, ULONG dwfDump) This function dumps the content of the given Name Space object.  If pszName is NULL,   is implied.  If the DUMPF_RECURSIVE flag in dwfDump is set, the entire  Ssubtree under pszName is also dumped. NTSTATUS LOCAL DBGUnassembleAML(PUCHAR *ppbOp) This function unassembles an AML instruction pointed to by **ppbOp.  *ppbOp is updated to point to the next instruction.  This function will unassembles all nested instruction within the top instruction.  This function calls the ParseAML function with a global flag DBGF_UNASSEMBLE set.  When this flag is set, the ParseAML function will not execute the instruction.  Instead, it will parse the arguments and print the instruction in ASL statement form. VOID LOCAL DBGListBreakPoints(VOID) This function lists all the break points set, their addresses and the break point status (i.e. enabled/disabled). NTSTATUS LOCAL DBGSetBreakPoint(PUCHAR *pbOp, PUCHAR pbBPHandle) This functions sets and enables a new break point at the given AML address and returns the break point handle in *pbBPHandle.  If the break point table is full, an error is returned. NTSTATUS LOCAL DBGClearBreakPoint(UCHAR bBPHandle) This function clears the break point associated with the given break point handle. NTSTATUS LOCAL DBGEnableBreakPoint(UCHAR bBPHandle) This function enables the break point associated with the given break point handle. NTSTATUS LOCAL DBGDisableBreakPoint(UCHAR bBPHandle) The function disables the break point associated with the given break point handle. NTSTATUS LOCAL DBGSetSingleStepMode(BOOL fSingleStep) This function sets the single step mode so that the control will go back to the debugger when an AML instruction is executed.  Note that if the AML instruction executed has nested instructions, the nested instructions will not be executed when single step mode is active. Michael Tsang#F:\P\pnp\vxd\acpi\AMLI\amliarch.doc @Canon LBP-430 LPT1: HPPCL5MS Canon LBP-430 Canon LBP-430 MSUDO Canon LBP-430 Canon LBP-430 MSUDO Canon LBP-430 Times New Roman Symbol Arial Courier New ;ACPI Machine Language (AML) Interpreter Design Architecture Michael Tsang Michael Tsang
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\doc\aslarch.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Microsoft Corporation ACPI Source Language (ASL) Compiler Design ArchitectureACPI Source Language (ASL) Compiler Design Architecture Michael Tsang Normal Michael Tsang Microsoft Word for Windows 95ACPI Source Language (ASL) Compiler Design Architecture Introduction The ACPI specification defines the ACPI Control Method Source Language (ASL).  It is a source language for writing ACPI control methods and describing devices in an ACPI system.  The source language is compiled into closely related AML (ACPI Machine Language).  This document is describing the design architecture of the ASL compiler. Design Goals Intensive syntax and semantic error checking:  Good error checking on the compiler side not only helps the ASL developers to debug their code faster, it also off loads some of the mundane error checking jobs on the interpreter side. Implementation details in-sync with the interpreter:  Although the ACPI specification does a great job describing the ASL and AML languages, it does not describe implementation details which allows ambiguity in the implementation of the languages.  This ambiguity is not a bad thing because it allows implementation flexibility.  However, if the implementation of the compiler is not in-sync with the interpreter, it will cause subtle bugs. Accurate and detail error reporting:  The effectiveness of a developer to develop and debug ASL code is highly depend on how accurate and detail the compiler reports error. Layered architecture for easy extensibility and maintenance:  The compiler design will be abstracted into the following layers: line stream layer, tokenizer, syntax scanner, semantic parser and code generator. Rapid coding by making use of reusable code modules:  The line stream layer, tokenizer and syntax scanner modules can be extracted from a previous project.  This is possible because those layers were written as generic modules that can be reused by defining new token tables and syntax tables. Built-in internal debugging facilities for easy maintenance:  The compiler will have built-in tracing capability that can be written out to a tracing log.  This allows rapid identification of compiler bugs. Intensive syntax and semantic error checking In addition to compiling the ASL language into AML, the compiler also builds the ACPI name space in memory to catch errors such as duplicate names and scope violations.  This allows the compiler to have an option of dumping the ACPI name space at the end of the compile process so that the ASL developer can verify the validity of the code. Implementation details in-sync with the interpreter For example, the statement: Scope(\_SB.PCI0) {  In the ACPI specification, it does not specify whether any elements in the scope path must exist before the execution of the Scope statement.  So there are three possible implementations: All elements in the scope path must exist, the scope statement merely finds the existing object in the ACPI name space and make it as the current scope. All elements in the scope path except the leaf must exist.  If the leaf is not present, it will be created. Any elements in the scope path can be absent.  The scope statement will create all the missing elements. All implementations are valid as long as both the compiler and the interpreter are in-sync with each other which implementation is used.  If the compiler is implementing one and the interpreter the other, then it will probably cause error in the interpreter during the execution of the generated code. Accurate and detail error reporting Because of the layered architecture of the compiler with a generic line stream layer, the compiler is able to print out the offending source line and pinpoint the error location and explain the error in terms of what the compiler is expecting at that pointed location.  This is extremely useful for developers writing ASL code. Layered architecture for easy extensibility and maintenance The compiler will be implemented in the following layers: Line Stream Layer:  This generic layer abstracts the source file into a stream of source lines which it will keep track of the line number as well as token position so that in an error situation, the source line can be printer as well as the token position pinpointed.  The exported functions of this layer include: OpenLine, CloseLine, LineGetC, LineUnGetC, LineFlush. Tokenizer:  The generic tokenizer layer uses a syntax table provided by the syntax scanner layer to convert a line stream into an ASL token stream.  The exported functions of this layer include: OpenToken, CloseToken, GetToken, MatchToken. Syntax Scanner:  The syntax scanner layer is language specific.  It is responsible for scanning the syntax of the ASL language and report any syntax errors found.  It provides a table of functions on scanning various token types such as identifiers, symbols, numbers, strings and characters.  The exported functions of this layer include: OpenScan, CloseScan, ScanSym, ScanSpace, ScanNum, ScanString, ScanChar. Semantic Parser:  The semantic parser layer is also language specific.  It is responsible for parsing the semantics of the ASL language, building the ACPI name space and report any semantic errors found.  The exported functions of this layer are the individual functions to implement each ASL term (ASL statement). Code Generator:  The code generator layer again is language specific.  It know about the AML opcode encoding.  It is responsible for generating AML code. Because of this layered architecture, it is especially easy to implement features such as  include files  and  defines  (i.e. language preprocessor). Rapid coding by making use of reusable code modules As I have mentioned in the above section, most of the lower layers are either language independent or easily adaptable to a new language.  This makes it possible to reuse most of the modules from a previous project.  In fact, a prototype of a compiler shell with the lower layers up to the Syntax Scanner layer and a Semantic Parser and code generator layers that only understand one statement is done in one day.  This prototype can generate an empty DSDT block with the correct header and checksum. Built-in internal debugging facilities for easy maintenance As with all my past projects, without exception, the compiler also has built-in tracing capability which, when turned on, can generate a trace log file.  This makes debugging the compiler much easier. The ASL Compiler consists of the following components organized in layers: Generic  Normal Heading 1 Heading 3 Default Paragraph Font Line Stream Layer (line.c): This layer abstracts the source file into a stream of source lines.  It provides buffering for a line so that if any syntax or semantics error occurs, the source line can be printed and the error pinpointed. ASL Scanner Layer (scan.c): This layer provides the ASL specific scanner functions for the Tokenizer layer to scan various ASL tokens (e.g. Symbols, Strings, Numbers, Identifiers and Characters). Generic Tokenizer Layer (token.c): This layer is a generic token parsing engine which interacts with the Line Stream layer and calls the functions provided by the ASL specific Scanner layer to tokenize ASL tokens. ASL Argument Data Parser Layer (parsearg.c): This layer parses the corresponding data arguments of an ASL statement according to the given ASLTERM info. ASL Parser Layer (parseasl.c): This layer parses the individual ASL statements.  Once a statement keyword is recognized, the ASLTERM table is searched for argument information.  Then the ASLTERM info. is passed to the ASL Argument Data Parser layer to parse all the arguments for the ASL statement.  After all the arguments are parsed and collected, the semantics are checked.  If the statement is a Named Object Creator, the corresponding Name Space object is created.  Then, the code generator layer for the statement is called.  This layer recursively calls itself if the ASL statement allows nested statements.  At the end of the recursion call, it computes the package length for the code generated. AML Code Generator Layer (gencode.c): This layer generates the code for the statement and stores the code in the associated Name Space object. ACPI Source Language (ASL) Compiler Design Architecture The ASL Compiler consists of the following components organized in layers: Generic Line Stream Layer (line.c): This layer abstracts the source file into a stream of source lines.  It provides buffering for a line so that if any syntax or semantics error occurs, the source line can be printed and the error pinpointed. ASL Scanner Layer (scanasl.c): This layer provides the ASL specific scanner functions for the Tokenizer layer to scan various ASL tokens (e.g. Symbols, Strings, Numbers, Identifiers and Characters). Generic Tokenizer Layer (token.c): This layer is a generic token parsing engine which interacts with the Line Stream layer and calls the functions provided by the ASL specific Scanner layer to tokenize ASL tokens. ASL Argument Data Parser Layer (parsearg.c): This layer parses the corresponding data arguments of an ASL statement according to the given ASLTERM info. ASL Parser Layer (parseasl.c): This layer parses the individual ASL statements.  Once a statement keyword is recognized, the ASLTERM table is searched for argument information.  Then the ASLTERM info. is passed to the ASL Argument Data Parser layer to parse all the arguments for the ASL statement.  After all the arguments are parsed and collected, the semantics are checked.  If the statement is a Named Object Creator, the corresponding Name Space object is created.  Then, the code generator layer for the statement is called.  This layer recursively calls itself if the ASL statement allows nested statements.  At the end of the recursion call, it computes the package length for the code generated. AML Code Generator Layer (gencode.c): This layer generates the code for the statement and stores the code in the associated Name Space object. List Management functions (list.c): The siblings of Name Space objects are linked together in a circular doubly-linked list.  This component provides the list management functions including ListRemoveEntry, ListRemoveHead, ListRemoveTail, ListInsertHead, ListInsertTail. Name Space Manipulation functions (acpins.c): This component provides all the Name Space object manipulation functions including CreateNameSpaceObject and FreeNameSpaceObjects.  Note that this component does not explicitly provide Name Space navigation functions.  Instead, the Name Space navigation functions are provided as a set of macros. Generic Command Line Options Parser (options.c): This component parses the compiler command line options and sets up the compiler environment appropriately.  Detailed Data Structure Descriptions Line Stream Structure (LINE) #define MAX_LINE_LEN            255 #define LINEF_LONGLINE          0x0001 typedef struct line_s     FILE *pfileSrc;     WORD wfLine;     WORD wLineNum;     WORD wLinePos;     WORD wLineLen;     char szLineBuff[MAX_LINE_LEN + 1]; } LINE, *PLINE; When a source file is opened, a line structure is created and associated with the opened file.  The pfileSrc field is to store the opened file handle.  The wfLine flags indicates the status of the line (e.g. LINEF_LONGLINE indicates the line in szLineBuff is only part of a long line).  The wLineNum field keeps track of the line number of the line read.  The wLinePos keeps track of the position in szLineBuff for the next unread character.  The wLineLen field keeps track of the length of the current line in szLineBuff. Token Structure (TOKEN) //Token flags values #define TOKF_NOIGNORESPACE      0x0001  typedef int (*PFNTOKEN)(int, PTOKEN);  typedef struct token_s     PLINE       pline;     PFNTOKEN    *papfnToken;     WORD        wfToken;     int         iTokenType;     LONG        lTokenValue;     WORD        wTokenLine;     WORD        wTokenPos;     WORD        wErrLine;     WORD        wErrPos;     WORD        wTokenLen;     char        szToken[MAX_TOKEN_LEN + 1];   #ifdef TUNE     WORD        *pawcTokenType;   #endif } TOKEN, *PTOKEN; The pline field is to store the associated Line Stream structure.  The papfnToken field stores the language specific (i.e. ASL in this case) table of scanner functions.  The tokenizer layer will call each scanner function to scan an ASL term until one of the functions claims the token is its type.  The wfToken flags is currently unused in the ASL compiler.  The iTokenType field indicates the type of token scanned.  The lTokenValue field stores the token value.  If the token type is a number, the token value is the value of the number.  If the token is an identifier, then the token value is the ordinal of the identifier etc.  The wTokenLine field stores the line number of the scanned token.  The wTokenPos field stores the column position of the scanned token in the line.  The wErrLine and wErrPos fields store the line number and column position of the error if a syntax error is found.  The wTokenLen field indicates the length of the token string.  The szToken field stores the token string.  The pawcTokenType field holds an array of token type counters for tuning purposes. Generic Circular Doubly-Linked List (LIST) typedef struct _List     struct _List *plistPrev;     struct _List *plistNext; } LIST, *PLIST, **PPLIST; This structure is used in the Name Space object structure to link all the siblings together in a circular link list. Name Space Object (NSOBJ) #define SIG_NSOBJ       0x5f534e5f      //"_NS_" typedef struct _NSObj     LIST   list;                //NOTE: list must be first in structure     struct _NSObj *pnsParent;     struct _NSObj *pnsFirstChild;     ULONG   dwSig;     ULONG   dwNameSeg;     PUCHAR  pbFixedCode; } NSOBJ, *PNSOBJ, **PPNSOBJ; The ACPI Name Space is a hierarchical space of objects (i.e. a tree of objects).  Each object must have a  parent (except for the   object) and optionally one or more children.  Since the number of children of an object can vary, all children of an object are linked into a circular double-link list.  The parent object only points to the first child object in the list.  Each name space object contains some generated AML code.  Each ASL statement consists of a fixed part (i.e. arguments to the instruction) and a variable part (i.e. nested instructions).  The code generated for the fixed part is stored in a buffer pointed to by the pbFixedCode field.  The variable part will be stored in the corresponding children nodes as fixed code of each nested instructions. Name Space Object Data (OBJDATA) #define DATATYPE_UNKNOWN        0 #define DATATYPE_INTEGER        1 #define DATATYPE_BUFFER         2 #define DATATYPE_STRING         3 typedef struct _ObjData     ULONG  dwDataType;     ULONG  dwDataLen;     union     {         ULONG  dwData;         PUCHAR pbData;     } Data; } OBJDATA, *POBJDATA; As mentioned in the above section, a Name Space object can be one of several types.  The data types are defined above.  Some of the object types require buffer of various lengths to hold the associated data.  Therefore, an indirect data pointer (i.e. Data.pbData) is used to point to the extra data buffer with its length stored in dwDataLen.  The data type DATATYPE_INTEGER can store its data directly into Data.dwData and have no associated data buffer.  In these cases, dwDataLen indicates the number of bytes used in Data.dwData (1 for BYTE, 2 for WORD, 4 for DWORD). AML Term Table Entry (AMLTERM) // pszArgTypes characters #define ARGTYPE_NAME            'N'             //namestr #define ARGTYPE_DATA            'D' #define ARGTYPE_KEYWORD         'K' // dwfOpcode flags #define OF_VARIABLE_LIST        0x00000001 typedef NTSTATUS (LOCAL *PFNOP)(POBJDATA); typedef struct _amlterm     ULONG dwOpcode;     ULONG dwOptionalArgs;     PCHAR pszArgTypes;     ULONG dwfOpcode;     PFNOP pfnOpcode; } AMLTERM, *PAMLTERM; The AMLTERM structure is used to describe the information about an AML instruction.  The dwOpcode field contains the opcode for the instruction.  The dwOptionalArgs field is a bit vector indicating if any of the arguments are required or optional.  In the case of optional arguments, the compiler will provide appropriate default values.  The pszArgTypes field contains a string of characters each of which indicates the type of expected argument.  Therefore, the number of arguments for the instruction is implicitly indicated by the string length.  For example, the  Alias  instruction needs two arguments: the one must be a  namestr  and the second one is   and the pszArgTypes string is  .  This string is used by the generic argument parser to parse and assemble various argument types for the instruction.  The dwfOpcode field contains flags for the instruction.  For example, OF_VARIABLE_LIST indicates whether the instruction has a variable list part.  Finally, the pfnOpcode  field contains the function pointer to handle the code generation of the AML term.  There will be a AMLTERM structure associated with each ASL term identifier.  Therefore, when an AML term identifier is parsed a table is used to look up the corresponding AMLTERM structure so that the argument for the term can be parsed and the code generator function for the term can be called. Program Information Structure (PROGINFO) #define DEF_SWITCHCHARS         "/-" #define DEF_SEPARATORS          ":=" typedef struct proginfo_s     char *pszSwitchChars;   //if null, DEF_SWITCHCHARS is used     char *pszSeparators;    //if null, DEF_SEPARATORS is used     char *pszProgPath;      //ParseProgInfo set this ptr to prog. path     char *pszProgName;      //ParseProgInfo set this ptr to prog. name } PROGINFO, *PPROGINFO; The pszSwitchChars field specifies the option switch lead character, by default it is either  .   The pszSeparators field specifies the separator character used between the option name and the option data.  By default, the separator character is either  Option Type Structure (OPTIONTYPE) typedef int (*PFNOPTION)(char **, POPTIONTYPE); // Option types #define OT_STRING       1 #define OT_NUM          2 #define OT_ENABLE       3 #define OT_DISABLE      4 #define OT_ACTION       5 //Parse flags #define PF_NOI          0x0001 //No-Ignore-Case #define PF_SEPARATOR    0x0002 //parse for separator typedef struct _optiontype     char        *pszOptionID;  //option ID string     unsigned    uOptionType;   //see option types defined above     unsigned    uParseFlags;   //see parse flags defined above     void        *pvOptionData; //OT_STRING: (char **)-ptr to string ptr                                //OT_NUM: (int *)-ptr to integer number                                //OT_ENABLE: (unsigned *)-ptr to flags                                //OT_DISABLE: (unsigned *)-ptr to flags                                //OT_ACTION: ptr to function     unsigned    uOptionParam;  //OT_STRING: none                                //OT_NUM: base                                //OT_ENABLE: flag bit mask                                //OT_DISABLE: flag bit mask                                //OT_ACTION: none     PFNARG      pfnOptionVerify;//pointer to option verification func.                                 //this will be ignored for OT_ACTION Generic Line Stream Layer PLINE EXPORT OpenLine(FILE *pfileSrc) This function opens the source file, allocates and initialize the Line Stream structure. VOID EXPORT CloseLine(PLINE pline) This function closes the Line Stream and deallocate the Line Stream structure. int EXPORT LineGetC(PLINE pline) This function returns the next unread character from the Line Stream.  If the line is empty, a new line is read from the source file into the line buffer and the line number is updated. int EXPORT LineUnGetC(int c, PLINE pline) This function ungets a character back to the Line Stream. VOID EXPORT LineFlush(PLINE pline) This function flushes the current line in the Line Stream. ASL Scanner Layer PTOKEN EXPORT OpenScan(FILE *pfileSrc) This function calls OpenToken to create the token stream.  The created token stream structure is returned. VOID EXPORT CloseScan(PTOKEN ptoken) This function calls CloseToken to close and deallocate the token stream. int LOCAL ScanSym(int c, PTOKEN ptoken) This function determines if the given character c is part of a symbol token.  If not, it returns TOKERR_NO_MATCH, otherwise, it will scan as many characters as necessary to assemble a symbol token and fill in the token structure with the symbol ordinal, token string, token length etc. int LOCAL ScanSpace(int c, PTOKEN ptoken) This function determines if the given character c is part of a space token.  If not, it returns TOKERR_NO_MATCH, otherwise, it will scan as many white space character as necessary and returns a NULL token (i.e. TOKTYPE_NULL). int LOCAL ScanID(int c, PTOKEN ptoken) This function determines if the given character c is part of an identifier token.  If not, it returns TOKERR_NO_MATCH, otherwise, it will scan as many characters as necessary to assemble an identifier token.  Then, it looks the identifier up in the reserved identifier table.  If one is found, the associated ID is returned, else it is a user defined identifier and ID_USER is returned. int LOCAL ScanNum(int c, PTOKEN ptoken) This function determines if the given character c is part of a number token.  If not, it returns TOKERR_NO_MATCH, otherwise, it will scan as many characters as necessary to assemble a number token.  This function can handle decimal numbers as well as hexadecimal numbers.  This function also converts the number token into binary form and saves it in as the token value. int LOCAL ScanString(int c, PTOKEN ptoken) This function determines if the given character c is part of a string token.  If not, it returns TOKERR_NO_MATCH, otherwise, it will scan as many characters as necessary to assemble a string token.  This function can handle escaped characters with the string (i.e. back-slash characters). int LOCAL ScanChar(int c, PTOKEN ptoken) This function determines if the given character c is part of a character token.  If not, it returns TOKERR_NO_MATCH, otherwise, it will scan as many characters as necessary to assemble a character token and save the character as the token value.  This function can handle escaped character (i.e. back-slash character). int LOCAL ProcessInLineComment(PTOKEN ptoken) This function flushes the rest of the line to get rid of the in-line comment. int LOCAL LookupSym(PTOKEN ptoken, int iTable) This function determines if a symbol token may possibly be a multi-character symbol.  If so, it tries to get another character from the Line Stream to determine the real symbol.  If the next character is not a symbol character, it is pushed back to the Line Stream (i.e. LineUnGetC). int LOCAL LookupID(PTOKEN ptoken) This function looks up the scanned identifier token in the reserved identifier table.  If the token is found, the corresponding identifier ID is returned, otherwise, ID_USER is returned. int LOCAL GetEscapedChar(PLINE pline) This function is called when a back-slash character is read in a string or a character token.  It will scan as many character as necessary to determined the real escaped character and return it. Generic Tokenizer Layer PTOKEN EXPORT OpenToken(FILE *pfileSrc, PFNTOKEN *apfnToken) This function creates and allocates and initializes the Token Stream.  It also calls OpenLine to create the associated Line Stream.  The afpnToken argument is the array of language specific scanner function pointers for this Token Stream. VOID EXPORT CloseToken(PTOKEN ptoken) This function closes the Token Stream and deallocates the structure.  It also calls CloseLine to destroy the associated Line Stream. int EXPORT GetToken(PTOKEN ptoken) This function gets the first character of the token and calls the language specific scanner functions one at a time to determine the token type by the first character of the token.  If a scanner function claims the character, it will scan as many character as necessary to assemble the particular token. int EXPORT MatchToken(PTOKEN ptoken, WORD wf, int iTokenType, LONG lTokenValue, PVOID pvRetValue) This function calls GetToken to get a token and tries to match the token type with iTokenType.  If wf flags does not have the MTF_MATCHANY flag set, it will also try to match the scanned token value with lTokenValue.  If either the token is not the same type as the expected or the token value is not the same as expected, the line number and position of the error token is reported and an error is returned. ASL Argument Data Parser Layer int LOCAL ParseArgs(PTOKEN ptoken, PAMLTERM pterm) This function determines the number of arguments by computing the string length of the pszArgTypes field in the given pterm.  Then for each argument with its type, the appropriate argument parse function is called and the parsed argument data is stored in the global argument array. ASL Parser Layer int LOCAL ParseAML(PTOKEN ptoken, POBJDATA pArgs) This function calls MatchToken to an identifier token.  If the identifier token is a reserved identifier, the AMLTERM table is searched for the corresponding AMLTERM entry.  Then ParseArgs is called to parse appropriate arguments for the AMLTERM.  If necessary, the Name Space component is called to create the Name Space object.  Then, the fixed code part is generated and stored in the Name Space object.  This function will call itself recursively if the ASL statement has a variable part (i.e. nested statements). AML Code Generator Layer The functions in this module are the code generator functions for the various AML instructions.  The functions have the following format: NTSTATUS LOCAL (*PFNOP)(PNSOBJ pnsObj); Since there are too many functions in this component, the detail implementation of each function is not included here. List Management functions VOID LOCAL ListRemoveEntry(PLIST plist, PPLIST pplistHead) This function removes the given entry from a circular doubly-linked list.  If the entry removed is at the head of the list, *pplistHead will be updated appropriately. PLIST LOCAL ListRemoveHead(PPLIST pplistHead) This function removes the first entry from a circular doubly-linked list and updates the *pplistHead appropriately.  The removed entry is returned. PLIST LOCAL ListRemoveTail(PPLIST pplistHead) This function removes the last entry from a circular doubly-linked list.  If the removed entry is the only entry in the list, *pplistHead is cleared.  The removed entry is returned. VOID LOCAL ListInsertHead(PLIST plist, PPLIST pplistHead) This function inserts the given entry to the head of a circular doubly-linked list and updates the *pplistHead appropriately. VOID LOCAL ListInsertTail(PLIST plist, PPLIST pplistHead) This function inserts the given entry to the tail of a circular doubly-linked list and updates the *pplistHead appropriately. Name Space Manipulation functions int LOCAL CreateNameSpaceObject(PSZ pszName, PPNSOBJ ppns) This function first makes sure the given object path does not already exist in the ACPI Name Space.  If the object already exists, an error is returned.  Then it examines the path to determine what scope the object should be created under and look for the parent scope.  If the parent scope is not found, an error is returned, otherwise, a new object is created under the parent scope.  The new object created is marked owned by the given DDB. VOID LOCAL AddNameSpaceChild(PNSOBJ pnsParent, PNSOBJ pnsChild) This function links the given child object to the parent object. VOID LOCAL FreeNameSpaceObjects(PNSOBJ pnsObj) This function recursively frees a given Name Space object and all its children. Generic Command Line Options Parser VOID EXPORT ParseProgInfo(char *pszArg0, PPROGINFO pPI) This function parses command line argument 0 for the program name, program path information and stores them in the PROGINFO structure. int EXPORT ParseSwitches(int *pcArg, char ***pppszArg, POPTIONTYPE pOT, PPROGINFO pPI) This function parses each command line options and matches them in the OPTIONTYPE table.  According to the OPTIONTYPE entry found, corresponding flags are set or values are parsed. Normal Heading 1 Heading 2 Heading 3 Default Paragraph Font Michael Tsang"F:\P\pnp\tools\ASL\new\aslarch.doc @Canon LBP-430 LPT1: HPPCL5MS Canon LBP-430 Canon LBP-430 MSUDO Canon LBP-430 Canon LBP-430 MSUDO Canon LBP-430 Times New Roman Symbol Arial Courier New 7ACPI Source Language (ASL) Compiler Design Architecture Michael Tsang Michael Tsang
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\doc\acpiintr.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft ACPI IRP s live under IRP_MJ_ACPI (which I ll probably define as 0x17 which is currently not used) Title _PID_GUIDACPI IRP s live under IRP_MJ_ACPI (which I ll probably define as 0x17 which is currently not used) Jason Clark Normal Jason Clark Microsoft Word 8.0bjbjf ACPI IRP s live under IRP_MJ_ACPI (which I ll probably define as 0x17 which is currently not used). <KR: The ACPI IRPs should be IOCTL codes passed on either the DEVICE_CONTROL or INTERNAL_DEVICE_CONTROL major code> Extensions to existing interfaces: A driver may use IRP_MJ_PNP_POWER & IRP_MN_QUERY_INTERFACE to obtain the ACPI_INTERFACES structure.  This structure contains entry points for several direct call interfaces as well as the ACPI driver DeviceObject so that a driver may send IRP s directly to the ACPI driver. typedef struct ACPI_INTERFACES { USHORT Size; USHORT Version; // this is version 1 PVOID  AcpiDeviceObject; PINTERFACE_REFERENCE  InterfaceReference; PINTERFACE_DEREFERENCE  InterfaceDereference; PDEVICE_OBJECT AcpiDeviceObject; // Used for sending MN_IRPs PGPE_CONNECT_VECTOR GPE_Connect_Vector; PGPE_DISCONNECT_VECTOR GPE_Disconnect_Vector; PGPE_CLEAR_STATUS GPE_Clear_Status; PREGISTER_FOR_DEVICE_NOTIFICATIONS  RegisterForDeviceNotifications; PUNREGISTER_FOR_DEVICE_NOTIFICATIONS  UnregisterForDeviceNotifications; } ACPI_INTERFACES, *PACPI_INTERFACES; The following is a list of direct call interfaces whose entry point can be obtained using IRP_MN_QUERY_INTERFACE: // Connect to GPE typedef  NTSTATUS (*PGPE_CONNECT_VECTOR)( IN PDEVICE_OBJECT AcpiDeviceObject, IN ULONG GpeVector, IN KINTERRUPT_MODE GpeMode, IN BOOLEAN Sharable, IN PGPE_SERVICE_ROUTINE ServiceRoutine, IN PVOID ServiceContext, OUT PVOID *GpeVectorObject typedef BOOLEAN (*PGPE_SERVICE_ROUTINE) ( IN PVOID GpeVectorObject, IN PVOID ServiceContext // Service routine is called at IRQL = DISPATCH_LEVEL Service routine returns TRUE if the event was handled, else FALSE.  <KR: This allows the vector to be shared if we ever want to make the code support it> // Disconnect from GPE typedef (*PGPE_DISCONNECT_VECTOR) ( IN PVOID GpeVectorObject // Clear GP_STS Bit.   N.B. Caller must be the only device on the GPE vector to make this call typedef  NTSTATUS (*PGPE_CLEAR_STATUS)( IN PDEVICE_OBJECT AcpiDeviceObject, IN PVOID GpeVectorObject // Register to receive device notifications typedef   NTSTATUS (*PREGISTER_FOR_DEVICE_NOTIFICATIONS)( IN PDEVICE_OBJECT AcpiDeviceObject, IN PDEVICE_OBJECT DeviceObject, IN PDEVICE_NOTIFY_CALLBACK DeviceNotify, IN PVOID DeviceNotifyContext, OUT PVOID *DeviceNotifyObject DEVICE_OBJECT needs to be the same object which the QUERY_INTERFACE was issued in order to obtain this interface. typedef  VOID  (*PDEVICE_NOTIFY_CALLBACK)( IN PVOID DeviceNotifyObject, IN PVOID Context, IN ULONG NotificationValue // Notify callback is called at IRQL = DISPATCH_LEVEL typedef  (*PUNREGISTER_FOR_DEVICE_NOTIFICATIONS)( OUT PVOID *DeviceNotifyObject This IRP will also return the DeviceObject for ACPI that can be used to send the below IRPs directly to the ACPI driver. IRP_MN_RUN_CONTROL_METHOD Send this IRP to run a control method that lives in the ACPI name space beneath the device associated with DeviceObject.  IRP stack parameters for IRP_MN_RUN_CONTROL_METHOD struct { PSTR ControlMethod; // Name of control method to run. USHORT ArgumentCount; // Number of elements in OBJDATA array POBJDATA Arguments // an array of ArgumentCount OBJDATA structures // representing the arguments for this control method. <KR: Clearly I m not involved enough with the code to know if this interface is fine.  The doc seems to be a little to determine it as well.  In any case, how are arguments returned to the caller?> IRP_MN_ACQUIRE_GLOBAL_LOCK Send this IRP to request the Global Lock.  This IRP will return when the lock has been acquired or the timeout (if passed in by the caller) has expired.  IRP stack parameters for IRP_MN_ACQUIRE_GLOBAL_LOCK struct {  PVOID AcpiContext;   // what should this be ? ULONG TimeOut;  // ms to wait before completing the IRP without acquiring the Global // Lock.  Specify 0 for no timeout. } AcquireGlobalLock; <KR: AcpiConext will be a value passed from ACPI to drivers which  provide operational regions to ACPI.  If you don t have a context, then NULL is passed in and  the caller can not recurs ownership of the global lock > <KR: I would remove the timeout.  I don t think any driver is going to need it and if they really want one, then they can implement their own timeout (and cancel the pending IRP)> IRP_MN_RELEASE_GLOBAL_LOCK Send this IRP to release the Global  Lock. The request does not have any IRP stack parameters. <does this need to specify the Context value used to acquire the lock ?> <KR: I doubt it s required but I would have them pass it as a sanity check.  E.g., make sure the guy decrementing the lock count is really its owner>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\doc\acpios.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Microsoft Required Functions for OS specific module of ACPI driverRequired Functions for OS specific module of ACPI driver Jason Clark Normal Jason Clark Microsoft Word for Windows 95Required Functions for OS specific module of ACPI driver OS modules initialization entry point VOID OSInitialize(PDRIVER_OBJECT DriverObject); This routine is called by the shared portion of the driver during the DriverEntry phase of initialization. It is intended for any initialization that is not required by both NT and W9x.  For example, the NT version may use the DriverObject to add some additional IRP entry points that are not needed by W9x. Hooking the SCI vector BOOLEAN OSInterruptVector(USHORT Vector); This routine is called to hook the interrupt vector associated with the SCI using some OS specific method.  Vector is the hardware IRQ value (0-15).   (jasoncl: Is it sufficient to pass in Vector on a non x86 platform or do we need something more general ?). This function should return TRUE if the interrupt vector was successfully hooked.  A return value of FALSE will cause the ACPI driver to fail to load. OS Specific file I/O routines These are used by the interpreter module. ULONG __cdecl OSOpenFile(PSZ pszFile, ULONG dwfOpenMode, ULONG dwfCreateAttr, ULONG dwfAction,            PHANDLE phFile); This function opens a file, optionally creating the file if it does not exist. Parameters: pszFile ANSI string containing the file name. dwfOpenMode is a combination of the following flags: OF_READONLY opens the file for reading OF_WRITEONLY  opens the file for writing OF_READWRITE             opens the file for reading & writing OF_SHARE_DENYALL    allows others to open the file but not read or write OF_SHARE_DENYWRITE  allows others to open the file for reading only OF_SHARE_DENYREAD        allows others to open the file but for writing only OF_SHARE_DENYNONE        allows others to open the file with no restrictions (there are a few others but they should not be used by the interpreter) dwfCreateAttr is only relevant if a file is created as a result of this call and may contain the following flags: CF_READONLY           create a file with the read only attribute    CF_HIDDEN                create a file with the hidden attribute CF_SYSTEM                create a file with the system attribute CF_VOL_LABEL             create a volume label  CF_ARCHIVE               create a file with the archive attribute dwfAction is a combination of the following flags: AF_EXIST_FAIL            fail the call if the file currently exists AF_EXIST_OPEN            if the file exists open it  AF_EXIST_REPLACE         if the file exists replace it and open the new file AF_NOTEXIST_FAIL         if the file does not exist fail the call AF_NOTEXIST_CREATE       if the file does not exist create and open it If successful the functions returns 0 and sets *phFile to the file handle, otherwise the function returns non-zero. ULONG __cdecl OSCloseFile(HANDLE hFile); This function closes the file identified by hFile.  If successful the function returns zero, otherwise it returns a non-zero value. ULONG __cdecl OSReadFile(HANDLE hFile, ULONG dwFilePos, PUCHAR pbBuff, ULONG dwLen,            PULONG pdwcbRead); This function tries to read dwLen bytes of file hFile starting at offset dwFilePos into a buffer pointed to by pbBuff and returns the actual number of bytes read in pdwcbRead.  This function will return zero if it was able to read anything even if it was less than dwLen.  It will return non-zero if the file cannot be found or if read access to the file is denied. ULONG __cdecl OSWriteFile(HANDLE hFile, ULONG dwFilePos, PUCHAR pbBuff, ULONG dwLen,             PULONG pdwcbWritten); This function tries to write dwLen bytes in file hFile starting at dwFilePos from a buffer pointed to by pbBuff and returns the actual number of bytes writing in pdwcbWritten. This function will return zero if it was able to write anything even if it was less than dwLen.  It will return non-zero if the file cannot be found or if write access to the file is denied. ULONG DbgPrompt(PSZ pszPrompt, PSZ pszBuff, ULONG dwcbLen); Send a question (an ANSI string pointed to by pszPrompt) to the user via the debugger, and return the response (in ANSI) in the buffer pointed to by pszBuff.  dwbcLen specifies the size of pszBuff. In addition to the below required functions, the Win95 specific module performs actions such as,  Normal Default Paragraph Font PNP for the ACPI device (starting, stopping, and enumerating the ACPI bus), hooking the SCI vector, receiving the SCI and scheduling a call to ACPIInterruptProcessing (which is in the shared module), getting idle notifications and selecting which C state to put the machine into, interfacing with win95 s VPowerD (for compatibility reasons).   Jason Clark.C:\My Documents\ACPI OS Specific Functions.doc @HP LaserJet 5Si/5Si MX \\msprint9\corpb HP5SI HP LaserJet 5Si/5Si MX HP LaserJet 5Si/5Si MX WINWORD Courier New \\msprint9\corpb HP5SI HP LaserJet 5Si/5Si MX WINWORD Courier New \\msprint9\corpb HP5SI Times New Roman Symbol Arial 8Required Functions for OS specific module of ACPI driver Jason Clark Jason Clark
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\sld\placefil.txt ===
;
; See public\sdk\lib\placefil.txt for info about placefil's in general.
;


APC_UPS.sld                         mantis
HID_UPS_Battery.sld                 mantis
ACPI_Control_Method_Battery.sld     mantis
AC_Adapter.sld                      mantis
APM_Legacy_Battery.sld              mantis
Smart_Battery_Subsystem.sld         mantis
Smart_Battery.sld                   mantis
PowerWare_UPS.sld                   mantis
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\acpisim\readme.txt ===
ACPI BIOS Simulator Components

This directory contains the necessary components to build and use the ACPI BIOS Simulator.

\DRIVER - This directory contains the DDK version of the ACPI BIOS Simulator (requires LIB, INC dirs)

\INC - This directory contains the header file necessary to use the ACPI BIOS Simulator driver library

\LIB - This directory contains the code to build the ACPI BIOS Simulator driver library

\SIMULATION - This directory contains the ACPI BIOS Simulations, updated driver, and tools
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\acpisim\simulation\readme.txt ===
ACPI BIOS Simulator

This directory contains the necessary components to build and use the ACPI BIOS Simulator.

\APP - This directory contains the user mode applications that send IOCTLs to the BIOS simulator

\DRIVER - This directory contains the code to build the ACPI BIOS Simulator driver, ACPISIM.SYS

\ASL - This directory contains the ASL code to use with the simulator.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\acpisim\simulation\app\readme.txt ===
ACPI BIOS Simulator

This directory contains ACPI BIOS Simulator user mode application code.

\ASAPP1 - This code will take a method name from the Command line, and execute it if it exists as a method underneath the ACPI simulator device.

\ASAPP2 - This code will take a method name, and arguments from the command line, and execute the method with the parameters
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\bt_finish.ini ===
[RESTART_TESTS]

[WAIT]
Arg1=7

[PAUSE_TESTS]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\bt_rs.ini ===
[RESTART_TESTS]

[WAIT]
Arg1=30

[PAUSE_TESTS]

[STOP_RESTART]
Arg1="boot_test.ini"
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\nowait.ini ===
[ENABLE_HIBER]
Arg1=1

//
// Test devices
//

[RESTART_TESTS]

[WAIT]
Arg1=30

[PAUSE_TESTS]

[WAIT]
Arg1=5

//
// Sleep 
//

[SLEEP]
Arg1=1  //Sleep Type 
Arg2=1  // RTC in minutes
Arg3=3  // Flags

//
// Test devices
//

[RESTART_TESTS]

[WAIT]
Arg1=30

[PAUSE_TESTS]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\po.ini ===
\registry\machine\system\currentcontrolset\Control\Session Manager
    PowerPolicySimulate = REG_DWORD 0x1000
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\pmte.ini ===
[PMTE]

//
// If the client dosn't conect in the below specified time
// the clinet process will be terminated. This number is in seconds.
// A 0 indecates we will wait for ever
//
MaxClientConectTimeLatency=40

// Maximume time a test must complet the state change and
// acknolege it. If not done with in that time it is a failure.
// This number is in seconds. A 0 indecates we will wait for ever 
// for the cliant to ack.

MaxClientStateChangeAckLatency=480

DenyQuertSuspend = 0
UiIfAllowed = 0
PowerActionFlags=3
WakeUpLatencyInSeconds=420
DeviceTypesNotToTestString="MEMLEAK"
PooltagErrorPercentage=1000

[DEVICE_DEFAULT]
TestName=DEFAULT
Type="unknown"

[DISK_DEFAULT]
//
// TestName        
TestName=DISK
Type="DISK"

[CDROM_DEFAULT]
TestName=CD_ROM
Type="CD_ROM"

[FLOPPY_DEFAULT]
TestName=FLOPPY
Type="FLOPPY"

[COMPORT_DEFAULT]
TestName=com
Type="COMPORT"

[LPT_DEFAULT]
TestName=LPT
Type="Parallel"

[VIDEO_DEFAULT]
TestName=video
Type="VIDEO"

[SOUND_DEFAULT]
TestName=sound
Type="SOUND"

[NET_DEFAULT]
TestName=NET
Type="NET"

[NETIO_DEFAULT]
TestName=NET_IO
Type="NET"

[IRDA_DEFAULT]
TestName=IRDA
Type="IRDA"

[MEMLEAK_DEFAULT]
TestName=MEMLEAK
Type="MEMLEAK"

[PROCESSOR_DEFAULT]
TestName=processor
Type="PROCESSOR"

[DEVNODES_DEFAULT]
TestName=DEVNODES
Type="DEVNODES"

[DEFAULT_TEST_INFO]
// Maximume number of instances I can run this 
// test at the same time. 0 Indecates unlimeted.
// This affects all tests in this section. If a specific test
// has a different Instance count repeat this 
// in the test specific section
MaxInstances=0
TestDisplayName="UNKNOWN"
ErrorDllName="gendev.dll"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDefaultMethod"
BinaryName="NON"
Param1="NON" 

//#define TI_FLAGS_TEST_SUPPORT_CHOP_PARAMETER  ((DWORD)0x1)
//#define TI_FLAGS_TEST_SUPPORT_FL_PARAMETER    ((DWORD)0x2)
//#define TI_FLAGS_TEST_SUPPORT_IO_ON_SUSPEND   ((DWORD)0x4)
//#define TI_FLAGS_TEST_NEEDS_CHOP_ON_SUSPEND   ((DWORD)0x8)

TestCapabilitieFlags=0

[SDSTRESS_TEST_INFO]
// TestFormatString : sprintf() format string to create the CreateProcess string
//                    first %s is the exe name. Second %s is the device name .
//                    third %s is the log file name.
TestFormatString="%s /S:%s /Log:%s.log /pmte /p:100000 /r"
TestDisplayName="Disk Stress"	
DeviceNameFilterType="FIRST_CHAR_OF_DEVICE_NAME"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=sdstress

[VIDEO_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Video" 
BinaryName=pmtedt
TestCapabilitieFlags=1

[PROCESSOR_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Processor" 
BinaryName=pmtedt
TestCapabilitieFlags=1

[SOUND_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Sound (Did you hear sound?)" 
ErrorDllName="gendev.dll"
BinaryName=pmtedt
TestCapabilitieFlags=4


[NET_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Net enum and ping test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=1

[NET_IO_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"
Arg="\\hctpro\pmte"
TestDisplayName="Net Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
DeviceNameFilterType="NetArgPlusUniqueName"
BinaryName=pmtedt
TestCapabilitieFlags=10

[COM_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"	
TestDisplayName="COMX Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=10

[LPT_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"	
TestDisplayName="Parallel port Ioctl"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=1

[DISK_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /TF: %lu"		
TestDisplayName="Disk Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=7


[FLOPPY_TEST_INFO]
TestFormatString="%s /D: %s /TS: 3  /LOG: %s /TF: %lu"			
TestDisplayName="Floppy Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=10


[CD_ROM_TEST_INFO]
TestFormatString="%s /D: %s /TS: 14  /LOG: %s /fl /TF: %lu"	
TestDisplayName="CD-ROM Read test"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=11

[IRDA_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="Irda test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=0

[DEVNODES_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /MD"
TestDisplayName="Seach for devnodes with problems"
ErrorDllName="pmcs.dll"
BinaryName=popnp
TestCapabilitieFlags=0

[MEMLEAK_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Memory leak detection"
BinaryName=pmtedt
TestCapabilitieFlags=0

[DUMY_TEST_INFO]
TestFormatString="%s %s"
TestDisplayName="Dumy testtest"
BinaryName=rs
TestCapabilitieFlags=0
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\pmte2.ini ===
[PMTE]

//
// If the client dosn't conect in the below specified time
// the clinet process will be terminated. This number is in seconds.
// A 0 indecates we will wait for ever
//
MaxClientConectTimeLatency=40

// Maximume time a test must complet the state change and
// acknolege it. If not done with in that time it is a failure.
// This number is in seconds. A 0 indecates we will wait for ever 
// for the cliant to ack.

MaxClientStateChangeAckLatency=180

DenyQuertSuspend = 0
UiIfAllowed = 0
PowerActionFlags=3
WakeUpLatencyInSeconds=120
DeviceTypesNotToTestString="VIDEO"


[PMTE_TEST_SCIPTS]
s1="Stress_Without_Critical.ini"
s2="Stress_With_Critical.ini"
s3="Boot_Test.ini"
s4="Manual.ini"
s5="Stress_With_Diff_RTC_Values.ini"
s6="test_pmte.ini"
s7="hct.ini"



[DEVICE_DEFAULT]
TestName=DEFAULT
Type="unknown"

[DISK_DEFAULT]
//
// TestName        
TestName=DISK
Type="DISK"

[CDROM_DEFAULT]
TestName=CD_ROM
Type="CD_ROM"

[FLOPPY_DEFAULT]
TestName=FLOPPY
Type="FLOPPY"

[COMPORT_DEFAULT]
TestName=com
Type="COMPORT"

[LPT_DEFAULT]
TestName=LPT
Type="Parallel"

[VIDEO_DEFAULT]
TestName=powerman
Type="VIDEO"

[SOUND_DEFAULT]
TestName=sound
Type="SOUND"

[NET_DEFAULT]
TestName=NET
Type="NET"

[NETIO_DEFAULT]
TestName=NET_IO
Type="NET"

[IRDA_DEFAULT]
TestName=IRDA
Type="IRDA"

[DEVNODES_DEFAULT]
TestName=DEVNODES
Type="DEVNODES"

[DEFAULT_TEST_INFO]
// Maximume number of instances I can run this 
// test at the same time. 0 Indecates unlimeted.
// This affects all tests in this section. If a specific test
// has a different Instance count repeat this 
// in the test specific section
MaxInstances=0
TestDisplayName="UNKNOWN"
ErrorDllName="gendev.dll"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDefaultMethod"
BinaryName="NON"
Param1="NON" 

[SDSTRESS_TEST_INFO]
// TestFormatString : sprintf() format string to create the CreateProcess string
//                    first %s is the exe name. Second %s is the device name .
//                    third %s is the log file name.
TestFormatString="%s /S:%s /Log:%s.log /pmte /p:100000 /r"
TestDisplayName="Disk Stress"	
DeviceNameFilterType="FIRST_CHAR_OF_DEVICE_NAME"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=sdstress

[POWERMAN_TEST_INFO]
TestFormatString="%s %s.log"	
TestDisplayName="Video" 
BinaryName=powerman

[SOUND_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu /CHOP"
TestDisplayName="Sound (Did you hear sound?)" 
ErrorDllName="gendev.dll"
BinaryName=pmtedt


[NET_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Net enum and ping test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[NET_IO_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"
Arg="\\hctpro\pmte"
TestDisplayName="Net Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
DeviceNameFilterType="NetArgPlusUniqueName"
BinaryName=pmtedt

[COM_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu /CHOP"	
TestDisplayName="COMX Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[LPT_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu /CHOP"	
TestDisplayName="Parallel port Ioctl"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DISK_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu /CHOP"		
TestDisplayName="Disk Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[FLOPPY_TEST_INFO]
TestFormatString="%s /D: %s /TS: 3  /LOG: %s /fl /TF: %lu /CHOP"			
TestDisplayName="Floppy Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[CD_ROM_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu /CHOP"	
TestDisplayName="CD-ROM Read test"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[IRDA_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu /CHOP"	
TestDisplayName="Irda test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DEVNODES_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Seach for devnodes with problems"
ErrorDllName="pmcs.dll"
BinaryName=popnp

[DUMY_TEST_INFO]
TestFormatString="%s %s"
TestDisplayName="Dumy testtest"
BinaryName=rs
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\pmte1.ini ===
[PMTE]

//
// If the client dosn't conect in the below specified time
// the clinet process will be terminated. This number is in seconds.
// A 0 indecates we will wait for ever
//
MaxClientConectTimeLatency=40

// Maximume time a test must complet the state change and
// acknolege it. If not done with in that time it is a failure.
// This number is in seconds. A 0 indecates we will wait for ever 
// for the cliant to ack.

MaxClientStateChangeAckLatency=60

DenyQuertSuspend = 0
UiIfAllowed = 0
PowerActionFlags=3
WakeUpLatencyInSeconds=60
DeviceTypesNotToTestString="VIDEO"


[PMTE_TEST_SCIPTS]
s1="Stress_Without_Critical.ini"
s2="Stress_With_Critical.ini"
s3="Boot_Test.ini"
s4="Manual.ini"
s5="Stress_With_Diff_RTC_Values.ini"
s6="test_pmte.ini"


[DEVICE_DEFAULT]
TestName=DEFAULT
Type="unknown"

[DISK_DEFAULT]
//
// TestName        
TestName=DISK
Type="DISK"

[CDROM_DEFAULT]
TestName=CD_ROM
Type="CD_ROM"

[FLOPPY_DEFAULT]
TestName=FLOPPY
Type="FLOPPY"

[COMPORT_DEFAULT]
TestName=com
Type="COMPORT"

[LPT_DEFAULT]
TestName=LPT
Type="Parallel"

[VIDEO_DEFAULT]
TestName=powerman
Type="VIDEO"

[SOUND_DEFAULT]
TestName=sound
Type="SOUND"

[NET_DEFAULT]
TestName=NET
Type="NET"

[IRDA_DEFAULT]
TestName=IRDA
Type="IRDA"

[DEVNODES_DEFAULT]
TestName=DEVNODES
Type="DEVNODES"

[DEFAULT_TEST_INFO]
// Maximume number of instances I can run this 
// test at the same time. 0 Indecates unlimeted.
// This affects all tests in this section. If a specific test
// has a different Instance count repeat this 
// in the test specific section
MaxInstances=0
TestDisplayName="UNKNOWN"
ErrorDllName="gendev.dll"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDefaultMethod"
BinaryName="NON"
Param1="NON" 

[SDSTRESS_TEST_INFO]
// TestFormatString : sprintf() format string to create the CreateProcess string
//                    first %s is the exe name. Second %s is the device name .
//                    third %s is the log file name.
TestFormatString="%s /S:%s /Log:%s.log /pmte /p:100000 /r"
TestDisplayName="Disk Stress"	
DeviceNameFilterType="FIRST_CHAR_OF_DEVICE_NAME"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=sdstress

[POWERMAN_TEST_INFO]
TestFormatString="%s %s.log"	
TestDisplayName="Video" 
BinaryName=powerman

[SOUND_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Sound (Did you hear sound?)" 
ErrorDllName="gendev.dll"
BinaryName=pmtedt

[NET_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"
Arg="\\hctpro\pmte"
TestDisplayName="Net Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
DeviceNameFilterType="NetArgPlusUniqueName"
BinaryName=pmtedt

[COM_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="Parallel port Ioctl"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[LPT_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="COMX Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DISK_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu"		
TestDisplayName="Disk Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[FLOPPY_TEST_INFO]
TestFormatString="%s /D: %s /TS: 3  /LOG: %s /fl /TF: %lu"			
TestDisplayName="Floppy Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[CD_ROM_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu"	
TestDisplayName="CD-ROM Read test"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[IRDA_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="Irda test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DEVNODES_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Seach for devnodes with problems"
ErrorDllName="pmcs.dll"
BinaryName=popnp

[DUMY_TEST_INFO]
TestFormatString="%s %s"
TestDisplayName="Dumy testtest"
BinaryName=rs
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\spsim\spsim.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Personal TitleAdam Glass Normal Adam Glass Microsoft Word 9.0.F<gTVbjbjU Service Processor Simulator  TIME \@ "M/d/yyyy"  7/18/2000 Purpose The purpose of this document is to describe the function and operation of the Service Processor Simulator (hereafter referred to as SPSIM).  This software simulates a service processor like you might find in a machine supporting dynamic partitioning.  This service processor controls the insertion and ejection of registered devices from the machine.  In this context, a registered device is one that has been hooked into the SPSIM infrastructure. SPSIM simulates the insertion/ejection of hardware by a service processor through these three components: A kernel mode driver that provides an operation region space that registered devices use to answer the _STA method.  The registered device objects also update this  STA space  when the device is ejected. A user-mode application that allows the user to control the _STA behavior of registered devices and notify those devices as well.  The application also provides higher-level insert and eject commands. Sample ASL code that can be compiled into existing ACPI bioses or added dynamicly via ACPILOAD or loaded by the ACPI via the Load command. This code needs to be modified to fit the application and is described in the   REF _Ref488515169 \h  Registering an ACPI device object with SPSIM  section. SPSIM also serves as a demo of writing an operation region space driver. Kernel Mode Driver (SPSIM.SYS) SPSIM.SYS is a function driver that will be loaded in on ACPI enumerated device objects that specify their _HID value as  SPSIMUL .  The driver registers an operation region space that can be modified by the SPCTL application through a device interface and associated IOCTLs that the driver supports. The ioctls supported by SPSIM.SYS are declared in the SPSIMIOCT.H file.  These IOCTLs are: Ioctl Function IOCTL_SPSIM_GET_MANAGED_DEVICES Enumerate the devices managed (registered with) SPSIM. IOCTL_SPSIM_ACCESS_STA Read/Write the STA value associated with a device. IOCTL_SPSIM_NOTIFY_DEVICE     Send an ACPI notify code to the device IOCTL_SPSIM_GET_DEVICE_NAME Get a text name for the device SPSIM assumes the presence of the ASL infrastructure described later in this document.  The ASL defines which devices SPSIM controls, how to notify those devices, and how to describe them in the user-mode application.  The kernel mode driver provides the path through which the user-mode application can enumerate the  registered  devices, modify their _STA values and generate ACPI notifications. Note: The driver implements an additional operation region space for simulating PNP memory modules.  This code is not essential to SPSIM but is provided as an additional working example of software-implemented operation region spaces. SPCTL This is a user-mode command-line application that uses IOCTLs to control the operation of the simulated service processor (SPSIM.SYS). When invoked with no command-line arguments, SPCTL dumps the list of devices controlled by the simulated service processor and the current values being provided by the driver via the operation region space for their _STA methods. Dev 0 : _STA is 0x0 Name \_SB_.PMM0 Dev 1 : _STA is 0xf Name \_SB_.PMM1 Dev 2 : _STA is 0x0 Name \_SB_.PMM2 Dev 3 : _STA is 0xf Name \_SB_.PMM3 Dev 4 : _STA is 0xf Name \_SB_.PMM4 Dev 5 : _STA is 0x0 Name \_SB_.PMM5 Dev 6 : _STA is 0x0 Name \_SB_.PMM6 Dev 7 : _STA is 0x0 Name \_SB_.PMM7 The first column lists the  devnum  associated with each device.  This is useful in addressing that device to other SPCTL commands.  The hex number in the middle is the value currently being provided in the operation region space for that device s _STA value.  The idea is that the ACPI device object for the registered device is modified to reference the operation region to retrieve the value it returns for it s _STA method.  However, there is no requirement that the ACPI device object return this value directly i.e it may make it device presence  dependent on other factors as well, etc. The support SPCTL commands are: notify devnum code setsta devnum value insert [devnum | * ] eject [devnum | * ] <no arguments> prints device status above. Where   is a ACPI notification code and  value  is a valid result for the _STA method.  Using these primitives you can simulate successful insertion/ejection as well as surprise removal and other variations. Any other input will result in output describing the command line usage of SPCTL. ASL Infrastructure SPSIM includes sample ASL code that shows SPSIM in use.  The following is a walkthrough of that ASL code indicating the function of each piece. SPSIMUL device object This first ASL code fragment declares a device object of HID SPSIMUL which will result in ACPI enumerating an ACPI\SPSIMUL device on which SPSIM.SYS will be loaded (if you point the Add New Hardware wizard at the appropriate INF).         Device(XXSP) {             Name(_HID, "SPSIMUL")             Method(_STA) {                 return (0xF)             } This next fragment declares the operation region that is used to communicate _STA information between user-mode, the driver, and the registered device objects.  For each device object registered with SPSIM, there should be 8 bit area declared in the operation region.  This is the area in which the device object will store and retrieve _STA information provided/maintained by SPSIM.             OperationRegion(DSTA, 0x99, 0, 0x10)             Field(DSTA, ByteAcc, NoLock, Preserve) {                 SMM0, 8,                 SMM1, 8,                 SMM2, 8,                 SMM3, 8,                 SMM4, 8,                 SMM5, 8,                 SMM6, 8,                 SMM7, 8             } This next fragment declares a variable to be referenced to see if the SPSIM operation space is online.  Registered objects should check this value before reading/writing the STA operation region.  The _REG method will update this value when SPSIM is started or removed.             Name(AVAL, 0)             Method(_REG, 2) {                 Store(Arg1, AVAL)             } This fragment defines the SNAM package which contains a list of strings naming each device.  These names are associated on a 1:1 basis with the STA values found in the operation region field and are used only in the user-mode user-interface.             Name(SNAM,                 Package() {                     \_SB.PMM0,                     \_SB.PMM1,                     \_SB.PMM2,                     \_SB.PMM3,                     \_SB.PMM4,                     \_SB.PMM5,                     \_SB.PMM6,                     \_SB.PMM7                 }             ) This fragment defines NOFD method that contains a notify for each device listed in SNAM and the operation region field.  This method is used to pass on notify requests from user-mode.  The first argument is the devnum and the second argument is the notify value to be applied.             Method(NOFD, 2) {                 if (LEqual(Arg0, 0)) {                     Notify(\_SB.PMM0, Arg1)                 }                 if (LEqual(Arg0, 1)) {                     Notify(\_SB.PMM1, Arg1)                 }                 if (LEqual(Arg0, 2)) {                     Notify(\_SB.PMM2, Arg1)                 }                 if (LEqual(Arg0, 3)) {                     Notify(\_SB.PMM3, Arg1)                 }                 if (LEqual(Arg0, 4)) {                     Notify(\_SB.PMM4, Arg1)                 }                 if (LEqual(Arg0, 5)) {                     Notify(\_SB.PMM5, Arg1)                 }                 if (LEqual(Arg0, 6)) {                     Notify(\_SB.PMM6, Arg1)                 }                 if (LEqual(Arg0, 7)) {                     Notify(\_SB.PMM7, Arg1)                 }             }        registered  device object This device object is registered with SPSIM via it s presence in the operation region field, SNAM and its use of references to the SPSIM operation region space.         Device(PMM0) { Note that the _STA method has been altered to first check to see if the SPSIM STA operation region space is available before trusting any data retrieved from it.             Method(_STA) {                 If (\_SB.XXSP.AVAL) {                    Store(\_SB.XXSP.SMM0, Local0)                    return (Local0)                 }                 return (0) // not here unless SPSIM is up.             } Similarly an _EJx method has been defined.  This method would do everything to make the device go away and not return until it had.  In this case, it notes in the operation region space that future _STA methods should return 0 i.e device not present.             Method(_EJ0, 1) {                 Store(0, \_SB.XXSP.SMM0)             }         } Registering an ACPI device object with SPSIM To make an ACPI device object controllable from SPSIM, you make the following changes in the supplied ASL sample: Add a field entry to the STA operation region space from which this device object will retrieve it s _STA value. Add a string to the SNAM package at the same index as the field in the _STA operation region space.  This name will appear in the SPCTL UI only. Modify the NOFD method to include a notification statement for the device object.  Arg0 will be the 0th-based index of the device in the SNAM package and Arg1 will contain the notify code.  Ex.:           If (Lequal(Arg0, 3)) {               Notify(\_SB.PMM3, Arg1)           } Modify the ACPI device object s _STA implementation to reference the field entry in the STA operation region space.  It is not required to directly return the value from the operation region, i.e. it might need to be conditional on other parameters, etc.  Don t forget to check the AVAL variable of the SPSIMUL object to make sure the operation region is valid before believing any data from it. Modify the ACPI device object s _EJx or _RMV implementation to make appropriate changes to the device s _STA value via the operation region space as appropriate. Installation The SPSIMUL object needs to be added to your ACPI namespace either by modifying the ACPI bios or by loading additional tables via ACPILOAD.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\acpi\tools\pmte\readme.txt ===
* PMTE  Power Management test shell

This tests several device types in a system before and after each 
sleep state the system supports. You can run one of the supplied scripts that will 
do this as many times as you specify automatically.


Currently it tests the below device types.

 Disks
 CD-ROM
 Floppy
 Sound
 NET
 IRDA
 Serial with loopback
 Modems
 parallel port
 VIDEO


* TO RUN A SCRIPT FROM THE COMMAND LINE

Type 

Pmte /rs: <scriptName> <NumberOfTimes>


* TO SKIP TESTING SOME OF THE DEVICE TYPES

To exclude one or more of the above devices types in testing use the 
/sdt: (skip device type) switch for each device type you want to skip.
For example to not test Serial/Modem  and the BOOFLOPPY devices types type 
the below.

Pmte /sdt:  COM  /sdt:  bootFLOPPY

It is ussaly a good idea to skeep the bootfloppy because hiberanet will probaply not be automated.

Other devices type that we can skip are

NET
IRDA
DISK
SOUND
VIDEO


* hanging tests.

PMTE spawns a process for each device test, 
when PMTE is unable to talk to one of these processes it will break into the kernel debugger. 
So that this system issue can be debugged.

You need a kernel debugger connected otherwise the APP will just AV, when this happens.


* Other switches

/QOS:

If you start PMTE from a test shell that can parse the pmte.log file.  
If this switch is used PMTE will just exit when it is done testing.

/LOG: [log file name]

The default log file name is pmte.log if you need to call it something else for some reason 
use this switch.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\pccard\placefil.txt ===
pcmcia.sys     retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\busdrv\pci\pci.ini ===
\registry\machine\system\currentcontrolset\services\pci
    DisplayName = REG_SZ "PCI Bus Extender"
    ErrorControl = REG_DWORD 0x00000001
    Group = REG_SZ "extended base"
    ImagePath = REG_EXPAND_SZ "\SystemRoot\System32\drivers\pci.sys"
    Start = REG_DWORD 0x00000001
    Type = REG_DWORD 0x00000001
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\clusternet.txt ===
Private Cluster Network
------------------------
Network Number: 10.1.0.0
Subnet Mask: 255.255.0.0
No gateways
No DNS, WINS, or DHCP servers.

Allocations
-----------
0.1 - 0.9	Reserved
0.10 - 0.14	MikeMas
0.20 - 0.29	GalenB
0.30 - 0.39	DavidP
0.40 - 0.49	VVasu
1.1         GPease - DNS Server (GPEASE-BCOM)
10.0 - 10.255 telan
5.0 - 9.255 sivapad
0.60 - 0.65 ahmedm


Legacy Network (RB-Net)
-----------------------
192.168.0.0 - 255 GPease
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\join.txt ===
The FM cannot init groups/resources until the API is online.

The DM expects FM Phase1 init to create the quorum resource.

What happens if remote node goes down at various points along this path?

Order of events is...

Phase 1:
    Petition Other Node to Join

    NmJoin happens

    DmJoin happens
        - Registers with the gum and syncs database

    ApiInitPhase 1
        - Read-only access allowed to DM after this point


    FmInitPhase1
        - Performs synchronized join with GUM layer
        - Must build the quorum resource for DM layer below
            - Builds skeletal groups/resources (especially quorum resource)
        - Gets current state (owner and state) about all groups/resources

 	DmUpdateJoin
		-  hooks in callbacks for quorum notification and node events.

    NmJoinComplete
        - The node is now fully online

Phase 2:
    ApiInitPhase2
        - API is now fully online

    FmInitPhase2
        - Complete building all Groups/Resources
        - Setup all state info retrieved from FmInitPhase1
        - FM is now officially online
        - Pull all groups that should be run on the local node
        - Signal events for all groups/resources


FORM
Phase 1

	DmForm -
		- Registers with gum.

	FmGetQuorumResource
		- gets the quorum resource and arbitrates for it.

	DmUpdateFormNewCluter-
		hooks in callbacks for quorum notifications,node events. This must
		be done before FmInitPhase1.

    FmInitPhase1
        - Performs synchronized join with GUM layer
        - Must build the quorum resource for DM layer below
            - Builds skeletal groups/resources (especially quorum resource)
        - Gets current state (owner and state) about all groups/resources

    DmRollChanges
        - quorum resource is brought online
		- dm layer waits on notification, and when online, 
			changes in the quorum logs are applied.. for logging purposes.
		- Must be done after FmInitPhase1.

Problem:

    - if a node crashes after FmInitPhase1 but before FmInitPhase2 then the
      state info retrieved in Phase1 is stale

	- Resources must be cleaned  appropriately no matter where the failure occurs.

	- A join must convert to form appropriately.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\ipaddr.txt ===
Static IP Address Assignments

netmask   255.255.248.0
gateway   172.31.248.1
wins      172.31.248.9 and 10; 157.55.254.201
dns       157.55.254.211; 157.55.254.212

172.31.248.151    mikemas
172.31.248.152    mikemas
172.31.248.153    mikemas
172.31.248.154    mikemas
172.31.248.155    rodga
172.31.248.156    rodga
172.31.248.157    rodga
172.31.248.158
172.31.248.159    davidp
172.31.248.160    davidp
172.31.248.161    davidp
172.31.248.162    davidp
172.31.248.163    sunitas
172.31.248.164    sunitas
172.31.248.165    sunitas
172.31.248.166    sunitas
172.31.248.167    charlwi
172.31.248.168    charlwi
172.31.248.169    charlwi
172.31.248.170    charlwi
172.31.248.173    daviddio
172.31.248.174    daviddio
172.31.248.175    daviddio
172.31.248.176    daviddio
172.31.248.177    glennp
172.31.248.178    glennp
172.31.248.179    glennp
172.31.248.180    glennp
172.31.248.181	  conorm
172.31.248.182	  conorm
172.31.248.183	  conorm
172.31.248.191    GalenB
172.31.248.192    GalenB
172.31.248.193    GalenB
172.31.248.194    GalenB
172.31.248.195    GalenB
172.31.248.196    vvasu
172.31.248.197    vvasu
172.31.248.198    vvasu
172.31.248.199    vvasu
172.31.248.200    IanServ
172.31.248.201    IanServ
172.31.248.202    IanServ
172.31.248.203    IanServ
172.31.248.204    
172.31.248.205    
172.31.248.206    
172.31.248.207    
172.31.248.208    
172.31.248.209    
172.31.248.210    
172.31.248.211    
172.31.248.212    chitturs
172.31.248.213    chitturs
172.31.248.214    chitturs
172.31.248.215    ahmedm
172.31.248.216    ahmedm
172.31.248.217    ahmedm
172.31.248.218    ahmedm
172.31.248.219    
172.31.248.220    
172.31.248.221    vvasu
172.31.248.222    chitturs
172.31.248.223    gorn
172.31.248.224    gorn
172.31.248.225    gorn
172.31.248.226    gorn
172.31.248.227	  
172.31.248.228	  
172.31.248.229	  
172.31.248.230    
172.31.248.231
172.31.248.232
172.31.248.233
172.31.248.234
172.31.248.235
172.31.248.236
172.31.248.237
172.31.248.238
172.31.248.239
172.31.248.240    Ianserv  sparc
172.31.248.241    Ianserv  sparc
172.31.248.242    Ianserv  sparc
172.31.248.243    Ianserv  sparc
172.31.248.244
172.31.248.245
172.31.248.246
172.31.248.247    stevedz
172.31.248.248    stevedz
172.31.248.249    stevedz
172.31.248.250    stevedz

DRIVER LAB ADDRESSES

netmask 255.255.240.0

172.31.56.24
172.31.56.25

=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the Windows NT System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;
;  NOTE:  Unused areas are marked as _FREE_.

clusres    0x79000000  0x00080000
iisclus3   0x79000000  0x00010000
resutils   0x79000000  0x00020000
wshclus    0x79000000  0x00010000
rpcltccl   0x79000000  0x00010000
rpcltscl   0x79000000  0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\placefil.txt ===
;
; Microsoft Cluster Server binaries
;

clussvc.exe     retail
resrcmon.exe    retail
clussprt.dll    retail
clusprxy.exe    retail
clusres.dll     retail
clusdisk.sys    retail
cluster.inf     retail
cluscfg.exe     retail
cluscfg.hlp     retail
timeserv.exe    retail
clusnet.sys     retail
wshclus.dll     retail

;
; Cluster Management
;

CluAdmin.exe    retail
CluAdmEx.dll    retail
ClAdmWiz.dll    retail
CluAdMMC.dll    retail
ClusMMC.dll     retail
DebugEx.dll     retail
CluAdmin.cnt    retail
CluAdmin.hlp    retail

;
; Cluster Configuration Server
;
ClCfgSrv.dll    retail
ClCfgSrv.inf    retail

;
; Cluster Service WMI Provider
;
ClusWMI.dll     retail
ClusWMI.mof     retail

;
; Cluster Componentization
;
MSCS_Cluster_Management_Support_{E106EAC5-51A5-4C0A-9B53-ABD61851C5A8}.sld mantis
MSCS_Cluster_Management_Tools_{DC33DD24-C569-4063-A6FC-D53DA76A898A}.sld mantis
MSCS_Clustering_Service_{2043E5C0-9C02-4202-B5DB-FFD33722DC3B}.sld mantis

;
; Microsoft Cluster Server binaries that are distributed on WKS, SRV, and ENT
;

clusapi.dll     retail
resutils.dll    retail
cluster.exe     retail
msclus.dll      retail

; These files are to be distributed on Enterprise only.

clusocm.dll     retail
clusocm.inf     retail

;
; DHCP and WINS DLLs that will eventually be owned by that team.
;
clnetres.dll    retail
clnetrex.dll    retail

; The following files are to be distributed on Enterprise only. It is to be
; installed during an UPGRADE from NT 4.0. It will become obsolete with the
; availability of an IIS Virtual Root resource DLL that works with IIS 5.

iisclus3.dll    retail
iisclex3.dll    retail

; The following files are required for the Compatibility Check performed by
; winnt32.

ClusComp.dll    winnt32\winntupg ; Cluster Compatibility DLL
; moved to \nt\MergedComponents\SetupInfs\compdata ClusComp.htm    winnt32\CompData ; Cluster Compatibility message in HTML format
; moved to \nt\MergedComponents\SetupInfs\compdata ClusComp.txt    winnt32\CompData ; Cluster Compatibility message in text format

; clusoc.inf is a stand in for sysoc.inf when installing private cluster files.
; It is not distributed on any NT product.

clusoc.inf      retail

; clusoc.txt is used by Configure Your Server to install only the Clustering
; Service optional component.

clusoc.txt      retail

xchgclus.dll    cluster\dump

;
; NT Cluster test files
;

setuptst.bat    cluster\support
castest.bat     cluster\support
cluadms.pcd     cluster\support
english.cas     cluster\support
casread.txt     cluster\support
mtrun.exe       cluster\support
mstest40.dll    cluster\support
msvcrt40.dll    cluster\support
ntlog.dll       cluster\support
wpbug.txt       cluster\support
kdcn.dll        cluster\support
kdcd.dll        cluster\support
clusexts.dll    cluster\support
leaks.dll       cluster\support
cluspw.exe      cluster\support
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\admin\cluadmex\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : CluAdmEx
========================================================================


AppWizard has created this Microsoft Windows NT Cluster Administrator
Extension DLL for you.  This DLL not only demonstrates the basics of using
the Microsoft Foundation classes but is also a starting point for writing
your DLL.

This file contains a summary of what you will find in each of the files that
make up your Microsoft Windows NT Cluster Administrator Extension DLL.

CluAdmEx.h
    This is the main header file for the DLL.  It declares the
    CCluAdmExApp class.

CluAdmEx.cpp
    This is the main DLL source file.  It contains the class CCluAdmExApp.
    It also contains the OLE entry points required of inproc servers.

CluAdmEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\CluAdmEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

CluAdmEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

CluAdmEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

Extensn.h
    This is the header file which defines the classes which implement the
    IShellExtInit and IShellPropSheetExt interfaces, which are the interfaces
    used by the Microsoft Windows NT Cluster Administrator program for adding
    property pages.  Modify the CCluAdminExtension::XPropSheetExt::AddPages
    method to add new pages.  It defines the CCluAdminExtension class.

Extensn.cpp
    This is the source file which implements the CCluAdminExtension class.

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This the source file which implements the CBasePropertyPage class.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named CluAdmEx.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CResourceParamsPage class.

ResProp.cpp
    This is the source file which implements the CResourceParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\admin\cluadmin\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : CluAdmin
========================================================================


AppWizard has created this CluAdmin application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your CluAdmin application.

CluAdmin.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CClusterAdminApp application class.

CluAdmin.cpp
    This is the main application source file that contains the application
    class CClusterAdminApp.

CluAdmin.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\CluAdmin.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file CluAdmin.rc.

res\CluAdmin.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

CluAdmin.reg
    This is an example .REG file that shows you the kind of registration
    settings the framework will set for you.  You can use this as a .REG
    file to go along with your application or just delete it and rely
    on the default RegisterShellFileTypes registration.

CluAdmin.odl
    This file contains the Object Description Language source code for the
    type library of your application.

CluAdmin.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the
    CMainFrame class.  Edit this toolbar bitmap along with the
    array in MainFrm.cpp to add more toolbar buttons.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

ClusDoc.h, ClusDoc.cpp - the document
    These files contain your CClusterDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CClusterDoc::Serialize).

TreeView.h, TreeView.cpp - the view of the document
    These files contain your CClusterTreeView class.
    CClusterTreeView objects are used to view CClusterDoc objects.

res\ClusDoc.ico
    This is an icon file, which is used as the icon for MDI child windows
    for the CClusterDoc class.  This icon is included by the main
    resource file CluAdmin.rc.

/////////////////////////////////////////////////////////////////////////////

Help Support:

MakeHelp.bat
    Use this batch file to create your application's Help file, CluAdmin.hLP.

CluAdmin.hpj
    This file is the Help Project file used by the Help compiler to create
    your application's Help file.

hlp\*.bmp
    These are bitmap files required by the standard Help file topics for
    Microsoft Foundation Class Library standard commands.

hlp\*.rtf
    This file contains the standard help topics for standard MFC
    commands and screen objects.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named CluAdmin.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\admin\cluadmin\hlp\afxcore.rtf ===
{\rtf1\ansi \deff0\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;} {\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica{\*\falt Arial};} {\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fmodern\fcharset0\fprq1 Fixedsys;}{\f15\fmodern\fcharset255\fprq1 Terminal;} {\f16\fswiss\fcharset0\fprq2 Small Fonts;}{\f17\fswiss\fcharset0\fprq2 MS Dialog;}{\f18\fswiss\fcharset0\fprq2 MS Dialog Light;}{\f19\fswiss\fcharset0\fprq2 MS SystemEx;}{\f20\fnil\fcharset2\fprq2 Marlett;}{\f21\fnil\fcharset2\fprq2 Wingdings;} {\f22\fmodern\fcharset2\fprq1 MS LineDraw;}{\f23\fdecor\fcharset0\fprq2 Algerian;}{\f24\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f25\froman\fcharset0\fprq2 Bookman Old Style;}{\f26\fdecor\fcharset0\fprq2 Braggadocio;} {\f27\fswiss\fcharset0\fprq2 Britannic Bold;}{\f28\fscript\fcharset0\fprq2 Brush Script MT;}{\f29\fswiss\fcharset0\fprq2 Century Gothic;}{\f30\fdecor\fcharset0\fprq2 Colonna MT;}{\f31\fdecor\fcharset0\fprq2 Desdemona;} {\f32\froman\fcharset0\fprq2 Footlight MT Light;}{\f33\fswiss\fcharset0\fprq2 Impact;}{\f34\fdecor\fcharset0\fprq2 Kino MT;}{\f35\froman\fcharset0\fprq2 Wide Latin;}{\f36\fscript\fcharset0\fprq2 Matura MT Script Capitals;} {\f37\fdecor\fcharset0\fprq2 Playbill;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128; \red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar \b\f2\ul  \sbasedon0\snext0 heading 1;}{\s2\sb120\nowidctlpar \b\f2 \sbasedon0\snext0 heading 2;}{\s3\li360\nowidctlpar \b \sbasedon0\snext17 heading 3;}{\s4\li360\nowidctlpar \ul \sbasedon0\snext17 heading 4;}{\s5\li720\nowidctlpar \b\fs20 \sbasedon0\snext17  heading 5;}{\s6\li720\nowidctlpar \fs20\ul \sbasedon0\snext17 heading 6;}{\s7\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 7;}{\s8\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 8;}{\s9\li720\nowidctlpar \i\fs20 \sbasedon0\snext17  heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\f0\fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s16\nowidctlpar \fs20 \sbasedon0\snext16 footnote text;}{\s17\li720\nowidctlpar \fs20 \sbasedon0\snext17 Normal Indent;}{ \s18\fi-240\li480\sb80\nowidctlpar\tx480 \f9 \sbasedon0\snext18 nscba;}{\s19\fi-240\li240\sa20\nowidctlpar \f9 \sbasedon0\snext19 j;}{\s20\li480\sa20\nowidctlpar \f9 \sbasedon0\snext20 ij;}{\s21\sb80\sa20\nowidctlpar \f9 \sbasedon0\snext21 btb;}{ \s22\fi-240\li2400\sb20\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext22 ctcb;}{\s23\fi-240\li480\sa40\nowidctlpar\tx480 \f9 \sbasedon0\snext23 ns;}{\s24\sa120\nowidctlpar \f9\fs28 \sbasedon0\snext24 TT;}{\s25\fi-240\li2400\sa20\nowidctlpar \f9  \sbasedon0\snext25 crtj;}{\s26\fi-240\li480\nowidctlpar\tx480 \f9 \sbasedon0\snext26 nsca;}{\s27\sa20\nowidctlpar \f9 \sbasedon0\snext27 bt;}{\s28\li240\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext28 Hf;}{\s29\li240\sb120\sa40\nowidctlpar \f9  \sbasedon0\snext29 Hs;}{\s30\li480\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext30 RT;}{\s31\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160 \f9 \sbasedon0\snext31 c;}{\s32\li2160\sa20\nowidctlpar \f9 \sbasedon0\snext32 ct;}{\s33\li240\sa20\nowidctlpar \f9  \sbasedon0\snext33 it;}{\s34\li480\nowidctlpar \f9\fs20 \sbasedon0\snext34 nsct;}{\s35\fi-160\li400\sb80\sa40\nowidctlpar \f9 \sbasedon0\snext35 nscb;}{\s36\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f9  \sbasedon0\snext36 HC2;}{\s37\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880 \f9 \sbasedon0\snext37 C2;}{\s38\fi-240\li2400\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext38 ctc;}{\s39\li2160\sb160\nowidctlpar \f9 \sbasedon0\snext39 crt;}{ \s40\li480\sb20\sa40\nowidctlpar \f9 \sbasedon0\snext40 or;}{\s41\fi-259\li360\sb40\sa40\nowidctlpar\tx360 \f7\fs20 \sbasedon0\snext41 Ln1;}{\s42\li115\sb80\sa80\nowidctlpar \f7\fs20 \sbasedon0\snext0 *Intro;}{\s43\li115\sb80\sa80\keepn\nowidctlpar \b\f7  \sbasedon3\snext42 *Title;}{\s44\fi-245\li360\sb80\nowidctlpar \f7\fs20 \snext44 *Jl;}{\s45\li360\sb40\sa40\nowidctlpar \f7\fs20 \snext0 Lp1;}{\s46\fi-1800\li1915\sb60\sl-240\slmult0\nowidctlpar\tx1915 \f7\fs20 \sbasedon0\snext46 Tph;}{ \s47\li115\sb120\sa80\nowidctlpar \b\f7\fs20 \snext41 Proch;}{\*\cs48 \additive\super \sbasedon10 endnote reference;}}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr11\min4}{\version1}{\edmins1}{\nofpages0} {\nofwords0}{\nofchars0}{\vern49221}}\widowctrl\ftnbj\aenddoc\hyphcaps0 \fet0\sectd \linex576\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3 \pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}} {\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \sl240\slmult0\widctlpar  \fs20 {\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} main_index}}{\fs16\up6   }{\b\f2\fs24\up6 <<YourApp>> Help Index}{\b\f2  \par }{\f9  \par }{\b\f2 How To ... \par }{\f2 \tab <<add your application-specific "how to" topics here>>}{\f9\ulw  \par  \par }{\b\f2 Commands \par }{\f2 \tab }{\f2\uldb File menu}{\v\f2 menu_file}{\f2  \par \tab }{\f2\uldb Edit menu}{\v\f2 menu_edit}{\f2\uldb  \par }{\f2 \tab }{\f2\uldb Record menu}{\v\f2 menu_record}{\f2  \par \tab }{\f2\uldb View menu}{\v\f2 menu_view}{\f2  \par \tab }{\f2\uldb Window menu}{\v\f2 menu_window}{\f2  \par \tab }{\f2\uldb Help menu}{\v\f2 menu_help}{\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_file}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar  \fs20 {\cs15\fs16\up6 $} File menu commands}}{\f2  }{\b\f2 File menu commands}{\f2  \par  \par The File menu offers the following commands: \par  \par }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb New}{\v\f2 HID_FILE_NEW}{\f2 \cell Creates a new document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622 \pard  \sl240\slmult0\widctlpar\intbl {\f2\uldb Open}{\v\f2 HID_FILE_OPEN}{\f2\uldb \cell }{\f2 Opens an existing document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Close}{\v\f2 HID_FILE_CLOSE}{\f2\uldb \cell }{\f2  Closes an opened document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Save}{\v\f2 HID_FILE_SAVE}{\f2\uldb \cell }{\f2 Saves an opened document using the same file name.\cell }\pard \widctlpar\intbl {\f2 \row  }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Save As}{\v\f2 HID_FILE_SAVE_AS}{\f2\uldb \cell }{\f2 Saves an opened document to a specified file name.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print}{\v\f2  HID_FILE_PRINT}{\f2\uldb \cell }{\f2 Prints a document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print Preview}{\v\f2 HID_FILE_PRINT_PREVIEW}{\f2\uldb \cell }{\f2  Displays the document on the screen as it would appear printed.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print Setup}{\v\f2 HID_FILE_PRINT_SETUP}{\f2\uldb \cell }{\f2 Selects a printer and printer connection. \cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Send...}{\v\f2 HID_FILE_SEND_MAIL}{\f2\uldb \cell }{\f2 Sends the active document through electronic mail.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1302\cellx8622 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Exit}{\v\f2 HID_APP_EXIT}{\f2 \tab  \par }{\f2\uldb \cell }{\f2 Exits <<YourApp>>.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_edit}}{\b\f2 Edit menu commands}{\f2  \par  \par The Edit menu offers the following commands: \par }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Undo}{\v\f2 HID_EDIT_UNDO}{\f2 \cell Reverse previous editing operation.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497 \cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Cut}{\v\f2 HID_EDIT_CUT}{\f2\uldb \cell }{\f2 Deletes data from the document and moves it to the clipboard.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb  Copy}{\v\f2 HID_EDIT_COPY}{\f2\uldb \cell }{\f2 Copies data from the document to the clipboard.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Paste}{\v\f2 HID_EDIT_PASTE}{\f2\uldb \cell }{\f2  Pastes data from the clipboard into the document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Paste Link}{\v\f2 HID_EDIT_PASTE_LINK}{\f2\uldb \cell }{\f2  Pastes from the clipboard a link to data in another application.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Insert New Object}{\v\f2\uldb HID_OLE_INSERT_NEW}{\f2\uldb \cell }{\f2  Inserts and embeds an object, such as a chart or an equation in a document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Links}{\v\f2 HID_OLE_EDIT_LINKS}{ \f2\uldb \cell }{\f2 List and edit links to embedded documents.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \tab \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_view}}{\b\f2 View menu commands}{\f2  \par  \par The View menu offers the following commands: \par  \par }\trowd \trgaph108\trleft-108 \cellx1272\cellx7452 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Toolbar}{\v\f2 HID_VIEW_TOOLBAR}{\f2\uldb \cell }{\f2 Shows or hides the toolbar.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108  \cellx1272\cellx7452 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Status Bar}{\v\f2 HID_VIEW_STATUS_BAR}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Shows or hides the status bar. \par }\pard \sl240\slmult0\widctlpar\intbl {\f2 \cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_window}}{\b\f2  Window menu commands}{\f2  \par  \par The Window menu offers the following commands, which enable you to arrange multiple views of multiple documents in the application window: \par  \par }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb New Window}{\v\f2 HID_WINDOW_NEW}{\f2\uldb \cell }{\f2 Creates a new window that views the same document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Cascade}{\v\f2 HID_WINDOW_CASCADE}{\f2\uldb \cell }{\f2 Arranges windows in an overlapped fashion.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0 \widctlpar\intbl {\f2\uldb Tile}{\v\f2 HID_WINDOW_TILE}{\f2\uldb \cell }{\f2 Arranges windows in non-overlapped tiles.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Arrange Icons}{\v\f2 HID_WINDOW_ARRANGE}{ \f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Arranges icons of closed windows.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Split}{\v\f2 HID_WINDOW_SPLIT}{\f2\uldb \cell }\pard  \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Split the active window into panes.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Window 1, 2, ...}{\v\f2  HID_WINDOW_ALL}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Goes to specified window.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_help}}{\b\f2 Help menu commands}{\f2  \par  \par The Help menu offers the following commands, which provide you assistance with this application:  \par  \par }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Help Topics}{\v\f2 HID_HELP_INDEX}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2  Offers you an index to topics on which you can get help.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb About}{\v\f2 HID_APP_ABOUT}{\f2\uldb \cell }\pard  \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Displays the version number of this application.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_NEW}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File New command}}{\f2  }{\b\f2 New command (File menu)}{\f2  \par  \par Use this command to create a new document in <<YourApp>>.  Select the type of new file you want to create in the }{\f2\uldb File New dialog box}{\v AFX_HIDD_NEWTYPEDLG}.  {\f2  << Remove previous sentence if your application supports only one document type. >> \par  \par You can open an existing document with the }{\f2\uldb Open command}{\v HID_FILE_OPEN}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc filenew.bmp\} \par Keys:\tab CTRL+N \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_NEWTYPEDLG}}{\b\f2 File New dialog box \par }{\f2  \par << Delete this help topic if your application supports only one document type. >> \par  \par Specify the type of document you wish to create: \par << List your application's document types here >>\page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_OPEN}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{ \cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Open command}}{\f2  }{\b\f2 Open command (File menu)}{\f2  \par  \par Use this command to open an existing document in a new window.  You can open multiple documents at once.  Use the Window menu to switch among the multiple open documents.  See }{\f2\uldb Window 1, 2, ... command}{\v\f2 HID_WINDOW_ALL}{\f2 . \par  \par You can create new documents with the }{\f2\uldb New command}{\v HID_FILE_NEW}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc fileopen.bmp\} \par Keys:\tab CTRL+O \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FILEOPEN}}{\b\f2 File Open dialog box \par }{\f2  \par The following options allow you to specify which file to open: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 File Name \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Type or select the filename you want to open.  This box lists files with the extension you select in the List Files of Type box.  \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 List Files of Type \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the type of file you want to open: \par << List your application's file types here. >> \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Drives \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the drive in which <<YourApp>> stores the file that you want to open.  \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Directories \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the directory in which <<YourApp>> stores the file that you want to open. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Network... \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Choose this button to connect to a network location, assigning it a new drive letter.  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_CLOSE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Close command}}{\f2  }{\b\f2 Close command (File menu)}{\f2  \par  \par Use this command to close all windows containing the active document.  <<YourApp>> suggests that you save changes to your document before you close it.  If you close a document without saving, you lose all changes made since the last time you saved it.  B efore closing an untitled document, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  and suggests that you name and save the document. \par  \par You can also close a document by using the Close icon on the document's window, as shown below: \par \{bml scmenu.bmp\} \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SAVE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar  \fs20 {\cs15\fs16\up6 $} File Save command}}{\f2  }{\b\f2 Save command (File menu)}{\f2  \par  \par Use this command to save the active document to its current name and directory.  When you save a document for the first time, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2   so you can name your document.  If you want to change the name and directory of an existing document before you save it, choose the }{\f2\uldb Save As command}{\v HID_FILE_SAVE_AS}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc filesave.bmp\} \par Keys:\tab CTRL+S \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SAVE_AS}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain  \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Save As command}}{\f2  }{\b\f2 Save As command (File menu)}{\f2  \par  \par Use this command to save and name the active document.  <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  so you can name your document.   \par  \par To save a document with its existing name and directory, use the }{\f2\uldb Save command}{\v HID_FILE_SAVE}{\f2 . \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SEND_MAIL}}{\b\f2 Send command (File menu)}{\f2  \par  \par Use this command to send the active document through electronic mail.  This command presents a mail window with the active document attached to it.  You may then fill out the To: field, Subject: field, etc., and add text to the body of the message if you  wish.  When you are finished you may click the "Send" button to send the message. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FILESAVE}}{\b\f2 File Save As dialog box \par }{\f2  \par The following options allow you to specify the name and location of the file you're about to save: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 File Name \par }\pard \li360\sl240\slmult0\widctlpar {\f2  Type a new filename to save a document with a different name.  A filename can contain up to eight characters and an extension of up to three characters.  <<YourApp>> adds the extension you specify in the Save File As Type box. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Drives \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the drive in which you want to store the document. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Directories \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the directory in which you want to store the document. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Network... \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Choose this button to connect to a network location, assigning it a new drive letter.  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 << Add other File Save As dialog box options depending on which ones your application chooses via the OFN_ flags of the OPENFILENAME structure used by the CFileDialog. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_MRU_FILE1}}{\f2  }{\cs15\fs16\up6 K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote  \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File 1, 2, 3, 4 command}}{\f2  }{\b\f2 1, 2, 3, 4 command (File menu)}{\f2  \par  \par Use the numbers and filenames listed at the bottom of the File menu to open the last four documents you closed.  Choose the number that corresponds with the document you want to open. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_APP_EXIT}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} exit}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 { \cs15\fs16\up6 $} File Exit command}}{\f2  }{\b\f2 Exit command (File menu)}{\f2  \par  \par Use this command to end your <<YourApp>> session.  You can also use the Close command on the application Control menu.  <<YourApp>> prompts you to save documents with unsaved changes. \par } \par {\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Double-click the application's Control menu button. \par \tab \{bmc appexit.bmp\} \par Keys:\tab ALT+F4 \par }\pard \sl240\slmult0\widctlpar \page {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_UNDO}}{\b\f2 Undo/Can't Undo command (Edit menu)}{\f2  \par  \par << Your application's user interface for Undo may differ from the one described below.  Modify this help text accordingly. >> \par  \par Use this command to reverse the last editing action, if possible.   The name of the command changes, depending on what the last action was.  The Undo command changes to Can't Undo on the menu if you cannot reverse your last action. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editundo.bmp\} \par Keys:\tab CTRL+Z or \par \tab ALT-BACKSPACE\tab  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REDO}}{\b\f2 Redo command (Edit menu)}{\f2  \par  \par << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CUT}}{\b\f2 Cut command (Edit menu)}{\f2  \par  \par Use this command to remove the currently selected data from the document and put it on the clipboard.  This command is unavailable if there is no data currently selected. \par  \par Cutting data to the clipboard replaces the contents previously stored there. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editcut.bmp\} \par Keys:\tab CTRL+X \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_COPY}}{\b\f2 Copy command (Edit menu)}{\f2  \par  \par Use this command to copy selected data onto the clipboard.  This command is unavailable if there is no data currently selected. \par  \par Copying data to the clipboard replaces the contents previously stored there. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editcopy.bmp\} \par Keys:\tab CTRL+C \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_PASTE}}{\b\f2 Paste command (Edit menu)}{\f2  \par  \par Use this command to insert a copy of the clipboard contents at the insertion point.  This command is unavailable if the clipboard is empty. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editpast.bmp\} \par Keys:\tab CTRL+V \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_TOOLBAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} toolbar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20  {\cs15\fs16\up6 $} View Toolbar command}}{\f2  }{\b\f2 Toolbar command (View menu)}{\f2  \par  \par Use this command to display and hide the Toolbar, which includes buttons for some of the most common commands in <<YourApp>>, such as File Open.  A check mark appears next to the menu item when the Toolbar is displayed. \par  \par See }{\f2\uldb Toolbar}{\v\f2 AFX_HIDW_TOOLBAR}{\f2  for help on using the toolbar. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDW_TOOLBAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} toolbar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20  {\cs15\fs16\up6 $} toolbar}}{\f2  }{\b\f2 Toolbar}{\f2  \par \{bml hlptbar.bmp\} \par  \par The toolbar is displayed across the top of the application window, below the menu bar.  The toolbar provides quick mouse access to many tools used in <<YourApp>>, \par  \par To hide or display the Toolbar, choose Toolbar from the View menu (ALT, V, T). \par  \par << Add or remove toolbar buttons from the list below according to which ones your application offers. >> \par  \par }\pard \sl240\slmult0\widctlpar\brdrb\brdrs\brdrw15\brsp20 \tx1080 {\b\f2 Click\tab To}{\f2  \par }\pard \fi-1080\li1080\sl240\slmult0\widctlpar\tx1080 {\f2 \{bmc filenew.bmp\}\tab Open a new document. \par  \par \{bmc fileopen.bmp\}\tab Open an existing document.  <<YourApp>> displays the Open dialog box, in which you can locate and open the desired file. \par  \par \{bmc filesave.bmp\}\tab Save the active document or template with its current name.  If you have not named the document, <<YourApp>> displays the Save As dialog box. \par  \par \{bmc fileprnt.bmp\}\tab Print the active document. \par  \par \{bmc editcut.bmp\}\tab Remove selected data from the document and stores it on the clipboard. \par  \par \{bmc editcopy.bmp\}\tab Copy the selection to the clipboard. \par  \par \{bmc editpast.bmp\}\tab Insert the contents of the clipboard at the insertion point. \par  \par \{bmc editundo.bmp\}\tab Reverse the last editing.  Note:  You cannot undo some actions. \par  \par \{bmc recfirst.bmp\}\tab Go to the first record in the current selection. \par  \par \{bmc recprev.bmp\}\tab Go to the previous record in the current selection. \par  \par \{bmc recnext.bmp\}\tab Go to the next record in the current selection. \par  \par \{bmc reclast.bmp\}\tab Go to the last record in the current selection. \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_STATUS_BAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} status bar}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} View Status Bar Command}}{\b\f2 Status Bar command (View menu) \par }{\f2  \par Use this command to display and hide the Status Bar, which describes the action to be executed by the selected menu item or depressed toolbar button, and keyboard latch state. A check mark appears next to the menu item when the Status Bar is displayed. \par  \par See }{\f2\uldb Status Bar}{\v\f2 AFX_HIDW_STATUS_BAR}{\f2  for help on using the status bar. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDW_STATUS_BAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} status bar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \sl240\slmult0 \widctlpar \fs20 {\cs15\fs16\up6 $} status bar}}{\b\f2 Status Bar}{\f2  \par \{bml hlpsbar.bmp\} \par  \par The status bar is displayed at the bottom of the <<YourApp>> window.  To display or hide the status bar, use the Status Bar command in the View menu. \par  \par The left area of the status bar describes actions of menu items as you use the arrow keys to navigate through menus.  This area similarly shows messages that describe the actions of toolbar buttons as you depress them, before releasing them.  If after vie wing the description of the toolbar button command you wish not to execute the command, then release the mouse button while the pointer is off the toolbar button. \par  \par The right areas of the status bar indicate which of the following keys are latched down: \par  \par }\pard \sl240\slmult0\widctlpar\tx1440 {\b\f2 Indicator\tab Description}{\f2  \par }\pard \fi-1440\li1440\sa120\sl240\slmult0\widctlpar\tx1440 {\f2 CAP\tab The Caps Lock key is latched down. \par NUM\tab The Num Lock key is latched down. \par SCRL\tab The Scroll Lock key is latched down. \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_NEW}}{\b\f2 New command (Window menu)}{\f2  \par  \par Use this command to open a new window with the same contents as the act ive window.  You can open multiple document windows to display different parts or views of a document at the same time.  If you change the contents in one window, all other windows containing the same document reflect those changes.  When you open a new w indow, it becomes the active window and is displayed on top of all other open windows. \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_CASCADE}}{\b\f2 Cascade command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows in an overlapped fashion.  \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE}}{\b\f2 Tile command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows in a non-overlapped fashion. \par  \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE_HORZ}}{\b\f2 Tile Horizontal command (Window menu)}{\f2  \par  \par Use this command to vertically arrange multiple opened windows in a non-overlapped fashion. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE_VERT}}{\b\f2 Tile Vertical command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows side by side. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_ARRANGE}}{\b\f2 Window Arrange Icons Command}{\f2  \par  \par Use this command to arrange the icons for minimized windows at the bottom of the main window.  If there is an open document window at the bottom of the main window, then some or all of the icons may not be visible because they will be underneath this docu ment window.\page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_SPLIT}}{\b\f2 Split Command (Window menu) \par  \par }{\f2 Use this command to split the active window into panes.  You may then use the mouse or the keyboard arrows to move the splitter bars.  When you are finished, press the mouse button or enter to le ave the splitter bars in their new location.  Pressing escape keeps the splitter bars in their original location.  << In a single document interface application, this command will appear on the View menu. >>\page }{\cs15\fs16\up6 #{\footnote \pard\plain  \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_ALL}}{\b\f2 1, 2, ... command (Window menu)}{\f2  \par  \par <<YourApp>> displays a list of currently open document windows at the bottom of the Window menu.  A check mark appears in front of the document name of the active window.  Choose a document from this list to make its window active.   \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HELP_INDEX}}{\b\f2 Index command (Help menu) \par }{\f2  \par Use this command to display the opening screen of Help.  From the opening screen, you can jump to step-by-step instructions for using <<YourApp>> and various types of reference information.   \par  \par Once you open Help, you can click the Contents button whenever you want to return to the opening screen. \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HELP_USING}}{\b\f2 Using Help command (Help menu) \par }{\f2  \par Use this command for instructions about using Help. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_APP_ABOUT}}{\b\f2 About command (Help menu) \par }{\f2  \par Use this command to display the copyright notice and version number of your copy of <<YourApp>>. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_CONTEXT_HELP}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Help Using Help Command}}{\b\f2 Context Help command  \par }{\f2 \{bml curhelp.bmp\} \par  \par Use the Context Help command to obtain help on some portion of <<YourApp>>.  When you choose the Toolbar's Context Help button, the mouse pointer will change to an arrow and question mark.  Then click somewhere in the <<YourApp>> window, such as another T oolbar button.  The Help topic will be shown for the item you clicked. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab SHIFT+F1 \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HT_CAPTION}}{\b\f2 Title Bar} \par  \par {\f2 << Show your application's title bar here. >> \par  \par }\pard\plain \s42\fi-360\li360\widctlpar\tx360 \f7\fs20 {\f2 The title bar is located along the top of a window.  It contains the name of the application and document. \par }\pard\plain \widctlpar \fs20 {\f2  \par }\pard\plain \s42\fi-360\li360\widctlpar\tx360 \f7\fs20 {\f2 To move the window, drag the title bar.  Note: You can also move dialog boxes by dragging their title bars. \par }\pard\plain \widctlpar \fs20 {\f2  \par }\pard \fi-360\li360\widctlpar\tx360 {\f2 A title bar may contain the following elements: \par }\pard\plain \s41\fi-360\li360\sb40\sa40\widctlpar\tx360 \f7\fs20 {\f2 \{bmc bullet.bmp\}\tab Application Control-menu button \par \{bmc bullet.bmp\}\tab Document Control-menu button \par \{bmc bullet.bmp\}\tab Maximize button \par \{bmc bullet.bmp\}\tab Minimize button \par \{bmc bullet.bmp\}\tab Name of the application \par \{bmc bullet.bmp\}\tab Name of the document \par \{bmc bullet.bmp\}\tab Restore button \par }\pard\plain \sl240\slmult0\widctlpar \fs20 {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} scrollbars}}{\f2  }{\b\f2 Scroll bars}{\f2  \par  \par Displayed at the right and bottom edges of the document window.  The scroll boxes inside the scroll bars indicate your vertical and horizontal location in the document.  You can use the mouse to scroll to other parts of the document. \par  \par << Describe the actions of the various parts of the scrollbar, according to how they behave in your application. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_SIZE}}{\b\f2 Size command (System menu)} \par  \par {\f2 Use this command to display a four-headed arrow so you can size the active window with the arrow keys. \par \{bml curarw4.bmp\} \par  \par After the pointer changes to the four-headed arrow: \par }\pard \fi-360\li360\sb60\sl240\slmult0\widctlpar {\f2 1.\tab Press one of the DIRECTION keys (left, right, up, or down arrow key) to move the pointer to the border you want to move.   \par 2.\tab Press a DIRECTION key to move the border. \par 3.\tab Press ENTER when the window is the size you want. \par }\pard \sl240\slmult0\widctlpar {\f2  \par Note:  This command is unavailable if you maximize the window. \par } \par {\b\f2 Shortcut}{\b  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Drag the size bars at the corners or edges of the window. \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MOVE}}{\b\f2 Move command (Control menu) \par }{\f2  \par Use this command to display a four-headed arrow so you can move the active window or dialog box with the arrow keys. \par \{bmc curarw4.bmp\} \par  \par Note:  This command is unavailable if you maximize the window. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+F7 \par  \par }\pard \sl240\slmult0\widctlpar\tx1440 {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MINIMIZE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} System Minimize Command} }{\b\f2 Minimize command (application Control menu) \par }\pard \sl240\slmult0\widctlpar {\f2  \par Use this command to reduce the <<YourApp>> window to an icon. \par }\pard \fi-360\li360\sl240\slmult0\widctlpar {\b  \par }{\b\f2 Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Click the minimize icon \{bmc scmin.bmp\} on the title bar. \par Keys:\tab ALT+F9 \par }\pard \fi-360\li1080\sl240\slmult0\widctlpar  \par \pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MAXIMIZE}}{\b\f2 Maximize command (System menu) \par }{\f2  \par Use this command to enlarge the active window to fill the available space. \par }\pard \fi-360\li360\sl240\slmult0\widctlpar {\b\f2  \par Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Click the maximize icon \{bmc scmax.bmp\} on the title bar; or double-click the title bar. \par Keys:\tab CTRL+F10 enlarges a document window. \par }\pard \fi-360\li1080\sl240\slmult0\widctlpar  \par \pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_NEXTWINDOW}}{\b\f2 Next Window command (document Control menu) \par }{\f2  \par Use this command to switch to the next open document window.  <<YourApp>> determines which window is next according to the order in which you opened the windows. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+F6 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_PREVWINDOW}}{\b\f2 Previous Window command (document Control menu) \par }{\f2  \par Use this command to switch to the previous open document window.  <<YourApp>> determines which window is previous according to the order in which you opened the windows. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab SHIFT+CTRL+F6 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_CLOSE}}{\b\f2 Close command (Control menus) \par }{\f2  \par Use this command to close the active window or dialog box. \par  \par Double-clicking a Control-menu box is the same as choosing the Close command. \par \{bml appexit.bmp\} \par  \par Note:  If you have multiple windows open for a single document, the Close command on the document Control menu closes only one window at a time.  You can close all windows at once with the Close command on the File menu. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys: \tab CTRL+F4 closes a document window \par \tab ALT+F4 closes the <<YourType>> window or dialog box \par }\pard \sl240\slmult0\widctlpar {\f2 \tab \tab \tab \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_RESTORE}}{\b\f2 Restore command (Control menu) \par }{\f2  \par Use this command to return the active window to its size and position before you chose the Maximize or Minimize command. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_TASKLIST}}{\b\f2 Switch to command (application Control menu) \par }{\f2  \par Use this command to display a list of all open applications.  Use this "Task List" to switch to or close an application on the list. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+ESC \par }\pard \sl240\slmult0\widctlpar {\f2  \par }{\b\f2 Dialog Box Options \par }{\f2 When you choose the Switch To command, you will be presented with a dialog box with the following options: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Task List \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the application you want to switch to or close. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Switch To \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Makes the selected application active. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 End Task \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Closes the selected application. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Cancel \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Closes the Task List box. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Cascade \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges open applications so they overlap and you can see each title bar.  This option does not affect applications reduced to icons. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Tile \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges open applications into windows that do not overlap.  This option does not affect applications reduced to icons. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Arrange Icons \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges the icons of all minimized applications across the bottom of the screen. \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_RULER}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} View Ruler Command}}{\b\f2  Ruler command (View menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FONT}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Choose Font Dialog}}{\b\f2 Choose Font dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_COLOR}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Choose Color Dialog}}{\b\f2 Choose Color dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_FIND}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Find Command}}{\b\f2 Find command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FIND}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Find Dialog}}{\b\f2 Find dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REPLACE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Replace Command}}{\b\f2 Replace command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_REPLACE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Replace Dialog}}{\b\f2 Replace dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REPEAT}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Repeat Command}}{\b\f2 Repeat command (Edit menu) \par  \par }{\f2 Use this command to repeat the last editing command carried out.  The Repeat menu item changes to Can't Repeat if you cannot repeat your last action. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Key:\tab F4 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CLEAR}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Clear Command}}{\b\f2 Clear command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CLEAR_ALL}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Clear All}}{\b\f2 Clear All command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_NEXT_PANE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Next Pane Command}}{\b\f2 Next Pane \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_PREV_PANE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Prev Pane Command}}{\b\f2 Prev Pane \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HIDR_DOC1TYPE}}{\b\f2 Modifying the Document \par }{\f2  \par << Write application-specific help here that provides an overview of how the user should modify a document using your application.   \par  \par If your application supports multiple document types and you want to have a distinct help topic for each, then use the help context i.d. generated by running the MAKEHELP.BAT file produced by AppWizard.  Alternatively, run MAKEHM as follows: \par  \par \tab makehm IDR_HIDR_,0x2000 resource.h \par  \par If the IDR_ symbol for one of your document types is, for example, IDR_CHARTTYPE, then the help context i.d. generated by MAKEHM will be HIDR_CHARTTYPE. \par  \par Note, AppWizard defines the HIDR_DOC1TYPE help context i.d. used by this help topic for the first document type supported by your appl ication.  AppWizard produces an alias in the .HPJ file for your application, mapping HIDR_DOC1TYPE to the HIDR_ produced by MAKEHM for that document type. >> \par  \par \page  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HT_NOWHERE}}{\b\f2 No Help Available} \par  \par {\f2 No help is available for this area of the window. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDP_default \par }}{\f2  }{\b\f2 No Help Available \par } \par {\f2 No help is available for this message box. \par } \par {\f2 << If you wish to author help specific  to each message box prompt, then remove the AFX_HIDP_xxx values from the [ALIAS] section of your .HPJ file, and author a topic for each AFX_HIDP_xxx value.  For example, AFX_HIDP_INVALID_FILENAME is the help topic for the Invalid Filename message box. >> \par  \par }\pard \widctlpar  \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\admin\cluster\readme.txt ===
Cluster2.exe information
========================

Michael Burton (mburton@ucsd.edu)
September 10, 1997


History
-------
cluster2.exe sprung out of an attempt to reduce the amount of redundant
code in the cluster.exe application.  Previously, each module in cluster.exe
implemented all of its functionality individually.  This not only resulted
in pages and pages of duplicate code, but it made maintenance a real pain in
the tush as well.

In addition, cluster2.exe is a first-step toward cleaning up the code in
general.  Several artificial limitations in the first version of the tool have been
removed, but there are still a few that need to be dealt with.

It should be noted that cluster2.exe has not undergone any rigorous testing.
It has been tested by the programmer to work correctly for correct input under
fairly boring testing conditions, but it should definitely go through all the same
testing that was performed on cluster.exe before it completely surplants the older
version.



Revised Class Hierarchy
-----------------------
The class hierarchy may need a little introduction before it becomes intuitive.
The following are the classes responsible for implementing all the functionality
of the modules (ie. Nodes, Networks, Resources, Groups, etc) and their relation
to each other.


- CGenericModuleCmd -----------------------------+
         |                                       |
         |                                       +----- CNetworkInterfaceCmd
         |                                       |
         |                                       +----- CResTypeCmd
         |
         +----------- CHasListInterfaceModuleCmd ----+- CNodeCmd
         |                                           |
         |                                           +----+
         |                                                |
         +----------- CRenamableModuleCmd ------+------ CNetworkCmd
         |                                      |
         +----------- CResourceUmbrellaCmd -----+------ CResourceCmd
                                                |
                                                +------ CResGroupCmd

------------------------------------------------------- CClusterModuleCmd





Description of Base Classes
---------------------------
Note: CHasListInterfaceModuleCmd, CRenamableModuleCmd, and CResourceUmbrella are
      all virtual derivatives of CGenericModuleCmd.  This is so that individual
	  modules such as CNetworkCmd (currently the only example) can multiply
	  inherit from more than one base class without trouble.

* CGenericModuleCmd
  Provides functionality common across almost all of the modules (with
  the exception of CClusterModuleCmd, which is somewhat specialized).

* CHasListInterfaceModuleCmd
  For modules which have a "List Interface" command associated with them.
  Provides all the code necessary to perform the "ListInterface" command

* CRenamableModuleCmd
  For modules which support the /RENAME command

* CResourceUmbrellaCmd
  A catch-all class for functionality supported by both CResourceCmd and
  CResGroupCmd.  Supports Create, Offline, and Move.




Things Left To Do
-----------------
- Replace the wrapper functions with fewer, more generalized functions
- Get rid of all statically allocated memory constraints.
  Most of these have been removed, but anything that depends on ClusPropList
  has an artificial mem limitation.  It should be easy to fix this, I just haven't
  yet.
- Either get rid of or fix up the ClusPropList hack.
- Improve quality of function header comments.  They should be fleshed out a bit
  (one of those things that should be done en route, but I didn't get the code
   commented so it easy to be lazy and not go back to comment old code)
- Get rid of hard-coded strings in token.cpp so that commands and tokens can be
  localized in different languages.
- Get rid of "virtual" specifier for member functions that don't require it.
- Clean up util.cpp
- Maybe change those huge globs of member variables to a struct in each base class?
  This would encourage programmers to set all of them and not accidentally leave one
  out (something I've done a couple times... the reason this is a problem is because
  it isn't discovered until runtime and could go unnoticed for a while).
  eg: (from CResourceUmbrellaCmd)

		struct _params {
			DWORD m_dwMsgModuleStatusListForNode,
			DWORD m_dwMsgModuleCmdListOwnersList,
			DWORD m_dwMsgModuleCmdListOwnersDetail,
			DWORD m_dwMsgModuleCmdListOwnersHeader,
			DWORD m_dwClstrModuleEnumNodes,
			DWORD m_dwMsgModuleCmdDelete,
			DWORD (*m_pfnDeleteClusterModule)(HCLUSMODULE)
		};

  which could be set like this:

		_params = {
			UNDEFINED,
			UNDEFINED,
			UNDEFINED,
			UNDEFINED,
			UNDEFINED,
			UNDEFINED,
			NULL
		};
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\admin\debugex\readme.txt ===
========================================================================
       CLUSTER ADMINISTRATOR EXTENSION : Debug
========================================================================


AppWizard has created this Cluster Administrator Extension DLL for you.
This DLL demonstrates the basics of modifying the interface of
Cluster Administrator and is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your Cluster Administrator Extension DLL.

DebugEx.h
    This is the main header file for the DLL.  It declares the
    CDebugApp class.

DebugEx.cpp
    This is the main DLL source file.  It contains the class CDebugApp.
    It also contains the OLE entry points required of inproc servers.

DebugEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\DebugEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

DebugEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

DebugEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

ExtObj.h
    This is the header file which defines the classes which implement the
    COM interfaces by the Microsoft Windows NT Cluster Administrator program
    for adding property pages, wizard pages, or context menu items.  It
    defines the CExtObject class.

ExtObj.cpp
    This is the source file which implements the CExtObject class.

ExtObjID.idl
    This the Interface Definition Language source file for defining
    the COM object implemented by the extension DLL.  This is the object
    that will be loaded by the Cluster Administrator program.

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This is the source file which implements the CBasePropertyPage class.

BasePage.inl
    This is the source file which implements inline functions for the
    CBasePropertyPage class.

PropList.h
    This is the header file which defines classes for manipulating
    cluster property lists.  It defines the CClusPropList and CObjectProperty
    classes.

PropList.cpp
    This is the source file which implements the CClusPropList and
    CObjectProperty classes for manipulating cluster property lists.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named Debug.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CDebugParamsPage class.

ResProp.cpp
    This is the source file which implements the CDebugParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

This application uses the ActiveX Template Library (ATL) V1.1.  ATL V1.1
will need to be installed before your application will build.

To register your extension DLL so that it can be used with the Cluster
Administrator program, use the RegClAdm.exe SDK tool on each machine on
which the Cluster Administrator is to be executed.  RegCladm.exe is
located in the BIN sub-directory of your Visual C++ Installation Directory
(typically C:\MSDEV\BIN):

    RegClAdm [/cclustername] DebugEx.dll

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

**************************************************************************
  NOTE: You must use the MIDL compiler from NT 4.0,
  version 3.00.44 or greater
**************************************************************************

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\admin\iisclex3\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : IISClEx3
========================================================================


AppWizard has created this Microsoft Windows NT Cluster Administrator
Extension DLL for you.  This DLL not only demonstrates the basics of using
the Microsoft Foundation classes but is also a starting point for writing
your DLL.

This file contains a summary of what you will find in each of the files that
make up your Microsoft Windows NT Cluster Administrator Extension DLL.

IISClEx3.h
    This is the main header file for the DLL.  It declares the
    CCluAdmExApp class.

IISClEx3.cpp
    This is the main DLL source file.  It contains the class CCluAdmExApp.
    It also contains the OLE entry points required of inproc servers.

IISClEx3.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\IISClEx3.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

IISClEx3.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

IISClEx3.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

Extensn.h
    This is the header file which defines the classes which implement the
    IShellExtInit and IShellPropSheetExt interfaces, which are the interfaces
    used by the Microsoft Windows NT Cluster Administrator program for adding
    property pages.  Modify the CCluAdminExtension::XPropSheetExt::AddPages
    method to add new pages.  It defines the CCluAdminExtension class.

Extensn.cpp
    This is the source file which implements the CCluAdminExtension class.

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This the source file which implements the CBasePropertyPage class.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named CluAdmEx.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CResourceParamsPage class.

ResProp.cpp
    This is the source file which implements the CResourceParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\bh\buildenv.txt ===
You will need the libs from the netmon2 SDK which you can get at
\\hank\bhdist\netmon2\reskit\netmon2sdk.exe. The libs in bh\build are from
netmon2sdk\build.

Compile from the parsers directory and bins are in build\parsers\...

The bins should be copied to bh\bins\... and checked in as well as distributed
to \\nightwatch\scratch\netmon2\...
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\bh\parsers\clusrpc\readme.txt ===
Adding new functions to the clusrpc parser.

1) out -f database.c skeleton.h

2) change NUM_* in skeleton.h to reflect the new number of functions for the
particular interface. intra, extro, clusapi, and joinversion are all munged
into one big list.

3) add the function names to the procedure names array at their appropriate
spot. Here again, the array is contiguous and not separated by interface.

4) recompile and move the new DLL to netmon\parsers directory.

=====================================
The following is old information - see clusrpc.txt in bh\bin
=====================================

This file is created by the Microsoft automatic RPC parser generator

This file contains automatically generated text that will help you complete
the installation of your generated Netmon parser.

In order to use the parser, you must modify two files:
parser.ini found in your Netmon directory, and msrpc.ini found in the "parsers"
directory in your Netmon directory.

You may copy the following lines and paste them in your parser.ini file, 
appending the lines to the end of the [PARSERS] section.

If you see dupluicate names, you would have to manually edit the names
so that no two parsers have the same name.

---------------------- Copy after this line ---------------------------
    CLUSRPC.DLL = 0: R_INTRACLUSTER, R_EXTROCLUSTER, R_CLUSAPI


[R_INTRACLUSTER]
    Comment     = "Generated RPC parser for interface IntraCluster"
    FollowSet   =
    HelpFile    =

[R_EXTROCLUSTER]
    Comment     = "Generated RPC parser for interface ExtroCluster"
    FollowSet   =
    HelpFile    =

[R_CLUSAPI]
    Comment     = "Generated RPC parser for interface clusapi"
    FollowSet   =
    HelpFile    =

------------------ End of generated information -----------------------

The following lines can be copied and pasted to the end of the msrpc.ini file,
you must also change the NumIIDs to the correct count, and change the
IID_VALUE and IID_HANDOFF subscripts to follow the numbering order.

---------------------- Copy after this line ---------------------------
IID_VALUE12 = "B8D048E215BFCF118C5E08002BB49649"
IID_HANDOFF12 = R_INTRACLUSTER
IID_VALUE13 = "B861E5FF15BFCF118C5E08002BB49649"
IID_HANDOFF13 = R_EXTROCLUSTER
IID_VALUE14 = "B2B87DB9634CCF11BFF608002BE23F2F"
IID_HANDOFF14 = R_CLUSAPI
------------------ End of generated information -----------------------

These changes will be reflected when you start a new session of Netmon.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\bh\parsers\msrpc\msrpc.ini ===
[MSRPC]
USE_FRAME_LENGTH_DURING_RECOGNIZE=1


;  FollowSet.  These define the IIDs and parser names of the parsers embedded
;   inside MS RPC.  To add one, increment the NumIIDs value, and add yours to 
;   the end.  Note that the value is in DECIMAL  IID_VALUE10 comes after IID_VALUE9.
[FollowSet]
NumIIDs=11
IID_VALUE1 = "20e452181affcd119cb408002b30369b"
IID_HANDOFF1 = R_INTERNETSERVE
IID_VALUE2 = "C84F324B7016D30112785A47BF6EE188"
IID_HANDOFF2 = R_SRVSVC
IID_VALUE3 = "785734123412CDABEF000123456789AB"
IID_HANDOFF3 = R_LSARPC
IID_VALUE4 = "785634123412CDABEF0001234567CFFB"
IID_HANDOFF4 = R_LOGON
IID_VALUE5 = "785634123412CDABEF000123456789AB"
IID_HANDOFF5 = R_WINSPOOL
IID_VALUE6 = "B459CCF564421A108C5908002B2F8426"
IID_HANDOFF6 = R_DRSUAPI
IID_VALUE7 = "185ACCF564421A108C5908002B2F8426"
IID_HANDOFF7 = R_NSPI
IID_VALUE8 = "7C5ACCF564421A108C5908002B2F8426"
IID_HANDOFF8 = R_RXDS
IID_VALUE9 = "98D0FF6B12A11036983346C3F874532D"
IID_HANDOFF9 = R_DHCPSRV
IID_VALUE10 = "282CF5459F7F1A10B52B08002B2EFABE"
IID_HANDOFF10 = R_WINSIF
IID_VALUE11 = "c0eb4ffa9145ce1195e500aa0051e510"
IID_HANDOFF11 = R_REMOTEAUTO
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\bh\parsers\rescmon\readme.txt ===
This file is created by the Microsoft automatic RPC parser generator

This file contains automatically generated text that will help you complete
the installation of your generated Netmon parser.

In order to use the parser, you must modify two files:
parser.ini found in your Netmon directory, and msrpc.ini found in the "parsers"
directory in your Netmon directory.

You may copy the following lines and paste them in your parser.ini file, 
appending the lines to the end of the [PARSERS] section.

If you see dupluicate names, you would have to manually edit the names
so that no two parsers have the same name.

---------------------- Copy after this line ---------------------------
    RM.DLL      = 0: R_RESMON


[R_RESMON]
    Comment     = "Generated RPC parser for interface resmon"
    FollowSet   = 
    HelpFile    = 

------------------ End of generated information -----------------------

The following lines can be copied and pasted to the end of the msrpc.ini file,
you must also change the NumIIDs to the correct count, and change the
IID_VALUE and IID_HANDOFF subscripts to follow the numbering order.

---------------------- Copy after this line ---------------------------
IID_VALUE0 = "6da56ee73f45cf11bfec08002be23f2f"
IID_HANDOFF0 = R_RESMON
------------------ End of generated information -----------------------

These changes will be reflected when you start a new session of Netmon.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\clusdisk\tracewpp.ini ===
FUNC CDLOG{LEVEL=DEFAULT}(MSG,...);
FUNC CDLOGF(LEVEL,MSG,...);

WPP_FLAGS(-km);

TYPEMACRO(diskstate,     ItemListLong(DiskOffline,DiskOnline,DiskFailed,DiskStalled) );
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\clusnet\bugbug.txt ===
Things that should be fixed:

- Keep a pool if IRPs for each network instead of allocating a new
  one on each send.

- Reference the TDI address in the interface object instead of
  allocating a buffer and copying the address information on each send.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\clusnet\inc\tracewpp.ini ===
FUNC CnTrace(LEVEL,NULL,MSG,...);

WPP_FLAGS(-km);

TYPEMACRO(mmstate, ItemListLong(Alive,Joining,Dead,NotConfigured) );
TYPEMACRO(msgtype, ItemListByte(Invalid,Heartbeat,Poison,Membership) );
TYPEMACRO(ifstate, ItemListLong(Offline,OfflinePending,Unreachable,OnlinePending,Online) );
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\mgmt\clusocm\clusoc.txt ===
;
;   This file is intended to be used by Configure Your Server to install only
;   the Clustering Service optional component.
;
[Components]
cluster=ON
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\mgmt\inc\readme.txt ===
//////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 1999-2000 Microsoft Corporation
//
//  Module Name:
//      README.TXT
//
//  Maintained By:
//      Geoffrey Pease (GPEASE) 22-NOV-1999
//
//////////////////////////////////////////////////////////////////////////////

THE QUICK AND DIRTY HOW TO INCLUDE THE DEBUG LIBRARY:

1. Create a DEBUG.CPP and CITRACKER.CPP in your project.

2. In DEBUG.CPP include DebugSrc.CPP from this directory.
   In CITRACKER.CPP include CITrackerSrc.CPP from this directory.
   Example of DEBUG.CPP:
    #include "pch.h"          // your pre-compiled header for your project.
    #include "DebugSrc.cpp"   // pull in the common version.

3. Your code must contain an instance of the following global variables:
        HINSTANCE g_hInstance;  // module instance
        LONG      g_cObjects;   // COM object instance counter

4. Call TraceInitializeProcess( ... ) when you are started. For DLLs, call 
   this in your DllMain( ). For applications, call this in your Win/main( ).

5. Call TraceTerminateProcess( ... ) before you terminate. For DLLs, call this 
   in your DllMain( ) for DLL_PROCESS_DETACH. For applications, call this just 
   before your Win/main( ) returns.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\resdll\clnetres\clnetres\readme.txt ===
========================================================================
       CLUSTER RESOURCE DLL : DHCP Service (ClNetRes)
========================================================================


AppWizard has created this DHCP Service resource DLL for you.  This
DLL not only demonstrates the basics of using the Cluster API but is
also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files
that make up your DHCP Service resource DLL.

ClNetRes.c
    This is the main DLL source file.  It contains implementations for
    all required resource DLL entry points along with some helper
    functions.

ClNetRes.rc
    This is a listing of all of the Microsoft Windows resources that
    the program uses.  This file can be directly edited in Microsoft
    Developer Studio.

ClNetRes.def
    This file contains information about the DLL that must be
    provided to run with the cluster software.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

/////////////////////////////////////////////////////////////////////////////
Adding your resource type to the cluster:

To add your resource type to the cluster, use cluster.exe.

    cluster resourcetype "DHCP Service" /create /dllname:ClNetRes.dll

If you don't specify a path to your resource DLL, Cluster Server will search
for it first in the cluster directory and then on the system path.

You can now create resources of type "DHCP Service" using either
Cluster Administrator or cluster.exe.  To use Cluster Administrator to
create resources, create a Cluster Administrator Extension DLL for your
resource.  This is highly recommended.  To create a resource using cluster.exe,
use a command like the following:

    cluster resource "My DHCP Service" /create /group:"My Group" /type:"DHCP Service"
    cluster resource "My DHCP Service" /privproperties
        DatabasePath="value"
        BackupPath="value"

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you should add
to or customize.

AppWizard uses "ADDPARAM:" to indicate parts of the source code you should
modify if you add or remove parameters.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\resdll\clnetres\clnetresex\readme.txt ===
========================================================================
       CLUSTER ADMINISTRATOR EXTENSION : ClNetRes
========================================================================


AppWizard has created this Cluster Administrator Extension DLL for you.
This DLL demonstrates the basics of modifying the interface of
Cluster Administrator and is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your Cluster Administrator Extension DLL.

ClNetResEx.h
    This is the main header file for the DLL.  It declares the
    CClNetResApp class.

ClNetResEx.cpp
    This is the main DLL source file.  It contains the class CClNetResApp.
    It also contains the OLE entry points required of inproc servers.

ClNetResEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\ClNetResEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

ClNetResEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

ClNetResEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

ExtObj.h
    This is the header file which defines the classes which implement the
    COM interfaces by the Microsoft Windows NT Cluster Administrator program
    for adding property pages, wizard pages, or context menu items.  It
    defines the CExtObject class.

ExtObj.cpp
    This is the source file which implements the CExtObject class.

ExtObjID.idl
    This the Interface Definition Language source file for defining
    the COM object implemented by the extension DLL.  This is the object
    that will be loaded by the Cluster Administrator program.

RegExt.h
    This is the header file which declares the functions used to register
    the Cluster Administrator extension DLL with both the cluster and the
    client machine.

RegExt.cpp
    This is the source file which implements registration for the Cluster
    Administrator extension DLL.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named ClNetRes.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This is the source file which implements the CBasePropertyPage class.

BasePage.inl
    This is the source file which implements inline functions for the
    CBasePropertyPage class.

PropList.h
    This is the header file which defines classes for manipulating
    cluster property lists.  It defines the CClusPropList and CObjectProperty
    classes.

PropList.cpp
    This is the source file which implements the CClusPropList and
    CObjectProperty classes for manipulating cluster property lists.

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CClNetResParamsPage class.

ResProp.cpp
    This is the source file which implements the CClNetResParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

To register your extension DLL so that it can be used with the Cluster
Administrator program, use the RegClAdm.exe SDK tool on each machine on
which the Cluster Administrator is to be executed.  RegCladm.exe is
located in the BIN sub-directory of your Visual C++ Installation Directory
(typically C:\MSDEV\BIN):

    RegClAdm [/cclustername] ClNetResEx.dll

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

This DLL uses MFC.  Because the Enterprise Edition of Microsoft Windows NT
Server includes MFC DLLs from Visual C++ 4.2, you will need to distribute
MFC42U.DLL from the version of Visual C++ that builds your extension DLL.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\resdll\dummyex\readme.txt ===
========================================================================
       CLUSTER ADMINISTRATOR EXTENSION : Dummy
========================================================================


AppWizard has created this Cluster Administrator Extension DLL for you.
This DLL demonstrates the basics of modifying the interface of
Cluster Administrator and is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your Cluster Administrator Extension DLL.

DummyEx.h
    This is the main header file for the DLL.  It declares the
    CDummyApp class.

DummyEx.cpp
    This is the main DLL source file.  It contains the class CDummyApp.
    It also contains the OLE entry points required of inproc servers.

DummyEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\DummyEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

DummyEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

DummyEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

ExtObj.h
    This is the header file which defines the classes which implement the
    COM interfaces by the Microsoft Windows NT Cluster Administrator program
    for adding property pages, wizard pages, or context menu items.  It
    defines the CExtObject class.

ExtObj.cpp
    This is the source file which implements the CExtObject class.

ExtObjID.idl
    This the Interface Definition Language source file for defining
    the COM object implemented by the extension DLL.  This is the object
    that will be loaded by the Cluster Administrator program.

RegExt.h
    This is the header file which declares the functions used to register
    the Cluster Administrator extension DLL with both the cluster and the
    client machine.

RegExt.cpp
    This is the source file which implements registration for the Cluster
    Administrator extension DLL.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named Dummy.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This is the source file which implements the CBasePropertyPage class.

BasePage.inl
    This is the source file which implements inline functions for the
    CBasePropertyPage class.

PropList.h
    This is the header file which defines classes for manipulating
    cluster property lists.  It defines the CClusPropList and CObjectProperty
    classes.

PropList.cpp
    This is the source file which implements the CClusPropList and
    CObjectProperty classes for manipulating cluster property lists.

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CDummyParamsPage class.

ResProp.cpp
    This is the source file which implements the CDummyParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

To register your extension DLL so that it can be used with the Cluster
Administrator program, use the RegClAdm.exe SDK tool on each machine on
which the Cluster Administrator is to be executed.  RegCladm.exe is
located in the BIN sub-directory of your Visual C++ Installation Directory
(typically C:\MSDEV\BIN):

    RegClAdm [/cclustername] DummyEx.dll

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

This DLL uses MFC.  Because the Enterprise Edition of Microsoft Windows NT
Server includes MFC DLLs from Visual C++ 4.2, you will need to distribute
MFC42U.DLL from the version of Visual C++ that builds your extension DLL.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\resdll\genjob\dll\design.txt ===
Rough Design notes for Job Object Resource

Based on genapp, this resource will allow users to take advantage of job
objects on NT5. It provides for setting all the job object information via the
properties associated with the resource. Here's a breakdown of how the
different job info classes are utilized:

JobObjectAssociateCompletionPortInformation

    The genjob resdll uses a completion port to get notified about various
    events for a job object. The CompletionKey is a pointer to the genjob
    resource object. This facility is used mainly to log interesting genjob
    events to the cluster log. Nothing is exposed to the user. Receiving
    JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO causes the offline event for the
    resource to be signalled.

JobObjectBasicLimitInformation

    Each member (except for LimitFlags and Affinity) in this class will
    correspond to a resource property. Affinity poses a challenge since it is
    possible to have UP/MP nodes in the cluster. I'm not sure how to handle
    this right now. Initially, we won't support this
    feature. JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION will be set to avoid
    having hard popups from the system if a process terminates due to a
    fault. This will allow the job to fail over to the other side. Check boxes
    will be present to support the child process breakaway features. These
    properties can be modified while the resource is online.

JobObjectBasicUIRestrictions

    basically, one check box per flag for this sheet.

JobObjectEndOfJobTimeInformation

    Radio button indicating which option is enforce.

JobObjectExtendedLimitInformation

    more edit boxes for the limits added by this class    

JobObjectSecurityLimitInformation

    This is potentially a difficult class to get working. It involves token
    handles, privileges and groups to be specified. There would be additional
    pages that would display groups and privileges. The main page would
    capture a domain account (including password) so a token handle could be
    generated under which to run the process. Hopefully, there are canned UI
    calls to display this type of info. The resdll will need to turn on assign
    primary token before supporting the JobToken field.

Resource code

Open

    same as genapp

Online

    A critsec protects the creation of the completion port. A count of online
    resources is maintained: incremented during online and dec'ed during
    offline, it indicates when the completion port should be
    created/deleted. The final resource offline closes the port handle.

    Calls CreateJobObject, SetInformationJobObject (based on the properties),
    CreateProcess, and finally AssociateProcessToJobObject. Resource structure
    needs to be complete enough such that the comp. port handler can access
    the member without accvio'ing. This shouldn't be an issue since we
    probably just use the resource handle for logging. An event is used to
    signal resmon when the final process exits. The job handle maintains
    signal state but it is used to indicate when other limits have been
    exceeded.

Offline

    calls TerminateJobObject (harsh but consistent with genapp). closes job
    obj handle. if last resource is taken offline, completion port giblets are
    closed as well.

Close

    same as genapp
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\resdll\netname\dnsdel.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal notes about cleaning up stale DNS records Titlenotes about cleaning up stale DNS records Charlie Wickham Normal.dot Charlie Wickham Microsoft Word 9.0C&brKFtbjbjU notes about when to delete DNS records Currently, netname only builds its DNS list(s) at online time. It tears them down during offline processing. Deleting the records at the server during offline is wasteful since the name is usually being moved to another machine and, from a DNS perspective, nothing has changed. There are a number of events that could cause netname to delete the records at the server: 1) receiving a delete resource control, 2) changing the name property (handled differently if the resource is online vs. offline) and 3) removing an IP address dependency (partial deletion). In spite of this, removal of the records at the server can still fail if the server is not available (obviously) or if the cluster is uninstalled without first deleting the resources. Nor can the Cluster Name resource be deleted since it is a core resource. For these scenarios, no future attempt can or will be made in order to delete the records. The DNS server has implemented a scavenging feature where records are deleted if they haven t been accessed within a certain period of time. Originally, the DNS lists were cleaned up during offline processing. To support DNS record deletion, the resource will hold onto the DNS list after it has gone offline. If the resource goes back online without any changes, the current list is torn down and recreated. If the resource is moved to another node, the previous hosting node retains the list since it can t tell if the offline is due to a move. If resource is not moved, then the node needs this info when the delete resource control is directed its way. Any one of the three events listed above result in a resource control to be issued. Delete is only issued to the node hosting the resource s group  . If the name has visited many nodes, each node will have a list that is possibly stale. Only the last node to host the resource will have the most up to date information about the resource and its properties. For that reason, only the node that last hosted the resource will act upon property or dependency changes. DNS records also need to be deleted when the name property is changed. If the name is currently offline, then the deletion can occur at that time. If it is online, the resource needs to flag the situation such that record deletion occurs when the resource is taken offline. If an underlying IP address resource dependency changes, then the corresponding PTR record needs to be deleted. Other events can lead to a situation where the resource is closed before an online has occurred; e.g., the netname resource is initially in the offline state, never goes online, and the cluster service is shut down. The resource will remain in that state when the service is restarted. If the resource is then deleted, it will not have any DNS List info since it never visited the online state. In those cases (there may be others I haven t thought of yet), we ll log it both to the cluster and event logs. Any time the records at the server need to be deleted but can t due to lack of data, we ll log that info in the event log indicating to the reader that they need to contact the DNS admin to have the records removed. PAGE \# "'Page: '#'  This may be true for the other controls as well. If that is the case, then this simplifies the design: the hosting node makes all the changes and the other nodes only have to free the DNS List resources when the close routine is called or when the resource is brought online on that node.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\resdll\netname\netname lock usage.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal Resource lock Usage TitleResource lock Usage Charlie Wickham Normal.dot Charlie Wickham Microsoft Word 9.0TkK&irKFbjbjU p}t+bN Netname Lock Usage Overview The netname resource uses two locks and a reference count to co-ordinate access to related data structures. The resource list lock is used to protect maintenance of the doubly linked list of resource blocks. In addition, it is used to synchronize a resource s state changes (overkill, but simple). Additionally, it is used to synchronize the creation of the worker thread. The refcount is used to protect the individual resource block when the resource list lock must be released. This is typically done when the worker thread is about to issue a query to the DNS server. We can t have the resource block deleted while the query is in progress. I ve seen DnsQuery take a very long (7 to 8 minutes) time to complete; during this time the resource s pending timer has fired and the state has been forced to Offline. At this point, the resource can be deleted. Meanwhile, we re still waiting for the query to finish, hence the need to refcount the block. Each resource has a DNS list lock. The DNS lists are array of structures for each A and PTR record combination (this struct should have been generalized and contained only one type of record; the code explains why). This lock is used to protect the array of DNS list structs and their sub-structs (the DNS records used to register the records) at certain times. This lock was introduced to synchronize access to this data, e.g., RemoveDependentIpAddress can delete DNS records while the resource is online but the worker thread could be working on a query for that list. The ideal solution would be to refcount each DNS record but the DNS record struct definition is not under our control. At this point (Beta 2/Whistler), implementing that would cause too much code churn. Holding this lock while calling out to the DNS server only penalizes that specific resource as opposed to all netnames in the cluster. The rest of the doc outlines the locks and refcount usage to illustrate how it all works together. Resource List Lock Protects resource block list operations and should not be held while making calls to DNS server. NetNameWorker WaitForMultipleObjects( terminate thread event, resource online pending event, timeout ); Acquire List Lock While resource blocks in list if state is online pending Release List Lock. No need to bump refcount since resource can't get delete call at this point. The following callback into resmon is very quick. call SetResourceStatus Acquire List Lock.  Else if state is online refcount bumped. The query will hit the wire so we can t hold the lock while waiting for the query to complete. Release List Lock call QueryDnsRecords. Acquire List Lock. If we re holding the last reference (recount == 1) s possible that our query got stuck for a very long time; long enough for the pending timeout to occur which causes our Terminate routine to be called. At that point, the resource is offline and the user can delete the resource. Free resource block and restart poll at beginning of resource listhead Else If state changed to offline pending Offline was called while in the middle of a query. Keep our reference to this resource block by not dec ing the refcount just yet. Set state to offline Release List Lock s possible that the name was changed while the resource was online. Normally, our Offline routine would delete the old DNS records but since we were in the middle of a query, we don t want to change the records out from underneath of the query. If DeleteDnsRecords Call RemoveDnsRecords call SetResourceStatus. Acquire List Lock. Dec refcount. If zero, do standard cleanup end While  Release List Lock NetNameOnlineThread Acquire List Lock / Release List Lock to sync creation of worker thread Acquire List Lock / Release List Lock to sync setting of resource state NetNamepOffline Called by: NetNameOffline, NetNameTerminate Acquire List Lock at entry set resource state to offline pending. take netbios names offline. if DNS query is not in progress (refcount == 1) set state to offline  Network name property might have changed while online. If so, then need to delete old DNS records at server now. If DNS records to delete, bump refcount and set flag. Release List Lock If DNS records to delete call RemoveDnsRecords Acquire List Lock. Dec refcount. If zero, do resource block cleanup Release List Lock NetNameOpen Acquire List Lock / Release List Lock to add new resource block to resource list head NetNameOnline Acquire List Lock / Release List Lock to set resource state to online pending NetNameTerminate Acquire List Lock to check resource state if resource state is not offline and not offline pending Release List Lock call NetNamepOffline Acquire List Lock  set state to offline Release List Lock at exit NetNameLooksAlive Acquire List Lock  netbios names are checked DNS status is checked Release List Lock  NetNameClose Acquire List Lock  remove resource from resource list Release List Lock  DNS List Lock Protects the DNS List pointer and its count. Ideally, we shouldn t hold this lock while calling out to the DNS server but in order to implement that scheme, the DNS record structs would require refcount ing. Since the DNS record structs used to publish the records are defined by DNS, we can t easily stuff a refcount field into the record. Trying to manage an array of refcounts in the DNS_LIST struct is possible but not something I want to take on at this time (Beta 2, Whistler). Consequently, all structs in the DNS list are locked while an operation on any member in the list takes place. NetNameQueryDnsServer Called by: NetNameWorker Acquire DNS Lock Walks DNS lists. May call RegisterDnsRecords if finds a mismatch. Release DNS Lock NetNameCleanupDnsLists Called by: NetNameReleaseResource, NetNameOnlineThread (2 times during error exit processing), RemoveDnsRecords. Walks DNS lists to free DNS records. Eventually deletes DNS_LIST block. Lists do not need protection since this routine is called only when resource is being deleted or resource is in online pending state. RemoveDependentIpAddress Called when Remove Dependency cluster control is received (sent when state is not pending) Acquire DNS Lock walk resource's DNS list looking for appropriate DNS record and calls DNS to remove records Release DNS Lock RemoveDnsRecords Walks DNS lists to remove DNS records from server. Called: when resource is deleted by NetNameWorker or NetNamepOffline due to name change while resource is online by NetNameSetPrivateResProperties if the name is changing and the resource is offline Acquire DNS Lock walk resource's DNS list deleting all DNS record and calls DNS to remove records Release DNS Lock  Call NetNameCleanupDnsLists
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\setup\cluscomp\cluscomp.txt ===
Cluster Service Setup detected an existing cluster installation. If you continue, the node you are upgrading might not interoperate with other nodes in the existing cluster. You must install Microsoft Windows NT 4.0 Service Pack 4 or later to upgrade all nodes and ensure interoperability.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\setup\clusocm\clusoc.txt ===
;
;   This file is intended to be used by Configure Your Server to install only
;   the Clustering Service optional component.
;
[Components]
cluster=ON
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\setup\cluscomp\clussvcpk.txt ===
Clustering Service Setup detected an existing cluster installation. If you continue, the node you are upgrading might not interoperate with other nodes in the existing cluster until you upgrade all nodes to Windows NT Server 4.0 Service Pack 4 or later.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\setup\cluscomp\clustmsvc.txt ===
Windows has detected that both Windows Terminal Services and Windows Clustering Services are installed on this computer.  You must uninstall one of these components before you upgrade to Windows 2000 Advanced Server.

To uninstall a component, in Add/Remove Programs in Control Panel, click Add/Remove Windows Components.  In the Windows Components Wizard, click Next, clear the Terminal Services or Clustering Services check box, and then click Next to remove the component.

You can then run Windows 2000 Setup again to upgrade your computer.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\test\bugreprt\wpbug.txt ===
Microsoft(R) Wolfpack Clustering Beta 1 for NT 4.0 Server Problem Report Template
(Please see instructions below to submit this report) 

Name                           : 
Company                        : 
Area Code & Phone              : 
Beta ID                        :
Internet Address               :
Country (if outside the U.S.)  :
Language Version               :

****** PROBLEM INFORMATION ******

NT 4.0 Server Install Method   : < >CD-ROM  
				 < >WINNT.EXE  < >WINNT32.EXE 
NT 4.0 Server Install Type     : < >Upgrade from: 
		           	 < >Clean Install

PROBLEM TITLE: 
[Please replace this line with a one-line summary of the issue]

PROBLEM DESCRIPTION: Please provide a complete description of 
the problem, circumstances, and any actions you may have taken.
If this is a development related issue, please include the following
information: compiler type and version, Win32 SDK version, API that
failed (if relevant), API return value, GetLastError() return value,
a simple code sample that exhibits the behavior.
----------------------------------------------------------------------



PROBLEM OCCURS: 
< >Always < >Sometimes < >Didn't happen again < >Didn't try it again

STEP BY STEP INSTRUCTIONS we can follow to reproduce the problem here:
Please be explicit and complete, if we cannot reproduce the problem
here, the issue may not be resolved in the next release.
  1. 
  2. 
  3.
  4.


****** BASIC CONFIGURATION, SERVER ******
Computer brand & model			    :
Bus Architecture (check all that apply)			                           
  < >ISA < >EISA < >MCA < >VESA < >PCI 
  < >RISC < > PCMCIA (PC CARD) < >Other     :
System BIOS (manufacturer & version/date)   : 
CPU(s) (type, speed and manufacturer)       : 
Memory (RAM)                                : 
Video adapter Make/Model/Type               : 
Other adapters			            : 

****** BASIC CONFIGURATION, CLIENT ******
Computer brand & model			    :
Bus Architecture (check all that apply)			                           
  < >ISA < >EISA < >MCA < >VESA < >PCI 
  < >RISC < > PCMCIA (PC CARD) < >Other     :
System BIOS (manufacturer & version/date)   : 
CPU(s) (type, speed and manufacturer)       : 
Memory (RAM)                                : 
Video adapter Make/Model/Type               : 
Other adapters (scanner/PC CARD)            : 

****** PRIMARY HARD DISK / CONTROLLER CONFIGURATION ******
Server
  Disk controller
    Type: < >IDE < >SCSI
    Make:
    Model:
  Drives
    Make/Model/Size:
    Make/Model/Size:
Client
  Disk controller
    Type: < >IDE < >SCSI
    Make:
    Model:
  Drives
    Make/Model/Size:
    Make/Model/Size:

****** CLUSTERED HARD DISK / CONTROLLER CONFIGURATION ******
SCSI Disk controllers (Identical Make/Model on Client and Server)
  Make:
  Model:
  Do the controllers have caching?(explain):
  Do the controllers support RAID?(smart array controller):
  Firmware Rev. (Server):
  Firmware Rev. (Client):
  SCSI ID (Server):
  SCSI ID (Client):
Shared Drives
  Are drives configured in target mode or lun Mode?(explain):
  Is there a HW raid box connected to the shared bus?(explain):
  SCSI ID(or lun)/Make/Model/Size:
    Partition Size/Drive Letter:
    Partition Size/Drive Letter:
  SCSI ID(or lun)/Make/Model/Size:
    Partition Size/Drive Letter:
    Partition Size/Drive Letter:
  
****** NETWORK CONFIGURATION ******
Network card type, Server, IRQ & address: 
Network card type, Client, IRQ & address: 
Network protocol(s): 

****** PLEASE PROVIDE THE CONTENTS OF THE FOLLOWING REGISTRY ******
****** KEYS HERE, OR SAVE AND ATTACH THEM TO THIS EMAIL USING REGEDIT ******
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Clussvc
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Clusdisk

How To Submit This Report
=========================
Please e-mail this form to wpbug@microsoft.com Note: this is not a support mechanism, and you are not guaranteed a response.  If your problem is time-critical you should contact Microsoft as outlined in "Guide to Services and Support" in your documentation.  Please send mail to ntbug@microsoft.com if you require an ftp location, or have any other questions or comments regarding the problem report process.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\test\clusbvt\bvtread.txt ===
Cluster BVT Test

Files Needed to run the test:
-----------------------------
clusbvt.cmd -- (In test directory of the MCM CD)
bvtenv.cmd  -- (In test directory of the MCM CD)
cluscli.exe -- (In sdk/<arch> directory of the MCM CD)

How to run the clusbvt tests:
-----------------------------
The clusbvt.cmd tests should be run after the following
are done.

(a) The cluster service should be up and running on BOTH
the nodes.

(b) Copy all needed files to a directory on the node which
the tests will be run.

(c) Edit the bvtenv.cmd. It explains the parameters to be
set which include name of the cluster etc.

(d) Run clusbvt. ( Clusbvt uses the environment set in
bvtenv.cmd to run the tests. )
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\test\castest\casread.txt ===
Cluster Administrator Sanity Test --

This test is designed to help verify that a cluster has been
installed correctly and is behaving properly.

The test should be run on a working node in the cluster.

To run the test you will need the following files..

castest.bat -- (In test directory of the MCM CD)
cluadms.pcd -- (In test directory of the MCM CD)
english.dat -- (In test directory of the MCM CD)
mtrun.exe   -- (In test/<arch> directory of the MCM CD)
mstest40.dll-- (In test/<arch> directory of the MCM CD)
msvcrt40.dll-- (In test/<arch> directory of the MCM CD)
ntlog.dll   -- (In test/<arch> directory of the MCM CD)

To run the test copy the above files to a directory on one of
the nodes and type "castest"

The test will launch the Cluster Administrator and run though
some basic tests.  Do not use the mouse or keyboard while the
test is running.  When the test is completed results will be
written to a text file called cluadms.log.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\utils\cluslog\filter.txt ===
CS
DM
FM
ClMsg
GUM
EVT
NM
INIT
MM
RGP
LM
EP
API
JOIN
RM
NMJOIN
ClNet
OM
CP
ClSend
FMX
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\cluster\utils\cluspw\design.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal Cluster Service Account Password Utility TitleCluster Service Account Password Utility Charlie Wickham Normal.dot Charlie Wickham Microsoft Word 9.0Anlr(Cluster Service Account Password Utility Introduction This document represents the knowledge about changing user account passwords in Windows domain as of the time when the utility was written (around 7/99). Since then, we have had meetings with the security team to make this procedure more robust. The last section (Remaining Work Items) describe changes that need to be made to the current design. Current Design This utility attempts to change the password associated with the cluster service account on all nodes in the cluster. This involves a number of steps which include: updating the password on the DC updating the account's password in each node's LSA password cache so future security context negotiations by RPC will succeed updating the password with each node's service control manager (SCM) Password Updates at the DC Password changes are usually initiated on the DC to which the node issuing the change has a secure channel but that is not always true. In any case, the DC accepting the password change synchronously forwards it to the PDC. If a cluster node has its secure channel with neither of these DCs, the node s DC will have the old password until the password change is (lazily) replicated. This will cause security context generation to fail since a client with the new password may present these credentials during a context negotiation and the server s DC is still using the old password. To minimize the window of failure, the secure channel for each node can be set to the PDC. This is not always desirable as in the case where the service account is used for multiple clusters. This would have potential scaling problems since you could be redirecting hundreds of nodes to use the same DC for its secure channel. There is still a race where netlogon decides to change the secure channel before the password has replicated. Obviously, if the DC that has the new password crashes, then various failure scenarios will manifest. More on that later. Updating the LSA Password Cache Step 2 means running a broker on each machine to update that node's LSA password cache. An NT service is used for this purpose. The service binary (cluspw.exe) is copied to each node's %windir% directory (\\node\admin$). When this step is invoked, the utility starts the service on each node, one at a time. Other Details The utility opens a named pipe on which the broker report any errors as well as its final status. The mechanism for updating LSA's cached password does exist on NT4 so it would appear that this utility could work for NT4 and NT5. However, some of the APIs used in the NT5 version are not available on NT4. Right now, the utility checks if there are any NT4 nodes in the cluster and not run the utility if that is the case. This could be fixed by having the broker determine the version of the system on which it is running and using LoadLibrary to get pointers to the OS version appropriate APIs. This utility has the potential to touch many nodes: the DC and each cluster node. It may not be possible to automatically recover if any of these crash while the utility is running. For this reason, a phase argument is provided in order to help the admin recover from problems. Command Line Arguments cluspw [/unattend] [/phase<1,2,3>] [/quiet] [/verbose] [cluster name [oldpw newpw]] If no args are specified, a dialog is popped up asking for the appropriate information (not supported yet). Argument Description /unattend  indicates unattended mode and is only valid if all parameters are specified on the command line (not implemented at this time). At the point where this turns into a windowed app, this will be used to allow it to run as a command line app. /phase X indicates the phase at which the process should start. X can be 1, 2, or 3. /quiet  is quiet mode (no output unless bad stuff happens). /verbose  verbose output; also passed to the broker app In addition, there are other switches used for debugging and other purposes. Argument Description Passed to the broker by the utility. This argument is used to prevent the broker from running in an ad hoc fashion. For example, if an admin tried to start the service, it might cause some damage that the utility wouldn t know about. This buys some additional insurance from the broker running inadvertently. Run the broker in cmd window. Redirects the output of the broker to a command window in order aid in debugging (you can see printfs this way). Requires interact with desktop to succeed and must be complied in by defining CMDWINDOW. How It Works Here's a rough outline of what currently happens in the utility: Determine whether the process has been invoked as the utility or the broker service. See the next section if the started as the service. Parse the arguments for the utility and create a Named Pipe and a thread to read its contents. The broker service sends output to the pipe to be displayed by the utility (useful for debugging as well). Verify that the components we need are up and that the user has sufficient access to manage the cluster as well as changing the cluster service config with each node's service controller. That entails: call OpenCluster, enum'ing the nodes and noting the state of the cluster service. If no cluster name is specified on the cmd line, then we use NULL assuming that we on a node in a cluster. The cluster state must either be Up or Down; nodes that are joining, paused or are in an unknown state will cause the utility to abort. We don t detect if a node changes cluster state after this point. Presumeably, the service on that node will have an authentication problem and die. Next time it restarts, it will logon with the correct credentials. get SCM handles to the cluster service on every node. If this fails, we abort the utility since all nodes must be up in order to assure that the p/w update will mostly work (if a node crashes after this point, then backing out the changes might be problematic). call QueryServiceConfig to get the service start name which is the domain account used to start the service. create the broker service entry on every node. call DsGetDcName using the domain name from step c to get the primary DC for this domain. The secure channel for each cluster node is set to the PDC. copy the broker app to \\node\admin$ for each node that is part of the cluster. In order to distinguish between starting as the service vs. starting the utility with no args, the utility binary is copied to the target nodes as cluspwsvc.exe. This allows us to determine at process startup whether we re running as the service or the utility. Phase 1: change the p/w at the DC via NetUserChangePassword. If this fails, we abort the utility. Phase 2: for each node that is up, start the broker service on that node to update the LSA password cache. The StartService API runs asynchronously to the actual service process so it is possible to get some of the brokers running in parallel. For a large number of nodes to process, it might be more beneficial to create a number of background threads to partition up the work. A node crash at this point means that the node won't start since its SCM password has not been changed. There is code to poll each node s SCM to determine the final status of the broker; once the broker has been started, these calls (QueryServiceStatusEx) fail with access denied. I m not sure why; it might be due to not updating the password on the node running the utility (which doesn t have to be a cluster node). In any case, I m not sure that this is useful anyway: the service will report its problems via the named pipe and the utility should move on to other nodes as quickly as possible. Phase 3: change the p/w with each node s SCM.  If this fails, then the cluster service on that node will fail to start due to having the old password. We could notify the user and ask if they want to wait until the node is available again (not yet implemented). The service portion performs the following steps: Call ClRtlInitialize to allow the service to log into the cluster log Parse the args passed to the service broker and open the named pipe Update the node s password cache by issuing a change password request to LSA. This will probably change once the security team has done the work needed to make the password change more robust. Write the final status to the named pipe and exit Recovery Recovery presents a challenge since there is a race condition between setting the p/w on the DC and a node crashing before the p/w has been updated with its SCM or password cache. The current phase ordering favors updating the password cache before the SCM password since, for a running system, it is more important to have the p/w cache aligned with the DC p/w as quickly as possible. The other problem area is a crash before the SCM p/w has been updated. In this case, the cluster service will not start on that machine. The admin will need to change the password once the node is available again. Remaining Work Items s what needs to done: Understand the security team s change and how it will narrow the race conditions that exist. Identify the correct ordering of the phases. The security team s work will probably affect this so we ll need to consult with them to be sure that we have the correct order. With the correct order, we can determine the failure cases where recovery to a known state is either automatic or requires manual work by the admin. The manual work cases have to be minimized since there could be a large number of nodes involved. Figure out how to scale the utility to work with multiple clusters. If a customer has 40 4-node clusters, all using the same service account, then that means 160 nodes need to have their password caches and SCM passwords changed. It may be that we have to bound the total number of nodes due to the time lag introduced when handling large numbers of nodes. It may be the case where the longer it takes to update the nodes, the more likely we ll run into a race condition. Productize the code. This means providing as much output as needed in order to help the admin recover the cluster when manual intervention is required. This could simply be writing explanatory text to the output once the failure scenarios have been identified.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log_64.txt ===
******************************************************************************
******************************************************************************
***                                                                        ***
***   This file contains the change history for the initial Win64 version  ***
***   of the C/C++ Run-Time Libraries (that is, modifications since v6.0). ***
***   The file should always be edited at the top so that the most recent  ***
***   changes are at the beginning of the file (immediately after this     ***
***   comment) and the oldest changes are at the end.                      ***
***                                                                        ***
******************************************************************************
******************************************************************************

-----------------------------------------------------------------

Fri 26-Feb-99   (GregF)

crtw32\h\sys\stat.h, timeb.h, types.h, utime.h
libw32\include\sys\stat.h, timeb.h, types.h, utime.h
    Fixed the time_t typedef to be __int64

-----------------------------------------------------------------

Thu 25-Feb-99   (rlanser)

crtw32\misc\ia64\longjmp.s
    Bug occurs when the local RSE frame spans across the boundary
    where the RNAT register is saved.  The fix is to replace the
    line at label Lj40.

	*****
	Lj40:
        	cmp.gt     pt2, pt3 = t5, zero
        	;;
	*****
	Lj40:
        	cmp.le     pt2, pt3 = 63, t5
	        ;;
	*****

-----------------------------------------------------------------

Tue 23-Feb-99   (rlanser)

crtw32\startup\ia64\chkstk.s
    Add section attributes.

-----------------------------------------------------------------

Tue 11-Feb-99   (rlanser)

crtw32\h\trnsctrl.h
crtw32\eh\frame.cpp
crtw32\eh\ia64\trnsctrl.cpp
    IA64 EH catch bug fixes.

-----------------------------------------------------------------

Tue 02-Feb-99   (rlanser)

libw32\msvcrt.src
    Add IA64 generic versions of single precision math routines.

-----------------------------------------------------------------

Thu 31-Jan-99   (rlanser)

fpw32\tran\ia64
    Add generic versions of single precision math routines.
fpw32\tran\lsources
    Add IA64 generic versions of single precision math routines.
srcrel\pd-b
        Add IA64 generic versions of single precision math routines.

-----------------------------------------------------------------

Thu 28-Jan-99   (rlanser)

crtw32\h\math.h
libw32\include\math.h
    IA64:  Use inline version of modff and hypotf.

-----------------------------------------------------------------

Tue 26-Jan-99   (rlanser)

makefile
makefile.inc
srcrel\objects.mkf
srcrel\pd-b
crtw32\startup\lsources
crtw32\startup\ia64\chkstk.s
    IA64:  Add _chkstk

-----------------------------------------------------------------

Thu 21-Jan-99   (rlanser)

makefile.sub
    IA64:  Add -D__assembler to .s preprocessing and hazard
           checking to ias.

-----------------------------------------------------------------

Tue 21-Jan-99   (rlanser)

fpw32\tran\ia64\frnd.s
    Add stop bits for assembler hazard.

-----------------------------------------------------------------

Thu 21-Jan-99   (GregF)

crtw32\startup\tlssup.c
        Added cast

-----------------------------------------------------------------

Tue 12-Jan-99   (rlanser)

crtw32\h\math.h
libw32\include\math.h
    Added IA64 back to the single precision math routine
    exclusion (intrinsics for IA64 also).

-----------------------------------------------------------------

Tue 15-Jan-99   (GregF)

crtw32\convert\atof.c, mbstowcs.c, strtod.c, wcstombs.c
crtw32\dos\fullpath.c
crtw32\eh\oldexcpt.cpp, oldexcpt.cpp
crtw32\exec\cenvarg.c
crtw32\h\crtdbg.h, direct.h, internal.h, malloc.h, mbstring.h, memory.h, new.h,
         nlsint.h, search.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, string.h
         time.h, wchar.h
crtw32\heap\calloc.c, expand.c, malloc.c, new.cpp, realloc.c, sbheap.c
crtw32\iostream\_strstre.cpp, ostream.cpp, stdiostr.cpp
crtw32\lowio\cputs.c
crtw32\mbstring\mbsnbcol.c, mbsnbico.c, mbsncoll.c, mbsnicol.c
crtw32\misc\bsearch.c, dbgheap.c, dbgnew.cpp, dbgrpt.c, getenv.c, onexit.c,
        perror.c, qsort.c, setlocal.c, w_env.c, wperror.c, wsetloca.c
crtw32\startup\crt0msg.c, stdenvp.c
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\stdio\fputs.c, fputws.c, _flsbuf.c, fread.c, fwrite.c, output.c, puts.c,
        setvbuf.c, sprintf.c, sscanf.c, swprintf.c, swscanf.c, tempnam.c,
        vsprintf.c, vswprint.c
crtw32\string\strncoll.c, strnicol.c, strxfrm.c, wcsncoll.c, wcsnicol.c,
        wcsxfrm.c
crtw32\time\wcsftime.c
libw32\msvcrt.src
libw32\include\crtdbg.h, direct.h, malloc.h, mbstring.h, memory.h, new.h,
        search.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, string.h, time.h,
        wchar.h
    Large package of mostly small changes to accomodate changing size_t to be
    a 64-bit type. 

libw32\include\setjmp.h, vararg.h
    Brought into sycnc with their uncleansed counterparts (in crtw32\h).

-----------------------------------------------------------------

Mon 14-Dec-98   (JamesMa)

srcrel\pd-b
    Removed references to crtw32\eh\axp64 directory, which v-kimpe
    apparently removed from VSS project on 12/7/98.

-----------------------------------------------------------------

Fri 11-Dec-98   (JamesMa)

IA64 merge:

makefile
    set _BUILD_IA64 switch, remove chkstk.obj
makefile.inc
    add memcpys.obj, memsets.obj; remove chkstk.obj, memcpy.obj, memset.obj
crtw32\dllstuff\crtexe.c, crtdll.c, cinitexe.c
crtw32\eh\unhandld.cpp
crtw32\startup\crt0dat.c
    restored section attributes for CRT$X** sections.
crtw32\eh\frame.cpp
crtw32\eh\ia64\ehstate.cpp, handlerc.cpp, trnsctrl.obj, handlers.s
    merged in changes from IA64CRT tree.
crtw32\eh\lsources
    Added ehstate.obj, handlers.obj & trnsctrl.obj
crtw32\heap\calloc.c, expand.c, malloc.c, realloc.c
    Disabled small-block heap for 0-sized allocations.
crtw32\misc\lsources
    Added memcpys.obj & memsets.obj
crtw32\misc\ia64\memcpys.s, memsets.s
    New files
crtw32\startup\lsources, startup.mkf
    Removed chkstk.obj
crtw32\string\lsources
    removed memcpy.obj & memset.obj
crtw32\string\sources.nt
    removed memcpys.s & memsets.s
crtw32\string\ia64
    Removed memcpys.s & memsets.s
fpw32\tran\lsources
    Added emfloat.obj
fpw32\tran\ia64\filter.c
    Merged in changes from IA64CRT tree.
libw32\msvcrt.src
    Added ??2@YAPEAXI@Z & ??3@YAXPEAX@Z to exports.
srcrel\pd-b
    Added crtw32\misc\ia64\memcpys.s, crtw32\misc\ia64\memsets.s, libw32\lib\ia64
    Removed crtw32\alpha64, crtw32\alpha64\chkstk.s, crtw32\string\ia64\memcpy.s, crtw32\string\ia64\memset.s
srcrel\objects.mkf
    Added memcpys.obj & memsets.obj, removed chkstk.obj

-----------------------------------------------------------------

Wed 21-Jan-98   (Gregf)

crtw32\h\setlocal.h
crtw32\misc\nlsdata2.c, setlocal.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
        wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
    Added new internal global, __lc_collate_cp, to keep track of and use the
    proper codepage for LC_COLLATE stuff. This fixes VC98 bug #25645.

crtw32\time\ftime.c
    Completely rewritten to fix the determination of DST status. This fixes
    VC98 bug #25763.

    Changes copied over from crt60 tree.

-----------------------------------------------------------------

Mon 15-Dec-97   (Gregf)

crtw32\misc\initctyp.c
    When no codepage is defined, use LOCALE_IDEFAULTANSICODEPAGE, rather than
    LOCALE_IDEFAULTCODEPAGE.

crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
              wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
    Use __lc_codepage in the locale-dependent string functions.

-----------------------------------------------------------------

Thu 11-Dec-97   (Gregf)

crtw32\stdhpp\functional
    Added const to () definition in mem_fun* (e.g., mem_fun_t) template classes.
    This fixes VS 98 bug #21393.

-----------------------------------------------------------------

Tue 09-Dec-97   (Gregf)

crtw32\heap\sbheap.c
    Release the address space reserved for a region when that region is
    is discarded. This fixes VS98 #21538.

-----------------------------------------------------------------

Fri 07-Nov-97   (GregF)

crtw32\mbstring\mbsncoll.c
    Small fix for POSIX build from Roger Lanser (already in ia64 tree).

-----------------------------------------------------------------

Thu 06-Nov-97   (GregF)

crtw32\heap\calloc.c, expand.c, free.c, malloc.c, msize.c, realloc.c
    Small fixes for POSIX build from Roger Lanser.

crtw32\h\wchar.h
libw32\include\wchar.h
    Enclosed macro and inline defs of isleadbyte() in #ifndef 
    _CTYPE_DISABLE_MACROS. Affected NT build.

-----------------------------------------------------------------

Mon 22-Oct-97   (GregF)

crtw32\stdhpp\list
libw32\include\list
    Added constructor (for list) for a pair of const _Ty * -s. This fixes
    VS98 bug #1478.

-----------------------------------------------------------------

Tue 21-Oct-97   (JamesMa)

log.txt -> log_v60.txt
    Renamed old LOG.TXT from V6.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


******************************************************************************
******************************************************************************
***									   ***
***  This file contains the history for the initial Win64 CRTs (relative   ***
***  to v6.0). The file should always be edited at the top so that the     ***
***  most recent changes are at the beginning of the file and the oldest   ***
***  changes are at the end of the file.  This comment marks the end.      ***
***									   ***
******************************************************************************
******************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v7.0 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 6.0).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------
Mon 25-Jun-01   (BryanT)

crtw32\heap\heapinit.c
crtw32\lowio\chsize.c

    Allocate large buffers off the heap instead of the stack so services.exe/winlogon
    don't fail (they have 8k stacks by default).

-----------------------------------------------------------------

Wed 13-Jun-01   (BryanT)

crtw32\startup\tidtable.c

    Call _mtterm() if there's a failure during _mtinit() so any allocated resources
    are freed.  Also revert the change to dllcrt0.c and crtdll.c.  This will need 
    to wait till post Whistler to fix (there's some apps that depend on DllMain
    not getting a PROCESS_DETACH if PROCESS_ATTACH returned FALSE.  The result was
    double free of resources.  A leak is the lesser of two evils here... :-(

-----------------------------------------------------------------

Wed 16-May-01   (BryanT)

crtw32\startup\dllcrt0.c
crtw32\dllstuff\crtdll.c
    
    Fix DllMainCRTStartup to call DllMain(PROCESS_DETACH) if attach failed.
    This matches the OS behavior and fixes a app verifier bug.
    
-----------------------------------------------------------------

Fri 11-May-01   (BryanT)

crtw32\convert\atox.c

    Don't AV if a null ptr is passed to atox/wtox.  Just return 0.
    
-----------------------------------------------------------------

Wed 09-May-01   (SHanson, PhilipLu)

crtw32\h\string.h, wchar.h
crtw32\string\ia64\memcpy.s, memmove.s [NEW]
crtw32\string\lsources, sources.nt
libw32\inc64\string.h, wchar.h
libw32\include\string.h, wchar.h
libw32\msvcrt.src, syscrt.src, syscrt64.src
makefile, makefile.inc
srcrel\objects.mkf, pd-b

    VS7#195834 (sort of) Replace IA64 memcpy and memmove, and move memcpy,
    memmove, and memset so they are static-link components of the IA64 CRT
    DLL, to avoid the overhead of calling into the DLL.  Maintain the
    existing exports of these routines from the DLL for old code.  Also,
    since memmove used to be dllimport, keep the __imp_ definition in the
    implib by marking memmove as a DATA export in the def files, allowing
    existing .obj files to find the necessary definition.

-----------------------------------------------------------------

Mon 07-May-01   (PhilipLu)

crtw32\stdhpp\fstream
libw32\include\fstream

    VS7#249553 Bad interaction between wifstream and tellg turned out to
    be bugs in basic_filebuf::seekoff and seekpos, which failed to properly
    handle pushback characters (which get used all the time for wchar_t
    streams).

-----------------------------------------------------------------

Thu 03-May-01   (PhilipLu)

crtw32\stdhpp\xlocale
libw32\include\xlocale

    VS7#248580 I recently changed std::_Maklocstr, adding a 3rd argument
    of type std::_Locinfo::_Cvtvec&.  That's illegal under /Za, since a
    non-const ref can only be bound to an lvalue.  The arg should have been
    const std::_Locinfo::_Cvtvec&.

crtw32\stdhpp\list, vector
libw32\include\list, vector

    VS7#248877 The ctors for std::vector(size_type _Count) and
    std::list(size_type _Count) could both potentially leak resources if
    constructing the default fill value threw.

-----------------------------------------------------------------

Wed 02-May-01   (PhilipLu)

crtw32\h\i386\ivec.h
libw32\include\ivec.h

    VS7#239974 Disable C4799 inside ivec.h if _SILENCE_IVEC_C4799 is defined.
    As written, this header will generate that warning, but that is to be
    expected, since the code uses MMX intrinsics without an EMMS or _m_empty
    in each function.  Allow users to shut up the warning, but don't do so
    unconditionally, since clients of ivec.h need to understand the potential
    for problems if they don't use EMMS in their own code.

-----------------------------------------------------------------

Wed 02-May-01   (GautamB)

crtw32\rtc\error.cpp
makefile

    VS7#241349 Removed the runtmchk.lib dependencies on CRT by adding obj to
    runtmchk.lib. earlier runtmchk.lib was same as rtc.lib but now it also
    includes exsup.obj exsup3.obj sehprolog.obj chkstk.obj.

-----------------------------------------------------------------

Tue 01-May-01   (BryanT)

crtw32\startup\crt0dat.c
    Remove TerminateProcess() call.  There's no need to do this here when
    simply exiting the function would serve the same purpose.
    
-----------------------------------------------------------------

Mon 30-Apr-01   (BryanT)

crtw32\dllstuff\crtlib.c
    Remove _NTSDK and simply return FALSE if the OS is incorrect.
  
crtw32\dllstuff\crtexe.c
    Don't fail to run on getmainargs failure - need to run downlevel.
    
crtw32\dllstuff\adjustfd.c, wildcard.c
    Remove _NTSDK.
    
fpw32\include\trans.h
fpw32\tran\amd64\ieee.c
    AMD64 changes from DaveC
    
libw32\msvcrt.src
    Fix Win64 Syscrt build - add set/query_new_handler/mode

-----------------------------------------------------------------

Sun 29-Apr-01   (BryanT)

crtw32\startup\crt0.c

    Fix posix build
    
-----------------------------------------------------------------

Wed 25-Apr-01   (PhilipLu)

crtw32\misc\initcrit.c

    VS7#244210 It isn't safe to call LoadLibrary/FreeLibrary during DllMain,
    so use GetModuleHandle instead in __crtInitCritSecAndSpinCount.

-----------------------------------------------------------------

Tue 24-Apr-01   (PhilipLu)

crtw32\rtc\error.cpp
crtw32\stdhpp\xlocale
libw32\include\xlocale
makefile
langapi\undname\testundn.mak, undname.inl, undname.mak

    VS7#243471 Build the CRT with /Zc:forScope, and get rid of all
    instances of non-conformant for scoping in the build.  Also change the
    standalone makefiles used for langapi\undname to use /Zc:forScope, to
    prevent CRT build problems appearing after FE checkins to undname.

-----------------------------------------------------------------

Thu 19-Apr-01   (PhilipLu)

crtw32\h\malloc.h
crtw32\heap\resetstk.c
libw32\include\malloc.h
libw32\inc64\malloc.h

    VS7#239962 _resetstkoflw did not work on Win9x.  Simplified some tests
    which were not correct for Win9x, tweaked the test for attempting to
    set a guard page too low (Win9x and WinNT have different requirements),
    and set a guard page as PAGE_NOACCESS instead of PAGE_GUARD for Win9x.
    Also changed the return from void to int, and return a nonzero success
    code if the stack reset worked.

-----------------------------------------------------------------

Fri 13-Apr-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#236286 Fixed a problem with a rethrow without a throw and catch(...)

-----------------------------------------------------------------

Fri 13-Apr-01   (KarlSi)

makefile

    VS7#233650 Move the location of the VC CRT build's DLL PDB files out
    of the dll_pdb subdirectory, back to the same directory as the DLLs.
    Part of allowing the build lab to build VC CRTs without full paths
    in the PDB info.  For now, the Sys CRTs still have their DLL PDB files
    down under dll_pdb.

-----------------------------------------------------------------

Fri 13-Apr-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#236286 Fixed problem of rethrow of Seh to be caught by __except.

-----------------------------------------------------------------

Fri 13-Apr-01   (PhilipLu)

crtw32\stdhpp\complex, sstream, xlocmon, xstring
libw32\include\complex, sstream, xlocmon, xstring
libw32\msvcprt.src

    VS7#226252 Remove explicit dllexport/import of some internal template
    base classes (_Complex_base, _Mpunct, _String_val), now that the C++
    frontend will implicitly apply dllexport/import for these base classes.

    More importantly, stop dllimporting std::allocator just because xstring
    has been included.  That breaks people who define their own operator
    new, and expect that new to be used for STL collection classes.  That
    wasn't happening in modules that included xstring, but was for other
    modules, leading to cross-heap delete crashes.

    std::allocator is not a base class of basic_string; it's a member of
    the _String_val base class.  So the fix here is to get rid of the
    explicit _CRTIMP2 specialization of allocator in xstring, and to
    disable the C4251 warning complaining about an object member not being
    dllimport in a class that is dllimport.  That warning isn't a problem
    here, because every use of the allocator member is within a member
    function that will be dllimported, and thus hidden away.

    Until the next LKG update, the C++ CRT DLL must still export the
    allocator members, but these are now private exports so they don't
    appear in the implib.

-----------------------------------------------------------------

Thu 12-Apr-01   (PhilipLu)

crtw32\stdcpp\wlocale.cpp
crtw32\stdhpp\xlocale, xlocmon, xlocnum, xloctime
libw32\include\xlocale, xlocmon, xlocnum, xloctime

    VS7#230612 The Dinkumware code had a number of problems with wchar_t
    facets in Asian locales that use MBCS.  Underneath the wchar_t facet,
    all real work was done in MBCS, but the conversion between Unicode and
    MBCS didn't handle leadbytes at all.  Fixes were made to _MAKLOCSTR,
    ctype<wchar_t>::do_widen & do_narrow, and time_put<wchar_t>::do_put.

-----------------------------------------------------------------

Mon 09-Apr-01   (PhilipLu)

crtw32\stdcpp\iosptrs.cpp, locale.cpp, locale0.cpp
crtw32\stdhpp\xlocale, xmemory
libw32\msvcprt.src

    Remove code under _RETAIN_OLD_CRT_CODE that isn't needed now that the
    9176 LKG update has taken place.  There is still some code present
    under _RETAIN_OLD_CRT_CODE, for the 21-Mar-01 checkin.

crtw32\stdhpp\cctype, cerrno, clocale, cmath, csetjmp, csignal, cstdarg,
    cstddef, cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque,
    exception, hash_map, hash_set, list, map, memory, set, typeinfo, vector,
    xdebug, xhash, xmemory, xstring, xtree, yvals.h
crtw32\tools\win32\relinc.if, relinc64.if
libw32\include\cctype, cerrno, clocale, cmath, csetjmp, csignal, cstdarg,
    cstddef, cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque,
    exception, hash_map, hash_set, list, map, memory, set, typeinfo, vector,
    xdebug, xhash, xmemory, xstring, xtree, yvals.h

    Remove references to _GLOBAL_USING and _HAS_MEMBER_TEMPLATES_REBIND,
    now that the LKG update has picked up these being permanently enabled.
    All code under the #if arms for these names not set has been removed,
    at the request of Dinkumware.

-----------------------------------------------------------------

Mon 09-Apr-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#234115 uncaught_exception was not working for CLR. Fixed it.

-----------------------------------------------------------------

Fri 06-Apr-01   (PhilipLu)

crtw32\dllstuff\crtlib.c

    VS7#235781 If CRT DLL is unloading without doexit() having been called
    already, then we need to call _cexit, not _c_exit, to make sure all the
    terminators are called (flush stdio, remove tmpfiles, ...).  This can
    happen more easily now with the URT dynamically loading and unloading
    the CRT DLL for C#/VB calling into the CRT DLL via P/Invoke.

fpw32\tran\i386\87cdisp.asm

    VS7#132450 sinh was incorrectly reporting an _UNDERFLOW error to
    _matherr on denormal inputs.  Turns out the internal error handling
    for the CHECKOVER case was doing the same thing as the CHECKRANGE case,
    checking for overflow and underflow, when it's supposed to only look
    for overflow.  CHECKOVER is only used by sinh and cosh, and cosh will
    never underflow, since cosh(x) >= 1, so sinh is the only FP API that
    could be hit by this longstanding (1992 or so) bug.

-----------------------------------------------------------------

Thu 05-Apr-01   (PhilipLu)

crtw32\stdhpp\xhash
libw32\include\xhash

    PJP noticed an additional change, to _Hash<T>::clear(), that was
    missing in the Mar 25 and Apr 4 updates.

-----------------------------------------------------------------

Wed 04-Apr-01   (PhilipLu)

crtw32\convert\tolower.c, toupper.c
crtw32\stdcpp\_tolower.c, _toupper.c
crtw32\stdcpp64\_tolower.c, _toupper.c

    VS7#232853 _tolower, _toupper, and the Dinkumware equivalents, when
    returning a double-byte char, were returning (leadbyte + trailbyte<<8).
    It's supposed to be (leadbyte<<8 + trailbyte).

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#233708 The fix for 230612 on Mar 25 was incomplete, breaking
    hash_map.  Fix _Hashval() to use _Mask instead of _Vec.size().

-----------------------------------------------------------------

Mon 02-Apr-01   (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt

    Build /O1 on Ia64 for st/mt/dll variants
    
crtw32\eh\sources.nt
crtw32\eh\i386\ehprolog2.c

    Build ehprolog2.c as a C++ file and document what -d1Binl does

crtw32\helper\nt\makefile.inc
crtw32\helper\nt\sources
    
    Changes to work outside of NT source tree.
    
crtw32\lowio\cgetws.c

    Fix truncation warning from compiler
    
crtw32\lowui\dlllib\sources
crtw32\stdio\dlllib\sources

    Stop trying to undef CRTDLL
    
crtw32\misc\crtmbox.c

    #undef _WIN32_WINNT so the desired value can be forced on.
    
crtw32\startup\nt\sources

    Don't build tidtable for libcnt variant.  No one s/b using c++ eh in kernel mode.

fpw32\tran\i386\cmacros.inc
fpw32\tran\i386\cruntime.inc

    Delete old copies of files that also exist in crtw32\h
    
fpw32\tran\i386\cpu_disp.c

    leave is #defined to __leave in the NT build.  Undef it so we can use it in the inline asm
    
fpw32\tran\i386\ftol.asm
fpw32\tran\i386\ftol2.asm    
fpw32\tran\i386\huge.asm

    Use the same cruntime.inc as the rest of the tree.
    
fpw32\tran\ia64\libm_error.c
fpw32\tran\ia64\libm_support.h

    Tweaks for posix build (_POSIX_ is defined, __POSIX__ needs to be the enum value)
    
-----------------------------------------------------------------

Wed 28-Mar-01   (PhilipLu)

crtw32\bsku\bsku.cpp
crtw32\dllstuff\atonexit.c, crtexe.c, crtlib.c, dll_argv.c, dllargv.c
crtw32\eh\unhandld.cpp
crtw32\h\internal.h
crtw32\linkopts\noarg.c, noenv.c, setargv.c, wsetargv.c
crtw32\lowio\ioinit.c
crtw32\mbstring\mbctype.c
crtw32\misc\charmax.c, lcnvinit.c, onexit.c
crtw32\startup\crt0.c, crt0dat.c, crt0init.c, dllcrt0.c, stdargv.c, stdenvp.c
crtw32\stdio\_file.c
crtw32\time\clock.c
fpw32\tran\i386\cpu_disp.c

    VS7#231220 Stop almost all instances of _amsg_exit fatal errors from
    showing up in the CRT DLL or a DLL linked with the CRT DLL.  Make all
    the various startup routines, including those in the .CRT$XI* startup
    array, return errors back to the DllMain or mainCRTStartup level instead
    of calling _amsg_exit.  EXEs will still call _amsg_exit, but now from
    the mainCRTStartup level.  DLLs, include the CRT DLL, will now just
    return FALSE from DLL_PROCESS_ATTACH, failing the load.

    One subtlety here: the .CRT$XI* array is processed in EXEs linked to
    the CRT DLL, but not in DLLs linked to the CRT DLL.  That's because
    the only possible .CRT$XI* entry in these circumstances will be for
    __lconv_init, if the component was compiled with -J.  We only want to
    run that initializer for an EXE, not a DLL, because DLLs linked to the
    CRT DLL should not override the localeconv() settings of an EXE linked
    to the CRT DLL.  Since __lconv_init is the only possible entry here,
    and it never returns an error, we will process the .CRT$XI* array in
    the EXE startup with _initterm instead of _initterm_e (which will
    propogate an error code back), so any error will go undetected.  That
    means we don't have to add a new export to the CRT DLL that would
    damage backwards-compatibility.

    Of course none of this confusing behavior was documented in the code.
    It is now.

crtw32\dllstuff\crtlib.c
crtw32\heap\heapinit.c
crtw32\misc\assert.c, dbgrpt.c, secfail.c, seclocf.c
crtw32\rtc\pdblkup.cpp
crtw32\startup\crt0msg.c, stdargv.c

    VS7#231284 GetModuleFileName will not zero-terminate the output buffer
    when a name must be truncated to fit.  None of the CRT calls to GMFN
    accounted for that, exposing them to buffer-overrun problems.

-----------------------------------------------------------------

Tue 27-Mar-01   (PhilipLu)

crtw32\dllstuff\crtlib.c
crtw32\rtc\error.cpp
crtw32\startup\crt0.c, dllcrt0.c

    VS7#230286 Always use GetVersionExA, not GetVersionEx, so we don't run
    into problems running on Win9x.

srcrel\pd-b
[DELETED:]
crtw32\dllstuff\i386\cinitexe.a, cinitexe.mak
crtw32\lowio\i386\cinitcon.a
crtw32\misc\i386\cinitone.a
crtw32\startup\i386\crt0init.a, crt0init.mak
crtw32\stdio\i386\cinitstd.a, cinittmp.a
crtw32\time\i386\cinitclk.a

    Get rid of ancient files that haven't been used since 1994 or so.  An
    early part of the fix for VS7#231220.

-----------------------------------------------------------------

Mon 26-Mar-01   (PhilipLu)

crtw32\stdhpp\xdebug
libw32\include\xdebug

    Back out Saturday's VS buildfix, now that compiler bug VS7#230468 has
    been fixed.

-----------------------------------------------------------------

Sun 25-Mar-01   (PhilipLu)

crtw32\h\mtdll.h, setlocal.h
crtw32\misc\inittime.c
crtw32\time\strftime.c

    VS7#196892 strftime specifiers %c, %x, and %X return a time formatted
    accorded to the current locale data, as specified in the Regional
    Settings control panel page, but we weren't handling these correctly.
    For calendars more complicated than the basic localized Gregorian, we
    can't simply translate the locale formatting string ourself, since it
    assumes a large base of knowledge of era/period strings, modified
    years, etc. (e.g. this is year 4334 according to one of the Korean
    calendar types).  For these types, we should just call Win32 APIs
    GetDateFormat/GetTimeFormat to handle the formatting.  I'm not doing
    this for calendar type 1, localized Gregorian, because that seems a
    bit riskier in that we might slightly change the existing output when
    what we're doing now is fine.

    Also fixed the handling of leading zero suppression in _store_winword,
    which handles these localized date/time formats (now for calendar type
    1 only).  Previously, leading zero suppression wasn't happening at all,
    which became clear when I compared the results against that returned
    by GetDateFormat/GetTimeFormat.

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#230612 P. J. Plauger sent me a fix for a bug a customer of his
    recently ran into.  The hash_set/hash_map containers could hit an
    infinite loop.  In the test case, this happened after a specific list
    of about 250 inserts and erases.

-----------------------------------------------------------------

Sat 24-Mar-01   (PhilipLu)

crtw32\stdhpp\xdebug
libw32\include\xdebug

    Rolling VS buildfix.  Work around compiler bug VS7#230468 exposed by
    fix for VS7#201153.  Don't declare placement vector operator new/delete
    in case non-placement vector new/delete aren't declared.  Workaround
    will be removed in a day or two.

crtw32\startup\stdargv.c, wincmdln.c

    VS7#229081 _acmdln and _wcmdln can be NULL under certain error
    conditions, so check them before dereferencing.

crtw32\stdhpp\xlocinfo.h
libw32\include\xlocinfo.h

    Add _CRTIMP2 and _CRTIMP to various prototypes in xlocinfo.h.

crtw32\stdhpp\xutility, yvals.h
libw32\include\xutility, yvals.h

    Move _cpp_max/_cpp_min #defines from yvals.h to xutility.

crtw32\h\fpieee.h
libw32\include\fpieee.h
libw32\inc64\fpieee.h

    Remove workaround for x86 backend bug #163574, error using
    __declspec(align) on function parameters (I think).

crtw32\stdhpp\exception
libw32\include\exception

    Remove workaround for VS7#227182, VS build problem caused by the
    VC debugger having a header named eh.h, the same as a CRT header.
    The debugger team has deleted the unneeded header.

crtw32\startup\tlssup.c

    The pointer to the callback array in the IMAGE_TLS_DIRECTORY is off by
    one, pointing at a NULL, so dynamic TLS inits never had a chance of
    working.  Bump the pointer to the first actual function pointer.  Still
    need linker and frontend work to really enable this, which will have to
    wait for post-VC7.0.

-----------------------------------------------------------------

Fri 23-Mar-01   (PhilipLu)

crtw32\rtc\error.cpp
crtw32\stdhpp\sstream, streambuf, strstream
libw32\include\sstream, streambuf, strstream

    Rolling buildfix.  More /Wp64 warnings just got enabled at /W3 and
    are firing in RTC and I/O Streams code, so add more casts to shut
    them up.

crtw32\stdcpp\_tolower.c, ios.cpp, locale.cpp, locale0.cpp, lsources,
    sources.nt, strstrea.cpp, wlocale.cpp, xdebug.cpp [NEW], xlocale.cpp,
    xmutex.cpp
crtw32\stdhpp\fstream, locale, streambuf, xdebug [NEW], xlocale, xlocmes,
    xlocmon, xlocnum, xloctime
crtw32\time\strftime.c
crtw32\tools\win32\relinc.cmd
doc\copysrc.bat
libw32\include\fstream, locale, streambuf, xdebug [NEW], xlocale, xlocmes,
    xlocmon, xlocnum, xloctime
srcrel\pd-b
makefile.inc

    VS7#201153 Customers trying to use _CrtDumpMemoryLeaks() instead of
    _CRTDBG_LEAK_CHECK_DF were seeing all the internal allocations for the
    C++ Standard Library appearing as leaks.  The C++ library needed to 
    make all internal allocations _CRT_BLOCKs, so they are ignored by the
    leak detection routines.  That includes defining derivatives of
    std::allocator and std::basic_string that use the debug CRT heap with
    _CRT_BLOCK tagging.

-----------------------------------------------------------------

Fri 23-Mar-01   (BryanT)

crtw32\misc\dirs
crtw32\startup\dirs
crtw32\stdio\dirs
crtw32\string\dirs
fpw32\fp32.nt
fpw32\conv\dirs
fpw32\tran\dirs

    Initial work to build the SYSCRT source.

crtw32\misc\amd64\...
crtw32\startup\amd64\...
fpw32\conv\fpinit.c
fpw32\include\cv.h
fpw32\include\tran.h
fpw32\tran\sincosh.c
fpw32\tran\amd64\...
fpw32\tran\tanh.c

    AMD64 changes from DaveC
    
crtw32\misc\dll\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
crtw32\startup\dll\sources
crtw32\startup\dlllib\sources
crtw32\startup\mt\sources
crtw32\startup\nt\sources
crtw32\startup\psx\sources
crtw32\startup\st\sources
crtw32\stdio\dll\sources
crtw32\stdio\mt\sources
crtw32\stdio\nt\sources
crtw32\stdio\st\sources
crtw32\string\sources.nt
fpw32\tran\sources.nt

    Add missing files.
    
crtw32\time\utime64.c

    Fix POSIX build
    
-----------------------------------------------------------------

Thu 22-Mar-01   (PhilipLu)

crtw32\h\crtdbg.h, mtdll.h
crtw32\misc\dbgrpt.c
crtw32\startup\mlock.c
libw32\inc64\crtdbg.h
libw32\include\crtdbg.h

    VS7#124998 Implement _CrtSetReportHook2.  Uses a doubly-linked list to
    record registered debug report hook functions.  The original function,
    _CrtSetReportHook, doesn't meet ATL Server's needs when DLLs try to
    register hooks, but cannot guarantee hooks will be added and removed
    in LIFO order.  In that case, we can end up pointing at a hook function
    that has been unloaded.

-----------------------------------------------------------------

Wed 21-Mar-01   (PhilipLu)

crtw32\eh\stdexcpt.cpp
crtw32\h\typeinfo.h
crtw32\stdhpp\exception, new, stdexcept, typeinfo
libw32\inc64\typeinfo.h
libw32\include\exception, new, stdexcept, typeinfo, typeinfo.h
libw32\msvcprt.src, msvcrt.src, syscrt.src, syscrt64.src
makefile

    VS7#5327, #5417, #127825 Make a set of exception classes used for RTTI
    support, ::bad_cast, ::bad_typeid, and ::__non_rtti_object, identical
    to those names in the std namespace, via using directives.  Trickier
    than it sounds, because the preexisting global and std namespace
    definitions were not identical, and I need to preserve the same class
    layout and exported methods as existed previously.  The slimiest hack
    involves the need for ::bad_cast to now have two incompatible ctors,
    bad_cast(const char*) and bad_cast(const char* const&).  The latter was
    the only ctor before, but the former had to be added so std::bad_cast
    kept its preexisting ctor.  I got rid of bad_cast(const char* const&),
    added a private ctor bad_cast(const char* const*), and since the two
    of those have identical codegen, added an alias '=' declaration in the
    .def file for the main CRT DLL.

    The .def file for the C++ DLL now has a number of forwarder lines, e.g.
        ??1bad_cast@std@@UAE@XZ = BASECRT.??1bad_cast@@UAE@XZ PRIVATE
    to preserve the existing exports from that DLL.  These can be removed
    once the next LKG update with this code takes place.

    The stdhpp changes are to put _Doraise, a protected virtual member of
    the exception hierarchy classes in the Dinkumware code, under control
    of "#if !_HAS_EXCEPTIONS", since this function is only used by the
    special non-throwing version of the C++ Library, which does not need
    to use the main CRT's exception classes.

crtw32/stdcpp/stdthrow.cpp

    Minor bug noticed while working on the previous checkin.  A reference
    to stderr should be to _cpp_stderr, for _STATIC_CPPLIB compatibility.
    This wasn't detected before because stdthrow is only used for a C++
    Library build with _HAS_EXCEPTIONS == 0, which we don't use.

-----------------------------------------------------------------

Tue 20-Mar-01   (PhilipLu for KFrei)

crtw32\rtc\error.cpp, pdblkup.cpp
makefile

    VS7#227306 Fix buffer overrun problems in RTC support, and configure
    so /GS will not insert cookie checks in any RTC support code, by using
    _alloca to allocate any local string buffers.

    VS7#224261 Reenable /GS in the CRT build.  The static link components
    of the msvcrt[d].lib implib must not have any /GS checks in them, since
    that adds new dependencies to user code that wasn't previously needing
    to run the CRT startup code.  Now that the /GS checks in RTC have been
    removed, /GS is OK.

srcrel\external.mkf, makefile

    A request from the build lab.  Unconditionally clear _CL_ in these
    makefiles if we're doing a cross-hosted CRT build (i.e. IA64 CRT built
    on x86).  These makefiles are used to build native-hosted tools needed
    during the CRT build, and the lab uses _CL_ to point to the boot-phase
    cross-compiler passes during the self-build.  Right now, clearing _CL_
    is under a define set by the lab only, but they're changing the define
    and there's no good reason this can't be unconditional.

-----------------------------------------------------------------

Mon 19-Mar-01   (BryanT)

crtw32\crt32.nt
crtw32\convert\dirs
crtw32\direct\dirs
crtw32\dllstuff\dirs
crtw32\dos\dirs
crtw32\eh\dirs
crtw32\exec\dirs
crtw32\heap\dirs
crtw32\helper\dirs
crtw32\iostream\dirs
crtw32\lowio\dirs
crtw32\mbstring\dirs

    Initial work to build the SYSCRT source.
    
crtw32\convert\mbtowc.c

    Change _NTSUBSET_ version to use RtlAnsiCharToUnicodeChar instead of
    RtlAnsiByteToUnicodeN.
    
crtw32\convert\toupper.c, tolower.c
crtw32\h\cmacros.inc
crtw32\h\stddef.h
crtw32\lowio\osfinfo.c
    
    Bring over change from naughty word police.

crtw32\direct\sources.nt
crtw32\eh\dll\sources
crtw32\eh\dlllib\sources
crtw32\eh\mt\sources
crtw32\eh\st\sources
crtw32\heap\dll\sources
crtw32\heap\mt\sources
crtw32\heap\st\sources
crtw32\lowio\dll\sources
crtw32\lowio\mt\sources
crtw32\lowio\st\sources
    
    Add missing files.
    
crtw32\dllstuff\crtlib.c

    Add stricter test at load time to preclude dll from loading on downlevel
    OS's (actually any OS besides the one it was built for).
    
crtw32\dllstuff\amd64\dllsup.c, throw.cpp
crtw32\dllstuff\dlllib\sources
crtw32\h\cruntime.h
crtw32\h\sect_attribs.h
crtw32\h\setjmp.h
crtw32\h\stdarg.h
crtw32\linkopts\sources

    AMD64 changes from DaveC
    
crtw32\eh\nt\...

    Delete - C++ eh not supported in kernel mode.
    
...\alpha\...
...\axp64\...
crtw32\helper\sources.nt

    Delete - alpha/axp64 no longer an issue
    
crtw32\helper\nt\makefile.inc

    Add rule to publish sehprolog.obj
    
crtw32\small\...

    Delete - small.lib was used for alpha/axp64/mips/ppc.  It's no longer interesting.
    
-----------------------------------------------------------------

Sun 18-Mar-01   (PhilipLu)

crtw32\stdhpp\exception
libw32\include\exception

    VS7#5283 Names terminate, set_terminate, terminate_handler, unexpected,
    set_unexpected, and unexpected_handler all need to be placed in
    namespace std, as well as the global namespace where they exist now.

crtw32\h\stdexcpt.h
libw32\include\stdexcpt.h
libw32\inc64\stdexcpt.h

    Cleanup noticed while making the change for VS7#5283.  There's a block
    of code that's been under an "#elif 0" for 5 years.  It can be removed.

crtw32\h\cruntime.h, new.h
crtw32\heap\setnewh.cpp
crtw32\stdcpp\stdhndlr.cpp
crtw32\tools\win32\relinc.if, relinc64.if
libw32\msvcrt.src, syscrt.src
libw32\include\new.h
srcrel\msvc40.if

    VS7#194908 Headers new.h and new were incompatible if you tried to use
    set_new_handler.  The main CRT had an archaic version of
    ::set_new_handler, in setnewh.cpp, which asserted if you passed in
    anything except NULL.  This has been superceded by the implementation
    of std::set_new_handler in the Dinkumware-supplied stdhndlr.cpp, but
    the headers botched forcing any use of set_new_handler to the std one.

    Fixed so including <new> will define std::set_new_handler and
    std::new_handler, while including <new.h> will define those two names,
    and inject them with using directives as ::set_new_handler and
    ::new_handler.

    setnewh.cpp, with the old definition of ::set_new_handler, is retained
    for backwards compatibility with old binaries, but this routine is
    no longer available through the headers.  The old function is forcibly
    exported from the main CRT DLL.

    Defined _USE_OLD_STDCPP in cruntime.h when the old stdcpp64/stdhpp64
    files are used, so the changes to new.h can be done only when using
    stdcpp/stdhpp instead.  Configured the relinc process so the include
    files for Win64 syscrts use the old new.h definitions, everything else
    uses the new ones.

crtw32\stdhpp\new
libw32\include\new

    Noticed while making the change for VS7#194908 that the fix for
    VS98#18416 had been undone.  A declaration of a non-existant "_New_hand"
    had slipped back into the header.

makefile

    Back out the actual makefile enabling of /GS that was checked in
    yesterday.  The VS build is failing because of the extra CRT
    dependencies this causes, and I need to investigate why.

-----------------------------------------------------------------

Sat 17-Mar-01   (PhilipLu)

crtw32\dllstuff\crtlib.c
crtw32\startup\crt0.c, dllcrt0.c
makefile

    VS7#224261 Turn on /GS in the x86 CRT.  Not totally trivial, because
    the startup code that initializes the global guard cookie can't trigger
    the compiler's local buffer overrun guard logic, since the global cookie
    on entry will differ from that on exit.  Worked around by allocating the
    OSVERSIONINFO via _alloca.

crtw32\stdhpp\xloctime
libw32\include\xloctime

    VS7#159194 Addition to Dinkumware drop 3.10.  The time_get facet was
    not accepting dates in the same format as time_put was outputting.

crtw32\stdhpp\streambuf
libw32\include\streambuf

    Tweak to the Dinkumware drop 3.10, to bring changes I made in line with
    the official Dinkumware version.  Just moved a _Mutex base class in
    basic_streambuf to be the first data member instead, and added _Lock
    and _Unlock non-virtual member functions.

-----------------------------------------------------------------

Fri 16-Mar-01   (PhilipLu)

crtw32\stdhpp\complex, fstream, ios, istream, locale, ostream, sstream,
    streambuf, string, xcomplex, xlocale, xlocmes, xlocmon, xlocnum, xloctime,
    xstring
crtw32\tools\win32\relinc.if, relinc64.cmd, relinc64.if [new]
libw32\include\complex, fstream, ios, istream, locale, ostream, sstream,
    streambuf, string, xcomplex, xlocale, xlocmes, xlocmon, xlocnum, xloctime,
    xstring

    VS7#216778 The frontend now allows "template class __declspec(dllimport)
    myclass<char>" to mean an explicit specialization should be imported from
    a DLL.  Previously, you needed to say "extern" at the front of that, which
    was an extension, so using it failed under /Za with an error, and under /Ze
    you got a C4231 warning.  Since the frontend has changed, I've removed the
    unneeded extern, along with the pragmas to suppress C4231, allowing the
    C++ Standard Library headers to be used /Za /MD[d].

    The relinc changes are necessary because now the stdhpp header cleanse
    treats __FORCE_INSTANCE as always on, but stdhpp64 must still treat it
    as always off.  The same relinc.if can no longer be used for both sets
    of headers.

-----------------------------------------------------------------

Thu 15-Mar-01   (PhilipLu)

langapi\undname\testundn.cxx, undname.cxx

    VS7#5674 Fix of 10-Dec-99 was incomplete.  We should use a lock in
    __unDNameEx as well as __unDName.  Also, added a -x switch to testundn,
    the undecorator verification test app, to test __unDNameEx instead of
    __unDName.  Added heap leak detection to testundn, too, to head off
    future problems (no leaks currently).

-----------------------------------------------------------------

Wed 14-Mar-01   (PhilipLu)

crtw32\stdhpp\xmemory

    VS7#225243 As part of the 3.10 Dinkumware integration, I removed some
    stuff under _RETAIN_OLD_CRT_CODE that I thought was unnecessary.  I was
    wrong.  The code removed is needed until the next LKG update, when the
    LKG headers will pick up the enabling of _HAS_MEMBER_TEMPLATES_REBIND.

crtw32\string\strlwr.c

    VS7#224860 _strlwr will leak the heap buffer malloc'd if _alloca can't
    be used because the stack is almost full.  Also some minor formatting
    and comment changes to make this file and strupr.c look the same.

crtw32\lowio\getch.c

    VS7#224864 _kbhit will leak the heap buffer malloc'd if _alloca can't
    be used because the stack is almost full.

crtw32\stdio\input.c

    VS7#224990 _input/_winput should only allocate the bit map used for
    handling the %[...] spec the first time one of those is seen.  The code
    was allocating it each time, leaking 8K for the _winput case when the
    stack was almost full and malloc was used instead of _alloca.

crtw32\string\strupr.c

    VS7#224974 _strupr has a race condition because it passes 0 instead of
    the proper per-thread codepage to __crtLCMapStringA.  If another thread
    changes the global locale between entry to _strupr and the load of the
    locale in __crtLCMapStringA, the wrong codepage will be used.  Also
    some minor formatting and comment changes to make this file and
    strlwr.c look the same (which is how this turned up).

-----------------------------------------------------------------

Tue 13-Mar-01   (PhilipLu)

crtw32\stdcpp\_tolower.c, _toupper.c

    VS7#190902 std::ctype<>::tolower and toupper use helper functions
    _Tolower and _Toupper, which take a pointer to the ctype's locale info,
    which may not match the current C library's global locale.  But the
    helpers weren't using that specific locale when checking if a character
    below 0x100 was upper/lowercase.

crtw32\stdcpp\newop2.cpp

    VS7#112077 The nothrow version of operator new needs to call malloc
    under the try/catch, instead of just calling _callnewh there.  That's
    because malloc can itself call _callnewh, if _set_new_mode(1) is active.

crtw32\stdcpp\newop.cpp, newop2.cpp

    VS7#221760 _callnewh needs to be marked throw(...), so the optimizer
    won't discard the try/catch in the nothrow version of operator new.
    Also fixed the _callnewh prototype in the throwing operator new for
    consistency.

-----------------------------------------------------------------

Mon 12-Mar-01   (PhilipLu)

crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop2.cpp, nomemory.cpp,
    nothrow.cpp, raisehan.cpp, stdhndlr.cpp, stdthrow.cpp, string.cpp,
    strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp,
    wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c, xdateord.cpp,
    xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c,
    xfdtest.c, xferaise.c, xfexp.c, xfsinh.c, xfvalues.c, xgetwctype.c,
    xlcosh.c, xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp,
    xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmbtowc.c, xmtx.c,
    xmtx.h, xmutex.cpp, xpoly.c, xsinh.c, xstod.c, xtowlower.c, xtowupper.c,
    xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmath.h, xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h

    Integrate the 010208 drop of the Dinkumware C++ Library, version 3.10.
    Fixes bugs VS7#150517 and 157130.  Also has a start of the fix for
    VS7#188201, but the fix appears to need more work.  Most of the work is
    some internal framework shuffling to make sure lazy facets aren't
    leaked.

crtw32\stdhpp\xutility
libw32\include\xutility

    VS7#188201 Permit comparisons between an iterator on the LHS and the
    corresponding const_iterator on the RHS, for _Ptrit-based iterators.
    The opposite order, const_iterator on the LHS, already worked fine
    because we have a ctor that will convert the non-const iterator to the
    corresponding const_iterator.  For non-const on the left, add global
    template functions that match non-const LHS, const RHS and invert the
    comparison order so the RHS will get converted to a const_iterator.

crtw32\h\i386\dvec.h, fvec.h, ivec.h
libw32\include\dvec.h, fvec.h, ivec.h

    VS7#127210 The Intel-supplied headers [dfi]vec.h, for easier access
    to the MMX/SSE/SSE2 intrinsics, used the old I/O streams, and thus
    got a deprecated warning when used.  Switched to using the supported
    Dinkumware I/O streams instead, and moved all the uses under an #ifdef
    _ENABLE_VEC_DEBUG, since we don't want to require compiling /GX or
    bloating the code whenever these are used.

    Also fixed level 1 warnings and a "cout <<" instead of "os <<" that
    I ran across while fixing this.

-----------------------------------------------------------------

Fri 09-Mar-01   (PhilipLu)

eh\i386\lowhelpr.asm
misc\i386\exsup.asm, exsup3.asm

    VS7#221754 Add .FPO directives to the asm code that calls into the user
    code for C++ EH and SEH, so callstacks are correct.  Added FPO data for
    _CallSettingFrame, _except_handler3, _abnormal_termination, and
    _local_unwind2.

makefile, makefile.inc, makefile.sub

    Fix and clean the user-rebuild makefiles.  My 26-Feb change to the CRT
    build broke the user CRT rebuild scenario when the path to the include
    directory has spaces in it, as is the default.  I needed to put quotes
    around $(VCTOOLSINC) in the recursive make invocations.  I also noticed
    some text in the cleansed makefiles which shouldn't have been there.
    There were references to BLD_SYSCRT and DEVBUILD, as well as to the
    stdcpp64 directory and some private CRT build tools.  Removed them all
    using additional STRIPLIN comments.

-----------------------------------------------------------------

Thu 08-Mar-01   (PhilipLu)

crtw32\h\math.h
fpw32\tran\ceil.c, floor.c, lsources, modf.c, sources.nt
fpw32\tran\i386\87ctran.asm, atan.asm, atan_pentium4.asm [NEW],
    atan_table.c [NEW], ceil_pentium4.asm [NEW], cpu_disp.c [NEW],
    disp_pentium4.inc [NEW], exp_pentium4.asm [NEW], floor_pentium4.asm [NEW],
    ftol2.asm [NEW], libm_error.c [NEW], libm_support.h [NEW], log.asm,
    log10_pentium4.asm [NEW], log_pentium4.asm [NEW], modf_pentium4.asm [NEW],
    pow.asm, pow_pentium4.asm [NEW]
libw32\inc64\math.h
libw32\include\math.h
libw32\msvcrt.src, syscrt.src
srcrel\objects.mkf, pd-b
makefile, makefile.inc

    VS7#215249 Pick up improved floating point functions from Intel.  Most
    of this consists of SSE2-specific versions of ceil, floor, modf, atan,
    exp, log, log10, and pow, which are automatically called if running on
    an SSE2-capable CPU (i.e. the Pentium4).

    This has been in the works for a couple months, and includes a few
    minor bugfixes in the existing non-SSE2 code that turned up in
    validating the routines:

        modf(x) for x a negative integer should return a fractional part
            of -0.0, not +0.0
        log and log10(-denormal) were not setting an errno of EDOM
        pow(+/-0, -denorm) was returning 0 instead of infinity

    Note that the SSE2 implementations can be unavoidably different in the
    LSB, since SSE2 uses 8-byte FP, and the x87 stack 10 byte.  To allow
    users to force use of the old routines, I've added new function
    _set_SSE2_enable().

    So that existing apps using MSVCRT.DLL won't suddenly get different
    results on a Pentium4, I've made the system CRT default to not using
    the new SSE2 code.  You can still call _set_SSE2_enable(TRUE) to
    switch to the new routines when running on a Pentium4.

    Finally, there's _ftol2, a replacement for _ftol which doesn't need
    to change the rounding mode, so it avoids the FLDCW stalls.  A new name
    is required because it uses 2 slots on the x87 stack, while _ftol only
    uses 1.  The compiler will have to switch the name of the helper.  I've
    made _ftol2 statically linked even in msvcrt.lib, so we don't take an
    unnecessary indirect branch to get into the CRT DLL.

srcrel\common.mkf, external.mkf, makefile, objects.mkf
makefile

    Some additional build work, continuing what was done for VS7#214893
    back on 26-Feb.  Print out the current TARGET_CPU, LLP64, and
    BLD_SYSCRT settings.  More importantly, detect attempts to use a
    pre-existing build tree that had different values for these vars, or
    attempts to use stdcpp when the tree already has stdcpp64 (or vice-
    versa), and issue a fatal NMAKE error.

-----------------------------------------------------------------

Wed 07-Mar-01   (PhilipLu)

    VS7#221122 My 20-Feb-01 checkin to remove _RT_LOCK fatal errors broke
    the CRT running on Win9x, and probably broke it elsewhere too, but NT
    was too kind to mention that.  I was releasing the _HEAP_LOCK critsec
    before I was finished using the heap.  Change to free all normal
    locks first, so they can be freed from the heap, then free all the
    preallocated locks, including _HEAP_LOCK.

-----------------------------------------------------------------

Tue 06-Mar-01   (PhilipLu)

crtw32\stdhpp\xmemory
libw32\include\xmemory

    VS7#221135 Turning on _HAS_MEMBER_TEMPLATES_REBIND broke anyone who
    wrote their own operator new, compiled /MD[d], and had container
    classes (except basic_string) specialized on char, wchar_t or unsigned
    short.  The problem is std::allocator<T> for those types is dllimported
    from msvcp70 (thanks to questionable declarations in xstring), but now,
    std::allocator::allocate is a member template function, which means it
    is always locally generated, and never specialized.  So allocate()
    would use the local operator new, and the dllimported deallocate()
    would use the CRT operator new, triggering a quick crash.

    Fix is just to make the member-template allocate() stop calling global
    template function _Allocate() directly, and instead call through a
    non-template member form of allocate(), which will be dllimported to
    match deallocate().

crtw32\h\i386\mm3dnow.h
libw32\include\mm3dnow.h

    VS7#199371 Add prototypes for new 3DNow intrinsics _m_from_float and
    _m_to_float.

-----------------------------------------------------------------

Mon 05-Mar-01   (PhilipLu)

fpw32\tran\i386\debug.c, filter_simd.c, xmmi2_fp_emul.c, xmmi_fp_emul.c,
    xmmi_types.h

    VS7#215249 Pick up Intel's support for the Pentium4 DAZ bit in
    _fpieee_flt.

crtw32\stdhpp\xlocale, yvals.h
libw32\include\xlocale, yvals.h

    VS7#212255 std::_Tidyfac<_Facet>::_Tidy must be __declspec(unmanaged)
    for /clr compiles.  This function is registered for callback via atexit,
    but by the time it is called, the URT has already been shut down.  In
    general, any function run at DLL unload must be unmanaged.

crtw32\startup\stdenvp.c

    VS7#174755 Fix a null deref problem reported by NT.  If
    __crtGetEnvironmentStrings[AW] fails and returns a NULL during startup,
    _[aw]envptr will be NULL on entry to _setenvp, which failed to check
    for that before dereferencing it.  Just added a NULL check, issuing
    the same _RT_SPACEENV fatal error used elsewhere in _setenvp in
    out-of-memory situations.

-----------------------------------------------------------------

Tue 27-Feb-01   (PhilipLu)

crtw32\convert\isctype.c

    VS7#213380 Code that compiled /D_DEBUG /ML and was fine in VC6 could
    fail to link in VC7.  That's because we added a debug test to ctype.h,
    which called a routine that was only present in debug CRTs.  The CRT
    headers use _DEBUG as the flag that a debug CRT is being used, but in
    this case, by manually defining _DEBUG, the user is fooling that logic.

    The problem is that _DEBUG has been hijacked by other, non-CRT code.
    If we had more CRT header code under _DEBUG, the proper fix would
    probably be to have cl.exe define both _DEBUG and _CRT_DEBUG if the
    /M[LTD]d switches are used, and key the header tests off _CRT_DEBUG
    instead.  But that can wait until we add more debug header tests.
    For now, this is a minor case that only shows up when using /ML and
    compiling C, not C++.  So we're going with the simpler fix of defining
    the missing entrypoint, _chvalidator, in libc.lib, and not in the
    other retail CRTs.

srcrel\common.mkf

    Tweak the new common.mkf file added yesterday for VS7#214893.  If
    %VCFLAVOR% exists in the environment, then we look for the native
    toolset at, e.g. %DEVTOOLS%\x86\%VCFLAVOR%.  If it's not defined,
    look for the VC7 and VCLKG trees as before.

-----------------------------------------------------------------

Mon 26-Feb-01   (PhilipLu)

srcrel\common.mkf [NEW], external.mkf, makefile, pd-b
cleanbld.cmd, makefile

    VS7#214893 Some CRT build changes to make it easier for other devs to
    build the CRT.  Previously, the build relied on %VCTOOLS%, and after my
    14-Feb-01 checkin, some fixed paths under %DEVTOOLS%\*\vc7.  That's
    problematic for people who use vclkg instead of vc7 under devtools.

    I'm changing the build so the only thing necessary is %DEVTOOLS%.  The
    makefiles will search for the flavor of VC that's present under there,
    with VC7 taking precedence over VCLKG.

    You can also directly specify all the various paths needed, using
    %VCTOOLS% or %VCTOOLSINC% for the main CRT build, and %DEVTOOLSBIN%,
    %DEVTOOLSLIB%, %DEVTOOLSINC%, and %DEVTOOLSSDKLIB% for the srcrel
    tools build.

    Makefile and srcrel\common.mkf now have extensive error messaging that
    explains what's required if the setup is in some way incorrect.

mk.bat

    Trivial change - have mk.bat (which builds the CRT in-place in the
    source tree under the build directory) save the build log to bld.log
    instead of build.log, so mkbld and mk don't overwrite the other's log.

crtw32\eh\frame.cpp

    VS7#217108 Finish up work on new helper function __CxxCallUnwindDtor.
    I noticed that the __except(terminate()) should probably be
    __except(FrameUnwindFilter(exception_info())), to match the unmanaged
    case.  That permits SEH to pass out of a dtor unwind, but a throw to
    result in a call to terminte().  After testing, MarkLe agreed, so now
    it's changed.

-----------------------------------------------------------------

Sun 25-Feb-01   (PhilipLu)

crtw32\stdhpp\yvals.h

    VS7#218235 Dinkumware support for MBCS in mbrtowc and other such
    routines was busted by the checkin for vs7#202930.  The definition
    for _cpp_isleadbyte(c) needlessly shifts 'c' right by 8 bits, breaking
    the Dinkumware code in locales with leadbytes like Japanese.

-----------------------------------------------------------------

Sat 24-Feb-01   (PhilipLu)

crtw32\eh\frame.cpp
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#217108 Add helper function __CxxCallUnwindDtor from MarkLe.  It
    is called by managed code to handle calling a destructor during an
    unwind so that terminate() will be called if the dtor throws.

crtw32\h\i386\dvec.h, emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h
libw32\include\dvec.h, emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h

    VS7#217691 Remove "INTEL CONFIDENTIAL" from dvec.h/emmintrin.h, since
    SSE2 is now publicly released.  Also clean up the header comments,
    getting rid of source control system comments and a revision comment.

crtw32\stdhpp\deque, iterator, list, xtree, xutility
libw32\include\deque, iterator, list, xtree, xutility

    VS7#216777 Remove #pragma warning controls for C4284 from these C++
    Library headers.  That warning no longer exists, and a /Wall compile
    will issue C4619 complaining about a non-existant warning number being
    used by #pragma warning.

-----------------------------------------------------------------

Fri 23-Feb-01   (gautamb)

fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan2.s, atan2f.s, exp.s,
    expf.s, ldexp.s, ldexpf.s, pow.s, powf.s, sinh.s, sinhf.s
makefile

    VS7#212094 changed the function names in almap.lib to correct ones for ia64
    specific case.

    Added new math update libm ver 5.5.104

-----------------------------------------------------------------

Fri 23-Feb-01   (gautamb)

crtw32\convert\wcstod.c, wtof.c
crtw32\eh\typname.cpp
crtw32\startup\wild.c
crtw32\stdio\input.c, popen.c

    VS7#215477 Added check for return values for malloc. This will avoid some
    unwanted AVs in low memory conditions.

-----------------------------------------------------------------

Wed 21-Feb-01   (PhilipLu)

crtw32\misc\initcrit.c

    Buildfix - Yesterday's change to initcrit.c would use
    InitializeCriticalSectionAndSpinCount on Win98/WinME, but that API on
    those OSes is broken.  It should return a BOOL success code, but
    instead is a VOID return.  Just use InitializeCriticalSection there.

langapi\undname\undname.cxx

    Forgot to check in the langapi component of VS7#172586.

-----------------------------------------------------------------

Tue 20-Feb-01   (PhilipLu)

crtw32\h\exsup.inc, internal.h, mtdll.h
crtw32\lowio\ioinit.c, osfinfo.c
crtw32\misc\initcrit.c
crtw32\startup\mlock.c, tidtable.c
crtw32\stdio\popen.c, rmtmp.c, stream.c, tempnam.c, tmpfile.c
srcrel\pd-b

[DELETED:]
fpw32/inc/i386/os2dll.inc

    VS7#172586 Stop issuing _RT_LOCK fatal errors.  This is an out-of-memory
    error when a critical section could not be allocated.  CRT fatal errors
    have to be avoided if at all possible, because the CRT DLL could be
    used by some long-lived server app (e.g. IIS), and calling ExitProcess,
    as CRT fatal errors do, is unacceptable in such an app.  We now
    preallocate all named locks, as well as the FILE* locks for stdin,
    stdout, and stderr.  We don't preallocate 4 named locks, but always
    call _mtinitlocknum to allocate those before every use, so failure to
    allocate on the first call can be detected.

    This currently gives 14 preallocated locks, as compared to the 4 we
    previously used.  We also detect a failure to allocate a lock for other
    files, and fail the file open instead of abort.  Note that one instance
    of _RT_LOCK still exists, when a _lock call is issued on a lock which
    hasn't been allocated yet, but that should never happen.  If it does,
    it's an internal error in the CRT.

    As part of this, got rid of file os2dll.inc, which is no longer used,
    and had a number of ancient, incorrect, asm equates for the named locks.
    Also got rid of a bunch of obsolete named locks that are never used.

-----------------------------------------------------------------

Wed 14-Feb-01   (PhilipLu)

cleanbld.cmd
srcrel\external.mkf, makefile

    The VS team devtools project is being reorganized, so now the CRT build
    requires environment variable DEVTOOLS to be set.  Use %DEVTOOLS% to
    find the proper native-hosted components when building the srcrel tools
    during a cross-hosted Win64 CRT build.

-----------------------------------------------------------------

Mon 12-Feb-01   (PhilipLu)

crtw32\stdhpp\yvals.h
crtw32\include\yvals.h

    VS7#5292 Turn on _GLOBAL_USING to wrap C library in namespace std, once
    again.  The new LKG compiler fixes the bugs that prevented this back on
    Dec 8, 2000.

    Also turn on _HAS_MEMBER_TEMPLATES_REBIND now that the compiler is
    capable of handling it, and the VS build has fixed three places
    where a std::map had a const key type.  That's illegal - the key must
    be assignable, and _HAS_MEMBER_TEMPLATES_REBIND exposed that problem
    because it generated an allocator<const int>.

-----------------------------------------------------------------

Thu 08-Feb-01   (GautamB)

crtw32\h\stdlib.h
crtw32\misc\bswap.c
libw32\inc64\stdlib.h
libw32\include\stdlib.h

    VS7#209247 added __cdecl before byteswap functions.

-----------------------------------------------------------------

Thu 08-Feb-01   (PhilipLu)

libw32\syscrt64.src

    Buildfix for 64-bit sys CRTs.

-----------------------------------------------------------------

Wed 07-Feb-01   (PhilipLu)

crtw32\h\ctype.h, wchar.h
crtw32\misc\initctyp.c
libw32\include\ctype.h
libw32\inc64\ctype.h

    Buildfixes to complete fix for VS7#202930.

crtw32\h\math.h, stdio.h
libw32\inc64\math.h, wchar.h
libw32\include\math.h, wchar.h

    Cosmetic changes.

-----------------------------------------------------------------

Wed 7-Feb-01   (GautamB)

crtw32\h\ctype.h, mtdll.h, setlocal.h, stdio.h, stdlib.h
crtw32\misc\ctype.c, initctyp.c, setlocal.c
crtw32\stdcpp\_tolower.c, _toupper.c, cerr.cpp, cin.cpp, clog.cpp, cout.cpp,
    stdthrow.cpp, wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp, xdateord.cpp,
    xmbtowc.c, xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c, xwctomb.c
crtw32\stdhpp\xlocale, yvals.h
crtw32\stdio\_file.c
libw32\inc64\stdlib.h
libw32\include\stdlib.h, xlocale
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#202930 Fixed problem with _STATIC_CPPLIB to work. there were some
    problem with data being exported from dll.

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    VS7#193177 Now we need to define _USE_MATH_DEFINES to define math
    constants

-----------------------------------------------------------------

Wed 07-Feb-01   (PhilipLu)

fpw32\tran\ia64\modf.s, modff.s

    VS7#209420 modf/modff can improperly raise on Invalid Exception if
    passed an FP value greater than the _INT64_MAX.  An fcvt.fx.trunc
    should be using .s1 instead of .s0.

makefile.sub

    VS7#209816 Don't use IA64 compiler option -QIA64_A0 any longer.
    Cl.exe already supplies the proper default.

-----------------------------------------------------------------

Thu 14-Dec-00   (PhilipLu)  Ported Tue 06-Feb-01   (KarlSi)

crtw32\stdcpp\xlock.cpp
crtw32\stdhpp\istream, ostream, streambuf, xloctime, yvals.h
libw32\include\istream, ostream, streambuf, xloctime, yvals.h

    Enable new breaking CRT changes that have been waiting for next LKG
    update under _CRT_NEW_STL_DROP.  This is only going into the nextVCLKG
    branch for now.  These edits change the size of some types exported
    from msvcp70.dll, so they can only happen at LKG updates.

-----------------------------------------------------------------

Mon 05-Feb-01   (PhilipLu)

crtw32\h\stdarg.h
libw32\include\stdarg.h
libw32\inc64\stdarg.h

    VS7#201535 Fix va_start(ap,v) for C++, where it is incorrect to use &v,
    since v may be an instance of a class that defines an operator&.

-----------------------------------------------------------------

Thu 18-Jan-01   (PhilipLu)

libw32\inc64\xlocale, xstring

    Forgot to update the relinc headers for the previous checkin.

-----------------------------------------------------------------

Tue 16-Jan-01   (PhilipLu)

crtw32\stdcpp64\strstrea.cpp
crtw32\stdhpp64\xlocale, xstring

    IA64 Sys CRT buildfix.  Add casts to shut up new frontend warning, same as
    was done for the IA64 VC CRT on Friday.

-----------------------------------------------------------------

Fri 12-Jan-01   (PhilipLu)

crtw32\tools\win32\newline.sed

    Tweak sed script so it works for sed V1.08 used on x86 and V2.05 used on
    IA64.

crtw32\stdcpp\strstrea.cpp

    IA64 rolling build fix.  Add (int) cast to shut up new frontend warning.

-----------------------------------------------------------------

Thu 04-Jan-01   (GautamB)

crtw32\h\stdlib.h
crtw32\misc\rotl.h, rotr.h, abs.h
makefile.inc

    Added 64 bit intrinsics _abs64, _rtol64, _rotr64 etc. also added
    __byte_swap intrinsic functions.

libw32\msvcrt.rc, msvcirt.rc, msvcprt.rc, msvcrt40.rc, syscrt.rc, sysirt.rc,
    sysprt.rc, syscrt64.rc, sysirt64.rc, sysprt64.rc

    Copyright changes to match the product.

-----------------------------------------------------------------

Thu 15-Dec-00   (PhilipLu)

<<< 212 files not worth listing individually >>>

    Copyright update part 3.  Update P.J. Plauger's copyrights to 2001,
    with his approval.

-----------------------------------------------------------------

Mon 11-Dec-00   (PhilipLu)

crtw32\h\stdio.h
crtw32\stdio\tempnam.c
libw32\include\stdio.h
libw32\inc64\stdio.h

    VS7#5416 Fix comments about L_tmpnam in stdio.h, and fix double-free
    bug in _tempnam() I noticed while investigating this bug.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#166572 The non-_DEBUG macro definitions of _CrtSetReportHook,
    _CrtSetReportFile, _CrtSetAllocHook, and _CrtSetDumpClient should be
    typed the same as the _DEBUG function definitions.

crtw32\h\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    VS7#180102 Fix _strnextc for chars >= 0x80.

crtw32\h\cmacros.inc
crtw32\tools\fixcopyright.pl [NEW]
fpw32\conv\cfout.c, constpow.c, cvt.c
fpw32\inc\i386\cmacros.inc, elem87.inc, mathmac.inc, os2supp.inc
fpw32\tran\bessel.c, hypot.c
fpw32\tran\i386\87cdisp.asm, 87csqrt.asm, 87ctran.asm, 87ctrig.asm,
    87ctriga.asm, 87ctrigh.asm, 87disp.asm, 87fmod.asm, 87sqrt.asm, 87tran.asm,
    87trig.asm, 87triga.asm, 87trigh.asm, acos.asm, adj_fdiv.asm, asin.asm,
    atan.asm, common.asm, cos.asm, fpctrl.c, frnd.c, ftol.asm, ieee.c,
    ieee87.c, ldsplit.asm, log.asm, log10.asm, pow.asm, sin.asm, sqrt.asm,
    tan.asm, trig.asm, triga.asm, xmmi_types.h
fpw32\tran\ia64\fpctrl.c, ieee.c
libw32\msvcrt40.rc

    Copyright update part 1.  In preparation for updating copyright text
    from 2000 to 2001, check in a perl script which updates the copyrights
    and outputs warnings for files where the copyright does not have the
    proper form.  Fix all those warnings, so the script runs warning-clean.

<<< 1,218 files not worth listing individually >>>

    Copyright update part 2.  Update copyrights to run up to 2001.

-----------------------------------------------------------------

Sun 10-Dec-00   (PhilipLu)

crtw32\dllstuff\crtexe.c
crtw32\startup\crt0.c

    VS7#167293 Tighten up the check for a managed EXE in case it ever
    sees a PE+ on x86 or PE on IA64, or an image without a COM Descriptor
    directory entry.

crtw32\h\stdio.h
libw32\include\stdio.h
libw32\inc64\stdio.h

    VS7#122990 Define _FPOSOFF for _POSIX_ so C++ I/O Streams can be
    compiled.

-----------------------------------------------------------------

Fri 08-Dec-00   (PhilipLu)

crtw32\stdhpp\yvals.h
libw32\include\yvals.h

    Turn off _GLOBAL_USING temporarily.  Turning it on back on Wednesday,
    to wrap the C library in namespace std has triggered bugs in the C++
    compiler frontend (VS7#190308, 190674).  This will be reenabled once
    the frontend is fixed.

crtw32\h\malloc.h
libw32\include\malloc.h
libw32\inc64\malloc.h

    Fix the _POSIX_ (NT) build by moving prototype for _resetstkoflw out
    from under #ifndef _POSIX_.

-----------------------------------------------------------------

Thu 07-Dec-00   (PhilipLu)

crtw32\stdcpp\xgetwctype.c

    Fix the 64-bit VC CRT build (missing cast from size_t -> int).

-----------------------------------------------------------------

Wed 06-Dec-00   (PhilipLu)

makefile.inc
crtw32\stdcpp\lsources, sources.nt, xdateord.cpp, xgetwctype.c, xmath.h,
    xtowlower.c, xtowupper.c
crtw32\stdhpp\algorithm, fstream, ios, iosfwd, memory, sstream, utility,
    vector, xcomplex, xhash, xlocinfo, xlocinfo.h, xloctime, xmemory, xutility,
    yvals.h
libw32\include\algorithm, fstream, ios, iosfwd, memory, sstream, utility,
    vector, xcomplex, xhash, xlocinfo, xlocinfo.h, xloctime, xmath.h, xmemory,
    xutility, yvals.h
libw32\msvcrt.src, syscrt.src, syscrt64.src

    Integrate the 001118 drop of the Dinkumware C++ Library.  Fixes bugs
    VS7#149387, 155323, and 182248.  Also contains a fix for VS7#161213,
    but that can't be turned on until an LKG update.  Also contains a start
    on the fixes for VS7#150517 and 157130.

    Also turning on _GLOBAL_USING in yvals.h, so VS7#5292 is finally fixed,
    with the C library properly wrapped in the std namespace.  This can be
    done now that the Beta 1 C++ compiler has been promoted to the LKG
    toolset.

crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop2.cpp, nomemory.cpp,
    nothrow.cpp, raisehan.cpp, stdhndlr.cpp, stdthrow.cpp, string.cpp,
    strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp,
    wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c, xdnorm.c,
    xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c, xfdtest.c,
    xferaise.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c, xldscale.c,
    xldtest.c, xlexp.c, xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c,
    xmtx.c, xmtx.h, xmutex.cpp, xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\bitset, cassert, cctype, cerrno, cfloat, ciso646, climits,
    clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, functional,
    hash_map, hash_set, iomanip, iostream, iso646.h, istream, iterator, limits,
    list, locale, map, new, numeric, ostream, queue, set, stack, stdexcept,
    stl.h, streambuf, string, strstream, valarray, xiosbase, xlocale, xlocmes,
    xlocmon, xlocnum, xstddef, xstring, xtree, ymath.h
libw32\include\bitset, cassert, cctype, cerrno, cfloat, ciso646, climits,
    clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, functional,
    hash_map, hash_set, iomanip, iostream, iso646.h, istream, iterator, limits,
    list, locale, map, new, numeric, ostream, queue, set, stack, stdexcept,
    stl.h, streambuf, string, strstream, valarray, xiosbase, xlocale, xlocmes,
    xlocmon, xlocnum, xstddef, xstring, xtree, ymath.h

    Dinkumware files unchanged by the 001118 drop except for a change in
    the version comment from V3.06:0009 to V3.09:0009

-----------------------------------------------------------------

Tue 05-Dec-00   (PhilipLu)

doc\copysrc.bat
srcrel\external.mkf, nmktobat.c, pd-b

[RENAME]
srcrel\bldwin95.bat -> srcrel\bldwin9x.bat

    VS7#178683 Rename bldwin95.bat to bldwin9x.bat, since VS won't be
    supporting Win95 any longer.  Also renamed some references to Win95
    to Win9x instead.

srcrel\makefile

    Minor cleanup - hide the rule to create srcrel\pd-b under !if 0.
    This file is always hand-edited nowadays, not generated, and it
    was getting overwritten whenever the timestamp for pd-exe was newer
    than that for pd-b (as in a newly enlisted project with pd-b then
    copied from elsewhere).

crtw32\h\wchar.h
libw32\include\wchar.h
libw32\inc64\wchar.h

    VS7#186936 The inline definition of mbsinit() in wchar.h was a
    stub that just returned 1.  Changed that to the proper definition,
    which is just a simple (p == NULL || *p == 0).

-----------------------------------------------------------------

Mon 04-Dec-00   (PhilipLu)

[NEW]
crtw32\stdcpp\xdateord.cpp, xgetwctype.c, xtowlower.c, xtowupper.c

doc\copysrc.bat
srcrel\pd-b

    Check in dummy placeholders for new files that will be required for
    the next Dinkumware integration.  This is to meet a 12/8/00 deadline
    for entering new files into FLDB for the VS7 setup.

-----------------------------------------------------------------

Wed 29-Nov-00   (Gautamb)

Delete
crtw32\mbstring\i386\mbscat.asm
crtw32\mbstring\mbscat.c mbsdup.c

Edit
makefile
makefile.inc
doc\copysrc.bat
srcrel\external.mkf objects.mkf pd-b
crtw32\string\stricmp.c stricoll.c
crtw32\mbstring\sources.nt lsources
libw32\msvcrt.src syscrt.src syscrt64.src

    VS7#100359 Added an alias lib for duplicate functions with same code.

-----------------------------------------------------------------

Tue 28-Nov-00   (Gautamb)

crtw32\stdio\input.c

    VS7#162114, 167304. Bug fix for use of uninitialized variable and for
    wscanf crashing due to low stack.

-----------------------------------------------------------------

Mon 27-Nov-00   (PhilipLu)

crtw32\stdhpp\istream, xlocale, xlocnum, xstring
libw32\include\istream, xlocale, xlocnum, xstring

    Buildfix for IA64 VC CRT.  Add casts to silence warnings about 64 bit
    to 32 bit truncations.

fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s

    VS7#186484 LIBM v5.4 turned off exceptions on errors in acos, acosf,
    asin, and asinf.  Turn the exceptions back on.

fpw32\tran\lsources, sources.nt
srcrel\pd-b

[DELETED:]
fpw32\tran\ia64\em_types.h, emfloat.s, remainder.s, remainderf.s, scalb.s,
    scalbf.s

    Get rid of more IA64 LIBM files that are unneeded.  Files em_types.h
    and emfloat.s are old _fpieee_flt support files that are no longer
    needed.  The remainder and scalb files are for LIBM v5.4 code that we
    don't have on the x86 side and thus don't currently want for IA64.

fpw32\tran\ia64\isnan.s, isnanf.s, logb.s, logbf.s
fpw32\tran\ieeemisc.c

    Get the implementations of _isnan and _logb from the IA64 LIBM asm
    code instead of ieeemisc.c.  Add an underscore prefix to the routine
    names in the LIBM .s files, since that's what we document and declare
    in the headers.

-----------------------------------------------------------------

Fri 24-Nov-00   (PhilipLu)

crtw32\h\conio.h, stdio.h, wchar.h
crtw32\lowio\putwch.c
crtw32\stdio\fputwc.c, fputwchr.c, output.c
libw32\include\conio.h, stdio.h, wchar.h
libw32\inc64\conio.h, stdio.h, wchar.h

    VS7#176345 putwchar appeared twice in wchar.h, once with a wint_t arg,
    once with wchar_t, leading to errors when compiling /Zc:wchar_t.  On
    examination, it turns out that several functions were wrongly declared
    with wint_t args: fputwc, _fputwchar, putwc, putwchar, and _putwch.
    Switch all of them to take a wchar_t arg instead.

-----------------------------------------------------------------

Wed 22-Nov-00   (PhilipLu)

clean.cmd, cleanbld.cmd, makefile
srcrel\clnsrcrel.bat, external.mkf, makefile, mkclnmkf.c, objects.mkf, pd-b

    Checking in changes to enable a native IA64-hosted CRT build.
    Currently, you still need to specify LLP64=1 in the environment.

fpw32\tran\sources.nt
fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan.s, atan2.s, atan2f.s,
    atanf.s, ceil.s, ceilf.s, cosh.s, coshf.s, exp.s, expf.s, floor.s,
    floorf.s, fmod.s, fmodf.s, hypot.s, hypotf.s, ldexp.s, ldexpf.s,
    libm_atan2_reg.s, libm_error.c, libm_reduce.s, libm_tan.s, log.s, logb.s,
    logbf.s, logf.s, pow.s, powf.s, remainder.s, remainderf.s, scalb.s,
    scalbf.s, sincos.s, sincosf.s, sinh.s, sinhf.s, sqrt.s, sqrtf.s, tan.s,
    tanf.s
srcrel\pd-b

[DELETED:]
fpw32\tran\ia64\asincosf.c, atan2f.c, atanf.c, ceilf.c, expf.c, fabsf.c,
    floorf.c, fmodf.c, fp80.s, fp80c.c, log10f.c, logf.c, powf.c, sincosf.c,
    sincoshf.c, sqrtf.c, tanf.c

    Update to IA64 LIBM v5.4 108 from Intel, dated 09/21.  Also get rid of
    a bunch of tran\ia64\*.c files which should have been removed when we
    first switched from the C-based to asm-based LIBM.

-----------------------------------------------------------------

Mon 20-Nov-00   (PhilipLu)

crtw32\h\setjmp.h
crtw32\misc\ia64\longjmp.s, setjmp.s, setjmpex.s
libw32\include\setjmp.h
libw32\inc64\setjmp.h

    Back out VS7#182574, so IA64 setjmp/longjmp once again will save/restore
    the FPSR.  NT rethought its decision on this.

[Added:]
libw32\tools\ia64\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe, whackline.exe

    Add IA64 versions of tools needed for a native-hosted IA64 CRT build.

-----------------------------------------------------------------

Fri 17-Nov-00   (PhilipLu)

crtw32\misc\ia64\longjmp.s

    VS7#184669 The IA64 setjmp/longjmp change made on Monday for vs7#182574
    can crash the OS and cause an immediate reboot without hitting the BSOD
    when using _setjmpex for safe longjmps.  That's because a safe longjmp
    uses RtlUnwind2 to unwind and restore state back to the setjmp point,
    and the code in RtlUnwind2 still assumes that the jmp_buf holds a valid
    saved FPSR.  Apparently, a bogus FPSR is enough to bring the machine
    down!

    Fixed by changing longjmp to save the ambient FPSR in the jmp_buf just
    before calling RtlUnwind2 in the safe longjmp path.

-----------------------------------------------------------------

Mon 13-Nov-00   (PhilipLu)

fpw32\tran\lsources, sources.nt
fpw32\tran\ia64\modf.s, modff.s
srcrel\pd-b

    VS7#180200 modff is declared in math.h but wasn't available.  Rather than
    add an inline modff in math.h (which was removed for VS7#2515), I'm instead
    adding the Intel IA64 libm modf.s and modff.s.  There are a number of libm
    routines which we don't make available, but for now, I'm just going to fix
    this particular pair.

crtw32\h\setjmp.h
crtw32\misc\ia64\longjmp.s, setjmp.s, setjmpex.s
libw32\include\setjmp.h
libw32\inc64\setjmp.h

    VS7#182574 Setjmp/longjmp on IA64 should not save/restore the FPSR any
    longer.  That maintains compatibility with the other platforms.  Also,
    rename unused fields in the IA64 _JUMP_BUFFER to Reserved[12].

crtw32\stdhpp64\fstream, streambuf, xiosbase
libw32\inc64\fstream, streambuf, xiosbase

    VS7#181246 Clean up some /Wp64 warnings in the old stdhpp64 headers for
    NT.  Introduce casts to silence the warnings.

-----------------------------------------------------------------

Mon 06-Nov-00   (PhilipLu)

srcrel\pd-b

    Get rid of references to MIPS and PPC files that have already been
    deleted from the source tree.

crtw32\misc\initnum.c, setlocal.c

    VS7#181380 Fix pageheap-detected use-after-free bugs in LC_MONETARY
    and LC_NUMERIC setlocale data when a thread exits and removes the last
    reference to data which is still pointed to by the global locale.  We
    can only free data with a zero refcount if that data is not also in
    the global locale.

crtw32\convert\atox.c

    Trivial checkin which avoids a warning in the _NTSUBSET_ build of the
    CRT.

-----------------------------------------------------------------

Fri 03-Nov-00   (PhilipLu)

crtw32\stdhpp\xlocnum
libw32\include\xlocnum

    Bandaid build breakage fix for VS7#170063, which is now appearing in
    the 32-bit /Wp64 build after a recent compiler change.  We're warning
    on a cast from unsigned long to void *, since that's not /Wp64 clean.
    Change it to 'ptr = (void*)(uintptr_t)ulval;' to silence the warning.
    This doesn't fix the bug, though - the code should be using unsigned
    __int64 on Win64.  Leave that for later.

-----------------------------------------------------------------

Wed 25-Oct-00   (PhilipLu)

crtw32\string\ia64\memcpy.s

    VS7#178057 Remove superfluous reference to exit(), which triggers undesired
    dependency on other CRT functions.

-----------------------------------------------------------------

Mon 23-Oct-00   (PhilipLu)

crtw32\string\ia64\strcmp.s

    VS7#176998 IA64 strcmp should compare unsigned chars, not signed, for
    compatibility with x86.  Also for x86 compatibility, canonicalize the
    result to be -1, 0, +1 instead of just <0, 0, >0.

-----------------------------------------------------------------

Sun 22-Oct-00   (PhilipLu)

srcrel\pd-b

[Deleted:]
crtw32\crt.mkf, infer.mkf, oldnames.mkf
crtw32\convert\convert.mkf
crtw32\dos\dos.mkf
crtw32\eh\eh.mkf
crtw32\exec\exec.mkf
crtw32\heap\heap.mkf
crtw32\iostream\iostream.mkf
crtw32\linkopts\linkopts.mkf
crtw32\lowio\lowio.mkf
crtw32\mbstring\mbstring.mkf
crtw32\misc\misc.mkf
crtw32\startup\startup.mkf
crtw32\stdio\stdio.mkf
crtw32\string\string.mkf
crtw32\time\time.mkf
fpw32\fp.mkf, infer.mkf
fpw32\conv\conv.mkf
fpw32\tran\tran.mkf
libw32\buildall.cmd, makefile

    Build system cleanup - get rid of old make files that haven't been used
    in years.

-----------------------------------------------------------------

Thu 19-Oct-00   (PhilipLu)

crtw32\lowio\ioinit.c

    VS7#176001 Avoid alignment fault when mixing printf and wprintf to stdout
    when stdout not available in a GUI or server app, by forcing __badioinfo
    to text mode.

-----------------------------------------------------------------

Tue 17-Oct-00   (PhilipLu)

crtw32\lowio\pipe.c

    VS7#173087 Remove potential deadlock on race condition in _alloc_osfhnd
    called from _pipe.  Do not call _alloc_osfhnd a second time without first
    unlocking the _ioinfo returned by the first call.  Also, don't initialize
    the returned handle values until we know the operation succeeded.

-----------------------------------------------------------------

Mon 16-Oct-00   (PhilipLu)

crtw32\string\lsources
crtw32\string\ia64\memcpy.s, memset.s, strcat.s, strcmp.s, strlen.s
srcrel\objects.mkf, pd-b
makefile.inc

    VS7#173518 Pick up optimized IA64 mem/str routines from Intel.  These
    asm routines get built in the pre-build and copied over to the post-build.

-----------------------------------------------------------------

Thu 12-Oct-00   (PhilipLu)

crtw32\misc\initmon.c, initnum.c

    VS7#169596 Don't call fix_grouping when initializing monetary locale info
    if any error is detected, since the mon_grouping member may not be valid.

-----------------------------------------------------------------

Thu 12-Oct-00   (GautamB)

crtw32\string\wcsxfrm.c

    VS7#164393, changed wcsxfrm.c to be similar to strxfrm.c which fixes the
    bug.

crtw32\misc\setlocale.c

    VS7#159775, changed setlocale_set_cat to return if this locale is same as
    current locale for the same category.

crtw32\convert\wtof.c

    VS7#166022, Fixed buffer overrun.

crtw32\h\useoldio.h

    VS7#172378, added comments for the _OLD_IOSTREAMS_ARE_DEPRECATED

-----------------------------------------------------------------

Wed 11-Oct-00   (PhilipLu)

crtw32\string\lsources
srcrel\objects.mkf, pd-b
makefile.inc

    VS7#101018 Fix IA64 build so memcpy.c and memset.c are built.  Since early
    August, the IA64 build has been importing memcpy and memset from kernel32
    instead of including them from the CRT sources.  For now, don't use the
    IA64 asm routines under crtw32\string\ia64.

crtw32\h\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    VS7#166192 Add missing _MBCS mapping for _tcserror.

-----------------------------------------------------------------

Wed 27-Sep-00   (PhilipLu)

makefile, makefile.inc, makefile.sub

    Get rid of references to dead platforms MIPS and PPC.  Hide references
    to ALPHA and ALPHA64 platforms so they get stripped out of released
    versions of makefiles.

crtw32\convert\strtoq.c
crtw32\heap\align.c
crtw32\stdcpp64\xmbtowc.c

    Fix format of file header comments so revision history is properly
    cleansed by build process.

srcrel\makefile

    Need to cleanse several files from stdcpp/stdcpp64 instead of just copying
    them, so the revision history is removed.

-----------------------------------------------------------------

Tue 26-Sep-00   (GautamB)

crtw32\lowio\putch.c
libw32\msvcrt.rc, msvcprt.rc, msvcirt.rc, syscrt.rc, sysprt.rc, sysiprt.rc,
syscrt64.rc, sysprt64.src, sysirt64.rc, msvcrt40.rc
srcrel\_sample_.rc
crtw32\misc\winsig.c, winxfltr.c
crtw32\direct\seterrm,c
crtw32\string\memcpy.c, memmove.c, i386\memcpy.asm

    VS7#116063 Changed the copyright info.

-----------------------------------------------------------------

Tue 26-Sep-00   (PhilipLu)

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#166894 Fix _ASSERT* and _RPT* macros so they compile /W4-clean.
    Replaced the do{...}while(0) construct with an expression-form instead,
    much like the one used by assert.h.  This only works when _CrtDebugBreak()
    is a function call, so the old form is still used when compiling with
    pre-VC7 x86 compilers, where _CrtDebugBreak turns into inline asm.

libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#45611 Export _control87 from the IA64 CRT DLL, since it's already
    available for IA64 in the static models.  Not sure it makes sense to have
    _control87 instead of _controlfp for IA64, but this makes it easier to port
    existing code over.

crtw32\startup\ia64\chkstk.s

    VS7#156660 Get rid of the version of _chkstk that uses B6 as the link reg.
    Only the B7 version should be available.

crtw32\eh\ia64\handlers.s
crtw32\startup\ia64\chkstk.s

    VS7#166899 Use Soft2.6 unwind info (version 3) instead of the old version 2
    info that was there.  Also, stop hardcoding the unwind info, and use the
    IAS directives that generate the table automatically.

-----------------------------------------------------------------

Mon 25-Sep-00   (PhilipLu)

makefile.inc
srcrel\object.mkf

    Add undname.obj to the list of object files no longer needed for the
    user CRT rebuild.

makefile

    Change the default value of VCTOOLS during the user CRT rebuild from
    \Program Files\Microsoft Visual Studio 7\Vc7 to
    \Program Files\Microsoft Visual Studio.NET\Vc7

-----------------------------------------------------------------

Mon 25-Sep-00   (PhilipLu)

makefile

    VS7#160801 Standalone version of the RTC support, runtmchk.lib, was not
    being built.  Drop the release DLL prebuild rtc.lib as runtmchk.lib, since
    that version is built /Z7 with no dependency on any CRT pdbs.

makefile, makefile.inc
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\objects.mkf

    Replace 184 object files in the crt\src\{platform}\*_lib dirs with two
    libs, eh.lib and rtc.lib, in each of the 6 CRT models.  The build was
    needlessly copying all the components in eh.lib and rtc.lib over from
    the prebuild to the postbuild, and then dropping them out for the
    user CRT rebuild.  Instead, just copy those two libs from the prebuild,
    for a net reduction of 172 files that get shipped.

makefile
fpw32\tran\lsources
srcrel\pd-b

    Get rid of all warnings from IA64 build. Tcmap build was using mbslen.obj
    twice instead of mbslen.obj and mbslen.obf.  Tran lsources specified
    ldexp.obj and tanh.obj twice each.  Pd-b specified tanhf.c twice.

-----------------------------------------------------------------

Thu 21-Sep-00   (PhilipLu)

crtw32\misc\seccinit.c

    VS7#165188 The /GS security cookie initialization was too non-random.
    We now combine a number of sources of randomness, especially the high
    frequency counter returned by QueryPerformanceCounter.

crtw32\stdhpp\list, xtree
libw32\include\list, xtree

    VS7#5312 The node pointers in std::list and std::_Tree no longer need to
    be typed void*, since the compiler properly delays instantiating template
    class members until they are used, allowing us to implicitly instantiate
    std::allocator on an incomplete type.  The pointers are now typed with the
    actual type, allowing full dumping of lists and trees in the debugger.

crtw32\h\stdarg.h
libw32\include\stdarg.h
libw32\inc64\stdarg.h

    VS7#103357 The IA64 definition of va_start for C++ needed changes
    coordinated with the backend and frontend.

-----------------------------------------------------------------

Mon 18-Sep-00   (PhilipLu)

crtw32\stdcpp\xlock.cpp
crtw32\stdhpp\istream, ostream, streambuf, yvals.h
libw32\include\istream, ostream, streambuf, yvals.h

    VS7#163945 The 09/15/00 Dinkumware checkin fails to maintain compatibility
    between old libs/headers and the new dll.  The problem is the introduction
    of multiple locks, especially the per-stream locks.  That caused everything
    in the ostream, istream, and streambuf heirarchies to get larger.  Changing
    the sizes of types exported from the C++ DLL can only happen at LKG toolset
    updates, since that is a rebuild-everything kind of change.

    Backed out the multiple locks.  Everything now uses a single lock, as it
    did before Friday's checkin.  The new code is still there, under
    #if _CRT_STL_NEW_DROP, ready to be reenabled at the next LKG update.

crtw32\tools\win32\relinc.if
libw32\include\cctype, cerrno, clocale, cmath, csetjmp, csignal, cstdarg,
    cstddef, cstdio, cstdlib, cstring, ctime, cwchar, cwctype

    Friday's drop did not turn on _GLOBAL_USING, as I stated below.  All the
    wrapping of C functions in the std namespace was being stripped out of
    the headers by relinc.  Stop stripping it out, but turn _GLOBAL_USING off
    for now, until a compiler bug I found, vs7#163702, gets fixed.

-----------------------------------------------------------------

Sun 17-Sep-00   (PhilipLu)

crtw32\misc\crtmbox.c

    VS7#123291 __crtMessageBoxA needs to set MB_SERVICE_NOTIFICATION on WinNT
    in non-interactive processes like services, so the message box is visible
    on the console (and the program doesn't hang).

crtw32\misc\seccinit.c, seccook.c

    VS7#162619 Initialization of the /GS buffer overrun global security must
    happen earlier.  Also, make sure the cookie is never zero, so a buffer
    overrun setting the local cookie and return address to the same value
    will always be detected.

-----------------------------------------------------------------

Fri 15-Sep-00   (GautamB)
crtw32\stdio\sscanf.c swscanf.c lsources snscanf.c snwscanf.c
crtw32\h\stdio.h wchar.h tchar.h
srcrel\pd-b
libw32\msvcrt.src, syscrt.src, sys64crt.src

    VS7#103628 Added new functions _snscanf and _snwscanf

-----------------------------------------------------------------

Fri 15-Sep-00   (PhilipLu)

makefile.inc
crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, lsources, newaop.cpp, newaop2.cpp, newop2.cpp,
    nomemory.cpp, nothrow.cpp, raisehan.cpp, sources.nt, stdhndlr.cpp,
    stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp,
    xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
    xfdscale.c, xfdtest.c, xferaise.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c,
    xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlock.cpp,
    xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmtx.c [NEW], xmtx.h [NEW],
    xmutex.cpp [NEW], xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
doc\copysrc.bat
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmath.h, xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Integrate the 000718 drop of Dinkumware C++ Library.  It implements a more
    graceful locking mechanism.  Instead of a single critical section for all
    the C++ Library use, there are now individual locks for each I/O stream,
    as well as separate locks for locale and global stream data structures.

    I'm also turning on _GLOBAL_USING, so the C headers are properly wrapped
    in the std namespace.  This can be done now that compiler bugs preventing
    this have been fixed.  This fixes VS7#5292.

-----------------------------------------------------------------

Thu 07-Sep-00   (PhilipLu)

crtw32\h\wchar.h
crtw32\stdhpp\wctype.h
crtw32\stdhpp64\wctype.h
libw32\include\wchar.h, wctype.h
libw32\inc64\wchar.h, wctype.h

    More for VS7#147943. Buildfix for IA64 syscrt build, and add _wctype and
    const changes in a few headers missed before.

-----------------------------------------------------------------

Thu 07-Sep-00   (PhilipLu)

crtw32\misc\getqloc.c

    VS7#81673 For geopolitical correctness, refer to "country/region", not
    "country", in a comment.  Also, move all the data tables to .rdata.

crtw32\startup\tlssup.c

    VS7#154062 _tls_start and _tls_end only need to be 1 byte long, not
    sizeof(void*).

crtw32\eh\rtti.cpp, stdexcpt.cpp, typinfo.cpp, typname.cpp
crtw32\time\strftime.c

    VS7#159463 Get rid of /lib:libcp{mt}[d] or /lib:msvcprt[d] directives from
    main CRT objects that include stdhpp headers.

crtw32\h\internal.h, mbstring.h, stdarg.h, stdio.h, wchar.h
libw32\include\mbstring.h, stdarg.h, stdio.h, wchar.h
libw32\inc64\mbstring.h, stdarg.h, stdio.h, wchar.h

    VS7#159777 Remove _M_CEE-specific definition of va_list.

crtw32\startup\crt0dat.c

    Remove obsolete reference to Mac version of CRT.

crtw32\stdio\ftell.c

    Reindent and reformat file for easier reading.

-----------------------------------------------------------------

Thu 07-Sep-00   (GautamB)
fpw32\tran\ia64\fmod.s, fmodf.s

    VS7#126122. Fixed the problem with matherr getting wrong arguments.

-----------------------------------------------------------------

Thu 07-Sep-00   (GautamB)
crtw32\dllstuff\crtlib.c
crtw32\h\mtdll.h, setlocal.h, wchar.h, ctype.h
crtw32\misc\initctype.c, ctype.c, setlocal.c
crtw32\convert\iswctype.c

    VS7#147943. pwctype was a locale dependent wctype table. Which should not
    ever be local dependent. removed all the wctype and pwctype from thread
    local data, and made wctype as first 256 unicode character type tabel

-----------------------------------------------------------------

Wed 06-Sep-00   (GautamB)
crtw32\startup\stdargv.c

    VS7#147806. there was problem with parsing commandline. e.g.
    "c:\test\"foo.exe would result in two arguments arg0 c:\test\
    and arg1 as foo.exe. fixed

-----------------------------------------------------------------

Tue 05-Sep-00   (GautamB)
fpw32\conv\cfout.c, cvt.c
crtw32\h\fltintrn.h
crtw32\convert\fcvt.c, gcvt.c

    VS7#156300. Fixed the problem with printf generating overflow or underflow
    floating point exception when used to print doubles.The problem was
    exposed when doubles like 4.94e-324 were used. This was due to the
    functions being passed double as agrument and instructions like fld would
    generate fp underflow exception.

-----------------------------------------------------------------

Tue 29-Aug-00   (PhilipLu)

crtw32\h\stdlib.h
crtw32\misc\seccook.c, secfail.c, seclocf.c
libw32\msvcrt.src, syscrt.src
libw32\include\stdlib.h
libw32\inc64\stdlib.h

    Change the /GS support implementation so it can be easily extended in the
    future.  The error handler is now called __security_error_handler, and it
    now takes a code for the type of failure (only _SECERR_BUFFER_OVERRUN is
    defined for now) and a void* pointer to an extra data packet (unused for
    now).  Also add a documented function for registering a new failure
    handler.

-----------------------------------------------------------------

Wed 30-Aug-00   (GautamB)
fpw32\tran\ia64\filter.c

    VS7#154760 fixed problem with inexact exception thrown by fcvt
    instruction.

-----------------------------------------------------------------

Tue 29-Aug-00   (PhilipLu)

crtw32\eh\rtti.cpp

    VS7#156255 - IA64 bug: dynamic_cast<> and typeid need to use the image base
    for the object's _RTTICompleteObjectLocator, not the return address of the
    call to __RTDynamicCast or __RTtypeid.

cleanbld.cmd

    Make the DELOBJ option clean the generated .def files, so setting
    BLD_TESTCRT=1 and running a DELOBJ build will work.

-----------------------------------------------------------------

Fri 25-Aug-00   (PhilipLu)

crtw32\stdhpp64\xtree
libw32\inc64\xtree

    VS7#152018 Propogate fix for VC6SP5 bugfix VS98#66191 to the VC6-based
    64-bit STL headers.  The 10-Jul-00 change to xtree removed too many locks,
    leaving std::_Tree::erase open to a race condition bug that was reported
    by the NT group.

crtw32\stdhpp64\fstream
libw32\inc64\fstream

    VS7#155221 Propogate fix for VC6SP6 bugfix VS98#61009.  The routine
    std::basic_filebuf::overflow will fail when outputting DBCS, because the
    size and count args to an fwrite call were reversed.

crtw32\h\dbgint.h

    VS7#153113 On IA64, the debug CRT heap was not returning 16 byte aligned
    memory, even though the Win32 Heap routines do, because the debug preheader
    struct _CrtMemBlockHeader wasn't set up for 64-bits.  The struct's size
    wasn't a multiple of 16 bytes, which is needed to maintain alignment.
    Swapping the order of two fields reduced the size from 56 to 48 bytes, and
    eliminated gaps between fields.  This was only done for IA64, to avoid
    breaking any x86 client code that looked in this struct (in an
    undocumented manner - this is done by Visual Studio).

makefile

    The linker no longer supports -debugtype:both, so switch to -debugtype:cv
    for IA64, the same as all the other platforms.

-----------------------------------------------------------------

Thu 24-Aug-00   (GautamB)
crtw32\eh\frame.cpp

    Fixed Problem with BuildCatchObject when called from __CxxExceptionFilter.

-----------------------------------------------------------------

Thu 24-Aug-00   (PhilipLu)

crtw32\eh\rtti.cpp

    VS7#154575 - dynamic_cast<> wasn't thread-safe on IA64.

-----------------------------------------------------------------

Wed 24-Aug-00   (KFrei)
crtw32\rtc\error.cpp
crtw32\h\rtcapi.h
libw32\include\rtcapi.h

    VS7#153812, 153067, 154281. Initialization was messed up,
    and _RTC_IsEnabled is dead (so I removed it from the headers)

-----------------------------------------------------------------

Wed 23-Aug-00   (GautamB)
fpw32\tran\ia64\pow.s, atan.s

    VS7#109539. The new drop from intel fixes the problem with pow()
    and atan()
fpw32\tran\ia64\libm_error.c
    VS7#153477  Removed calls to fputs from libm_error support.

-----------------------------------------------------------------

Tue 22-Aug-00   (GautamB)

crtw32\setlocal.c

    vs7#151944. clike stuff was not working as it should. FIxed it.

crtw32\dllstuff\crtlib.c
crtw32\startup\dllcrt0.c

    Fixed possible leak of ptd in _CRT_INIT functions.

crtw32\string\stricmp

    VS7#100359. strcmpi was just a wrapper function around stricmp. To
    increase performance, selfincluded the file so that strcmpi can use
    the same code again.

-----------------------------------------------------------------

Tue 22-Aug-00   (GautamB)

crtw32\h\awint.h
crtw32\misc\a_str.c, a_cmp.c, a_map.c, w_cmp.c, w_str.c, w_map.c
Addfile
crtw32\misc\convrtcp.c

    VS7#5671. All the crt implementation of Win String APIs did not
    work with any code page other than Ansi code page. Fixed this by
    converting to ansi codepage and then calling WinAPI.

-----------------------------------------------------------------

Fri 17-Aug-00   (GautamB)

crtw32\h\ctype.h
crtw32\misc\wcstol.c, wchtodig.c

    VS7#152362 Fixed MACRO __ascii_iswalpha and __ascii_iswdigit
    Addfile wchtodig.c which contains new api wchtodig()

-----------------------------------------------------------------

Thu 17-Aug-00   (PhilipLu)

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#151623 Relational comparisons for hash_maps were comparing only the
    keys, not the entire pair.  Same bug as 97336, this time for hash_map
    instead of map.

-----------------------------------------------------------------

Wed 16-Aug-00   (PhilipLu)

doc\copysrc.bat

    VS7#150831 (and 5437, reopened)  Copysrc.bat needs to copy the makefiles
    from the CRT build using xcopy /r, so that read-only files get replaced.
    The build lab wasn't picking up the latest versions of these files because
    of this.

    Also added a few recent additional files that were missing from the
    script, and expanded the usage comments.

-----------------------------------------------------------------

Wed 09-Aug-00   (PhilipLu)

crtw32\misc\seccook.c, secfail.c

    VS7#147203 /GS failed with the debug CRTs because __security_check_cookie
    wasn't preserving EAX.  Rewrite as __declspec(naked) inline asm so /Od
    builds won't trash EAX.  Also changed code so in case of a failure,
    control can never return to the user code (barring some sort of longjmp
    in a user-installed handler).  Instead, just ExitProcess if a reporting
    handler returns.

-----------------------------------------------------------------

Tue 08-Aug-00   (GautamB)

crtw32\string\lsources
srcrel\object.mkf, pd-b
makefile.inc

    Backed out the changes for new string routines.

-----------------------------------------------------------------

Tue 08-Aug-00   (GautamB)

crtw32\stdhpp\complex fstream iosfwd istream locale ostream sstream
              streambuf string xlocale xlocmes xlocmon xlocnum xloctime
              xmemory xstring yvals.h
libw32\include\limits, yvals.h

    VS7#146241 Changed the _NATIVE_CRTBLD_WCHAR_T to _CRTBLD_NATIVE_WCHAR_T
    for the all the headers except limits. And instead used
    _CRTBLD_NATIVE_WCHAR_T include unsigned short version of wchar_t while
    building CRT with wchar_t as native data type.

-----------------------------------------------------------------

Tue 08-Aug-00   (PhilipLu)

crtw32\misc\qsort.c

    VS7#123134  The fix for vs7#99674 would cause the compare function to be
    called with the same pointer passed for both arguments, which triggered
    asserts in some user code that wasn't expecting self-compares (even though
    that's fine by the standard).  In the interest of backwards-compatibility,
    tweak qsort() so it will never issue a self-compare.  Also uncovered a
    couple more minor performance wins, so the self-compare avoidance doesn't
    slow down qsort().

crtw32\h\winheap.h

    Make sure __active_heap isn't available for _WIN64 builds.

-----------------------------------------------------------------

Sun 06-Aug-00   (PhilipLu)

crtw32\dllstuff\crtexe.c
crtw32\startup\crt0.c, crt0dat.c

    VS7#117746 Replace references to COM+ or complus with "managed."

fpw32\tran\i386\filter_simd.c, xmmi_types.h

    Placeholder fix for new DAZ status bit in C-step Pentium 4 - don't handle
    WNI exceptions if DAZ bit set.  Last minute change from Intel for VC6PP,
    propogated to VC7.

crtw32\heap\calloc.c, expand.c, malloc.c, realloc.c

    VS7#131005 When using the system heap, don't round up allocations to
    paragraph-multiples, since that defeats pageheap overrun detection.  Keep
    doing the rounding for the V5 and V6 heaps (even when the block is too
    big for the small block heap), so we don't modify the behavior there and
    potentially break existing (buggy) apps.

crtw32\startup\thread.c, threadex.c

    VS7#118688 Detect and give errno EINVAL on NULL threadproc in _beginthread
    and _beginthreadex.

-----------------------------------------------------------------

Tue 01-Aug-00   (Gautamb)

crtw32\string\wcsstr.c
    VS7#145615 Fix for wcsstr("", "").

crtw32\convert\wcstol.c, wcstoq.c
    VS7#5679, Added multilingual support for wcstol().

-----------------------------------------------------------------

Tue 01-Aug-00   (Gautamb)

makefile, makefile.inc
srcrel\makefile, object.mkf, pd-b
crtw32\string\lsources, sources.nt

Addfile
crtw32\string\ia64\memcpy.s, memset.s, strcmp.s, strcpy.s, strcat.s, strlen.s

    Added intels drop for string routines

-----------------------------------------------------------------

Wed 26-Jul-00   (Gautamb)

crtw32\eh\frame.cpp

    VS7#124342, Fixed the multiple destruction of exception object.

-----------------------------------------------------------------

Thu 20-Jul-00   (Gautamb)

crtw32\h\conio.h, stdio.h, wchar.h, ctypes.h, tchar.h
crtw32\stdhpp\wctype.h

    Changed the typedef wchar_t wint_t to typedef unsigned short wint_t. This
    is useful when wchar_t is native type.

-----------------------------------------------------------------

Thu 20-Jul-00   (PhilipLu)

makefile

    Make sure the retail CRT DLLs are linked with /opt:icf to enable identical
    comdat folding.  Chops about 50K off msvcp70.dll after the duplication
    of unsigned short and wchar_t specializations checked in on 7/17.

crtw32\h\i386\dvec.h
libw32\include\dvec.h

    VS7#127201 Iu16vec8 ctor with 8 args was wrong in this file from Intel.

crtw32\misc\dbgheap.c

    VS7#129571 _CrtIsValidHeapPointer should only test that the debug heap
    block header can be read, not written.  Testing that it is writeable would
    require taking the heap lock to avoid multi-threaded corruption, and is
    unnecessary.

crtw32\stdhpp\yvals.h
libw32\include\yvals.h

    VS7#126171 Add #define of _CPPLIB_VER so we can do conditional compilation
    based on version of the C++ Standard Library.  Current version is 304.

-----------------------------------------------------------------

Mon 17-Jul-00   (GautamB)

crtw32\stdhpp\complex, fstream, ios, iosfwd, istream, limits, locale, ostream,
    sstream, streambuf, string, xlocale, xlocmes, xlocmon, xloctime, xmemory,
    xstring
crtw32\stdcpp\instances.cpp, locale.cpp, lsources, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wiostrea.cpp
libw32\include\iosfwd
crtw32\tools\win32\relinc.if
srcrel\pd-b
makefile, makefile.inc

Addfile:
crtw32\ushcerr.cpp, ushcin.cpp, ushclog.cpp, ushcout.cpp, ushiostr.cpp

    VS7#123149 On compiling with -Zc:wchar_t, we would have replace all the
    entry points in the msvcp70.dll with wchar_t version. Now the problem was
    no programs compiling without -Zc:wchar_t would not be able to use this
    dll. Fixed this problem by including both wchar_t version and unsigned
    short versions of all the entrypoints.

-----------------------------------------------------------------

Fri 14-Jul-00   (GautamB)

crtw32\h\useoldio.h, wchar.h
libw32\inc64\useoldio.h, wchar.h
libw32\include\useoldio.h, wchar.h

    VS7#5709 Adding defination for memcpy and memmove in the inline function
    gave warning on PREFIX tools. move the definations out of the functions to
    solve the problem.

    VS7#127305 _OLD_IOSTREAMS_ARE_DEPRECATED warning was also given on IA64
    which should not be there at this point.

-----------------------------------------------------------------

Mon 10-Jul-00   (PhilipLu)

crtw32\stdhpp64\xtree
libw32\inc64\xtree

    Propogate VC6SP4 fix for vs98#56775 (deadlock in xtree) to the old Win64
    headers.

crtw32\tools\win32\relinc64.cmd, relinc64.sed [NEW]

    64-bit release headers should not get _STATIC_CPPLIB change of Jul 6.  This
    is a partial fix - "do_relinc 64" is still not doing exactly the right
    thing for wchar.h.

-----------------------------------------------------------------

Mon 10-Jul-00   (PhilipLu)

mkbld.cmd [NEW]

    Script to call cleanbld.cmd, save output in "build.log", and grep output
    for errors or warnings when done.

srcrel\msvc40.if

    Silence cleansing-stage warnings about setjmp and _STATIC_CPPLIB.

libw32\msvcprt.src

    Fix VC IA64 CRT build broken by Dinkumware 000524 integration.

-----------------------------------------------------------------

Fri 07-Jul-00   (PhilipLu)

makefile.inc
crtw32\stdcpp\delaop2.cpp, delop2.cpp, fiopen.cpp, instances.cpp, locale.cpp,
    locale0.cpp, lsources, newaop.cpp, newaop2.cpp, sources.nt, xcosh.c,
    xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdscale.c, xfdtest.c,
    xferaise.c [NEW], xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldscale.c,
    xldtest.c, xlexp.c, xlsinh.c, xlvalues.c, xsinh.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, fstream, hash_map,
    hash_set, ios, iosfwd, iso646.h, istream, iterator, limits, list, locale,
    map, memory, new, ostream, queue, set, sstream, stl.h, streambuf, vector,
    xcomplex, xhash, xiosbase, xlocale, xlocinfo.h, xlocnum, xmemory, xstring,
    xtree, xutility, ymath.h, yvals.h
crtw32\tools\win32\relinc.if
doc\copysrc.bat
libw32\msvcprt.src
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, fstream, hash_map,
    hash_set, ios, iosfwd, iso646.h, istream, iterator, limits, list, locale,
    map, memory, new, ostream, queue, set, sstream, stl.h, streambuf, vector,
    xcomplex, xhash, xiosbase, xlocale, xlocinfo.h, xlocnum, xmemory, xstring,
    xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Finish integrating 000524 drop of Dinkumware C++ Library.  This fixes VS7
    bugs 5294, 5311, 72100, 97336, 113256

    This code checks in a number of changes currently under #ifdef.  Code under
    _GLOBAL_USING and _HAS_MEMBER_TEMPLATES_REBIND is waiting for the next
    vcLKG compiler update before being enabled.  The code under
    _HAS_TEMPLATE_PARTIAL_REORDERING is waiting for a potential compiler fix
    in the VC7 timeframe.  If that doesn't happen, the code will have to stay
    disabled to avoid compiler errors (code is for optimization only, not
    correctness).  I've also got code under _RETAIN_OLD_CRT_CODE that is there
    so that msvcp70.dll doesn't lose any exports.  Once the next vcLKG update
    takes place, the _RETAIN_OLD_CRT_CODE sections can be removed.

    Finally, I've added _DEPRECATED (__declspec(deprecated)) to a number of
    locale-related functions from VC6 which are being retained for backwards
    compatibility but have been superceded by standard-conforming versions.

-----------------------------------------------------------------

Wed 06-July-00  (GautamB)

crtw32\h\wchar.h, internal.h
crtw32\stdhpp\yvals.h, string, xloctime, xlocnum, xlocmon, xlocmes, xlocale,
    xcomplex, wctype.h, complex, fstream, ios, iosfwd, istream, locale,
    use_ansi.h, typeinfo, string, streambuf, sstream, ostream, locale,
    istream, iosfwd

    Changed the headers so as to be able to statically link to STL even when
    compiling with /MD option.

-----------------------------------------------------------------

Wed 06-July-00  (GautamB)

fpw32\tran\ia64
    VS7#126252, VS7#126122, VS7#125822.
    The original libm_error_support used to set return values for domain
    errors which was not compatible with MS libm stuff (fixed). Also fixed the
    cases where matherr did not worked for float math functions.

-----------------------------------------------------------------

Fri 23-Jun-00   (PhilipLu)

crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop.cpp, newop2.cpp,
    nomemory.cpp, nothrow.cpp, raisehan.cpp, stdhndlr.cpp, stdthrow.cpp,
    string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp, wclog.cpp,
    wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c,
    xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c,
    xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c, xldscale.c,
    xldtest.c, xlexp.c, xlocale.cpp, xlpoly.c, xlsinh.c, xlvalues.c, xmath.h,
    xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, complex, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric,
    ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf, string,
    strstream, typeinfo, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
libw32\stdhpp\algorithm, bitset, complex, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric,
    ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf, string,
    strstream, typeinfo, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmath.h, xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h

    First step in integrating 000524 drop of Dinkumware C++ Library.
    Reformatting sources and renaming some variables to bring in line with
    the new drop, while not changing semantics at all (verified by doing
    binary compares of the compiled libraries).  Done so I can cleanly compare
    the current sources against the new drop.

-----------------------------------------------------------------

Wed 21-Jun-00   (PhilipLu)

crtw32\stdhpp\iso646.h
libw32\include\iso646.h

    VS7#23138 The names #defined in iso646.h are keywords in C++ under /Za
    only, so for /Ze, the defines should stay.

crtw32\stdhpp\exception, typeinfo
crtw32\stdhpp64\exception, typeinfo
libw32\include\exception, typeinfo
libw32\inc64\exception

    Remove obsolete references to _NTSDK in conditional definition of _CRTIMP.

-----------------------------------------------------------------

Wed 21-Jun-00   (GautamB)

Modified
crtw32\eh\frame.cpp
    VS7#107054 Fixed differece in order of destruction depending on inlining.

crtw32\heap\align.c
crtw32\misc\dbgheap.c
    VS7#116389 Changed _aligned_realloc to mimic _realloc.

fpw32\tran\fpexcept.c
    VS7#122777 Added _logb in the list of get_fname() so that matherr could be
    called for _logb.

crtw32\h\useoldio.h
    Added #pragma deprecated(_OLD_IOSTREAMS_ARE_DEPRECATED) to generate
    warning for _OLD_IOSTREAMS_ARE_DEPRECATED.

fpw32\tran\ia64\libm_error.c libm_support.h
    VS7#120653 Added _MS_ as new LIB_VARIABLE to support ms matherr handling.

-----------------------------------------------------------------

Tue 20-Jun-00   (PhilipLu)

crtw32\eh\hooks.cpp

    Improve stackwalk through terminate() or _inconsistency() by getting rid
    of unnecessary __try/__finally protection, since __try/__except already
    present.

crtw32\mbstring\mbctype.c

    Reenable 6/3/00 fix for VS7#115987.  Prevent reoccurence of VS7#116902 by
    getting rid of circular pprev/pnext linked list pointers in threadmbcinfo
    struct.  Fix _POSIX_ problem that could fail to initialize fSystemSet.
    Fix minor performance issue in _setmbcp that would unnecessarily update
    __ptmbcinfo when setting codepage _MB_CP_OEM/_MP_CP_ANSI/_MB_CP_LOCALE that
    was already set.

crtw32\startup\tidtable.c

    VS7#118174 _freeptd shouldn't free thread mbcinfo if its the same as
    global __ptmbcinfo.

crtw32\h\mbctype.h, mbdata.h, mbstring.h, mtdll.h, setlocal.h
srcrel\msvc40.if

    Remove threadmbcinfo.{pprev,pnext}, and rename THREADMBCINFO to
    _THREADMBCINFO, THREADLOCALEINFO to _THREADLOCALEINFO.

crtw32\stdcpp\newaop.cpp, newop.cpp
crtw32\stdhpp\new, xstddef
libw32\include\new, xstddef

    VS7#112746 Use _THROW1(exception) instead of _THROW0(/*exception*/) so
    /EHs compiles get proper throw info.  Also define _THROW1(x) as (...) to
    avoid warning C4290.

crtw32\h\trnsctrl.h
crtw32\eh\frame.cpp
crtw32\eh\ia64\trnsctrl.cpp

    VS7#111429 (From RLanser/TiborL) IA64 workaround for SQL crash while
    handling a throw.

-----------------------------------------------------------------

Tue 06-Jun-00   (KFrei)

Modified
crtw32\rtc\pdblkup.cpp

    VS7#110178 Modified Src/Line# lookup to use PDB7 format

-----------------------------------------------------------------

Wed 07-Jun-00   (GautamB)

Modified
crtw32\stdhpp64\deque
libw32\inc64\deque

    VS7#78357 Fixed Leaks in deque.

-----------------------------------------------------------------

Wed 07-Jun-00   (PhilipLu)

crtw32\mbstring\mbctype.c

    VS7#116902 Back out the fix of Jun 3 for vs7#115987.  That fix exposes a
    bug in the circular linked list insertion in multithread version of
    _setmbcp.  The fix for 115987 will be reinstated with a fix for the
    _setmbcp bug next week, after we split the trees for the PDC.

-----------------------------------------------------------------

Sun 04-Jun-00   (PhilipLu)

cleanbld.cmd, clns_bld.bat, makefile
srcrel\bldnt.cmd, bldwin95.bat, external.mkf, makefile

    Change the environment variable pointing to the VC++ tools installation
    from V6TOOLS to VCTOOLS.  The old environment variable V6TOOLS is still
    supported for now for internal builds, but not in the user CRT rebuild.

cleanbld.cmd

    Tweaking the CRTMKDEP and DELOBJ options of cleanbld.cmd to make the
    V6TOOLS->VCTOOLS switch go smoothly.  CRTMKDEP will regenerate the
    depend.def dependency files even if they already exist.  DELOBJ will now
    delete the %CRT_BUILDDIR%\srcrel directory tree (an oversite I should have
    done when the files produced from the %CRTSRC%\srcrel stuff was moved into
    the %CRT_BUILDDIR% directory).

makefile

    VS7#5678 The makefile should default VCTOOLS to the default installation
    point for VC7, not "\MSDEV", so the user CRT rebuild will work in a clean
    installation without user intervention.

-----------------------------------------------------------------

Sat 03-Jun-00   (PhilipLu)

crtw32\mbstring\mbctype.c

    VS7#115987 __updatetmbcinfo wasn't updating the per-thread mbcinfo(!).
    Every call to something like _ismbcspace would thus call __updatetmbcinfo,
    which takes a lock, so multithread apps using the MBCS APIs can exhibit
    a big performance loss when moving from NT4 (with a VC6 CRT) to Win2K
    (with a VC6.1 CRT).

crtw32\mbstring\ismbdgt.c, ismbspc.c

    VS7#116057 speed up multithread version of _ismbcspace and _ismbcdigit.

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#85385 hash_set/hash_map could crash because of bugs in growing the
    underlying hash structure.  Surgically applying fix from Dinkumware.

crtw32\stdcpp\ios.cpp, locale.cpp, locale0.cpp
crtw32\stdhpp\xlocale
libw32\include\xlocale

    VS7#116039 Lock instantiations of the form "_Lockit _Lock(_LOCK_LOCALE);"
    were useless because _LOCK_LOCALE was defined to nothing, turning the
    object definition into a prototype for a function _Lock, so no lock was
    actually taken.

-----------------------------------------------------------------

Fri 02-Jun-00   (GautamB)

Modified
crtw32\convert\strtoq.c, wcstoq.c

    VS7#115219  Fixed the special case for _I64_MIN. Previously underflow
    occurred at -_I64_MAX.

-----------------------------------------------------------------

Thu 01-Jun-00   (PhilipLu)

crtw32\h\crtdbg.h
crtw32\misc\dbgheap.c
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#55049 Add new routine _CrtReportBlockType which can be called from a
    client block dumper (as called by _CrtDoForAllClientObjects) to retrieve
    the block type, allowing the subblock types of _CLIENT_BLOCK's to be
    queried.

makefile

    VS7#109278 Base the VC++ CRTs into the 0x5D?????? range so they don't
    conflict with the URT DLLs.

crtw32\startup\threadex.c

    VS7#114394 If _beginthreadex is called with a NULL thrdaddr parameter,
    call CreateThread with a pointer to a dummy location to store the thread
    ID.  CreateThread on Win9x cannot be called with a non-NULL final argument.

-----------------------------------------------------------------

Thu 01-Jun-00   (GautamB)

Modified
crtw32\h\setjmpex.h

    VS7#113737 fixed the macro redefination problem arising due to order of
    including the header setjmp.h and setjmpex.h. Now for the case on IA64,
    inclusion of setjmpex.h will define setjmp to _setjmpex on matter if
    setjmp.h is included or not.

-----------------------------------------------------------------

Tue 30-May-00   (GautamB)

Modified
crtw32\h\setjmpex.h

    VS7#113737 fixed the macro redefination problem arising due to order of
    including the header setjmp.h and setjmpex.h

Modified
crtw32\misc\ia64\setjmp.s
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#103476 Added entry point for _setjmp() along with setjmp() in setjmp.s
    to make it compatible to what function we have on x86. The problem was
    that we had setjmp() on x86 and _setjmp() on ia64.

crtw32\stdio\input.c

    vs7#5473 Fixed the problem with scanf while reading octal or hex integers
    when format specifier is %d. Which was not according to the standards

-----------------------------------------------------------------

Wed 31-May-00   (KFrei)

crtw32\rtc\error.cpp
crtw32\rtc\init.cpp
crtw32\rtc\initsect.cpp
crtw32\rtc\userapi.cpp

    VS7#95387,110897 initialization simplified - no more locking


-----------------------------------------------------------------

Tue 30-May-00   (PhilipLu)

crtw32\h\i386\fvec.h
libw32\include\fvec.h

    VS7#101068 add missing functions simd_avg (from Intel).

-----------------------------------------------------------------

Tue 30-May-00   (GautamB)

Modified
crtw32\eh\frame.cpp

    VS7#112630 Some more COM+ bug fixes for rethrows from different points.

-----------------------------------------------------------------

Wed 24-May-00   (GautamB)

Modified
Makefile.sub

    VS7#84575 The retail IA64 CRT is currently built with /Zx (use debuggable
    optimizations).  This is removed from makefile.sub.

Modified
crtw32\eh\frame.cpp

    VS7#5704 Handling STATUS_BREAKPOINT by catch() was not intended. Fixed
    this for cases when this exception could be caught by catch(...) of any
    other catch by use of __set_se_translator().

-----------------------------------------------------------------

Tue 23-May-00   (GautamB)

modified
crtw32\misc\setenv.c

    VS7#100392 Fixed setenv to return error for the case when
    SetEnvironmentVariable() returns error even if the variable is set in CRT
    environment.

Modified
crtw32\convert\atox.c, wtox.c, lsources, sources.nt
crtw32\h\tchar.h, wchar.h, stdlib.h
Add File
crtw32\convert\wtof.c

    VS7#5708 Added new function _wtof and macros for _wtof, _wtoi, _wtoi64

Modified
doc\copysrc.bat

    vs7# 110154Added the filenames of newly added file.

-----------------------------------------------------------------

Thu 18-May-00   (GautamB)

modified
crtw32\misc\w_cmp.c
crtw32\lowio\getwch.c, putwch.c

    VS7#100392 Fixed the return values when W API return with error not equal
    to ERROR_CALL_NOT_IMPLEMENTED.

-----------------------------------------------------------------

Wed 17-May-00   (PhilipLu)

crtw32\h\stdarg.h, varargs.h
libw32\include\stdarg.h, varargs.h
libw32\inc64\stdarg.h, varargs.h

    VS7#109619 - support soft2.5 changes to varargs handling of structs.
    Changes to _APALIGN macro required for IA64, using __alignof intrinsic.

-----------------------------------------------------------------

Wed 17-May-00   (GautamB)

modified
crtw32\misc\getqloc.c

    VS7#62160 For most LCIDs, the combination of the expanded English-language
    Language/Country pair is unique, but that's not true for 0414 and 0814 on
    NT5.  They both map to Norwegian/Norway.  Taking LCID 0814 as special
    case, we return Langauge name as Norwegian-Nynorsk.

-----------------------------------------------------------------

Wed 17-May-00   (GautamB)

modified
crtw32\misc\a_cmp.c, a_env.c, a_loc.c, a_map.c, a_str.c, aw_com.c, w_cmp.c,
w_env.c, w_loc.c, w_map.c, w_str.c
crtw32\lowio\getwch.c, cgetws.c, putwch.c

    VS7#100392. Used error = ERROR_CALL_NOT_IMPLEMENTED to check for
    availablity of Unicode version of APIs. This prevents quick fall back to
    A version of APIs.

-----------------------------------------------------------------

Wed 17-May-00   (PhilipLu)

crtw32\h\i386\emmintrin.h, mmintrin.h, xmmintrin.h
libw32\include\i386\emmintrin.h, mmintrin.h, xmmintrin.h

    For JasonSh - the __m128, __m64, __m128i, and __m128d are now declared in
    the headers, instead of automatically being defined by the C/C++ frontend.

-----------------------------------------------------------------

Mon 15-May-00   (PhilipLu)

makefile, makefile.inc
crtw32\eh\ehvccctr.cpp [NEW], ehvcccvb.cpp [NEW], lsources
crtw32\eh\dll\sources
crtw32\eh\dlllib\sources
crtw32\eh\i386\ehcrt.mak
crtw32\eh\ia64\ehcrt.mak
crtw32\eh\mt\sources
crtw32\eh\nt\sources
crtw32\eh\st\sources
libw32\makefile
srcrel\objects.mkf, pd-b

    VS7#103362 - Add new compiler support routines for EH-aware vector copy
    constructors.  When the compiler generates a default copy-ctor for an
    object which has a data member that's an array of constructable types, and
    exceptions are enabled, it needs to call a helper which unwinds the
    partially constructed array in case a copy-ctor of an array element throws.

-----------------------------------------------------------------

Mon 15-May-00   (GautamB)

modified
fpw32\tran\lsources
srcrel\pd-b
fpw32\tran\ia64\atan.s, atanf.s, powf.s, pow.s, hypot.s, hypotf.s

    Newer version of atan used uninitialised states and causing wrong
    calculations. Restored the older version of atan. Newer version of pow did
    not handle errors correctly. Restored the older version.

delfile
fpw32\tran\ia64\matherr.c, matherrf.c, math_err.c math_errf.c

    Deleted the intel math error handling files so as to use CRT math error
    handling functions.

-----------------------------------------------------------------

Thu 11-May-00   (PhilipLu)

makefile.sub

    IA64 build: if debug info is enabled, then add "-d debug" switch to ias
    cmdlines.

-----------------------------------------------------------------

Thu 11-May-00   (GautamB)

crtw32\startup\crt0msg.c

    VS7#104567 Modified _NMSG_WRITE so not to call _CrtDbgReport for _RT_BANNER.

-----------------------------------------------------------------

Thu 11-May-00   (PhilipLu)

crtw32\misc\qsort.c

    VS7#99674 Performance tuning on qsort().  Sorting the pathological case
    of 0,1,0,1,... sped up by 2500x(!).  Also made sure all comments about
    invariant conditions are up-to-date.

-----------------------------------------------------------------

Wed 10-May-00   (GautamB)

fpieee\tran\i386\87triga.asm

    VS7#99780. fixed atan2(-0.0, 1.0) to return -0.0.

-----------------------------------------------------------------

Wed 03-May-00   (Build Lab for PhilipLu)

crtw32\stdhpp\sstream, xiosbase, xlocnum, xstring
libw32\include\sstream, xiosbase, xlocnum, xstring

    Check in files from the 000202 Dinkumware drop that break backward
    compatibility with the C++ Library DLL entrypoint list.  Done as part of
    updating the devtools LKG toolset.

-----------------------------------------------------------------

Wed 03-May-00   (PhilipLu)

makefile.sub

    The DLL build should always be built /Z7, not just when doing a build on
    a multi-proc machine.  Don't want the build producing a different set of
    files depending on how many CPUs the build machine happens to have.

libw32\inc64\math.h, stdlib.h

    Backing out BryanT's last checkin of these headers.  The math.h checkin
    wipes out a change made last year, and the stdlib.h checkin wipes out some
    CRT DLL entrypoints which are obsolete, but should probably be preserved.
    The stdlib.h change is actually an overly-aggressive fix for the problem
    noted in VS7#22423.

srcrel\mkclnmkf.c

    Fix trivial typo reported by X-Box (== should have been =).

-----------------------------------------------------------------

Mon 01-May-00   (BryanT)

makefile
crtw32\crt32.nt, dirs
crtw32\eh\dirs
crtw32\helper\nt\sources
crtw32\linkopts\sources
crtw32\small\makefile.inc, sources
fpw32\fp32.nt
fpw32\tran\sources.nt
libw32\dirs
libw32\lib\sources.nt
libw32\lib\dll\makefile.inc
libw32\lib\dll40\sources
libw32\lib\exsup\makefile, sources
    NT Build cleanup.

crtw32\heap\malloc.c, sbheap.c
crtw32\startup\crt0dat.c
crtw32\string\strlwr.c, strupr.c
    POSIX changes

crtw32\startup\crt0.c
libw32\inc64\deque, list, math.h, stdlib.h, typeinfo, vector, xlocale, xlocnum
    WIN64 changes

-----------------------------------------------------------------

Mon 01-May-00   (GautamB)

Addfile
fpieee\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan.s, atan2.s, atan2f.c,
    atan2f.s, atanf.c, atanf.s, ceil.s, ceilf.c, ceilf.s, ceill.s, cosh.s,
    coshf.s, exp.s, expf.c, expf.s, fabs.s, fabsf.s, floor.s, floorf.s, fmod.s,
    fmodf.c, fmodf.s, hypot.s, hypotf.s, isnan.s, isnanf.s, ldexp.s, ldexpf.s,
    libm_atan2_reg.s, libm_error.c, libm_reduce.s, libm_support.h, libm_tan.s,
    log.s, logb.s, logbf.s, logf.s, pow.s, powf.s, remainder.s, remainderf.s,
    scalb.s, scalbf.s, sincos.s, sincosf.s, sinh.s, sinhf.s, sqrt.s, sqrtf.s,
    tan.s, tanf.s

    Added new IA64 math routines files in assembly.

-----------------------------------------------------------------

Mon 01-May-00   (GautamB)

fpeee\tran\i386\log.asm, pow.asm, sqrt.asm, trig.asm, triga.asm

    VS7#86209 Speeding up the math routines by assuming (Guranteed for
    optimisation for speed) that the esp will be offset by 4 byte from
    alignment on 8 and then subtracting 4 extra bytes to align it to 8 for
    faster float excess.

-----------------------------------------------------------------

Mon 01-May-00   (BryanT)

crtw32\eh\mips
crtw32\eh\ppc
crtw32\helper\mips
crtw32\helper\ppc
crtw32\misc\mips
crtw32\misc\ppc
crtw32\small\mips
crtw32\startup\mips
crtw32\startup\ppc
crtw32\string\mips
crtw32\string\ppc
fpw32\tran\mips
fpw32\tran\ppc
libw32\lib\mips
libw32\lib\ppc
    Delete dead code for mips and ppc.  Don't delete dirs in case someone
    wants to resurrect code at a later date...

-----------------------------------------------------------------

Tue 25-Apr-00   (GautamB)

addfile
crtw32\lowio\getwch.c, cgetws.c
crtw32\stdio\cwscanf.c

modified
crtw32\h\wchar.h, tchar.h, conio.h (libw32\include and libw32\inc64)
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\pd-b
makefile.inc

    VS7#86398. Added Unicode version of console input functions.

-----------------------------------------------------------------

Tue 25-Apr-00   (PhilipLu)

fpw32\tran\i386\debug.c, debug.h, filter.c, filter_simd.c, xmmi2_fp_emul.c

    VS7#90752, 90760, 90764, 90769, 90775, 90779, 90782, 91746 - fixes for SIMD
    support in _fpieee_flt from Intel.

makefile, makefile.sub

    Add BLD_CRT_LTCG to makefiles, to enable building a CRT with Link Time
    CodeGen enabled.  Off by default, only there for internal use.

-----------------------------------------------------------------

Mon 24-Apr-00   (PhilipLu)

crtw32\misc\ia64\memcpys.s, memsets.s

    UTC_P7#1509 - memset and memcpy were truncting the size to 32-bits.
    Propogate RLanser's fix from the \\lang5\v7.ia64sdk3!crt SLM tree.

crtw32\stdcpp64\xdnorm.c, xfdnorm.c, xfvalues.c, xlvalues.c, xvalues.c

    Work around new warning C4554 for code like "1 << _OFF + 1".  Added parens
    to give "1 << (_OFF + 1)".  The old code was fine, just needed to shut up
    the warning.

crtw32\misc\sbheap.c

    Fix memset typo reported by X-Box.  Count and value args were reversed.
    Only in V5 SBH code, so not a big deal.

-----------------------------------------------------------------

Fri 21-Apr-00   (PhilipLu)

crtw32\eh\rtti.cpp
crtw32\h\rtti.h
    Disable new warning C4297 about a throw in an extern "C" function by
    adding explicit exception specification to compiler helpers for
    dynamic_cast and RTTI.

-----------------------------------------------------------------

Wed 19-Apr-00   (GautamB)

crtw32\eh\frame.cpp

    VS7#96508 96370 96341 93684 89697 Bug fixes.

-----------------------------------------------------------------

Tue 18-Apr-00   (GautamB)

crtw32\eh\frame.cpp

    Minor Bug fixes.

-----------------------------------------------------------------
Thu 14-Apr-00   (GautamB)

crtw32\stdcpp\xdnorm.c, xfdnorm.c, xvalues.c, xfvalues.c, xlvalues.c

    Fixed warning no. C4554 about the precedence of - and << operator.

-----------------------------------------------------------------
Thu 06-Apr-00   (GautamB)

crtw32\eh\frame.cpp
    Add more functions for C++ eh support in com+

-----------------------------------------------------------------

Wed 05-Apr-00   (PhilipLu)

makefile

    Buildfix for msvcp* C++ DLL.  Stdhndlr.obj wasn't being included in the
    DLL.

-----------------------------------------------------------------

Wed 05-Apr-00   (PhilipLu)

crtw32\eh\ia64\trnsctrl.cpp

    New version of macro GetLanguageSpecificData copied from ntia64.h, supplied
    by Steve Hanson.

-----------------------------------------------------------------

Wed 05-Apr-00   (PhilipLu)

crtw32\misc\i386\sehprolg.asm [NEW]
crtw32\misc\lsources
crtw32\misc\dll\sources
crtw32\misc\dlllib\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
srcrel\makefile, objects.mkf, pd-b
makefile, makefile.inc

    Add __SEH_prolog compiler helper for /O1 SEH support.

-----------------------------------------------------------------

Tue 28-Mar-00   (GautamB)

crtw32\eh\frame.cpp

    VS7#88408. HT_DISPCATCH is used to detect no object (catch by type) for
    native, but doesn't work for COM+ - check for a null in the catch object.

-----------------------------------------------------------------

Mon 27-Mar-00   (PhilipLu)

makefile, makefile.inc
libw32\msvcrt.src, syscrt.src
srcrel\makefile, mkclnmkf.c

    Enable 64-bit VC CRT build by setting SYS_BLDCRT=0 and LLP64=1 during
    build.  Will build CRT DLLs with the VC7.0 names instead of the old
    system names.

crtw32\stdcpp\strstrea.cpp
crtw32\stdhpp\istream, strstream, xiosbase
libw32\include\istream, strstream, xiosbase

    Bugfixes to enable building VC7.0 C++ Standard Library for Win64.

crtw32\stdhpp\fstream, sstream, streambuf
libw32\include\fstream, sstream, streambuf

    Temporary casts to enable building VC7.0 C++ Standard Library for Win64.
    Looks like some C++ Standard methods assume an int can be used for
    stream offsets, others use "streamsize" which we currently set to signed
    __int64 on Win64.  Until those can be reconciled, add casts to silence
    warnings.  Code currently can experience problems with file sizes > 2 GB.

-----------------------------------------------------------------

Mon 27-Mar-00   (PhilipLu)

crtw32\eh\ehvecctr.cpp, ehveccvb.cpp, ehvecdtr.cpp, frame.cpp, rtti.cpp,
    throw.cpp
crtw32\eh\ia64\handlers.s, trnsctrl.cpp
crtw32\misc\ia64\jmpuwind.s
makefile.sub, ntia64bld.cmd
langapi\include\ehdata.h, rttidata.h

    Remove CC_P7_SOFT25 references from IA64 build, and make it the default.

-----------------------------------------------------------------

Tue 21-Mar-00   (GautamB)

crtw32\misc\dbgheap.c
crtw32\heap\align.c

    ReOrganised _aligned_offset routines. Fixed vs7#87724. Made
    _aligned_malloc and _aligned_realloc as one liner that would return the
    value from _aligned_offset routines with offset = 0.

-----------------------------------------------------------------

Fri 17-Mar-00   (PhilipLu)

crtw32\time\strftime.c

    VS7#9374 std::time_put::put failed because time formatting for _Strftime
    wasn't initializing the final element ww_timefmt.  Fix from PJP (actually,
    it's been there since mid-'98 in a file I didn't understand should be
    merged into the main CRT tree).

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\misc\dbgheap.c
crtw32\heap\align.c

    VS7#86467 Offset >= size doesn't make any sense. If offset is >=, then
    1) assert for debug version, 2) return EINVAL error.

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\misc\dbgheap.c
crtw32\heap\align.c

    VS7#87084, 86467. Aligned routines were using 1 extra byte. (fixed). Also
    checked to -ve values of offset.

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\convert\toupper.c, tolower.c

    VS7#9616 The performance enhancement changes were only visible for
    _tolower(). __tolower_mt() is also used at a lot of places. Modified code
    such that the performance changes are visible for both of them.

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\lowio\putwch.c

    VS7#58257 _putwch was using GetConsoleCP() for conversion from Unicode to
    MBCS. Changed it to more suitable GetConsoleOutputCP().

-----------------------------------------------------------------

Wed 15-Mar-00   (GautamB)

crtw32\stdio\sprintf.c swprintf.c vsprint.c vswprint.c
crtw32\h\stdio.h wchar.h tchar.h
libw32\include\stdio.h wchar.h tchar.h
libw32\inc64\stdio.h wchar.h tchar.h

    Added a set of new functions which can be used to count the number of
    characters needed for printing formatted data using printf or any such
    function. (_scprintf(), _scwprintf(), _vscprintf(), _vscwprintf())

-----------------------------------------------------------------

Fri 10-Mar-00   (GautamB)

crtw32\convert\tolower.c, toupper.c
crtw32\string\stricmp.c, stnicmp.c, memicmp.c

    Moved the performance enhancement stuff from stricmp routines to
    conversion routines.

-----------------------------------------------------------------

Fri 10-Mar-00   (GautamB)

crtw32\stdio\output.c, sprintf.c vsprintf.c

    VS7#83962 - Modified sprintf and vsprintf so as to return length of the
    formatted even on passing NULL pointer for destination string

-----------------------------------------------------------------

Thu 09-Mar-00   (PhilipLu)

crtw32\h\i386\xmmintrin.h
libw32\include\xmmintrin.h

    VSPP#78 - xmmintrin.h should not declare _mm_malloc and _mm_free when
    using VC.  It should include malloc.h to get them, instead.

srcrel\pd-b

    Copy over the Intel- and AMD-supplied headers from libw32\include to the
    build tree.

-----------------------------------------------------------------

Wed 08-Mar-00   (PhilipLu)

crtw32\h\i386\emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h
libw32\include\emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h

    Latest versions of Intel-supplied FP intrinsics headers.

-----------------------------------------------------------------

Tue 07-Mar-00   (PhilipLu)

fpw32\tran\ia64\huge.s

    UTC_P7#1386 - _HUGE was 4-byte aligned, should be 8.

-----------------------------------------------------------------

Mon 06-Mar-00   (PhilipLu)

crtw32\h\internal.h
crtw32\startup\crt0.c, crt0dat.c, mlock.c

    VS7#83663 - Call __crtExitProcess instead of ExitProcess.  __crtExitProcess
    checks to see if this is a COM+ app by doing a GetModuleHandle on
    mscoree.dll, then looking for the CorExitProcess entrypoint, and calling
    that instead of ExitProcess if it's found.  This allows COM+ to clean up
    cleanly when using the CRT, so the FinalizerThread has a chance to do its
    exit processing.

-----------------------------------------------------------------

Mon 06-Mar-00   (PhilipLu)

Propogate fixes/changes made to the VC6 ProcessorPack CRT:

crtw32\eh\i386\trnsctrl.cpp

    Warning C4851 is gone for VC6 and VC7, now just C4731.

crtw32\h\fpieee.h
fpw32\tran\lsources
fpw32\tran\i386\debug.c [NEW], debug.h [NEW], filter.h, filter_simd.c,
    xmmi2_fp_emul.c [NEW], xmmi_fp_emul.c, xmmi_types.h
libw32\include\fpieee.h
libw32\inc64\fpieee.h
srcrel\pd-b

    New WNI support and KNI bugfixes for _fpieee_flt.

crtw32\h\i386\dvec.h [NEW], emmintrin.h [NEW], fvec.h [NEW], ivec.h [NEW],
    mm3dnow.h [NEW], mmintrin.h [NEW], xmmintrin.h [NEW]
libw32\include\dvec.h [NEW], emmintrin.h [NEW], fvec.h [NEW], ivec.h [NEW],
    mm3dnow.h [NEW], mmintrin.h [NEW], xmmintrin.h [NEW]
srcrel\makefile, pd-b

    New headers of vendor-supplied FP intrinsics.  These do not get used by
    the CRT build; they are simply there to be dropped to users.

crtw32\tools\win32\relinc.cmd

    Handle new vendor-supplied FP intrinsic headers for 32-bit includes.

-----------------------------------------------------------------

Fri 03-Mar-00   (PhilipLu)

crtw32\misc\ia64\chandler.c

    Fix for SEH support from Intel.

-----------------------------------------------------------------

Fri 03-Mar-00   (GautamB)

crtw32\h\trnsctrl.h
crtw32\eh\frame.cpp
libw32\msvcrt.src, syscrt.src, syscrt64.src

    Exported __DestructExceptionObject from dll and made slight changes to
    definition of __CxxExceptionFilter.

-----------------------------------------------------------------

Thu 02-Mar-00   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp

    VS7#83643 - _UnwindNestedFrames must preserve callee-save regs EBX, ESI,
    and EDI, since RtlUnwind will trash them all.

-----------------------------------------------------------------

Mon 28-Feb-00   (PhilipLu)

makefile, makefile.inc
crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, lsources, newaop.cpp, newaop2.cpp, newop2.cpp,
    nomemory.cpp, nothrow.cpp [NEW], raisehan.cpp, sources.nt, stdhndlr.cpp,
    stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp,
    xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
    xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c,
    xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlpoly.c, xlsinh.c,
    xlvalues.c, xmath.h, xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmemory,
    xstddef, xstring, xtree, xutility, ymath.h, yvals.h
doc\copysrc.bat
libw32\msvcprt.src
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmath.h,
    xmemory, xstddef, xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Integrate the 000202 drop of the C++ Library from Dinkumware.  Main change
    is to reformat all the headers and use longer identifiers.  Header xstring
    not yet integrated, because basic_string was rewritten too much to maintain
    compatibility between old libs and new MSVCP*.DLL.  Other new code which
    cannot be turned on yet under #if _CRT_NEW_STL_DROP.

    Removes code which was previously under _RETAIN_OLD_CRT_CODE, and puts
    old code which must be maintained until next LKG toolset update under
    _RETAIN_OLD_CRT_CODE.

makefile.sub

    Enable /Wp64 in the x86 build.

-----------------------------------------------------------------

Fri 25-Feb-00   (PhilipLu)

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#79719 - The _CrtDbgBreak macro should use the __debugbreak intrinsic
    when _MSC_VER >= 1300.

crtw32\h\setjmp.h
libw32\include\setjmp.h
libw32\inc64\setjmp.h

    VS7#81945 - setjmp.h is now allowed with /com+.

-----------------------------------------------------------------

Thu 24-Feb-00   (PhilipLu)

doc\copysrc.bat

    Add 'platdst <path>' option to copy platform-specific files to different
    directory from main files.  Wanted by the build lab for copying to
    devtools\common and devtools\%PLATFORM%.

-----------------------------------------------------------------

Thu 24-Feb-00   (GautamB)

crtw32\misc\setenv.c

    VS7#66530 _wputenv didn't use to work on Win9x as there was call in it
    SetEnvironmentVariable() which pointed to SetEnvironVariableW() and this
    API is not on Win9x so in effect environment didn't get updated. Fixed
    this.

-----------------------------------------------------------------

Thu 24-Feb-00   (GautamB)

crtw32\h\wchar.h

    VS7#80515 Checked all othe cases where order of including wchar.h with
    other header file does not make any difference. Only stdio.h had this
    problem. which is fixed.

-----------------------------------------------------------------

Tue 16-Feb-00   (GautamB)

crtw32\dllstuff\crtexe.c

    VS7#79603 Left out files for earlier checkin.

-----------------------------------------------------------------

Tue 15-Feb-00   (PhilipLu)

cleanbld.cmd
srcrel\clnsrcrel.bat, external.mkf, makefile

    The cleanbld.cmd build no longer creates files in %CRT_SRC%\srcrel.
    Instead, any srcrel-related files that get built are created in
    %CRT_BUILDDIR%\srcrel\%PLATFORM% instead.  That allows Win32 and Win64
    builds to more easily share the same enlistment.

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\lowio\lowio.mkf, lsources, putwch.c (New)
crtw32\stdio\lsources, makdfile.c, output.c, cwprintf.c (New)
crtw32\h\wchar.h, conio.h, tchar.h
srcrel\pd-b
makefile
makefile.inc

    VS7#58257 Added unicode versions for cprintf, _putch and _cputs.
    (_cwprintf, _putwch, _cputws respectively).

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\convert\convert.mkf, lsources, sources.nt, strtoq.c, wcstoq.c(New)
crtw32\h\wchar.h, stdlib.h, tchar.h

    VS7#5427 Added strtoi64, strtoui64, wcstoi64 and wcstoui64, which converts
    string to __int64.

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\startup\crt0.c

    VS7#79603 Changed GetModuleHandle() in check_complus_app() to
    GetModuleHandleA(). GetModuleHandle() maps to GetModuleHandleW() for
    UNICODE main (wmain) which breaks the app on Win9X.

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\eh\frame.cpp

    VS7#79598 Added a function CxxExceptionFilter for use in COM+ EH. This
    function can be used to turn "try{...}catch(foo a){...}" to
    "try{...} except(_CxxExceptionFilter(foo.typeinfo, _exception_info(), &a)){...}".

-----------------------------------------------------------------

Tue 15-Feb-00   (PhilipLu)

crtw32\eh\frame.cpp

    VS7#79460 std::uncaught_exception() support broke unwinding.  We were
    putting a __try/__finally around the call to _UnwindNestedFrames, which
    calls RtlUnwind, but _UnwindNestedFrames will only work if the top-most
    exception frame is from the exception dispatcher, not anything of ours.

-----------------------------------------------------------------

Mon 14-Feb-00   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp

    Warning C4851, disabled in Jan 31 checkin, is actually C4731 in the VC7
    backend.

-----------------------------------------------------------------

Fri 11-Feb-00   (GautamB)

crtw32\dllstuff\crtlib.c
crtw32\startup\dllcrt0.c, thread.c, threadex.c

    VS7#47322 There were two problem in the way threads were created. 1) if we
    called some locale dependent function, it would result in leak of ptd
    allocated during the call to the function. Second we would like to know if
    the thread is created ASAP, even if theread is created by some call to API
    so that later on when we could allocate memory for ptd failing in which
    results in termination of thread creation process. Earlier failing in
    alloting the memory for ptd, once the thread is created would terminate
    the whole process.

-----------------------------------------------------------------

Thu 03-Feb-00   (PhilipLu)

libw32\syscrt.rc, sysirt.rc, sysprt.rc
srcrel\external.mkf, objects.mkf
makefile

    Tweak the system CRT build.  Version number is 7.0, not 6.1.  The implibs
    are created as msvcrt.lib etc., not syscrt.lib.  And the C++ Library DLL is
    now named syspr70.dll, not msvcp??.dll, so we can still have a versioned
    C++ DLL name, but have it for the system only.

libw32\msvcrt.rc

    The internal filename in the version resource should be MSVCR70.DLL,
    not MSVCRT70.dll.

-----------------------------------------------------------------

Tue 01-Feb-00   (PhilipLu)

makefile.inc

    VS7#76534 Win64 static CRTs are not being built with delop2.cpp that was
    added for the Win64 CRT DLL build back in early Dec '99.

-----------------------------------------------------------------

Mon 31-Jan-00   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp

    Disable new warning C4851 about EBP being modified by inline-asm.

srcrel\external.mkf, makefile

    Checkin for the build lab doing 64-bit builds.  Clear _CL_ when we need
    to use the 32-bit compiler to build an .EXE, since the build lab uses
    _CL_ to point to the 64-bit compiler passes while self-building.

-----------------------------------------------------------------

Sun 30-Jan-00   (PhilipLu)

srcrel\makefile

    Clean up IA64 build so x86 components aren't copied over to crtbld\crt\src.

doc\copysrc.bat

    Copy proper files for IA64 build, and don't copy CRT rebuild components
    when doing a SYSCRT copy.  Also, copy files to the destination root, not
    dest-root\crt\src.

-----------------------------------------------------------------

Fri 28-Jan-00   (GautamB)

crtw32/string/stricmp.c, memicmp.c, strnicmp.c
crtw32/h/setlocale.h, mtdll.h
crtw32/misc/setlocale.c, nlsdata2.c

    VS7#9616   Enhanced the performance for locale based case insensitive
    comparision. What we do here is check if the current CTYPE locale has
    first 127 characters same as CLOCALE. If yes the we can convert the UPPER
    case character less then 127 to LOWER without calling time consuming
    tolower.

-----------------------------------------------------------------

Fri 28-Jan-00   (GautamB)

crtw32/stdio/popen.c

    VS7#16833  Changed the way popen used to work. Also made if threadsafe.
    What popen used to do was first duplicate the current stdio handle that
    we were supposed to trap, then close the local copy and set the one end
    of the pipe as that handle, then spawn the new process and then again
    setting up and new handle for stdio. Now we just pass the existing pipe
    to new process as the handle we wish to trap.

-----------------------------------------------------------------

Fri 28-Jan-00   (GautamB)

crtw32/align.c

    Performance enhancement of _aligned_realloc and _aligned_offset_realloc.

-----------------------------------------------------------------

Thu 27-Jan-00   (PhilipLu)

makefile

    VS7#5437 - The user rebuild scenario wasn't creating PDBs for the DLL
    CRTs.  Actually, it was creating them, in the root directory!

makefile

    VS7#14930 - Uses of the V6TOOLS macro need to be quote-protected in case
    V6TOOLS is a path with spaces in it.

libw32\msvcrt.src
srcrel\external.mkf, makefile
makefile, makefile.inc, makefile.sub

    VS7#16831 - The user rebuild scenario was pretty thoroughly broken.  This
    repairs it and cleans it up significantly, removing references to things
    like BLD_SYSCRT from the cleansed makefiles.

doc\copysrc.bat

    Major cleanup on this file, which can now be used to copy the result of
    a CRT build using cleanbld.cmd into a separate tree to create the image
    that would be installed as %VC-ROOT%\crt\src.

-----------------------------------------------------------------

Tue 25-Jan-00   (PhilipLu)

crtw32\h\sect_attribs.h
crtw32\misc\lsources, seccinit.c [NEW], seccook.c [NEW], secfail.c [NEW],
    seclocf.c [NEW]
doc\copysrc.bat
libw32\msvcrt.src, syscrt.src
srcrel\pd-b
makefile, makefile.inc

    Implement the CRT support for compiler switch /GS.  This is used to protect
    against overwriting a local buffer variable and wiping out a return
    address, which can allow a hacker to hijack a program's execution.

crtw32\startup\crt0msg.c

    Fix a buffer overwrite problem (!) I happened to notice while doing the
    /GS support.  _NMSG_WRITE could overflow a local buffer when creating the
    text to display in a message box.

-----------------------------------------------------------------

Mon 24-Jan-00   (GautamB)

crtw32\heap\align.c

    Modified the _aligned_realloc reoutines to save the content of memblock
    that is reallocated as much as possible.

-----------------------------------------------------------------

Mon 24-Jan-00   (PhilipLu)

crtw32\h\wchar.h
libw32\include\wchar.h
libw32\inc64\wchar.h

    VS7#74640 - _wexec* and _wspawn* prototypes in wchar.h should return
    intptr_t, not int, for compatibility with process.h and definitions.

-----------------------------------------------------------------

Thu 20-Jan-00   (PhilipLu)

crtw32\h\stdarg.h, varargs.h
libw32\include\stdarg.h, varargs.h
libw32\inc64\stdarg.h, varargs.h
srcrel\msvc40.if

    VS7#73359 - Remove __epcg__ references.  This was an old Intel define that
    they no longer need.

-----------------------------------------------------------------

Mon 17-Jan-00   (v-vadimp)

crtw32\eh\ia64\handlers.s
crtw32\eh\ia64\trnsctrl.cpp

    Fixed 2.5 IA64 software convention deficiencies in the previous checkins

-----------------------------------------------------------------

Fri 14-Jan-00   (v-vadimp)

crtw32\eh\frame.cpp
crtw32\eh\ia64\handlers.s
crtw32\eh\ia64\trnsctrl.cpp
crtw32\misc\ia64\jmpuwind.s

    NLG support for the debugger, some macro defs to make code backward
    compatible with 2.4, __NLG_Destination & __NLG_Dispatch got an extra "_"
    for IA64

-----------------------------------------------------------------

Wed 12-Jan-00   (gautamb)

crtw32\h\malloc.h

    vs7#71409 fixed the macro _mm_free which was supposed to have one parameter.

-----------------------------------------------------------------

Mon 10-Jan-00   (PhilipLu)

crtw32\exec\dospawn.c

    VS7#71206 - _spawn* called with _P_WAIT needs to sign-extend the exit
    code into an intptr_t for WIN64.

-----------------------------------------------------------------

Thu 06-Jan-00   (rlanser)

crtw32\eh\frame.cpp
crtw32\eh\throw.cpp
crtw32\eh\ia64\trnsctrl.cpp
crtw32\h\mtdll.h
crtw32\h\trnsctrl.h

    IA64:  SOFT25 Image Relative bug fixes.

-----------------------------------------------------------------

Wed 05-Jan-00   (Gautamb)

crtw32\h\dbgint.h, crtdbg.h
crtw32\misc\dbgheap.c
crtw32\heap\align.c
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    Added debug support for aligned routines.

-----------------------------------------------------------------

Tue 04-Jan-00   (Gautamb)

libw32\tools\source\ifstrip\eval.c ifstrip.c
libw32\tools\source\striphdr\striphdr.c

    Added support for internal CRT build.

-----------------------------------------------------------------

Wed 29-Dec-99   (Gautamb)

crtw32\heap\align.c

    Fixed some serious bug in _aligned_offset_**() routines.

-----------------------------------------------------------------

Fri 17-Dec-99   (PhilipLu)

makefile

    VS7#65276 - Create alias records for data symbols and function descriptors,
    not just function entrypoints, e.g. create alias timezone -> _timezone,
    not just .timezone -> ._timezone.

-----------------------------------------------------------------

Thu 16-Dec-99   (GautamB)

modified
crtw32\h\limits.h
crtw32\stdio\fputwc.c, ungetwc.c

    VS7#5414 - Updated the value of MB_LEN_MAX to 5 and modified functions
    fputwc() and ungetwc() accordingly.

-----------------------------------------------------------------

Thu 16-Dec-99   (GautamB)

modified
all files

    VS7#30929 - Modified the Copyright years for Microsoft files to -2000.

-----------------------------------------------------------------

Thu 16-Dec-99   (GautamB)

modified
crtw32\malloc.h

    VS7#49169 - Modified HEAP_MAXREQ to 0xFFFFFFFFFFFFFFE0 for win64

-----------------------------------------------------------------

Thu 16-Dec-99   (PhilipLu)

makefile

    VS7#45623 - Build of tcmapdll.lib for IA64 was incorrect, so alias records
    for _t* names to the equivalent _mb* names weren't working.

    Also, added a new build flag.  Set BLD_TESTCRT=1, then the build will
    create CRT DLLs testcrt[d], testprt[d] and testirt[d] instead of the
    normal names.  This allows building CRTs which can be safely tested without
    interfering with system protected files or the existing CRTs.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

makefile.inc
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\pd-b
crtw32\h\malloc.h
crtw32\heap\heap.mkf, lsources
crtw32\misc\a_cmp.c, a_loc.c, a_map.c, a_str.c, w_cmp.c, w_loc.c, w_map.c,
    w_str.c
crtw32\string\strlwr.c, strupr.c, wcslwr.c, wcsupr.c, wcsxfrm.c
crtw32\time\wcsftime.c
crtw32\lowio\getch.c

Add file

crtw32\heap\resetstk.c

    VS7#62239 Secured the use of _alloca in case of stackoverflow. Also
    introduced a new function (_resetstkoflw() )which recovers for
    stackoverflow.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

makefile.inc
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\pd-b
crtw32\h\malloc.h
crtw32\heap\heap.mkf, lsources
crtw32\heap\mt\lsources
crtw32\heap\dll\lsources
libw32\include\malloc.h
libw32\inc64\malloc.h

addfile

crtw32\heap\align.c

    Added _aligned_malloc, _aligned_realloc, _aligned_offset_malloc,
    _aligned_offset_realloc and _aligned_free functions.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\mtdll.h
crtw32\startup\mlock.h
langapi\undname\undname.cxx

    VS7#5674 Added a new lock for critical section in unDName()

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\ctime.h
crtw32\time\dtoxtime.c

    VS7#21083 Modified localtotime for taking into account leap years upto
              2999. Also changed _MAX_YEAR for Win64 to 1099

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\startup\i386\crtstk.asm

    VS7#27118 Converted _chkstk and _alloca_probe to procedure

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\eh.h, mtdll.h
crtw32\eh\frame.cpp
crtw32\stdcpp\UNCAUGHT.cpp

    VS#5340 Added a new function (our version of uncaught_exception) which is
            then used by uncaught_exception for doing it's work. Also
            introduced new flag in struct tiddata for keeping a look on
            exception.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\wchar.h

    VS#5709 Modified wmemcpy and wmemmove for faster perfomance.

-----------------------------------------------------------------


Sat 08-Dec-99   (rlanser)

crtw32\stdhpp64\new
libw32\inc64\new

    Change "operator delete(void *, const std::nothrow_t&)" to _WIN64.

-----------------------------------------------------------------

Sat 04-Dec-99   (rlanser)

crtw32\stdcpp64\delop2.cpp, delop2_s.cpp, lsources, sources.nt
crtw32\stdhpp64\new
libw32\inc64\new
srcrel\pd-b

    Add "operator delete(void *, const std::nothrow_t&)" to the
    hacked NT headers etal (stdhpp64, stdcpp64, inc64).

-----------------------------------------------------------------

Fri 03-Dec-99   (PhilipLu)

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    VS7#65291 - the headers do '#if _M_MRX000' in one place, and
    '#if defined(_M_MRX000)' in another.  That interferes with a new warning
    the frontend wants to make available.  Change to use defined(_M_MRX000)
    everywhere.

srcrel\makefile

    We should not be copying trnsctrl.h into the crt\src user rebuild dir,
    since we don't ship source for the EH support and this header isn't used
    for the user rebuild scenario.  Looks like this header was being shipped
    accidentally.  Change the build cleansing procedure to stop copying this
    file over for shipping.

crtw32\h\crtdbg.h, direct.h, heap.h, malloc.h, mbstring.h, memory.h, mtdll.h,
    new.h, nlsint.h, process.h, search.h, stdarg.h, stddef.h, stdexcpt.h,
    stdio.h, stdlib.h, string.h, varargs.h
crtw32\heap\sbheap.c
crtw32\lowio\write.c
srcrel\msvc40.if

    The build cleansing procedure was issuing a bunch of warnings while running
    the ifstrip tool.  Get rid of them all.

-----------------------------------------------------------------

Thu 02-Dec-99   (PhilipLu)

libw32\msvcprt.src

    VS7#66372 - The _RETAIN_OLD_CRT_CODE fix of Nov 14 was incomplete.  All of
    the exception class methods and vtables which are no longer dllimport must
    be added as private exports in the .def file for msvcp*.dll so they will
    not appear in the msvcprt*.lib import lib.

-----------------------------------------------------------------

Wed 01-Dec-99   (GautamB)

modified

crtw32\h\string.h
crtw32\misc\lsources, strerror.c, _strerr.c

add files

crtw32\misc\wcserror.c, _wcserr.c

    VS#5706 Added wide char version for strerror() and _strerror()

-----------------------------------------------------------------

Wed 01-Dec-99   (rlanser)

crtw32\misc\ia64\chandler.c

    [v-willc] Support for reordering blocks in a try scope.

-----------------------------------------------------------------

Wed 01-Dec-99   (PhilipLu)

makefile.sub

    Enable CC_P7_SOFT25 when building for IA64.

-----------------------------------------------------------------

Wed 01-Dec-99   (GautamB)

crtw32\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    Add alias for _tpgmptr

-----------------------------------------------------------------

Tue 30-Nov-99   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp
crtw32\h\winheap.h
crtw32\heap\sbheap.c
crtw32\rtc\error.cpp, init.cpp, pdblkup.cpp
crtw32\startup\tlssup.c
crtw32\stdhpp\xlocale
crtw32\stdio\output.c
fpw32\tran\i386\filter.c, filter_simd.c
libw32\include\xlocale

    Add casts, minor fixes, and #pragma warnings to compile cleanly on x86
    with /Wp64.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    Forward declare _CrtMemBlockHeader to work around vs7#63059.

cleanbld.cmd, makefile, makefile.sub

    Default to building release builds with debug info, and multiprocessor
    compile for DLL.  Get rid of makefile flags BLD_REL_DBINFO and _VCBUILD.
    Add BLD_REL_NO_DBINFO to allow building release builds without debug info.

-----------------------------------------------------------------

Thu 18-Nov-99   (PhilipLu)

makefile, makefile.inc
crtw32\eh\lsources
crtw32\eh\dll\sources
crtw32\eh\i386\ehprolg2.c [NEW]
crtw32\eh\mt\sources
crtw32\eh\st\sources
crtw32\libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\makefile, objects.mkf, pd-b

    VS7#57098 - Add new compiler helper __EH_prolog2 as a static link component
    whose source does not get shipped.  Needed to handle stack frame creation
    in a function compiled /Os with both a C++ EH frame and a stack that must
    be aligned thanks to __declspec(align()) locals.  Also changing the older
    compiler helper __EH_prolog so it is always statically linked, instead of
    being used from the CRT DLL.

-----------------------------------------------------------------

Wed 17-Nov-99   (GautamB)

crtw32\dostypes.h
    Vs7#37766 Deleted this file as this file was not used anymore.

-----------------------------------------------------------------

Tue 16-Nov-99   (PhilipLu)

makefile, makefile.inc
crtw32\dllstuff\crtexe.c, lsources
crtw32\dllstuff\dlllib\sources
crtw32\startup\crt0.c, lsources
crtw32\startup\mt\sources
crtw32\startup\st\sources
doc\copysrc.bat
libw32\makefile
srcrel\msvc40.if, pd-b

[delfiled:]
crtw32\dllstuff\corexe.c, corexew.c, wcorexe.c, wcorexew.c
crtw32\startup\cor0.c, wcor0.c, wincor0.c, wwincor0.c

    VS7#61850 (again) - The fix on 13-Nov won't work, because the linker must
    choose an entrypoint before starting library searching, but may not know
    if an app is COM+ until after it drags in a library object with metadata.
    So back out the previous fix and implement a new one.  On entry, search the
    image header of the process EXE to see if the COM+ Descriptor entry in the
    Image Directory is empty, and handle as a COM+ app if it not.

-----------------------------------------------------------------

Sun 14-Nov-99   (PhilipLu)

makefile
crtw32\stdcpp\instances.cpp
crtw32\stdhpp\exception, new, stdexcept, xlocinfo, xstring, yvals.h
crtw32\tools\win32\relinc.if
libw32\include\xlocinfo, yvals.h

    Buildfix - msvcp70[d].dll must maintain all existing exports except at
    major updates of the vcLKG toolset.  Restore all the old exports which were
    lost at the STL integration of 9-Nov-99.  The functions corresponding to
    these exports are reintroduced into the headers in stdhpp by placing them
    under #if _RETAIN_OLD_CRT_CODE, which is only defined when compiling the
    STL DLL.  Also, this #if is cleansed from the headers by relinc.cmd, so
    the released headers are unchanged and new code will not see any definition
    of the old exports.  Once we update vcLKG and VS is built with the new
    headers, the old code under #if can be removed totally.

    As part of this, removing private copy-ctor and assign-ops declarations
    (without definitions) for _Locinfo and _Lockit, so the compiler generated
    defaults again appear as exports.  I originally added these definitions to
    work around an integration problem which doesn't exist any longer.

crtw32\tools\win32\relinc.cmd, relinc64.cmd

    Trivial cleanup - detabify and line up file.

-----------------------------------------------------------------

Sat 13-Nov-99   (PhilipLu)

makefile, makefile.inc
crtw32\dllstuff\corexe.c [NEW], corexew.c [NEW], crtexe.c, crtexew.c, lsources,
    wcorexe.c [NEW], wcorexew.c [NEW], wcrtexe.c, wcrtexew.c
crtw32\dllstuff\dlllib\sources
crtw32\startup\ cor0.c [NEW], crt0.c, lsources, wcor0.c [NEW], wcrt0.c,
    wincor0.c [NEW], wincrt0.c, wwincor0.c [NEW], wwincrt0.c
crtw32\startup\mt\sources
crtw32\startup\st\sources
doc\copysrc.bat
libw32\makefile
srcrel\pd-b

    VS7#61850 - Apps using COM+ IJW, with a native CRT startup object linked to
    a COM+ MSIL app, have to use a special COM+-aware version of the CRT
    startup code.  For now, all this code does differently is return back to
    COM+ instead of calling exit().  Introduces 4 new entrypoints which the
    linker knows about and uses when linking a COM+ app, with the basic name
    being mainCorCRTStartup.

crtw32\h\internal.h, io.h, time.h, wchar.h
libw32\inc64\io.h, time.h, wchar.h
libw32\include\io.h, time.h, wchar.h
srcrel\msvc40.if

    Wrap the definition of _time64_t under #ifndef _TIME64_T_DEFINED instead
    of putting in under _TIME_T_DEFINED, so it's easier to mix and match VC6
    and VC7 CRT headers.

-----------------------------------------------------------------

Fri 12-Nov-99   (GautamB)

crtw32\lowio\fstat64.c
crtw32\dos\stat64.c

    VS7#57599 - Modified fstat64 and stat64 to take DST into account.

-----------------------------------------------------------------

Fri 12-Nov-99   (PhilipLu)

crtw32\misc\getqloc.c

    Setlocale should first try to use the language string given before using
    the substituted abbreviation from __rg_language[].  That's because there
    are language names which map to multiple abbreviations.  On NT5, language
    'Chinese' can be abbreviation CHS or CHT.  Because of this, it's possible
    to have setlocale(LC_ALL,setlocale(LC_ALL,NULL)) fail, even though setlocale
    should always return a settings dump that is valid input to reset the
    locale.  If the substitution table is used first, then Chinese_Taiwan.950
    will be searched for as CHS_Taiwan.950, but the LCID actually corresponds
    to CHT_Taiwan.950.  This happened because NT5 changed the language name
    for Taiwan from 'Chinese(Taiwan)' to 'Chinese' (vs7#61130, ntbug#426382).

makefile, makefile.inc
crtw32\stdcpp\lsources, sources.nt
doc\copysrc.bat
doc\pjp\makefile, makefile.inc, pd-b
srcrel\pd-b

[delfiled:]
crtw32\stdcpp\delaop.cpp, delaop_s.cpp, delop.cpp, delop_s.cpp

    VS7#5435 - C++ Library should not define its own one-arg versions of
    operator delete/delete[] (the nothrow_t versions are OK).  This was a
    problem because the C++ Library version of delete called free, but in a
    debug build, it should call _free_dbg in case we're not deleting a
    _NORMAL_BLOCK.  Rather than change the definitions, it makes more sense
    just to get rid of them.

-----------------------------------------------------------------

Tue 09-Nov-99   (GautamB)

\crtw32\lowio\write.c

    VS7#52023 - Fixed the bug by replacing lseek_lk by lseeki64_lk.

-----------------------------------------------------------------

Tue 09-Nov-99   (PhilipLu)

makefile, makefile.inc
\crtw32\eh\stdexcpt.cpp
\crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop.cpp,
    delaop2.cpp [NEW], delaop2_s.cpp [NEW], delop.cpp, delop2.cpp [NEW],
    delop2_s.cpp [NEW], fiopen.cpp, instances.cpp [NEW], iomanip.cpp, ios.cpp,
    iosptrs.cpp, iostream.cpp, locale.cpp, locale0.cpp, lsources, newaop.cpp,
    newaop2.cpp, newop2.cpp, nomemory.cpp, raisehan.cpp, sources.nt,
    stdhndlr.cpp, stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp,
    wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp, wctrans.c, wctype.c,
    wiostrea.cpp, wlocale.cpp, xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c,
    xfcosh.c, xfdnorm.c, xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c,
    xlcosh.c, xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlpoly.c,
    xlsinh.c, xlvalues.c, xmath.h, xpoly.c, xsinh.c, xstod.c, xvalues.c
\crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmemory,
    xstddef, xstring, xtree, xutility, ymath.h, yvals.h
\doc\copysrc.bat
\doc\pjp\makefile, makefile.inc, pd-b
\libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmath.h,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
\srcrel\pd-b

[delfiled:]
crtw32\stdcpp\dlldef.cpp, limits.cpp

    Integrate the 990718 drop of the C++ Library from Dinkumware.

-----------------------------------------------------------------

Tue 09-Nov-99   (GautamB)

crtw32\h\cmsgs.h

    VS7#27275 - Fixed the message abort pops up.

-----------------------------------------------------------------

Tue 09-Nov-99   (PhilipLu)

crtw32\h\crtdbg.h
libw32\msvcrt.src, syscrt.src, syscrt64.src
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#16060 - Don't mark the debug operator new/new[] _CRTIMP in crtdbg.h,
    and add them to the .def files so they still get exported.  Makes it easier
    for users to intercept these (something VSEE does).

-----------------------------------------------------------------

Mon 08-Nov-99   (PhilipLu)

crtw32\h\ctype.h, stdio.h, tchar.h, wchar.h
crtw32\stdcpp\wctrans.c
crtw32\stdhpp\wctype.h
crtw32\stdhpp64\wctype.h
libw32\include\ctype.h, stdio.h, tchar.h, wchar.h, wctype.h
libw32\inc64\ctype.h, stdio.h, tchar.h, wchar.h, wctype.h

    Buildfix.  New frontend enabled wchar_t as a native type, exposing bug in
    definition of wctype_t.  Was a wchar_t, but wctype_t is really an unsigned
    short collection of bitflags.

fpw32\tran\i386\xmmi_fp_emul.c

    KNI exception handler fixes from Intel.

-----------------------------------------------------------------

Fri 05-Nov-99   (PhilipLu)

crtw32\stdhpp64\xiosbase, xlocmon
libw32\inc64\xiosbase, xlocmon

    Disable warning C4786 in a couple more files to fix IA64 build.

-----------------------------------------------------------------

Thu 04-Nov-99   (PhilipLu)

crtw32\h\string.h
libw32\include\string.h
libw32\inc64\string.h

    Back out checkin for VS7#33641 - breaking too much existing code, need to
    rethink if this will just be "won't fix".  Leaving in the change I made to
    wchar.h (moved the secondary definitions under the #ifndef _WSTRING_DEFINED)
    so it should at least be safer to #include string.h and wchar.h together.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    Work around useless warning C4507.  This warning is being removed, but it
    needs to be ignored until we drop a compiler without it.

-----------------------------------------------------------------

Wed 03-Nov-99   (GautamB)

crtw32\stdio\output.c

    VS7#5431    Deleted unnecessary #ifs for fixing the bug with L format
    specifier used with wprintf.

-----------------------------------------------------------------

Wed 03-Nov-99   (PhilipLu)

crtw32\h\string.h, wchar.h
libw32\include\string.h, wchar.h
libw32\inc64\string.h, wchar.h

    VS7#33641 - wcschr, wcsrchr, wcsstr, and wcspbrk must be defined in
    string.h the same as in wchar.h, with two versions for C++.

crtw32\h\crtdbg.h, math.h
libw32\include\crtdbg.h, math.h
libw32\inc64\crtdbg.h, math.h

    Place any C++ definitions within an extern "C++" block, so the header
    can be safely included inside an extern "C" block.  (Also for string.h
    and wchar.h)

crtw32\h\internal.h, mbstring.h, stdio.h, wchar.h
libw32\include\mbstring.h, stdio.h, wchar.h
libw32\inc64\mbstring.h, stdio.h, wchar.h

    Continuation of VS7#54572 - Add _M_CEE version of va_list definition to
    all other files defining it, not just stdarg.h.

crtw32\h\cruntime.h
crtw32\tools\win32\relinc.sed

    Get rid of unneeded _VA_LIST_T.

crtw32\startup\crt0.c, tidtable.c
crtw32\time\localtim.c

    Checkins from RLanser.  Fix some Win64 warnings in the _POSIX_ and
    _NTSUBSET_ builds.

-----------------------------------------------------------------

Mon 01-Nov-99   (PhilipLu)

crtw32\eh\frame.cpp, hooks.cpp, throw.cpp, validate.cpp
crtw32\eh\i386\trnsctrl.cpp
crtw32\h\ehassert.h, mtdll.h, trnsctrl.h

    VS7#5361 - A rethrow could lead to the thrown object being destroyed twice.
    The C++ EH code would destroy a exception object on exit from a catch block
    if the exit was not due to a rethrow, even if the exception object was from
    a rethrow inside a catch we were nested in.  The fix for this is x86-only,
    since it introduces a FRAMEINFO linked list to track currently available
    exception objects.  All RISC platforms already have a FRAMEINFO list, but
    use it in a different enough way that porting this fix requires more work.
    In particular, I'm popping items from the FRAMEINFO list inside the
    __finally handler in CallCatchBlock.  All RISC platforms are instead doing
    this in normal code in CatchIt, which I think is error-prone.

    Also improved the /DENABLE_EHTRACE EH tracing dump using indenting to
    indicate the depth on the callstack of the current function, and with more
    data about what's actually being thrown/caught/destroyed/filtered/....

-----------------------------------------------------------------

Fri 29-Oct-99   (PhilipLu)

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    VS7#22017 - add useful math constants a la UNIX's math.h, to make porting
    easier.

crtw32\misc\ia64\jmpuwind.s

    Bugfix for IA64 from TiborL.

crtw32\stdhpp64\utility
libw32\inc64\utility

    Disable warning C4786, which appeared building dlldef.cpp for IA64 with a
    new frontend.

-----------------------------------------------------------------

Thu 28-Oct-99   (Gautamb)

crtw32\h\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    VS7#5418 - fixed _tcsnextc() for handling MBCS.

-----------------------------------------------------------------

Thu 28-Oct-99   (PhilipLu)

crtw32\stdhpp\iosfwd
crtw32\stdhpp64\iosfwd
libw32\include\iosfwd
libw32\inc64\iosfwd

    On Win64, std::streamoff and std::streamsize should be __int64, not long
    and int.

crtw32\h\memory.h, string.h
crtw32\string\memccpy.c, memicmp.c
libw32\include\memory.h, string.h
libw32\inc64\memory.h, string.h

    VS7#22416 - _memccpy, _memicmp and __ascii_memicmp should take a size_t
    count, not an unsigned int.

crtw32\stdio\input.c

    VS7#10705 - scanf format %p was totally broken on Win64.

-----------------------------------------------------------------

Wed 27-Oct-99   (Gautamb)

crtw32\lowio\fstat.c
crtw32\lowio\fstat64.c
crtw32\dos\stat.c
crtw32\dos\stat64.c
crtw32\time\ftime.c
crtw32\time\ftime64.c
crtw32\time\utime.c
crtw32\time\utime64.c

    VS7#37766. Deleted the #include<dostypes.h> in all the file as it is of no
    use.

-----------------------------------------------------------------

Wed 27-Oct-99   (GautamB)
crtw32\lowio\open.c

    VS7#14742 Fixed the _sopen for opening the same by file in share as well as
    O_TEMPORARY mode.

-----------------------------------------------------------------

Wed 27-Oct-99   (PhilipLu)

crtw32\misc\ia64\jmpuwind.s

    New implementation of __jump_unwind for CC_P7_SOFT25 calling convention
    on IA64 from TiborL.

cleanbld.cmd, makefile, makefile.inc, makefile.sub
crtw32\mbstring\lsources
crtw32\stdcpp\lsources
crtw32\stdcpp64\lsources [NEW]

    More makefile tweaks:
    * Repair in-place build for IA64.
    * Fix dependency creation (nmake depend) for in-place build.
    * Enable building with browser info under BLD_BROWSE=1.
    * For x86 asm files whose source is not shipped, assemble files with full
    pathnames, so a developer build (DEVBUILD=1) or in-place build will allow
    debugger to automatically bring up asm source without an open file popup.
    * add DELOBJ option to cleanbld.cmd to delete all objects before building,
    but leaving all sources - avoids file copy/cleanse cycle.
    * Use undocumented -ignore link switch to silence linker warnings.  Switch
    is cleansed from user-rebuild makefiles.
    * Add "-N so" option to ias.exe invocation (equiv of -nologo).

crtw32\eh\frame.cpp, unhandld.cpp, validate.cpp
crtw32\eh\i386\ehcrt.mak [NEW]
crtw32\h\ehassert.h

    Add an x86 version of ehcrt.mak, used to build the C++ EH support into a
    stand-alone lib for test purposes.  Tweak some EH support code to fix
    problems in the stand-alone lib with ENABLE_EHTRACE on.  Also added an
    EHTRACE_FMT1 dump of the 'this' pointer to _DestructExceptionObject.

-----------------------------------------------------------------

Tue 26-Oct-99   (GautamB)

crtw32\h\ctype.h
crtw32\convert\isctype.c
libw32\include\ctype.h
libw32\inc64\ctype.h
libw32\msvcrt.src
libw32\syscrt.src
libw32\syscrt64.src

    VS7#5695 - Added additional function for debug version to check the
    validity of call for character checking functions

-----------------------------------------------------------------

Mon 25-Oct-99   (PhilipLu)

crtw32\h\setjmp.h, stdarg.h, varargs.h
crtw32\tools\win32\relinc.if
libw32\include\setjmp.h, stdarg.h, varargs.h
libw32\inc64\setjmp.h, stdarg.h, varargs.h
srcrel\msvc40.if

    VS7#54572 - Add _M_CEE support for varargs to stdarg.h, issue error if
    varargs.h or setjmp.h used with _M_CEE.
    VS7#51838 - Fix varargs.h for IA64.

-----------------------------------------------------------------

Mon 25-Oct-99   (PhilipLu)

makefile, makefile.inc, makefile.sub, mk.bat
crtw32\dllstuff\lsources
crtw32\eh\lsources
crtw32\heap\lsources
crtw32\iostream\lsources
crtw32\startup\lsources
crtw32\stdcpp\lsources [NEW]

    Repair in-place build to build\<arch> in the source tree, for development
    use.  Faster than copy-and-cleanse build used for released CRTs, and allows
    building isolated CRT versions (st, mt, dll, xst, xmt, xdll).  Also fixes
    to allow using CFLAGS or AFLAGS as nmake args to specify compiler/assembler
    flags for special builds.

crtw32\eh\frame.cpp, hooks.cpp, validate.cpp
crtw32\eh\i386\trnsctrl.cpp
crtw32\h\ehassert.h

    Implement EH tracing, debug output recording path through EH support
    routines.  Need to compile special CRT with /DENABLE_EHTRACE to turn this
    on.  See EHTRACE_* macros in ehassert.h.

-----------------------------------------------------------------

Fri 22-Oct-99   (PhilipLu)

crtw32\eh\frame.cpp, rtti.cpp
crtw32\eh\ia64\ehstate.cpp, trnsctrl.cpp

    IA64 exception handling changes from TiborL.

-----------------------------------------------------------------

Fri 22-Oct-99   (PhilipLu)

makefile.inc
crtw32\heap\delete.cpp, delete2.cpp [NEW], heap.mkf, lsources
crtw32\heap\dll\sources
crtw32\heap\mt\sources
crtw32\heap\st\sources
crtw32\misc\dbgdel.cpp
doc\copysrc.bat
srcrel\pd-b

    VS7#53440 - operator delete and operator delete[] must be implemented in
    separate files, to avoid multiple definition link errors if user only
    supplies definition for one of the two.  Also, only need one definition
    of delete[], in delete2.cpp, so get rid of the debug definition in
    dbgdel.cpp.

-----------------------------------------------------------------

THU 21-Oct-99   <rlanser>

crtw32\eh\sources.nt

    Binl is a C++ flag for the libcntpr build.  Changed for IA64.

-----------------------------------------------------------------

THU 21-Oct-99   <GautamB>

crtw32\misc\assert.c

    VS7#4731 Fixed the way the output of the filenames that were too long
    was displayed.

-----------------------------------------------------------------

Mon 18-Oct-99   (PhilipLu)

makefile.inc
crtw32\h\internal.h, rtcpriv.h
crtw32\lowio\osfinfo.c
crtw32\misc\initcrit.c [NEW], lsources
crtw32\misc\dll\sources
crtw32\misc\mt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
crtw32\startup\mlock.c
crtw32\stdio\stream.c
doc\copysrc.bat
srcrel\pd-b

    VS7#49164, NtBug#413400 - Where available (NT4SP3 or better), set a
    spin count on critical sections when they are initialized.  Also detect
    exceptions raised by InitializeCriticalSection.

fpw32\tran\i386\filter.c

    VS7#5422 - Push/pop FP register save area when fixing up an FP exception,
    instead of just incrementing/decrementing the Top counter.

crtw32\eh\frame.cpp

    VS7#5419 - During unwind, set EH state before entering each unwind funclet,
    instead of once after all funclets called, to better handle case of SEH
    during unwind.

srcrel\makefile
srcrel\mkclnmkf.c

    Add -noclean option to mkclnmkf, triggered by set NOCLEAN=1, to copy all
    source files to build tree instead of cleansing them.  Preparation for
    getting -DDEBUG working again.

-----------------------------------------------------------------

Tue 12-Oct-99   (PhilipLu)

fpw32\tran\i386\filter.c

    VS7#6472 - Prevent _fpieee_flt from overwriting exception handling stack
    frame when an FP instruction exception was writing to a no-longer-existing
    stack local.

-----------------------------------------------------------------

Mon 11-Oct-99   (KFrei)

crtw32\rtc\init.cpp

    VS7#48979 - fix bug in removing image from list of active RTC images during
    shutdown.

-----------------------------------------------------------------

Mon 11-Oct-99   (PhilipLu)

crtw32\heap\sbheap.c
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#49546 - Win64 build must define stubs for _{get,set}_sbh_threshold,
    even though small block heap is disabled there.

-----------------------------------------------------------------

Mon 11-Oct-99   (PhilipLu)

fpw32\tran\ia64\frnd.s

    VS7#15807 - Port new implementation of _frnd from CRT 64 sourcesafe tree.
    Old version failed whenever abs(arg) >= 2^63.

crtw32\misc\ia64\chandler.c, cinitone.s, jmpuwind.s, longjmp.s, memcpys.s,
    memsets.s, miscs.s, setjmp.s, setjmpex.s
crtw32\startup\ia64\chkstk.s, fp8.c
fpw32\tran\ia64\asincosf.c, atan2f.c, atanf.c, ceilf.c, em_types.h, emfloat.s,
    expf.c, fabsf.c, filter.c, floorf.c, fmodf.c, fp80.s, fp80c.c, fpctrl.c,
    fpieee_flt.h, frnd.s, huge.s, ieee.c, log10f.c, logf.c, powf.c, sincosf.c,
    sincoshf.c, sqrtf.c, tanf.c, tanhf.c

    Intel has given permission to check the IA64-specific routines into the
    main CRT tree, so these files have been addfiled from the SLM project at
    \\lang3\p7!crt_ia64_asm.

-----------------------------------------------------------------

Thu 07-Oct-99   (PhilipLu)

crtw32\eh\ia64\trnsctrl.cpp

    Port SHanson change from CRT 64 sourcesafe tree.  utc_p7#1126: sysmode
    test eh\extest fails /Ox.

-----------------------------------------------------------------

Thu 07-Oct-99   (PhilipLu)

crtw32\h\crtdbg.h, direct.h, heap.h, internal.h, io.h, malloc.h, mbstring.h,
    memory.h, mtdll.h, new.h, nlsint.h, process.h, search.h, stdarg.h,
    stddef.h, stdexcpt.h, stdio.h, stdlib.h, string.h, time.h, wchar.h
fpw32\include\trans.h
libw32\include\crtdbg.h, direct.h, io.h, malloc.h, mbstring.h, memory.h, new.h,
    process.h, search.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h,
    string.h, time.h, wchar.h
libw32\inc64\crtdbg.h, direct.h, io.h, malloc.h, mbstring.h, memory.h, new.h,
    process.h, search.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h,
    string.h, time.h, wchar.h
srcrel\msvc40.if

    VS7#29043 - Update CRTs to support /Wp64 by adding __w64 modifier as
    appropriate to typedefs of size_t, ptrdiff_t, time_t, intptr_t, uintptr_t.

crtw32\misc\dbgheap.c

    VS7#5677 - Debug heap output needs to use %p when outputting pointers, %Iu
    when outputting size_t data.

crtw32\stdio\fdopen.c, fopen.c, tmpfile.c

    VS7#16832 - Set errno to EMFILE when fopen and related functions run out
    of streams.

fpw32\conv\cfin.c, fltinf.c

    VS7#5672 - Prevent underflow exception during strtod by copying bytes
    instead of a double (which might use FP instrs) in _fltin.

-----------------------------------------------------------------

Thu 30-Sep-99   (PhilipLu)

crtw32\time\tzset.c
    Fix double-free bug in tzset() when freeing lastTZ (ntbug#390281).

crtw32\heap\heapinit.c
    Change handling of env var __MSCVRT_HEAP_SELECTED in heap init - don't
    use any routine that requires the heap to be available (vs7#44259).  Also,
    check the env var before checking for NT5.0 or better, so we can change
    heap selection even on Win2000 (only here, not in the CRT60a tree used
    to build the Win2K system CRT).

-----------------------------------------------------------------

Wed 29-Sep-99   (PhilipLu)

Port recent fixes from CRT 64 SourceSafe tree:

crtw32\makefile.sub
    Build IA64 with cl flags /QIA64_A0 and /Zx (release only), and ias flag
    -X explicit.

crtw32\misc\ia64\setjmp.s
    All branch registers weren't being saved.

crtw32\misc\ia64\longjmp.s
    Fix RSE hazard.

-----------------------------------------------------------------

Thu 23-Sep-99   (PhilipLu)

crtw32\stdhpp64\xlocnum
libw32\inc64\xlocnum

    Fix previous checkin - use %Id, not %Ld, to sprintf an __int64.

-----------------------------------------------------------------

Fri 17-Sep-99   (PhilipLu)

crtw32\stdhpp64\istream, ostream, xlocnum
libw32\inc64\istream, ostream, xlocnum

    VS7#5291 - backport __int64 support for iostream << and >> to the old
    64-bit C++ headers.

crtw32\eh\typname.cpp
crtw32\stdhpp64\xlocale
libw32\inc64\xlocale

    Add typecasts to fix 64-bit warnings with newest IA64 compiler.

-----------------------------------------------------------------

Thu 02-Sep-99   (PhilipLu)

langapi\undname\undname.cxx, undname.inl

    Attempt to fix VS7#23225 - reports that undecorator suballocator in
    HeapManager::getMemory is causing unaligned allocations.  Make sure that
    Win32 and Win64 CRT versions of the undecorator use 8 byte alignment
    (should have been happening already anyway, but make more explicit), and
    that an attempt to suballocate 0 bytes will not trigger unaligned
    allocations (but I can't see anywhere that would try to allocate 0 bytes).

langapi\undname\stubmain.cxx, testundn.cxx

    Fix build of stand-along undecorator and undecorator verifier test app
    using the CRT __unDName.

makefile
srcrel\msvc40.if

    Define _SYSCRT when doing a system CRT build.

crtw32\dllstuff\crtlib.c

    Noticed by RichardS - CRT DLL issues a popup and refuses to run if started
    on Win32s.  The popup references "MSVCRT.DLL".  Change to do this for
    system CRT only, since the name for the VC CRT DLL is different and there's
    no good reason to keep checking for Win32s there.

-----------------------------------------------------------------

Mon 30-Aug-99   (PhilipLu)

makefile, makefile.inc
crtw32\dllstuff\lsources, wdll_av.c [NEW]
crtw32\dllstuff\dlllib\sources
doc\copysrc.bat
libw32\makefile
srcrel\pd-b

    VS7#5425 - ___wsetargv was missing from msvcrt[d].lib, so linking with
    wsetargv.obj when using the CRT DLL gave a link error.  Add new source
    file wdll_av.c corresponding to the ANSI version dll_argv.c.

-----------------------------------------------------------------

Mon 30-Aug-99   (PhilipLu)

Minor issues uncovered during Y2K code review

crtw32\time\ctime.c, ctime64.c, difftime.c, systime.c

    Fix function header comments.

crtw32\time\mktime.c

    Replace 'long' with 'time_t'.

crtw32\time\strftime.c

    Don't overflow buffer on finding mbcs leadbyte in store_winword.

crtw32\h\crtdbg.h
libw32\inc64\crtdbg.h
libw32\include\crtdbg.h

    Remove unprintable character from comment (confused 'findstr /p').

-----------------------------------------------------------------

Thu 12-Aug-99   (v-JohnMo)

fpw32\tran\lsources,sources.nt

    Alpha/Alpha64: build using correct FP support flags

fpw32\tran\alpha\dpml_exc.c

    Alpha/Alpha64: remove unneeded declaration

fpw32\tran\alpha\getsetrg.c

    Alpha/Alpha64: supply default return value to avoid warning

libw32\msvcrt.src

    Alpha/Alpha64: export new UTC compiler helper functions

-----------------------------------------------------------------

Wed 11-Aug-99   (PhilipLu for v-ABorni)

makefile.inc
crtw32\helper\lsources, sources.nt
crtw32\helper\alpha\memcmp_.s [NEW], otsnote.txt
srcrel\objects.mkf, pd-b

    Alpha/Alpha64: add new memcmp intrinsic.

-----------------------------------------------------------------

Wed 11-Aug-99   (PhilipLu for RLanser, SHanson)

Porting recent checkins to the CRT64 sourcesafe tree

makefile.sub
crtw32\misc\ia64\setjmp.s

    Hazard fixes.  Requires new Intel assembler (1.7) that checks for hazards.

crtw32\misc\ia64\miscs.s

    Remove InterlockedExchangeAdd() since it's an intrinsic.

crtw32\eh\ehvecctr.cpp, ehveccvb.cpp, ehvecdtr.cpp, frame.cpp
crtw32\eh\ia64\trnsctrl.cpp

    IA64 EH image relative changes (SW 2.5 convention) under
    #if defined(CC_P7_SOFT25).

-----------------------------------------------------------------

Tue 10-Aug-99   (PhilipLu for RichardS)

crtw32\h\sect_attribs.h
crtw32\rtc\initsect.cpp

    Use external symbols for RTC initializer/terminator table boundaries for
    BBT support.

-----------------------------------------------------------------

Mon 09-Aug-99   (PhilipLu)

makefile
libw32\msvcirt.rc, msvcirt.src, msvcrt.src, syscrt.rc [NEW], syscrt.src [NEW],
    syscrt64.rc [NEW], syscrt64.src [NEW], sysirt.rc [NEW], sysirt.src [NEW],
    sysirt64.rc [NEW], sysirt64.src [NEW], sysprt.rc [NEW], sysprt.src [NEW],
    sysprt64.rc [NEW], sysprt64.src [NEW]
srcrel\external.mkf, makefile, mkclnmkf.c, objects.mkf, pd-b, relmkf.sed

    Complete configuration of build for system CRT.  Building with BLD_SYSCRT=1
    will build the system CRT instead of the VC crt.  Building with LLP64=1
    implies building a system CRT, but for Win64 instead of Win32.  Addfiled
    new .rc/.src files specific to Win32-system and Win64-system CRTs.

-----------------------------------------------------------------

Wed 04-Aug-99   (PhilipLu)

makefile
libw32\msvcirt.rc, msvcirt.src, msvcprt.rc [NEW], msvcprt.src, msvcrt.rc,
    msvcrt.src
srcrel\_sample_.rc, external.mkf, mkclnmkf.c, objects.mkf, pd-b, relmkf.sed

    Rename CRT: msvcrt.dll   -> msvcr70.dll
                msvcrtd.dll  -> msvcr70d.dll
                msvcp61.dll  -> msvcp70.dll
                msvcp61d.dll -> msvcp70d.dll
                msvcirt.dll  -> msvci70.dll
                msvcirtd.dll -> msvci70d.dll
    Also began configuration for build with BLD_SYSCRT=1 to build the system
    CRT instead of the VC crt.  This is not complete yet.

[delfiled:]
libw32\msvcp42.rc, msvcp50.rc, msvcp60.rc, msvcp61.rc

    Replaced by msvcprt.rc

crtw32\misc\setenv.c

    Fix use-after-free bug in __crtsetenv() when removing an existing
    enviroment variable.

crtw32\stdio\vsprintf.c, vswprint.c

    Minor function header fix

-----------------------------------------------------------------

Wed 04-Aug-99   (KFrei)

crtw32\h\rtcsup.h rtcpriv.h
crtw32\rtc\bintree.cpp chsyheap.cpp memory.cpp shadow.cpp init.cpp
crtw32\misc\i386\chkesp.c
crtw32\misc\alpha\chkesp.c
    Added _RTC_ to all external objects.  Added comments to keep versioning
    issues in your face.  Fixed some seriously leaking handles in the init code

-----------------------------------------------------------------

Fri 09-Jul-99   (GregF)

crtw32\h\winheap.h
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
    malloc.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c
    Removed VC 5.0 small-block heap, and the selection logic to enable it, from
    the static libraries.  This was intended only for the DLL which was not
    affected by this change.

-----------------------------------------------------------------

Wed 07-Jul-99   (GregF)

crtw32\dllstfull\crtlib.c
    Don't clean up system resources if the process is known to be terminating.
    This fixes VS7 #16829

-----------------------------------------------------------------

Wed 16-Jun-99   (PhilipLu)

makefile
makefile.sub

    Partially back out checkin of 8-Jun-99.  Release build no longer built by
    default with debug info.  Necessary until I can get the build lab to drop
    the associated PDBs along with the libs and dlls.  Debug info for release
    build can be selected by setting BLD_REL_DBINFO in the environment.

-----------------------------------------------------------------

Mon 14-Jun-99   (PhilipLu)

crtw32\tools\win32\relinc.if
libw32\include\rtcapi.h
libw32\inc64\rtcapi.h

    Cleanse #ifdef _RTC from header rtcapi.h, with _RTC on (vs7#22400).

makefile
makefile.sub
srcrel\pd-b

    Fix use of whackline.exe in Alpha build (vs7#23911).

-----------------------------------------------------------------

Thu 10-Jun-99   (GregF)

crtw32\time\tzset.c
    Fixed handling of non-existent or empty TZ environment variable.  This
    fixes VS7 #16203.

-----------------------------------------------------------------

Tue 08-Jun-99   (PhilipLu)

makefile
makefile.sub
libw32\tools\alpha\whackline.exe [NEW]

    BBT/Vulcan support - build debug and release targets with full debug info,
    running whackline over objs for which we don't ship source.  This gets rid
    of the need to have a separate bbt target, but the bbt target remains until
    the build lab switches to using the release target instead.  Also, if built
    with DEVBUILD=1 in the environment, whackline won't be run, so full line
    number info is available for all sources, allowing developer builds to step
    into these routines.

-----------------------------------------------------------------

Mon 07-Jun-99   (PhilipLu)

crtw32\h\float.h
crtw32\startup\ia64\fp8.c
libw32\include\float.h
libw32\inc64\float.h

    For IA64, default to _PC_64 bit mode, not _PC_53.

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    modff and hypotf are intrinsics for IA64 (vs7#2515).

crtw32\h\process.h
libw32\include\process.h
libw32\inc64\process.h

    The oldnames (!__STDC__) versions of the exec/spawn APIs need to use
    intptr_t, not int, for the handle arg/return vals, same as the real APIs.

[delfile:]
libw32\tools\ia64\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe

    These are actually x86 executables.  The x86-based cross-build for IA64
    now pulls these tools from libw32\tools\i386, as it should, so these are
    no longer needed.  Once we have native IA64 builds, the IA64 executables
    will go here.

srcrel\pd-b

    Remove libw32\tools\{ia64,ppc,mips}\*.exe.  The ppc and mips tools were
    delfiled a while ago by Rich Shupak.

srcrel\makefile

    Fix typo for Alpha64 build ("!else if" should be "!elseif")

-----------------------------------------------------------------

Thu 03-Jun-99   (PhilipLu)

makefile

    Fix oldnames.lib build for IA64.

crtw32\h\float.h
libw32\inc64\float.h
libw32\include\float.h

    Define _CW_DEFAULT for IA64 (vs7#22100).

libw32\inc64\rtcapi.h
libw32\inc64\typeinfo.h

    Pick up Win64 cleansed headers from recent checkins.

-----------------------------------------------------------------

Wed 02-Jun-99   (PhilipLu)

crtw32\convert\mbstowcs.c, mbtowc.c, wcstombs.c
fpw32\tran\alpha\filter.c

    Warning fixes from v-kimpe for _NTSUBSET_ and Alpha build.

-----------------------------------------------------------------

Wed 02-Jun-99   (GregF)

crtw32\h\internal.h
crtw32\misc\putenv.c, setenv.c

    Fixed several leaks which manifested in _putenv().  A copy of the arg
    string is made in _putenv first thing, but it was not subsequently freed
    in some cases when it should have been.  This fixes VS7 #18971.

-----------------------------------------------------------------

Tue 01-Jun-99   (PhilipLu)

makefile.inc
crtw32\eh\stdexcpt.cpp
crtw32\h\internal.h, typeinfo.h
crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop.cpp, delop.cpp,
    dlldef.cpp, fiopen.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop.cpp, newop2.cpp,
    nomemory.cpp, raisehan.cpp [NEW], sources.nt, stdhndlr.cpp [NEW],
    stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp,
    xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
    xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c,
    xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c,
    xlvalues.c, xmath.h, xpoly.c, xsinh.c, xstod.c, xstrcoll.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric, ostream,
    queue, set, sstream, stack, stdexcept, streambuf, string, strstream,
    utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale, xlocinfo,
    xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmemory, xstddef, xstring,
    xtree, xutility, ymath.h, yvals.h
doc\copysrc.bat
doc\pjp\makefile.inc, pd-b
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric, ostream,
    queue, set, sstream, stack, stdexcept, streambuf, string, strstream,
    typeinfo.h, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmath.h, xmemory,
    xstddef, xstring, xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Integrate 05/03/99 drop of STL from Plauger.

-----------------------------------------------------------------

Wed 26-May-99   (KFrei)

crtw32\h\rtcapi.h, rtcpriv.h, rtcsup.h
crtw32\heap\calloc.c, delete.cpp, expand.c, free.c, malloc.c, new.cpp, new2.cpp,
    realloc.c
crtw32\misc\dbgdel.cpp, dbgheap.c, dbgnew.cpp, i386\chkesp.c
crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, error.cpp,
    fileio.cpp, init.cpp, memory.cpp, pdblkup.cpp, shadow.cpp, userapi.cpp
crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp,
    newop2.cpp
crtw32\tools\win32\relinc.if
libw32\include\rtcapi.h
srcrel\msvc40.if

    Remove /RTCl and /RTCv, add /RTCu.  Put shadow mem stuff under _RTC_ADVMEM,
    which is disabled.  Clean up names to always use _RTC_ prefix.  Simplify
    _RTC_Allocate_hook.

-----------------------------------------------------------------

Fri 21-May-99   (PhilipLu)

makefile

    Link IA64 xdll targets /debugtype:both.  Also add -osversion link switches
    used for other Win64 dll targets to the zdll (BBT) target too.

-----------------------------------------------------------------

Thu 20-May-99   (PhilipLu)

crtw32\eh\ehveccrt.cpp, ehveccvb.cpp, ehvecdtr.cpp

    Turn off __thiscall for IA64.

makefile
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

    Build msvcp60.dll for Win64, not msvcp61.dll.

-----------------------------------------------------------------

Thu 20-May-99   (PhilipLu)

[addfiled:]
crtw32\tools\win32\relinc64.cmd
libw32\inc64\algorithm, assert.h, bitset, cassert, cctype, cerrno, cfloat,
    ciso646, climits, clocale, cmath, complex, conio.h, crtdbg.h, csetjmp,
    csignal, cstdarg, cstddef, cstdio, cstdlib, cstring, ctime, ctype.h, cwchar,
    cwctype, deque, direct.h, dos.h, eh.h, errno.h, exception, excpt.h, fcntl.h,
    float.h, fpieee.h, fstream, fstream.h, functional, io.h, iomanip, iomanip.h,
    ios, ios.h, iosfwd, iostream, iostream.h, iso646.h, istream, istream.h,
    iterator, limits, limits.h, list, locale, locale.h, malloc.h, map, math.h,
    mbctype.h, mbstring.h, memory, memory.h, minmax.h, new, new.h, numeric,
    ostream, ostream.h, process.h, queue, rtcapi.h, search.h, set, setjmp.h,
    setjmpex.h, share.h, signal.h, sstream, stack, stdarg.h, stddef.h,
    stdexcept, stdexcpt.h, stdio.h, stdiostr.h, stdlib.h, stl.h, streamb.h,
    streambuf, string, string.h, strstrea.h, strstream, tchar.h, time.h,
    typeinfo, typeinfo.h, use_ansi.h, useoldio.h, utility, valarray, varargs.h,
    vector, wchar.h, wctype.h, xcomplex, xiosbase, xlocale, xlocinfo,
    xlocinfo.h, xlocmon, xlocnum, xloctime, xmath.h, xmemory, xstddef, xstring,
    xtree, xutility, ymath.h, yvals.h
libw32\inc64\sys\locking.h, stat.h, timeb.h, types.h, utime.h

    Cleansed headers for Win64 build.  This should be temporary - delete once
    NT5 ships and Win32 and Win64 builds start using same STL headers.

srcrel\makefile, pd-b

    Handle new libw32\inc64 files for Win64 build.

-----------------------------------------------------------------

Thu 20-May-99   (PhilipLu)

crtw32\misc\dbgheap.c
    Don't DebugBreak if heap allocation counter wraps around back to -1
    (vs7#5363).

-----------------------------------------------------------------

Wed 19-May-99   (PhilipLu)

[addfiled:]
crtw32\stdcpp64\_tolower.c, _toupper.c, delop.cpp, delop_s.cpp, dirs,
    dlldef.cpp, fiopen.cpp, iomanip.cpp, ios.cpp, iostream.cpp, locale.cpp,
    locale0.cpp, newop.cpp, newop2.cpp, newop2_s.cpp, newop_s.cpp,
    nomemory.cpp, sources.nt, string.cpp, strstrea.cpp, uncaught.cpp,
    wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c, xdnorm.c,
    xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c, xfdtest.c,
    xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c, xldscale.c, xldtest.c,
    xlexp.c, xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c, xmath.h,
    xmbtowc.c, xpoly.c, xsinh.c, xstod.c, xstrcoll.c, xstrxfrm.c, xvalues.c,
    xwcscoll.c, xwcsxfrm.c, xwctomb.c
crtw32\stdhpp64\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, iomanip, ios, iosfwd, iostream, iso646.h, istream,
    iterator, limits, list, locale, map, memory, new, numeric, ostream, queue,
    set, sstream, stack, stdexcept, stl.h, streambuf, string, strstream,
    typeinfo, use_ansi.h, utility, valarray, vector, wctype.h, xcomplex,
    xiosbase, xlocale, xlocinfo, xlocinfo.h, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h

    Add in old STL files from \\lang5\rtl CRT 64 sourcesafe tree.  These files
    are used to build the Win64 version of STL for as long as NT keeps using
    the old STL headers for their Win32/Win64 builds.  These files should go
    away once NT5 ships and NT updates to current STL headers.

makefile, makefile.inc, makefile.sub
crtw32\dirs
srcrel\makefile, mkclnmkf.c, pd-b

    For Win64, build the STL components with the stdcpp64\stdhpp64 sources, not
    the stdcpp\stdhpp ones used for Win32 builds.

-----------------------------------------------------------------

Wed 19-May-99   (PhilipLu)

srcrel\external.mkf, makefile
    When building a 64-bit crt on a 32-bit system, use the V6TOOLS compiler to
    build the 32-bit hosted mkclnmkf.exe and striplin.exe.  Also, build the
    proper cross-hosted 64-bit targetted version of mkclnmkf.exe.

-----------------------------------------------------------------

Mon 17-May-99   (PhilipLu)

crtw32\convert\isctype.c, mblen.c, mbstowcs.c, mbtowc.c, tolower.c, toupper.c,
    wcstombs.c, wctomb.c
crtw32\dllstuff\atonexit.c, cinitexe.c, crtdll.c, crtexe.c
crtw32\dos\access.c, chdir.c, chmod.c, dosmap.c, drive.c, fullpath.c, getcwd.c,
    getpid.c, mkdir.c, rename.c, rmdir.c, stat.c, unlink.c
crtw32\eh\ehvecctr.cpp, ehveccvb.cpp, ehvecdtr.cpp, frame.cpp, hooks.cpp,
    oldexcpt.h, rtti.cpp, throw.cpp, unhandld.cpp, user.cpp, validate.cpp
crtw32\h\assert.h, cmsgs.h, conio.h, crtdbg.h, cruntime.h, ctype.h, direct.h,
    dos.h, dostypes.h, eh.h, ehassert.h, ehhooks.h, ehstate.h, errno.h,
    excpt.h, fcntl.h, float.h, fltintrn.h, fpieee.h, fstream.h, heap.h,
    internal.h, io.h, iomanip.h, ios.h, iostream.h, istream.h, limits.h,
    locale.h, malloc.h, math.h, mbctype.h, mbstring.h, memory.h, msdos.h,
    mtdll.h, new.h, oscalls.h, ostream.h, process.h, rtcsup.h, search.h,
    setjmp.h, setjmpex.h, share.h, signal.h, stdarg.h, stddef.h, stdexcpt.h,
    stdio.h, stdiostr.h, stdlib.h, streamb.h, string.h, strstrea.h, tchar.h,
    time.h, trnsctrl.h, typeinfo.h, varargs.h, wchar.h
crtw32\h\sys\locking.h, stat.h, timeb.h, types.h, utime.h
crtw32\heap\free.c, heapdump.c, heapgrow.c, heapinit.c, heapmin.c, realloc.c
crtw32\iostream\filebuf.cpp, stdiostr.cpp
crtw32\lowio\chsize.c, close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
    fstat.c, isatty.c, locking.c, lseek.c, mktemp.c, open.c, osfinfo.c, read.c,
    setmode.c, tell.c, write.c
crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c, ismblwr.c,
    ismbprn.c, ismbpunc.c, ismbspc.c, ismbupr.c, mbctype.c, mbscoll.c,
    mbsicmp.c, mbsicoll.c, mbslwr.c, mbsnbcol.c, mbsnbico.c, mbsncoll.c,
    mbsnicol.c, mbsupr.c, mbtolwr.c, mbtoupr.c
crtw32\misc\abs.c, assert.c, crtmbox.c, dbgheap.c, dbgrpt.c, getenv.c,
    getpath.c, lconv.c, onexit.c, perror.c, putenv.c, searchen.c, syserr.c
crtw32\startup\crt0.c, crt0dat.c, crt0msg.c, dllcrt0.c, dllmain.c, stdargv.c
crtw32\stdcpp\_tolower.c, _toupper.c, xmbtowc.c, xstrcoll.c, xstrxfrm.c,
    xwctomb.c
crtw32\stdhpp\exception, typeinfo, wctype.h
crtw32\stdio\_filbuf.c, _file.c, _flsbuf.c, _freebuf.c, _getbuf.c, _open.c,
    _sftbuf.c, clearerr.c, closeall.c, fclose.c, fdopen.c, fflush.c, fgetpos.c,
    fread.c, fseek.c, fsetpos.c, ftell.c, fwrite.c, input.c, maketabc.c,
    output.c, rewind.c, rmtmp.c, setvbuf.c, stream.c, tempnam.c, test_out.c,
    tmpfile.c
crtw32\string\memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c,
    strncoll.c, strnicmp.c, strnicol.c, strset.c, strupr.c, strxfrm.c
crtw32\time\clock.c, dtoxtime.c, ftime.c, localtim.c, mktime.c, mktime64.c,
    strdate.c, strftime.c, strtime.c, time.c, tzset.c, utime.c
doc\pjp\mkclnmkf.c
fpw32\include\cv.h, trans.h
fpw32\tran\fabs.c, sincosh.c, tanh.c
libw32\include\assert.h, conio.h, crtdbg.h, ctype.h, direct.h, dos.h, eh.h,
    errno.h, exception, excpt.h, fcntl.h, float.h, fpieee.h, fstream.h, io.h,
    iomanip.h, ios.h, iostream.h, istream.h, limits.h, locale.h, malloc.h,
    math.h, mbctype.h, mbstring.h, memory.h, new.h, ostream.h, process.h,
    search.h, setjmp.h, setjmpex.h, share.h, signal.h, stdarg.h, stddef.h,
    stdexcpt.h, stdio.h, stdiostr.h, stdlib.h, streamb.h, string.h, strstrea.h,
    tchar.h, time.h, typeinfo, typeinfo.h, varargs.h, wchar.h, wctype.h
libw32\include\sys\locking.h, stat.h, timeb.h, types.h, utime.h
srcrel\msvc40.if

    Removing Macintosh support, stage 2: Remove all Mac support from source
    files.  Also remove most _WIN32 #ifs, since _WIN32 is always on now and
    some Mac code was actually under #ifndef _WIN32 instead of #ifdef _MAC.

-----------------------------------------------------------------

Mon 17-May-99   (PhilipLu)

clean.cmd, makefile, makefile.inc, makefile.sub
crtw32\crt.mkf, crt32.nt
crtw32\convert\convert.mkf, lsources
crtw32\dllstuff\lsources
crtw32\dos\dos.mkf, lsources
crtw32\eh\eh.mkf, lsources
crtw32\exec\exec.mkf, lsources
crtw32\heap\heap.mkf, lsources
crtw32\helper\lsources
crtw32\iostream\iostream.mkf, lsources
crtw32\linkopts\lsources
crtw32\lowio\lowio.mkf, lsources
crtw32\mbstring\lsources, mbstring.mkf
crtw32\misc\lsources, misc.mkf
crtw32\startup\lsources, startup.mkf
crtw32\stdio\lsources, stdio.mkf
crtw32\string\lsources, string.mkf
crtw32\time\lsources, time.mkf
doc\copycrt.bat, copysrc.bat
doc\pjp\makefile.srcrel
fpw32\fp.mkf, fp32.nt, infer.mkf
fpw32\conv\conv.mkf, lsources
fpw32\tran\lsources, tran.mkf
srcrel\bldnt.cmd, bldwin95.bat, external.mkf, makefile, mkclnmkf.c,
    mkfiles.sed, objects.mkf, pd-b

    Removing Macintosh support, stage 1: Remove all Mac support from makefiles
    and scripts and delfile Mac-only files.

[delfiled:]
mkmac.bat
crtw32\mac.mkf, makemac.cmd, mkm68k.bat, mkpmac.bat
crtw32\convert\mac\atold.c, strtold.c
crtw32\dllstuff\macdll\makedll.cmd, makedlld.cmd, msvcrt.def, msvcrt.r,
    msvcrtd.def
crtw32\dos\mac\remove.c
crtw32\eh\mac\m68k\frame.cpp, trnsctrl.a
crtw32\eh\mac\pmac\ehstate.cpp, exdsptch.cpp, handlers.asm, lowhelpr.asm,
    ntstatus.h, ppcinst.h, trnsctrl.cpp, unwind.asm, vunwind.cpp
crtw32\exec\mac\spawn.c
crtw32\h\plstring.h
crtw32\h\mac\mpw.h, rtlib.h
crtw32\h\mac\m68k\assert.a, crtequ.a, sysequ.a, traps.a
crtw32\heap\mac\heapaslm.c
crtw32\helper\mac\pmac\i64div.asm, i64rem.asm, i64rsh.asm, rfpr.asm, rgpr.asm,
    sfpr.asm, sgpr.asm, u64div.asm, u64rem.asm
crtw32\lowio\mac\_endlow.c, dupx.c
crtw32\misc\mac\cinitenv.c, cinitone.c, gestalt.c, id2path.c, signal.c,
    xcptfltr.c
crtw32\misc\mac\m68k\libhlprs.a, rts.a, setjmp.a, stkavl.a
crtw32\misc\mac\pmac\exsup.asm, setjmp.asm, stkavl.c
crtw32\startup\mac\amsg.c, exit.c, init.c, libcinfo.c, runtime.c
crtw32\startup\mac\m68k\applyfix.a, astart.a, chkstk.a, fixupseg.a, getstack.a,
    loaddata.a, loadseg.a, qd.a, quit.a, shellrtn.a, stdalone.a, unloadsn.a
crtw32\startup\mac\pmac\astart.c, chkstk.asm, crtdllex.c, crtexit.c, dllexit.c,
    qd.c, shellrtn.c, sp.c, testexit.c
crtw32\stdio\mac\initstd.c
crtw32\string\special.mak
crtw32\string\mac\c2pstr.c, p2cstr.c, plstrcat.c, plstrchr.c, plstrcmp.c,
    plstrlen.c, plstrnca.c, plstrncm.c, plstrncp.c, plstrpbr.c, plstrrch.c,
    plstrspn.c, plstrstr.c
crtw32\time\mac\cinitclk.c
crtw32\tools\mac\addseg.c, addseg.exe, adep.bat, adep.sed, asm68.exe, cdep.bat,
    cdep.sed, cp.exe, gawk.exe, getver.exe, ifstrip.exe, make.exe, ml.err,
    ml.exe, nmake.exe, relinc.cmd, relinc.if, relinc.sed, sort.exe, uniq.exe
fpw32\m68k.mkf, makemac.cmd, mkm68k.bat, mkpmac.bat, pmac.mkf
fpw32\conv\mac\m68k\_xtos.c, _xtou.c, cfinl.c, cfout.c, clfout.c, cvt.c,
    decode.a, fpdata.c, fpinit.c, lddata.c, ldinit.c, libcinfo.c
fpw32\conv\mac\pmac\dtoi.asm, dtoi64.asm, dtou.asm, dtou64.asm, fpinit.c,
    ftou.asm, i64tod.asm, itod.asm, itof.asm, u64tod.asm, utod.asm, utof.asm
fpw32\include\mac\transl.h
fpw32\include\mac\m68k\sane.a, trans.a, traps.a
fpw32\tran\special.mak
fpw32\tran\mac\m68k\_fpxpt.c, asincosl.c, atan2.c, atan2l.c, bessell.c, ceil.a,
    ceill.a, error.a, exphlp.c, exphlpl.c, fabs.a, fabsl.a, floor.a, floorl.a,
    fmod.a, fmodl.a, fpctrl.a, frexpl.c, frnd.a, frndl.a, fsqrt.c, fsqrtl.c,
    huge.a, hypotl.c, iceil.a, ieee.c, ifloor.a, ifmod.a, isqrt.a, itran.a,
    itrig.a, itriga.a, itrigh.a, ldexpl.c, matherr.c, matherrl.c, modfl.c,
    sincoshl.c, sqrt.a, sqrtl.a, tanhl.c, tran.a, tranl.a, trig.a, triga.a,
    trigal.a, trigh.a, trighl.a, trigl.a, utill.c
fpw32\tran\mac\pmac\_fpctrl.c, _fpxpt.c, fpctrl.asm, frnd.c, huge.c, ieee.c
libw32\include\mrc\cfrg.r, cfrg1024.r, cfrg256.r, cfrg512.r
libw32\lib\mppc\cfrg.rsc, cfrg1024.rsc, cfrg256.rsc, cfrg512.rsc
libw32\tools\m68k\aliasobj.exe
libw32\tools\pmac\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe
srcrel\_sample_.r

    Mac-only files delfiled from source tree.

-----------------------------------------------------------------

Fri 14-May-99   (PhilipLu)

crtw32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h, excpt.h,
    float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h, mbstring.h,
    memory.h, new.h, process.h, search.h, setjmp.h, signal.h, stddef.h, stdio.h,
    stdlib.h, string.h, time.h, wchar.h
crtw32\h\sys\stat.h, timeb.h, utime.h
crtw32\stdhpp\wctype.h
fpw32\include\cv.h, trans.h
libw32\include\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h,
    excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h,
    mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h, signal.h,
    stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h, wctype.h
libw32\include\sys\stat.h, timeb.h, utime.h
srcrel\msvc40.if

    Remove all defs of _CRTAPI1/2. There were no uses.

crtw32\h\win32s.h [delfiled]
crtw32\heap\handler.cpp, heapinit.c, malloc.c, oldnew.c, _newmode.c
crtw32\iostream\cerrinit.cpp, cininit.cpp, cloginit.cpp, iostrini.cpp
crtw32\linkopts\newnew.c
crtw32\lowio\lowio.mkf
crtw32\misc\ctype.c, dbghook.c, inithelp.c, lconv.c, misc.mkf, nlsdata1.c,
    nlsdata3.c, wsetloca.c
crtw32\startup\mlock.c
crtw32\stdio\ncommode.c, rmtmp.c, stream.c, tmpfile.c
crtw32\time\timeset.c
doc\copysrc.bat
fpw32\tran\matherr.c
libw32\buildall.cmd, makefile, msvcrt.src
srcrel\msvc40.if, pd-b

    Eliminate all Win32s code still hanging around.

-----------------------------------------------------------------

Thu 13-May-99   (PhilipLu)

crtw32\stdcpp\iosptrs.cpp
crtw32\stdhpp\xstddef
libw32\include\xstddef

    Missing __cdecl in prototype for _Loc_atexit.

-----------------------------------------------------------------

Thu 13-May-99   (PhilipLu)

makefile
crtw32\dllstuff\crtdll.c, crtexe.c
crtw32\h\rtcapi.h, rtcpriv.h, rtcsup.h
crtw32\misc\alpha\chkesp.c
crtw32\misc\i386\chkesp.c
crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, convert.cpp,
    error.cpp, fileio.cpp, init.cpp, initsect.cpp, memory.cpp, pdblkup.cpp,
    shadow.cpp, stack.cpp, userapi.cpp
crtw32\startup\crt0.c, crt0dat.c, dllcrt0.c
crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp,
    newop2.cpp
libw32\include\rtcapi.h
libw32\msvcrt.src
srcrel\msvc40.if

    _CC_RUNTIME_CHECKS -> _RTC and other minor RTC cleanup

-----------------------------------------------------------------

Wed 12-May-99   (PhilipLu)

makefile, makefile.inc, makefile.sub
crtw32\eh\rtti.cpp
crtw32\heap\expand.c, free.c, malloc.c, new2.cpp
crtw32\misc\dbgheap.c, lsources
crtw32\misc\alpha\setjmp.s, setjmpex.s
crtw32\stdcpp\locale.cpp, locale0.cpp, wlocale.cpp, xlocale.cpp,
    xstrcoll.c, xwcscoll.c
crtw32\stdhpp\ostream, streambuf, xlocale
libw32\msvcrt.src
libw32\include\ostream, rtcapi.h, streambuf, xlocale
srcrel\makefile, objects.mkf

    Improve method used to disable RTC support in Win64.  Fix Win64 build
    for Alpha64 and IA64.

-----------------------------------------------------------------

Tue 11-May-99   (KFrei)

This stuff moves all the runtime check code under #ifdef _CC_RUNTIME_CHECKS

makefile

    Only define _CC_RUNTIME_CHECKS for non LLP64 builds

crtw32\dllstuff\crtdll.c, crtexe.c
crtw32\startup\crt0.c, crt0dat.c, dllcrt0.c

    #ifdef'ed RTC init and term code

crtw32\h\rtcapi.h, rtcpriv.h, rtcsup.h
crtw32\libw32\include\rtcapi.h

    #ifdef'ed the entire contents of the headers

crtw32\misc\alpha\chkesp.c
crtw32\misc\i386\chkesp.c

    #ifdef'ed the initialization, shutdown and syncronization stuff

crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, convert.cpp,
    error.cpp, fileio.cpp, init.cpp, initsect.cpp, memory.cpp, pdblkup.cpp,
    shadow.cpp, stack.cpp, userapi.cpp

    Everything is now empty #ifndef _CC_RUNTIME_CHECKS

crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp, newop2.cpp

    Put all the usage of the RTC code under _CC_RUNTIME_CHECKS

crtw32\libw32\msvcrt.src

    put _CRT_RTC_INIT export under #ifdef _CC_RUNTIME_CHECKS

-----------------------------------------------------------------

Mon 10-May-99   (GregF)

crtw32\convert\wcstombs.c, wctomb.c
crtw32\misc\a_loc.c, a_map.c, w_cmp.c, w_map.c, w_str.c
crtw32\stdcpp\xwctomb.c
crtw32\time\tzset.c
    Changed the dwFlags argument to WideCharToMultiByte to be zero.  This was
    suggested by K. D. Chang to avoid problems with codepage 1258 on NT 5.0.

-----------------------------------------------------------------

Wed 05-May-99   (rlanser)

These are all ports from the CRT64 or CRT64_SIZET_32 trees (PhilipLu)

makefile
    link /debugtype:both,fixup for IA64

crtw32\eh\frame.cpp
    Add __unaligned.

crtw32\misc\assert.c
    Define _DbgBreak for IA64.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
    Define _CrtDbgBeak for IA64.

fpw32\conv\tenpow.c
fpw32\include\cv.h
    Added _M_IA64 to alignment #if's.

-----------------------------------------------------------------

Wed 05-May-99   (PhilipLu)

srcrel\clnsrcrel.bat, makefile
    Don't copy platform-specific files of other platforms.  Saves copying about
    500 files on 32-bit x86 build.

crtw32\eh\throw.cpp
    Buildfix for newer Win headers with new prototype of RaiseException, while
    still allowing build with old headers missing definition of PULONG_PTR.

crtw32\misc\alpha\chandler.c
crtw32\startup\alpha\chkstk.s
    Buildfixes for 32-bit Alpha build after 64-bit merge.

-----------------------------------------------------------------

Tue 04-May-99   (PhilipLu)

crtw32\dllstuff\ia64\dllsupp.c
crtw32\h\sect_attribs.h
crtw32\misc\ia64\chandler.c, cinitone.s, jmpuwind.s, longjmp.s, memcpys.s,
        memsets.s, miscs.s, setjmp.s, setjmpex.s
crtw32\startup\ia64\chkstk.s, fp8.c,
crtw32\stdcpp\dirs, sources.nt
crtw32\stdcpp\stp\makefile, sources
fpw32\conv\psx\makefile, sources
fpw32\tran\axp64\acos.s, acosf.s, asin.s, asinacos.s, asinf.s, ata_tabs.s,
        ata_tabt.s, atan2f.s, atan2s.s, atanf.s, atans.s, cabs.s, cabsf.s,
        captcont.s, ceilf.s, ceils.s, chopt.s, copysgnf.s, cos_vo.s, cosf.s,
        cosf_vo.s, cosh.s, coshf.s, coss.s, cot.s, cotf.s, dpml_com.s, expf.s,
        exps.s, f_acos.s, f_acosf.s, f_asin.s, f_asinf.s, f_atan.s, f_atan2.s,
        f_atan2f.s, f_atanf.s, f_cos.s, f_cosf.s, f_exp.s, f_expf.s, f_hypot.s,
        f_hypotf.s, f_log.s, f_log10.s, f_log10f.s, f_logf.s, f_pow.s, f_powf.s,
        f_sin.s, f_sincof.s, f_sincos.s, f_sinf.s, f_sqrt.s, f_sqrtf.s, f_tan.s,
        f_tanf.s, fabsf.s, fabss.s, finitef.s, floorf.s, floors.s, fmodf.s,
        fmods.s, fp_clasf.s, fpctrl.s, fpint.s, frexp.s, frexpf.s, frnd.s,
        huge.s, hypotf.s, hypots.s, invtrigs.s, invtrigt.s, isnanf.s, j0f.s,
        j1f.s, jnf.s, l10_tabt.s, ldexp.s, log10f.s, log10s.s, log_tabt.s,
        logbf.s, logf.s, logs.s, modff.s, modfs.s, nextaftf.s, pow_tabt.s,
        powcerr.s, powf.s, pows.s, rsqrt.s, rsqrtf.s, sin_tabt.s, sin_vo.s,
        sincofvo.s, sincos.s, sincosf.s, sincosvo.s, sinf.s, sinf_vo.s, sinh.s,
        sinhcosf.s, sinhcosh.s, sinhf.s, sins.s, specexp.s, specexpf.s,
        sqr_tabt.s, sqrtf.s, sqrts.s, tan_tabt.s, tanf.s, tanh.s, tanhf.s,
        tans.s, trig_rdf.s, trig_rdx.s, trig_tab.s, y0f.s, y1f.s, ynf.s
fpw32\tran\ia64\asincosf.c, atan2f.c, atanf.c, ceilf.c, em_types.h, emfloat.s,
        expf.c, fabsf.c, filter.c, floorf.c, fmodf.c, fp80.s, fp80c.c, fpctrl.c,
        fpieee_flt.h, frnd.s, huge.s, ieee.c, log10f.c, logf.c, powf.c,
        sincosf.c, sincoshf.c, sqrtf.c, tanf.c, tanhf.c
fpw32\tran\psx\makefile, sources
libw32\lib\axp64\
libw32\lib\ia64\
libw32\lib\stp\makefile, makefile.inc, sources
libw32\tools\ia64\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
        tolwrupr.exe, trailing.exe

    Merging 64-bit CRT with 32-bit CRT.  Added new files from the CRT 64 tree.

log_64.txt

    Merging 64-bit CRT with 32-bit CRT.  Save log.txt from CRT 64 tree under
    new name.

makefile
makefile.inc
makefile.sub
crtw32\crt32.nt, dirs
crtw32\convert\_mbslen.c, atof.c, mblen.c, mbstowcs.c, strtod.c, wcstombs.c
crtw32\direct\findf64.c, findfile.c
crtw32\dllstuff\cinitexe.c, crtdll.c, crtexe.c, lsources
crtw32\dllstuff\dlllib\sources
crtw32\dos\fullpath.c
crtw32\eh\frame.cpp, lsources, oldexcpt.cpp, oldexcpt.h, sources.nt, throw.cpp,
        unhandld.cpp
crtw32\eh\alpha\bridge.s, ehunwind.c, xcptmisc.h, xcptmisc.s
crtw32\eh\dll\sources
crtw32\eh\ia64\ehstate.cpp, handlerc.cpp, handlers.s, trnsctrl.cpp
crtw32\eh\mt\sources
crtw32\eh\nt\sources
crtw32\eh\st\sources
crtw32\exec\cenvarg.c, dospawn.c, execl.c, execle.c, execlp.c, execlpe.c,
        execv.c, execvp.c, execvpe.c, getproc.c, loaddll.c, spawnl.c,
        spawnle.c, spawnlp.c, spawnlpe.c, spawnv.c, spawnve.c, spawnvp.c,
        spawnvpe.c, system.c, wait.c
crtw32\h\assert.h, conio.h, crtdbg.h, cruntime.h, ctime.h, ctype.h, direct.h,
        dos.h, eh.h, ehstate.h, errno.h, excpt.h, float.h, fpieee.h, heap.h,
        internal.h, io.h, locale.h, malloc.h, math.h, mbctype.h, mbstring.h,
        memory.h, mtdll.h, new.h, nlsint.h, process.h, search.h, setjmp.h,
        signal.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, streamb.h,
        string.h, time.h, trnsctrl.h, varargs.h, wchar.h, winheap.h
crtw32\h\sys\stat.h, timeb.h, types.h, utime.h
crtw32\heap\new.cpp
crtw32\heap\dll\sources
crtw32\heap\mt\sources
crtw32\heap\st\sources
crtw32\helper\lsources, sources.nt
crtw32\iostream\_strstre.cpp, ostream.cpp, stdiostr.cpp, streamb.cpp
crtw32\linkopts\lsources
crtw32\lowio\cgets.c, close.c, cputs.c, dup.c, dup2.c, getch.c, initcon.c,
        ioinit.c, open.c, osfinfo.c, pipe.c, putch.c, read.c, write.c
crtw32\mbstring\mbctype.c, mbsnbcol.c, mbsnbico.c, mbsncoll.c, mbsnicol.c,
        sources.nt
crtw32\misc\a_env.c, bsearch.c, charmax.c, dbgheap.c, dbgnew.cpp, dbgrpt.c,
        getenv.c, lsources, onexit.c, perror.c, putenv.c, qsort.c, setenv.c,
        setlocal.c, splitpat.c, w_env.c, wperror.c, wsetloca.c
crtw32\misc\alpha\chandler.c, ghandler.c, jmpuwind.s, longjmp.s, otsjmp.s,
        otsjmpex.s
crtw32\misc\dll\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
crtw32\startup\crt0.c, crt0dat.c, crt0init.c, crt0msg.c, lsources, startup.mkf,
        stdenvp.c, thread.c, threadex.c, tidtable.c, tlssup.c, wild.c
crtw32\startup\alpha\chkstk.s
crtw32\startup\dll\sources
crtw32\startup\dlllib\sources
crtw32\startup\mt\sources
crtw32\startup\nt\sources
crtw32\startup\psx\sources
crtw32\startup\st\sources
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\stdio\_file.c, _flsbuf.c, fflush.c, fputs.c, fputws.c, fread.c, ftell.c,
        ftelli64.c, fwrite.c, input.c, output.c, popen.c, puts.c, rmtmp.c,
        setvbuf.c, sprintf.c, sscanf.c, swprintf.c, swscanf.c, tempnam.c,
        vsprintf.c, vswprint.c
crtw32\string\lsources, memcpy.c, memmove.c, memset.c, sources.nt, strncoll.c,
        strnicol.c, strset.c, strxfrm.c, wcscspn.c, wcsncoll.c, wcsnicol.c,
        wcsspn.c, wcsxfrm.c
crtw32\time\clock.c, dtoxtime.c, gmtime.c, localtim.c, mktime.c, wcsftime.c
fpw32\conv\cfin.c, fltinf.c, fpinit.c
fpw32\include\cv.h, trans.h
fpw32\tran\asincos.c, atan.c, bessel.c, ceil.c, exp.c, fabs.c, floor.c, fmod.c,
        fpexcept.c, frexp.c, hypot.c, ieeemisc.c, ldexp.c, log.c, lsources,
        modf.c, pow.c, sincos.c, sincosh.c, sources.nt, sqrt.c, tan.c, tanh.c
fpw32\tran\alpha\dpml_exc.c, filter.c
fpw32\tran\i386\filter_simd.c, xmmi_fp_emul.c
libw32\makefile, msvcirt.src, msvcrt.src
libw32\include\assert.h, conio.h, crtdbg.h, ctype.h, direct.h, dos.h, eh.h,
        errno.h, excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h,
        mbctype.h, mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h,
        signal.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, streamb.h,
        string.h, time.h, varargs.h, wchar.h
libw32\include\sys\stat.h, timeb.h, types.h, utime.h
libw32\lib\dirs, sources.nt
srcrel\external.mkf, makefile, mkclnmkf.c, msvc40.if, objects.mkf, pd-b

    Merging 64-bit CRT with 32-bit CRT.  Merged in diffs from CRT 64 tree.

crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
        malloc.c, msize.c, realloc.c, sbheap.c

    Merging 64-bit CRT with 32-bit CRT.  Merged in diffs from CRT 64 tree.
    Also, disable the small block heap under Win64.  All heap routines just
    pass through to the underlying OS APIs.

-----------------------------------------------------------------

Mon 26-Apr-99   (PhilipLu)

crtw32\eh\comerr.cpp
crtw32\h\comerr.h
crtw32\winheap\*.*
libw32\include\comerr.h
    Delfile unnecessary files

-----------------------------------------------------------------

Mon 26-Apr-99   (PhilipLu)

crtw32\h\mtdll.h, setlocal.h
crtw32\misc\initmon.c, initnum.c, setlocal.c
crtw32\startup\tidtable.c
    Introduced one more reference counter for pieces of the per-thread locale
    information, cleaned up more setlocale memory leaks.

-----------------------------------------------------------------

Fri 16-Apr-99   (GregF)

crtw32\heap\realloc.c
    Added a call to __sbh_find_block to handle the case where __sbh_alloc_block
    has caused the header list to be moved.  This fixes VS7 #14020.

-----------------------------------------------------------------

Wed 14-Apr-99   (PhilipLu)

crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp,
        newop2.cpp

    Add back RTC functionality wiped out by STL integration (whoops)

crtw32\stdcpp\iosptrs.cpp
crtw32\stdhpp\xstddef

    Missing __cdecl in funcptr arg to _Loc_atexit

crtw32\stdhpp\cassert, iosfwd

    Minor cleanup missed in STL integration

crtw32\tools\win32\relinc.cmd

    Add STL header xlocmes to cleansing

-----------------------------------------------------------------

Tue 13-Apr-99   (PhilipLu)

makefile, makefile.inc, srcrel\pd-b

    Add new files stdcpp\cerr.cpp, stdcpp\cin.cpp, stdcpp\clog.cpp,
    stdcpp\cout.cpp, stdcpp\iosptrs.cpp, stdcpp\wcerr.cpp, stdcpp\wcin.cpp,
    stdcpp\wclog.cpp, stdcpp\wcout.cpp, stdhpp\hash_map, stdhpp\hash_set,
    stdhpp\xhash, libw32\include\hash_map, libw32\include\hash_set,
    libw32\include\xhash.

doc\copysrc.bat

    Add new files, plus missing files delaop.cpp, dealop_s.cpp, newaop.cpp,
    newaop2.cpp, newaop_s.cpp, newaop2_s.cpp, stdthrow.cpp.

crtw32\stdcpp\cerr.cpp [NEW], cin.cpp [NEW], clog.cpp [NEW], cout.cpp [NEW],
        delaop.cpp, delop.cpp, fiopen.cpp, iomanip.cpp, ios.cpp,
        iosptrs.cpp [NEW], iostream.cpp, locale.cpp, LOCALE0.CPP, newaop.cpp,
        newaop2.cpp, newop.cpp, newop2.cpp, nomemory.cpp, stdthrow.cpp,
        string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp [NEW], wcin.cpp [NEW],
        wclog.cpp [NEW], wcout.cpp [NEW], wctrans.c, wctype.c, wiostrea.cpp,
        wlocale.cpp, xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c,
        xfdnorm.c, xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c,
        xlcosh.c, xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp,
        xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmbtowc.c, xpoly.c, xsinh.c,
        xstod.c, xvalues.c, xwctomb.c

    Update all files to Plauger's drop of 12/15/98.

crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
        climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
        cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
        fstream, functional, hash_map [NEW], hash_set [NEW], iomanip, ios,
        iosfwd, iostream, iso646.h, istream, iterator, limits, list, locale,
        map, memory, new, numeric, ostream, queue, set, sstream, stack,
        stdexcept, streambuf, string, strstream, typeinfo, utility, valarray,
        vector, xcomplex, xhash [NEW], xiosbase, xlocale, xlocinfo, xlocinfo.h,
        xlocmes, xlocmon, xlocnum, xloctime, xmemory, xstddef, xstring, xtree,
        xutility, ymath.h, yvals.h

    Update all files to Plauger's drop of 12/15/98.

crtw32\tools\win32\relinc.cmd

    Cleanse and copy new STL headers hash_map, hash_set, and xhash.

libw32\include

    Update all STL headers to Plauger's drop of 12/15/98.

-----------------------------------------------------------------

Fri 09-Apr-99   (v-JohnMo)

crtw32\helper\lsources
crtw32\helper\sources.nt
crtw32\helper\alpha\sfillx.s
crtw32\helper\alpha\sfwdcpy.s
srcrel\objects.mkf
srcrel\pd-b
    Added a couple of helper functions for Alpha UTC backend support

-----------------------------------------------------------------

Thu 08-Apr-99   (GregF)

crtw32\convert\mbtowc.c
    Replaced MT with _MT, oops...

-----------------------------------------------------------------

Thu 08-Apr-99   (GregF)

crtw32\h\mtdll.h, setlocal.h
crtw32\misc\initctyp.c, initmon.c, initnum.c, setlocal.c
crtw32\startup\tidtable.c
crtw32\time\strftime.c
    Introduced more reference counters for pieces of the per-thread locale
    information.

-----------------------------------------------------------------

Wed 07-Apr-99   (PhilipLu)

log.txt -> log_v60.txt
    Renamed old LOG.TXT from V6.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***                                                                     ***
***  This file contains the history for MSVC++ v7.0 (relative to v6.0)  ***
***  The file should always be edited at the top so that the most       ***
***  recent changes are at the beginning of the file and the oldest     ***
***  changes are at the end of the file.  This comment marks the end.   ***
***                                                                     ***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log_v41.txt ===
***************************************************************************
***************************************************************************
***									***
***   This file contains the change history for the MSVC++ v4.1 C/C++	***
***   Run-Time Libraries (that is, modifications since since 4.0).	***
***   The file should always be edited at the top so that the most	***
***   recent changes are at the beginning of the file (immediately	***
***   after this comment) and the oldest changes are at the end.	***
***									***
***************************************************************************
***************************************************************************
-----------------------------------------------------------------

Wed 21-Feb-96   (SteveSa)

crtw32\misc\dbgheap.c
	Protected the call to HeapValidate() in _CrtIsValidHeapPtr(), so
	that it is skipped on Win32s and Windows 95, which don't support
	HeapValidate().  Previous fix (14-Feb) was for Win32s DLL only.

-----------------------------------------------------------------

Mon 18-Feb-96   (SteveSa)

crtw32\lowio\osfinfo.c
	Fixed error in file handle locking code that occurred on the
	first file handle in a new block file handles.  The wrong handle
	was locked, which shows up dramatically in Windows NT v4.0.

-----------------------------------------------------------------

Wed 14-Feb-96   (SteveSa)

crtw32\misc\dbgheap.c
	Again removed call to HeapValidate() in _CrtIsValidHeapPtr(),
	BUT ONLY for Win32s DLL.  The call remains for Windows 95/NT.

-----------------------------------------------------------------

Wed 31-Jan-96   (JamesMa)

fpw32\tran\i386\testfdiv.c
        Now resets process affinity mask, not system affinity mask - at
	the 'suggestion' of MarkL.

-----------------------------------------------------------------

Mon 22-Jan-96   (SteveSa)

crtw32\misc\dbgheap.c
	Restored call to HeapValidate() to _CrtIsValidHeapPtr().  This call
	was commented out last summer because of problems with the Debug IDE
	BVTs (tests).  Those problems cannot be reproduced.

-----------------------------------------------------------------

Fri 19-Jan-96   (GregF)

crtw32\time\tzset.c
        Added bit of code to ensure the _tzname[] strings are terminated with
        a null character. This was Speed bug 4552.

-----------------------------------------------------------------

Wed 03-Jan-96   (JamesMa)

fpw32\tran\i386\87triga.asm
        Atan2(0,0) now returns 0 (Speed bug 2176).

-----------------------------------------------------------------

Tue 02-Jan-96   (JamesMa)

crtw32\misc\dbgdel.cpp
        New file, split from dbgnew.cpp (Speed bug 3715).

crtw32\heap\setnewh.cpp
        New file, split from handler.cpp (Speed bug 4130).

crtw32\misc\dbgnew.cpp, crtw32\heap\handler.cpp

makefile, makefile.inc, srcrel\pd-b, doc\copycrt.bat,
crtw32\misc\lsources, crtw32\heap\lsources

-----------------------------------------------------------------

Mon 01-Jan-96	(BryanT)

crtw32\h\limits.h
libw32\include\limits.h
	Define LINK_MAX for POSIX

crtw32\h\wchar.h
libw32\include\wchar.h
        Don't define some types for POSIX

-----------------------------------------------------------------

Thu 28-Dec-95   (GregF)

crt\crtw32\h\stdio.h

crt\crtw32\stdio\setmaxf.c, fflush.c

crt\libw32\msvcrt.src

crt\libw32\include\stdio.h

        Fixed a rather badly broken _setmaxstdio() and a related bug in
        flsall() (see fflush.c). Also added _getmaxstdio(). This fixes SPEED
        bugs 2158 and 4327.

-----------------------------------------------------------------

Thu 21-Dec-95   (JamesMa)

crt\crtw32\convert\gcvt.c
        '.' was replaced by *__decimal_point (Speed bug 2145).

-----------------------------------------------------------------

Thu 21-Dec-95   (GregF)

crt\crtw32\string\i386\strncpy.asm
        Much faster version from Intel.

-----------------------------------------------------------------

Tue 19-Dec-95   (JamesMa)

crtw32\h\*.h, crtw32\h\sys\*.h, libw32\include\*.h, libw32\include\sys\*.h
        '#pragma once' removed from assert.h; all other occurrences
	bracketed by '#if _MSC_VER > 1000/#endif'.

-----------------------------------------------------------------

Tue 19-Dec-95   (GregF)

crt\crtw32\string\i386\strncat.asm
        Much faster version from Intel (with several bug fixes from me).

-----------------------------------------------------------------

Mon 18-Dec-95   (JamesMa)

crtw32\eh\typname.cpp
        Debug version now allocates buffer as _CRT_BLOCK.

crtw32\startup\crt0dat.c
        Doexit() can no longer recurse.

crtw32\h\*.h, crtw32\h\sys\*.h, libw32\include\*.h, libw32\include\sys\*.h
        Add '#pragma once' to all headers.

-----------------------------------------------------------------

Thu 14-Dec-95   (BryanT)

crtw32\eh\mips\trnsctrl.cpp, handlers.s, rtlmisc.s
        Fix for new 64-bit CONTEXT structures.

crtw32\helper\ppc\dtou.s
        Fix from ChuckL.

libw32\lib\dll\makefile.inc
        Add dependency on msvcrt.src.

-----------------------------------------------------------------

Wed 13-Dec-95   (SteveSa)

crt/fpw32/tran/i386/testfdiv.c -
	Change call to LoadLibrary("kernel32") to GetModuleHandle(...)
	since KERNEL32.DLL will ALWAYS be loaded.

-----------------------------------------------------------------

Wed 13-Dec-95   (GregF)

crt\crtw32\time\time.c
        Had gmt and gmt_cache switched in a key assigment, effectively
        disabling my workaround for the slow NT API. Mistake found and
        reported by Phil Lucido.

-----------------------------------------------------------------

Tue 12-Dec-95   (SteveSa)

crt/fpw32/tran/i386/testfdiv.c -
	Reorganized the multi-processor check for a Pentium with the FDIV bug
	so that the check is done only once on single-processor systems.
	Previously the test was done twice on uni-processor systems -- once at
	the beginning of the routine and once in the loop to check all CPUs.

-----------------------------------------------------------------

Thu 07-Dec-95   (SteveSa)

crt/crtw32/convert/wctomb.c
crt/crtw32/convert/wcstombs.c
crt/crtw32/h/mtdll.h
crt/crtw32/stdio/_filbuf.c
crt/crtw32/stdio/_flsbuf.c
	Fixed misspellings of _NTSUBSET_.  It was only misspelled in comments
	in the four files other than <mtdll.h>.  But there it was in an #if.

-----------------------------------------------------------------

Wed 06-Dec-95   (GregF)

crt\crtw32\string\i386\strstr.asm
        Faster version from Intel.

-----------------------------------------------------------------

Tue 05-Dec-95   (SteveSa)

crt/crtw32/lowio/cgets.c
crt/crtw32/lowio/cputs.c
crt/crtw32/lowio/getch.c
crt/crtw32/lowio/putch.c
crt/crtw32/lowio/initcon.c
	To improve DLL load time, the console I/O handles _confh and _coninpfh
	are no longer initialized at CRTL start-up but rather are initialized
	on demand.  From initial tests, this seems to speed up the loading of
	MSVCRT40.DLL by 4-20%.

	Revised Fri 08-Dec-95 to work correctly under Win32s, and to save code.

-----------------------------------------------------------------

Thu 30-Nov-95   (SteveSa)

crt/crtw32/misc/cmiscdat.c -
	VC++ 4.1 (SPEED) bug 2188 - removed obsolete comments which were
	relevant in the 16-bit world but are no longer.  Updated copyright.

-----------------------------------------------------------------

Thu 30-Nov-95   (GregF)

crt\crtw32\string\i386\strchr.asm, strlen.asm
        The new strchr() is a much faster (also fatter) version from Intel.
        The only change to strlen.asm was to align the main loop entry on
        a 16-byte boundary (for 486 and P6).

-----------------------------------------------------------------

Tue 28-Nov-95   (SteveSa)

crtw32/dos/stat.c -
	Change special case code that handles root directories (such as
	'C:/' or 'X:\') to also handle UNC names such as '//server/share/'
	or '\\server\share\'.  Note that Win32 requires the trailing slash.

-----------------------------------------------------------------

Mon 27-Nov-95   (BryanT)

crtw32\h\stdlib.h
libw32\include\stdlib.h
        Add __cdecl to _sleep/_beep/_seterrormode prototypes.

-----------------------------------------------------------------

Sun 26-Nov-95   (BryanT)

crtw32\string\stricoll.c
libw32\msvcrt.src
        Since stricmp() is merely a wrapper for strcmpi(), call strcmpi() directly
	if possible.

-----------------------------------------------------------------

Thu 16-Nov-95   (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt
        Define _WIN32 for ASM files (to get proper .586 designation)

crtw32\h\cruntime.inc
        Fix POSIX build (it needs .586 also to compile string\strcat.asm)

crtw32\misc\dlllib\sources
crtw32\misc\i386\exsup.asm
        Don't link global_unwind2 into each image... Import from the CRT dll instead
        (this removes the last required reference to kernel32.dll)

crtw32\startup\mlock.c
        #pragma optimiza("y", off) is only needed when you're going to run on the
        checked version of NT 3.1...  Since the NT libs never do that, no need to
        disable it here.

fpw32\tran\i386\87fmod.asm
fpw32\tran\i386\87tran.asm
        Remove more fdiv workarounds.

-----------------------------------------------------------------

Wed 15-Nov-95   (GregF)

crtw32\time\tzset.c

        Set the year fields of dststart and dstend to -1 to ensure they
        are recomputed after a call to _tzset.

-----------------------------------------------------------------

Tue 14-Nov-95	(BryanT)

crtw32\misc\splitpat.c
        Don't use MBCS on splitpath for NTSUBSET

crtw32\startup\nt\sources
        Add crt0fp.c

fpw32\fp32.nt
fpw32\conv\fpinit.c
fpw32\tran\sources.nt
fpw32\tran\i386\87tran.asm
fpw32\tran\i386\87fmod.asm
        Don't use CRT workaround for P5 FDIV problem.  The NT run-times
	will alway run on a system that handles it.

-----------------------------------------------------------------

Tue 14-Nov-95	(GregF)

crtw32\string\i386\stricmp.asm

        Define/declare _strcmpi with a proc rather than a label directive.
        This was the last bit required to fix 2108.

crtw32\string\i386\strcat.asm

        Aligned strcat to a paragraph boundary.

-----------------------------------------------------------------

Sun 12-Nov-95	(BryanT)

crtw32\string\wcsicmp.c
crtw32\string\wcsnicmp.c
crtw32\string\wcsxfrm.c
crtw32\string\strxfrm.c
crtw32\misc\dlllib\sources
crtw32\startup\dlllib\sources

        NT build fixes

-----------------------------------------------------------------

Fri 10-Nov-95	(v-rogerl)

crt32\string\mips\strcpym.s
crt32\string\mips\strcatm.s
crt32\string\mips\memcpym.s

        Replace ALTERNATE_ENTRY with .weakext for -Gy build.

-----------------------------------------------------------------

Thu 09-Nov-95   (GregF)

crtw32\dllstuff\crtlib.c

        Changed "ISTNT" to "IsTNT".

crtw32\string\i386\memcmp.asm

        Checked in faster version from Intel. The last problem (i.e., the
        reason I had to back this out several months ago) was edi and esi
        were being pushed in the wrong order.

-----------------------------------------------------------------

Wed 08-Nov-95   (GregF)

crtw32\time\tzset.c

        Fixed typo in _isindst(). Second call to _mlock(_TIME_LOCK) should
        have been _munlock(_TIME_LOCK).

-----------------------------------------------------------------

Tue 31-Oct-95   (GregF)

crtw32\h\conio.h

        Backed out last change. The inp* and outp* functions are intrinsics
        so they cannot be _CRTIMP.

-----------------------------------------------------------------

Tue 31-Oct-95	(GregF)

crtw32\h\conio.h
libw32\msvcrt.src
        Export inp*, outp* for x86 msvcr*.dll. This was Olympus0 10299 and
        Olympus 1811.

crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, wcscoll.c
              wcsicoll.c, wcsncoll.c, wcsnicol.c

        Pass SORT_STRINGSORT flag to CompareString* API (actually, to our own
        crtCompareString*, which then passes it on to the Win32 API) so that
        characters such as the dash and apostrophe are not ignored in
	comparisons. This was Olympus0 14755.

-----------------------------------------------------------------

Fri 27-Oct-95	(v-rogerl)

fpw32\tran\mips\exptable.s
fpw32\tran\mips\logtable.s
fpw32\tran\mips\xsqrt.s

        Fix bogus mips code.  Align .rdata 8 bytes so tables that
        are entered as words can work as double values.

-----------------------------------------------------------------

Fri 27-Oct-95	(GregF)

crt\crtw32\stdio\fdopen.c

        Added check (for both Win32 and Mac builds) that the file handle
        passed to _fdopen() is open. This was Olympus0 10153.

crt\crtw32\h\stdlib.h
crt\libw32\include\stdlib.h

        #ifdef-out toupper/tolower for ANSI builds. The decls cannot be
        removed completely because they are documented (see the descripion
        of tolower and toupper in the Runtime Library Reference). The doc
        should be changed so that we may remove these decls in the future.
        This was Olympus 1314.

-----------------------------------------------------------------

Tue 24-Oct-95   (GregF)

crt\crtw32\misc\searchen.c

        Use an internal buffer to construct the full pathname from the
        environment variable value and the file name. This was OLYMPUS0 9336.


crt\crtw32\time\time.c

        Revised to minimize calls to GetTimeZoneInformation with used in a
        loop by only updating the DST status on whole minutes. This was done
        because GetTimeZoneInformation very expensive on NT 3.51.

-----------------------------------------------------------------

Tue 17-Oct-95	 (SteveSa)

crtw32/eh/mac/pmac/lowhelpr.asm
crtw32/eh/mac/pmac/trnsctrl.cpp
	Propogate GlennN's and APennell's final EH fix to the PowerMac CRTL
	(after v4.0 for Intel X86 shipped).

-----------------------------------------------------------------

Tue 17-Oct-95	 (GregF)

crtw32\convert\_mbslen.c, mbstowcs.c, mbtowc.c, tolower.c, toupper.c,
        towlower.c, towupper.c

crtw32\h\ctype.h, mtdll.h

crtw32\misc\setlocal.c

crtw32\startup\mlock.c

crtw32\string\memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c,
        strncoll.c, strnicmp.c, strnicol.c, strupr.c, strxfrm.c, wcscoll.c,
        wcsicmp.c, wcsicoll.c, wcslwr.c, wcsncoll.c, wcsnicmp.c, wcsnicol.c,
        wcsupr.c, wcsxfrm.c

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm

crtw32\time\strftime.c

        Package of changes implementing a more efficient scheme for 'locking'
        locale references. The basic idea is access to locale data only has to
        be serialized if at least one thread is executing setlocale().

        Also, memicmp.asm contains a fix for Olympus 2196 (< and > returns
        are reversed for non-C locales).

-----------------------------------------------------------------

Fri 06-Oct-95	 (SteveSa)

crtw32\direct\findfile.c
crtw32\h\io.h
libw32\include\io.h

	The filespec argument to _*findfirst should be CONST char *, not just
	char *.  Also added missing underscores to func names in the comments.

	This was Olympus0 bug #13287.


crtw32\h\new.h -
	updated so that when cleansed, it matches the new.h in libw32\include.
	(added missing __cdecl in the prototype of new_handler).

crtw32\h\tchar.h -
	Fix Olympus0 bug #1175 here as well as in libw32\include\tchar.h
	(See Thu-05-Oct fixes)

libw32\include\time.h
	updated for GregF's change today for crtw32\h\time.h

-----------------------------------------------------------------

Fri 06-Oct-95	 (GregF)

crtw32\direct\findfile.c

crtw32\dos\stat.h

crtw32\h\internal.h

crtw32\lowio\fstat.h

crtw32\time\dtoxtime.c, time.c

	Package of changes to properly handle the overlapping clock times
	which occur at the transition from DST back to Standard Time.

	This was Olympus 2128.

-----------------------------------------------------------------

Fri 06-Oct-95	 (GregF)

crtw32\dllstuff\crtlib.c

crtw32\h\time.h, win32s.h

crtw32\time\dtoxtime.c, mktime.c, localtim.c, timeset.c, tzset.c

libw32\msvcrt.src

	Package of changes to fully support Win32 timezones. Main changes
	were to fix _isindst() to work with non-USA transition rules and
	to use _dstbias instead of a constant value (-3600) for the bias
	in seconds.

	This was Olympus0 3231.

-----------------------------------------------------------------

Thu 05-Oct-95    (SteveSa)

srcrel\mkfiles.sed
	Remove stdio\maketabc.c from the list of files to be copied/cleansed.
	This file should not have been released in MSVC++ v4.0.  No big deal.
	Also remove stdio\mac\initstd.c from that list.  Same story.  NBD.

srcrel\makefile
	Change the rule to create pd-b to use the v4.1 source file server
	(\\lang1\slmv4.1) instead of the v4.0 name (\\lang1\v3slm).

log.txt -> log_v40.txt
	renamed the v4.0 history file and started a new one

crtw32\lowio\getch.c -- Olympus0 Bug #2193
	removed two lines of debugging code that were commented out with //

libw32\include\tchar.h - Olympus0 Bug #1175
	__far is #defined to nothing -- should be unnecessary in 32-bit code!

makefile -
	Change the rules for the oldnames and tcmap and tcmapdll object file
	directories so that oldnames.lib and tcmap.lib and tcmapdll.lib do
	not get incorrectly rebuilt.  This occurs due to a bug in Windows NT
	v3.5x wherein sometimes a subdirectory has a creation time OLDER
	than the creation time of its parent directory.

-----------------------------------------------------------------

***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v4.1 (relative to v4.0)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log_v42.txt ===
***************************************************************************
***************************************************************************
***									***
***   This file contains the change history for the MSVC++ v4.2 C/C++	***
***   Run-Time Libraries (that is, modifications since since 4.1).	***
***   The file should always be edited at the top so that the most	***
***   recent changes are at the beginning of the file (immediately	***
***   after this comment) and the oldest changes are at the end.	***
***									***
***************************************************************************
***************************************************************************


-----------------------------------------------------------------

Tue 14-Jun-96   (V-rogerl)

fpw32\tran\mips\powm.s
	YAPF (Yet Another Pow Fix) BBT found branch to delay slot.

-----------------------------------------------------------------

Tue 13-Jun-96   (V-rogerl)

fpw32\tran\mips\powm.s
	subu in Lnormal should be dsubu.  Regression only occurs
	on MIPS 4600 processor for some strange reason.

-----------------------------------------------------------------

Tue 11-Jun-96	(JamesMa)

crtw32\dllstuff\crtlib.c
	Changed "MSVCRT40.DLL" to "MSVCRT.DLL" (Speed 8607).

-----------------------------------------------------------------

Mon 10-Jun-96	(GregF)

crtw32\misc\aw_env.c
        If/when __crtGetEnvironmentStringsA is called a 2nd time, two local
        pointers are not initialized before they are tested against NULL. 
        This is closely related to SPEED 7885 (actually, it's the same bug, 
        but the circumstances under which symptoms will manifest are quite
        different in Win32s). I fixed the bug by initializing the two local
        pointers to NULL.

-----------------------------------------------------------------

Thu 06-Jun-96	(v-KimPe)

srcrel\pd-b, libw32\msvcrt.src
fpw32\tran\lsources, sources.nt
fpw32\tran\alpha\*.s (all of them)
	Updated ALPHA floating point to latest Digital math library to
	fix some bugs (Speed 7763) (ntraid 37629 and 40953) and to add
	the MIPS API for single precision math routines (e.g. sinf and cosf)
	and the API for fast (and less precise) double routines (F_sin and F_cos).

-----------------------------------------------------------------

Thu 06-Jun-96	(JamesMa)

crtw32\h\math.h, libw32\include\math.h
	Added pow(int,int) specialization (Speed 8371).

-----------------------------------------------------------------

Wed 05-Jun-96	(JamesMa)

Numerous routines and operators in the ANSI C++ libs were not being
declared as __cdecl, effectively breaking /Gr and /Gz compilations
(Speed 6353). The affected files:

crtw32\stdhpp\exception, fstream, xlocale, xlocnum, xstddef, xstring
crtw32\stdcpp\delop.cpp, fiopen.cpp, locale.cpp, locale0.cpp, newop.cpp,
	newop2.cpp, nomemory.cpp, string.cpp, uncaught.cpp, wlocale.cpp,
	xlocale.cpp
crtw32\h\wchar.h
libw32\include\wchar.h

-----------------------------------------------------------------

Wed 05-Jun-96	(GregF)

crtw32\h\setlocal.h
libw32\msvcrt.src
        Plauger's C++ libs use __lc_handle and __lc_codepage which were not 
        being exported properly from msvcrt.dll. This was the cause of SPEED
        bug #8006. I marked the decls for these two as _CRTIMP in setlocal.h.
        I marked them as DATA (along with four other variables added to the 
        def file at the same time) in msvcrt.src. Voila, another bug bites 
        the dust!

-----------------------------------------------------------------

Fri 31-May-96	(SteveSa)

crtw32\lowio\open.c
crtw32\lowio\pipe.c
	Fixed two expression errors of the form "(x & FLAG == 0)" wherein
	what was intended was "((x & FLAG) == 0)".  The original expression
	was interpreted as "(x & (FLAG == 0))", which was not correct.

-----------------------------------------------------------------

Thu 30-May-96	(SteveSa)

makefile
makefile.inc
crtw32\eh\lsources
crtw32\eh\oldexcpt.cpp  (new file!)
crtw32\eh\oldexcpt.h  (new file!)
libw32\msvcrt40.src
srcrel\makefile
srcrel\objects.mkf
srcrel\pd-b
	To properly support the old MSVC 4.0/4.1 C++ class "logic_error"
	in the forwarder DLL (msvcrt40.dll), we have to compile the file
	stdexcept.cpp file using the v4.1 semantics, and then we put that
	object in msvcirt{,d}.dll and export the set of relevant symbols.
	The files stdexcpt.cpp and stdexcpt.h were modified to support
	the old v4.1 semantics and renamed oldexcpt.* for this purpose.

-----------------------------------------------------------------

Thu 30-May-96	(JamesMa)

fpw32\tran\i386\testfdiv.c
	No longer loops through affinity mask; instead, uses MarkL's new
	IsProcessorFeaturePresent() API if possible, only tests 1st processor
	if not.

-----------------------------------------------------------------

Wed 29-May-96	(JamesMa)

crtw32\stdhpp\new
	All flavors of operators new & delete are now __cdecl (Speed 6353)
crtw32\stdhpp\stl.h
	Multiset template now uses key's allocator (bug reported by JonCaves).

-----------------------------------------------------------------

Wed 29-May-96	(GregF)

crtw32\exec\dospawn.c
crtw32\h\msdos.h
crtw32\lowio\dup.c, dup2.c, ioinit.c, open.c, pipe.c

        Work-around for a nasty bug in NT. If one calls GetFileType on a pipe
        handle, and there is a "blocking read" pending on that pipe, the
        GetFileType never returns. Email I received from Ken Peery and Darryl
        Havens made it clear NT isn't going to fix this (or even admit it's 
        bug).

        I introduced FNOINHERIT, to tag non-inheritable handles, and changed
        the spawn code to NOT pass info on such handles to the child process. 
        This eliminated the main reason for using GetFileType in that startup
        code. Then, I changed the startup code to NOT call GetFileType when 
        the inherited handle was tagged as being a pipe. For 5.0, I intend to
        stop calling GetFileType on inherited file handles altogether!

-----------------------------------------------------------------

Sat 25-May-96	(V-rogerl)

crtw32\eh\mips\rtlmisc.s

	Restore extended context exclusively.

-----------------------------------------------------------------

Fri 24-May-96	(BryanT)

crtw32\helper\ppc\icall.s
crtw32\helper\lsources
crtw32\helper\sources.nt

        Add more PPC helper routines (from ChuckL)

-----------------------------------------------------------------

Wed 22-May-96	(V-rogerl)

fpw32\tran\mips\ieee.c

	Changed _clearfp() to return old status word versus new one.

-----------------------------------------------------------------

Wed 22-May-96	(GregF)

crtw32\heap\sbheap.c
        Fixed very nasty typo in __sbh_resize_block. The conditional clause
        of a for statement had an = instead of an == ...major oops! Probably
        the cause of the problems the IDE was seeing (they use realloc a lot
        I believe).

-----------------------------------------------------------------

Tue 21-May-96	(SteveSa)

makefile -
	Change base addresses for MSVCRT{,D}.DLL, MSVCRT40.DLL,
	MSVCIRT{,D}.DLL, and MSVCP42{,D}.DLL per BryanT's suggestions.

-----------------------------------------------------------------

Mon 20-May-96	(GregF)

crtw32\startup\dllcrt0.c
crtw32\dllstuff\crtdll.c, crtlib.c
        Changed the way a failure is handled during the initialization we do
        upon process attach notification. The __proc_attached flag is now set
        to indicate successful completion of initialization. This fixes
        several minor problems including a bug reported by NT about our mis-
        handling of the case where the user's DllMain returns failure upon
        process attach notification.

-----------------------------------------------------------------

Wed 15-May-96	(BryanT)

crtw32\h\stdlib.h, libw32\include\stdlib.h
        Add POSIX wrappers for environ definitions

-----------------------------------------------------------------

Wed 15-May-96	(JamesMa)

crtw32\h\math.h, libw32\include\math.h
	Minor fix to remove a C4244 warning from the Pow_int template.

-----------------------------------------------------------------

Tue 14-May-96	(JamesMa)

crtw32\stdcpp\xstrcoll.c
	Bug fix to _Strcoll(): error path failed to unlock properly.
crtw32\stdhpp\*
	Added pack(push,8) and pack(pop) pragmas to ANSI headers (Speed 7746).

-----------------------------------------------------------------

Tue 14-May-96	(SteveSa)

	Further changes to better support the forwarder DLL (MSVCRT40.DLL).
	The exported data (variables as opposed to functions) forwarded by
	the DLL must be described to the librarian (LINK -LIB) when building
	the exports file (MSVCRT40.EXP).  The new dummy object imp_data.obj
	declares all of the exported data as global uninitialized data.
	That object is only passed to the LINK -LIB step, not the step that
	actually builds the DLL (a LINK step).

crtw32/dllstuff/imp_data.c - new file!
libw32/msvcrt40.src - Removed _imp_ prefix from all entries
makefile - fix the way we build the forwarder DLL
makefile.inc
srcrel/pd-b - pick up new file

-----------------------------------------------------------------

Mon 13-May-96	(BryanT)

crtw32\convert\xtow.c and wtox.c

        Fix _NTSUBSET_ variant so we can export these from ntdll for OLE.

-----------------------------------------------------------------

Mon 13-May-96	(SteveSa)

	Various changes to better support the forwarder DLL (MSVCRT40.DLL).
	It *MUST* have actual imports from both MSVCRT.DLL and MSVCIRT.DLL.
	I also set up a DllMain for MSVCIRT.DLL and a dummy variable which
	is exported, providing something for MSVCRT40.DLL to import.  The
	forwarder DLL is apparently not fully correct yet, however.

crtw32/dllstuff/fwdr_dll.c - new file!
crtw32/dllstuff/ios_dll.c - new file!
libw32/msvcrt40.src - minor change
makefile
makefile.inc
srcrel/pd-b - pick up new files (not only my 2, but some MIPS FP tests)

-----------------------------------------------------------------

Wed 08-May-96   (V-dougme)

crtw32\helper\mips\llcvt.s
		   lldivrem.s

	First step at eradicating odd FP register usage in preparation for
	moving to 32 64-bit floating point register model for MIPS3 (NT40).

-----------------------------------------------------------------

Wed 08-May-96   (V-rogerl)

srcrel\mkfiles.sed
srcrel\mkdirs.sed

	Add mips\tests, mips\tests\perf_tests, and mips2.
	Don't copy these directories/files anywhere.

-----------------------------------------------------------------

Tue 07-May-96   (V-rogerl)

fpw32\tran\mips\asincosm.s
		atanm.s
		cabsm.s
		coshm.s
		dtoul.s
		expm.s
		fatan.s
		fexp.s
		floorm.s
		fmodm.s
		hypotm.s
		logm.s
		powm.s
		sinhm.s
		sqrtm.s
		tanhm.s
		trigm.s

	First step at eradicating odd FP register usage in preparation for
	moving to 32 64-bit floating point register model for MIPS3 (NT40).

-----------------------------------------------------------------

Mon 06-May-96   (JamesMa)

crtw32\h\math.h, libw32\include\math.h
	Inlines are now #ifndef _M_M68K (speed bug #7409).

-----------------------------------------------------------------

Mon 06-May-96   (GregF)

crtw32\stdio\output.c
        Removed NT_BUILD so that the NT extensions are now part of the retail
        build. Also, took a stab at fixing a problem with %ws in the printf
        family (NT RAID 37620) which shows up in DBCS locales.

crtw32\misc\dbgheap.c
        Don't include heap.h for WINHEAP builds.

-----------------------------------------------------------------

Thu 03-May-96   (V-rogerl)

srcrel/pd-b
fpw32\tran\mips\rint.s
	Removed another file that should have never been there:
		fpw32\tran\mips\rint.s

-----------------------------------------------------------------

Thu 02-May-96   (V-rogerl)

srcrel/pd-b
fpw32\tran\mips\sqrt3000.c
fpw32\tran\mips\sqrt4000.c
fpw32\tran\mips\xsqrt.s
	Removed files that should have never been there:
		fpw32\tran\mips\sqrt3000.c
		fpw32\tran\mips\sqrt4000.c
		fpw32\tran\mips\xsqrt.s

-----------------------------------------------------------------

Thu 02-May-96   (SteveSa)

crtw32/h/mtdll.h
crtw32/misc/setlocal.c
libw32/msvcrt.src
	The ANSI Std C++ DLL (msvcp42.dll) requires the use of the locale
	locaking variables __setlc_active and __unguarded_readlc_active,
	which are located in MSVCRT.DLL and must be exported from there.

-----------------------------------------------------------------

Wed 01-May-96	(SteveSa)

log.txt
makefile
libw32/msvcrt40.rc -- NEW FILE!
libw32/msvcrt40.src -- NEW FILE!
srcrel/pd-b
srcrel/mkclnmkf.c
srcrel/objects.mkf
srcrel/pd-b
srcrel/relmkf.sed
	Added code to produce "forwarder" DLLs named MSVCRT40.DLL and
	MSVCR40D.DLL which will forward all of their symbols to the
	DLLs named MSVCRT.DLL and MSVCRTD.DLL, respectively.  This way
	apps built with MSVC++ v4.0 and v4.1 will get the benefits of the
	much faster heap (as well as other bug fixes) in Visual C++ v4.2.

-----------------------------------------------------------------

Tue 30-Apr-96   (GregF)

crtw32\heap\heapchk.c
        _heapset() is obsolete and I turned it into a simple call to
        _heapchk(). The originally intended functionality was neither well-
        defined nor useful on Win32 platforms. This fixes Speed 2134 (which
        says it didn't work on Win95 anyway).

-----------------------------------------------------------------

Mon 29-Apr-96   (JamesMa)

2 minor bug fixes:
crtw32\misc\dbgrpt.c
	_crtAsssertBusy was being decremented prematurely in _CrtDbgReport().
crtw32\stdhpp\yvals.h
	_FPOSOFF now only #ifndef _FPOS_T_DEFINED, for stdio.h compatibility.

-----------------------------------------------------------------

Thu 25-Apr-96   (JamesMa)

crtw32\stdhpp\iomanip, crtw32\stdcpp\iomanip.cpp
	setiosflags(), resetiosflags(), setbase(), setprecision() &
	setw() are now all __cdecl.
crtw32\heap\calloc.c, free.c, heapinit.c, malloc.c, msize.c, realloc.c
	Backed out Bryant's "Fix POSIX variant" changes to crtw32\heap,
	which had some errant preprocessor directives.

-----------------------------------------------------------------

Wed 24-Apr-96   (BryanT)

crtw32\heap\calloc.c, free.c, heapinit.c, malloc.c, msize.c, realloc.c
       Fix POSIX variant

crtw32\convert\*.c
crtw32\h\wchar.h, tchar.h, stdlib.h
libw32\msvcrt.src
    Fix POSIX build and add __int64 variants

crtw32\h\setjmp*.h
crtw32\misc\mips\setjmp*.s
libw32\lib\msvcrt.src
    V5 MIPS (and NT 4.0) defines a faster setjmp (setjmpVfp).

crtw32\string\mips\memorym.s
    Fast qword copy routines

libw32\lib\dirs, sources.nt, dll40\sources, dll40\crt40.*
    Check in changes from NT to build msvcrt40 forwarder dll.

-----------------------------------------------------------------

Wed 24-Apr-96   (GregF)

crtw32\heap\hpaort.c
        My changes of yesterday broke the build on this file. Oops. To fix, I
        removed the #include <heap.h>. This header is now obsolete, and never
        was necessary in this particular source.

-----------------------------------------------------------------

Tue 23-Apr-96   (GregF)

crtw32\dllstuff\crtlib.c
crtw32\h\cmsgs.h, internal.h, rterr.h
crtw32\heap\heapinit.c
crtw32\startup\crt0.c, crt0msg.c, dllcrt0.c
        Changed _heap_init to return a success/failure code. Changed the
        startups to check it. Added a RTE for the .EXE startup. During this,
        I discovered _NMSG_WRITE wouldn't work if the lowio initialization
        code hadn't been called, so I fixed this as well.

-----------------------------------------------------------------

Mon 22-Apr-96   (JamesMa)

crtw32\misc\dbgrpt.c
	MAX_MSG increased from 512 to 4096 characters (Speed bug 6849).

-----------------------------------------------------------------

Fri 19-Apr-96   (GregF)

crtw32\stdcpp\_tolower,c, _toupper.c, xmbtowc.c, xstrcoll.c, xstrxfrm.c,
              xcwscoll.c, xwcsxfrm.c, xwctomb.c
        Revised to use the current scheme of multi-thread locking for
        locale data. Also, many cosmetic changes to make the code more
        readable and the formatting consistent with our own.

-----------------------------------------------------------------

Thu 18-Apr-96   (JamesMa)

crtw32\h\stdio.h
	Inline definitions of getwchar(), putwchar, getwc() & putwc() removed.
crtw32\stdhpp
	Ubiquitous "_T"s replaced by "_TYPE" in 25 files, to prevent conflict
	with tchar.h's _T macro.

-----------------------------------------------------------------

Wed 17-Apr-96   (JamesMa)

crtw32\misc\dbgheap.c, crtw32\h\dbgint.h
	_CrtSetDbgBlockType() is now _CRTIMP.

-----------------------------------------------------------------

Tue 16-Apr-96   (JamesMa)

crtw32\h\useoldio.h
libw32\include\useoldio.h
crtw32\stdhpp\use_ansi.h
	New files consisting of various '#pragma comment(lib,...)'s.
crtw32\h\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
libw32\include\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
	Added '#include <useoldio.h>', removed '#pragma comment(lib,"cirt")'
crtw32\stdhpp\yvals.h
	Removed '#pragma comment(lib,"cprt")'
crtw32\stdhpp\* (ALL but new, exception, xstddef, xlocinfo.h & yvals.h)
	Added '#include <use_ansi.h>'
srcrel\pd-b
	Added useoldio.h, use_ansi.h
crtw32\tools\win32\relinc.cmd
	Added useoldio.h
makefile
	Added -nodefaultlib directives to link response files for
	ANSI C++ & old iostreams dlls
doc\copycrt.bat
	Added old iostream libs/dlls

-----------------------------------------------------------------

Mon 15-Apr-96   (JamesMa)

crtw32\h\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
libw32\include\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
	Added '#pragma comment(lib,"cirt")', removed #ifndef _OLD_IOSTREAMS

crtw32\stdhpp\yvals.h
	Added '#pragma comment(lib,"cprt")'

-----------------------------------------------------------------

Mon 15-Apr-96   (JamesMa)

Numerous changes to the crtw32\stdcpp and crtw32\stdhpp directories,
incorporating Plauger's 4/8/96 release.

crtw32\stdcpp\locale0.cpp, uncaught.cpp, wiostrea.cpp, xlocale.cpp
crtw32\stdhpp\stl.h
	New files.

crtw32\stdcpp\xtolower.c, xtoupper.c
crtw32\stdhpp\xios, xwctype.h, yxvals.h
	Removed.

crtw32\stdcpp\*, crtw32\stdhpp\*
	Updated, based on Plauger's 4/8/96 release.

crtw32\h\wchar.h, libw32\include\wchar.h
	Added Wint_t typedef.

crtw32\makefile.inc, srcrel\pd-b
	Updated to reflect above additions and deletions.

-----------------------------------------------------------------

Thu 11-Apr-96   (GregF)

crtw32\heap\sbheap.c
crtw32\h\winheap.c
        Several optimizations (see revision history comments in sbheap.c).

crtw32\heap\expand.c, free.c, msize.c, realloc.c
        Return type of __sbh_find_block, and the 3rd arg types of
        __sbh_free_block and __sbh_resize_block, all changed to __map_t * (a
        result of the optimizations to sbheap.c).

crtw32\misc\dbgheap.c
        _CrtIsValidHeapPointer was changed to return failure when passed a
        pointer to a free block in the small-block heap.

-----------------------------------------------------------------

Thu 04-Apr-96   (GregF)

crtw32\heap\sbheap.c
        Two bug fixes courtesy of Steve Wood. First, in __sbh_release_region,
        I had a reference to the region descriptor *after* is had been freed.
        Second, in __sbh_decommit_pages, I was not updating the global count
        of decommitable pages.

-----------------------------------------------------------------

Wed 03-Apr-96   (SteveSa)

makefile
makefile.inc
srcrel\mkdirs.sed
srcrel\mkfiles.sed
srcrel\pd-b
	Changes to support building the old IOSTREAMS as a separate library.
	The DLL models are not yet built because of DLL model problems.

The following files were renamed to work around conflicts with the new
standard C++ library files of the same names:

crtw32\iostream\ios.cpp --> _ios.cpp
crtw32\iostream\iostream.cpp --> _iostream.cpp
crtw32\iostream\strstrea.cpp --> _strstre.cpp

-----------------------------------------------------------------

Thu 28-Mar-96   (GregF)

crtw32\dos\fullpath.c
        Fixed potential memory leak (Speed bug 5818). Detab-ed. Also, cleaned
        up the Mac version formatting and changed ismbcscode to __ismbcscode.

crtw32\lowio\mktemp.c
        Detab-ed. Also, changed ismbcscode to __ismbcscode.

-----------------------------------------------------------------

Tue 26-Mar-96   (GregF)

crtw32\misc\dbgheap.c
        Added support for small block heap (should have been part of
        yesterday's checkin).

-----------------------------------------------------------------

Mon 25-Mar-96   (GregF)

makefile.inc

crtw32\h\malloc.h, winheap.h

crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
            malloc.c, msize.c, realloc.c, sbheap.c (new file)

libw32\msvcrt.src

libw32\include\malloc.h

srcrel\pd-b

        Small-block heap. Core code is in sbheap.c, with most of the new
        types and constants being in winheap.h.

-----------------------------------------------------------------

Fri 22-Mar-96   (JamesMa)

crtw32\stdhpp\xutility - min & max templates renamed to _cpp_min, _cpp_max.
crtw32\stdhpp\new - set_new_handler() now _CRTIMP.
crtw32\stdhpp\yvals.h - true & false now if !defined(...).
crtw32\stdhpp\xlocale - various occurrences of _M1 & _M2 replaced with
	_M01 and _M02.
crtw32\stdhpp\algorithm, deque, limits, list, map, vector, xmemory - various
	occurrences of _T replaced with _TYPE.

-----------------------------------------------------------------

Fri 22-Mar-96   (GregF)

crtw32\time\tzset.c
        Clear _dstbias when there is no DST. In NT 3.51, and maybe other
        builds, GetTimeZoneInformation will return TIME_ZONE_ID_DAYLIGHT
        if automatic DST adjustment is shut off in the control panel. This
        leads to a bug in the CRT's time() function (Speed bug 5252).

-----------------------------------------------------------------

Tue 19-Mar-96   (JamesMa)

crtw32\h\math.h - bug fix in _Pow_int template.
crtw32\h\minmax.h - new file, contains old-style min/max macros (for MFC).
crtw32\stdhpp\minmax - file removed (MFC can't use min/max templates).
crtw32\stdhpp\xutility - min & max templates restored, <minmax> removed.
srcrel\pd-b - stdhpp\minmax removed, crtw32\h\minmax.h added.

-----------------------------------------------------------------

Mon 18-Mar-96   (JamesMa)

crtw32\stdhpp\xutility - min & max macros broken out, includes <minmax>.
crtw32\stdhpp\minmax - new file, containing min & max templates (for MFC).
crtw32\stdhpp\exception - now includes <eh.h>.
crtw32\h\eh.h - added terminate_handler, unexpected_handler.
crtw32\h\ctype.h - ifxxx inlines are now gone altogether.
crtw32\h\tchar.h - 'extern "C"' blocks no longer nested.
libw32\include\eh.h, ctype.h, tchar.h - as above.
srcrel\pd-b - stdhpp\minmax added.

-----------------------------------------------------------------

Mon 18-Mar-96	(SteveSa)

crtw32\dllstuff\crtlib.c
crtw32\h\stdlib.h
libw32\msvcrt.src
libw32\include\stdlib.h
	Fix declaration and definition of global variable "_fileinfo" so that
	it works with the /MD models.  In VC++ v4.0/4.1 the variable is not
	declared at all for the /MD and /MDd models.

-----------------------------------------------------------------

Sat 16-Mar-96	(RichardS)

crtw32\h\doscalls.h
crtw32\h\error.h
crtw32\h\error2.h
crtw32\h\oscalls.h
srcrel\makefile
srcrel\pd-b
	Remove doscalls.h, error.h, error2.h

-----------------------------------------------------------------

Fri 15-Mar-96	(RichardS)

makefile
makefile.sub
doc\copycrt.bat
doc\crtdrop.xls
libw32\buildall.cmd
libw32\makefile
srcrel\external.mkf
srcrel\mkclnmkf.c
srcrel\objects.mkf
	Replaced lego and puma references with bbt

-----------------------------------------------------------------

Mon 04-Mar-96   (JamesMa)

crtw32\exec\cenvarg.c - now calls __crtGetEnvironmentStringsA() as needed;
	frees env. buffers on exit.
crtw32\h\math.h, libw32\include\math.h - #ifdef __cplusplus no longer
	ifstripped out.

-----------------------------------------------------------------

Tue 05-Mar-96   (SteveSa)

makefile -
	Add crtw32/stdcpp to list of target directories in which to build

makefile.inc
	Add "stdcpp.lib" to list of targets, and define its constituent OBJs.

makefile.sub
	Add -I../stdhpp to the options when compiling C++ sources.
	This picks up the new C++ header files when compiling C++ files.

crtw32/stdcpp/_tolower.c
crtw32/stdcpp/_toupper.c
crtw32/stdcpp/xmbtowc.c
crtw32/stdcpp/xstrcoll.c
crtw32/stdcpp/xstrxfrm.c
crtw32/stdcpp/xwcscoll.c
crtw32/stdcpp/xwcsxfrm.c
crtw32/stdcpp/xwctomb.c -
	Various edits to fix problems with multi-threaded support and so on.

crtw32/stdhpp/typeinfo
	Add _CRTIMP to the base class upon which exception is defined.
	Since exception itself is _CRTIMP, what it is based upon must also be.

srcrel/pd-b -
	updated to include recently added files

srcrel/msvc40.if -
	Added new symbols mentioned in new and changed header files

-----------------------------------------------------------------

Mon 04-Mar-96   (JamesMa)

The following headers were modified to incorporate PlumHall work:
	stdexcpt.h, new.h, ctype.h, wchar.h, stdio.h

The following headers were modified to simply include the corresponding
PlumHall header, #ifndef _OLD_IOSTREAMS:
	fstream.h, iomanip.h, ios.h, iostream.h, istream.h, ostream.h,
	streambuf.h, strstrea.h

The following header was essentially removed - the whole body is now
#ifdef _OLD_IOSTREAMS:
	stdiostr.h

The PlumHall header file EXCEPTION was modified to remove material duplicated
in eh.h.

Also, time\strftime.c was modified to incorporate PlumHall locale work.

-----------------------------------------------------------------

Wed 28-Feb-96   (SteveSa)

srcrel/pd-b
	Brought up to date with v4.2 project

srcrel/makefile
	Modified to allow automated regeneration of srcrel/pd-b

srcrel/mkclnmkf.c
	Support added to copy crtw32/stdcpp and crtw32/stdhpp directories.

srcrel/mkfiles.sed
	Ignore files of the form *.scc when cleansing/copying sources

Also, five header files in the crtw32/stdhpp directory were deleted because
they were modified versions of files already in crtw32/h.  These were math.h,
stdio.h, stdlib.h, string.h, and wchar.h.

-----------------------------------------------------------------

Tue 28-Feb-96   (SteveSa)

crtw32/stdcpp/* - new directory and files
crtw32/stdhpp/* - new directory and files

Add new directories crtw32/stdcpp and crtw32/stdhpp which contain the new
Standard C++ source files and header files, respectively.

-----------------------------------------------------------------

Wed 21-Feb-96   (SteveSa)

log_v41.txt
crtw32\misc\dbgheap.c
	Propogated from the v4.1 tree (last minute bug fix)
	Protected call to HeapValidate() in _CrtIsValidHeapPtr() so
	that it is only made on Windows NT.  HeapValidate() is NOT
	supported on Windows 95 or Win32s.

-----------------------------------------------------------------

Tue 19-Feb-96   (SteveSa)

crtw32/startup/stdenvp.c -
	Global pointer _aenvptr/_wenvptr is set to NULL after the block
	to which it points (a copy of the environment strings) is freed.

srcrel/_sample_.rc
	Some edits to make this file more closely match libw32/msvcrt.rc

-----------------------------------------------------------------

Mon 18-Feb-96   (SteveSa)

log_v41.txt
crtw32\lowio\osfinfo.c
	propogated from the v4.1 tree (last minute bug fix)

-----------------------------------------------------------------

Thu 15-Feb-96	(SteveSa)

log.txt -> log_v41.txt
	Renamed old LOG.TXT from V4.1 and started a new LOG.TXT (this file).

Then I made two major changes:

1) renamed the output DLLs:
	MSVCRT40.DLL to MSVCRT.DLL
and	MSVCR40D.DLL to MSVCRTD.DLL

2) removed IOSTREAMS from the libraries

To accomplish this, I renamed the following source files (contents unchanged):

crtw32/dllstuff/macdll/
	msvcrt40.def -> msvcrt.def
	msvcrt40.r   -> mscvrt.r
	msvcr40d.def -> msvcrtd.def

libw32/
	msvcrt40.rc  -> msvcrt.rc

Files modified:

	libw32/msvcrt.src
	makefile
	makefile.inc
	srcrel/external.mkf
	srcrel/mkclnmkf.c
	srcrel/mkdirs.sed
	srcrel/mkfiles.sed
	srcrel/objects.mkf
	srcrel/pd-b

-----------------------------------------------------------------
***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v4.2 (relative to v4.1)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log_v50.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v5.0 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 4.2).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------

Thu 09-Jan-97   (JamesMa)

crtw32\stdhpp\xutility, libw32\include\xutility
        _MIN & _MAX template names were changed back to _cpp_min & _cpp_max, as documented.

-----------------------------------------------------------------

Wed 08-Jan-96	(GregF)

crtw32\h\wchar.h
crtw32\stdhpp\complex, iomanip, iosfwd, istream, limits, locale, new, string,
	utility, wctype.h, xcomplex, xiosbase, xlocale, xlocmon, xlocnum, 
	xloctime, ymath.h
libw32\include\complex, iomanip, iosfwd, istream, limits, locale, new, string,
	utility, wchar.h, wctype.h, xcomplex, xiosbase, xlocale, xlocmon, xlocnum,
	xloctime, ymath.h
		Added __cdecl-s to function definitions and prototypes where necessary
		in order to pass the C++ conformance tests when built -Gr or -Gz (the 
		tests, not the C++ rtl sources)

-----------------------------------------------------------------

Thu 19-Dec-96   (v-JohnMo)

makefile, makefile.inc, srcrel\objects.mkf, srcrel\pd-b,
crtw32\helper\lsources,
crtw32\helper\sources.nt,
crtw32\string\lsources,
crtw32\string\sources.nt
	add helper functions for intrinsic memcpy & memset,
	build separate memmove file
crtw32\helper\ppc\memcpy_.s
	intrinsic helper for memcpy
crtw32\helper\ppc\memset_.s
	intrinsic helper for memset
crtw32\string\ppc\memcmpp.s
	improve memcmp performance
crtw32\string\ppc\memcpyp.s
	forward memcpy() to __memcpy()
crtw32\string\ppc\memmovep.s
	separated memmove() from memcpy()
crtw32\string\ppc\memsetp.s
	forward memset() to __memset()
crtw32\startup\ppc\chkstk.s
	correct function table definition
crtw32\eh\ppc\handlers.s
	add descriptors for new entry points so they can be exported
libw32\msvcrt.src
	export new entry points for EH helper

-----------------------------------------------------------------

Wed 11-Dec-96   (Richk)

crtw32\stdhpp\xstring, libw32\include\xstring
        In _Split, do not split data if frozen (refcnt is -1).
crtw32\stdhpp\xcomplex, libw32\include\xcomplex
		Cast floating constants to avoid compiler warnings.

-----------------------------------------------------------------

Wed 11-Dec-96   (JamesMa)

crtw32\stdhpp\xlocale, crtw32\stdhpp\xiosbase, crtw32\stdhpp\xcomplex
libw32\include\xlocale, libw32\include\xiosbase, libw32\include\xcomplex
crtw32\stdcpp\xfexp.c, crtw32\stdcpp\xfsinh.c
        Casts now required to avoid newly-generated warnings.

-----------------------------------------------------------------

Tue 10-Dec-96   (JamesMa)

makefile, cleanbld.cmd, clns_bld.bat
srcrel/makefile, srcrel/external.mkf, srcrel/bldnt.cmd, srcrel/bldwin95.bat
        Environment variable "V4TOOLS" replaced by "V5TOOLS".

-----------------------------------------------------------------

Fri 06-Dec-96   (JamesMa)

crtw32\stdhpp\new, crtw32\h\new.h, libw32\include\new, libw32\include\new.h
        Both new.h & new now have the inline placement new(), both
        #ifndef __PLACEMENT_NEW_INLINE.

All released source files (and then some) have had their copyright
        notices updated to 1997.

-----------------------------------------------------------------

Fri 06-Dec-96   (GregF)

crtw32\stdhpp\memory
libw32\include\memory
		Replace member template functions in auto_ptr<_Ty> with, essentially, 
		their 'specializations' for _Ty. Note, the compiler does NOT support
		member template functions.

-----------------------------------------------------------------

Thu 05-Dec-96   (JamesMa)

crtw32\stdhpp\ostream, crtw32\stdhpp\iosfwd
libw32\include\ostream, libw32\include\iosfwd
        Numerous __cdecl's added, esp. to insertion and extraction
        operators (Orion 18173). Another tip of the hat to RichardS ...

-----------------------------------------------------------------

Wed 04-Dec-96   (Richk)

libw32\include\algorithm
crtw32\stdhpp\algorithm
		In _Buffered_merge_sort, the second call to _Chunked_merge
		must not use _F ("first" iterator for start of sorting area
		in the container) as the third parameter as it is modified to
		be the end of the merge area.  This modification is needed
		for the first _Chunked_merge call, but not the second.

-----------------------------------------------------------------

Wed 04-Dec-96   (JamesMa)

crtw32\h\new.h, libw32\include\new.h
        No longer includes <new> (Orion 16439).
crtw32\stdcpp\newop.cpp
        Throwing new() now /Za only, i.e. removed.
crtw32\stdhpp\new, libw32\include\new
        new_handler moved up to global scope.

-----------------------------------------------------------------

Tue 03-Dec-96   (Richk)

libw32\include\algorithm
crtw32\stdhpp\algorithm
		For rotate_copy, merge, set_union, and set_symmetric_difference,
		do not use temp iterator on left side of assign because output
		iterators will not support it.  Nest the copy calls to avoid this.

-----------------------------------------------------------------

Thu 28-Nov-96   (Richk)

libw32\include\xstring
crtw32\stdhpp\xstring
		For erase and replace on multiply-referenced string,
		split the reference away to avoid aliasing change to
		the other string objects.

-----------------------------------------------------------------

Tue 26-Nov-96   (Richk)

libw32\include\complex, iosfwd, istream, locale, ostream,
               xlocinfo, xlocmon, xloctime
crtw32\stdhpp\complex, iosfwd, istream, locale, ostream,
              xlocinfo, xlocmon, xloctime
crtw32\stdcpp\dlldef.cpp
		Finish moving iostream, locale, and complex into
		C++ DLL.

-----------------------------------------------------------------

Fri 22-Nov-96   (GregF)

crtw32\eh\unhandld.cpp
		Explicitly install __CxxUnhandledExceptionFilter during C init., 
		remove it during C term. Also, cleaned up the format a bit so I could
		read it.

-----------------------------------------------------------------

Thu 21-Nov-96   (JamesMa)

makefile
        Added debug info to BBT builds of msvc[i|p]rt.lib.

-----------------------------------------------------------------

********************************************************************
***** MSVC++ 5.0 BETA RELEASE #2 -- Wednesday 20 November 1996 *****
********************************************************************

-----------------------------------------------------------------

Tue 12-Nov-96   (Richk)

libw32\include\istream, ostream
crtw32\stdhpp\istream, ostream
		Prevent memory leak for strstream object due to initializing
		basic_ios::init twice.

-----------------------------------------------------------------

Sun 10-Nov-96   (GregF)

crtw32\stdhpp\iosfwd, xiosbase, xlocale, xtree
crtw32\stdcpp\locale.cpp, locale0.cpp, wlocale.cpp, xlocale.cpp
libw32\include\iosfwd, xiosbase, xlocale, xtree
        Minor changes to serialize access to static data members of templates
        and classes.

-----------------------------------------------------------------

Sat 09-Nov-96   (Richk)

libw32\include\new, memory, valarray
		Proxy checkin for updated crtw32\stdhpp files.
crtw32\stdhpp\fstream, libw32\include\fstream
		Decrement locale use count before allocating it a second
		time to prevent memory leak..
crtw32\stdhpp\xlocale, libw32\include\xlocale
		Use atexit to free _Ctype._Table so it is not leaked.

-----------------------------------------------------------------

Thu 07-Nov-96   (JamesMa)

crtw32\stdcpp\Xsinh.c, Xfsinh.c, Xlsinh.c
        Bug fix for Orion 15295: _Sinh() & co. were calculated incorrectly.

-----------------------------------------------------------------

Wed 06-Nov-96   (JamesMa)

crtw32\stdhpp\new, crtw32\heap\stdnew.cpp
        Moved set_new_handler() from namespace std back to global scope.
crtw32\stdhpp\memory
        Now using member templates in auto_ptr (Orion 15092).
crtw32\stdhpp\valarray
        Transcendental valarry operators (e.g. tanh) now resolve to global
        scope (Orion 15011).

-----------------------------------------------------------------

Sat 02-Nov-96   (Richk)

makefile, makefile.inc (changed)
crtw32\stdhpp\complex, exception, iomanip, iosfwd, limits, locale,
              new, stdexcept, strstream, wctype.h, xiosbase, xlocale,
			  xlocinfo, xlocinfo.h, xlocnum, xmemory, xstddef,
			  xstring, ymath.h, yvals.h (changed)
crtw32\stdcpp\_tolower.c, _toupper.c, fiopen.cpp, iomanip.cpp,
              ios.cpp, iostream.cpp, locale.cpp, newop.cpp,
			  nomemory.cpp, string.cpp, strstrea.cpp, uncaught.cpp,
			  wctrans.c, wctype.c, wiostrea.cpp, xcosh.c, xdnorm.cpp,
			  xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
			  xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c,
			  xlcosh.c, xldnorm.c, xldscale,c, xldtest.c, xlexp.c,
			  xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmbtowc.c,
			  xpoly.c, xsinh.c, xstod.c, xstrcoll.c, xstrxfrm.c,
			  xvalues.c, xwctomb.c (changed)
crtw32\stdcpp\delop_s.cpp, dlldef.cpp, newop_s.cpp, newop2_s.cpp (added)
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b (changed)
libw32\msvcp50.rc (added)
libw32\include\algorithm, bitset, cassert, cctype, cerrno. cfloat,
               ciso646, climits, clocale, cmath, complex, csetjmp,
               csignal, cstdarg, cstddef, cstdio, cstdlib, cstring,
			   ctime, cwchar, cwctype, deque, exception, fstream,
			   functional, iomanip, ios, iosfwd, iostream, iso646.h,
			   istream, iterator, limits, list, locale, map, memory,
			   new, numeric, ostream, queue, set, sstream, stack,
			   stdexcept, stl.h, streambuf, string, strstream,
			   typeinfo, use_ansi.h, utility, valarray, vector,
			   wctype.h, xcomplex, xiosbase, xlocale, xlocinfo,
			   xlocinfo.h, xlocmon, xlocnum, xloctime, xmath.h,
			   xmemory, xstddef, xstring, xtree, xutility, ymath.h,
			   yvals.h (added)
			   wchar.h (changed)
        Files changed and added to support first cut of DLL version
        of C++ standard libraries.

-----------------------------------------------------------------

Fri 01-Nov-96   (JamesMa)

crtw32\stdhpp\yvals.h
        Warning C4244 moved from disabled to /W4; C4514 added to disabled list.
doc\copycrt.bat
        Added msvcp50.dll, removed msvcrt40.dll, all headers assumed to be in
        libw32\include, made BBT drop to x86e automatic.
doc\copysrc.bat
        Added delop_s.cpp, dlldef.cpp, newop_s.cpp, newop2_s.cpp and xcomplex
fpw32\tran\tran.mkf, lsources
        Removed 87csqrt & 87ctrig, which contained only "old" variants.
fpw32\tran\i386\87ctran.asm, 87ctriga.asm, 87sqrt.asm, 87tran.asm, 87trig.asm, 87triga.asm
        Cleansed all "old" variant code, primarily jump tables.

-----------------------------------------------------------------

Thu 31-Oct-96   (JamesMa)

crtw32\stdcpp\iomanip.cpp, ios.cpp, iostream.cpp, locale.cpp, locale0.cpp,
            newop.cpp, newop2.cpp, nomemory.cpp, string.cpp, xlock.cpp
        Upgraded to Plauger's 10/30/96 drop.
crtw32\stdhpp\algorithm, bitset, complex, deque, exception, fstream, functional,
            iomanip, ios, iosfwd, iostream, istream, iterator, limits, list,
            locale, map, memory, new, numeric, ostream, queue, set, sstream, stack,
            stdexcept, stl.h, streambuf, string, strstream, typeinfo, utility,
            valarray, vector, xiosbase, xlocale, xlocinfo, xlocinfo.h, xlocmon,
            xlocnum, xloctime, xmemory, xstddef, xstring, xtree, xutility, yvals.h
        Upgraded to Plauger's 10/30/96 drop.
crtw32\stdhpp\xcomplex
        New file in Plauger's 10/30/96 drop.
crtw32\heap\setnewh.cpp
        set_new_handler() now in namespace std.

-----------------------------------------------------------------

Wed 30-Oct-96   (JamesMa)

makefile
        Added "-opt:NOICF" to bbt\msvcrt.dll link.
libw32\msvcrt.rc, libw32\msvcirt.rc, libw32\msvcp42.rc
        Rev'ed "Copyright" to "1981-1997"
srcrel\_sample_.rc
        Rev'ed "Copyright" to "1981-1997", "ProductVersion" to "5.00.0000"

-----------------------------------------------------------------

Tue 22-Oct-96   (JamesMa)

makefile
        Removed "-pdb:none" from bbt\msvcrt.dll link.

-----------------------------------------------------------------

Tue 22-Oct-96   (GregF)

crtw32\misc\assert.c
        Fixed an overwrite of the user's filename string and a miscount of
        newline characters (double-newline was being counted as a single
        newline).

-----------------------------------------------------------------

Sat 13-Oct-96   (Richk)

crtw32\stdhpp\xstring
    In Grow member function of string, deallocate old string once copy
		of data is complete.  This caused a memory leak.
crtw32\stdcpp\locale.cpp
	In locale::global, remove _Incref() to new global locale since
		it is initialized with a reference count already at 1.  This
		extra reference caused the object not to be freed when released
		causing a substantial memory leak.
	In locale::global, map category type for setlocale call from internal
		mask format (_M_xxx) to the standard type (LC_xxx).

-----------------------------------------------------------------

Fri 10-Oct-96  (GregF)

crtw32\time\time.c, tzset.c
        Fixed two cases where the return from GetTimeZoneInformation was 
        being trusted too much. One of these was DevStudio96 #9134.

-----------------------------------------------------------------

*****************************************************************
*****   MSVC++ 5.0 BETA RELEASE #1 -- Monday 7 October 1996 *****
*****************************************************************

-----------------------------------------------------------------

Sun 06-Oct-96   (JamesMa)

crtw32\stdhpp\xlocinfo, xlocinfo.h
	"__cdecl"s added; another tip of the hat to the inimitable RichardS.
crtw32\h\math.h, libw32\include\math.h
	_Pow_int template no longer #ifndef _MSC_EXTENSIONS (Orion 11665).
makefile
	Fixed typo preventing creation of bbt\msvcirt.lib.

-----------------------------------------------------------------

Sat 05-Oct-96   (Richk)

crtw32\stdhpp\istream, ostream
    fix insertion and extraction overloads for narrow and wide
	streams.

-----------------------------------------------------------------

Mon 30-Sep-96   (GregF)

crtw32\stdcpp\_tolower.c, xmbtowc.c, xstrcoll.c, xwctomb.c
        Made _Getctype, mbrlen, mbrtowc, mbsrtowcs, _GetColl, _Getcvt and
        wcsrtombs multithread safe.

-----------------------------------------------------------------

Thu 26-Sep-96   (Richk)

crtw32\string\i386\memcpy.asm
    total rewrite to optimize Pentium execution speed

-----------------------------------------------------------------

Sun 22-Sep-96   (BryanT)

crtw32\misc\mips\setjmpex.s, longjmp.s
	MIPS - Save/Restore the volatile registers during setjmp/longjmp

-----------------------------------------------------------------

Fri 20-Sep-96   (JamesMa)
crtw32\stdhpp\ios, strstream, new
	"__cdecl"s added; a tip of the hat to the inimitable RichardS.

-----------------------------------------------------------------

Thu 12-Sep-96   (JamesMa)

crtw32\eh\i386\lowhelpr.asm
	Label _NLG_Return moved above new pops (Orion 9224).

-----------------------------------------------------------------

Tue 10-Sep-96   (JamesMa)

crtw32\h\math.h, libw32\include\math.h
	ANSI C++ overloaded prototypes are now #ifndef _MSC_EXTENSIONS,
	i.e. -Za only (Orion 5869).
srcrel\msvc40.if
	Added _MSC_EXTENSIONS to 3rd class of defines.
crtw32\misc\splitpat.c
	Test length of input string before accessing (Orion 7985).
crtw32\stdio\output.c
	Local struct "string" renamed to "_count_string" (Orion 8710).
crtw32\stdhpp\set
	Allocator ref changed to const in multiset constructor (Orion 8516).
crtw32\stdhpp\limits
	Added 'numeric_limits<bool>' (Orion 8054).

-----------------------------------------------------------------

Sun 08-Sep-96   (Richk)

crtw32\stdcpp\_tolower.c
    in _Getctype, backed out change due to MT concerns.

-----------------------------------------------------------------

Sun 08-Sep-96   (Richk)

crtw32\stdhpp\xstring
	when reducing string size, limit the initial copy of the old
	contents to the string size available, so it is not overwritten
crtw32\stdhpp\xlocale
    use atexit to destroy static ctype::_Cltab on program termination
	to avoid memory leak
crtw32\stdcpp\_tolower.c
    in _Getctype, make return structure value a static to avoid
	returning a pointer to deallocated stack

-----------------------------------------------------------------

Fri 06-Sep-96   (JamesMa)

libw32\msvcrt.src, libw32\msvcirt.src
	For non-x86 platforms, private exports of virtual deleting destructors
	are now cdecl (mangled names @@UAA... vs. @@UAE...) Thanks, BryanT!

-----------------------------------------------------------------

Thu 06-Sep-96   (Richk)

libw32\include\iomanip.h, crtw32\h\iomanip.h
	change initialization macros to handle reference definition
crtw32\iostream\_strste.cpp
	add strstream constuctor to use unsigned ints
crtw32\stdhpp\xtree
	for _tree, change nil from allocated to static node	to avoid
	memory leak
crtw32\stdhpp\xlocale
    in use_facet, register atexit routine to delete created
	class instance that caused memory leaks

-----------------------------------------------------------------

Wed 04-Sep-96   (JamesMa)

libw32\msvcrt.src, libw32\msvcirt.src
	Added private exports of virtual deleting destructors.
	NOTE: front-end version .6239 or greater is now required!

-----------------------------------------------------------------

Fri 30-Aug-96   (SteveSa)

crtw32\eh\i386\lowhelpr.asm
	Save and restore ESI+EDI around call to "funclet".

-----------------------------------------------------------------

Wed 28-Aug-96   (JamesMa)

Major check-in of Intel floating-point transcendentals.
New files in fpw32\tran\i386:
	common.asm, genexcep.asm, asin.asm, acos.asm,
	atan.asm, sin.asm, cos.asm, tan.asm, log.asm,
	log10.asm, pow.asm and sqrt.asm
Older routines were renamed as "_old_XXX" but temporarily
retained for testing purposes; modified files in fpw32\tran\i386:
	87tran.asm, 87ctran.asm, 87trig.asm, 87ctrig.asm,
	87triga.asm, 87ctriga.asm, 87sqrt.asm, 87csqrt.asm
fpw32\inc\i386\elem87.inc
	Added default_CW & DEFAULT_CW_without_precision for Intel mods.
fpw32\tran\bessel.c
	Disabled warning 4056.
fpw32\tran\lsources
	Added new files, as above.
crtw32\h\math.h, libw32\include\math.h
	Added inline long __cdecl abs(long); also __cdecls to other inlines.

-----------------------------------------------------------------

Mon 26-Aug-96   (Richk)

libw32\include\setjmp.h
libw32\include\setjmpex.h
libw32\include\stdio.h
libw32\include\wchar.h
		Checked in cleansed versions of files from crtw32\h.

-----------------------------------------------------------------

Fri 23-Aug-96   (GregF)

crtw32\stdcpp\locale0.cpp
crtw32\stdhpp\xlocale
		Added _Term() to the locale class and register it with a call to
		atexit() in _Init() when _Init() creates the _Global object (1st time
		it is called, I believe). The purpose of _Term() is clean up the
		_Global object. This partially fixes 5162.

-----------------------------------------------------------------

Wed 21-Aug-96   (SteveSa)

crtw32\stdhpp\bitset
	Added a pair of missing parentheses to fix bad code which caused a
	crash when a BOOL was written to an ostream.  (Morale of the story:
	pay attention to the order of evaluation of << and ?: operators!)

-----------------------------------------------------------------

Wed 21-Aug-96   (GregF)

crtw32\misc\winsig.c, winxfltr.c
	The table overrun fixes of two days ago weren't right in the multi-
	thread case (where each thread has its own copy of the exception
	action table).

-----------------------------------------------------------------

Tue 20-Aug-96   (Richk)

crtw32\stdhpp\LIST
	Fix for Orion 7276 - on list assignment, fixed initial copy.

-----------------------------------------------------------------

Mon 19-Aug-96   (GregF)

crtw32\misc\winsig.c, winxfltr.c
	Fixed potential overruns of _XcptActTab (exception action table). This
	was DevStudio96 7390.

crtw32\stdcpp\newop.cpp
	Fixed memory leak. This was DevStudio96 4192.

-----------------------------------------------------------------

Sat 17-Aug-96   (Richk)

crtw32\stdhpp\OSTREAM
	Fix for Orion 4489 - Reset width() after output of basic_streambuf.
crtw32\stdhpp\XLOCNUM
	Fix for Orion 4491 - NULL in _GetIfld processed incorrectly.

-----------------------------------------------------------------

Thu 15-Aug-96   (JamesMa)

crtw32\stdhpp\deque
	Fix for Orion 7214.
crtw32\exec\cenvarg.c
	32K limitations on spawn removed (Orion 2161).

-----------------------------------------------------------------

Wed 14-Aug-96   (SteveSa)

crtw32\stdhpp\fstream
	Added failure checks to what amounts to fopen() calls in c-tors
	for basic_istream, basic_ostream, and basic_iostream.

-----------------------------------------------------------------

Wed 14-Aug-96   (JamesMa)

crtw32\stdhpp\yvals.h
	Various 'bool' typedefs are now #ifndef __BOOL_DEFINED.

-----------------------------------------------------------------

Tues 13-Aug-96   (JamesMa)

fpw32\tran\ieeemisc.c
	Rearranged order of tests in _fpclass() to keep "if (x==0.0)", which
	now uses FP hardware, from raising EM_DENORMAL (Orion 7266).
crtw32\h\stdlib.h
	Added inline long abs(long) for ANSI conformance (Orion 4494).

-----------------------------------------------------------------

Tues 13-Aug-96   (BryanT)

crtw32\h\setjmp.h, setjmpex.h
        MIPS only - Add macros for _setjmp and _setjmpex (not just setjmp/setjmpex)
	to convert to Vfp versions.

-----------------------------------------------------------------

Wed 07-Aug-96   (GregF)

crtw32\mbstring\i386\mbsdup.asm
        Deleted.

crtw32\string\i386\strdup.asm
        Deleted.

doc\copysrc.bat
srcrel\pd-b
        References to the two files above were deleted.

        The x86 assembler version of strdup had no advantage over the C
        version, and had the disadvantage that it didn't call the debug malloc
        in the debug build. So, I got rid of it (thereby fixing DevStudio #6810).

-----------------------------------------------------------------

Tue 30-Jul-96   (GregF)

crtw32\stdio\tempnam.c
        Changed the way we ensure the temporary filename is of legal length.
        As part of this, pathnames of temp. files are allowed to be up to
        FILENAME_MAX characters (260). This change corrects DevStudio96 4548
        (a very long loop, apparently infinite to a user, when the filename
        prefix is too long). Also, cleaned up the format a bit.

-----------------------------------------------------------------

Thu 25-Jul-96   (SteveSa)

makefile
	Re-based msvcirtd.dll (and the future msvcprtd.dll) up so that
	it dos (they do) not conflict with msvcrtd.dll.

crtw32\stdio\output.c
	Added initialization of local variable "textlen" so that it is
	not some outrageous random value in the case of an unsupported
	format specifier (for example, "%B").

-----------------------------------------------------------------

Thu 25-Jul-96   (GregF)

crtw32\lowio\close.c
        Reset the lowio info even if the CloseHandle fails. Specifically
        check for the case where the underlying Win32 HANDLE value is
        INVALID_FILE_HANDLE and do not treat this as an error. The purpose
        of the change is to always allow a Crt handle to be reused after an
        explicit _close (see DevStudio96 #5845).

-----------------------------------------------------------------

Thu 18-Jul-96   (SteveSa)

makefile
makefile.inc
srcrel\objects.mkf
	No longer build the forwarder DLLs (msvcrt40.dll, msvcr40d.dll)
	unless the environment variable BLD_FWDR==1.  Also fixed a
	reference in makefile to a temporary file used to build BBT
	version of msvcirt.dll.  (A release temp file was used instead.)

-----------------------------------------------------------------

Thu 18-Jul-96   (GregF)

crtw32\h\mtdll.h
crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
        Fixed a race condition in the locale locking scheme.

-----------------------------------------------------------------

Wed 17-Jul-96   (GregF/SteveSa)

crtw32\string\i386\memicmp.asm
crtw32\string\i386\stricmp.asm
crtw32\string\i386\strnicmp.asm
	Changed serialized access to _unguarded_lc_active to use
	the LOCK prefix on increment / decrement instructions to
	prevent synchronization problems on multi-processor systems.

libw32\msvcrt.rc
libw32\msvcirt.rc
libw32\msvcprt.rc
libw32\msvcrt40.rc
	Change DLL version numbers and strings from 4.30 to 5.00.  (Except
	for msvcrt40.rc, which was 4.2000 (rather than 4.20 or 4.30) for
	historical reasons, but which is now a more sensible 5.00 like the
	rest of the DLLs.)

crtw32\stdcpp\xlocale.cpp
	Added some missing declarations.  These should have been there
	for VC++ 4.2, but the compiler (apparently incorrectly) defined
	those symbols automagically.

-----------------------------------------------------------------

Tue 16-Jul-96   (GregF/SteveSa)

crtw32\h\mtdll.h
	Changed serialized access to _unguarded_lc_active to use
	InterlockedIncrement/InterlockedDecrement rather than ++/--.

crtw32\convert\_mbslen.c
crtw32\string\strcoll.c, stricoll.c, strncoll.s, strnicol.c
crtw32\string\wcscoll.c, wcsicoll.c, wcsncoll.s, wcsnicol.c
	Add a missing call to _unlock_locale() in one error return
	in each of these files.

-----------------------------------------------------------------

Tue 16-Jul-96   (GregF)

fpw32\conv\tenpow.c
fpw32\tran\alpha\ieee.c
        Added parentheses to fix precedence problems in several expressions.
        Errors were found by Johnny Lee and passed along by Bryan Tuttle.

-----------------------------------------------------------------

Wed 10-Jul-96   (GregF)

crtw32\lowio\chsize.c, close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
             fstat.c, initcon.c, ioinit.c, isatty.c, locking.c, lseek.c,
             mktemp.c, open.c, osfinfo.c, read.c, setmode.c, tell,c,
             txtmode.c, write.c
        A variety of changes related to target platform macros and formatting.
        I replaced defined(_WIN32) with !defined(_MAC), replaced
        defined(_M_M68K) || defined(_M_MPPC) with defined(_MAC), purged
        DLL_FOR_WIN32S, deleted obsolete REG* macros, replaced obsolete
        _CALLTYPE* macros with __cdecl. Where appropriated, I detab-ed the
        source and cleaned up the format a bit.

-----------------------------------------------------------------

Wed 10-Jul-96   (GregF)

crtw32\h\winheap.h
crtw32\heap\expand.c, free.c, heapinit.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c
        Package of improvements to the small-block heap. Basically, I changed
        the definitions of the small-block heap types so as to reduce index
        expressions. Many (most?) of the specific changes were suggested by
        Steve Wood.

-----------------------------------------------------------------

Tue 02-Jul-96   (GregF)

crtw32\dos\access.c, chdir.c, chmod.c, dosmap.c, drive.c, fullpath.c, getcwd.c,
           getpid.c, mkdir.c, rename.c, rmdir.c, stat.c, unlink.c
        Replaced #ifdef _WIN32 with #ifndef _MAC. Detab-ed and cleaned up the
        format where it varied wildly within a source (as it generally did).
        Also, replaced instances of the old, old _CALLTYPE1 with __cdecl.

-----------------------------------------------------------------

Fri 28-Jun-96   (GregF)

crtw32\dllstuff\atonexit.c, cinitexe.c, crtdll.c, crtexe.c, crtlib.c,
                xncommod.c, xntxtmode.c
        Purged Win32s support (__win32sflag, DLL_FOR_WIN32S). Replaced
        defined(_WIN32) with !defined(_MAC). Cleaned up format as necessary.

-----------------------------------------------------------------

Thu 27-Jun-96   (PatT)

makefile, makefile.inc, makefile.sub
crtw32\eh\
    frame.cpp, hooks.cpp, rtti.cpp, throw.cpp, user.cpp, validate.cpp
crtw32\eh\alpha\trnsctrl.cpp
crtw32\eh\i386\trnsctrl.cpp
crtw32\eh\mac\pmac\
    ehstate.cpp, exdsptch.cpp, handlers.asm, lowhelpr.asm, ntstatus.h,
    ppcinst.h, trnsctrl.cpp, unwind.asm, vunwind.cpp
crtw32\eh\mips\trnsctrl.cpp
crtw32\eh\ppc\trnsctrl.cpp
crtw32\h\
    ehassert.h, ehstate.h, trnsctrl.h
crtw32\helper\lsources
crtw32\helper\mac\pmac
    i64div.asm, i64rem.asm, i64rsh.asm, rfpr.asm, rgpr.asm, sfpr.asm, sgpr.asm,
    u64div.asm, u64rem.asm
crtw32\misc\lsources
crtw32\misc\mac\pmac
    exsup.asm, setjmp.asm
crtw32\tools\mac\ml.exe
fpw32\conv\lsources
fpw32\conv\mac\pmac
    dtoi64.asm, dtou64.asm, i64tod.asm, u64tod.asm
srcrel
    makefile, object.mkf, pd-b

	(1) Added PowerMac __int64 conversions routines and helpers
	(2) Added register save and restore millicode routines
	(3) Ported PowerPC/NT EH model to the PowerMac

-----------------------------------------------------------------

Thu 27-Jun-96   (GregF)

crtw32\convert\_mbslen.c, isctype.c, mblen.c, mbstowcs.c, mbtowc.c, tolower.c
               toupper.c, towlower.c, towupper.c, wcstombs.c, wctomb.c
        As required, purged DLL_FOR_WIN32S, replaced defined(_WIN32) with
        !defined(_MAC), and cleaned up some formatting.

-----------------------------------------------------------------

Tue 14-Jun-96   (V-rogerl)

fpw32\tran\mips\powm.s
	YAPF (Yet Another Pow Fix) propagated from V4.2.

-----------------------------------------------------------------

Wed 12-Jun-96	(GregF)

log.txt -> log_v42.txt
	Renamed old LOG.TXT from V4.2 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v5.0 (relative to v4.2)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log_v60.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v6.0 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 5.0).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------

Thu 04-Feb-99   (GregF)

crtw32\startup\crt0dat.c
crtw32\dllstuff\crtdll.c
    Changed terminator execution loop slightly so that atexit() routines may
    register additional atexit routines.  This fixes VisualStudio7 6787

crtw32\convert\wcstol.c
    Added a range check on each wide char before calling __ascii_isw*() with 
    it.  This fixes NTBug 287463.

-----------------------------------------------------------------

Fri 18-Dec-98   (GregF)

crtw32\startup\tidtable.c
    Forgot to delete the code to unlink the thread locale info struct from the
    list (these structs are no longer kept in a list).

-----------------------------------------------------------------

Mon 14-Dec-98   (GregF)

crtw32\misc\initmon.c, initnum.c, setlocal.c
crtw32\start\tidtable.c
    Fixed a number of bugs beginning with a performance bug (Monte Carlo 
    #11418) which concealed the others.  The performance bug was the per-thread
    pointer to the locale information struct was not being updated.

-----------------------------------------------------------------

Fri 04-Dec-98   (JamesMa)

crtw32\eh\comerr.cpp, crtw32\h\comerr.h, libw32\include\comerr.h
    Removed.
crtw32\h\mtdll.h, crtw32\startup\tidtable.c
    Removed all references to _pceh as part of comerr removal.
makefile, makefile.inc, crtw32\eh\lsources, srcrel\pd-b, srcrel\objects.mkf,
crtw32\tools\win32\relinc.cmd
    Removed all references to comerr.cpp & comerr.h.
srcrel\bldnt.cmd, srcrel\bldwin95.bat
    Replaced references to VC6.0 with VC6.1 (MC bugs 8019, 8020) and pulled
    references to Mac builds from the usage messages.

-----------------------------------------------------------------

Wed 02-Dec-98   (KFrei)

crtw32\rtc\memory.cpp
    Fixed MC 11240 - I was trying to allocating memory, 
    even if allocation wasn't enabled

-----------------------------------------------------------------

Wed 02-Dec-98   (GregF)

crtw32\heap\expand.c
    Removed extra _munlock.  This fixes Monte Carlo #11187

-----------------------------------------------------------------

Tue 01-Dec-98   (KFrei)

crtw32\misc\dbgheap.c, crtw32\rtc\shadow.cpp
    Fixed RTC bug involving dbg versions of realloc & expand (another)
    Monte Carlo #11029

crtw32\rtc\memory.cpp
    Added some DebugString output when the RTC stuff is built for debugging
    I also fixed Greg's date from 01-Nov-98 to 01-Dec-98

-----------------------------------------------------------------

Tue 01-Dec-98   (GregF)

crtw32\misc\onexit.c
    Grow the atexit/_onexit more quickly. This fixes Monte Carlo #9897.

-----------------------------------------------------------------

Mon 30-Nov-98   (KFrei)

crtw32\misc\dbgheap.c
    Fixed RTC bug involving dbg versions of realloc & expand

-----------------------------------------------------------------

Tue 25-Nov-98   (KFrei)

crtw32\rtc\init.cpp, crtw32\rtc\userapi.cpp
    Fixed bug MC 10777 - Delay loaded DLLs & -RTCm crash

-----------------------------------------------------------------

Tue 24-Nov-98   (KFrei)

crtw32\h\rtcapi.h, crtw32\h\rtcsup.h, crtw32\misc\i386\chkesp.c
crtw32\rtc\init.cpp, libw32\include\rtcapi.h
    Added a new RTC callback, to be used by memory functions for -RTCm checks
    rtcapi also got new callbacks for more extensive memory checking

crtw32\h\rtcpriv.h, crtw32\rtc\shadow.cpp
    Fixed MC #10665 - problem with page tables and shadow memory
    Added parameter and reg0 (return value) pointer checking API

-----------------------------------------------------------------

Tue 24-Nov-98   (GregF)

crtw32\h\setlocal.h
crtw32\misc\setlocal.c
    Changed to handle longer specifications for the codepage, and to handle
    too long specifications without crashing. This fixes Monte Carlo 8162

crtw32\stdio\ungetwc.c
    Changed to NOT push characters back onto a string. This fixes Monte Carlo
    8052.

-----------------------------------------------------------------

Tue 24-Nov-98   (KFrei)

crtw32\rtc\shadow.cpp

    Removed a reference to InterlockedCompareExchange, which isn't available
    on Win95.

-----------------------------------------------------------------

Mon 23-Nov-98   (GregF)

crtw32\h\winheap.h
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
    malloc.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c

    Package of changes which resurrect the VC++ 5.0 small-block heap and
    implement a selection method to choose between the VC++ 6.0 small-block
    heap, the VC++ 5.0 small-block heap and no small-block heap at all.

-----------------------------------------------------------------

Thu 19-Nov-98   (JamesMa)

makefile.inc, srcrel\pd-b
    Added heap\new2.cpp, stdcpp\delaop.cpp, stdcpp\newaop.cpp, stdcpp\newaop2.cpp,
    stdcpp\delaop_s.cpp, stdcpp\newaop_s.cpp & stdcpp\newaop2_s.cpp
crtw32\heap\heap.mkf, crtw32\heap\lsources
    Added new2.obj
crtw32\heap\new.cpp
    Split off new[] to new2.cpp for better granularity.
crtw32\misc\dbgheap.c
    _crtDbgFlag now has _CRTDBG_CHECK_ALWAYS_DF set by default; also removed 2 tests
    prone to false positives and silenced error reporting from within CheckBytes().
crtw32\stdcpp\*, crtw32\stdhpp\*
    Updated all files to Plauger's drop of 11/13.
libw32\include
    Updated all STL headers to Plauger's drop of 11/13.

-----------------------------------------------------------------

Thu 29-Oct-98   (JamesMa)

crtw32\helper\i386\lldvrm.asm, crtw32\helper\i386\ulldvrm.asm
    New compiler helper files, courtesy of Simon Koeman.
crtw32\makefile, crtw32\makefile.inc
crtw32\srcrel\external.mkf, crtw32\srcrel\objects.mkf, crtw32\srcrel\pd-b
crtw32\helper\lsources, crtw32\helper\sources.nt
    Added lldvrm & ulldvrm to build process.

-----------------------------------------------------------------

Tue 27-Oct-98   (JamesMa)

crtw32\stdcpp\ios.cpp, crtw32\stdhpp\iosfwd, libw32\include\iosfwd
    Definition of BADOFF moved from ios.cpp to iosfwd for compatibility with 6.0 (MC bug #7642)

-----------------------------------------------------------------

Thu 22-Oct-98   (JamesMa)

makefile.sub
    Now uses batch-mode compilation.

-----------------------------------------------------------------

Tue 13-Oct-98   (gregf)

crtw32\heap\sbheap.c
    Added a check to __sbh_free_block for an already freed block. In case such
    a block is found, simply return with no other action.

crtw32\mbstring\ismbalph.c
    Minor typo, MT should have been _MT.

-----------------------------------------------------------------

Thu 08-Oct-98   (gregf)

crtw32\dllstuff\crtlib.c

crtw32\h\stdlib.h, winheap.h

crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
        malloc.c, msize.c. realloc.c, sbheap.c

crtw32\misc\getqloc.c

crtw32\startup\crt0.c, crt0dat.c, dllcrt0.c

libw32\msvcrt.src

libw32\include\stdlib.h

    Package of changes intended to suppress the small-block heap, by default,
    on NT 5.0. As part of this, use of GetVersion was replaced by GetVersionEx
    and a global variable, _osplatform, was introduced to distinguish between 
    NT and Win9x.

-----------------------------------------------------------------

Mon 28-Sep-98   (gregf)

crtw32\time\localtim.c, loctim64.c
    Fixed very minor error in determinin of DST status at the ends of the 
    Epoch. This was Monte Carlo 2842.

crtw32\time\tzset.c
    Fixed error in calculation of DST transition date (when the transition day
    is the first day of the month). This was Monte Carlo #1059

-----------------------------------------------------------------

Thu 24-Sep-98   (gregf)

crtw32\lowio\eof.c
    Use _lseeki64_lk instead of _lseek_lk so that _eof works with very large
    files. This was Monte Carlo bug 3834.

crtw32\misc\wperror.c
    Fixed handling of NULL, or empty, message string argument. This was Monte
    Carlo bug 2757.

-----------------------------------------------------------------

Tue 22-Sep-98   (gregf)

crtw32\stdio\input.c, output.c
    Added support for %I and %I32 size modifiers. %I is equivalent to %I32 in
    Crts for Win32 (and equivalent to %I64 in Crts for Win64).

-----------------------------------------------------------------

Sun 20-Sept-98   (JamesMa)

crtw32\stdhpp\xlocale, xlocnum
libw32\include\xlocale, xlocnum
        Restored explicit casts.

-----------------------------------------------------------------

Sat 12-Sept-98   (JamesMa)

srcrel\external.mkf
        Fixed translation of sampl[d|e]_.def (MC bug #5419).
crtw32\stdcpp\dlldef.obj
        Re-enabled warning 4667 (MC bug #3995, fixed in Plauger's 1st 6.1 drop).

-----------------------------------------------------------------

Fri 11-Sept-98   (JamesMa)

makefile, makefile.inc

crtw32\h\fpieee.h

crtw32\stdcpp\_tolower.c, _toupper.c, delop.cpp, delop_s.cpp, dlldef.cpp, fiopen.cpp,
        iomanip.cpp, ios.cpp, iostream.cpp, limits.cpp [NEW], locale.cpp, locale0.cpp, newop.cpp,
        newop_s.cpp, newop2.cpp, newop2_s.cpp, nomemory.cpp, stdthrow.cpp [NEW], string.cpp,
        strstrea.cpp, uncaught.cpp, wctrans.c, wctype.c,wiostrea.cpp, wlocale.cpp, xcosh.c,
        xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c,xfdnorm.c, xfdscale.c, xfdtest.c,
        xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c,xldscale.c, xldtest.c, xlexp.c,
        xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c,xmath.h, xmbtowc.c, xpoly.c,
        xsinh.c, xstod.c, xstrcoll.c, xstrxfrm.c, xvalues.c,xwcscoll.c, xwcsxfrm.c, xwctomb.c

crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646, climits,
        clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef, cstdio, cstdlib, cstring,
        ctime, cwchar, cwctype, deque, exception, fstream, functional, iomanip, ios, iosfwd,
        iostream, iso646.h, istream, iterator, limits, list, locale, map, memory, new, numeric,
        ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf, string, strstream,
        typeinfo, use_ansi.h, utility, valarray, vector, wctype.h, xcomplex, xiosbase, xlocale,
        xlocinfo, xlocinfo.h, xlocmon, xlocmes [NEW], xlocnum, xloctime, xmemory, xstddef,
        xstring, xtree, xutility, ymath.h, yvals.h

fpw32\tran\lsources

fpw32\tran\i386\filter.c, filter_simd.c [NEW], xmmi_fp_emul.c [NEW], filter.h [NEW],
        temp_context.h [NEW], xmmi_types.h [NEW]

libw32\msvcp61.rc [NEW]

libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646, climits, clocale, cmath,
        complex, csetjmp, csignal, cstdarg, cstddef, cstdio, cstdlib, cstring, ctime, cwchar,
        cwctype, deque, exception, fpieee.h, fstream, functional, iomanip, ios, iosfwd, iostream,
        iso646.h, istream, iterator, limits, list, locale, map, memory, new, numeric, ostream,
        queue, set, sstream, stack, stdexcept, stl.h, streambuf, string, strstream, typeinfo,
        use_ansi.h, utility, valarray, vector, wctype.h, xcomplex, xiosbase, xlocale, xlocinfo,
        xlocinfo.h, xlocmon, xlocmes [NEW], xlocnum, xloctime, xmemory, xstddef, xstring, xtree,
        xutility, ymath.h, yvals.h

srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

-----------------------------------------------------------------

Fri 11-Sep-98   (GregF)

crtw32\misc\a_cmp.c, a_loc.c, a_map.c, a_str.c, w_cmp.c, w_loc.c, w_map.c,
        w_str.c
    Revised method of temporary allocations so that _malloc_crt is used if the
    attempt to use _alloca fails.

crtw32\misc\aw_com.c, mbtowenv.c, putenv.c, w_env.c, wtombenv.c
    Fixed cases where CP_ACP should have been used, but wasn't

crtw32\startup\i386\chkstk.asm
    Fixed handling of small frames

makefile.inc
crtw32\convert\_ctype.c, _mbslen.c, atox.c, isctype.c, iswctype.c, mblen.c,
        mbstowcs.c, mbtowc.c, strtol.c, tolower.c, toupper.c, towlower.c,
        towupper.c, wcstol.c, wcstombs.c, wctomb.c, xtow.c
crtw32\h\ctype.h, mtdll.h, setlocal.h, stdlib.h, string.h
crtw32\misc\initctyp.c, initmon.c, initnum.c, inittime.c, setlocal.c
crtw32\startup\tidtable.c
crtw32\string\lsources, memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c,
        strncoll.c, strnicmp.c, strnicol.c, strupr.c, strxfrm.c, wcscoll.c,
        wcsicmp.c, wcsicoll.c, wcslwr.c, wcsncoll.c, wcsnicmp.c, wcsnicol.c,
        wcsupr.c, wcsxfrm.c
crtw32\string\i386\_memicmp.asm (renamed from memicmp.asm), _stricmp.asm
        (renamed from stricmp.asm), _strnicm.asm(renamed from strnicmp.asm)
crtw32\time\strftime.c, tzset.c, wcsftime.c
    Converted handling of locale data in multithread apps from a scheme of
    serializing access with our 'locks' to a scheme somewhat akin to per-thread
    data. More specifically, each thread has its own pointer to a copy of the
    locale info.

-----------------------------------------------------------------

Thu 30-July-98   (JamesMa)

crtw32\rtc\userapi.cpp
    Bug fix from KFrei: errnum is now type _RTC_ErrorNumber throughout.

-----------------------------------------------------------------

Tue 28-July-98   (JamesMa)

crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, convert.cpp,
        error.cpp, fileio.cpp, init.cpp, memory.cpp, pdblkup.cpp, shadow.cpp,
        stack.cpp, userapi.cpp, lsources
    New directory & files - KFrei's RTC support.
crtw32\heap\calloc.c, delete.cpp, expand.c, free.c, malloc.c, new.cpp, realloc.cpp
misc\dbgdel.cpp, dbgheap.c, dbgnew.cpp, i386\chkesp.c
    RTC update.
crtw32\h\rtcsup.h, rtcapi.h, rtcpriv.h
    RTC headers (last 2 new).
crtw32\eh\comerr.cpp, lsources
    COM+ EH support routines from JonCaves (1st file new)
crtw32\startup\tidtable.c
    Per-thread COM+ EH variable initialization
crtw32\h\comerr.h, mtdll.h
    COM+ EH headers (1st file new)
crtw32\bsku\bsku.cpp, lsources
    New directory & files - support for 'Book SKU' version of CRTs.
libw32\include\rtcapi.h, comerr.h
    Release versions of new headers.
makefile, makefile.inc
srcrel\pd-b, objects.mkf, external.mkf, makefile
    Build support for RTC, COM+ EH & Book SKU.

-----------------------------------------------------------------

Tue 07-July-98   (JamesMa)

libw32\msvcrt.rc, msvcirt.rc, msvcp60.rc
    Version strings revved to 6.10 (Monte Carlo bug #3289).

-----------------------------------------------------------------

Mon 15-June-98   (GregF)

crtw32\time\gmtime64.c
    Fixed elapsed years calculation.

-----------------------------------------------------------------

Fri 12-June-98   (GregF)

crtw32\time\ftime64.c, gmtime64.c
    Fixed compiler warnings about assignments of __int64 values to ints or
    longs.

-----------------------------------------------------------------

Thu 11-June-98   (GregF)

crtw32\dos\stat64.h
crtw32\h\tchar.h, time.h
crtw32\lowio\fstat64.c
makefile.inc
    Fixes to the 6/8 checkin, plus one file (makefile.inc) that I forgot to
    check in.

-----------------------------------------------------------------

Mon 08-June-98   (GregF)

crtw32\direct\findf64.c, lsources, wfndf64.c
crtw32\dos\lsources, stat64.c, wstat64.c
crtw32\h\ctime.h, internal.h, io.h, tchar.h, time.h, wchar.h
crtw32\h\sys\stat.h, timeb.h, types.h, utime.h
crtw32\lowio\fstat64.c, lsources
crtw32\time\ctime64.c, dtoxtm64.c, ftime64.c, gmtime64.c, loctim64.c, lsources,
    mktime64.c, time64.c, tzset.c, utime64.c, wctime64.c
doc\copycrt.bat
srcrel\pd-b
    Implementation of support for a 64-bit time_t-like type. The new type is
    called __time64_t. For each old time_t-dependent type or function, there
    is a type or function using __time64_t in place of time_t.

crtw32\time\time.c
    Get UTC time directly from the system. Previously, UTC was computed from
    local time (for compatibility with Win32S).

-----------------------------------------------------------------

Tue 09-June-98   (JamesMa)

fpw32\conv\intrncvt.c
    Fixed long-standing off-by-1 error in _RoundMan().
crtw32\h\crtdbg.h
    Minor cleanups.
libw32\include\iso646.h, wctype.h, ymath.h, yvals.h, new
    Files were out-of-ssync with crtw32\h, primarily RTC and #pragma once changes.
libw32\include\crtdbg.h
    Updated copyright.

-----------------------------------------------------------------

Thu 28-May-98   (GregF)

crtw32\misc\a_cmp.c, a_map.c, w_cmp.c, w_map.c
    Fixed internal, string-length utilities, strncnt and wcsncnt. This
    fixes RAID VS98 45402.

-----------------------------------------------------------------

Wed 27-May-98   (GregF)

srcrel\pd-b
doc\copysrc.bat
    Build changes for ntcsup.h

-----------------------------------------------------------------

Tue 26-May-98   (GregF)

crtw32\h\ntcsup.h
    Added header needed by the immediately preceeding checkin.

-----------------------------------------------------------------

Fri 22-May-98   (JamesMa)

crtw32\heap\malloc.c, crtw32\heap\calloc.c, crtw32\heap\realloc.c, crtw32\heap\free.c,
        crtw32\heap\new.cpp, crtw32\heap\delete.cpp, crtw32\misc\dbgheap.c,
        crtw32\misc\dbgnew.cpp, crtw32\misc\dbgdel.cpp, crtw32\misc\i386\chkesp.c,
        crtw32\stdcpp\newop.cpp, crtw32\stdcpp\newop2.cpp, crtw32\stdcpp\delop.cpp,
        crtw32\stdhpp\new, crtw32\h\crtdbg.h, libw32\include\crtdbg.h, libw32\msvcrt.src
    Support for KFrei's RTC work, and operators new[] and delete[].
fpw32\tran\i386\filter.c
    Fix for VS98 bug 40117.

-----------------------------------------------------------------

Fri 01-May-98   (GregF)

crtw32\h\mbctype.h, mbdata.h, mbstring.h, mtdll.h
crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c, ismblgl.c,
                ismblwr.c, ismbprn.c, ismbpunc.c, ismbsle.c, ismbspc.c,
                ismbstr.c, ismbupr.c, mbbtype.c, mbccpy.c, mbclen.c,
                mbclevel.c, mbctype.c, mbsbtype.c, mbschr.c, mbscmp.c,
                mbscoll.c, mbscspn.c, mbsdec.c, mbsicmp.c, mbsicoll.c,
                mbsinc.c, mbslen.c, mbslwr.c, mbsnbcat.c, mbsnbcmp.c,
                mbsnbcnt.c, mbsnbcol.c, mbsnbcpy.c, mbsnbicm.c, mbsnbico.c,
                mbsncat.c, mbsnccnt.c, mbsncmp.c, mbsncoll.c, mbsncpy.c,
                mbsnextc.c, mbsnicmp.c, mbsnicol.c, mbsnset.c, mbsrchr.c,
                mbsrev.c, mbsspn.c, mbsstr.c, mbstok.c, mbsupr.c,
                mbtolwr.c, mbtoupr.c, tojisjms.c
crtw32\misc\splitpat.c
crtw32\startup\tidtable.c
libw32\include\mbctype.h, mbstring
    Package of changes converting the multithread flavor of the mbc support
    over to using per-thread copies of the mbc info rather directly 
    referencing the global vars and arrays. The idea is that each thread has
    a private reference to a struct containing all the mbc info, and the logic
    to update that reference at the start of each function using it. While 
    many threads may be using the same struct (indeed, ideally they all are),
    each thread's reference is a per-thread datum. The structs themselves are 
    created, as needed, destroyed when no longer used by any thread, but never
    modified (except for a reference count field).

-----------------------------------------------------------------

Wed 29-Apr-98   (GregF)

srcrel\makefile
    Changed references to crt60 to crt60a.

-----------------------------------------------------------------

Fri 03-Apr-98   (JamesMa)

crtw32\startup\tlssup.c
    _tls_start & _tls_end are no longer initialized (VS98 bug #34711).

-----------------------------------------------------------------

Thu 26-Mar-98   (Gregf)

crtw32\dos\drive.c, getcwd.c
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapmin.c, malloc.c,
    msize.c, realloc.c
crtw32\lowio\chsize.c, close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
    fleni64.c, fstat.c, locking.c, lseek.c, lseeki64.c, open.c, pipe.c,
    read.c, setmode.c, write.c
crtw32\misc\dbgheap.c, getenv.c, onexit.c, perror.c, putenv.c, winsig.c,
    wperror.c
crtw32\stdio\clearerr.c, closeall.c, fclose.c, fdopen.c, fflush.c, fgetc.c,
    fgets.c, fgetwc.c, fopen.c, fprintf.c, fputc.c, fputs.c, fputwc.c,
    fputws.c, fread.c, freopen.c, fscanf.c, fseek.c, fseeki64.c, ftell.c,
    ftelli64.c, fwprintf.c, fwrite.c, fwscanf.c, gets.c, getw.c, popen.c,
    printf.c, puts.c, putw.c, rewind.c, rmtmp.c, scanf.c, setmaxf.c, setvbuf.c,
    stream.c, tempnam.c, tmpfile.c, ungetc.c, ungetwc.c, vfprintf.c,
    vfwprint.c, vprintf.c, vwprintf.c, wprintf.c, wscanf.c

    Exception-safe locking.

-----------------------------------------------------------------
Tues 10-Mar-98	(v-jfujii)

fpw32\tran\alpha\dpml_exc.c
	fix for bug#146614, invalid exception handling broken, found by the NT group

makefile
	removed "-filealign:8192" to Alpha linker flags

-----------------------------------------------------------------
Mon 9-Mar-98	(v-jfujii)

makefile
	added "-filealign:8192" to Alpha linker flags

-----------------------------------------------------------------

Tue 17-Feb-98   (JamesMa)

makefile
    Added "-filealign:4096" to x86 linker flags, per DanS's suggestion.
libw32\msvcrt.rc, msvcirt.rc, msvcp60.rc
    Now include verstamp.h instead of version.h and use 'rbld' as final
    field of FILEVERSION & PRODUCTVERSION.

-----------------------------------------------------------------
Thu 5-Feb-98	(v-jfujii)

crtw32\h\math.h
libw32\include\math.h
    add ALPHA declaration for ceil and floor

-----------------------------------------------------------------

Fri 30-Jan-98   (Gregf)

crtw32\convert\iswctype.c
    Allow meaningful processing of wide characters in the C locale. This is
    vaguely against the letter of ISO (which says locale does affect the isw*
    functions), but consistent with our own doc and far more useful than 
    treating every wide char > 255 as an error. Fixes NT bug 129235.

crtw32\time\tzset.c
    If no locale has been set for LC_ALL or LC_CTYPE, use the default ANSI 
    codepage when trying to convert the time zone name strings from UNICODE to
    multibyte. This fixes NT bug 100144.

-----------------------------------------------------------------

Thu 22-Jan-98   (JamesMa)

crtw32\stdhpp\deque, libw32\include\deque
    Fix for VS98 bug #26947.
crtw32\stdhpp\<all except cassert>, libw32\include\<all Std. C++ headers except cassert>
    Added "#pragma once" (VS98 bug #26683).

-----------------------------------------------------------------

Tue 20-Jan-98   (Gregf)

crtw32\h\setlocal.h
crtw32\misc\nlsdata2.c, setlocal.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
        wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
    Added new internal global, __lc_collate_cp, to keep track of and use the
    proper codepage for LC_COLLATE stuff. This fixes VC98 bug #25645.

crtw32\time\ftime.c
    Completely rewritten to fix the determination of DST status. This fixes
    VC98 bug #25763.

-----------------------------------------------------------------

Mon 19-Jan-98   (JamesMa)

crtw32\h\crtdbg.h, libw32\include\crtdbg.h
    At request of DeanM, made debug prototypes of new() & delete()
    #ifndef _MFC_OVERRIDES_NEW.

-----------------------------------------------------------------

Fri 09-Jan-98   (JamesMa)

makefile.sub
    Line number info is now removed from BBT-enabled dll .objs for which no
    source is shipped (VS98 bug #10687).
libw32\tools\i386\whackline.exe
    New file; removes line number info from .objs, courtesy of DanS/KHerold.
crtw32\tools\win32\newline.sed, crtw32\tools\win32\delblank.sed
    New files; needed for 'whackline' processing.
srcrel\pd-b
    Added libw32\tools\i386\whackline.exe, crtw32\tools\win32\newline.sed and
    crtw32\tools\win32\delblank.sed
makefile
    .pdbs for BBT-enabled dlls are now created in bbt\dll_pdb subdirectory.

-----------------------------------------------------------------

Fri 19-Dec-97   (JamesMa)

crtw32\stdhpp\xlocnum, libw32\include\xlocnum
    Fixed buffer-overflow problem (VS98 #4706) by enlarging internal buffers.

-----------------------------------------------------------------

Mon 15-Dec-97   (Gregf)

crtw32\misc\initctyp.c
    When no codepage is defined, use LOCALE_IDEFAULTANSICODEPAGE, rather than
    LOCALE_IDEFAULTCODEPAGE.

crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
              wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
    Use __lc_codepage in the locale-dependent string functions.

-----------------------------------------------------------------

Fri 12-Dec-97   (JamesMa)

crtw32\h\eh.h, libw32\include\eh.h, crtw32\h\process.h,
        libw32\include\process.h, crtw32\h\setjmp.h, libw32\include\setjmp.h 
    All __declspec(noreturn)s are now #ifdef _MSC_VER >= 1200 (VS98 #22226).
crtw32\h\stdlib.h, libw32\include\stdlib.h
    Protos for abort, exit & _exit are now __declspec(noreturn) (VS98 #22223).
cleanbld.cmd, srcrel\external.mkf, srcrel\makefile, srcrel\objects.mkf
    Now builds CRTs into a directory specified by CRT_BUILDDIR environment
    variable; default is \msdev, as always.

-----------------------------------------------------------------

Thu 11-Dec-97   (Gregf)

crtw32\stdhpp\functional
    Added const to () definition in mem_fun* (e.g., mem_fun_t) template classes.
    This fixes VS 98 bug #21393.

-----------------------------------------------------------------

Tue 09-Dec-97   (Gregf)

crtw32\heap\sbheap.c
    Release the address space reserved for a region when that region is
    is discarded. This fixes VS98 #21538.

-----------------------------------------------------------------

Mon 08-Dec-1997	(v-jfujii)

makefile
	add -Gy to Alpha specific CC_OPTS and AS_OPTS

fpw32\tran\alpha\pows.s
	change .eflag value from 128 to 4

-----------------------------------------------------------------

Thu 04-Dec-97   (JamesMa)

crtw32\stdhpp\utility, libw32\include\utility
    Added constructor for pair cv-conversion bug (VS98 #16727).
crtw32\stdhpp\queue, libw32\include\queue
    Includes <functional> (VS98 #20113).
crtw32\stdhpp\list, libw32\include\list
    _Next & _Prev are now _Node *, not void * (VS98 #1491).
crtw32\stdhpp\xtree, libw32\include\xtree
    _Next, _Parent & _Right are now _Node *, not void * (VS98 #1491).
    (Kudos to MMalone for observing that these last 2 fixes are now feasible!)

-----------------------------------------------------------------

Tues 25-Nov-97 (v-jfujii)

crtw32\helper\alpha\smove.s, smovem.s - check in the fixes to OtsMove and OtsMoveMinimum to prevent them from prefetching beyond their buffers.
  
-----------------------------------------------------------------

Fri 21-Nov-97   (JamesMa)

crtw32\h\process.h, libw32\include\process.h
    _cexit() & _c_exit() are no longer __declspec(noreturn).
makefile
    .pdbs for the debug dlls are now generated in a dll_pdb subdirectory with
    their 'natural' names.
doc\copycrt.bat
    .pdbs for the debug dlls are now copied from a dll_pdb subdirectory.

-----------------------------------------------------------------

Wed 19-Nov-97   (JamesMa)

crtw32\h\math.h, libw32\include\math.h
    Cleaned up _Pow_int to prevent C4146.
crtw32\stdhpp\new, libw32\include\new
    Removed extern _New_hand (VS98 #18416).
crtw32\stdhpp\xcomplex, libw32\include\xcomplex
    Added redefiniton guard (VS98 #18346).
crtw32\stdhpp\xtree, libw32\include\xtree
    Tidied up redefinition guard (_XTREE_ instead of _TREE_).

-----------------------------------------------------------------

Thu 13-Nov-97   (JamesMa)

crtw32\makefile
    Image base of msvcp60d.dll moved from 10400000 to 10480000 (VS98 #4687). 

-----------------------------------------------------------------

Fri 07-Nov-97   (GregF)

crtw32\mbstring\mbsncoll.c
    Small fix for POSIX build from Roger Lanser (already in ia64 tree).

-----------------------------------------------------------------

Thu 06-Nov-97   (GregF)

crtw32\heap\calloc.c, expand.c, free.c, malloc.c, msize.c, realloc.c
    Small fixes for POSIX build from Roger Lanser.

crtw32\h\wchar.h
libw32\include\wchar.h
    Enclosed macro and inline defs of isleadbyte() in #ifndef 
    _CTYPE_DISABLE_MACROS. Affected NT build.

-----------------------------------------------------------------

Mon 03-Nov-97   (v-jfujii)
crtw32\helper\alpha\sfill.s 
    check in fix for NTBUG#115659, Win16 apps on Alpha - most dialog title 
    bars contain garbage text "yyyyyyy|||||||||".

-----------------------------------------------------------------

Mon 03-Nov-97   (JamesMa)

crtw32\convert\wtox.c
    Fixed buffer-size bug in __int64 version (VS98 #15991).

-----------------------------------------------------------------

Thu 30-Oct-97   (JamesMa)

cleanbld.cmd
    Added 'DELNODE' argument; returns errlev.
makefile
    Debug dll .pdbs now named msvcxxx_dll.pdb.
doc\copycrt.bat
    New msvcxxx_dll.pdbs copied to debug\msvcxxx.pdb.
srcrel\external.mkf
    Striplin.exe now built with default compiler.
srcrel\makefile
    Mkclnmkf.exe now built with default compiler.
crtw32\h\eh.h, libw32\include\eh.h
    terminate() & unexpected() now __declspec(noreturn).
crtw32\h\process.h, libw32\include\process.h
    abort(), exit(), _exit(), _cexit() and _c_exit() now __declspec(noreturn).
crtw32\h\setjmp.h, libw32\include\setjmp.h
    longjmp() now __declspec(noreturn).

-----------------------------------------------------------------

Mon 22-Oct-97   (GregF)

crtw32\stdhpp\list
libw32\include\list
    Added constructor (for list) for a pair of const _Ty * -s. This fixes
    VS98 bug #1478.

-----------------------------------------------------------------

Fri 17-Oct-97   (GregF)

crtw32\stdhpp\vector
libw32\include\vector
    Changed relational operators (==, et al) from member functions to template
    functions. This fixes VS98 #1047.

-----------------------------------------------------------------

Tue 14-Oct-97   (GregF)

crtw32\stdhpp\map
libw32\include\map
    Added assignment operator to map and multimap templates

crtw32\stdhpp\set
crtw32\include\set
    Made the const and non-const iterator types in the set and multiset 
    templates distinct, same for const and non-const reference types. Added
    versions of appropriate methods for non-const iterators. This fixes
    VS98 bug #1458.

crt tests\test\old\slconform\t23a.cpp
    Removed the const from the defs of Ptrty so that it is distinct from 
    Cptrty. This goes with the change to the set header above.

-----------------------------------------------------------------

Fri 10-Oct-97   (v-jfujii)

crtw32\helper\alpha\insv.s - check in a fix that made it into the NT pool 
    but not here.  see raid db VS98 #11884

-----------------------------------------------------------------

Mon 06-Oct-97   (JamesMa)

makefile.inc
    Non-debug version of chkesp.obj now used exclusively (bug #10687).
crtw32\heap\malloc.c
    Minor Posix fix - wrong #endifs corrected.
crtw32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h, excpt.h,
        float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h,
        mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h, signal.h,
        stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h,
        crtw32\h\sys\stat.h, timeb.h, utime.h, crtw32\stdhpp\wctype.h,
        libw32\include\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h,
        excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h,
        mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h, signal.h,
        stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h, wctype.h,
        libw32\include\sys\stat.h, timeb.h, utime.h
    Restored not-so-obsolete _CRTAPI1 macro.
crtw32\h\mbdata.h, crtw32\h\stdio.h, libw32\include\stdio.h
    Incorporated BryanT's _POSIX #ifdefs.

-----------------------------------------------------------------

Tue 30-Sep-97   (BryanT)

crtw32\heap\calloc.c, expand.c, free.c, heapinit.c, heapmin.c,
    malloc.c, msize.c, realloc.c

crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c,
    ismblwr.c, ismbprn.c, ismbpunc.c, ismbspc.c, ismbupr.c, mbctype.c
    mbscoll.c, mbsicmp.c, mbsicoll.c, mbslwr.c, mbsnbcol.c, mbsnbico.c
    mbsncoll.c, mbsnicol.c, mbsupr.c, mbtolwr.c, mbtoupr.c

crtw32\misc\perror.c

crtw32\startup\crt0dat.c, tidtable.c

crtw32\stdio\_file.c, fdopen.c

fpw32\tran\alpha\*.s, *.c

<Lots of DIRS/SOURCES/SOURCES.NT files)

makefile

    Fix POSIX build and resync with the NT sources.

-----------------------------------------------------------------

Tue 30-Sep-97   (GregF)

crt60\makefile
    Changed the base address of the load image of msvcp60d.dll to 0x10400000.
    This fixes (one hopes!) VS98 bug #4687.

-----------------------------------------------------------------

Tue 23-Sep-97   (GregF)

crtw32\convert\xtoa.c
    Put in the one line of code needed to handle negative __int674 values.
    This fixes VS98 bug #9170.

crtw32\heap\sbheap.c
    Conditioned (#if 0) out DumpEntry from the build, but left it in the
    source. It was obviously leftover from when Rich was debugging his new
    heap scheme. This fixes VS98 bug #10075.

-----------------------------------------------------------------

Mon 22-Sep-97   (JamesMa)

crtw32\mbstring\mbbtype.c, crtw32\misc\w_loc.c, crtw32\misc\w_map.c,
        crtw32\misc\w_str.c, crtw32\misc\w_cmp.c, crtw32\misc\w_env.c,
        crtw32\misc\a_loc.c, crtw32\misc\a_map.c, crtw32\misc\a_atr.c,
        crtw32\misc\a_cmp.c, crtw32\misc\aw_com.c
    Trivial return statements added to avoid new C4715 warnings.
crtw32\stdcpp\xmbtowc.c
    Non-trivial return statement added to avoid new C4715 warning.
crtw32\heap\handler.cpp
    "OBSOLETE" warning removed from _set_new_handler() (VS98 bug #9126).
libw32\msvcrt.rc, libw32\msvcirt.rc, libw32\msvcp60.rc
    Revved version & copyright strings (VS98 bug #9826).
crtw32\tools\win32\relinc.cmd
    Now ifstrips crtw32\stdhpp headers.
crtw32\tools\win32\relinc.if
    Now removes "#ifdef __FORCE_INSTANCE" blocks.
libw32\include\complex, fstream, ios, istream, locale, sstream, streambuf,
        string, wctype.h, xcomplex, xlocale, xlocmon, xlocnum, xloctime,
        xstddef, xstring, yvals.h
    Ifstripped to remove "#ifdef CRTDLL2" & "#ifdef __FORCE_INSTANCE"
    blocks and "#ifndef CRTDLL2" statements.
libw32\include\ostream
    Ifstripped as above; fix of 8/7/97 to crtw32\stdhpp version propagated.

-----------------------------------------------------------------

Mon 15-Sep-97   (JamesMa)

crtw32\stdhpp\deque, libw32\include\deque
    Fixed several memory-corruption bugs, including VS98 #879.
crtw32\stdhpp\utility, libw32\include\utility
    Prevented C4700 warnings (VS98 #6932).
crtw32\stdhpp\xstring, libw32\include\xstring
    No longer disables C4700, per fix to VS98 #6932.
crtw32\h\math.h, libw32\include\math.h
    Removed bogus single-line comment (VS98 #7870).

-----------------------------------------------------------------

Fri 12-Sep-97   (JamesMa)

crtw32\h\tchar.h, libw32\include\tchar.h
    Restored mapping of _tcslen to strlen (VS98 #9443).

-----------------------------------------------------------------

Fri 12-Sep-97   (GregF)

crtw32\h\mbdata.h
    Added declaration for __ismbcodepage, and the _ISMBCP and _ISNOTMBCP
    macros.

crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c, ismblwr.c,
                ismbprn.c, ismbpunc.c, ismbsle.c, ismbspc.c, ismbstr.c,
                ismbupr.c,mbsbtype.c, mbschr.c, mbscmp.c, mbscspn.c, mbsdec.c,
                mbsicmp.c, mbslen.c, mbsnbcat.c, mbsnbcmp.c, mbsnbcpy.c,
                mbsnbicm.c, mbsnbset.c, mbsncat.c, mbsncmp.c, mbsncpy.c,
                mbsnicmp.c, mbsnset.c, mbsrchr.c, mbsrev.c, mbsset.c, mbsspn.c,
                mbsstr.c, mbstok.c
    Replaced occurence of the expressions (__mbcodepage == 0) and )0 ==
    __mbcodepage) with the macro _ISNOTMBCP. Also, fixed up some indents while
    I was at it. This fixes VS98 bug #8704.

crtw32\mbstring\mbctype.c
    Added __ismbcodepage to keep track of whether or not the current code page
    is really a multibyte code page. Used this restore the old return semantics
    of _getmbcp(). This fixes VS98 bug #9443.

-----------------------------------------------------------------

Mon 08-Sep-97   (GregF)

crtw32\stdhpp\algorithm
libw32\include\algorithm
    Initialize _D1n and _D2n to 0 as per VS98 bug #5754.

crtw32\stdhpp\memory
libw32\include\memory
    Better version of the fix below (i.e., it doesn't break self-assignment).
    This fixes VS98 bug #2678 (trust me).

-----------------------------------------------------------------

Tue 02-Sep-97   (GregF)

crtw32\stdhpp\memory
    Revised auto_ptr's assignment overload so as to transfer ownership status
    from the rhs to the lhs, and ensure the rhs no longer owns the allocation.
    This fixes VS98 bug #2678.

-----------------------------------------------------------------
Fri 29-Aug-1997 (v-jfujii)

fpw32\tran\alpha\frexp.s
    add alpha specific implementation of frexp()

fpw32\tran\alpha\ldexp.s
    add alpha specific implementation of ldex()

fpw32\tran\alpha\dpml_exc.c
    fix vs98 #4102 and #1474

fpw32\tran\alpha\ieee.c
    fix vs98 #4103

fpw32\tran\alpha\pows.s
    fix long standing bug, pow(0,-1) should return +INF instead of -INF

fpw32\tran\lsources
    add -Gy to alpha specific CFLAGS and AFLAGS

-----------------------------------------------------------------

Fri 29-Aug-97   (GregF)

crtw32\lowio\osfinfo.c
    Changed _open_osfhandle to propagate the _O_NOINERIT flag to the lowio
    flags. This fixes VS98 bug #7762.

-----------------------------------------------------------------

Thu 28-Aug-97   (GregF)

crtw32\time\tzset.c
    Fixed the underflow adjustment in cvtdate(). This fixed VS98 bug #881.
    Also, removed some obsolete Win32S support and detab-ed.

-----------------------------------------------------------------

Wed 27-Aug-97   (GregF)

crtw32\time\clock.c
    Use the GetSystemTimeAsFileTime API. Also, detab-ed. This fixes VS98
    bug #442.

-----------------------------------------------------------------

Mon 25-Aug-97   (JamesMa)

crtw32\misc\i386\chkesp.c
    New file: CRT component of KendricS's stack-checking routines - x86 only.
makefile.inc, crtw32\misc\lsources, srcrel\objects.mkf
    Added chkesp.obj.
srcrel\pd-b
    Added crtw32\misc\i386\chkesp.c.
libw32\msvcrt.src
    Added _chkesp.
fpw32\tran\i386\trig.asm
    Fix for VS98 bug #6160.

-----------------------------------------------------------------

Fri 22-Aug-97   (GregF)

crtw32\misc\inittime.c
    Get the time format string from Win32 rather than making up our own
    version. I don't know when this support went into NT, but it's in both
    NT 4.0 and Win95!
crtw32\time\strftime.c
    Added support for an AM/PM suffix to the time string.

-----------------------------------------------------------------

Fri 15-Aug-97   (GregF)

crtw32\h\tchar.h
libw32\include\tchar.h
    _ttoi64 now maps to _atoi64 (VC98 bug #1511)

crtw32\h\tchar.h
makefile
    Map _tcslen to _mbslen when _MBCS is defined (via alias record built by
    makefile) (VC98 bug #2729). Also, added comments to explain why this is
    not necessary for _tcscat, _tcscpy and _tcsdup.

crtw32\h\crtdbg.h, ctype.h, malloc.h, mbctype.h, stdio.h, stdlib.h, time.h
         wchar.h
libw32\include\crtdbg.h, ctype.h, malloc.h, mbctype.h, stdio.h, stdlib.h,
       time.h, wchar.h
    Strip out __p_ prototypes from the 'release' version of the header files.
    This addresses VC98 bug #2244

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
    Moved the constant and type definitions out of the #ifndef _DEBUG - #else
    - #endif block. Thus, these constants and types are ALWAYS defined when
    the header is #include-d. This address VC98 #1400.

-----------------------------------------------------------------

Fri 15-Aug-97   (JamesMa)

stdhpp\functional, libw32\include\functional
    Fix for VC98 Bug #3140.
stdhpp\iosfwd, stdhpp\xmemory, libw32\include\iosfwd, libw32\include\xmemory
    Minor syntax clean-ups (VC98 Bug #1494).

-----------------------------------------------------------------

Thu 14-Aug-97   (JamesMa)

cleanbld.cmd, clns_bld.bat, makefile, srcrel\bldnt.cmd,
srcrel\bldwin95.bat, srcrel\external.mkf, srcrel\makefile
    V5TOOLS => V6TOOLS (VC98 bug #4064).
srcrel\mkclnmkf.c, srcrel\_sample_.r
    Revved version numbers from 4.0 to 6.0 (VC98 bug #4064).
srcrel\_sample_.rc
    Revved version numbers from 5.0 to 6.0 (VC98 bug #4064).
crtw32\convert\_fptostr.c
    strcpy() replaced by memmove() (VC98 Bug #1473).
crtw32\h\new.h, libw32\include\new.h
    set_new_handler() now __cdecl. (VC98 Bug #3034).
crtw32\h\strstrea.h, libw32\include\strstrea.h
    Title in comment now "strstrea.h", not "strstream.h" (VCBug #3133).
crtw32\heap\handler.cpp, crtw32\heap\setnewh.cpp, crtw32\heap\new_mode.cpp
    All routines now appropriately __cdecl.
crtw32\stdcpp\x{f|l}[cosh|sinh|exp].c
    All routines now appropriately __cdecl (VCBug #6039).
crtw32\stdhpp\ymath.h, libw32\include\ymath.h
    All routines now appropriately __cdecl (VCBug #6039);
    unwanted prototypes for _Log & _Sin removed.
crtw32\stdhpp\istream, libw32\include\istream
    Fix for VCBug #1308.
crtw32\stdhpp\limits, libw32\include\limits
    "ignaling" => "signaling" (VCBug #3112).
crtw32\stdhpp\xstring, libw32\include\xstring
    _Nullstr now __cdecl (VCBug #438).

-----------------------------------------------------------------

Fri 08-Aug-97   (GregF)

crtw32\stdio\tmpfile.c
    Removed unused local from the multithread version of _ttmpfile(). The new
    and much pickier frontend issued a warning and broke our build. Also,
    detab-ed it.

crtw32\dllstuff\crtlib.c
    Rearranged ifdef-s so the local, ptd, is only defined when ANSI_NEW_HANDLER
    is defined (which is the only case where it is needed).

-----------------------------------------------------------------

Thu 07-Aug-97   (JamesMa)

crtw32\stdhpp\xstring
    Fixed memory overwrite problem (VC98 bugs 1451 & 3159).

crtw32\eh\ehveccvb.cpp, frame.cpp, unhandld.cpp, user.cpp
    Disabled new compiler warning C4191.

crtw32\eh\rtti.cpp, fpw32\conv\cvt.c, fpw32\conv\tenpow.c, crtw32\stdhpp\ostream
    Removed unused locals to avoid new compiler warning C4189.

crtw32\h\internal.h, crtw32\heap\sbheap.c, crtw32\stdcpp\xdscale, crtw32\stdcpp\xfdscale.cpp
    Minor modifications to avoid new compiler warning c4554.

-----------------------------------------------------------------

Wed 06-Aug-97   (GregF)

crtw32\startup\crt0.c, crt0dat.c
    Moved definition of __mbsctype_initialized from crt0.c to crt0dat.c

-----------------------------------------------------------------

Tue 15-July-97   (JamesMa)

crtw32\h\sys\stat.h, libw32\include\sys\stat.h
    Restored oldnames for stat() & fstat() (VC98 bug 3809).

-----------------------------------------------------------------

Mon 07-July-97   (GregF)

crt60\makefile.sub
    Changed compiler opt switch to 'size' rather than 'speed'.

crt60\crtw32\misc\getqloc.c
    Made use of a suggestion of Dean McCrory's, the arrays of data are now
    __declspec( selectany ) (note that I had to make all of them global in
    order to do this). This allows the linker to eliminate them from the load
    image when possible (don't ask, it's voodoo to me too).

-----------------------------------------------------------------
Mon 30-Jun-97	(v-jfujii)

fpw32\tran\alpha\dpml_exc.c
     fixes a bug found in the previous version checked in

fpw32\tran\alpha\captcont.s, dpml_com.s
     latest release of the above files.  actually dpml_com.s did not change.

-----------------------------------------------------------------

Mon 23-Jun-97   (v-jfujii)

fpw32\tran\lsources
     added alpha-specific assembler flag

fpw32\tran\alpha\cabs.s, cabsf.s
     replace previous checkin of wrong versions of the above files

fpw32\tran\alpha\dpml_exc.c
     checkin the latest dpml_exc.c

-----------------------------------------------------------------

Mon 23-June-97   (GregF)

crtw32\h\math.h
    Fixed minor typo introduced by DEC checkin on 6/19. Inline acosf() body
    was missing ';'. Oddly, the cleansed libw32\include\math.h didn't have the
    typo!

-----------------------------------------------------------------

Fri 20-Jun-97   (v-kimpe)

fpw32\tran\alpha\*.s
     update all files with the latest.  this fixes a number of exception
     handling problems

-----------------------------------------------------------------

Fri 20-June-97   (GregF)

crtw32\startup\mlock.c
crtw32\stdio\_file.c
    Moved stdio-level file locking from mlock.c to _file.c. While in mlock.c,
    it caused most of stdio to be pulled into any multithread app, whether
    the app actually used stdio-level i/o or not.

-----------------------------------------------------------------

Fri 13-June-97   (GregF)

makefile.inc

crtw32\misc\aw_cmp.c -> a_cmp.c and w_cmp.c
            aw_env.c -> a_env.c and w_env.c
            aw_loc.c -> a_loc.c and w_loc.c
            aw_map.c -> a_map.c and w_map.c
            aw_str.c -> a_str.c and w_str.c

doc\copysrc.bat

srcrel\pd-b

    Split the multibyte and wide character versions into different source
    files. Also, replaced the use of malloc/free with _alloca and cleaned
    up some brain-damage in the code.

-----------------------------------------------------------------

Wed 04-June-97   (JamesMa)

crtw32\makefile.inc
crtw32\stdcpp\delop_s.cpp, newop_s.cpp, newop2_s.cpp
    Static components of msvcprt.lib now built with .pdb info in msvcprt[d].pdb
crtw32\stdcpp\dlldef.cpp
    Cleaned up export of basic_ostream<wchar_t ...> insertion operator.
crtw32\stdhpp\xlocale
    Added export of ctype<wchar_t>
crtw32\stdhpp\fstream
    Cosmetic change only - bogus _Fiopen() member removed altogether.

-----------------------------------------------------------------

Mon 02-Jun-97   (Richk)

crtw32\h\winheap.h
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
            malloc.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c
    Implemented new small-block heap scheme.

-----------------------------------------------------------------

Thu 22-May-97   (JamesMa)

crtw32\makefile
crtw32\stdcpp\dlldef.cpp, fiopen.cpp, locale.cpp, xlocale.cpp, wlocale.cpp
crtw32\stdhpp\complex, fstream, ios, iosfwd, istream, locale, ostream,
        sstream, streambuf, string, typeinfo, utility, xcomplex,
        xlocale, xlocmon, xlocnum, xloctime, xstring
libw32\include\complex, fstream, ios, iosfwd, istream, locale, ostream,
        sstream, streambuf, string, typeinfo, utility, xcomplex,
        xlocale, xlocmon, xlocnum, xloctime, xstring
libw32\msvcprt.src, msvcp60.rc (new file)
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

    This package of changes restores most of the exports missing from
    msvcp50[d].dll as a result of changes to the post-VC++5.0 compiler
    and renames the C++ .dll to msvcp60[d].dll

-----------------------------------------------------------------

Mon 12-May-97   (Richk)

crtw32\stdcpp\dlldef.cpp
    Provided basic_string npos defintion flavor for VC 5.0 compiler.

-----------------------------------------------------------------

Mon 12-May-97   (JamesMa)

crtw32\stdhpp\locale, crtw32\stdhpp\xlocnum, libw32\include\locale, libw32\include\xlocnum
    Inline 2-parameter isdigit() moved from locale to xlocnum.

-----------------------------------------------------------------

Mon 21-Apr-97   (JamesMa)

crtw32\h\crtdbg.h, libw32\include\crtdbg.h
    4-parameter operator delete() now #ifdef _MSC_VER >=1200.
crtw32\stdcpp\string.cpp, strstrea.cpp, wiostrea.cpp,
        iomanip.cpp, iostream.cpp, fiopen.cpp
    Added #include <locale> to pick up 2-param isdigit().

-----------------------------------------------------------------

Tue 22-Apr-97   (JamesMa)

libw32\include\crtdbg.h, libw32\include\new.h, libw32\include\new,
        libw32\include\string, libw32\include\xlocnum
    Updated with yesterday's changes.

-----------------------------------------------------------------

Mon 21-Apr-97   (JamesMa)

crtw32\h\crtdbg.h
    Added operator delete() corresponding to debug operator new().
crtw32\h\new.h, crtw32\stdhpp\new
    Placement delete() now #if _MSC_VER > 1200
crtw32\stdcpp\dlldef.cpp,crtw32\stdhpp\string, crtw32\stdhpp\xlocnum
    Syntax modified to agree with 6.0 compiler.

-----------------------------------------------------------------

Fri 18-Apr-97   (JamesMa)

crtw32\eh\frame.cpp
    In __InternalCxxFrameHandler(), 'recursive' changed to BOOLEAN.
crtw32\h\new.h, crtw32\stdhpp\new, libw32\include\new.h, libw32\h\new
    Placement operator delete() added.
crtw32\heap\sbheap.c, crtw32\mbstring\mbctype.c, crtw32\stdio\fputwc.c,
        crtw32\stdio\fgetwc.c, crtw32\stdcpp\strstrea.cpp, crtw32\stdcpp\xmbtowc.c,
        crtw32\stdcpp\xdscale.c, crtw32\stdcpp\xfdscale.c, crtw32\stdhpp\xlocale,
        libw32\include\xlocale, crtw32\stdhpp\xlocmon, libw32\include\xlocmon,
        crtw32\stdhpp\xlocnum, libw32\include\xlocnum, crtw32\stdhpp\xloctime,
        libw32\include\xloctime, crtw32\stdhpp\fstream, libw32\include\fstream,
        crtw32\stdhpp\istream, libw32\include\istream, crtw32\stdhpp\xlocale,
        libw32\include\xlocale, crtw32\stdhpp\iosfwd, libw32\include\iosfwd
    Explicit casts added to avoid new C4242 warnings.

-----------------------------------------------------------------

Fri 18-Apr-97   (GregF)

crtw32\h\stdlib.h, internal.h
libw32\include\stdlib.h
    Restored macros (see change notes for April 4, below) for _[w]pgmptr and
    _[w]initenv.

-----------------------------------------------------------------

Fri 04-Apr-97   (GregF)

crtw32\h\stdlib.h
libw32\include\stdlib.h
    Restored some of the macros defining globals as dereferenced functions in
    the DLL (removed as part of the change below). These may be useful in
    later performance work.

-----------------------------------------------------------------

Mon 31-Mar-97	(GregF)

crtw32\h\assert.h, cmsgs.h, conio.h, crtdbg.h, cruntime.h, ctime.h, ctype.h,
         cvt.h, dbgint.h, direct.h, dos.h, dostypes.h, eh.h, ehassert.h,
         ehhooks.h, ehstate.h, errmsg.h, errno.h, excpt.h, fcntl.h, file2.h,
         float.h, fltintrn.h, fpieee.h, fstream.h, heap.h, internal.h, io.h,
         iomanip.h, ios.h, iostream.h, istream.h, limits.h, locale.h,
         malloc.h, math.h, mbctype.h, mbdata.h, mbstring.h, memory.h,
         minmax.h, msdos.h, mtdll.h, mtest.h, new.h, nlsint.h, oscalls.h,
         ostream.h, plstring.h, process.h, rterr.h, rtti.h, search.h,
         setjmp.h, setjmpex.h, setlocal.h, share.h, signal.h, sizeptr.h,
         stdarg.h, stddef.h, stdexcpt,h, stdio.h, stdiostr.h, stdlib.h,
         streamb.h, string.h, strstrea.h, syserr.h, tchar.h, time.h,
         trnsctrl.h, typeinfo.h, useoldio.h, v2tov3.h, varargs.h, wchar.h,
         winheap.h

crtw32\h\sys\stat.h, timeb.h, types.h, utime.h

crtw32\stdhpp\wctype.h

libw32\include\*.h (headers corresponding to the ones listed above)

    Large package of minor changes. I deleted the support for/usage of the
    obsolete macros: _CALLTYPE*, _CRTAPI*, DLL_FOR_WIN32S and _NTSDK. I also
    removed other macros supporting Win32s. Where appropriate I replaced
    defined(_M_MPPC) && defined(_M_M68K) with defined(_MAC). I detab-ed the
    headers and made other minor cosmetic changes while I was at it.

-----------------------------------------------------------------

Thu 27-Mar-97	(Richk)

crtw32\convert\isctype.c
crtw32\convert\tolower.c
crtw32\convert\toupper.c
crtw32\dllstuff\crtlib.c
crtw32\dllstuff\imp_data.c
crtw32\dllstuff\macdll\msvcrt.def
crtw32\dllstuff\macdll\msvcrtd.def
crtw32\h\awint.h
crtw32\h\mbctype.h
crtw32\h\mbdata.h
crtw32\mbstring\ismbalnm.c
crtw32\mbstring\ismbalph.c
crtw32\mbstring\ismbdgt.c
crtw32\mbstring\ismbgrph.c
crtw32\mbstring\ismblwr.c
crtw32\mbstring\ismbprn.c
crtw32\mbstring\ismbpunc.c
crtw32\mbstring\ismbspc.c
crtw32\mbstring\ismbupr.c
crtw32\mbstring\mbctype.c
crtw32\mbstring\mbsicmp.c
crtw32\mbstring\mbslwr.c
crtw32\mbstring\mbsnbicm.c
crtw32\mbstring\mbsnicmp.c
crtw32\mbstring\mbsupr.c
crtw32\mbstring\mbtolwr.c
crtw32\mbstring\mbtoupr.c
crtw32\misc\aw_map.c
crtw32\misc\aw_str.c
crtw32\misc\initctyp.c
crtw32\stdcpp\_tolower.c
crtw32\stdcpp\_toupper.c
crtw32\stdcpp\xstrxfrm.c
crtw32\string\strlwr.c
crtw32\string\strupr.c
crtw32\string\strxfrm.c
libw32\include\mbctype.h
    Calling _setmbcp with a single-byte codepage now uses that
    codepage for upper/lowercase translations for OEM characters.

-----------------------------------------------------------------

Tue 18-Mar-97	(v-JohnMo)

crtw32\eh\ppc\handlers.s
crtw32\helper\ppc\memcpy_.s
crtw32\startup\ppc\chkstk.s
crtw32\string\ppc\memmovep.s
fpw32\include\trans.h
fpw32\tran\ppc\fpctrl.s
fpw32\tran\ppc\sqrtp.s
    Various late fixes for PowerPC/NT specific code.

-----------------------------------------------------------------

Mon 26-Feb-97	(Richk)

crtw32\misc\getqloc.c
    Fixes to make Win95 operation compatible with shipped CRT version.

-----------------------------------------------------------------

Mon 21-Feb-97	(Richk)

crtw32\misc\getqloc.c
    Fixed problem for where language string starting with nonletter
    returned default locale instead of error.

-----------------------------------------------------------------

Wed 19-Feb-97	(GregF)

crtw32\startup\dllcrt0.c
    Deleted obsolete test for Win32s and PharLap's TNT. Also, made a few
    cosmetic changes.

-----------------------------------------------------------------

Mon 17-Feb-97	(Richk)

crtw32\misc\aw_cmp.c, aw_loc.c, aw_map.c, aw_str.c
    For the ANSI versions of the CRT routines, try to use the WIDE NLS
    calls before trying the ANSI versions.  This will permit Windows NT
    program to use the WIDE NLS routines so the current codepage can
    be used to translate the parameters strings from/to Unicode.  Using
    the ANSI NLS calls use only the ANSI codepage, causing incorrect
    results.
crtw32\misc\getqloc.c
    Complete rewrite of module to qualify CRT locale strings.  The
    system LCIDs are now enumerated instead of using a fixed table, so
    new locales can be recognized dynamically.  Fixed random errors of
    incorrect language/country translations.
crtw32\h\setlocal.h
    Changed CP_MAX_LEN to 8 to handle 5-digit codepage numbers.
    Commented out now-unused definitions for getqloc.c.

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

crtw32\eh\alpha\bridge.s
crtw32\eh\alpha\trnsctrl.cpp
crtw32\h\trnsctrl.h
crtw32\misc\alpha\chandler.c
crtw32\misc\alpha\ghandler.c
crtw32\misc\alpha\jmpuwind.s
crtw32\misc\alpha\longjmp.s
    change _NLG* declarations to __NLG* to match the changes in the debugger

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

fpw32\tran\lsources
fpw32\tran\sources.nt
fpw32\tran\alpha\rsqrt.s
fpw32\tran\alpha\rsqrtf.s
libw32\msvcrt.src
srcrel\makefile
srcrel\pd-b
    Added Alpha __rsqrt and __rsqrtf functions which are called by compiler
    This was fixed on the side for the Alpha VC 5.0 product.
    Corrected makefile to use crt60 tree.  This resulted in some significant
    changes to pd-b:
        mssccprj.scc files removed
        lego subdirectories added to lib\[platform] directories
        libw32\msvcp42.rc added
        libw32\lib\i386\win32s subdirectory added
        log_v50.txt added

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

crtw32\h\math.h
libw32\include\math.h
    Separated Alpha single precision math declarations from MIPS to allow
    intrinsics to be applied to them. This was fixed on the side for the
    Alpha VC 5.0 product.

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

fpw32\tran\alpha\atan2f.s
fpw32\tran\alpha\atan2s.s
fpw32\tran\alpha\cotf.s
fpw32\tran\alpha\f_atan2.s
fpw32\tran\alpha\f_atan2f.s
fpw32\tran\alpha\f_hypot.s
fpw32\tran\alpha\f_hypotf.s
fpw32\tran\alpha\f_sqrt.s
fpw32\tran\alpha\f_sqrtf.s
fpw32\tran\alpha\fmodf.s
fpw32\tran\alpha\fmods.s
fpw32\tran\alpha\hypotf.s
fpw32\tran\alpha\hypots.s
fpw32\tran\alpha\j0f.s
fpw32\tran\alpha\j1f.s
fpw32\tran\alpha\jnf.s
fpw32\tran\alpha\log10f.s
fpw32\tran\alpha\log10s.s
fpw32\tran\alpha\logbf.s
fpw32\tran\alpha\logf.s
fpw32\tran\alpha\logs.s
fpw32\tran\alpha\nextaftf.s
fpw32\tran\alpha\powf.s
fpw32\tran\alpha\pows.s
fpw32\tran\alpha\sqrtf.s
fpw32\tran\alpha\sqrts.s
fpw32\tran\alpha\tanhf.s
fpw32\tran\alpha\trig_rdx.s
fpw32\tran\alpha\y0f.s
fpw32\tran\alpha\y1f.s
fpw32\tran\alpha\ynf.s
    Corrected alignment in assembly code to before the label, instead of
    after.  This caused error in sqrt(0) as well as returning a null
    function name with matherr. This was fixed on the side for the Alpha
    VC 5.0 product. This fixes DevStudio96 22172

-----------------------------------------------------------------

Mon 10-Feb-97	(GregF)

crtw32\stdio\_sftbuf.c
    Added code to better handle it when malloc fails while attempting to
    allocate the buffer. In this case, temporarily use the _charbuf field
    as the buffer. This fixes NTBUG #20000.

-----------------------------------------------------------------

Mon 20-Jan-97	(GregF)

crtw32\startup\crt0.c
    Changed startup code so if _heapinit() or _mtinit() fails, ExitProcess
    is called directly rather than _exit() (_exit uses a lock!). This was NT
    RAID #51100.

crtw32\startup\tidtable.c
    Changed _freeptd() so the thread's copy of the exception-action table is
    freed up. This was DevStudio96 #20282.

-----------------------------------------------------------------

Fri 10-Jan-97	(JamesMa)

log.txt -> log_v50.txt
	Renamed old LOG.TXT from V5.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v6.0 (relative to v5.0)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\crtw32\oldv2log.txt ===
-----------------------------------------------------------------

Tue 19-Jul-94	(GregF)

crtwin32/dllstuff/crtdll.c
crtwin32/misc/onexit.c
	Changed the calls to GlobalAlloc so that GMEM_SHARE is specified.
	Affects only the Win32s version of msvcrt20.dll. This was bug
	14851, originating with Boaz Feldbaum.

-----------------------------------------------------------------

Fri 10-Jun-94	(SteveSa)

crtwin32/startup/threadex.c
	Fix 2 synchronization problems. 1) The _beginthreadex routine may NOT
	store values into the per-thread data block of the child thread since
	the child thread may finish executing and free that block before the
	parent thread executes the first instruction after the call to
	CreateThread.  (This is not a problem for _beginthread because that
	routine always creates its child thread in the suspended state.)
	There is no need to store the child thread handle in the per-thread
	data block for that child thread since _endthreadex does not close
	that handle.  2) The code had been written to pass the address of the
	tid field in the p.t.d. block to CreateThread, not the user specified
	tid address.  The user tid was filled in after CreateThread returned,
	but that was not reliable.  Now the user tid address is passed to
	CreateThread, and the child thread calls GetCurrentThreadId() to set
	the TID in its own p.t.d. block.

-----------------------------------------------------------------

Wed 08-Jun-94	(SteveSa)

libwin32\include\process.h
crtwin32\h\process.h
crtwin32\startup\dllcrt0.c
crtwin32\dllstuff\crtdll.c
	Add global variable _pRawDllMain which, if non-NULL because the user
	has defined it, will be called through upon DLL notifications, only
	before the CRT initialization on ATTACH notifications, and after the
	CRT termination on DETACH notifications.  This was needed by MFC.

-----------------------------------------------------------------

Wed 08-Jun-94	(GregF)

crtwin32\dllstuff\atonexit.c, crtdll.c
crtwin32\heap\free.c
crtwin32\misc\onexit.c
	Fixes to the support for user DLLs in Win32s. Principal change was
	to use GlobalHeap API for the onexit table.

-----------------------------------------------------------------

Mon 06-Jun-94	(SteveSa)

crtwin32/h/ & libwin32/include/
  errno.h, float.h, signal.h, stddef.h, stdio.h, stdlib.h
	Changed (some occurrences of) "#ifdef _MT" to
	"#if defined(_MT) || defined(_DLL)" so that MSVCRT*.DLL
	can be used with single-thread programs.  This model is
	dangerous if threads are running in the background without
	the user program's knowledge, but it allows fast getc/putc,
	for example, which are needed by our own compiler passes.

-----------------------------------------------------------------

Sat 04-Jun-94	(GregF)

crtwin32\string\alpha\strcat.c
	Removed _CALLTYPE1.

-----------------------------------------------------------------

Fri 03-Jun-94	(GregF)

libwin32\makefile
	Added ehvec*.obj to COMPONENTS_SUPPOBJS_DLL_FOR_WIN32S list.

-----------------------------------------------------------------

Fri 03-Jun-94	(SteveSa)

libwin32\include\new.h
crtwin32\h\new.h
crtwin32\heap\handler.cxx
	Removed set_new_handler() as an alias for _set_new_handler().
	Our implementation of _set_new_handler does NOT conform to the
	working ANSI C++ standard definition of set_new_handler.  We
	must correctly implement set_new_handler for Visual C++ v3.0,
	but we cannot alias it to our own _set_new_handler.  That would
	cause untold compatibility problems when we do implement a
	conforming version of the ANSI C++ set_new_handler().

-----------------------------------------------------------------

Wed 01-Jun-94	(ChrisWei)

crtwin32\h[libwin32\include]\tchar.h
        all _strdec and _wcsdec params should be const.

-----------------------------------------------------------------

Wed 01-Jun-94	(GregF)

crtwin32\dllstuff\atonexit.c, crtdll.c
	Removed compile-time conditioning on DLL_FOR_WIN32S. Instead, test
	for Win32s at runtime. i386\msvcrt*.lib should now work for BOTH
	i386\msvcrt*.dll and i386\win32s\msvcrt*.dll!!!

-----------------------------------------------------------------

Thu 26-May-94	(ChrisWei)

crtwin32\h[libwin32\include]\string.h, wchar.h
crtwin32\string\sources
libwin32\lib\*\*.def
        Add _strncoll, _wcsncoll.

crtwin32\h\tchar.h
        Make inlining the default for all.

-----------------------------------------------------------------

Thu 26-May-94	(ChrisWei)

crtwin32\h\tchar.h
        Make inlining the default for MBCS, fix _tcsn[c]cmp.

-----------------------------------------------------------------

Thu 26-May-94	(GregF)

crtwin32\misc\lsources, sources
crtwin32\misc\alpha\strcmp.s, strcpy.s, strlen.s (deleted)
crtwin32\string\lsources, sources
crtwin32\string\alpha\strcat.c, strcmps.s, strcpy.s, strlens.s (new)
	Changes for the Alpha build (only) strcmp.s, strcpy.s and strlen.s
	were deleted from misc\alpha, and replaced by the files listed above
	in string\alpha

-----------------------------------------------------------------

Wed 25-May-94	(ChrisWei)

crtwin32\h\tchar.h
        Bug fix: _tcsnextc in _MBCS case.

-----------------------------------------------------------------

Tue 24-May-94	(GregF)

crtwin32\dllstuff\atonexit.c, crtdll.c
crtwin32\heap\free.c
crtwin32\misc\onexit.c
	Package of changes so that Win32s user DLLs only execute static
	ctors and dtors once (when the the first process attaches for ctors
	and when the last process detaches for dtors).

-----------------------------------------------------------------

Tue 24-May-94	(GregF)

crtwin32\h\istream.h
crtwin32\iostream\istrgint.cxx, istrint.cxx, istrlong.cxx, istrshrt.cxx,
		  istruint.cxx, istrulng.cxx, istrusht.cxx
	Moved the definition of MAXLONGSIZ from various *.cxx to istream.h.
	Also, changed istrgint.cxx so that is stops copying characters into
	the buffer with at most MAXLONGSIZ-1 characters have been copied.
	This was probably not really a bug since MAXLONGSIZ was big enough
	(16) we wouldn't come near it anyway.

-----------------------------------------------------------------

Mon 23-May-94	(ChrisWei)

crtwin32\mbstring\sources, tcsmap*.c, mbs*coll.c
crtwin32\h[libwin32\include]tchar.h, mbstring.h
libwin32\lib\*\*.def
        Add _mbs*coll functions.

-----------------------------------------------------------------

Fri 20-May-94	(ChrisWei)

crtwin32\mbstring\mbsnbcmp.c, mbsnbicm.c
        Fix old bug: if last char is lead byte, returns EQUAL without
        testing at all. Now at least does strict value comparison of LB
        with other strings char.

-----------------------------------------------------------------

Thurs 19-May-94	(ChrisWei)

crtwin32\mbstring\almost_everything.c
crtwin32\h\mbdata.h, win32s.h
        Allow non-Win32 builds. Add Mac support.

-----------------------------------------------------------------

Wed 18-May-94	(SteveSa)

libwin32\buildall.cmd
libwin32\makefile
crtwin32\buildcrt.cmd
crtwin32\crt32.def
fpwin32\buildcrt.cmd
fpwin32\fp32.def
	Add support for LEGO builds of LIBC.LIB, LIBCMT.LIB, MSVCRT.LIB
	and the release objects (BINMODE, COMMODE, SETARGV, etc.)
	This support is activated by the presence of {crt,fp}dbg{,st,dll}
	subdirectories, which are parallel to {crt,fp}win{,st,dll}.

-----------------------------------------------------------------

Tue 17-May-94	(GregF)

libwin32\makefile
	Replaced "link32" with "link"

-----------------------------------------------------------------

Tue 17-May-94	(GregF)

crtwin32\helper\mips\llbit.c,lldefs.h
	Bug fix for Dolphin bug 12192 from Roger Lanser.

-----------------------------------------------------------------

Tue 17-May-94	(GregF)

crtwin32\h\string.h
libwin32\include\string.h
	memmove is implemented as an intrinsic on the Dec Alpha so the
	_CRTIMP qualifier must be removed from the prototype for the
	Alpha.

-----------------------------------------------------------------

Mon 16-May-94	(ChrisWei)

crtwin32\h\mbdata.h
crtwin32\mbstring\mbsicmp.c, mbslwr.c, mbsnbicm.c, mbsnicmp.c, mbsupr.c,
mbtolwr.c, mbtoupr.c
        Use _mbbtolower [upper] which is not locale-dependent, rather than 
        tolower [upper] which is.

-----------------------------------------------------------------

Mon 16-May-94	(SteveSa)

crtwin32\dllstuff\crtexe.c
	The nCmdShow parameter passed to (_w)WinMain must match the
	computed value in crtwin32\startup\crt0.c.  It was a constant.

-----------------------------------------------------------------

Fri 13-May-94	(SteveSa)

libwin32\makefile
	Add ehvec{ctr,cvb,dtr}.obj to MSVCRT.LIB.  (They cannot be imported
	because of prototype conflicts between _CRTIMP and the front end.)
	Problem: Yet another command line too long (this one for MSVCRT20.LIB).
	Solution: Tell nmake to generate and use a linker response file.

crtwin32\eh\sources
	Change flags to build this directory with -GX (all targets) and
	I386 with -d1Binl.  This is necessary for ehvec{ctr,cvb,dtr}.cxx.

crtwin32\eh\ehvec{ctr,cvb,dtr}.cxx
	Remove _CRTIMP attribute from these functions -- it causes a conflict
	with the compiler front-end's built-in prototypes for these helpers.

-----------------------------------------------------------------

Thu 12-May-94	(GregF)

crtwin32\h\assert.h, awint.h, conio.h, cruntime.h, ctime.h, cvt.h, direct.h,
	   dos.h, errno.h, excpt.h, fcntl.h, file2.h, float.h, fltintrn.h,
	   fpieee.h, io.h, limits.h, locale.h, math.h, mbstring.h, memory.h,
	   msdos.h, oscalls.h, process.h, search.h, setjmp.h, share.h,
	   signal.h, stdarg.h, stddef.h, string.h, syserr.h, tchar.h,
	   varargs.h
crtwin32\h\sys\locking.h, stat.h, timeb.h, types.h, utime.h
	Fixed _INC_* macro usage so that it is consistent throughout the
	include files (the #define comes immediately after the #ifdef).

crtwin32\h\wchar.h
	Removed conditional #include of win32s.h. It wasn't necessary and it
	broke the build with the change above.

libwin32\include\*.h
	Brought up to date with changes above.

-----------------------------------------------------------------

Wed 11-May-94	(GregF)

libwin32\makefile
	x86 build of the DLL has to be bound with user32.lib (init. code
	has a reference to MessageBoxA)

-----------------------------------------------------------------

Tue 10-May-94	(GregF)

crtwin32\dllstuff\crtlib.c
	Added check for Win32s at initialization time. Using this, the
	DLL version for Win32s (Win32) will not load on Win32 (resp., Win32).
	When one of DLLs is loaded on the wrong host, an explanatory
	message box is displayed and the initialization fails.

-----------------------------------------------------------------

Thu 05-May-94	(GregF)

libwin32\makefile, lib\i386\win32s, lib\i386\win32s\msvcrt20.def
	Build the Win32s DLL under the same name as the Windows NT DLL
	(i.e., msvcrt20.dll, msvcrt20.lib, msvcrt.lib) in the (new)
	subdirectory, win32s, of i386.

-----------------------------------------------------------------

Wed 04-May-94	(GregF)

libwin32\include\ctype.h, malloc.h, mbctype.h, stdio.h, stdlib.h, time.h,
		 wchar.h
	Oops, almost forgot these...

-----------------------------------------------------------------

Wed 04-May-94	(GregF)

crtwin32\h\ctype.h, internal.h, malloc.h, mbctype.h, stdio.h, stdlib.h,
	   time.h, wchar.h
crtwin32\dllstuff\crtlib.c
	Made several of the _DLL changes also depend on _M_IX86 so they do
	not affect the MIPS or Alpha builds. Basically, these are the
	definitions/declarations of the access functions and the macros to
	convert references to the CRT's global (user-visible), read-write
	data to access function calls. I also fixed a potential bug in
	crtlib.c: the return value for a success call to
	AllocPerProcessDataStruct() was not explicitly set to any value.

-----------------------------------------------------------------

Mon 02-May-94	(GregF)

crtwin32\h\stdio.h
libwin32\include\stdio.h
	Added __cdecl to declaration of __p__iob().

-----------------------------------------------------------------

Fri 29-Apr-94	(GregF)

crtwin32\h\win32s.h
	Oops! Forgot to addfile this header yesterday. It defines the per-
	process data struct for Win32s and access macros.

libwin32\include\ctype.h, malloc.h, mbctype.h, new.h, stdio.h, stdlib.h,
		 time.h, wchar.h
	Brought up to date with crtwin32\h.

-----------------------------------------------------------------

Thu 28-Apr-94	(GregF)

crtwin32\buildcrt.cmd, crt32.def, makefile

crtwin32\h\ctype.h, heap.h, internal.h, malloc.h, mbctype.h, mbdata.h,
	   mtdll.h, new.h, nlsint.h, setlocal.h, stdio.h, time.h, wchar.h

crtwin32\dllstuff\atonexit.c, crtexe.c, crtlib.c

crtwin32\heap\_newmode.c, handler.cxx, heapinit.c, malloc.c, new_mode.cxx

crtwin32\lowio\initcon.c, ioinit.c, txtmode.c

crtwin32\mbstring\mbctype.c

crtwin32\misc\ctype.c, initctyp.c, inithelp.c, initmon.c, inithelp.c,
	      inittime.c, onexit.c, setenv.c, setlocal.c, setmval.c,
	      wsetloca.c

crtwin32\startup\crt0.c, crt0dat.c, mlock.c, stdargv.c, tidtable.c, wild.c

crtwin32\stdio\_file.c, _getbuf.c, _open.c, _sftbuf.c, fdopen.c, fflush.c,
		ncommode.c, rmtmp.c, setvbuf.c, tmpfile.c

crtwin32\time\clock.c, strftime.c, timeset.c, tzset.c

crtwin32\tools\win32\relinc.if

libwin32\buildall.cmd, makefile

libwin32\lib\i386\msvcrt19.def

	Package of changes to build a special version of msvcrt*.dll for
	Win32s, and make the dll for Win32 compatible with it.

-----------------------------------------------------------------

Wed 27-Apr-94	(GregF)

libwin32\lib\mips\msvcrt20.def
	Added single precision math functions to the exports (defined for
	MIPS only).

-----------------------------------------------------------------

Mon 24-Apr-94	(ChriswWei)

- removed _tset[v]buf - there are no Unicode versions of these function.
	h\[include\]tchar.h

- add wWinMainCRTStartup entry point for DLL
	dllstuff\wcrtexew.c, sources, crtexe.c - add wWinMainCRTStartup entry point for DLL
	libwin32\makefile 

-----------------------------------------------------------------

Fri 22-Apr-94	(GregF)

libwin32/lib/alpha/msvcrt20.def
	Added _heapused to exports.

-----------------------------------------------------------------

Thu 21-Apr-94	(SteveSa)

libwin32/makefile
libwin32/sdknames/
libwin32/sdknames/obj
libwin32/sdknames/obj/{i386,mips,alpha}
	Changed the makefile to add SDKNAMES.LIB to MSVCRT.LIB.  SDKNAMES.LIB
	contains aliases to convert SDK CRTDLL.LIB names (e.g. _winver_dll) 
	to MS VC++ names (e.g., __imp__winver).  The sdknames directory and
	its subdirectories were added for use in building SDKNAMES.LIB.

	Also, the OLDNAMES alias for control87() on the i386 was fixed.  It
	was one leading underscore short on both source and target names
	and so it was spurious.  It is now fixed (_control87 => __control87).

-----------------------------------------------------------------

Thu 21-Apr-94	(GregF)

crtwin32\stdio\input.c
	Wasn't re-initializing the integer64 flag. This meant that any
	descriptor following a %I64{d,o,x,u} caused the 64-bit contents of
	num64 to be copied thru its corresponding argument. Oops! This was
	Dolphin bug 10601.

-----------------------------------------------------------------

Mon 18-Apr-94	ChrisWei)

I have checked in a boatload of files covering:

1) Final changes to MB stuff, all MB routines are now generic 
(use the NLS API set and now work for any MB language). Also, 
the MB-stuff is now multi-thread safe. 

2) str*coll, wcs*coll return _NLSCMPERROR when there is a problem 
with the API call. They had been doing so already but now its 
documented, the macro has the underscore, and its is now available 
to the users.

3) A few random bug fixes.

4) Got rid of some compiler warnings that I introduced a while back.

5) Added another MT lock in case anyone cares.

[ 6) Greg, for Win32s: I added a global (_mblcid) and removed a 
global (_mbascii) ]

Files changed:

h\awint.h, mbctype.h mbdata.h, mbstring.h, mtdll.h, setlocal.h, string.h
include\mbctype.h, mbstring.h, string.h
misc\aw_str.c, initctyp.c
\string\*icoll.c
\stdio\puts.c
convert\isctype.c, icwctype.c
mbstring\almost the whole shebang:

ismbalnm.c        2    2  out      
ismbalph.c        3    3  out      
ismbbyte.c        4    4  out      
ismbdgt.c         3    3  out      
ismbgrph.c        2    2  out      
ismblwr.c         3    3  out      
ismbprn.c         4    4  out      
ismbpunc.c        2    2  out      
ismbsle.c         2    2  out      
ismbspc.c         3    3  out      
ismbstr.c         2    2  out      
ismbupr.c         3    3  out      
mbctype.c         4    4  out      
mbsbtype.c        1    1  out      
mbschr.c          1    1  out      
mbscmp.c          1    1  out      
mbscspn.c         1    1  out      
mbsdec.c          1    1  out      
mbsicmp.c         1    1  out      
mbslen.c          1    1  out      
mbslwr.c          1    1  out      
mbsnbcat.c        1    1  out      
mbsnbcmp.c        1    1  out      
mbsnbcnt.c        1    1  out      
mbsnbcpy.c        1    1  out      
mbsnbicm.c        1    1  out      
mbsnbset.c        1    1  out      
mbsncat.c         1    1  out      
mbsnccnt.c        1    1  out      
mbsncmp.c         1    1  out      
mbsncpy.c         1    1  out      
mbsnicmp.c        1    1  out      
mbsnset.c         1    1  out      
mbsrchr.c         1    1  out      
mbsrev.c          1    1  out      
mbsset.c          1    1  out      
mbsspn.c          1    1  out      
mbstok.c          1    1  out      
mbsupr.c          1    1  out      
mbtohira.c        1    1  out      
mbtokata.c        1    1  out      
mbtolwr.c         1    1  out      
mbtoupr.c         1    1  out      

-----------------------------------------------------------------

Tue 12-Apr-94	(SteveSa)

{crtwin32\h,libwin32\include}\{ios,istream,ostream}.h
	Add some __cdecl's to function declarations, add some leading
	leading underscores to parameter names to preserve ANSI naming.

-----------------------------------------------------------------

Tue 05-Apr-94	(SteveSa)

{crtwin32\h,libwin32\include}\{stdarg,varargs}.h
	Minor change to declaration of __builtin_va_start() for ALPHA only!

-----------------------------------------------------------------

Fri 01-Apr-94	(GregF)

crtwin32\eh\mips\handlers.s, tmphack.s
	Commented out library directives that were inappropriately causing
	libcmt.lib to be linked in (Dolphin bug 9646)

-----------------------------------------------------------------

Wed 30-Mar-94	(GregF)

libwin32\lib\alpha\msvcrt20.def
	Added several missing exports (all were Unicode versions of
	familiar CRT functions).

-----------------------------------------------------------------

Mon 28-Mar-94	(SteveSa)

libwin32/makefile
crtwin32/dllstuff/crtexe.c -
	For X86 only (also not for the _NTSDK), add a call in CRTEXE.C to
	_setdefaultprecision().  Also add FP8.OBJ to MSVCRT.LIB.  Now when a
	user links an EXE with FP10.OBJ and MSVCRT.LIB, it actually works as
	expected and sets the X87 precision to 80-bit (64-bit mantissa)!
	Previously linking with FP10.OBJ had no effect on floating point
	precision if linking with MSVCRT.LIB.  This was a one-liner!

-----------------------------------------------------------------

Sat 26-Mar-94	(SteveSa)

crtwin32/dos/sources
crtwin32/dos/mterrno.c -
	Added a new file to contain single-thread versions of the functions
	_errno() and __doserrno(), which return the addresses of the per-thread
	variables errno and _doserrno, respectively.  These functions in the
	single thread library return the addresses of the global variables.
	This allows users to target shared code for use with LIBC.LIB and
	LIBCMT.LIB without having conflicts over accesses to errno/_doserrno.

-----------------------------------------------------------------

Wed 23-Mar-94	(GregF)

libwin32\lib\i386\msvcrt20.def
	Added _longjmpex.

-----------------------------------------------------------------

Tue 22-Mar-94	(GregF)

crtwin32\helper\mips\llbit.c
	Bug fix from Roger Lanser. He was doing arithmetic right shifts
	when he should have been doing logical right shifts...

-----------------------------------------------------------------

Fri 18-Mar-94	(GregF)
	Build map file for msvcrt20.dll.

-----------------------------------------------------------------

Thu 17-Mar-94	(GregF)

crtwin32\h\heap.h

crtwin32\heap\heapadd.c,
	      heapinit.c,
	      heapmin.c,
	      malloc.c,
	      realloc.c
	Package of changes to provide for more graceful handling of an
	out-of-free-descriptors (apparently, this condition will not arise
	on NT since the you get a nice little informative popup, followed
	by the summary execution of your app, whenever you run out of virtual
	memory). There remains a code path in heapadd.c which can lead to
	a call to _heap_abort but it's not clear that real code can hit this
	(I couldn't figure out how to).

-----------------------------------------------------------------

Tue 15-Mar-94	(GregF)

crtwin32\stdio\input.c
	Added support for I64 size modifier to the scanf-family.

-----------------------------------------------------------------

Mon 14-Mar-94	(GregF)

crtwin32\h\stddef.h
libwin32\include\stddef.h
	Made declaration of errno match the on in stdlib.h.

crtwin32\string\strstr.c
	Fixed bug so that if the second argument is "" (empty string), the
	first argument is returned.

-----------------------------------------------------------------

Fri 11-Mar-94	(GregF)

crtwin32\crt32.def
	Deleted the MIPS_OPTIMIZATION variable. Amounts to removing the
	-Ox- (disable intrinsics) switch from the MIPS build. This
	corresponds to Steve Hanson's change to \\orville\razzle\src\crt32
	version.

crtwin32\makefile
	Replaced lib32 with lib, the current name of the library manager.
	This includes Steve Hanson's change to \\orville\razzle\src\crt32
	version.

crtwin32\helper\mips\llbit.c
	Change from Steve Hanson (made to \\orville version). Basically,
	he turned off the bit shift intrinsics with a pragrma.

crtwin32\helper\mips\llshiftt.c
	Test program. Taken from \\orville version of the tree.

crtwin32\stdio\maketabc.c
	Changed to recognize 'I' as a size modifier. Code change was actually
	made before change to output.c below but I forgot to check it in.

-----------------------------------------------------------------

Thu 10-Mar-94	(GregF)

crtwin32\stdio\output.c
	Added support for I64 size modifier to the printf-family.

-----------------------------------------------------------------

Tue 08-Mar-94	(GregF)

libwin32\lib\mips\msvcrt20.def
	Added _CxxThrowException to exports.

-----------------------------------------------------------------

Sat 05-Mar-94	(GregF)

libwin32\makefile
	Fixed omissions in mips and alpha builds.

-----------------------------------------------------------------

Fri 04-Mar-94	(GregF)

crtwin32\string\sources
	Don't build mips\memcmpm.s any more (superceded by version in
	memorym.s).

-----------------------------------------------------------------

Tue 01-Mar-94	(SteveSa)

crtwin32/heap/malloc.c
crtwin32/heap/new.cxx
	The undocumented global variable _pnhHeap must be declared in
	malloc.c and not new.cxx in case new.obj is overridden by MFC
	or somebody else.

-----------------------------------------------------------------

Tue 01-Mar-94	(GregF)

crtwin32\string\strset.c
	Change from \\orville tree, made there by Jeff Havens.

crtwin32\string\mips\memorym.s, strchrm.s, strrchrm.s
	Bug fixes from Roger Lanser. Taken from the versions in the \\orville
	tree (\\orville\razzle\src\crt32).

-----------------------------------------------------------------

Wed 23-Feb-94 (ChrisWei)

crtwin32\misc\aw_cmp.c, aw_map.c aw_str.c
        Use Unicode versions first.

crtwin32\h[libwin32\include]\limits.h
        Tweak of Greg's new large int stuff, add "u".

-----------------------------------------------------------------

Wed 16-Feb-94 (SteveSa)

crtwin32/heap/malloc.c
crtwin32/heap/new.cxx
	Change malloc and new so that only new failures call the
	new handler (_pnhHeap) which is set by _set_new_handler().
	(* This change turned out to be controversial. *)

	Also revised heapused.c to give a better computation of used memory.

-----------------------------------------------------------------

Thur 10-Feb-94	(GregF)

crtwin32\string\mips\memorym.s
	"Big oopser, memmove/memcpy/memset were not returning the destination
	..." Quote and two-line fix both from Roger Lanser.

crtwin32\misc\i386\exsup.asm, setjmp.asm, setjmp3.asm
	fs:0 holds -1 to mark the end of the exception handler chain, not 0!

-----------------------------------------------------------------

Mon 07-Feb-94	(GregF)

crtwin32\string\mips\*.*
	Added mips subdirectory of fast string routine for the mips. Contents
	came from crt32 tree on \\orville\razzle, from Roger Lanser.

crtwin32\string\sources
	Changed to build the sources above where appropriate.

-----------------------------------------------------------------

Fri 04-Feb-94	(ChrisWei)

crtwin32\dllstuff\crtexe.c
crtwin32\startup\crt0.c, crt0dat.c
crtwin32\misc\setenv.c
        To avoid invalidating the users **envp to main, we copy the 
        environment block. I moved this copying from startup to putenv 
        to work around a benchmark bug, to simplify the code,  and to 
        not do the work before its required.


crtwin32\h\mbctype.h
crtwin32\mbstring\mbctype.c
        Added _setmbcp() and _getmbcp() functions. MB default is now ANSI CP.


crtwin32\h\locale.h, setlocal.h
crtwin32\misc\getqloc.c, setlocal.c
        Updated some of the countries and languages in setlocale(), 
        and changed how the default behavior works, including switching 
        from OEM to ANSI, but this may have to go back if we can't 
        finagle NT 3.1 support as needed.

crtwin32\h\locale.h, setlocal.h stdio.h
crtwin32\stdio\puts.c
        Finished getws/puws stuff.

-----------------------------------------------------------------

Fri 04-Feb-94	(GregF)

crtwin32\buildcrt.nt
	Define _helper for 386 so that helper\i386\*.asm gets built.

crtwin32\makefile.nt
	Synched up with crt32\makefile.

crtwin32\convert\mbstowcs.c, mbtowc.c
	Picked up SteveWo's changes to the build for _NTSUBSET_.

crtwin32\h\limits.h
	Added type suffixes for long and unsigned long constants. Also added
	constant for the sized integral types (e.g., _I64_MAX).

crtwin32\stdio\freopen.c

libwin32\makefile.nt
	Parameterized relative paths to development trees to make renaming
	easier.

libwin32\buildcrt.nt
	Variant of buildcrt.cmd to build the NT SDK version of the libs.

-----------------------------------------------------------------

Thu 03-Feb-94	(GregF)

crtwin32\misc\mips\chandler.c
	Latest from \\orville\razzle\src\crt32\misc\mips (Dave Cutler).

-----------------------------------------------------------------

Wed  02-Feb-94	(GregF)

crtwin32\makefile
	Define HELPER_OBJECTS for x86 build. These are the __int64 helpers.

crtwin32\helper\i386\*.asm
	One too many underscores! With our header file, the names get
	defined as C names (i.e., an underscore gets prepended in the
	transition to from source name to link name).

-----------------------------------------------------------------

Tues 01-Feb-94	(ChrisWei)

crtwin32\*\sources
        add INCLUDE ..\h to tell build.exe to scan our headers
crtwin32\crt32.def
        remove INCLUDES statement

crtwin32\h\stdio.h, wchar.h, tchar.h
crtwin32\stdio\gets.c, puts.c, getws.c putws.c
libwin32\lib\*\msvcrt20.def
        add getws() and putws() functions.


-----------------------------------------------------------------

Mon 24-Jan-94	(GregF)

crtwin32\h\ehdata.h
	Fixed mis-spelling of _M_MRX000

crtwin32\h\setjmp.h
	Fixed mis-spelling of _M_ALPHA.

crtwin32\h\fpieee.h, math.h
	Merged in _LANGUAGE_ASSEMBLY conditionals from Roger Lanser.

crtwin32\tools\win32\relinc.if
	Made _M_MRX000 'ignored' instead of 'undefined'. Also added _M_ALPHA
	to the ignore list, and _MT. Finally, deleted several macros which
	are no longer used.

libwin32\include\fpieee.h, malloc.h, math.h, setjmp.h
	The fix to relinc.if above changed malloc.h and math.h both. In
	addition, math.h had some cosmetic change due to Steve Hanson's
	changes, as did math fpieee.h. Finally, I fixed a mis-spelling
	of _M_ALPHA in setjmp.h.

-----------------------------------------------------------------

Wed 19-Jan-94	(GregF)

***** ALL CHANGES BELOW ARE FROM PHILIP LUCIDO *****

crtwin32\eh\frame.cxx - 	    CHANGED
	PhilipL: "Trivial change to a comment."

crtwin32\eh\i386\trnsctrl.cxx -     CHANGED
	PhilipL: "Get rid of the callback interface I added last month. Add
	the local unwinder for C++ EH used by longjmp(). New public symbols:
		__CxxLongjmpUnwind@4

crtwin32\inc\exsup.inc -	    CHANGED
	PhilipLu: "Move jmp_buf descriptions here for common asm access"

crtwin32\inc\setjmp.h - 	    CHANGED
	PhilipLu: "jmp_buf now 16 DWORDS. Change _JBLEN from 8 to 16 and
	added new fields to _JUMP_BUFFER struct."

crtwin32\inc\setjmpex.h -	    CHANGED
	setjmp must stay #define-d to _setjmp. Instead of #define-ing setjmp
	to be __setjmpex, #define longjmp to be __longjmpex.


crtwin32\misc\i386\abterm.asm -     DELETED
	PhilipLu: "Not needed any more. AbnormalTermination() moved back into
	exsup.asm."

crtwin32\misc\i386\exsup.asm -	    CHANGED
	PhilipLu: "Only routines commond to both C8.0 and C9.0 SEH are left
	here. Public symbols:
		__global_unwind
		__local_unwind
		__abnormal_termination

crtwin32\misc\i386\exsup2.asm -     NEW
	PhilipLu: "New file. The C 8.0 SEH exception handler has been moved
	here. Still needed for old objects, and for RT-DLLs used with old
	apps. Public symbols:
		__except_handler2"

crtwin32\misc\i386\exsup3.asm -     NEW
	PhilipLu: "New file. The C9.0 SEH exception handler created here.
	Also includes the C9.0 local unwinder entrypoint needed for
	longjmp(). Public symbols:
		__except_handler3
		__seh_longjmp_unwind@4

crtwin32\misc\i386\longjmp.asm -    NEW
	PhilipLu: "New file. Maintain old name (_longjmp), but handle both
	the old C8.0 jmp_buf, as well as the longer C9.0 form. If presented
	with a C 8.0 jmp_buf, do the (possibly erroneous) C8.0 behavior. If
	a C9.0 jmp_buf, then check the new data saved by __setjmp3 to
	determine how to unwind exceptions. Public symbols:
		_longjmp

crtwin32\misc\i386\sehsupp.c -	    CHANGED
	PhilipLu: "Contents totally replaced. Now only holds a helper to
	probe a DWORD ptr for readability. Public symbols:
		__rt_probe_read4@4


crtwin32\misc\i386\setjmp.asm -     CHANGED
	PhilipLu: "Everything but __setjmp and raisex moved elsewhere. Leaves
	only the C8.0-compatible setjmp, for old-app compatibility, as well
	as unknown function raisex() (does anybody know what the hell this
	is, and why it's in the ANSI namespace?). Public symbols:
		__setjmp
		_raisex

crtwin32\misc\i386\setjmp3.asm -    NEW
	PhilipLu: "New file. New C9.0 version of setjmp, __setjmp3. This is
	now a varargs compiler intrinsic. The compiler passes whatever data
	will be needed to properly unwind the exception stack when a
	longjmp is done. This includes a ptr to a function to be called to
	do the actual local unwind. Public symbols:
		__setjmp3

crtwin32\misc\i386\setjmpex.asm -   CHANGED
	Define __longjmpex instead of __setjmpex.


-----------------------------------------------------------------

Tue 18-Jan-94	(GregF)

crtwin32\crt32.nt
	Picked up _NTSYSTEM_ flag from NT SDK version (crt32 tree on
	\\orville\razzle), picked up _MB_MAP_DIRECT from Dolphin verion
	(crtwin32 tree).

crtwin32\convert\_mbslen.c, mblen.c, mbstowcs.c, mbtowc.c, toupper.c,
		 towupper.c, wcstombs.c wctomb.c
	Changes from Steve Wood affecting only the libcnt build (i.e.,
	CRTLIBTYPE==NT). For the most part, they amount to calling an Rtl
	API to do the work in each case.

crtwin32\startup\mips\chkstk.s
	Some apparently cosmetic changes by DaveC to keep the MIPS assembler
	happy.

-----------------------------------------------------------------

Tue 18-Jan-94	(SteveSa)

crtwin32\iostream\ios.cxx -
	Revised my 10/28/93 fix to delete critical sections in the IOS
	destructor.  The original fix still created and destroyed the
	lock for the class on every c-tor/d-tor, instead of only doing
	it when all copies of the class are gone.  KarlSi provided
	insight in November on how to really fix this.

-----------------------------------------------------------------

Tue 18-Jan-94	(SteveSa)

crtwin32\heap\heapinit.c -
	Improved check for Win32S / Phar Lap TNT, which do not have
	uncommitted memory.  On those systems the heap should allocate
	smaller memory regions.  Chicago (Win 4.0) may set the "WIN32S"
	bit in the OS version, so we now also check that the Windows
	version is less than 4.0 before using small heap values.

-----------------------------------------------------------------

Mon 17-Jan-94	(GregF)

crtwin32\buildcrt.cmd
crtwin32\h\mm.inc
crtwin32\helper\i386\*.asm
	Simon Koeman's compiler helpers for __int64 arithmetic. They are
	a pretty much a straightforward port of the long int helpers in
	the 16-bit tree.

libwin32\makefile
	Put helper.lib, the __int64 helpers, into msvcrt*.lib for the x86
	build.

-----------------------------------------------------------------

Thu 13-Jan-94	(GregF)

crtwin32\helper\mips\llbit.c, lldefs.h
	Steve Hanson's latest changes, taken from crt32 on \\orville\razzle.

-----------------------------------------------------------------

Tues 11-Jan-94	(GregF)

crtwin32\dllstuff\crtexe.c, crtlib.c
crtwin32\h\internal.h
	When building crtdll.dll/.lib (NT version of the dll), use
	__GetMainArgs rather than __getmainargs.

-----------------------------------------------------------------

Mon 10-Jan-94	(GregF)

libwin32\makefile
	Added Steve Hanson libm to the build (subdirectory and
	library from fpwin32). This is MIPS-only. Also put conditionals
	around build rules to, hopefully, eliminate "unknown target"
	warnings.

-----------------------------------------------------------------

Fri 07-Jan-94	(GregF)

crtwin32\dos\dosmap.c
	Map ERROR_NOT_ENOUGH_QUOTA to ENOMEM. The OS error refers to not
	having enough non-swapable pages to handle...whatever. It can
	result from CreateThread() if too many threads are already in
	existence. Also, deleted Cruiser support and changed the definition
	of the errentry struct to handle codes > 255.

crtwin32\startup\thread.c
	When _beginthread() fails, free up the the _tiddata struct which
	was calloc-ed. Also, map the error on failure.

-----------------------------------------------------------------

Thu 06-Jan-94	(GregF)

crtwin32\buildcrt.cmd, buildcrt.nt
	Corrected typo (_helpdir was mistyped in one place) and added to
	the cleanup of environment variables at the end of the batch files.

crtwin32\h\math.h
	Picked up MIPS-only prototypes for single precision fp functions
	(e.g., sinf) from NT SDK version (Steve Hanson's work).

-----------------------------------------------------------------

Wed 05-Jan-94	(GregF)

crtwin32\crt32.def
	Picked up ALPHA_OPTIMIZATION and MIPS_OPTIMIZATION switches, which
	disable intrinsic functions, from the NT SDK version. I suspect
	these are not necessary for the crtwin32 tree (I think I have put
	in #pragmas to take care of all instances of conflicts), but it
	doesn't hurt to be sure (at least for now).

crtwin32\startup\sources
	Build tlssup.c for all target CPUs. Also, picked up a fix for the
	POSIX build from the NT SDK version (crt32 tree on \\orville\razzle),
	has to do with the private definition of RaiseException() when
	building for POSIX.

-----------------------------------------------------------------

Tue 04-Jan-94	(GregF)

crtwin32\buildcrt.nt
	Added variant of buildcrt.cmd for building the NT SDK version of the
	CRT libs.

-----------------------------------------------------------------

Mon 03-Jan-94	(GregF)

crtwin32\crt32.nt, makefile.nt
	Added variants of crt32.def and makefile for building the NT SDK
	version of the CRT libs.

crtwin32\h\stdlib.h
	Changed type of __mb_cur_max for NT SDK build to be the same as the
	type for the Dolphin build.

crtwin32\h\wchar.h
	Deleted a _CRTVAR1 that crept in with an earlier merge.

crtwin32\winheap\calloc.c, handler.cxx, malloc.c
	Changed #include <os2dll.h> to #include <mtdll.h> (SteveSa renamed
	the include file some time back).

-----------------------------------------------------------------

Mon 03 Jan-94	(SteveSa)

crtwin32\heap\heapadd.c
	Fix a bug which occurs after calls to _heapmin().  If a large block
	is malloc-ed and free-ed and then _heapmin() is called, the last
	entry in the heap will be a DUMMY entry encompassing the large region
	which was returned to the operating system.  Subsequent large mallocs
	will most likely cause a new region to be allocated which will
	overlap with that region.  The pblock pointer in the heap sentinel
	may need to be updated.

-----------------------------------------------------------------

Wed 22-Dec-93	(GregF)

crtwin32\h\winheap.h
	Added this header file used in building the winheap directory (heap
	manager for the NT SDK flavor of the CRT libs).

crtwin32\misc\i386\sehsupp.c
	Fixed and unconditional #define of WIN32_LEAN_AND_MEAN which
	caused warnings.

-----------------------------------------------------------------

Tue 21-Dec-93	(GregF)

crtwin32\oldnames
	 oldnames\makefile, sources
	Delfile-d. These were obsolete and not used (actually, I don't
	think they were EVER used).

crtwin32\convert\sources.nt
	 direct\sources.nt
	 linkopts\sources.nt
	 lowio\sources.nt
	Added. They are slight variations on the regular sources files,
	to be used in building the NT SDK variation of the CRT libs.

-----------------------------------------------------------------

Tue 21-Dec-93	(GregF)

crtwin32\clean.bat
	Cleaned up version of a simple batch file I use locally.

-----------------------------------------------------------------

Mon 20-Dec-93	(GregF)

crtwin32\eh\frame.cxx
crtwin32\eh\i386\trnsctrl.cxx
crtwin32\h\exsup.inc
	Changes from Philip Lucido.

crtwin32\misc\i386\abterm.asm, sehsupp.c
	New from Philip Lucido.

crtwin32\misc\i386\exsup.asm, setjmp.asm
	Changes from Philip Lucido.

crtwin32\misc\sources
	Pick up new files (above) added by Philip Lucido

-----------------------------------------------------------------

Fri 17-Dec-93	(ChrisWei)

Big Unicode-enable checkin:


Files changed:
====================================================================

Subdirectory \direct

findfile.c
sources

Subdirectory \dos

access.c
chdir.c
chmod.c
fullpath.c
getcwd.c
mkdir.c
rename.c
rmdir.c
sources
stat.c
unlink.c

Subdirectory \exec

cenvarg.c
dospawn.c
execl.c
execle.c
execlp.c
execlpe.c
execv.c
execve.c
execvp.c
execvpe.c
sources
spawnl.c
spawnle.c
spawnlp.c
spawnlpe.c
spawnv.c
spawnve.c
spawnvp.c
spawnvpe.c
system.c

Subdirectory \h

ctype.h
direct.h
internal.h
io.h
locale.h
mbstring.h
mtdll.h
process.h
stdio.h
stdlib.h
string.h
tchar.h
time.h
wchar.h

Subdirectory \h\sys

stat.h
utime.h

Subdirectory \lowio

creat.c
mktemp.c
open.c
sources

Subdirectory \mbstring

sources

Subdirectory \misc

getpath.c
makepath.c
searchen.c
sources
splitpat.c

Subdirectory \startup

stdenvp.c
tidprint.c

Subdirectory \stdio

_open.c
fdopen.c
fopen.c
freopen.c
popen.c
sources
tempnam.c
tmpfile.c

Subdirectory \time

asctime.c
ctime.c
sources
strdate.c
strtime.c
utime.c


Files removed:
====================================================================

Subdirectory \mbstring

mbconv.c          1    1  out      
mbfpconv.c        1    1  out      
mbprint.c         2    2  out      
mbscan.c          2    2  out      
mbvprint.c        1    1  out      


Files added:
====================================================================

Subdirectory \direct

wfindfil.c

Subdirectory \dos

waccess.c
wchdir.c
wchmod.c
wfullpath.c
wgetcwd.c
wmkdir.c
wrename.c
wrmdir.c
wstat.c
wunlink.c

Subdirectory \exec

wcenvarg.c
wdospawn.c
wexecl.c
wexecle.c
wexeclp.c
wexeclpe.c
wexecv.c
wexecve.c
wexecvp.c
wexecvpe.c
wspawnl.c
wspawnle.c
wspawnlp.c
wspawnlpe.c
wspawnv.c
wspawnve.c
wspawnvp.c
wspawnvpe.c
wsystem.c

Subdirectory \lowio

wcreat.c
wmktemp.c
wopen.c

Subdirectory \misc

wgetpath.c
wmakepath.c
wsearchen.c
wsplitpat.c

Subdirectory \startup

wstdenvp.c

Subdirectory \stdio

w_open.c
wfdopen.c
wfopen.c
wfreopen.c
wpopen.c
wtempnam.c
wtmpfile.c

Subdirectory \time

wasctime.c
wctime.c
wstrdate.c
wstrtime.c
wutime.c

-----------------------------------------------------------------

Fri 17-Dec-93	(GregF)

crtwin32\makefile
	Simplified some more.

-----------------------------------------------------------------

Thu 16-Dec-93	(GregF)

libwin32\makefile
	Added -opt:noref to Alpha build of msvcrt20.dll

-----------------------------------------------------------------

Mon 13-Dec-93	(SteveSa)

crtwin32\h\heap.h - cosmetic changes
crtwin32\heap\heapinit.c - cosmetic change
crtwin32\h\malloc.h - add _heapused()
crtwin32\heap\sources - add heapused.c
crtwin32\heap\heapused.c - NEW FILE containing _heapused()
libwin32\lib\i386\msvcrt20.def

	Added new routine _heapused() which returns the number of bytes
	of memory reserved by the heap.  It takes two parameters, either
	or both of which may be null.  If non-null, values are stored
	through them.  The first pointer will be set to the number of
	bytes devoted to allocated blocks in the heap, including headers.
	The second value will contain the total of all committed memory,
	both free blocks and in-use blocks.

-----------------------------------------------------------------

Mon 13-Dec-93	(SteveSa)

crtwin32\dllstuff\crtlib.c
crtwin32\h\mtdll.h
crtwin32\startup\dllcrt0.c
crtwin32\startup\thread.c
crtwin32\startup\tidtable.c
	Add new routine _freeptd() which frees up the C run-time's per-thread
	data.  _freeptd() is called in _beginthread() and on DLL_Thread_Detach
	notifications in both MSVCRT*.DLL and DLL's linked with LIBCMT.LIB.
	Note: _freeptd() frees up not only the per-thread data structure but
	also any subordinate buffers that it points to.  The old code had a
	leak even if the user called _beginthread/_endthread because the
	subordinate buffers allocated by tempnam/tmpfile/gmtime/ctime/etc.
	were NEVER freed up.

-----------------------------------------------------------------

Mon 13-Dec-93	(GregF)

crtwin32\h\heap.h
crtwin32\heap\heapadd.c, malloc.c, realloc.c
	Parameterized the allocation granularity as _GRANULARITY, defined
	to be 8 on MIPS, 4 otherwise (currently). Edited size rounding
	in malloc.c and realloc.c, and size and alignment checking in
	heapadd.c, accordingly.

crtwin32\h\excpt.h
	Alpha now sports a spiffy MS front-end, hence syntax of __try -
	__except contructs (e.g., __exception_code) is the same as it is
	for the x86 and MIPS compilers.

-----------------------------------------------------------------

Wed 08-Dec-93	(GregF)

crtwin32\libwin32\makefile
	Added #if !$(ALPHA) to the checks made before a default target
	(processor) pecification is used.

-----------------------------------------------------------------

Tue 07-Dec-93	(GregF)

crtwin32\mbstring\mbprint.c, mbscan.c
	Cast in second arg to va_start was choking alpha compiler!

-----------------------------------------------------------------

Mon 06-Dec-93	 (ChrisWei)

Changed:

crtwin32\h\mbstring.h, tchar.h
crtwin32\mbstring\sources

Added:

crtwin32\mbstring\mbconv.c mbfpconv.c, mbprint.,c mbvprint.c, mbscan.c

        Type-safe MB tchar mappings.

-----------------------------------------------------------------

Fri 03-Dec-93	(GregF)

crtwin32\misc\abs.c, labs.c, rotl.c, rotr.c
crtwin32\string\memcmp.c, memcpy.c, memset.c, strcat.c, strcmp.c, strlen.c
	Enabled #pragma function() directives for all MS front-ends (esp.,
	the Alpha compiler)

crtwin32\string\strset.c
	Added  #pragma function() for Alpha build.

-----------------------------------------------------------------

Wed 01-Dec-93	 (ChrisWei)

crtwin32\startup\crtlib.c [wcrtlib.c removed]
        Create both ascii and wide argv, create only ascii environ for dll.

crtwin32\h\tchar.h
        Fixed STDC inlining check.

-----------------------------------------------------------------

Wed 01-Dec-93	 (ChrisWei)

Files added:

crtwin32\startup\wstdenvp.c
crtwin32\misc\setenv.c, wsetenv.c, wputenv.c, wgetenv.c, wtombenv.c, mbtowenv.c

Files changed:

crtwin32\h\internal.h, tchar.h, stdlib.h
crtwin32\startup\crt0.c, dllcrt0.c, crt0dat.c, stdenvp.c, sources
crtwin32\dllstuff\crtlib.c
crtwin32\misc\getenv.c, putenv.c, sources

Add wide char environment variables. 


crtwin32\dos\chdir.c
        Set OS drive leter strings.

-----------------------------------------------------------------

Wed 01-Dec-93	 (GregF)

libwin32\makefile
	Added alpha support and cleaned up a bit.

libwin32\lib\alpha
	    \alpha\msvcrt20.def
	Def file to build Alpha version of msvcrt20.[dll|lib].

libwin32\i386\msvcrt20.def
	Added exports of some old, obsolescent functions (e.g., _sleep)
	which we need to support for NT SDK compatibility.

libwin32\mips\msvcrt20.def
	Added exports for 64-bit integer arithmetic helpers. Added exports
	for obsolescent functions as described above.

libwin32\tools\alpha
	Added to hold alpha build of tools. If we ever get an alpha, that
	is...

-----------------------------------------------------------------

Wed 01-Dec-93	 (GregF)

crtwin32\buildcrt.cmd
	Revised for new directories (esp., helpers) and changes to
	dirs file. Also fiddled with when linkopts is built.

crtwin32\crt32.def
	Cleaned up and simplified.

crtwin32\dirs
	Merged in NT SDK version.

crtwin32\makefile
	Alpha support. MIPS compiler helpers for 64-bit int arithmetic.
	Lot of cleanup.

crtwin32\convert\iswctype.c
	Always build is_wctype() (not just for _NTSDK).

crtwin32\helper
	\helper\*.*
	       \mips
	       \mips\*.*
	Compiler helper routines. For now, these 64-bit integer
	arithmetic helpers for MIPS compiler.

crtwin32\small
	\small\*.*
	      \mips
	      \mips\huge.s
	Used for NT SDK build only (small.lib).
        
-----------------------------------------------------------------

Mon 29-Nov-93	(ChrisWei)

crtwin32\dos\chdir.c, drive.c
crtwin32\misc\putenv.c
crtwin32\startup\stdenvp.c
        No longer store current drive in CRT env strings.

crtwin32\h\internal.h
        Remove undef GetEnvStrings.
        
-----------------------------------------------------------------

Wed 24-Nov-93   (ChrisWei)

libwin32\include\stdarg.h, wchar.h, ctype.h, dos.h, string.h, time.h, 
                stdlib.h, tchar.h
        Update release headers. Now in sync.
        
-----------------------------------------------------------------

Wed 24-Nov-93   (ChrisWei)

Files added:
crtwin32\dllstuff\wcrtexe.c, wcrtlib.c, wdllargv.c, sources
crtwin32\linkopts\wsetargv.c
crtwin32\startup\wcrt0.c, wdllcrt0.c, wstdargv.c, wwild.c, wwincrt0.c, 
                _wstargv.c, sources

Files changed:

crtwin32\h[libwin32\include]\dos.h, internal.h, stdlib.h, tchar.h
crtwin32\dllstuff\crtexe.c, crtlib.c, sources
crtwin32\startup\crt0.c, crt0dat.c, dllcrt0.c, stdargv.c, wild.c, sources

        Added wide argv handling. Not yet in exec/spawn, etc.

-----------------------------------------------------------------

Mon 22-Nov-93   (ChrisWei)

crtwin32\h[libwin32\include(before next drop)]\ctype.h, string.h, wchar.h
        Use #define wcsxxx _wcsxxx only for SDK, define protos for 
        oldnames.lib for Dolphin. Also, wide char stuff outside of wchar.h 
        must have !__STDC__ test around it.

-----------------------------------------------------------------

Thu 18-Nov-93   (ChrisWei)

crtwin32\misc\aw_*.c

        Test for entry point function stubs.

-----------------------------------------------------------------

Mon 15-Nov-93   (ChrisWei)

crtwin32\h\wchar.h - get rid of W4 struct tm warnings
libwin32\makefile - add to oldnames.lib

-----------------------------------------------------------------
Mon 15-Nov-93   (ChrisWei)

crtwin32\string\strcoll.c, stricoll.c, wcscoll.c, wcsicoll.c,
        strlwr.c, strupr.c, wcslwr.c, wcsupr.c,
        strxfrm.c, wcsxfrm.c
crtwin32\misc\aw_*.c, getqloc.c, initctyp.c, inithelp.c
crtwin32\mbstring\ismbalnm.c, ismbgrph.c, ismbpunc.c
crtwin32\h\setlocal.h
crtwin32\convert\isctype.c, iswctype.c, 
        tolower.c, toupper.c, towlower.c, towupper.c

        Added code page to __crtxxx() calls to allow the caller to determine
        the code page to be used in MB/WC translation. For Dolphin bug #3778.

crtwin32\misc\getqloc.c
        Test all code pages, even ones from OS.

crtwin32\h\tchar.h
libwin32\include\tchar.h
        isascii, isxdigit map to wrong name on MB case.

-----------------------------------------------------------------

Fri 12-Nov-93	(GregF)

crtwin32\convert\strtoq.c
	Added for compatilibity with NT SDK (Alpha only). Only built
	for Alpha so it is doesn't affect x86 or MIPS builds.

-----------------------------------------------------------------

Wed 10-Nov-93	(GregF)

crtwin32\time\systime.c
	Added for compatilibity with NT SDK. Not added to sources yet,so
	it is not getting built.

-----------------------------------------------------------------

Tue 09-Nov-93	(GregF)

crtwin32\startup\crt0.c
	Guard as much as possible of the init. code in the __try/__except
	statement. The important point is UnhandledExceptionHandler() now
	gets called for exceptions that occur during the execution of
	constructors for static C++ objects. Also, moved __initmbctable
	call to here, just before calls to _setargv and _setenvp.

crtwin32\startup\crt0dat.c
	Removed call to __initmbctable from _cinit. The ctype table must
	be initialized before command line arguments and environment strings
	are process, thus it must go in crt0.c, dllcrt0.c and crtlib.c.

crtwin32\startup\dllcrt0.c
	Added call to __initmbctable (used to be in crt0da.c).

crtwin32\dllstuff\crtexe.c
	Guard as much as possible of the init. code in the __try/__except
	statement. For crtexe.c, this is just about everything.

crtwin32\dllstuff\crtlib.c
	Added call to __initmbctable (used to be in crt0dat.c).

-----------------------------------------------------------------

Tue 02-Nov-93	(GregF)

crtwin32\h\conio.h
	Made port i/o prototypes conditional on _M_IX86 (they are MS
	and x86 specific extensions).

crtwin32\h\excpt.h
	Don't redefine C++ EH keywords!

crtwin32\h\fltintrn.h
	Disabled 4069 warning!

crtwin32\h\stdlib.h
	Re-removed obsolete version and mode variables, and associated
	baggage.

-----------------------------------------------------------------

Thu 28-Oct-93	(SteveSa)

crtwin32\h\ios.h
crtwin32\h\streamb.h
crtwin32\iostream\ios.cxx
crtwin32\iostream\mtlock.c
crtwin32\iostream\streamb.cxx
	Critical sections allocated for iostream objects were not being
	de-activated by calling the Win32 API DeleteCriticalSection in
	their destructor.  Added new function _mtlockterm() which is the
	analog of _mtlockinit().  Just free-ing the memory malloc-ed for
	a critical section does not free up the resources that NT allocates
	for a critical section when you call InitializeCriticalSection().

-----------------------------------------------------------------

Tue 26-Oct-93	(ChrisWei)

added files:
	crtwin32\misc\mbval.c setmbval.c

changed files:
	crtwin32\misc\sources, aw_cmp.c, aw_str.c, aw_map.c
	crtwin32\stdio\fgetwc.c
	crtwin32\convert\_mbslen.c, mblen,c, mbstowcs.c, mbtowc.c

        Add test for invalid MB chars. Since requisite flag not supported
        by older NT version, at startup we confirm if flag is supported.

-----------------------------------------------------------------

Fri 22-Oct-93	(ChrisWei)

added files:
	crtwin32\mbstring\ismbalnm.c, ismbgrph.c, ismbpunc.c

changed files:
	crtwin32\h\mbstring.h, tchar.h
	crtwin32\mbstring\sources
	libwin32\lib\i386[\mips]\msvcrt20.def

                These new functions fill out holes in the ismbc* set
        and provide some missing mappings for tchar.h.


crtwin32\misc\aw_str.c
	fixed bug

crtwin32\mbstring\ismbknj.c
	now return FALSE outside of Japan

-----------------------------------------------------------------

Fri 22-Oct-93	(SteveSa)

crtwin32\dllstuff\i386\cinitexe.mak, cinitexe.asm
crtwin32\dllstuff\{i386,MIPS}\cinitexe.obj
crtwin32\startup\i386\crt0init.mak, crt0init.asm
crtwin32\startup\{i386,MIPS}\crt0init.obj
	Change the attribute of the directive section (.drectve) and
	make the symbol name match the section name (both lower case).

-----------------------------------------------------------------

Fri 22-Oct-93	(GregF)

crtwin32\stdio\fread.c, fwrite.c
	Fixed divide-by-0 error which would occur if one used setvbuf
	to completely unbuffer the stream.

-----------------------------------------------------------------

Fri 22-Oct-93	(ChrisWei)

addfiles:
	libwin32\tools\i386[\mips]\aliasobj.exe
        libwin32\tools\source\aliasobj.c
            JonM's new program to build alias objects for oldnames.lib

changes:
	crtwin32\lib\i386[mips]\msvcrt20.def
            add __mbcodepage to exports
	libwin32\buildall.cmd
            clean up MIPS build
	libwin32\makefile
            finish MIPS build, install new oldnames.lib build procedure

-----------------------------------------------------------------

Thu 21-Oct-93	(GregF)

crtwin32\winheap, winheap\*.*
	Picked up winheap directory from crt32 tree. Cleaned up the
	sources a little.

-----------------------------------------------------------------

Wed 20-Oct-93	(SteveSa)

crtwin32\dllstuff\i386\cinitexe.mak, cinitexe.asm
crtwin32\dllstuff\{i386,MIPS}\cinitexe.obj
crtwin32\startup\i386\crt0init.mak, crt0init.asm
crtwin32\startup\{i386,MIPS}\crt0init.obj
	Cleaned up make process to create I386 and MIPS versions
	of cinitexe.obj and crt0init.obj.  Added MSVCNT v1.0
	linker enhancement directives to MIPS versions (which merge
	.CRT into .DATA and cause a default search of KERNEL32.LIB).

crtwin32\dllstuff\MIPS\cinitexe.obj
crtwin32\lowio\MIPS\cinitcon.obj
crtwin32\misc\MIPS\cinitcnv.obj
crtwin32\misc\MIPS\cinitone.obj
crtwin32\startup\MIPS\crt0init.obj
crtwin32\stdio\MIPS\cinitstd.obj
crtwin32\stdio\MIPS\cinittmp.obj
crtwin32\time\MIPS\cinitclk.obj
	Changed CPU type of MIPS objects from R3000 (0x162) to R4000 (0x166)

libwin32\tools\source\i386mips.c,
libwin32\tools\i386mips.exe - tool to convert i386 data-only objects
	to MIPS by changing the machine type and relocation types.
	Changed CPU type of target from R3000 to R4000, fixed display
	of raw data in the object file being edited.

-----------------------------------------------------------------

Tue 19-Oct-93	(ChrisWei)

crtwin32\h\	mbdata.h, mbstring.h - remove _MBCS test and SBCS defines

crtwin32\mbstring\mbsicmp.c, mbsnicmp.c mbsnbicm.c - lowercase compare

-----------------------------------------------------------------

Mon 18-Oct-93	(ChrisWei)

crtwin32\h\	mbctype.h - fix prototype
		tchar.h - add missing mappings

libwin2\include\*.h, sys\*.h - updated from crtwin32 tree

libwin32\makefile, buildall.cmd - add MIPS support & change back to msvcrt20!!
libwin32\lib\i386(mips)\msvcrt30.def -> msvcrt20.def

-----------------------------------------------------------------

Mon 18-Oct-93	(GregF)

crtwin32\misc\sources, i386\setjmp.asm, i386\setjmpex.asm (new)
	Picked up support for NT SDK's setjmp/setjmpex. For Dolphin build,
	the both setjmp and setjmpex will be "EH safe". For _NTSDK, only
	setjmpex will be.

crtwin32\misc\i386\exsup.asm
	Put in fix from Phil Lucido. The DF is indeterminate upon entry to
	_except_handler.

-----------------------------------------------------------------

Thu 14-Oct-93	(GregF)

crtwin32\h\excpt.h, float.h, stdio.h
	Merged again with NT version.

crtwin32\h\fltintrn.h, fstream.h, iomanip.h, ios.h, internal.h, iostream.h,
	   istream.h, malloc.h, mbctype.h, mbdata.h, mbstring.h
	Enclosed any #pragma-s in #ifdef _MSC_VER - #endif to hide them from
	inferior (i.e., non-MS) compilers and RC. Deleted obsolete build
	macro checks conditioned on COMBOINC in some files. Replaced MTHREAD
	with _MT. _ALPHA_ with _M_ALPHA. Deleted _MIPS_ (effectively replaced
	by _M_MRX000).

crtwin32\h\memory.h, new.h, ostream.h, process.h, search.h, setjmp.h,
	   setjmpex.h, signal.h, stdarg.h, stddef.h, stdiostr.h, streamb.h,
	   strstrea.h, syserr.h, tchar.h, varargs.h, wchar.h
crtwin32\h\sys\stat.h, timeb.h, types.h, utime.h
	Modified to support both Cuda and NT version.

-----------------------------------------------------------------

Wed 13-Oct-93	(SteveSa)

Renamed crtwin32/h/os2dll.h to mtdll.h.  Also changed the #include
	lines in all of the source files that include it.

-----------------------------------------------------------------

Fri 08-Oct-93	(GregF)

crtwin32\h\ios.h, locale.h, math.h, mbctype.h, mbstring.h
	Support both NT and Cuda.

-----------------------------------------------------------------

Fri 08-Oct-93	(GregF)

crtwin32\misc\sources, alpha, mips, alpha\*.*, mips\*.*
crtwin32\startup\sources, alpha, mips, alpha\*.*, mips\*.*
	Added stuff from crt32 (NT SDK) to support building for MIPS and
	Alpha.

-----------------------------------------------------------------

Weds 06-Oct-93	(GregF)

crtwin32\h\string.h
	Merged NT and Cuda.

crtwin32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, errno.h, excpt.h,
	   float.h, fltintrn.h, fpieee.h, internal.h, io.h, malloc.h,
	   stdio.h, stdlib.h, time.h
	Fixed conditional #define for _CRTAPI2

-----------------------------------------------------------------

Weds 06-Oct-93	(GregF)

crtwin32\h\malloc.h
	Merged NT and Cuda. Changed _HEAP_MAXREQ to a more useful value.

crtwin32\heap\malloc.c, realloc.c
	Added range check to size requests in malloc, realloc, _expand

crtwin32\mbstring\m*.c (except for mbascii0.c, mbctype.c, mbscat.c,
		  mbsdup.c, mbspbrk.c, mbsspnp.c), s*.c, t*.c
	Replaced _CRTAPI* with __cdecl.

-----------------------------------------------------------------

Tue 05-Oct-93	(GregF)

crtwin32\mbstring\is*.c
	Replaced _CRTAPI* with __cdecl.

-----------------------------------------------------------------

Fri 01-Oct-93	(GregF)

crtwin32\hack
crtwin32\hack\makefile, sources, stubs.c
	Resurrected for NT SDK libs (libcnt.lib uses this, I believe)

-----------------------------------------------------------------

Fri 01-Oct-93	(ChrisWei)

Files changed:

crtwin32\h\stdio.h, wchar.h
libwin32\include\stdio.h, wchar.h
        Add fputws(), fgetws()

crtwin32\stdio\fgetwc.c, fputwc.c ungetwc.c
        Clean up TEXT test

crtwin32\stdio\fgets.c, sources
        Enable for fgetws(), fputws()

Files added:

crtwin32\ fgetws.c, fputws.c
        New wide char functions

-----------------------------------------------------------------

Thu 30-Sep-93	(GregF)

crtwin32\dos\getcwd.c
	Removed #include <error.h> - it was causing lots of annoying
	redefinition warnings.

crtwin32\exec\cenvarg.c, execl.c, execle.c, execlp.c, execlpe.c, spawnl.c
	      spawnle.c, spawnlp.c, spawnlpe.c
	Merged Cuda and NT versions.

crtwin32\exec\getproc.c, loaddll.c
	Resurrected for compatibility with NT SDK (had been considered
	obsolete and dropped from Cuda)"

-----------------------------------------------------------------

Wed 29-Sep-93	(GregF)

crtwin32\string\memcpy.c, memmove.c, memset.c, strcoll.c, stricoll.c,
		wcscoll.c, wcsicoll.c, strtok.c
	Merged Cuda and NT versions.

-----------------------------------------------------------------

Wed 29-Sep-93	(GregF)

crtwin32\convert\isctype.c, iswctype, mblen.c, mbstowcs.c, mbtowc.c,
		 tolower.c, toupper.c, towlower.c, towupper.c, wcstombs.c,
		 wctomb.c
	Merged Cuda and NT versions.

crtwin32\direct\seterrm.c, slbeep.c
	Restored and cleaned up these dinosaurs for the NT SDK build.

-----------------------------------------------------------------

Tue 28-Sep-93	(GregF)

crtwin32\h\io.h
	Restored an /* _MTHREAD_ONLY */ comment which I had accidently
	deleted (kept an internal-use-only preprocessor directive from
	being stripped out!).

-----------------------------------------------------------------

Tue 28-Sep-93	(ChrisWei)

The last of the _MBCS_OS and _KANJI merges:

h\mbctype.h, mbdata.h
mbstring\ismbalph.c, ismbbyte.c, ismbdgt.c, ismblwr.c, ismbprn.c, ismbspc.c, ismbupr.c, mbclevel.c, mbctype.c, mbsicmp.c, mbslwr.c, mbsnbicm.c, mbsnicmp.c, mbsupr.c, mbtohira.c, mbtokata.c, mbtolwr.c, mbtoupr.c, tojisjms.c, tombbmbc.c

The MB stuff now works properly for both Japan and generic MB languages.

-----------------------------------------------------------------

Mon 27-Sep-93	(ChrisWei)

crtwin32\mbstring\ismbknj.c, ismbprn.c., mbclevel.c, mbsnbcat.c,
        mbsncat.c, mbtohira.c, mbtokata.c, tojisjms.c, tombbmbc.c
crtwin32\h\mbctype.h, mbdata.h, mbstring.h
        _MBCS_OS & _KANJI merge: I have added all the Kanji-specific
functions to the normal build process, and merged the few functions
that were different under the two build scenarios.

convert\isctype.c, iswctype.c, tolower.c, toupper.c, towlower.c, towupper.c
misc\aw_cmp.c, aw_loc.c, aw_map.c, aw_str.c, getqloc.c, initcoll.c,
        initctyp.c, inithelp.c, inittime.c,	initnum.c, initmon.c
string\strcoll.c, stricoll.c, strlwr.c, strupr.c, strxfrm.c, wcscoll.c,
        wcsicoll.c, wcslwr.c, wcsupr.c, wcsxfrm.c

        NLS API A&W wrappers: Since Chicago supports only ASCII ("A")
flavors of certain NLS API functions, while NT supports only the
Unicode ("W") type, I have built CRT wrapper functions that, at
runtime, search for the desired type and uses the other if necessary.
These libs will now link on NT and Chicago. This has been partially
tested on NT but not at all on Chicago.

libwin32\include\float.h, fltintrn.h, fpieee.h, fstream.h, heap.h internal.h
	io.h, iostream.h, istream.h, stdio.h, stdlib.h, time.h,
        assert.h, conio.h, ctype.h, direct.h, dos.h, errno.h, excpt.h

        Checked in GregF's changes for Dolphin drop.

-----------------------------------------------------------------

Fri 24-Sep-93	(GregF)

crtwin32\h\float.h, fltintrn.h, fpieee.h, fstream.h, heap.h internal.h
	io.h, iostream.h, istream.h, stdio.h, stdlib.h, time.h

crtwin32\misc\getenv.c, initmon.c, initnum.c, inittime.c, onexit.c

	Merged NT SDK and Cuda versions.


-----------------------------------------------------------------

Fri 24-Sep-93	(ChrisWei)

crtwin32\buildcrt.cmd
libwin32\buildall.cmd
	Make MB build default.

-----------------------------------------------------------------

Thu 23-Sep-93	(GregF)

crtwin32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, errno.h, excpt.h
	Merged NT SDK and Cuda versions.

-----------------------------------------------------------------

Wed 22-Sep-93	(GregF)

crtwin32\string\strlwr.c, strupr.c, wcslwr.c, wcsupr.c
	Merged NT SDK and Cuda versions.

crtwin32\time\utime.c
	Have NT convert local file time to system file time.

-----------------------------------------------------------------

Wed 25-Aug-93	(ChrisWei)

crtwin32\mbstring -
    Change all short params to int.
    Updated the following files from NT-J tree:
        mbsdec.c 
        mbsinc.c 
        mbschr.c 
        mbsnbcat.c 
        mbsnbset.c 
        mbsncat.c 
        mbsnset.c 
        mbsrchr.c 
        mbtohira.c 
        mbtokata.c 
        mbtolwr.c 
        mbtoupr.c 
        tojisjms.c 
        tombbmbc.c 

crtwin32\h -
    Change all short params to int.
    Updated the following files from NT-J tree:
        mbstring.h
    New tchar.h from Ikura.
        tchar.h

-----------------------------------------------------------------

Tue 17-Aug-93	(ChrisWei)

crtwin32\mbstring -
    Updated the following files from NT-J tree:
        mbctype.c
        mbschr.c
        mbsdec.c
        mbsinc.c
        mbsncpy.c
        mbsninc.c
        mbstok.c
        strdec.c
        strinc.c
        strninc.c
        tojisjms.c 
    Added the following files & updated mbstring\sources:
        ismbsle.c
        ismbstr.c
        mbclen.c
        mbccpy.c
        mbsnbcat.c
        mbsnbcmp.c
        mbsnbcpy.c
        mbsnbicm.c
        mbsnbset.c
        mbspbrk.c
        mbsspnp.c 

crtwin32\dos\fullpath.c
crtwin32\lowio\mktemp.c
crtwin32\misc\makepath.c
crtwin32\misc\splitpat.c
crtwin32\startup\stdargv.c
crtwin32\startup\wild.c
crtwin32\stdio\input.c
crtwin32\stdio\output.c
    Merged in NT-J MB changes.

-----------------------------------------------------------------

Fri 06-Aug-93	(SteveSa)

crtwin32\heap\realloc.c -
	Fix bug which occurs when realloc() cannot expand the block in place
	and cannot malloc a new block.  The code was free-ing the successor
	block, a very, very bad thing to do.  The bug occurred rarely because
	it is hard to run out of memory on Windows NT, but it was found by
	the Phar Lap TNT DOS Extender team, where memory is less abundant.
	It looks like this bug was there in the sources since 1989!

-----------------------------------------------------------------

Fri 30-Jul-93	(GregF)

crtwin32\h\internal.h
crtwin32\misc\winsig.c, winxfltr.c
	When a SIGFPE handler has been installed and an FPE occurs, the
	handling for ALL of the FPE-s must be reset to SIG_DFL before calling
	the user's handler (I had been only resetting the handling for the
	one FPE).

-----------------------------------------------------------------

Tue 27-Jul-93	(GregF)

crtwin32\stdio\output.c
	Generalized a bug fix MattBr originally made for the POSIX build
	only. Now, the static functions write_multichar and write_string
	stop trying to write out characters when an error occurs.

-----------------------------------------------------------------

Fri 27-Jul-93	(GregF)

crtwin32\direct\findfile.c
crtwin32\dos\stat.c
crtwin32\h\internal.h
crtwin32\lowio\fstat.c
crtwin32\time\dtoxtime.c, time.c
	Changed so that the only time values obtained and directly used
	from the system are LOCAL time values. This partially handles the
	problems caused by the incompatible definitions of system time
	between Win32 (UTC) and Win32C (local).

-----------------------------------------------------------------
|								|
| * The Final Drop for MSVCNT ver 1.0 was made at this point. * |
|								|
-----------------------------------------------------------------

Fri 23-Jul-93	(SteveSa)

vcrtlib\makefile - added heap/obj/i386/handler.obj to list of C++
	objects mentioned to the linker, so that set_new_handler()
	will be exported from MSVCRT10.DLL.

vcrtlib\lib\i386\msvcrt10.def
	Added _heapadd, _heapchk, _heapmin, _heapset, _heapwalk
	to the list of functions exported by MSVCRT10.DLL.

-----------------------------------------------------------------

Thu 15-Jul-93	(SteveSa for GregF)

<<< Corresponding changes were also made to \\orville\razzle\src\crt32 >>>

vcrt32\time\ftime.c
vcrt32\time\localtim.c
vcrt32\time\mktime.c
vcrt32\time\strftime.c
vcrt32\time\tzset.c
	The routines ftime, localtime, mktime, and strftime were calling
	_tzset to make sure that the timezone/daylight/tzname variables
	were set.  They now call __tzset.  __Tzset calls _tzset the first
	time it is called and thereafter just returns.  The reason for
	this change is that _tzset is very slow if it finds no "TZ"
	environment variable, because in that case it calls the Win32
	routine GetTimeZoneInformationW.

	This behavior is consistent with our 16-bit libraries.  If the user
	changes the "TZ" variable (by calling putenv()), the routine _tzset
	must be called explicitly to make the change to "TZ" effective.

-----------------------------------------------------------------

Wed 14-Jul-93	(SteveSa)

<<< Corresponding change made by Steve Wood to \\orville\razzle\src\crtlib >>>

vcrtlib\lib\i386\msvcrt10.def
	Added _clear87 to the list of functions exported by MSVCRT10.DLL.

-----------------------------------------------------------------

Tues 13-Jul-93	(GregF)

vcrt32\lowio\open.c
	_read_lk() was being called to read the last character of a text
	file, to see if it was ^Z. Well, _read_lk() will return 0 if it
	read a single ^Z (treats it as an eof flag rather than a char).

-----------------------------------------------------------------

Thu 01-Jul-93	(SteveSa)

<<< Corresponding change was also made to \\orville\razzle\src\fp32 >>>

vcfp32\conv\strgtold.c
	Made buf[] a stack local, not a static global, to avoid bugs in
	multi-thread models.

-----------------------------------------------------------------
|								|
|	***  The "Jaws" Drop was made at this point.  ***	|
|								|
-----------------------------------------------------------------

Wed 30-Jun-93	(GregF)

<<< Corresponding change was also made to \\orville\razzle\src\crt32 >>>

vcrt32\time\tzset.c
	Added limited support for system's notion of local time. If there
	is no TZ environment variable, I attempt to use GetTimeZoneInform-
	ation to determine the offset to local time and whether or not
	daylight saving time exists in the time zone.

-----------------------------------------------------------------

Tue 29-Jun-93	(GregF)

vcrt32\stdio\ftell.c
	Fixed another nasty bug with the variable buffer sizing. ftell
	was using _bufsiz as the size of the last read request from the
	file, which isn't always true.

-----------------------------------------------------------------

Tue 22-Jun-93	(GregF)

vcrt32\h\file2.h
vcrt32\stdio\_filbuf.c, _freebuf.c, fseek.c, setvbuf.c
	Introduced _IOSETVBUF flag to fix an interaction between
	setvbuf() and the scheme for using a variable buffer size on
	"random access" files opened for read-access-only. The way to
	fix the bug was to introduce a new flag, _IOSETVBUF, and use to
	suppress this variable buffer size hooha.

-----------------------------------------------------------------
|								|
| Weekly Drop .3167 (Wed 16 June 1993) was made at this point.	|
|	(The libs were actually rebuilt Thu 17 June 1993.)	|
|								|
-----------------------------------------------------------------

Thu 17-Jun-93	(JamesMa)

vcrt32\include\float.h
	Changed _statusfp & _clearfp to macros.
	
-----------------------------------------------------------------

Weds 16-Jun-93	(GregF)

vcrt32/string/i386/strcat.asm, strcmp.asm, strlen.asm
	Added FPO directives.

-----------------------------------------------------------------

Tue 15-Jun-93	(GregF)

vcrt32/direct/sources
vcrt32/direct/i386/enable.asm
vcrt32/h/dos.h
	Resurrected old x86-specific functions, _enable() and _disable().

-----------------------------------------------------------------

Mon 14-Jun-93	(GregF)

vcrt32/string/i386/strcmp.asm
	Fixed special case bug found by DanS.

-----------------------------------------------------------------
|								|
| Weekly Drop .3160 (Wed 09 June 1993) was made at this point.	|
|								|
-----------------------------------------------------------------

Wed 09-Jun-93	(SteveSa)

<< Corresponding changes made to \\orville\razzle\src\crt32 and crtlib >>

vcrt32/h/iomanip.h
vcrtlib/include/iomanip.h
	The const keyword was added to the declarations of the << and >>
	operators of SMANIP, whatever that means.  This apparently fixes
	Cuda Bug 5048, an unnecessary warning message about lvalues and
	what not.

----------------------------------------------------------------------

Tue 08-Jun-93	(SteveSa)

vcrt32\dllstuff\crtlib.c, crtdll.c
vcrt32\startup\dllcrt0.c
	Clean up error handling in case of failure.
	If the user routine DllMain returns failure on Process Detach,
	C Run-Time clean-up should still occur.  (It now does.)  If the
	user DllMain returns failure on Process Attach, the CRT should
	clean up its own just-initialized data structures before
	returning failure.  MSVCRT10.DLL should also clean up its heap
	if it fails further initialization and will return failure on
	Process Attach.

	I also cleaned up the white space in some header files (fcntl.h).

----------------------------------------------------------------------

Tue 08-Jun-93	(GregF)

<<< Corresponding changes made to \\orville on 07-Jun>>

vcrt32\dllstuff\crtlib.c, crtdll.c
vcrt32\startup\dllcrt0.c
	Added a flag to kept track of process-attach notification to
	the DLL (our crtdll, or a user dll linked with one of our libs).
	The idea is to avoid doing any 'cleanup' on process-detach
	notification unless there has been a prior process-attach
	notification. Kinky, but this can occur as a result of a call
	to LoadLibrary that fails (e.g., load a DLL which uses several
	other DLLs and one of the DLLs is bad in some manner which causes
	the loader to quit and return an error).

----------------------------------------------------------------------

Mon 07-Jun-93	(ChrisWei)

<<< Changes already made by KarlSi to \\orville >>

vcrt32\h\stdlib.h
vcrt32\convert\_mbslen.c
vcrtlib\include\stdlib.h
vcrtlib\lib\i386\msvcrt10.def
	Change _mbslen to _mbstrlen, return type to size_t.

----------------------------------------------------------------------

Thu 03-Jun-93	(PhilipLu)

<<< Changes already made by GregF to \\orville >>

vcrt32\h\fcntl.h
	Add _O_SHORT_LIVED, _O_SEQUENTIAL, _O_RANDOM
vcrt32\lowio\open.c
vcrt32\stdio\_open.c
	Support lowio/stdio access to FILE_ATTRIBUTE_TEMPORARY,
	FILE_FLAG_SEQUENTIAL_ACCESS and FILE_FLAG_RANDOM_ACCESS
	CreateFile attributes

----------------------------------------------------------------------

Wed 02-Jun-93	(ChrisWei)

<<< Change made to \\orville\razzle\src\crt32 almost simultaneously >>>

vcrt32\convert\_mbslen.c
	verify MB validity
vcrt32\convert\mblen.c, mbtowc.c
	rewrite - bugs, optimize, error handling
vcrt32\convert\wctomb.c, wcstombs.c, mbstowcs.c, tolower.c, toupper.c
vcrt32\string\strlwr.c, strupr.c
	optimize and beautify

----------------------------------------------------------------------

Fri 28-May-93	(ChrisWei)

vcrt32\h[vcrtlib\include]\tchar.h
	Add another level of indirection to the _TEXT macro to allow
	_TEXT(__FILE__) to work.

----------------------------------------------------------------------

Wed 26-May-93	(SteveSa)

dos\getcwd.c -
	To get the current directory of a non-current drive, we were
	consulting the special environment variables.  It seems wiser
	to use the Win32 function GetFullPathName() to resolve this
	information.  The latter seems to work well on TNT.

vcrt32\h\process.h
vcrtlib\include\process.h
	Add prototypes for _CRT_INIT(@12) and DllMain(@12).  The latter
	is not declared if -Za is selected because of its non-ANSI name.

----------------------------------------------------------------------

Tue 25-May-93	(GregF)

h\stdio.h
stdio\_filbuf.c, fseek.c
	Use a small buffer size (_SMALL_BUFSIZ) for the first _filbuf
	call following an fseek on a read-access-only file. The idea is
	to reduce the penalty of a large default buffer size on random
	access files, at least those which are opened only for read
	access.

----------------------------------------------------------------------

Mon 24-May-93	(SteveSa)

vcrt32/makefile
vcrtlib/makefile - new object atonexit.obj is added to MSVCRT.LIB

vcrt32/h/stdlib.h
vcrtlib/include/stdlib.h -
	atexit/_onexit/onexit no longer take _CRTIMP [ __declspec(dllimport) ]

vcrtlib/lib/i386/msvcrt10.def - atexit/_onexit are now exported only
	as indirects (_imp__*) so that they will not be called directly
	Also added __dllonexit.

vcrt32/dllstuff/sources - add atonexit.c
vcrt32/dllstuff/atonexit.c - implements atexit/_onexit for EXEs and DLLs
	linked with MSVCRT.LIB.  At run-time, the code will implement
	either a call to __dllonexit to maintain a private atexit/_onexit
	list for the DLL (which will be called on DLL process detach)
	or else a call to _onexit exported from MSVCRT10.DLL for an EXE.

vcrt32/dllstuff/crtexe.c
vcrt32/dllstuff/crtdll.c - minor changes to support the new atexit/_onexit

vcrt32/misc/onexit.c - add __dllonexit routine for CRTDLL model only

	Before these changes, a DLL which was loaded and unloaded dynamically
	(via LoadLibrary/FreeLibrary) which also registered C++ destructors 
	or called atexit/_onexit would add entries to the process-wide
	atexit table in MSVCRT10.DLL.  That table was not processed until
	process termination, at which time the d-tors or atexit routines
	were long gone.  Those d-tors and atexit routines must be called
	when the DLL is unloaded, whenever that is.  An EXE linked with
	MSVCRT.LIB remains pretty much the same, but a DLL linked with
	MSVCRT.LIB now does the right thing in all cases.

----------------------------------------------------------------------

Tue 25-May-93	(GregF)

string\strspn.c, strtok.c
	Properly handle chars > 127 in both the delimiter and source
	strings. Note that strspn.c isn't actually used in our build
	(we use i386\strspn.asm). The change to strspn.c is identical
	to the one made to crt32\string\strspn.c on \\orville\razzle.
	However, the change to strtok.c is a bit more efficient than
	the bug fix I made to the crt32 version.

----------------------------------------------------------------------

Fri 21-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

convert\strtol.c, wcstol.c
	Fixed bug in strtoul/wcstoul introduced by last 'fix'.

----------------------------------------------------------------------

Thu 20-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

misc\getqloc.c, initctyp.c, initmon.c, initcoll.c, initnam.c,
     inittime.c
	replaced #include <windef.h> and #include <winnls.h> with
	#include <windows.h>

----------------------------------------------------------------------

Tue 18-May-93	(SteveSa)

tools\win32\relinc.if
h\stdarg.h
h\stdio.h
h\varargs.h
h\wchar.h
	Change #if defined(FOO) to #ifdef FOO for _ALPHA_, _MIPS_, and
	_M_MRX000.  Move those symbols in the if-stripper script from
	enabled & kept to disabled & discarded.  MIPS & ALPHA support
	is inappropriate for Visual C++ v1.0 for Windows NT.

----------------------------------------------------------------------

Mon 17-May-93	(GregF)

dllstuff\crtexe.c
startup\crt0.c
startup\stdargv.c
	Handle a quoted program name with embedded spaces ("argv[0]").

----------------------------------------------------------------------

Mon 17-May-93	(SteveSa)

h\io.h -
	The oldnames #defines used to be suppressed if __cplusplus was
	defined.  KarlSi made this change last summer because #define-ing
	open, read, write, etc.  User C++ code was likely to use those
	names.  Now that we do link-time aliasing, we need not worry about
	these names and C++ code.

----------------------------------------------------------------------

Tue 11-May-93	(GregF)

h\stdio.h
lowio\chsize.c
stdio\_file.c, _getbuf.c, _sftbuf.c, fread.c, fwrite.c, setbuf.c
	Introduced the manifest constant _INTERNAL_BUFSIZ, and used
	it to specify the default size for stdio buffers. The only
	file that now references the BUFSIZ is setbuf. Stdio buffers
	are now 4K (#define _INTERNAL_BUFSIZ 4096) by default.

----------------------------------------------------------------------

Mon 10-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

stdio\fflush.c
	Removed bogus call to ftell (inadvertent part of a change made
	by MattBr on 3-10-93).

----------------------------------------------------------------------

Mon 10-May-93	(ChrisWei)

misc\setlocal.c - minor bug fix.
h[vcrtlib\include]\wchar.h - remove unneeded protos
stdio\fgetwc.c, fputwc.c, ungetwc.c, _flsbuf.c, _filbuf.c
	- more fixes, optimizations, better error handling
iostream\istrldbl.cxx, ostrldbl.cxx, sources
	- enable operator<<(long double)
h[vcrtlib\include]\istream.h, ostream.h
	- enable operator<<(long double)

----------------------------------------------------------------------

Mon 10-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

convert\strtol.c
	Fixed error check (didn't handle conversion of LONG_MIN
	correctly).
----------------------------------------------------------------------

Mon 10-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

lowio\getch.c
	Was free-ing a bad pointer in _kbhit (Cuda bug 4373)

----------------------------------------------------------------------

Fri 07-May-93	(JonM)

h\setjmpex.h - created.
tools\win32\relinc.cmd - added setjmpex.h.

----------------------------------------------------------------------

Thu 06-May-93   (SteveSa)

h\internal.h
heap\heapinit.c
startup\dllcrt0.c
dllstuff\crtlib.c -
	Add _heap_term() to free up the memory (and address space) allocated
	for the heap.  _heap_term is called on DLL detach, but not in the EXE.
	The heap regions are decommitted and released (two separate calls
	since the tail part of a region may be uncommitted) and the pages
	that are used for heap descriptors are now chained together so that
	they too can be deallocated (released).  This was a tremendous
	problem with DLLs which were repeated loaded and unloaded since
	the process address space was being eaten up, even if not much
	actual virtual memory was allocated.

----------------------------------------------------------------------

Wed 05-May-93   (ChrisWei)

h\time.h - add wcsftime proto when !STDC
h\wchar.h, ctype.h - change is_wctype to iswctype as per new ISO
convert\iswctype - change is_wctype to iswctype as per new ISO

----------------------------------------------------------------------

Wed 05-May-93	(SteveSa)

startup\wild.c - use case-insensitive comparison (_stricmp) when sorting
	filenames matching a given wildcard command line argument
	(This change made by Steve Wood to the CRT32 project.)

----------------------------------------------------------------------

Wed 05-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

startup\mlock.c
	Turned off DEBUG code.

----------------------------------------------------------------------

Tue 04-May-93   (ChrisWei)

convert\mbstowcs.c, wcstombs.c, mbtowc.c, wctomb.c
	Total rewrite of bogus code.
h\stdio.h
	Remove some unneeded protos.
stdio\fgetchar.c, fgetwchr.c, fputchar.c, fputwchr.c
	Move wide char code to its own file.

----------------------------------------------------------------------

Thu 29-Apr-93	 (GregF)

stdio\tmpfile.c
	Yet another bug in tmpnam() for multithread - I was neglecting
	to copy the generated filename from the main buffer to the per-
	thread buffer. What a cretin...

----------------------------------------------------------------------

Thu 29-Apr-93   (ChrisWei)

Enabled correct wide char print/scan/get/put. Gobs of files affected:

Files modified:

vcrt32\stdio\_filbuf.c, _flsbuf.c, _getbuf.c, setvbuf.c, fgetc.c, fgetchar.c,
	fputc.c, fputchar.c, input.c, output.c, winput.c, woutput.c, ungetc.c
vcrt32\h\[vcrtlib\include\]tchar.h, wchar.h, stdio.h, stdlib.h

Files Added:

vcrt32\stdio\_filwbuf.c, _flswbuf.c, fgetwc.c, fgetwchr.c, fputwc.c,
	fputwchr.c, ungetwc.c

----------------------------------------------------------------------

Wed 28-Apr-93   (SteveSa)

vcrt32/vcrt32.def
vcfp32/fp32.def
	Remove -Gf and -Gy (string pooling & COMDATs) from compiler
	options, undoing my change of Mon 26-Apr which added them.

----------------------------------------------------------------------

Wed 28-Apr-93   (JonM)

h\math.h
	Added "long double" functions as macros which call the
	"'double" functions with appropriate type conversions.

----------------------------------------------------------------------

Wed 28-Apr-93	(GregF)

string\i386\strcat.asm, strlen.asm
	Rewritten for the 486.

----------------------------------------------------------------------

Wed 28-Apr-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

dllstuff\crtexe.c, crtlib.c
misc\winxfltr.c
startup\crt0.c, crt0msg.c, dllcrt0.c, thread.c
	Removed support for C RTEs _RT_STACK, _RT_INTDIV, _RT_NONCONT
	and _RT_INVALDISP. These are Win32 exceptions, and there was
	no reason not to just let the system exception handler handle
	them. Besides, it makes things easier for debuggers...

----------------------------------------------------------------------

Tue 27-Apr-93	(SteveSa)

dllstuff/crtlib.c
startup/tidtable.c
startup/crt0.c
startup/dllcrt0.c
h/internal.h - _mtinit now returns success or failure, rather than calling
	_amsg_exit when it cannot allocate a TLS index.  DLLs should fail
	to load, now exit the process.

h/heap.h
heap/heapinit.c
heap/heapgrow.c - initial heap region size defaults to large value (for
	Windows NT, where uncommitted memory is supported) but _heapinit
	now checks for Win32S or TNT and selects smaller values for those
	environments, where all memory is allocated (even if it is supposed
	to be uncommitted.)  Each successive heap region is twice as big
	as the previous one until the limit is reached.  The limit is now
	a variable rather than a constant, and it is also either a large
	value or a smaller one.

----------------------------------------------------------------------

Mon 26-Apr-93	(SteveSa)

vcfp32/tran/i386/87cdisp.asm - corrected a syntax problem which causes
	problems with MASM 6.10 (reported by Rich Shupak).

vcrt32/vcrt32.def	(*** NOTE: THIS CHANGE WAS UN-DONE on 28-APR-93 ***)
vcfp32/fp32.def - add -Gf and -Gy to build options (string pooling, COMDATs)

dos/fullpath.c
dos/getcwd.c - check for drive validity and set errno and _doserrno accordingly

----------------------------------------------------------------------

Mon 26-Apr-93	(GregF)

<<< Same change made to \\orville\razzle\src\crt32 on 23-April by SteveWo >>>

h\limits.h
	Restored new defs of CHAR_MIN, SHRT_MIN, INT_MIN and LONG_MIN.

----------------------------------------------------------------------

Sun 25-Apr-93	(Jamesma)

linkopts\fp10.c, linkopts\sources, makefile
	Added fp10.c - allows users to override new default 53-bit FP
	precision with full 64-bit precision (CUDA bug 2368).
	
----------------------------------------------------------------------

Fri 23-Apr-93	(GregF)

stdio\tmpfile.c
	Fixed 2444 (multiple threads would get the same names back from
	tmpnam). Also, made the namebufX buffers static - ANSI really does
	not allow returning an error from tmpnam or tmpfile because a
	malloc failed.

	I do not plan to make this change to the CRT32 tree on \\orville
	unless somebody in NT-land complains.

----------------------------------------------------------------------

Thu 22-Apr-93   (JonM)

misc\getqloc.c, misc\inithelp.c
	Fixed TNT compatibility problem by dynamically linking to
	GetLocaleInfoW().  Unfortunately it took me several tries to
	get this right.

startup\wincrt0.c
	Added a "-defaultlib:user32" directive for graphical startup,
	since it requires that MessageBox be linked.  (cuda:3521)

----------------------------------------------------------------------

Wed 21-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

h\limits.h
	Restored old defs of CHAR_MIN, SHRT_MIN, INT_MIN and LONG_MIN.

----------------------------------------------------------------------

Wed 21-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

convert\strtol.c, wcstol.c
	Removed assumption that LONG_MIN == -LONG_MAX.

----------------------------------------------------------------------

Tue 20-Apr-93	(SteveSa)

dllstuff/crtdll.c
startup/dllcrt0.c - add _CRT_INIT(@12) back in, make it co-exist with DllMain

h/internal.h
startup/crt0dat.c
dllstuff/dllcrt0.c - call _cexit on DLL Detach notification

h/heap.h
heap/growheap.c - successive heap regions double in size until reaching 16 MB

vcrtlib/makefile
vcrt32/h/malloc.h - alloca must be #define-d to be _alloca, not aliased at
	link-time using OLDNAMES.LIB.  _alloca is a compiler intrinsic.

----------------------------------------------------------------------

Tue 20-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

h\limits.h
	Better defs of CHAR_MIN, SHRT_MIN, INT_MIN and LONG_MIN.

----------------------------------------------------------------------

Tue 20-Apr-93	(ChrisWei)

vcrtlib\lib\i386\msvcrt10.def
	Add isleadbyte to export list.

vcrt32, crt32\misc\getqloc.c
	Enable japan and others.

vcrt32\misc\initnum.c initmon.c initctyp.c
	Better return val check.

vcrt32\misc\inithelp.c
	JonM GetLocaleInfoW hack, fix casting bugs.

----------------------------------------------------------------------

Tue 20-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

lowio\cgets.c, cputs.c
	Use ReadConsole and WriteConsole instead of ReadFile and WriteFile.

startup\stdargv.c
	Slightly change to test in do-while loop in parse_cmdline so that
	chars with high bit set (i.e., chars > 127) don't terminate the
	loop

----------------------------------------------------------------------

Mon 19-Apr-93   (SteveSa)

h/heap.h - reduce initial heap region from 4 MB to 16 KB.  Win32S and TNT
	have to allocate that region, not just reserve the address space!

h/internal.h,
dos/getcwd.c,
dos/stat.c -
	Move _validdrive() from stat.c to getcwd.c and made it static
	Removed it from internal.h since it is no longer shared.

misc/cmiscdat.c - remove obsolete variable _sigintoff

misc/winxfltr.c - put MT-only variable XcptActTabSize under #ifdef MTHREAD

startup/crt0.c,
startup/dllcrt0.c - remove obsolete variable _atopsp

startup/crt0dat.c - remove obsolete variable _child

----------------------------------------------------------------------

Thu 15-Apr-93   (JonM)

h\ios.h
h\streamb.h

	Added some _CRTIMP's (_mtlock, _mtunlock).

misc\i386\exsup.asm

	Put the signature 'XC00' in .text immediately before the
	beginning of the __except_handler2 function.  This is so the
	debugger can recognize it specially (request from MikeMo).

vcrtlib\makefile

	Added _tzset to oldnames.lib.

----------------------------------------------------------------------

Wed 14-Apr-93   (SteveSa)

vcrt32/makefile
dllstuff/dllmain.c - deleted
startup/dllmain.c - added
dllstuff/sources
startup/sources

	DLLMAIN.OBJ is needed for all 3 CRT library models, so I moved
	dllmain.c from dllstuff/ to startup/ and adjusted the sources files.
	DLLMAIN.OBJ goes into LIBC.LIB, LIBCMT.LIB and MSVCRT.LIB.
	It will not go into MSVCRT10.DLL because nothing there needs it.

----------------------------------------------------------------------

Wed 14-Apr-93   (SteveSa)

startup/tidtable.c
dllstuff/crtdll.c
dllstuff/crtlib.c
dllstuff/dllmain.c
dllstuff/sources
vcrt32/makefile
vcrtlib/makefile

	Change CRT entry point (notification routine) for DLLs
	from _CRT_INIT(@12) to _DllMainCRTStartup(@12).  This
	routine will call the user routine DllMain(@12) on all
	notifications.  If the user does not provide a DllMain
	there is a dummy one provided in MSVCRT.LIB (dllmain.c).

	The new file dllstuff/dllmain.c had to be added to
	dllstuff/sources.  VCRT32/makefile and VCRTLIB/makefile were
	changed to reflect the addition of DLLMAIN.OBJ to MSVCRT.LIB.

	Also, _CRTDLL_INIT and _DllMainCRTStartup (formerly _CRT_INIT)
	no longer _mtdeletelocks directly but now call _mtterm, which
	is for multi-thread termination what _mtinit does for multi-
	thread initialization.  _mtterm calls _mtdeletelocks and also
	frees up the TLS index.  The TLS index must be freed in case
	a DLL (or a DLL which references MSVCRT10.DLL) is repeatedly
	loaded and freed.  Otherwise you will run out of TLS indices.

----------------------------------------------------------------------

Wed 14-Apr-93   (JamesMa)

misc\i386\exsup.asm
	Remove setjmp(), longjmp() & raisex() routines for granularity
	purposes.
	
misc\i386\setjmp.asm
	New file containing setjmp(), longjmp() & raisex().
	
misc\sources
	Add setjmp.asm.
	
h\exsup.inc
	New file containing data structures & definitions common to
	exsup.asm & setjmp.asm.
	
----------------------------------------------------------------------

Wed 14-Apr-93   (ChrisWei)

vcrt32\misc\charmax.c
vcrt32\misc\lcnvinit.c
vcrt32\h\locale.h
vcrtlib\include\locale.h
	Cleanup and change _charmax from short to int.

vcrt32\time\strftime.c
	Bug fixes.

vcrt32\h\stdlib.h, ctype.h
vcrtlib\include\stdlib.h, ctype.h
	Change _mb_cur_max from short to int, simplify MB_CUR_MAX def.

vcrt32\string\wcsicmp.c, wcsnicmp.c
	Remove locale-sensitive stuff.
vcrt32\string\strcoll.c, stricoll.c, wcscoll.c wcsicoll.c
	Error sets errno, cleanup.

----------------------------------------------------------------------

Tue 13-Apr-93   (SteveSa)

h/setjmp.h
	Remove inappropriate _CRTIMP from declaration of setjmp
	(which is #define-d to _setjmp).  It is a compiler intrinsic

----------------------------------------------------------------------

Tue 13-Apr-93   (ChrisWei)

ANSI says that certain members of the lconv structure must be set to
CHAR_MAX, the value of which changes when the user compiles -J.

The following files were added:

vcrt32\misc\charmax.c
	Defines _charmax var and stuffs a pointer to the lconv_init
	function into initializer array.
vcrt32\misc\lcnvinit.c
	Sets the lconv members to UCHAR_MAX (255)

The following files were modified:

vcrtlib\makefile
	Add charmax.obj to objects in msvcrt10.lib.
vcrtlib\lib\i386\msvcrt10.def
	Add _lconv_init to exports.
vcrt32\misc\sources
	Add charmax.c, lcnvinit.c.
vcrt32\h\setlocal.h
	Add lconv struct definition.
vcrt32\h\locale.h
	Add extern _charmax reference when _CHAR_UNSIGNED defined.
vcrt32\dllstuff\crtexe.c
	Add xia..xiz initializers and initializer call.
vcrt32\dllstuff\i386\cinitexe.asm
	Add xia..xiz initializers.
vcrt32\dllstuff\i386\cinitexe.asm
	Add xia..xiz initializers.

----------------------------------------------------------------------

Tue 13-Apr-93   (JonM)

h\(various).h, sys\stat.h
	Using the new push/pop syntax for "pragma pack", modified the
	.h files to restore the packing state to what it was before
	the #include.

        Removed directives which suppressed the warning about a .h file
	changing the "pragma pack" state.

----------------------------------------------------------------------

Mon 12-Apr-93	(ChrisWei)

<<< Same change made previously to \\orville\razzle\src\crt32 >>>

vcrt32\h\ctype.h
vcrtlib\include\ctype.h
	Changed is* macros to evaluate args only once.
	Changed isw* macros to evaluate args only once.
	Protection around _MB_CUR_MAX macro.
vcrt32\h\wchar.h
vcrtlib\include\wchar.h
	Changed isw* macros to evaluate args only once.
vcrt32\h\stdlib.h
vcrtlib\include\stdlib.h
	Protection around _MB_CUR_MAX macro.

----------------------------------------------------------------------

Mon 12-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

stdio\popen.c

	Removed redundant CloseHandle call to close the child process
	handle from _pclose. By the time CloseHandle is called, an earlier
	call to _cwait has already called the child process handle. This
	was NTBUG #4165

----------------------------------------------------------------------

Thu 08-Apr-93	(ChrisWei)

vcrt32\h\errno.h - added EILSEQ errno = 42
vcrtlib\include\errno.h - added EILSEQ errno = 42
vcrt32\misc\syserr.c - added EILSEQ error message

----------------------------------------------------------------------

Thu 08-Apr-93	(SteveSa)

stdio/tmpnam.c - used access rather than _access
time/tzset.c - used strdup rather than _strdup
misc/getenv.c - used strnicmp rather than _strnicmp
misc/getqloc.c - used stricmp rather than _stricmp
misc/initnum.c - used strdup rather than _strdup

	Changing the OLD NAMES implementation from #define to
	prototypes and link-time aliasing revealed these five
	places where an old name was used in our source code,
	rather than the ANSI conforming new name (with a leading
	underscore.)  The #define's made these differences
	irrelevant, but now they are significant.  All were fixed.

h/direct.h 
	Fix oldnames prototype for getcwd() - had an extra parameter

vcrtlib\include
vcrtlib\include\sys
	Updated the ones that GregF missed.

----------------------------------------------------------------------

Thu 08-Apr-93	(GregF)

vcrtlib\include
	Updated header files to match vcrt32\h.

----------------------------------------------------------------------

Thu 08-Apr-93	(GregF)

<<< GregF change of 6 April to CRT32 project on \\orville\razzle >>>

vcrt32\time\dtoxtime.c
	Rewrote expression to avoid bogus compiler warning.

----------------------------------------------------------------------

Wed 07-Apr-93	(SteveSa)

Most Header Files (!!!)
and Some C Source Files
dllstuff/crtexe.c
dllstuff/crtlib.c
tools/win32/relinc.if
vcrtlib/lib/i386/msvcrt10.def

	Add _CRTIMP keyword to functions and variables exported from
	MSVCRT10.DLL.  In the cleansed (public) header files, this
	keyword evaluates to __declspec(dllimport) if _DLL is defined,
	and nothing otherwise.  For the internal build, it will evaluate
	to __declspec(dllexport) if CRTDLL is defined.  The _CRTIMP
	keyword is not necessary in the source code if the prototype
	in the header file uses it first.  Also, intrinsic functions
	like abs, _rotl, sin, atan, etc. cannot be _declspec-ed!
	I edited the .DEF file to change all of the exported data items
	from "foo_dll CONSTANT" to "foo DATA" to reflect this change.
	I also renamed _ValidDrive to _validdrive and __GetMainArgs to
	__getmainargs.  We should keep all CRT routines lower-case for
	clarity since Win32 APIs are mixed case.  In order to export
	the EXE's value of _fmode and _commode to MSVCRT10.DLL, I had
	to modify CRTLIB.C to use a different mechanism.  In the old
	days, the _DLL versions of _fmode and _commode could just be
	#undef-ined, but now the __declspec(dllimport) versions had to
	be declared directly (as int * _imp___fmode, etc.).  I had to
	add a special symbol, SPECIAL_CRTEXE, to INTERNAL.H and STDLIB.H
	which must be stripped during the cleansing process.

----------------------------------------------------------------------

Wed 07-Apr-93   (JamesMa)

iostream\ios.cxx, iostream\streamb.cxx
	Initialize LockFlg to -1 so that locking is enabled by default.
	
----------------------------------------------------------------------

Wed 07-Apr-93   (JonM)

h\ios.h, h\iostream.h, h\istream.h, h\ostream.h, h\streamb.h
	Added _CRTIMP's so that the iostream classes will be in
	msvcrt10.dll.

vcrtlib\makefile
	Enhanced the oldnames.lib build to add the import symbols too,
	for clients of msvcrt10.dll.

	Modified the msvcrt10.dll build so that we export the iostream
	classes.

vcrtlib\lib\i386\msvcrt10.def
	Add a couple of internal things (conversions between ASCII and
	10-byte reals) which the IDE debugger needs for displaying
	the contents of the x87 stack.

----------------------------------------------------------------------

Wed 07-Apr-93   (JonM)

misc\cenvarg.c
	Checked in a workaround for the NT bug where "CreateProcess()"
	doesn't propagate the current directory strings if there is a
	user-specified environment.  We now detect these in cenvarg()
	and prepend them to the user-specified environment block.

----------------------------------------------------------------------

Wed 07-Apr-93	(SteveSa)

h\fcntl.h
h\limits.h
	Fix copyright dates to 1993 (somehow these got missed before)

----------------------------------------------------------------------

Wed 07-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

lowio\fstat.c

	Made computation of file times consistent with _stat() (i.e.,
	wrong on FAT and HPFS, correct on NTFS, and correct on all of
	them if they ever fix underlying NT bug).

----------------------------------------------------------------------

Wed 07-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

dos\stat.c

h\sys\stat.h

	Made first arg type into a const char * (bug recently filed in
	the NTBUG database).

----------------------------------------------------------------------

Tue 06-Apr-93	(SteveSa)

Most Header Files (!!!)
and Many C Source Files

	Remove all occurrences of _VARTYPE1/_CRTVAR1 (which meant nothing)
	and change all occurrences of _CRTAPI[123] and _CALLTYPE[1234]
	to __cdecl.

----------------------------------------------------------------------

Mon 05-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

direct\findfile.c

dos\stat.c

h\ctime.h, internal.h

time\dtoxtime.c, ftime.c, gmtime.c, localtim.c, mktime.c, strftime.c,
     time.c, tzset.c, utime.c

	Adapted C8-16 time implementation for Windows NT.

----------------------------------------------------------------------

Mon 05-Apr-93   (JamesMa)

startup\crt0.c
	GUI apps exiting through _amsg_exit() now put up a pop-up message
	box describing the runtime error instead of trying to write to
	stderr.
	
startup\crt0msg.c
	Add _GET_RTERRMSG(), a routine needed for GUI error reporting.

----------------------------------------------------------------------

Mon 05-Apr-93   (JonM)

vcrtlib\makefile, vcrtlib\tools\genalias.*
	Changed the format of alias records used in oldnames.lib.
	Again oldnames.lib requires a recent linker in order to be
	built correctly.

----------------------------------------------------------------------

Mon 05-Apr-93   (JonM)

startup\i386\crt0init.mak, startup\i386\crt0init.obj
        Add "Remove" attribute to the .drectve section, to prevent it
        from showing up in .exe files.

----------------------------------------------------------------------

Thu 01-Apr-93	(ChrisWei)

vcrt32\startup\thread.c, crt0.c
	Change try, except to --try, __except.

vcrt32\convert\isctype.c
	Bug fix and optimization.

\vcfp32\fp32.def
	Turn on fp locale-sensitive radix char by defining _INTL.

----------------------------------------------------------------------

Wed 31-Mar-93	(ChrisWei)

vcrt32\h\excpt.h
vcrlib\include excpt.h
	Remove #define try, except, leave, finally.

----------------------------------------------------------------------

Tue 30-Mar-93	(GregF)

<<< GregF change of 26 March to CRT32 project on \\orville\razzle >>>

vcrt32\startup\thread.c
vcrt32\startup\tidtable.c

Initialize ptd->_pxcptacttab to _XcptActTab, ptd->_holdrand to 1L.

----------------------------------------------------------------------

Mon 29-Mar-93	(JonM)

vcrtlib\makefile
	Checked in a build for oldnames.lib.

	Warning: currently the oldnames.lib build requires a linker
	v.3085 or later to get a bug fix to the librarian (otherwise
	you get an oldnames.lib with no symbols in its directory).
	The fixed linker is not checked in to tools project yet, but
	will be this week.

vcrtlib\tools, vcrtlib\tools\mungeobj.exe, vcrtlib\tools\mungeobj.c
	Created "tools" directory and added a quick tool I wrote to
	map one shortname to another in a COFF object.

vcrtlib\oldnames, vcrtlib\oldnames\weak.asm
	Created "oldnames" directory and added weak.asm which is a
	generic weak extern definition.

----------------------------------------------------------------------

Thu 25-Mar-93	(ChrisWei)

h\ctype.h
exec\dospawn.c
convert\_mbslen.c, tolower.c toupper.c, towlower.c, towupper.c
	CTRL-Zs are EVIL.

h\ctype.h, vcrtlib\include\ctype.h
convert\toupper.c, tolower.c
	Define _tolower() and _toupper() when _INTL turned on.

----------------------------------------------------------------------

Wed 24-Mar-93	(ChrisWei)

in vcrt32\h, vcrtlib\include
types.h
	Change _dev_t from short to unsigned int.

in vcrt32\h, vcrtlib\include
fstream.h, ios.h, iostream.h, istream.h, ostream.h, streamb.h
	Eliminate "long double != double" warnings with #pragma warning.
	
vcrt32.def
	Turn on _INTL flag to enable CRT international support.

tools\win32\relinc.if
	_INTL is now defined for ifstrip.

vcrtlib\include\wchar.h, ctype.h
	Changed since _INTL is defined for ifstrip.

----------------------------------------------------------------------

Tue 23-Mar-93   (JonM)

makefile, dllstuff\makefile, dllstuff\i386\cinitexe.asm
	Added the same linker directives as my earlier change ... for
	msvcrt*.dll this time.
----------------------------------------------------------------------

Tue 23-Mar-93   (SteveSa - propogating a ChrisWei fix)

<<< ChrisWei change of 22 March to the CRT32 project on //orville/razzle: >>>

time\strftime.c - change C locale to 24 hour time

----------------------------------------------------------------------

Tue 23-Mar-93   (JonM)

startup\i386\crt0init.asm:
        Added linker directives to use "kernel32.lib" as a default
        library, and to merge the .CRT section into .data to save on
        section padding in the image file (and load one less page).

        It is necessary to run "link -edit" on the .obj file which
        comes out of Masm386, in order to set the "info" flag
        on the .drectve section.  Therefore I checked in crt0init.obj
        to the project, and added crt0init.mak which is how to build
        it.

makefile
        Now links the version of crt0init.obj which is checked in to
        the project, instead of building it from crt0init.asm.
startup\sources: removed crt0init

----------------------------------------------------------------------

Mon 22-Mar-93   (SteveSa - propogating GregF's and SteveWo's changes)

<<< GregF changes of 20 March to the CRT32 project on //orville/razzle: >>>

lowio\kbhit.c - deleted
lowio\ungetch.c - deleted
lowio\getch.c - rewritten to handle arrow keys and function keys
	now encompasses what was in ungetch.c and kbhit.c

lowio\putch.c - rewritten to use WriteConsole instead of WriteFile

stdio\fflush.c - changed so that it does not lock every stream
	on a _flushall() or fflush(NULL) call.

<<< GregF changes of 22 March to the CRT32 project on //orville/razzle: >>>

lowio\close.c - _close(STDIN) or _close(STDOUT) will not close the
	underlying NT file handle if STDOUT and STDERR are sharing
	the same handle.  Of course, closing both STDOUT and STDERR
	will close the underlying handle.

<<< SteveWo changes of 22 March to the CRT32 project on //orville/razzle: >>>

misc\getqloc.c
misc\initctyp.c
misc\initmon.c
misc\initnum.c
misc\inittime.c
misc\setlocal.c - MAKELCID takes two parameters now 

----------------------------------------------------------------------

Mon 22-Mar-93   (JonM)

lowio\open.c
        Fixed _open() so that it accepts _O_EXCL without _O_CREAT
	(ignoring _O_EXCL).  This is undefined behavior in the X/Open
	spec ... changed for consistency with 16-bit CRT.

	Also, it now accepts _O_CREAT | _O_EXCL | _O_TRUNC for opening
	new files.  This is crt16 behavior and is also required by
	X/Open.

	There remains a difference from the crt16 behavior ... the
	32-bit _open() will fail with _O_TRUNC if _O_RDONLY is used.
	This is the documented behavior ... the fact that the 16-bit
	libs accept this case is a bug.

----------------------------------------------------------------------

Mon 22-Mar-93   (JonM)

log.txt created, for tracking changes to the Cuda C runtime code on
\\hobie, which SteveSa has now split off from the NT group's sources
on \\orville\razzle.

----------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\log_v40.txt ===
-----------------------------------------------------------------

Tue 26-Sep-95    (APennell)

crtw32\eh\frame.cpp
	Changes only in PMac code to handle the case when a re-
	throw occurs to stop it going back into the same throw
	it came from. Involved addition of some statics to
	remember the last catch state & function info. Fixes
	Olympus 1615 (DynaBind not starting up) and 1900
	(compiler generated temporary is not destructed).

-----------------------------------------------------------------

Wed 20-Sep-95	 (ChrisWei)

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
	Change _RPT0 macro to handle '%' in user message string. No
	CRT rebuild necessary.

-----------------------------------------------------------------

Fri 09-Sep-95	 (JamesMa)

crtw32\h\new.h
crtw32\h\mtdll.h
crtw32\h\internal.h
libw32\include\new.h
	new_handler is now always __cdecl (bug 1061).

-----------------------------------------------------------------

*****************************************************************
****   MSVC++ 4.0 BETA RELEASE #2 -- Friday 1 September 1995 ****
*****************************************************************

-----------------------------------------------------------------

Mon 28-Aug-95	 (JamesMa)

crtw32\eh\rtti.cpp
	dynamic_cast of NULL ptr now return NULL (bug 502).

-----------------------------------------------------------------

Tue 22-Aug-95	 (JamesMa)

crtw32\eh\mac\pmac\trnsctrl.cpp
	Added code to MacExceptionDispatch() (bug 16608).
crtw32\eh\i386\lowhelpr.asm
crtw32\misc\i386\exsup.asm
	CallSettingFrame() now calls new entry point _NLG_Notify1()
	and juggles ebp as needed (bug 16585).

-----------------------------------------------------------------

Tue 22-Aug-95	 (SteveSa)

crtw32\dllstuff\crtlib.c -
	Initialization of _CrtDbgMode[] was missing for Win32s.  I added it.

-----------------------------------------------------------------

*****************************************************************
****   MSVC++ 4.0 BETA RELEASE #1 -- Friday 18 August 1995   ****
*****************************************************************

-----------------------------------------------------------------

Wed 09-Aug-95	 (JamesMa)

crtw32\eh\mac\pmac\trnsctrl.cpp
	Added code to GetFunctionEntry() to handle throws from a CFM
	which are caught in another CFM (bugs 15612 & 15123).

-----------------------------------------------------------------

Wed 09-Aug-95	 (GregF)

crtw32\iostream\strstrea.cpp
	Conditioned the calls to _CrtSetDbgBlockType in strstreambuf::str()
	and strstreambuf::freeze() on x_static. This should prevent improper
	modification of user-supplied buffers in the debug librarys as
	reported in Olympus 15603.

-----------------------------------------------------------------

Fri 04-Aug-95	 (JamesMa)

crtw32\h\stdio.h, libw32\include\stdio.h - PMac BUFSIZ increased
		to 4K (15372).

-----------------------------------------------------------------

Tue 01-Aug-95	 (JamesMa)

crtw32\misc\dbgheap.c - qualified asserts which were breaking default appwiz
		apps on PMac (bug 14146).
crtw32\misc\dbgrpt.c - fixed debug file output for PMac (bug 15009).

-----------------------------------------------------------------

Tue 01-Aug-95	 (GregF)

crtw32\h\internal.h
crtw32\iostream\stdiostr.cpp
crtw32\lowio\ioinit.c
crtw32\stdio\_filbuf.c, _flsbuf.c, clearerr.c, fgetwc.c, fputwc.c, rewind.c,
	     ungetwc.c
	Concocted 'safe' version of the ioinfo access macros. That is, macros
	which provide for an argument of -1 by associating a special static
	ioinfo structure with this handle value. So far, only the
	_osfile_safe() macro is used. This fixes Olympus #15006 (printf in a
	GUI app causes a GPF).

-----------------------------------------------------------------

Tue 25-Jul-95	 (v-LeoL)
crtw32\misc\mips\jmpuwind.s
crtw32\misc\mips\chandler.c
	Put back _Nlg_Return2 for debugger

-----------------------------------------------------------------

crtw32\dllstuff\crtdll.c, crtexe.c
	Use _malloc_crt for PMac __onexitbegin array.

crtw32\dllstuff\crtlib.c
crtw32\h\crtdbg.h
libw32\include\crtdbg.h
	Win32s-ize user-visible debug heap variables.

crtw32\startup\crt0dat.c
	Add automatic leak checking for PMac DLL.

-----------------------------------------------------------------

Thu 20-Jul-95	 (ChrisWei)

crtw32\h\mtdll.h
	Some of our sources build with _MBCS defined (ctime.c) and some
	without (wctime.h). These sources got different sizes for the PT
	struct!! Removed ifdef _MBCS. Also, ifdef'd out the ANSI new stuff.

crtw32\h\istream.h
	Move get(...int) to protected.

crtw32\tools\win32\relinc.if
	ANSI_NEW_HANDLER is "undefined".

crtw32\misc\dbgheap.c
	Fix size check.

crtw32\misc\dbgrpt.c
	Use WLM output string scheme.

-----------------------------------------------------------------

Thu 20-Jul-95	 (GregF)

crtw32\heap\heapwalk.c
	Changed the way an unimplemented HeapWalk() is handled. We used to
	return _HEAPOK. Now we return _HEAPEND.
	return _HEAPOK. Now we return _HEAPEND.

-----------------------------------------------------------------

Tue 11-Jul-95	 (GregF)

crtw32\lowio\ioinit.c
	Have to use __unaligned pointers for file handle information on RISC
	platforms. This was breaking MIPS.

-----------------------------------------------------------------

Tue 11-Jul-95	 (JamesMa)

crtw32\misc\i386\exsup.asm
	Unwanted prologue removed from NLG_Notify (13268).

-----------------------------------------------------------------

Mon 10-Jul-95	 (GregF)

crt\crtw32\eh\eh.mkf
	Changed typeinfo.* to typinfo.* and typename.* to typname.*. This
	fixed the broken 68K build.

crt\crtw32\exec\dospawn.c
	Have to use __unaligned pointers for file handle information on RISC
	platforms. This was breaking MIPS.

-----------------------------------------------------------------

Fri 07-Jul-95   (ChrisWei)

crt\crtw32\dllstuff\crtlib.c
crt\crtw32\misc\dbgrpt.c, errmode.c
crt\crtw32\startup\crt0.c, dllcrt0.c
	Startup debug reporting initialization removed - done statically.

crt\crtw32\h\istream.h
crt\libw32\include\istream.h
	Avoid ambiguous default args.

-----------------------------------------------------------------

Thurs 06-Jul-95   (ChrisWei)


crt\makefile, makefile.inc
crt\srcrel\makefile, objects.mkf, pd-b
crt\crtw32\eh\lsources, typename.cpp, typeinfo.cpp, typname.cpp, typinfo.cpp

	Change typeinfo.cpp and typename.cpp to typname.cpp typinfo.cpp
	since the build process chokes on typeinfo.h/typeinfo.cpp.

crt\crtw32\conert\iswctype.c
crt\crtw32\eh\throw.cpp
crt\crtw32\eh\mac\pmac\trnsctrl.cpp
crt\crtw32\h\iomanip.h ios.h iostream.h rtti.h istream.h rtti.h setlocal.h
	stdiostr.h streamb.h trnsctrl.h
crt\crtw32\iostream\istream.cpp
crt\crtw32\lowio\close.c
crt\crtw32\misc\setlocal.c
crt\crtw32\startup\crt0dat.c
crt\crtw32\stdio\output.c
	Comment cleanup -- remove "hack", "consider".

-----------------------------------------------------------------

Wed 05-Jul-95   (JamesMa)

makefile, makefile.inc
srcrel\objects.mkf, pd-b
crtw32\eh\eh.mkf, lsources
	Removed stdnewh.obj from build.
crtw32\eh\stdexcpt.cpp
crtw32\h\stdexcpt.h,
libw32\include\stdexcpt.h
	Stdexcpt stuff minimized, made ANSI-compatible (9577).
crtw32\eh\typeinfo.cpp, typename.cpp
crtw32\h\mtdll.h, typeinfo.h
libw32\include\typeinfo.h
	Several minor RTTI problems resolved (5625).
libw32\include\setjmp.h
	NLG prototypes now cleansed for release (12867).
crtw32\eh\mac\pmac\lowhelpr.asm
	FP registers were being saved to SP, restored from R3 - wups.

-----------------------------------------------------------------

Wed 05-Jul-95   (v-LeoL)

crt\crtw32\eh\frame.cpp
crt\crtw32\eh\mips\handlers.s
crt\crtw32\misc\mips\chandler.c, jmpuwind.s, longjmp.s
crt\crtw32\h\trnsctrl.h
	<MIPS only changes>
        NLG gunk no longer uses per-thread data - destination code
	is passed on stack instead (Oly bug 11803).

-----------------------------------------------------------------

Tue 04-Jul-95   (ChrisWei)

crt\crtw32\dllstuff\crtlib.c
crt\crtw32\h\win32s.h
crt\crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
	memicmp.asm, stricmp.asm, and strnicmp.asm have hard-coded
	assumptions about offset of _lc_handle in CRTDLLPPD structure.
	lc_handle moved to start of structure and assertion added to
	scream if it moves.

crt\crtw32\dllstuff\cinitexe.c
crt\crtw32\startup\mac\init.c
	Add/fix -disallowlib for PMac.

-----------------------------------------------------------------

Mon 03-Jul-95   (ChrisWei)

crt\cleanbld.cmd, clns_bld.bat, mkmac.bat
crt\srcrel\clean.bat, copydeps.cmd, external.mkf, makefile, mkclnmkf.c,
	 mkmkf.cmd, object.mkf -- msvc40 -> msdev

crt\crtw32\dllstuff\crtlib.c
crt\crtw32\h\crtdbg.h, dbgint.h, win32s.h
crt\libw32\include\crtdbg.h
crt\crtw32\misc\dbgheap.h, dbghook.c, dbgnew.cpp, dbgrpt.c
	Win32s support for Debug Libs (make all DLL variables a function call).

crt\crtw32\time\tzset.c
	PMac: When TZ not set _tzname="", not "???".

-----------------------------------------------------------------

Thu 29-Jun-95   (JamesMa)

crt\srcrel\_sample_.r (new file)
	Resource file for PMac dll source release build
crt\srcrel\bldnt.cmd (new file)
	Builds x86 or PMac CRTs from source release (NT platform)
crt\srcrel\bldwin95.bat
	Builds x86 or PMac CRTs from source release (Win95 platform)
crt\srcrel\external.mkf, pd-b
	Added _sample_.r & bldnt.cmd
crt\doc\copycrt.bat, copysrc.bat (new files)
	Added for the convenience of the build team.

-----------------------------------------------------------------

Fri 22-Jun-95   (ChrisWei)

crt\makefile, makefile.inc
crt\crtw32\dllstuff\crtexe.c, crtlib.c
crt\crtw32\h, crt\libw32\include\internal.h, new.h, win32s.h
crt\crtw32\heap\badalloc.c, handler.cpp, heap.mkf, lsources, malloc.c, oldnew.cpp
crt\crtw32\startup\tidtable.c
crt\crtw32\linkopts\newnew.c, linkopts.mkf, lsources
crt\srcrel\msvc40.if, pd-b
	Remove ANSI new handler by #ifdef'ing with ANSI_NEW_HANDLER.
	Put back in set_new_handler hack for STL compilation.

crt\crtw32\mac.mkf
	Change back to -Ob1, add -Gy

crt\crtw32\dllstuff\cinitexe.c
crt\crtw32\startup\crt0init.c,
	Add -disallowlib

crt\crtw32\startup\crt0msg
	Avoid STDIO calls at startup

crt\crtw32\eh\eh.mkf
	Put undecorator in own segment (68K)

-----------------------------------------------------------------

Wed 21-Jun-95   (JamesMa)

crt\crtw32\dllstuff\atonexit, ajustfd.c, crtdll.c
	Comment cleansing: MSVCRTx0.DLL, x = 1, 2 or 3, replaced
	by MSVCRT*.DLL (at Sylvie's request).

-----------------------------------------------------------------

Wed 21-Jun-95   (JamesMa)

crt\crtw32\eh\frame.cpp
crt\crtw32\eh\i386\lowhelpr.asm, trnsctrl.cpp
crt\crtw32\misc\i386\exsup.asm, exsup3.asm, longjmp.asm
crt\crtw32\h\setjmp.h, trnsctrl.h
        NLG gunk no longer uses per-thread data - destination code
	is passed on stack instead (Oly bug 11803).

crt\crtw32\eh\lsources, typeinfo.cpp, typename.cpp (new file)
crt\srcrel\makefile, objects.mkf, pd-b
crt\makefile, makefile.inc
	type_info.name() moved from typeinfo.cpp to typename.cpp
	for granularity purposes.

-----------------------------------------------------------------

Tues 20-Jun-95   (ChrisWei)

crt\makefile
crt\crtw32\dllstuff\macdll\msvcrt40.r
	Add version info to CRT DLL and import lib for PMac.

-----------------------------------------------------------------

Mon 19-Jun-95   (v-LeoL)

crtw32\misc\mips\chandler.c
crtw32\misc\mips\jmpuwind.s
crtw32\misc\mips\longjmp.s
crtw32\eh\mips\handlers.s
crtw32\h\mtdll.h
        Use Get/SetNLGCode on MIPS and fix EH-safe longjmp wrt NLG

-----------------------------------------------------------------

Fri 16-Jun-95   (JamesMa)

crtw32\misc\i386\exsup.asm, exsup3.asm, longjmp.asm
        More registers preserved around calls to Get/SetNLGCode.

-----------------------------------------------------------------

Thu 15-Jun-95	 (GregF)

crtw32\heap\heapchk.c
	Better, more robust version of the fix made yesterday.

-----------------------------------------------------------------

Wed 14-Jun-95	 (GregF)

crtw32\heap\heapchk.c
	Fix suggested by Byran Tuttle so HeapValid doesn't get called for
	unallocated blocks.

-----------------------------------------------------------------

Wed 14-Jun-95   (ChrisWei)

crt\makefile.sub
crt\crtw32\mac.mkf
	Use O2 (speed) rather than O1 (space) for Mac builds.

-----------------------------------------------------------------

Wed 14-Jum-95   (v-rogerl)

crtw32\string\memorym.s
        Replace jump with .weakext(alias)

fpw32\tran\mip\fasincos.s
fpw32\tran\mip\fatan.s
fpw32\tran\mip\fcosh.s
fpw32\tran\mip\fexp.s
fpw32\tran\mip\ffloor.s
fpw32\tran\mip\fsincos.s
fpw32\tran\mip\fsinh.s
fpw32\tran\mip\fsqrt.s
fpw32\tran\mip\ftan.s
fpw32\tran\mip\ftanh.s
fpw32\tran\mip\logm.s
fpw32\tran\mip\flog.s
        Remove all .aents'

-----------------------------------------------------------------

Wed 14-Jun-95   (JamesMa)

crtw32\startup\tidtable.c
        _getptd() now preserves LastError variable in _all_
	 cases (thanks, RichardS).
crtw32\eh\frame.cpp
        Get/SetNLG prototypes now visible to Mac platforms, extraneous
	Get/SetLastError calls removed.

-----------------------------------------------------------------

Tues 13-Jun-95   (JamesMa)

crtw32\h\ehdata.h
        delfiled - use the version in langapi\include.
crtw32\srcrel\pd-b
        ehdata.h removed
crtw32\eh\typeinfo.cpp
        now calls __unDName(), not unDName()
crtw32\startup\tidtable.c
        _getptd() now preserves LastError variable.
crtw32\eh\frame.cpp, crtw32\eh\i386\lowhelpr.asm, crtw32\misc\i386\exsup.asm,
crtw32\misc\i386\exsup3.asm, crtw32\misc\i386\longjmp.asm, crtw32\h\exsup.inc,
crtw32\h\mtdll.h
        various NLG work, primarily multithread support.

-----------------------------------------------------------------

Tues 13-Jum-95   (ChrisWei)

crtw32\misc\dbgheap.c
crtw32\dllstuff\crtlib.c

msvcr40d.dll was calling an MFC-installed dump client routine at DLL unload time --
but the MFC DLL had already been unloaded!

The solution is to de-install any client dump routines before doing final leak checks.

If MFC (or any other clients) want the final leak check dumping (from msvcr40d.dll)
to use their own dump routines, they will have to call the leak check routine directly.

-----------------------------------------------------------------

Mon 12-Jum-95   (v-rogerl)

crtw32\h\math.h
        Added MIPS only prototype (hypotf)

-----------------------------------------------------------------

Fri 09-Jun-95   (BryanT)

crtw32\crt32.nt
crtw32\misc\searchen.c
crtw32\stdio\fseeki64.c, ftelli64.c, fgetpos.c, fsetpos.c, psx\sources
crtw32\startup\crt0.c, crt0msg.c
crtw32\h\stdio.h
fpw32\fp32.nt
        POSIX fixes and add /WX to compile line.

-----------------------------------------------------------------

Thurs 08-Jun-95 (ChrisWei)

crtw32\mkm68k.bat
crtw32\heap\heap.mkf
crtw32\linkopts\linkopts.mkf
crtw32\stdio\stdio.mkf
        Add new handler stuff to 68K build.

crtw32\misc\dbgrpt.c
        Cast to work-around MacOS header change.

-----------------------------------------------------------------

Tues 06-Jun-95  (BryanT)

crtw32\eh\csysex.cpp
        Workaround stupid X86 compiler by defining type_info vtable.

-----------------------------------------------------------------

Tues 06-Jun-95  (ChrisWei)

crt\makefile
crt\libw23\msvcrt40.rc
        Define _DEBUG for debug resource builds. msvcr40d.dll now has proper
        "Internal Name" and "Original File Name".

-----------------------------------------------------------------

Mon 05-Jun-95   (BryanT)

crtw32\dirs
crtw32\eh\csysex.cpp, frame.cpp
crtw32\eh\nt\sources
crtw32\h\csysex.hxx, mtdll.h
crtw32\heap dirs, sources.nt, st\sources, mt\sources, dll\sources,
       dlllib\sources, psx\sources
crtw32\startup\tidtable.c, nt\sources
libw32\lib\sources.nt
        Finish the Kernel EH work.  Move from WinHeap to Heap.

-----------------------------------------------------------------

Fri 02-June-95   (GregF)

crtw32\lowio\ioinit.c, osfinfo.c
        Made a couple of changes to work around an apparent bug in Win95. In
        Win95, when a gui parent spawns a console child. The values returned
        by GetStdHandle to the child process don't necessarily get mapped or
        set to the console. In osfinfo.c, I fixed a formerly benign bug
        whereby we would call SetStdHandle even in a gui app. In ioinit.c, I
        change the lowio init code so that handle 0 - 2 ALWAYS start out as
        being marked open, even if they are not associated with valid Win32
        HANDLEs. This fixes bug 10971.

-----------------------------------------------------------------

Thu 01-June-95   (v-LeoL)

\crt\makefile.inc
\crt\srcrel\external.mkf
\crt\srcrel\objects.mkf
\crt\srcrel\makefile

        remove helper\mips\* and misc\mips\chandler.c from crt src

-----------------------------------------------------------------

Wed 01-June-95   (ChrisWei)

\crt\crtw32\misc\putenv.c, setenv.c

        Fixed a nasty bug in _[w]putenv. Was not a BVT regression! We were
        not making a copy of new environment variables. Now that we are, removed
        EVs are also freed.

-----------------------------------------------------------------

Tues 30-May-95   (ChrisWei)

V3 to V4 change:
================

\crt\cb.cmd, clean.bat, clean.cmd, cleanbld.cmd, clns_bld.bat, make.cmd, makefile, makefile.inc, mkmac.bat
\crt\srcrel\clean.bat, copydeps.cmd, external.mkf, make.cmd, makefile, mkclnmkf.c, mkmkf.cmd, objects.mkf, pd-b, relmkf.sed
        MODIFIED

\crt\srcrel\msvc30.if
        REMOVED
\crt\srcrel\msvc40.if
        ADDED

\crt\doc\crt30.doc
        REMOVED
\crt\doc\crt40.doc
        ADDED

\crt\libw32\msvcrt30.rc
        REMOVED
\crt\libw32\msvcrt40.rc
        ADDED


ANSI new handler and/or heap hook:
==================================

\crt\crtw32\dllstuff\crtexe.c, crtlib.c

\crt\crtw32\dllstuff\macdll\makedll.cmd, makedlld.cmd
        MODIFIED

\crt\crtw32\dllstuff\macdll\msvcr30d.def, msvcrt30.def, msvcrt30.r
        REMOVED
\crt\crtw32\dllstuff\macdll\msvcr40d.def, msvcrt40.def, msvcrt40.r
        ADDED

\crt\crtw32\h[\crt\libw32\include]\crtdbg.h, heap.h, internal.h, istream.h, malloc.h, math.h, mtdll.h, new.h, win32s.h, winheap.h
        MODIFIED

\crt\crtw32\heap\calloc.c, expand.c, free.c, handler.cpp, lsources, malloc.c, msize.c, new.cpp, realloc.c
        MODIFIED

\crt\crtw32\linkopts\lsources
        MODIFIED

\crt\crtw32\linkopts\newnew.c
        ADDED

\crt\crtw32\misc\dbgheap.c, dbgnew.cpp, dbgrpt.c
        MODIFIED

\crt\crtw32\startup\tidtable.c
        MODIFIED


Other changes:
==============

\crt\crtw32\stdio\fwrite.c
        Return 0 if nothing to write.

\crt\crtw32\iostream\istrgetl.cpp
        Support for ignore (...,0xFF)

\crtw32\dos\dosmap.c
        Change error code mapping.

-----------------------------------------------------------------

Fri 25-May-95    (GregF)

crtw32\heap\heapchk.c, heapwalk.c
        Modified heapchk.c so that _heapset() will work even if Heap[Un]Lock
        is stubbed (as it on Win95). Modified _heapwalk() to validate the
        _pentry field.

-----------------------------------------------------------------

Tues 23-May-95   (GregF)

crt32\heap\expand.c
        Really removed the workaround alluded to below. It didn't cause
        10125 (which didn't really exist), but it DID cause 10291.

-----------------------------------------------------------------

Mon 22-May-95    (GregF)

crt32\h\malloc.h
crt32\heap\expand.c, malloc.c, realloc.c
        Updated _HEAP_MAXREQ to 0xffffffe0 and changed malloc, realloc and
        _expand to check the size request against this value before calling
        the API. This works around a bug in HeapAlloc (at least) whereby
        values larger than 0xffffffe0 get 'rounded up' to 0 and the API
        call returns success. This fixes Olympus 10125. Also, while I had
        expand.c checked out, I removed an old, obsolete workaround, thereby
        fixing Olympus 9956.

-----------------------------------------------------------------

Fri 19-May-95    (GregF)

crt\makefile
        _file.obj must be explicitly linked into msvcrt*.dll for the
        Win32s versions (regular and debug) of the DLL. In the Win32s
        version, _file.obj does not resolved any external references in
        other objects which would cause the linker to pull it in
        automatically. This fixes RAID bug 9588.

-----------------------------------------------------------------

Wed 17-May-95   (v-rogerl)

makefile.sub -
        Change .s rule for MIPS so assembler compiles -O2
        versus -O0

-----------------------------------------------------------------

Tue 16-May-95   (v-rogerl)

fpw32\tran\mips\fhypot.s -
        remove obsolete function c_abs_.

-----------------------------------------------------------------

Tue 16-May-95    (SteveSa)

makefile.inc,
crtw32/dllstuff/lsources -
        add xtxtmode.obj and xncommod(e).obj to list of targets for
        DLL and XDLL models

crtw32/dllstuff/xtxtmode.c,
crtw32/dllstuff/xncommod.c - new files

makefile -
        Get all objects for MSVCRT(D).LIB from the *DLL object directories.
        The linker options objects txtmode.obj and ncommode.obj used to
        be grabbed from the MT object directories, but for debug models
        this causes problems since that meant that linking with MSVCRTD.LIB
        required not only MSVCRTD.PDB but also LIBCMTD.PDB.

        The trick is that txtmode.obj and ncommode.obj for the DLL model
        have export definitions in them.  The x* versions of these two
        objects define SPECIAL_CRTEXE to turn off the _CRTIMP keyword.
        Since these objects go into the client EXE or DLL, they must NOT
        contain exports definitions for these variables.

-----------------------------------------------------------------

Fri 12-May-95    (SteveSa)

libw32/msvcrt30.rc -
        o Remove obsolete extra nulls at end of all strings
          ("SNAFUBAR\0" is now simply "SNAFUBAR").
        o Remove obsolete "LegalTradeMarks" field
        o Update "LegalCopyright" field from 1994 to 1995
        o Fix "InternalName" field to include .DLL extension
        o Change the hex value for Unicode from 04b0 to 04B0 (1200 decimal)
          per Richard Shupak's recommendation.

        **** And now the tricky part:

        o Add the 4-digit Julian date to the "FileVersion" string (3rd field)
          just as it is in the "FILEVERSION" binary field (4th field).
          This required some tricky use of the string-izing operator (#)
          which only works in #define macros, and two must be used to
          get the parameter value instead of the parameter name ("rup").
        o Make the binary field PRODUCTVERSION match the FILEVERSION field.
        o Make the "ProductVersion" string match the "FileVersion" string.
          These last two make MSVCRT30.DLL match MSVC.EXE as far as versions.

-----------------------------------------------------------------

Thu 11-May-95    (GregF)

crtw32\heap\heapwalk.c
        Added code to recognize the end-of-heap. It was being treated as
        _HEAPBADNODE.

crtw32\time\mktime.c
        Properly handle initial tm_mon values in the range -11 to -1
        (inclusive). This was Olympus bug 9148.

-----------------------------------------------------------------

Wed 10-May-95    (ChrisWei)

crtw32\misc\dbgrpt.c
        Change Interlockedxxxx to _CrtInterlocked to avoid conflict with WLM.

crtw32\h\new.h
        Put placement new() back in. Was removed when I imagined build conflicts with debug new().

-----------------------------------------------------------------

Tue 09-May-95    (GregF)

crtw32\string\i386\memcmp.asm
        Fixed horrible which I had introduced into Intel's improved
        string function. Specifically, I replaced a bogus ret with a
        jz short retnull.

-----------------------------------------------------------------

Thu 04-May-95   (JamesMa)

fpw32\conv\fpinit.c
        Clear FP exceptions after _ms_p5_test_fdiv (9411).

-----------------------------------------------------------------

Wed 04-May-95    (GregF)

crt\crtw32\h\cruntime.inc
        Use .586 for _WIN32 builds (fixes 6695)

-----------------------------------------------------------------

Wed 03-May-95   (JamesMa)

crtw32\eh\rtti.cpp
        FindSITargetTypeInstance() now tests visibility (5237).

-----------------------------------------------------------------

Wed 03-May-95    (GregF)

crtw32\string\i386\memchr.asm, memcmp.asm, strcat.asm
        New, faster versions from Intel.

-----------------------------------------------------------------

Tue 02-May-95   (JamesMa)

crtw32\eh\unhandld.cpp
        Added __CxxRestoreUnhandledExceptionFilter(), called at exit.

------------------------------------------------------------------

Tue 02-May-95   (BryanT)

crtw32\string\misc\memorym.s
        Move memmove to a seperate function.  When comdat's are enabled
        the extra public name is against the rules.

-----------------------------------------------------------------

Tue 02-May-95   (JamesMa)

crtw32\misc\mac\pmac\setjmp.asm
        Added NLG support for longjmp.
crtw32\eh\mac\pmac\lowhelpr.asm
        Renamed _NLG_Notify to __NLG_Notify.

-----------------------------------------------------------------

Tue 02-May-95   (SteveSa)

crtw32/h/mtdll.h - add prototype of new routine _initptd()
crtw32/startup/thread.c,
crtw32/startup/threadex.c - call _initptd() to do common initialization of
        per-thread data in _beginthread and _beginthreadex, respectively.
crtw32/startup/tidtable.c - implement _initptd() to do common initialization
        of the common per-thread data fields _holdrand and _pxcptacttab
        and the two new MIPS-specific fields _MipsPtdDelta/Epsilon.

-----------------------------------------------------------------

Sun 30-Apr-95   (ChrisWei)

\crtw32\h\crtdbg.h, \libw32\include\crtdbg.h
        Renumber _CRTDBG_xxx to avoid conflict with MFC.

\crtw32\h\ios.h, \libw32\include\ios.h
        Fix _CRT_CRTITICAL_SECTION stuff.

\crtw32\misc\dbgheap.c
        White space changes.

\crtw32\misc\dbgrpt.c
        Remove "JIT" from MessageBox.

-----------------------------------------------------------------

Fri 28-Apr-95   (JamesMa)

crtw32\eh\frame.cpp, crtw32\eh\ehvecdtr.cpp, crtw32\h\ehdata.h
        EH_FRAME_UNWIND_PART cases/definition now #ifdef ALLOW_UNWIND_ABORT.
srcrel\msvc30.if
        ALLOW_UNWIND_ABORT added to 2nd section.

-----------------------------------------------------------------

Wed 26-Apr-95   (ChrisWei)

crtw32\h\crtdbg.h, libw32\include\crtdbg.h
        Add _CRTDBG_MAP_ALLOC for new().

crtw32\misc\dbgheap.c, dbgrpt.c
        Add _CRTIMP to all exported functions

crtw32\startup\crt0.c, dllcrt0.c
        PMac debug reporting must go to debugeer by default since there is
        no guarantee user has initialized the toolbox.

crtw32\h\sys\*.h
        Add mac/win32 test.

-----------------------------------------------------------------

Wed 26-Apr-95    (GregF)

crtw32\h\win32s.h

crtw32\dllstuff\crtlib.c

crtw32\winheap\calloc.c, delete.cpp, expand.c, heapinit.c, malloc.c, msize.c,
               new_mode.cpp, realloc.c

        Package of small changes in preparation for switching to winheap
        for VC 3. The changes were adaptions for Chris's debug heap and for
        DLL_FOR_WIN32S.

-----------------------------------------------------------------

Tue 25-Apr-95   (BryanT)

crtw32\crt32.nt
crtw32\eh\csysex.cpp, dirs, hooks.cpp, rtti.cpp, throw.cpp, validate.cpp
crtw32\eh\nt\sources
crtw32\h\csysex.hxx
crtw32\startup\tidtable.c
        More Kernel EH support from DwightKr

-----------------------------------------------------------------

Tue 25-Apr-95   (JamesMa)

crtw32\misc\i386\exsup.asm
        Added label __NLG_Return2 at return from __finally(); fix for #8922.

-----------------------------------------------------------------

Mon 24-Apr-95   (SteveSa)

cleanbld.cmd
makefile
        Nmake dependencies will be generated by "nmake depend" in the \CRT
        directory, or for the \msvc30\crt\src and \msvc30\crt\prebuild
        directories if the first argument to cleanbld.cmd is CRTMKDEP.
        If the CRTMKDEP environment variable is set, that too will lead
        the generation of dependencies.  Dependency files will be created
        on all invocations of cleanbld.cmd when CRTMKDEP is set in the
        environment or on the command line.

-----------------------------------------------------------------

Fri 21-Apr-95   (JamesMa)

crtw32\misc\i386\setjmp.asm, exsup.asm
        Moved NLG support routines from setjmp to exsup.
crtw32\eh\frame.cpp
        Moved definition of _NLG_Destination to exsup.asm (X86 only).
libw32\msvcrt.src
        NLG stuff is no longer exported.

-----------------------------------------------------------------

Fri 21-Apr-95   (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
libw32\include\crtdbg.h
crtw32\misc\dbgheap.c, dbgnew.cpp
crtw32\iostream\ios.cpp, istream.cpp, ostream.cpp, streamb.cpp, strstrea.cpp
        Remove _delete_crt, _delete_client. Operator delete() handles all
        valid block types.

----------------------------------------------------------------

Fri 21-Apr-95   (SteveSa)

makefile -
        Changed all references to $(TOOLS_INCLUDE) to $(V3DROP)\include.
        It made no sense to require both of these environment variables
        since the former is equivalent to the include subdir of the latter.

        Also made some changes to support automatic generation of include
        file dependencies, for the raw build and both prebuild and src
        subdirectories in the cleansed build.

makefile.inc -
        Changed the COPY source for a number of objects from $* (all
        dependent files) to the explicit file name since the addition
        of automatically generated file dependencies kept this from
        working.

-----------------------------------------------------------------

Wed 19-Apr-95   (ChrisWei)

crtw32\convert\mbstowcs.c, mbtowc.c, wcstombs.c, wctomb.c
        Fix for 68k/pmac.

crtw32\h\new.h, libw32\include\new.h
        Add placement new() operator.

crtw32\heap\handler.cpp
        set_new_handler uses ANSI assert (even in retail build) to warn
        users to not use it to set new handler.

crtw32\misc\dbgrpt.c
        Avoid concurrent asserts - if they happen, simply spew to
        debugger.

----------------------------------------------------------------

Wed 19-Apr-95   (SteveSa)

makefile -
        Create .PDB files for Win32s DLL's msvcrt30.dlS/msvcr30d.dlS
        with the .pdS extension so that they do not overwrite the
        .pdb files for Win32 DLL's msvcrt30.DLL/msvcr30d.DLL.

-----------------------------------------------------------------

Tue 18-Apr-95   (JamesMa)

crtw32\misc\i386\exsup.asm, exsup3.asm
        Added NLG support.

-----------------------------------------------------------------

Tue 18-Apr-95   (SteveSa)

crtw32/eh/eh.mkf -
        The file source file undname.cxx from the LANGAPI project is used in
        this makefile and is NOT named .cpp like the CRTL source files are.

----------------------------------------------------------------

Tue 18-Apr-95   (SteveSa)

crtw32/h/mtdll.h
crtw32/startup/thread.c
crtw32/startup/threadex.c
crtw32/startup/tidtable.c
        Add 5 MIPS per-thread variables for TiborL.  The 2 of them which are
        integers to be initialized to -1.  The 3 pointers are automatically
        set to NULL.  Also improved the comment for the THREE places where
        we do the per-thread data initialization.  All fields in the p.t.d.
        block are zero by default since calloc() is used to allocate the ptd.

----------------------------------------------------------------

Mon 17-Apr-95   (SteveSa)

crtw32\dllstuff\crtlib.c
        Fix TLS index leak in the Win32s version of MSVCRT30.DLL.
        When the last process detaches from the DLL, the TLS index used
        to store "global" variables is now freed (as well it should be).
        (It was never freed before, resulting in a resource leak.)

----------------------------------------------------------------

Sun 16-Apr-95   (JamesMa)

crtw32\h\stdexcpt.h
        Cosmetic changes (#3716)

----------------------------------------------------------------

Fri 14-Apr-95   (JamesMa)

crtw32\eh\frame.cpp, ehvecctr.cpp, ehveccdtr.cpp, ehveccvb.cpp
crtw32\h\ehdata.h
        Re-implemented EH-SEH interaction fixes (#3340)

-----------------------------------------------------------------

Thu 13-Apr-95   (BryanT)

crtw32\h\mtdll.h, ehassert.h
crtw32\eh\hooks.cxx, throw.cxx
crtw32\eh\nt\*
crtw32\startup\tidtable.c
crtw32\startup\nt\sources
        Add Kernel-mode EH support from DwightKr.

crtw32\eh\st\sources
crtw32\eh\mt\sources
crtw32\eh\dll\sources
        Add lowhelpr.asm for X86 builds.

-----------------------------------------------------------------

Tue 11-Apr-95   (ChrisWei)

crtw32\startup\dllcrt0.c
        Move __crtGetEnvironmentStringsA after mtinit().

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
        Add NULL definition.

crtw32\h\new.h
libw32\include\new.h
libw32\include\new.h
crtw32\heap\handler.cpp
        Add set_new_handler() stub to allow compilation of STL.

crtw32\h\sys\utime.h
libw32\include\sys\utime.h
crtw32\time\utime.c
        Change first param to const char *.

crtw32\h\setlocal.h
crtw32\misc\getqloc.c
        Remove NT 3.1 hacks. Use less space for country/language strings.

-----------------------------------------------------------------
Tue 11-Apr-95   (JamesMa)

crtw32\eh\i386\lowhelpr.asm
        New file containing _CallSettingFrame(), moved from trnsctrl.cpp
makefile.inc, crtw32\eh\lsources, srcrel\pd-b
        lowhelpr.asm/.obj added
crtw32\eh\i386\trnsctrl.cpp
        Removed _CallSettingFrame().
crtw32\h\trnsctrl.h
        _CallSettingFrame() now extern "C".
crtw32\misc\i386\setjmp.asm
        NLG_Return moved to lowhelpr.asm
crtw32\misc\i386\longjmp.asm
        NLG support added.
crtw32\h\float.h
        _DEFAULT_CW redefined for x86.
fpw32\tran\i386\ieee87.c
        _fpreset() now resets default precision.
fpw32\tran\i386\87trigh.asm
        Olympus #6164.

-----------------------------------------------------------------

Fri 07-Apr-95   (SteveSa)

**************************************
*** ------------------------------ ***
*** All .CXX files renamed to .CPP ***
*** ------------------------------ ***
**************************************

makefile
makefile.sub
srcrel/pd-b
srcrel/mkfiles.sed
        Related changes of the .CXX suffix to .CPP

makefile
        Add -WX to -W3 to enforce warning-free compilations.

crtw32/startup/dllmain.c
        Call DisableThreadLibraryCalls() to disable THREAD ATTACH and DETACH
        notifications in DLLs linked with LIBC.LIB or MSVCRT.LIB (but NOT
        LIBCMT.LIB) which have the default (empty) DllMain() and wherein
        _pRawDllMain == NULL.

-----------------------------------------------------------------

Fri 07-Apr-95   (ChrisWei)

crtw32\dllstuff\crtlib.c
crtw32\h\awint.h, internal.h
crtw32\startup\crt0.c, dllcrt0.c, stdenvp.c
crtw32\misc\aw_env.c
        Since GetEnvironmentStringsA returns OEM-code page strings (and
        GetEnvironmentVariableA returns ANSI!) and we want our environment
        to be ANSI, __crtGetEnvironmentStringA has been added. It gets
        the environment in Unicode (NT) and translates using ANSI cp.
        Otherwise (Win95) it gets the ANSI version.

-----------------------------------------------------------------

Thu 06-Apr-95   (ChrisWei)

crtw32\dllstuff\crtlib.c
crtw32\startup\crt0.c, dllcrt0.c, crt0dat.c
        Set PMac debug reporting defaults, fix user DLL leak detection.

crtw32\h\crtdbg.h
        Add malloc -> _malloc_dbg macros.

crtw32\misc\dbgheap.c
        Fix _expand() for block size of 0.

-----------------------------------------------------------------

Mon 03-Apr-95   (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
crtw32\iostream\ios.cxx, istream.cxx, istream1.cxx, ostream.cxx,
        streamb.cxx, strstrea.cxx
crtw32\misc\dbgheap.c, dbghook.c, dbgnew.cxx
        - fix delete scheme
        - fix block strings
        - remove TRACK_ON (again)
        - export _crtBreakAlloc
        - make global sizes unsigned

The following internal headers files were modified to #error if used by
users/ Also, the multiple include statements were brought into line with
CRT standards.

assert.h          6    6  out
awint.h           4    4  out
cmsgs.h           5    5  out
conio.h           4    4  out
cruntime.h        5    5  out
ctime.h           2    2  out
ctype.h           9    9  out
cvt.h             2    2  out
dbgint.h         16   16  out
direct.h          7    7  out
dos.h             7    7  out
doscalls.h        3    3  out
dostypes.h        5    5  out
eh.h              7    7  out
ehassert.h        6    6  out
ehdata.h         10   10  out
ehhooks.h         5    5  out
ehstate.h         5    5  out
errmsg.h          2    2  out
errno.h           5    5  out
error.h           3    3  out
error2.h          2    2  out
excpt.h           7    7  out
fcntl.h           3    3  out
file2.h           4    4  out
float.h           8    8  out
fltintrn.h        6    6  out
fpieee.h          6    6  out
fstream.h         5    5  out
heap.h           14   14  out
internal.h       21   21  out
io.h             13   13  out
iomanip.h         5    5  out
ios.h             6    6  out
iostream.h        5    5  out
istream.h         6    6  out
limits.h          4    4  out
locale.h          5    5  out
malloc.h          6    6  out
math.h           16   16  out
mbctype.h         5    5  out
mbdata.h          3    3  out
mbstring.h        5    5  out
memory.h          5    5  out
msdos.h           6    6  out
mtdll.h           7    7  out
mtest.h           3    3  out
new.h             4    4  out
nlsint.h          4    4  out
oscalls.h         6    6  out
ostream.h         6    6  out
plstring.h        7    7  out
process.h        11   11  out
rterr.h           3    3  out
rtti.h            2    2  out
search.h          7    7  out
setjmp.h          9    9  out
setjmpex.h        3    3  out
setlocal.h        3    3  out
share.h           3    3  out
signal.h          4    4  out
sizeptr.h         2    2  out
stdarg.h          7    7  out
stddef.h          5    5  out
stdexcpt.h        7    7  out
stdio.h          19   19  out
stdiostr.h        5    5  out
stdlib.h         15   16 *merge    B52
streamb.h         6    6  out
string.h          9    9  out
strstrea.h        5    5  out
syserr.h          2    2  out
tchar.h           9    9  out
time.h            6    6  out
trnsctrl.h        7    7  out
typeinfo.h        8    8  out
v2tov3.h          2    2  out
varargs.h         6    6  out
wchar.h           9    9  out
win32s.h          9    9  out
winheap.h         5    5  out


-----------------------------------------------------------------

Wed 29-Mar-95   (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt
libw32\lib\sources.nt
        Ignore 4006 link warning and add mac headers to conditional
        includes list.

fpw32\tran\mips\ieee.c
fpw32\tran\ppc\ieee.c
fpw32\tran\fpexcept.c
        Fix warnings (missing prototypes/casts)

crtw32\stdio\st\sources
crtw32\stdio\mt\sources
crtw32\stdio\dll\sources
        Add setmaxf.c for the NT build.

crtw32\h\stdlib.h
crtw32\h\internal.h
        Define _fmode and _commode correctly when building CRTEXE for
        non-X86 platforms

crtw32\startup\crt0.c
crtw32\startup\dllcrt0.c
        Test for valid cmdlin and envptr.  Bail if no good (fixes
        stress failure).

crtw32\helper\mips\lldefs.h
        Add cast to remove signed/unsigned warning.

crtw32\misc\abort.c, assert.c, onexit.c, perror.c, and searchen.c
        Fix warnings in the POSIX build

        The MIPS NT build is now almost warning free (Tibor has a fix
        to the compiler for the last one in crtw32\helper)  Will fix
        other platforms shortly.

-----------------------------------------------------------------

Mon 27-Mar-95   (SteveSa)

crtw32\dos\stat.c
        _stat on a root directory is supposed to return a timestamp of
        1980-01-01@00:00:00.  But when the internal routine _loctotime_t
        was changed to use full years (instead of years less 1900), the
        constant value 80 being passed to that routine was NOT updated to
        1980.  This led to a bug: _stat() on a root directory was been
        returning timestamps of -1.  By correcting the value passed to
        locltotime_t() from the bogus 80 to the correct 1980, all once
        again works as it did before the bug was introduced in VC++ 2.0.

-----------------------------------------------------------------

Fri 24-Mar-95   (PhilipLu)

crtw32\eh\frame.cxx
crtw32\eh\rtti.cxx
crtw32\eh\mac\m68k\frame.cxx
crtw32\h\ehdata.h
        Add const for read-only compiler-gen'd C++ EH structs.
        Necessary for compatibility with new langapi headers
        (langapi\include\rttidata.h).

-----------------------------------------------------------------

Thu 23-Mar-95   (BryanT)

crtw32\startup\mlock.c
        Initialize the critical section before storing it in the
        lock table.  Fixes a problem only seen under stress.

-----------------------------------------------------------------

Wed 18-Mar-95   (ChrisWei)

crtw32\h\mbctype.h, libw32\include\mbctype.h
crtw32\h\mbctype.c
        - Add _MB_CP_LOCALE to set multibyte code page to current
          locale code page

-----------------------------------------------------------------

Tues 17-Mar-95  (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
libw32\include\crtdbg.h
crtw32\misc\assert.c dbgheap.c dbgnew.cxx, dbgrpt.c errmode.c
crtw32\startup\crt0msg.c
        - Add _CRT_ASSERT report type
        - Change assert message box to be more user-friendly
        - Add _delete_client, _delete_crt functions
        - Remove _CRTDBG_TRACK_ON_DF
        - add user-friendly block type verification macro
        - block damage now includes request number
        - speed up client object hex dumps

-----------------------------------------------------------------

Mon 16-Mar-95   (v-rogerl)

fpw32\tran\mips\asincosm.s
fpw32\tran\mips\atanm.s
fpw32\tran\mips\fasincos.s
fpw32\tran\mips\fatan.s
fpw32\tran\mips\ffloor.s
fpw32\tran\mips\fhypot.s
fpw32\tran\mips\flog.s
fpw32\tran\mips\floorm.s
fpw32\tran\mips\fmodm.s
fpw32\tran\mips\fsincos.s
fpw32\tran\mips\trigm.s
fpw32\tran\mips\xsqrt.s
fpw32\tran\mips\powm.s
        Olympus:6804 and 7185.  .text rename and FCSR restore.

-----------------------------------------------------------------

Wed 15-Mar-95   (GregF)

crtw32\dllstuff\crtlib.c
        Added initialization for _ppd__nstream. Deleted _ppd__lastiob.

crtw32\h\cmsgs.h, rterr.h
crtw32\startup\crt0msg.c
        Added _RT_STDIOINIT error message (for when a minimal __piob table
        cannot be allocated).

crtw32\h\win32s.h
        Added fields the _CRTDLLPPD struct for _nstream (_ppd__nstream)
        and __piob (_ppd___piob) and access macros. Deleted support for
        _lastiob.

crtw32\startup\mlock.c

crtw32\stdio\lsources
        Added setmaxf.c to the build.

crtw32\stdio\closeall.c, fflush.c, rmtmp.c
        Changed to walk __piob[] rather than _iob[].

crtw32\stdio\_file.c
        Added code to define, create and initialize the __piob[] table.

crtw32\stdio\fgetchar.c, fputchar.c
        Removed unnecessary include of tchar.h. Don't know why I bothered.
        I actually did it about 3 months ago and don't recall the reason.

crtw32\stdio\setmaxf.c
        New. Defines _setmaxstdio, a user function to modify the size of
        the __piob[] table.

crtw32\stdio\stream.c
        Signficantly revised to manage streams via __piob[] rather than
        _iob[].


crtw32\stdio\clearerr.c, fclose.c, fdopen.c, fflush.c, fgetc.c, fgets.c,
             fgetwc.c, fopen.c, fprintf.c, fputc.c, fputs.c, fputwc.c,
             fputws.c, fread.c, freopen.c, fscanf.c, fseek.c, fseeki64.c,
             ftell.c, ftelli64.c, fwprintf.c, fwrite.c, fwscanf.c, gets.c,
             getw.c, putw.c, printf.c, puts.c, rewind.c, scanf.c, setvbuf.c,
             tmpfile.c, ungetc.c, ungetwc.c, vfprintf.c, vfwprint.c,
             vprintf.c, vwprintf.c, wprintf.c, wscanf.c
        Revised usage of _[un]lock_str macros (they now take FILE * arg, and
        there is an _[un]lock_str2 variant). Deleted any usage of the
        obsolete _iob_index macro.

crtw32\string\memchr.c
        Changed slightly to eliminate unnecessary differences between Win32
        and Pmac versions, eliminating Olympus 7151 in the process.

libw32\msvcrt.src
        Added _setmaxstdio to the list of exports.

-----------------------------------------------------------------

Mon 13-Mar-95   (ChrisWei)

crtw32\convert\wcstombs.c
        Fix wcsncnt count bug.
crtw32\convert\wtox.c
        Use -1 for string length since NT compares past NULLS.
crtw32\lowio\lseek.c, lseeki64.c
        Verify handles before passing to OS.
crtw32\stdio\tempnam.c
crtw32\h\stdio.h, wchar.h
        Make [_w]tempnam() params const.

-----------------------------------------------------------------

Thu 09-Mar-95   (BryanT)

crtw32\h\stdlib.h and libw32\include\stdlib.h
        Missed adding _CRTIMP to the prototype for abs() yesterday.

-----------------------------------------------------------------

Wed 08-Mar-95   (BryanT)

crtw32\h\math.h, stdlib.h, string.h
        Define import versions of intrinsic functions (MIPS only)
        to go with new compiler support from Tibor.

-----------------------------------------------------------------

Wed 08-Mar-95   (SteveSa)

libw32\tools\i386\pd.exe - rebuilt as a Win32 executable (was 16-bit OS/2)
libw32\tools\source\pd.c - source code for pd.exe
srcrel\makefile - modified
srcrel\mkdirs.sed - modified
srcrel\mkfiles.sed - modified
srcrel\pd-b - new file (used to generate pd-d and pd-f)
srcrel\pd-d - delfile-d
srcrel\pd-f - delfile-d
        A new scheme for generating pd-d and pd-f from pd-b (a new file)
        A new version of PD.EXE (source code provided) is now a Win32
        console executable instead of a 16-bit OS/2 application.
        pd-d and pd-f were simplified somewhat (removed j:\src\crt prefix).
        If pd-b is deleted, makefile will recreate it using pd.exe
        assuming \\lang1\v3slm is available.

-----------------------------------------------------------------

Mon 06-Mar-95   (SteveSa)

srcrel\makefile
        Now uses the environment variable V3TOOLS to point to the processor
        part of the TOOLS project.  This tree is used to compile mkclnmkf.c.
        This allows clean PMAC builds since with references to the V3TOOLS
        tree, mkclnmkf.c can be compiled for the host system (INTEL) rather
        than the target (MPPC).

-----------------------------------------------------------------

Fri 03-Mar-95   (JamesMa)

crtw32\crtw32\h\typeinfo.h
        Moved definition of class type_info from ti_core.h back to typeinfo.h.
crtw32\crtw32\dllstuff\ti_inst.cxx
        Now includes typeinfo.h, not ti_core.h.
libw32\include\typeinfo.h
        Added typeinfo.h.
srcrel\pd-f
        Removed ti_core.h.
crtw32\crtw32\h\ti_core.h
        Delfiled.

-----------------------------------------------------------------

Thu 02-Mar-95   (ChrisWei)

crtw32\h\assert.h
libw32\include\assert.h
        Removed _INC_ASSERT. According to ANSI, must be able to include
        this file more than once.

-----------------------------------------------------------------

Wed 01-Mar-95   (GregF)

crtw32\lowio\cgets.c
        Treat string[0], which holds the maximum length, as an unsigned
        quantity. This was NT bug 7939.

-----------------------------------------------------------------

Tue 28-Feb-95   (v-LeoL)

crtw32\eh\typeinfo.cxx
        Add _CRTIMP to ~type_info()

-----------------------------------------------------------------

Tue 28-Feb-95   (GregF)

crtw32\lowio\mac\initcon.c -> crtw32\stdio\mac\initstd.c
crtw32\lowio\lsources
        Moved and renamed the Mac-version of initcon.c, which had no
        relationship to the Win32 version, to a more appropriate place.
        Also, took it out of the build (was for use in internal testing
        only and not part of the product).

-----------------------------------------------------------------

Mon 27-Feb-95   (GregF)

crtw32\stdio\mac\commode.c (deleted)
crtw32\stdio\common\commode.c -> commode.old
        Mac build was earlier changed to use crtw32\linkopts\commode.c

crtw32\stdio\maketabc.c
crtw32\stdio\maketabc.c -> maketabc.old
        Mac version was appended.

-----------------------------------------------------------------

Mon 27-Feb-95   (JamesMa)

For (latest) fix of Oly. 5234:
makefile
        Added ti_inst.obj to DLL_STATIC_OBJS_RAW.
crtw32\dllstuff\ti_inst.cxx
        New file, needed for exporting type_info's vftable from msvcrt.lib.
crtw32\dllstuff\lsources
        Added ti_inst.obj.
crtw32\crtw32\h\ti_core.h
        New file, containing minimum defs needed by ti_inst.cxx.
crtw32\crtw32\h\typeinfo.h
        Moved definition of class type_info to ti_core.h.

-----------------------------------------------------------------

Mon 27-Feb-95   (ChrisWei)

crtw32\dllstuff\cinitexe.c, crtlib.c
crtw32\h\awint.h, crtdbg.h
crtw32\misc\assert.c, crtmbox.c, dbgrpt.c
crtw32\startup\crt0dat.c, crt0init.c, crt0msg.c
        1) More to avoid static user32 use.
        2) Changes to __crtMsessageBoxA interface, one less param.
        3) Add _CrtDbgBreak to avoid Win32 API calls in crtdbg.h.
        4) Don't dump leaks by default.

-----------------------------------------------------------------

Mon 27-Feb-95   (v-rogerl)

fpw32\tran\mips\trigm.s
        Olympus:6384 I got the .global/.ent ordering wrong for
        tan when doing Olympus:5984.  I fixed the order and
        opened #6416 against the MIPS backend.
-----------------------------------------------------------------

Sat 25-Feb-95   (RichardS)

crtw32\h\crtdbg.h
        Define _CrtDbgBreak() as _BPT() for Alpha

-----------------------------------------------------------------

Fri 24-Feb-95   (GregF)

crt\makefile, makefile.inc
crt\crtw32\stdio\lsources
crt\crtw32\linkopt\lsources
        Modified build files so that commode.c is built from the
        linkopts directory, rather than stdio\mac.

-----------------------------------------------------------------

Fri 24-Feb-95    (ChrisWei)

crtw32\h\awint.h
crtw32\misc\assert.c
crtw32\startup\crt0msg.c
crtw32\dllstuff\crtlib.c
crtw32\misc\crtmbox.c
crtw32\misc\lsources
        Add __crtMessageBoxA to avoid static link with user32.dll.

crtw32\startup\crt0dat.c
        Debug runtimes call _CrtDumpMemoryLeaks() at program exit.

-----------------------------------------------------------------

Thu 23-Feb-95   (GregF)

crtw32\lowio\common\binmode.c (delfile-d)
crtw32\stdio\common\maketab.c (delfile-d)
        The files above were deleted because they are/were not used in
        Mac builds.

crtw32\stdio\common\ncommode.c -> ncommode.old
crtw32\stdio\mac\ncommode.c (delfile-d)
        Use version in stdio for all builds.

crtw32\stdio\fgetws.c
             gets.c
             getws.c
             wfdopen.c
             wfopen.c
             winput.c
             woutput.c
        Deleted/replaced obsolete WPRFLAG.

crtw32\stdio\common\input.c - > input.old
                    output.c -> output.old
crtw32\stdio\mac\input.c (delfile-d)
                 output.c (delfile-d)
crtw32\stdio\input.c, output.c
        Appended Mac/common version, somewhat cleaned up, of the sources onto
        stdio versions. Also, replaced WPRFLAG with _UNICODE.

-----------------------------------------------------------------

Wed 22-Feb-95   (JamesMa)

crtw32\dllstuff
        Spliced Mac code into atonexit.c, crtdll.c & crtexe.c.
        Added above files to lsources, OBJS_NOT_IN_LIB section.

crtw32\startup\mac\pmac
        *.c->*.old (*.c in above list).

crtw32\startup
        Removed *.c from lsources, OBJS_NOT_IN_LIB section
        (*.c in above list).

-----------------------------------------------------------------

Wed 22-Feb-95   (GregF)

crtw32\stdio\common\popen.c (delfile-d, never implemented for Mac),
                    stream.c -> stream.old,
                    ungetc.c -> ungetc.old,

crtw32\stdio\mac\stream.c (delfile-d),
                 tempnam.c -> tempnam.old,
                 tmpfile.c -> tmpfile.old,
                 ungetc.c (delfile-d),

crtw32\stdio\fgets.c (removed obsolete WPRFLAG),
             popen.c (removed obsolete WPRFLAG),
             puts.c (removed obsolete WPRFLAG),
             putws.c (removed obsolete WPRFLAG),
             tempnam.c (appended Mac version, removed WPRFLAG),
             tmpfile.c (appended Mac version, removed WPRFLAG),
             wfreopen.c (removed obsolete WPRFLAG),
             wtempnam.c (removed obsolete WPRFLAG),
             wtmpfile.c (removed obsolete WPRFLAG)

-----------------------------------------------------------------

Wed 18-Feb-95   (v-rogerl)

fpw32\tran\mips\xsqrt.s
fpw32\tran\mips\fsincos.s
fpw32\tran\mips\trigm.s
fpw32\tran\mips\fhypot.s
fpw32\tran\mips\atanm.s
        Olympus:5984 branch from one procedure into another is
        invalid with -Gy.  Give both procedures the same .text
        name so the code works as written.

-----------------------------------------------------------------

Tue 21-Feb-95   (GregF)

crtw32\stdio\common\fdopen.c  -> fdopen.old,
                    fopen.c   -> fopen.old,
                    freopen.c -> freopen.old,
                    fseek.c   -> fseek.old,
                    ftell.c   -> ftell.old,
                    setvbuf.c -> setvbuf.old,

crtw32\stdio\mac\fclose.c -> fclose.old
                 fdopen.c (delfile-d),
                 fflush.c -> fflush.old
                 fopen.c (delfile-d),
                 freopen.c (delfile-d),
                 fseek.c (delfile-d),
                 ftell.c (delfile-d),
                 rmtmp.c  -> rmtmp.old,
                 setvbuf.c (delfile-d),

crtw32\stdio\fdopen.c (merged in Mac version),
             fopen.c (replaced WPRFLAG with _UNICODE),
             freopen.c (replaced WPRFLAG with _UNICODE),
             fseek.c (merged in Mac version),
             ftell.c (merged in Mac version),
             setvbuf.c (merged in Mac version),

-----------------------------------------------------------------

Mon 20-Feb-95   (BryanT)

fpw32\tran\fpexcept.c
        Define _KERNEL32_ before including windows.h for _NTSUBSET_ builds.

-----------------------------------------------------------------

Mon 20-Feb-95    (GregF)

crtw32\stdio\common\_filbuf.c  -> _filbuf.old,
                    _file.c    -> _file.old,
                    _flsbuf.c  -> _flsbuf.old,
                    _freebuf.c -> _freebuf.old,
                    _getbuf.c  -> _getbuf.old,
                    _open.c    -> _open.old,
                    _sftbuf.c  -> _sftbuf.old,

crtw32\stdio\_filbuf.c,
             _file.c,
             _flsbuf.c,
             _open.c
        Appended Mac version of source file.

crtw32\stdio\_freebuf.c
             _getbuf.c
             _sftbuf.c
        Merged Mac version of source file.

crtw32\stdio\_filwbuf.c,
             _flswbuf.c,
             _wopen.c
        Removed obsolete WPRFLAG.

-----------------------------------------------------------------

Wed 18-Feb-95   (v-rogerl)

fpw32\tran\mips\asincosm.s
fpw32\tran\mips\fasincos.s
fpw32\tran\mips\fatan.s
fpw32\tran\mips\ffloor.s
fpw32\tran\mips\flog.s
fpw32\tran\mips\floorm.s
fpw32\tran\mips\fmodm.s
fpw32\tran\mips\asincosm.s
        Olympus:5984 branch from one procedure into another is
        invalid with -Gy.  Give both procedures the same .text
        name so the code works as written.

-----------------------------------------------------------------

Fri 17-Feb-95   (BryanT)

crtw32\lowio\fstat.c
        set st_size to the number of bytes left in the pipe.

-----------------------------------------------------------------

Thu 16-Feb-95   (RichardS)

crtw32\direct\i386\enable.asm
        _disable() should contain a CLI not an STI.  Use MASM proc for better debug info.

       lowio\i386\inp.asm
                  outp.asm
        Use MASM proc for better debug info.

-----------------------------------------------------------------

Wed 17-Feb-95   (v-rogerl)

fpw32\tran\mips\asincosm.s
        Olympus:5984 branch from one procedure into another is
        invalid with -Gy.  Give both procedures the same .text
        name so the code works as written.

-----------------------------------------------------------------

Thu 16-Feb-95   (JamesMa)

crtw32\misc
        Merged/spliced Mac code into assert.c, getenv.c, getpath.c,
        onexit.c, perror.c, putenv.c & searchen.c.

crtw32\misc\mac
        *.c->*.old (*.c in above list).

-----------------------------------------------------------------

Thu 16-Feb-95   (RichardS)

fpw32\tran\i386\87csqrt.asm
                87ctran.asm
                87ctrig.asm
                87ctriga.asm
                87ctrigh.asm
                87fmod.asm
                ftol.asm
        Replace use of LabelP with proc.  This results in better CodeView
        information since there are proc records for each function instead
        or MASM generated fake proc.  This also corrects a problem with the
        public COFF symbols not being identified as functions.

-----------------------------------------------------------------

Thu 16-Feb-95   (GregF)

crtw32\lowio\mac\_endlow.c, dupx.c, initcon.c
        Replaced _CALLTYPE* with __cdecl.

crtw32\lowio\mac\close.c   -> close.old,
                 commit.c  -> commit.old,
                 dup.c     -> dup.old,
                 dup2.c    -> dup2.old,
                 eof.c     -> eof.old,
                 flength.c -> flength.old,
                 fstat.c   -> fstat.old,
                 locking.c -> locking.old,
                 lseek.c   -> lseek.old,
                 mktemp.c  -> mktemp.old,
                 open.c    -> open.old,
                 osfinfo.c -> osfinfo.old,
                 read.c    -> read.old,
                 tell.c    -> tell.old,
                 write.c   -> write.old

crtw32\lowio\close.c, commit.c, dup.c, dup2.c, eof.c, flength.c, fstat.c,
             locking.c, lseek.c, mktemp.c, open.c, osfinfo.c, read.c,
             tell.c, write.c
        Appended Mac version of sources.

crtw32\heap\mac\heapdump.c -> heapdump.old,
                heapgrow.c -> heapgrow.old,
                heapinit.c -> heapinit.old

crtw32\heap\heapdump.c, heapgrow.c, heapinit.c
        Appended Mac version of sources.

-----------------------------------------------------------------

Wed 15-Feb-95   (JamesMa)

crtw32\h\stdexcpt.h, crtw32\eh\stdexcpt.cxx, libw32\include\stdexcpt.h
        Minor changes related to Olympus bug 3716.

crtw32\h\typeinfo.cxx, crtw32\eh\typeinfo.cxxx
        Class type_info is no longer _CRTIMP, allowing compilation -MD.
        Member functions are exported instead ...

-----------------------------------------------------------------

Wed 15-Feb-95   (ChrisWei)

crtw32\startup\crtlib.c
crtw32\misc\assert.c, dbgrpt.c
crtw32\startup\crt0msg.c
        Make all CRT MessageBoxes look alike. Improve assert MB handling
        to make it more like the debug runtimes.

-----------------------------------------------------------------

Tue 14-Feb-95   (GregF)

crtw32\time\common\dtoxtime.c -> dtoxtime.old,
                   localtim.c -> localtim.old,
                   timeset.c  -> timeset.old,
                   mktime.c   -> mktime.old,
                   strftime.c -> strftime.old,
                   tzset.c    -> tzset.old

crtw32\time\mac\dtoxtime.c (deleted),
                localtim.c (deleted),
                timeset.c (deleted),
                mktime.c (deleted),
                strftime.c (deleted),
                tzset.c (deleted)

crtw32\time\mac\clock.c   -> clock.old,
                ftime.c   -> ftime.old,
                strdate.c -> strdate.old,
                strtime.c -> strtime.old,
                time.c    -> time.old
                utime.c   -> utime.old,

crtw32\time\clock.c (appended Mac version),
            dtoxtime.c (appended Mac version),
            ftime.c (appended Mac version),
            localtim.c (small change for Mac build),
            mktime.c (small change for Mac build),
            strdate.c (merged in Mac version),
            strftime.c (appended Mac version),
            strtime.c (merged in Mac version),
            time.c (merged in Mac version),
            tzset.c (appended Mac version),
            utime.c (appended Mac version),
        The changes above are part of the "Mac merge".

crtw32\time\timeset.c
       dllstuff\crtlib.c
       h\internal.h, win32s.h
        Fixed the definitions of _tzname[], __dnames[] and __mnames[].

-----------------------------------------------------------------

Tue 14-Feb-95   (SteveSa)

clean.bat
cleanbld.cmd
makefile
makefile.inc
makefile.sub
srcrel/asmfile.sed
srcrel/makefile
srcrel/mkclnmkf.c
srcrel/objects.cmd
srcrel/relmkf.sed
        Change output directory from lib/i386 to build/intel, and object
        directories from sti386.obj, mti386.obj, dlli386.obj, ... to
        build/intel/st_obj, mt_obj, dll_obj, etc.  These and other
        changes were also made to the cleansed build process.

-----------------------------------------------------------------

Tues 14-Feb-95  (ChrisWei)

More Mac merge/cleanup. Fixed dates & added [Internal] || [Public] to all
header files, cleaned up mac header merge, a few more file changes to finish
mac merge. Can now build all four pmac libs with no warnings.


Status for \\D:G2000N2\CRT, owner = CHRISWEI2:
Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

assert.h          4    4  out
awint.h           1    1  out
cmsgs.h           3    3  out
conio.h           3    3  out
crtdbg.h         18   18  out
cruntime.h        4    4  out
ctime.h           1    1  out
ctype.h           7    7  out
cvt.h             1    1  out
dbgint.h         13   13  out
direct.h          6    6  out
dos.h             6    6  out
doscalls.h        2    2  out
dostypes.h        4    4  out
eh.h              6    6  out
ehassert.h        5    5  out
ehdata.h          8    8  out
ehhooks.h         4    4  out
ehstate.h         4    4  out
errmsg.h          1    1  out
errno.h           3    3  out
error.h           2    2  out
error2.h          1    1  out
excpt.h           6    6  out
fcntl.h           2    2  out
file2.h           2    2  out
float.h           7    7  out
fltintrn.h        5    5  out
fpieee.h          5    5  out
fstream.h         4    4  out
heap.h           13   13  out
internal.h       17   17  out
io.h              9    9  out
iomanip.h         4    4  out
ios.h             5    5  out
iostream.h        4    4  out
istream.h         5    5  out
limits.h          3    3  out
locale.h          4    4  out
malloc.h          5    5  out
math.h           13   13  out
mbctype.h         3    3  out
mbdata.h          2    2  out
mbstring.h        4    4  out
memory.h          3    3  out
msdos.h           5    5  out
mtdll.h           5    5  out
mtest.h           2    2  out
new.h             3    3  out
nlsint.h          3    3  out
oscalls.h         5    5  out
ostream.h         5    5  out
plstring.h        1    1  out
process.h        10   10  out
rterr.h           1    1  out
rtti.h            1    1  out
search.h          6    6  out
setjmp.h          8    8  out
setjmpex.h        2    2  out
setlocal.h        2    2  out
share.h           2    2  out
signal.h          3    3  out
sizeptr.h         1    1  out
stdarg.h          6    6  out
stddef.h          3    3  out
stdexcpt.h        5    5  out
stdio.h          15   15  out
stdiostr.h        4    4  out
stdlib.h          9    9  out
streamb.h         5    5  out
string.h          6    6  out
strstrea.h        4    4  out
syserr.h          1    1  out
tchar.h           8    8  out
time.h            5    5  out
trnsctrl.h        6    6  out
typeinfo.h        4    4  out
v2tov3.h          1    1  out
varargs.h         5    5  out
wchar.h           7    7  out
win32s.h          6    6  out
winheap.h         4    4  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

assert.c          3    3  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

crt0msg.c         8    8  out

Subdirectory \crtw32\stdio\mac, version 1.00, robust:

file      local-ver  ver  status   base

tmpfile.c         4    4  out

Subdirectory \crtw32\tools\mac, version 1.00, robust:

file      local-ver  ver  status   base

relinc.if         4    4  out

Subdirectory \crtw32\tools\win32, version 1.00, robust:

file      local-ver  ver  status   base

relinc.if         6    6  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

mkpmac.bat        1    3 *merge    B2

Subdirectory \libw32\include, version 1.00, robust:

file      local-ver  ver  status   base

assert.h          2    2  out
conio.h           2    2  out
crtdbg.h          6    6  out
ctype.h           4    4  out
direct.h          5    5  out
dos.h             5    5  out
eh.h              5    5  out
errno.h           2    2  out
excpt.h           4    4  out
fcntl.h           1    1  out
float.h           5    5  out
fpieee.h          4    4  out
fstream.h         3    3  out
io.h              6    6  out
iomanip.h         3    3  out
ios.h             3    3  out
iostream.h        3    3  out
istream.h         4    4  out
limits.h          1    1  out
locale.h          3    3  out
malloc.h          3    3  out
math.h            9    9  out
mbctype.h         2    2  out
mbstring.h        3    3  out
memory.h          2    2  out
new.h             2    2  out
ostream.h         4    4  out
process.h         5    5  out
search.h          4    4  out
setjmp.h          5    5  out
setjmpex.h        1    1  out
share.h           1    1  out
signal.h          2    2  out
stdarg.h          3    3  out
stddef.h          2    2  out
stdexcpt.h        1    1  out
stdio.h          10   10  out
stdiostr.h        3    3  out
stdlib.h          6    6  out
streamb.h         4    4  out
string.h          4    4  out
strstrea.h        3    3  out
tchar.h           8    8  out
time.h            4    4  out
varargs.h         2    2  out
wchar.h           5    5  out

-----------------------------------------------------------------

Sat 11-Feb-95   (ChrisWei)

crt\makefile, makefile.sub
        Big PMac cleanup. Use only _MAC, _M_M68K, _M_MPPC. No PPC, MPPC, or
        _MAC_. Fixed lots of makefile/makefile.sub inconsistencies. Almost have
        PMac debug heap/reporting together. Merged all of the string/mac
        functions that could be merged.


Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

crtdbg.h         16   16  out
internal.h       16   16  out
stdlib.h          7    7  out

Subdirectory \crtw32\mbstring, version 1.00, robust:

file      local-ver  ver  status   base

ismbbyte.c        2    2  out
mbscat.c          1    1  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

assert.c          3    3  out
dbgheap.c        15   15  out
dbgnew.cxx        6    6  out
dbgrpt.c         10   10  out

Subdirectory \crtw32\misc\mac, version 1.00, robust:

file      local-ver  ver  status   base

gestalt.c         1    1  out

Subdirectory \crtw32\startup\mac, version 1.00, robust:

file      local-ver  ver  status   base

crt0.c            2    2  out
crt0dat.c         3    3  out
libcinfo.c        3    3  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

strcat.c          3    3  out
strset.c          2    2  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

mkpmac.bat        1    3 *merge    B2

Subdirectory \fpw32\tran, version 1.00, robust:

file      local-ver  ver  status   base

fabs.c            2    2  out

-----------------------------------------------------------------

Tue 10-Feb-95   (JamesMa)

crtw32\eh
        Merged Mac sources for the whole directory.
crtw32\eh\frame.cxx
        Modified __FrameUnwindToState() to go through UnhandledExceptionFilter()
        when an exception is raised during stack unwind (Oly bug #77).

-----------------------------------------------------------------

Fri 10-Feb-95   (GregF)

crtw32\time\utime.c, wasctime.c, wctime.c, wstrdate.c, wstrtime.c, wutime.c
        Replaced WPRFLAG with _UNICODE.

-----------------------------------------------------------------

Thu 09-Feb-95   (GregF)

crtw32\heap\calloc.c, free.c, msize.c, malloc.c, realloc.c
crtw32\heap\mac\heapinit.c
        Re-enabled *_base names and #include <dbgint.h> for the Mac build

crtw32\time\asctime.c
        Replaced WPRFLAG with _UNICODE.

crtw32\time\asctime.c  -> asctime.old,
            ctime.c    -> ctime.old,
            days.c     -> days.old
            difftime.c -> difftime.old
            gmtime.c   -> gmtime.old
crtw32\time\mac\asctime.c (deleted),
                ctime.c (deleted),
                days.c (deleted),
                difftime.c (deleted),
                gmtime.c (deleted)
        Use same version of these sources for Mac as for Win32.

-----------------------------------------------------------------

Wed 08-Feb-95   (GregF)

crtw32\heap\heapadd.c, heapchk.c, heapinit.c, heapmin.c
        Deleted obsolete _OLDROVER_ support.

crtw32\heap\mac\heapmin.c -> heapmin.old
crtw32\heap\heapmin.c
        Merged Mac version into Win32 version.

crtw32\time\common\clock.c, ftime.c, strdate.c, strtime.c, time.c, utime.c
        These were *delfile-d*. Since there are Mac-specific version in
        crtw32\time\mac, these files were not used in any build.

-----------------------------------------------------------------

Wed 08-Feb-95   (v-rogerl)

fpw32\tran\mips\fsinh.s
        remove .extern for label

-----------------------------------------------------------------

Tue 07-Feb-95   (GregF)

crtw32\heap\mac\malloc.c  -> malloc.old
                realloc.c -> realloc.old
crtw32\heap\malloc.c, realloc.c
        Merged Mac versions into Win32 versions.

-----------------------------------------------------------------

Tue 07-Feb-95   (JamesMa)

fpw32\tran\powhlp.c, pow.c
fpw32\include\trans.h
        Reverted to Intel version of powhlp(); Mac version (from merge)
        caused Intel sniff failure.

-----------------------------------------------------------------

Mon 06-Feb-95   (JamesMa)

fpw32 directory
        Mac merge.

-----------------------------------------------------------------

Mon 06-Feb-95   (GregF)

crtw32\h\heap.h

crtw32\heap\mac\heapaslm.c, heapdump.c, heapgrow.c, heapinit.c, heapmin.c,
                malloc.c, realloc.c
        Several changes intended to bring the Mac-specific heap closer to
        our heap manager for Win32 platforms.

-----------------------------------------------------------------

Fri 03-Feb-95   (JamesMa)

crtw32\eh\rtti.cxx
        FindVITargetTypeInstance() now examines base offsets in
                ambiguity test; Olympus bug 5236.

-----------------------------------------------------------------

Fri 03-Feb-95   (BryanT)

crtw32\eh\sources.nt throw.cxx
        Remove EXPORT_HACK for Alpha

crtw32\lowio\ioinit.c
        Check cbReserved2 in addition for lpReserved2 for inherited
        file handles.  NT doesn't set lpReserved2 to NULL.

crtw32\misc\getqloc.c, initctyp.c, inithelp.c, onexit.c
crtw32\stdio\_filbuf.c, _flsbuf.c, _getbuf.c
crtw32\winheap\msize.c
        POSIX changes from MattBr.

crtw32\eh\alpha\ehunwind.c
        Don't use DBG define to key off EH debug code.  Define macros
        for Debug info level.

-----------------------------------------------------------------

Thu 02-Feb-95   (GregF)

crtw32\heap\mac\calloc.c, free.c, handler.cxx, heapadd.c, msize.c, new.cxx
        These were deleted.

crtw32\heap\common\calloc.c    -> calloc.old,
                   free.c      -> free.old,
                   handler.cxx -> handler.old,
                   heapadd.c   -> heapadd.old,
                   msize.c     -> msize.old,
                   new.cxx     -> new.old
        Renamed.

crtw32\heap\calloc.c, free.c, handler.cxx, msize.c, new.cxx
        Temporary changes so these could be used for the Mac builds.

-----------------------------------------------------------------

Thu 02-Feb-95   (v-LeoL)

crtw32\eh\mips\rtlmisc.s
        Fix last jump avoid using next inst from following func in
        delay slot.

-----------------------------------------------------------------

Tue 31-Jan-95   (ChrisWei)

crtw32\h\tchar.h
libw32\include\tchar.h
crt\makefile
        Fix tcs mappings for DLLs: map _tcsxxx to __imp___mbsxxx.

-----------------------------------------------------------------

Tue 31-Jan-95   (GregF)

crtw32\direct\drivfree.c
        Further cleanup suggested by my nemesis, Richard Shupak.

crtw32\misc\searchen.c
        In the case where the supplied filename exists, relative to the
        current directory, use _fullpath to get fully qualified path for
        filename. This fixes Olympus 4770 from Richard Shupak (who else?).

crtw32\startup\mlock.c
        Made the critical section structure underly _SIGNAL_LOCK static.
        This eliminates an infinite loop which may result from calling abort
        with a corrupt heap (example found with the debug libraries by
        Richard Shupak). Olympus bug 5103.

-----------------------------------------------------------------

Mon 30-Jan-95   (GregF)

crtw32\direct\drivfree.c
        Removed explicit check for UNC path as current drive (Olympus bug
        3881).

-----------------------------------------------------------------

Thu 26-Jan-95   (GregF)

crtw32\heap\common\heapdump.c, heapgrow.c, heapinit.c, heapmin.c, malloc.c,
                   realloc.c
        These files were DELFILE-D since they are not used in any build
        (the MAC builds used files in the MAC subdirectory).

crtw32\heap\common\delete.cxx, findaddr.c, heapchk.c, heapprm.c, heapsrch.c,
                   heapwalk.c, hpabort.c, delete.cxx
        These files were DELFILE-D because I determined the corresponding
        files in the heap subdirectory (one level up) could also be used for
        the MAC builds).

crtw32\dos\chdir.c
        Fixed so that UNC paths didn't cause _chdir to choke. This was
        Olympus bug 3880.

-----------------------------------------------------------------

Wed 25-Jan-95   (ChrisWei)

crtw32\h\crtdbg.h
crtw32\misc\dbgheap.h, dbgrpt.c

        _CrtThrowMemoryException has been removed.
        _CrtBadPointer has been removed.

        _CrtSetDbgMode has been changed to _CrtSetReportMode
        _CrtSetDbgFile has been changed to _CrtSetReportFile

        _CrtIsMyHeap has been changed to _CrtIsLocalHeap

        A new bitflag has been added: _CRTDBG_CHECK_CRT_BLOCKS_DF.
        It is off by default and CRT blocks are not flagged by
        _CrtMemDifference or dumped by _CrtMemDumpAllObjectsSince.
        This allows users to not get their leak detection fouled up by
        all the CRT blocks

        _crtMemDF has been changed to _crtDbgFlag

        _CrtEnableMemoryTracking has been replaced by a general purpose routine,
        _CrtSetDbgDataFlag. It sets _crtDbgDataFlag with whatever value the user
        passes in and returns the old values. A special value,
        _CRTDBG_REPORT_DATAFLAG returns the setting without ch

        For consistency, all macros with _CRT_DBG_xxx have been replaced
        with _CRTDBG_xxx:

-----------------------------------------------------------------

Tue 24-Jan-95   (GregF)

crtw32\h\stdio.h
crtw32\stdio\fgetpos.c, fsetpos.c
libw32\include\stdio.h
        Restored 64-bit fpos_t support.

crtw32\string\i386\memccpy.asm, memset.asm
        Added FPO directives.

-----------------------------------------------------------------

Mon 23-Jan-95   (GregF)

crtw32\string\i386\memset.asm
        Faster version from Intel Israel. Could be made faster yet...

-----------------------------------------------------------------

Sat 21-Jan-95   (BryanT)

makefile
libw32\msvcrt.src
libw32\lib\i386\crtdll.def
libw32\lib\i386\msvcrt30.def
libw32\lib\i386\win32s\msvcrt30.def
libw32\lib\mips\msvcrt30.def
libw32\lib\alpha\msvcrt30.def
libw32\lib\dll\ntcrt.src
libw32\lib\sources.nt
        Merged exports list for all platforms.  Build .def files as
        needed for each platform.

crtw32\h\internal.h
crtw32\startup\crt0msg.c, crt0.c
        Fix POSIX build

crtw32\direct\sources.nt
crtw32\dos\sources.nt
crtw32\eh\dll\sources
crtw32\lowio\dll\sources
crtw32\lowio\mt\sources
crtw32\lowio\st\sources
crtw32\mbstring\sources.nt
        Update NT build for recent i64/rtti/EH additions.

-----------------------------------------------------------------

Fri 20-Jan-95   (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
crtw32\misc\dbgheap.c, dbgnew.cxx, dbgrpt.c
        Change unsigned chars to chars.

crtw32\startup\crt0.c. dllcrt0.c
crtw32\dllstuff\crtlib.c
crtw32\misc\errmode.c
        Set app type at startup for debug reporting.

-----------------------------------------------------------------

Fri 20-Jan-95   (v-rogerl)

fpw32\tran\frexp.c
        frexp should return signed infinites.

-----------------------------------------------------------------

Thu 19-Jan-95   (GregF)

crtw32\string\i386\memccpy.asm
        Faster version from Intel Israel.

crtw32\string\i386\strspn.asm
        Smaller, faster.

-----------------------------------------------------------------

Wed 18-Jan-95   (GregF)

crtw32\misc\setenv.c
crtw32\startup\wild.c
crtw32\stdio\tmpfile.c
        I replaced calls to _wcsdup with _malloc_crt/_wcscpy for the _DEBUG
        build. _wcsdup itself calls malloc and this can not be changed (the
        allocation is exposed to the caller). This was Olympus bug #4332 (had
        DOGFOOD priority, arf!).

-----------------------------------------------------------------

Mon 16-Jan-95   (ChrisWei)

The following files were changed to enable internal CRT debug allocations:

Status for \\D:G2000N2\CRT, owner = CHRISWEI2:
Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

fcvt.c            5    5  out
wcstod.c          2    2  out

Subdirectory \crtw32\dllstuff, version 1.00, robust:

file      local-ver  ver  status   base

crtdll.c          8    8  out

Subdirectory \crtw32\eh, version 1.00, robust:

file      local-ver  ver  status   base

typeinfo.cxx      4    4  out

Subdirectory \crtw32\exec, version 1.00, robust:

file      local-ver  ver  status   base

cenvarg.c         2    2  out
dospawn.c         1    1  out
execl.c           1    1  out
execle.c          1    1  out
execlp.c          1    1  out
execlpe.c         1    1  out
execvpe.c         1    1  out
spawnl.c          1    1  out
spawnle.c         1    1  out
spawnlp.c         1    1  out
spawnlpe.c        1    1  out
spawnve.c         1    1  out
spawnvpe.c        1    1  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

crtdbg.h          8    8  out
dbgint.h         11   11  out
ios.h             4    4  out

Subdirectory \crtw32\heap, version 1.00, robust:

file      local-ver  ver  status   base

delete.cxx        1    1  out

Subdirectory \crtw32\iostream, version 1.00, robust:

file      local-ver  ver  status   base

cerrinit.cxx      1    1  out
cininit.cxx       1    1  out
cloginit.cxx      1    1  out
filebuf1.cxx      1    1  out
fstream.cxx       1    1  out
ifstream.cxx      1    1  out
ios.cxx           2    2  out
iostrini.cxx      1    1  out
ofstream.cxx      1    1  out
stdiostr.cxx      1    1  out
streamb.cxx       2    2  out
strstrea.cxx      1    1  out

Subdirectory \crtw32\lowio, version 1.00, robust:

file      local-ver  ver  status   base

getch.c           3    4 *merge    B1

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

_strerr.c         3    3  out
aw_cmp.c          6    6  out
aw_com.c          3    3  out
aw_env.c          3    3  out
aw_loc.c          3    3  out
aw_map.c          5    5  out
aw_str.c          6    6  out
dbgheap.c         8    8  out
initctyp.c        2    2  out
inithelp.c        3    3  out
initmon.c         3    3  out
initnum.c         3    3  out
inittime.c        2    2  out
lsources          9    9  out
mbtowenv.c        1    1  out
onexit.c          2    2  out
putenv.c          2    2  out
setenv.c          1    1  out
setlocal.c        7    7  out
strerror.c        3    3  out
winsig.c          2    2  out
wperror.c         1    1  out
wsetloca.c        2    2  out
wtombenv.c        1    1  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

mlock.c           2    2  out
stdargv.c         2    2  out
stdenvp.c         1    1  out
thread.c          4    4  out
threadex.c        4    4  out
tidtable.c        2    2  out
wild.c            1    1  out

Subdirectory \crtw32\stdio, version 1.00, robust:

file      local-ver  ver  status   base

_freebuf.c        4    4  out
_getbuf.c         1    1  out
_sftbuf.c         1    1  out
fclose.c          3    3  out
input.c           5    5  out
popen.c           2    2  out
setvbuf.c         1    1  out
tempnam.c         1    1  out
tmpfile.c         1    1  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

strlwr.c          6    6  out
strupr.c          6    6  out
wcslwr.c          3    3  out
wcsupr.c          3    3  out
wcsxfrm.c         4    4  out

Subdirectory \crtw32\time, version 1.00, robust:

file      local-ver  ver  status   base

asctime.c         2    2  out
gmtime.c          2    2  out
tzset.c           2    2  out
wcsftime.c        2    2  out

-----------------------------------------------------------------

Fri 13-Jan-95   (JamesMa)

crtw32\misc\i386\setjmp.asm
        Added NLG routines for debugger support.
crtw32\eh\i386\trnsctrl.cxx
        NLG notifications called from _CallSettingFrame().
crtw32\eh\frame.cxx
        Added _NLG_Destination struct; dwCode set for catch blocks
         & local destructors.
crtw32\h\exsup.inc
        Added _NLG_INFO struct.
crtw32\h\setjmp.h
        Added NLG prototypes.
libw32\lib\i386\msvcrt30.def
        Added _NLG_Dispatch, _NLG_Return, _NLG_Notify & _NLG_Destination.
libw32\lib\i386\win32s\msvcrt30.def
        Added _NLG_Dispatch, _NLG_Return, _NLG_Notify & _NLG_Destination.
fpw32\tran\i386\adj_fdiv.asm
        Added underscores to fdivp_sti_st & fdivrp_sti_st for ANSI conformance.
fpw32\include\testfdiv.h
        Underscores added to prototypes for ANSI conformance.
fpw32\tran\i386\testfdiv.c
        Underscores added for ANSI conformance.
fpw32\conv\fpinit.c
        Now calls underscored test routines.

-----------------------------------------------------------------

Fri 13-Jan-95   (v-rogerl)      MIPS ONLY

fpw32\tran\mips\powm.s
        olympus:4186, bad jump, a bad day it is

-----------------------------------------------------------------

Fri 13-Jan-95   (GregF)

crtw32\lowio\getch.c
        Changed _getche so that it does not 'echo' a pushback character. This
        showed up as a bug in _cscanf (NTBUG 30083).

-----------------------------------------------------------------

Thu 12-Jan-95   (GregF)

crtw32\heap\free.c
        Test to reset the rover was bogus and I fixed it. Should be a
        little harder to demonstrate fragmentation with trivial examples.

-----------------------------------------------------------------

Thu 12-Jan-95   (SteveSa)

crtw32\eh\i386\ehprolog.asm
crtw32\h\cruntime.inc
crtw32\misc\i386\exsup.asm,exsup2.asm,exsup3.asm,longjmp.asm,
                 setjmp.asm,setjmp3.asm,setjmpex.asm
fpw32\inc\i386\cruntime.inc
        remove ifdef's to support MASM 5.X

-----------------------------------------------------------------

Thu 12-Jan-95   (Gregf)

crtw32\misc\i386\setjmp.asm
        Purged raisex().

fpw32\tran\i386\filter.c
        Made instr_info_table[] static.

-----------------------------------------------------------------

Wed 11-Jan-95   (v-rogerl)      MIPS ONLY

crtw32\h\math.h - changed
        Change _LANGUAGE_ASSEMBLER to __assembler

----------------------------------------------------------------------

Tue 10-Jan-95   (ChrisWei)

crt\makefile - changed
crt\crtw32\mbstring\lsources - changed
crt\crtw32\mbstring\tcs*.c - delfiled
        Use link-time aliases instead of _tcs* functions.

----------------------------------------------------------------------

Tue 10-Jan-95   (GregF)

crtw32\h\io.h, tchar.h, wchar.h

crtw32\h\sys\stat.h

crtw32\direct\findfile.c, findfi64.c, lsources, wfndfi64.c

crtw32\dos\lsources, stat.c, stati64.c (new), wstati64.c (new)

crtw32\lowio\fstat.c, fstati64.c (new), lsources

libw32\include\io.h, tchar.h, wchar.h

libw32\include\sys\stat.h

libw32\lib\i386\msvcrt30.def
           i386\win32s\msvcrt30.def
           axp\msvcrt30.def
           mips\msvcrt30.def

        Added _[w]find[first|next], _[w]stati64 and _fstati64 functions.

----------------------------------------------------------------------

Mon 09-Jan-95   (ChrisWei)

Changed _MAC_ to _M_MPPC && _M_M68K. Removed MPPC, M68K defines.

The following files all changed:


Status for \\D:G2000N2\CRT, owner = CHRISWEI2:
Subdirectory \, version 1.00, robust:

file      local-ver  ver  status   base

log.txt         162  162  out

Subdirectory \crtw32, version 1.00, robust:

file      local-ver  ver  status   base

mkpmac.bat        1    1  out

Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

isctype.c         4    4  out
mblen.c           4    4  out
mbstowcs.c        6    6  out
mbtowc.c          5    5  out
tolower.c         4    4  out
toupper.c         7    7  out
wcstombs.c        5    5  out
wctomb.c          3    3  out

Subdirectory \crtw32\eh\mac\m68k, version 1.00, robust:

file      local-ver  ver  status   base

frame.cxx         1    1  out

Subdirectory \crtw32\eh\mac\pmac, version 1.00, robust:

file      local-ver  ver  status   base

frame.cxx         2    2  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

cmsgs.h           2    2  out
cruntime.h        4    4  out
dostypes.h        3    3  out
ehassert.h        4    4  out
ehhooks.h         3    3  out
fltintrn.h        4    4  out
heap.h           10   10  out
internal.h       11   11  out
math.h            9    9  out
msdos.h           4    4  out
oscalls.h         3    3  out
process.h         8    8  out
search.h          4    4  out
stdio.h          10   10  out
stdlib.h          6    6  out
string.h          4    4  out

Subdirectory \crtw32\h\sys, version 1.00, robust:

file      local-ver  ver  status   base

locking.h         2    2  out
timeb.h           4    4  out
utime.h           4    4  out

Subdirectory \crtw32\heap\mac, version 1.00, robust:

file      local-ver  ver  status   base

heapgrow.c        1    1  out
malloc.c          2    2  out
realloc.c         3    3  out

Subdirectory \crtw32\lowio\mac, version 1.00, robust:

file      local-ver  ver  status   base

mktemp.c          1    1  out

Subdirectory \crtw32\mbstring, version 1.00, robust:

file      local-ver  ver  status   base

ismbsle.c         4    4  out
ismbstr.c         4    4  out
mbctype.c         4    4  out
mbsbtype.c        4    4  out
mbschr.c          4    4  out
mbscmp.c          4    4  out
mbscspn.c         5    5  out
mbsdec.c          4    4  out
mbsicmp.c         4    4  out
mbslen.c          4    4  out
mbslwr.c          5    5  out
mbsnbcat.c        4    4  out
mbsnbcmp.c        4    4  out
mbsnbcnt.c        4    4  out
mbsnbcpy.c        4    4  out
mbsnbicm.c        4    4  out
mbsncat.c         4    4  out
mbsnccnt.c        4    4  out
mbsncmp.c         4    4  out
mbsncpy.c         4    4  out
mbsnicmp.c        4    4  out
mbsnset.c         4    4  out
mbsrchr.c         4    4  out
mbsrev.c          4    4  out
mbsspn.c          5    5  out
mbstok.c          4    4  out
mbsupr.c          5    5  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

abs.c             2    2  out

Subdirectory \crtw32\misc\mac, version 1.00, robust:

file      local-ver  ver  status   base

getenv.c          1    1  out
putenv.c          1    1  out
xcptfltr.c        2    2  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

crt0msg.c         5    5  out

Subdirectory \crtw32\startup\mac, version 1.00, robust:

file      local-ver  ver  status   base

crt0dat.c         2    2  out
libcinfo.c        1    1  out

Subdirectory \crtw32\stdio, version 1.00, robust:

file      local-ver  ver  status   base

fgetpos.c         3    3  out
fread.c           2    2  out
fsetpos.c         3    3  out
fwrite.c          2    2  out
output.c          6    6  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

strcat.c          2    2  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

m68k.mkf          1    1  out
pmac.mkf          1    1  out

Subdirectory \fpw32\conv\mac\m68k, version 1.00, robust:

file      local-ver  ver  status   base

libcinfo.c        1    1  out

Subdirectory \fpw32\include\mac, version 1.00, robust:

file      local-ver  ver  status   base

cv.h              1    1  out
trans.h           1    1  out
transl.h          1    1  out

----------------------------------------------------------------------

Sat 07-Jan-95   (ChrisWei)

Changed _WIN32_ to _WIN32 in all files except crtw32\*\common.

crtw32\iostream\common\*.cxx    -> *.old
        Finish rest of iostream files.

crtw32\iostream\iostream.mkf
        Makefile change to reflect merge.

----------------------------------------------------------------------

Fri 06-Jan-95   (ChrisWei)

crtw32\dos\common\*.c
        All nuked since all drawn from dos\mac.

----------------------------------------------------------------------

Fri 06-Jan-95   (GregF)

crtw32\h\stdio.h
libw32\include\stdio.h
        Deleted the 64-bit definition(s) of fpos_t. The C++ style comments
        don't work very well for -Za!

crtw32\iostream\common\ostrint.cxx  -> ostrint.old (renamed)
                       ostrldbl.cxx -> ostrldbl.old
                       ostrlong.cxx -> ostrlong.old
                       ostrptr.cxx  -> ostrptr.old
                       ostrput.cxx  -> ostrput.old
                       ostrshrt.cxx -> ostrshrt.old
                       ostruint.cxx -> ostruint.old
                       ostrulng.cxx -> ostrulng.old
                       ostrusht.cxx -> ostrusht.old
                       stdiostr.cxx -> stdiostr.old
                       streamb1.cxx -> streamb1.old
                       strmbdbp.cxx -> strmbdbp.old
                       strstrea.cxx -> strstrea.old

----------------------------------------------------------------------

Thu 05-Jan-95   (ChrisWei)

crtw32\h\dbgint.h
crtw32\misc\dbgrpt.c, dbgheap.c
        Add report hook, asserts are only errors.

----------------------------------------------------------------------

Thu 05-Jan-95   (GregF)

crtw32\h\stdio.h
crtw32\stdio\fgetpos.c, fsetpos.c
libw32\include\stdio.h
        Temporarily commented out support for 64-bit definition of fpos_t
        due to bugs in MFC and the IDE.

crtw32\iostream\common\cerrinit.cxx -> cerrinit.old (renamed)
                       cininit.cxx  -> cininit.old
                       cloginit.cxx -> cloginit.old
                       filebuf.cxx  -> filebuf.old
                       filebuf1.cxx -> filebuf1.old
                       fstream.cxx  -> fstream.old
                       ifstream.cxx -> ifstream.old
                       iostream.cxx -> iostream.old
                       iostrini.cxx -> iostrini.old
                       istrchar.cxx -> istrchar.old
                       istrdbl.cxx  -> istrdbl.old
                       istream.cxx  -> istream.old
                       istream1.cxx -> istream1.old
                       istrflt.cxx  -> istrflt.old
                       istrgdbl.cxx -> istrgdbl.old
                       istrget.cxx  -> istrget.old
                       istrgetl.cxx -> istrgetl.old
                       istrldbl.cxx -> istrldbl.old
                       ofstream.cxx -> ofstream.old
                       ostrchar.cxx -> ostrchar.old
                       ostrdbl.cxx  -> ostrdbl.old
                       ostream.cxx  -> ostream.old
                       ostream1.cxx -> ostream1.old
        The files above were renamed so that all builds use the versions in
        iostream.

----------------------------------------------------------------------

Wed 04-Jan-95   (BryanT)

crtw32\misc\setlocal.c
        Fix non-Win32 builds.

----------------------------------------------------------------------

Wed 04-Jan-95   (GregF)

crtw32\h\stdio.h
libw32\include\stdio.h
        Bug fix and change to the definition of fpos_t, both from Richard
        Shupak. Added _INTEGRAL_MAX_BITS >= 64 to the conditioning and
        changed the name of the struct to fpos_t (same as the type).

crtw32\lowio\commit.c, eof.c, flength.c, isatty.c, osfinfo.c, setmode.c,
             dup.c, dup2.c, locking.c, lseek.c, read.c, write.c
crtw32\stdio\_freebuf.c, fdopen.c, maketabc.c
        Replaced _WIN32_ with _WIN32. Also fixed copyright dates as long as
        I had 'em checked out.

crtw32\lowio\common\cgets.c, cputs.c getch.c, kbhit.c, pipe.c, putch.c,
                    ungetch.c
        Deleted. Console i/o was not implemented in the Mac versions of the
        Crt libs so these are not needed.

----------------------------------------------------------------------

Tue 03-Jan-95   (GregF)

crtw32\lowio\common\close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
                    fstat.c, initcon.c, locking.c, lseek.c, mktemp.c, open.c,
                    osfinfo.c, read.c, tell.c, write.c
        The listed files (above) were DELETED. They were not part of any build.
        The _MAC_ build used the corresponding files in crtw32\lowio\mac.

crtw32\lowio\common\creat.c   -> creat.old (renamed)
                    isatty.c  -> isatty.old
                    setmode.c -> setmode.old
        Use lowio versions for _MAC_ build.

crtw32\stdio\mac\*.c
        References to obsolete macros (e.g., _CALLTYPE1) were deleted or
        replaced.

----------------------------------------------------------------------

Fri 30-Dec-94   (GregF)

crtw32\stdio\common\fread.c  -> fread.old (renamed)
                    fseek.c  -> fseek.old
                    fwrite.c -> fwrite.old
                    fgets.c  -> fgets.old

crtw32\stdio\fread.c, fwrite.c
       Use stdio versions for _MAC_ build. This required small conditional
       changes to fread.c and fwrite.c.

----------------------------------------------------------------------

Tue 27-Dec-94   (ChrisWei)

crtw32\dllstuff\crtdll.c
crtw32\startup\dllcrt0.c, wdllcrt0.c, lsources
        Removed unused _wDllMainCRTStartup entry point.

----------------------------------------------------------------------

Tue 27-Dec-94   (GregF)

libw32\include\*.h
        Updated several header files to match crtw32\h.

----------------------------------------------------------------------

Mon 27-Dec-94   (JamesMa)

Latest & greatest Intel workarounds for Pentium FDIV problem:
fpw32\tran\i386\adj_fdiv.asm (modified)
fpw32\tran\i386\tst_fdiv.c replaced by testfdiv.c

-----------------------------------------------------------------

Tues 27-Dec-94   (ChrisWei)

crtw32\misc\aw_*.c
        Call A/W APIs directly rather than dynamically since all OS's
        have stubs for all entry points.

-----------------------------------------------------------------

Mon 26-Dec-94    (GregF)

crtw32\h\internal.h, stdio.h
crtw32\stdio\fgetpos.c, fsetpos.c, lsources
crtw32\stdio\fseeki64.c, ftelli64.c (files added)
        Added support for 64-bit definition of fpos_t. The only user-visible
        functions affected are fgetpos and fsetpos. Internally, there are now
        64-bit versions of fseek and ftell.

-----------------------------------------------------------------

Fri 23-Dec-94    (GregF)

crtw32\stdio\common\gets.c -> gets.old (renamed)
                    puts.c -> puts.old
        Version in stdio may be used for both Win32 and MAC builds

-----------------------------------------------------------------

Thu 22-Dec-94    (GregF)

crtw32\stdio\common\clearerr.c -> clearerr.old (renamed)
                    closeall.c -> closeall.old
                    cprintf.c  -> cprintf.old
                    cscanf.c   -> cscanf.old
                    feoferr.c  -> feoferr.old
                    fgetc.c    -> fgetc.old
                    fgetchar.c -> fgetchar.old
                    fgetpos.c  -> fgetpos.old
                    fileno.c   -> fileno.old
                    fprintf.c  -> fprintf.old
                    fputc.c    -> fputc.old
                    fputchar.c -> fputchar.old
                    fputs.c    -> fputs.old
                    fscanf.c   -> fscanf.old
                    fsetpos.c  -> fsetpos.old
                    getw.c     -> getw.old
                    printf.c   -> printf.old
                    putw.c     -> putw.old
                    scanf.c    -> scanf.old
                    setbuf.c   -> setbuf.old
                    snprintf.c -> snprintf.old
                    sprintf.c  -> sprintf.old
                    sscanf.c   -> sscanf.old
                    vfprintf.c -> vfprintf.old
                    vprintf.c  -> vprintf.old
                    vsnprint.c -> vsnprint.old
                    vsprintf.c -> vsprintf.old
        The files above were renamed so that all builds now use the versions
        in stdio.


crtw32\stdio\common\fclose.c  (deleted)
                    fflush.c  (deleted)
                    rmtmp.c   (deleted)
                    tempnam.c (deleted)
                    tmpfile.c (deleted)
        The files above were deleted (delfile-d) because they were not used in
        any build (MAC builds used versions in stdio\mac).

-----------------------------------------------------------------

Wed 20-Dec-94   (ChrisWei)

crt\makefile
        Use separate .PDB for DLL compilation.

Remove NT 3.1 hacks:

Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

_mbslen.c         2    2  out
mblen.c           2    2  out
mbstowcs.c        4    4  out
mbtowc.c          3    3  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

internal.h        7    7  out

Subdirectory \crtw32\mbstring, version 1.00, robust:

file      local-ver  ver  status   base

mbscoll.c         3    3  out
mbsicoll.c        3    3  out
mbsnbcol.c        3    3  out
mbsnbico.c        3    3  out
mbsncoll.c        4    4  out
mbsnicol.c        4    4  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

aw_cmp.c          4    4  out
aw_map.c          3    3  out
aw_str.c          4    4  out
lsources          8    8  out
setfcntr.c        1    1  out
setmbval.c        1    1  out

-----------------------------------------------------------------

Wed 20-Dec-94   (V-RogerL)      MIPS ONLY

fpw32\tran\mips\fmodm.s
fpw32\tran\mips\logm.s
fpw32\tran\mips\sinhm.s
fpw32\tran\mips\trigm.s
        Olympus: 2631
        Fix return codes which are not NCEG compliant.

-----------------------------------------------------------------

Mon 19-Dec-94    (GregF)

crtw32\string\i386\strstr.asm
        Sped up as part of Olympus bug 893. Could be faster still, but that's
        for another day.

-----------------------------------------------------------------

Mon 19-Dec-94    (GregF)

crtw32\dllstuff\crtlib.c
        Changed "MSVCRT20" to "MSVCRT30", and pulled the Win32S support
        under an #ifdef _M_IX86. This was Olympus bug #3709 from Richard
        Shupak.

-----------------------------------------------------------------

Fri 16-Dec-94    (ChrisWei)

crtw32\h\time,h wchar.h
crtw32\time\wcsftime.c
        wcsftime format string should have been wchar_t...ooops.

-----------------------------------------------------------------

Thu 15-Dec-94    (v-LeoL)

makefile
        Fixed oldnames target to alias _foo for foo on MIPS & Alpha

-----------------------------------------------------------------

Thu 15-Dec-94    (GregF)

crtw32\stdio\input.c
        Changed so that the only wide characters recognized as hex digits
        are the familar single-byte char hex digits extended by 0 to wide
        characters. This was Olympus bug 3201.

-----------------------------------------------------------------

Wed 14-Dec-94    (BryanT)
crtw32\h\math.h
crtw32\h\excpt.h
crtw32\h\ios.h
crtw32\h\streamb.h
        Olympus:2500 - Add _CRTIMP designations for MIPS functions
        that need it.  Also remove mtlockinit/term prototypes from
        streamb.h and fix proto's in ios.h per converstaion w/SteveSa.

-----------------------------------------------------------------

Wed 14-Dec-94    (BryanT)

crtw32\crt32.nt
crtw32\dllstuff\dlllib\sources
crtw32\eh\sources.nt
crtw32\eh\st\sources
crtw32\eh\mt\sources
crtw32\eh\dll\sources
crtw32\lowio\dll\sources
crtw32\lowio\mt\sources
crtw32\lowio\st\sources
fpw32\tran\sources.nt
libw32\lib\dll\ntcrt.src
        Update the NT build with the last month's changes.  Also,
        delete sources.vc (VC group no longer uses them).

-----------------------------------------------------------------

Tue 13-Dec-94    (SteveSa)

makefile
libw32/makefile
libw32/lib/i386/msvcrt30.def
libw32/lib/i386/win32s/msvcrt30.def
fpw32/conv/fpinit.c
fpw32/tran/i386/87fmod.asm
fpw32/tran/i386/87tran.asm
crtw32/dllstuff/crtexe.c
crtw32/dllstuff/crtdll.c
crtw32/dllstuff/sources.vc
crtw32/dllstuff/lsources
crtw32/dllstuff/adjustfp.c (new file)
        The variable _adjust_fdiv must be exported from MSVCRT30.DLL
        but must be copied into the local data section in both EXE
        and DLL clients of MSVCRT30.DLL.  The variable may not be
        declared in crtdll.c and crtexe.c but must be external to
        both of them (otherwise the linker may pick the wrong one).
        _adjust_fdiv was misspelled for a while (as __adjust_fdiv).
        Also, the _adj_* and _safe_fdiv* routines must be exported
        from BOTH the Win32s and Win32 versions of msvcrt30.dll.

-----------------------------------------------------------------

Tue 13-Dec-94   (GregF)

crtw32\misc\alpha\extvvol.s, extzvvol.s
        Fixes from DEC, passed along by Fred Kunz.

-----------------------------------------------------------------

Tue 13-Dec-94   (GregF)

crtw32\startup\i386\chkstk.asm
        Improved version courtesy of Intel. Principal change was to return
        to the caller via a ret instruction versus a jmp eax. The jmp eax
        screws up the cache on the P6, at great expense (something like
        20 clocks, I think they said).

-----------------------------------------------------------------

Tue 13-Dec-94    (ChrisWei)

crt\makefile
        Fix typo: msvcrt30.def to msvcr30d.def.

-----------------------------------------------------------------

Tue 13-Dec-94    (GregF)

crtw32\dllstuff\crtdll.c, atonexit.c
        Made Win32s support conditional on _M_IX86.

-----------------------------------------------------------------

Fri 09-Dec-94   (JamesMa)

fpw32\tran\i386\tst_fdiv.c, adj_fdiv.asm
        New files containing detection and workaround code
        for Pentium FDIV bug.
fpw32\tran\i386\87fmod.asm, 87tran.asm
        Now check for bogus Pentiums, call workarounds in
        adj_fdiv.asm if necessary.
fpw32\tran\lsources
        Added tran\i386\adj_fdiv.obj, tran\i386\tst_fdiv.obj
fpw32\conv\fpinit.c
        Now checks for bogus Pentiums, sets __adjust_fdiv flag.

-----------------------------------------------------------------

Fri 09-Dec-94   (ChrisWei)

crtw32\h\dbgint.h, crtdbg.h
crtw32\misc\dbgheap.c, dbgrpt.c
        use non-win32 names to prepare for mac merge

-----------------------------------------------------------------

Thu 08-Dec-94   (ChrisWei)

makefile
        No more debug directory, DLL gets full debug info.

-----------------------------------------------------------------

Wed 08-Dec-94   (V-RogerL)      MIPS ONLY

fpw32\tran\mips\filter.c
        Remove warnings; add prototypes, delete unreferenced local.

crtw32\helper\mips\llbit.c
crtw32\helper\mips\lldiv.c
crtw32\helper\mips\lldefs.h
        Remove private prototypes.

-----------------------------------------------------------------

Wed 07-Dec-94   (V-RogerL)      MIPS ONLY

The following changes were done after the alpha changes were made
to crtw32\mbstring\lsources.  I assume that PPC will have to make
some changes also since there is no !else condition for the !if arch
check.

crtw32\mbstring\lsources
        Add mbcdup for mips only.

crtw32\string\mips\strcatm.s
crtw32\string\mips\strcpym.s
        Add alternate entry points for _mbccat and _mbccpy.

-----------------------------------------------------------------

Wed 07-Dec-94   (SteveSa)

Changes on behalf of Richard Shupak (and a few lines for Roger Lanser):

makefile
makefile.sub
crtw32\eh\lsources
crtw32\mbstring\lsources
crtw32\misc\lsources
crtw32\string\lsources
fpw32\tran\lsources
        Changes for ALPHA
        Remove -Gd -- it's redundant but causes problems for Alpha compiler
        Combine the implib and link steps in generating .DLL's
        Also correct MIPS helper object list in MSVCRT.LIB (for V-RogerL)

-----------------------------------------------------------------

Wed 07-Dec-94   (SteveSa)

makefile -
        Remove CVTRES step -- linker can handle .res files as input

srcrel\msvc30.if (renamed msvc20.if)
        Added a few symbols that were lacking

srcrel\bldmkf.sed
srcrel\cleanse.lst
srcrel\mkclnmkf.c
srcrel\mkmkf.cmd
srcrel\rawcopy.lst
        Tools for cleansing the sources before build.

-----------------------------------------------------------------

Wed 07-Dec-94   (v-rogerl)      MIPS ONLY

Try to make mips crts compile with minimal change to environment.

crtw32\helper\mips\llcvt.s
crtw32\helper\mips\lldivrem.s
crtw32\helper\mips\llmul.s
fpw32\tran\mips\exptable.s
fpw32\tran\mips\logtable.s
        Make little endian the default (ie. no -D_MIPSEL is ok).

crtw32\h\fpieee.h
fpw32\tran\include\trans.h
        Replace _LANGUAGE_ASSEMBLER with __assembler which will
        be defined by the MIPS CL driver.  Then nothing has to
        be explicitly defined in a makefile.

fpw32\tran\lsources
        Includes for mips assembler are the same as C (headers are #if'd).

makefile
        NT headers require _MIPS_ to be defined for mips.

-----------------------------------------------------------------

Wed 07-Dec-94   (SteveSa)

crtw32\exec\system.c
        If there is no %COMSPEC%, look for command.com on Windows '95
        and cmd.exe on Windows NT.  (Previously it was always cmd.exe)

-----------------------------------------------------------------

Tue 06-Dec-94   (SteveSa)

makefile
libw32\msvcr30.rc
        Changed the invocation of RC.EXE to use the LANGAPI environment
        variable rather than the hard-coded path //lang1/v3slm/src/...
        to get the include file "version.h".  Removed "winver.h" from
        msvcrt30.rc because it was not needed.

makefile
        Add -Gfy to C compiler options, and -QI6 for X86 only.
        Use -O2 instead of -Ox for release and lego builds.
        Add cabs() to list of OLDNAMES aliases.

-----------------------------------------------------------------

Mon 05-Dec-94   (ChrisWei)

crtw32\h\crtdbg.h
crtw32\h\dbgint.h
crtw32\h\heap.h
crtw32\heap\calloc.c
crtw32\heap\free.c
crtw32\heap\malloc.c
crtw32\heap\msize.c
crtw32\heap\realloc.c
crtw32\misc\dbgheap.c
        Fix the normal heap and the debug heap. calloc and realloc called
        malloc_lk for MT and got no new handler support. Fixed that while
        rearranging the _nh_malloc mess to allow debug support.  Dbg
        support for msvcrt30d.dll now works.

-----------------------------------------------------------------

Mon 05-Dec-94   (v-rogerl)      MIPS ONLY

fpw32\tran\mips\*t.c
        Added quick regression tests for mips.

------------------------------------------------------------------

Sat 03-Dec-94   (SteveSa)

crtw32\dllstuff\i386 dllsupp.asm
crtw32\dos\dosmap.c,unlink.c
crtw32\h\cruntime.inc,error.h,internal.h,msdos.h,process.h
crtw32\lowio\cgets.c,dup.c,dup2.c,getch.c,locking.c
crtw32\lowio\lseek.c,pipe.c,putch.c,read.c,write.c
crtw32\misc\umask.c,wrt2err.c
crtw32\startup\crt0dat.c
crtw32\startup\i386\chkstk.asm
crtw32\time\strtime.c
        Source Release Clean-Up
        Fix references to OS/2, obsolete 16-bit comments, unnecessary includes

-----------------------------------------------------------------

Fri 02-Dec-94   (v-rogerl)      MIPS ONLY

fpw32\tran\mips\fmodm.s
fpw32\tran\mips\logm.s
fpw32\tran\mips\powm.s
fpw32\tran\mips\trigm.s
        Change return codes to be NCEG compliant.

-----------------------------------------------------------------

Fri 02-Dec-94   (v-rogerl)      MIPS ONLY

crtw32\string\mips\memorym.s
fpw32\tran\mips\fsqrthlp.s
        Replace '#if defined(R4000)' with '$if -D_M_MRX000 >= 4000'
        which is defined by the cl driver.

------------------------------------------------------------------

Wed 30-Nov-94   (GregF)

crtw32\h\io.h
crtw32\lowio\fleni64.c, lseeki64.c, lsources, telli64.c
libw32\lib\alpha\msvcrt30.def
           mips\msvcrt30.def
           i386\msvcrt30.def
           i386\win32s\msvcrt30.def
        Added versions of _filelength(), _lseek() and _tell() which work
        with full 64-bit (__int64) file lengths and file positions.

------------------------------------------------------------------

Tue 29-Nov-94   (JamesMa)

crtw32\eh\frame.cxx
        Removed obsolete 'hash' test in TypeMatch(); modified AdjustPointer()
        to add in an extra pdisp, not vdisp.

-----------------------------------------------------------------

Tue 29-Nov-94    (GregF)

crtw32\string\i386\strlen.asm
        Faster version, courtesy of Intel Israel.

-----------------------------------------------------------------

Mon 28-Nov-94    (ChrisWei)

crtw32\h\dbgint.h, crtdbg.h
crtw32\misc\dbgheap.c, dbgrpt.c, dbghook.c
        1) General cleanup.
        2) Change _SetCrtxxx to _CrtSetxxx.
        3) Add Set Client Dump stuff.
        4) Modify alloc hook stuff - more info passed, for alloc, re-alloc,
        and free, can overide at link time now.

-----------------------------------------------------------------

Tues 22-Nov-94   (GregF)

crtwin32\string\i386\strnicmp.asm
        Wasn't incrementing the string pointers in the non-C locale
        case. Had the effect of repeatedly comparing the first characters
        of the two strings.

------------------------------------------------------------------

Mon 21-Nov-94   (JamesMa)

makefile
        Added typeinfo.h to OBJS_WITH_EXPORTS_DLL_RAW section.

crtw32\h\stdexcpt.h
        Made the xmsg typedef #ifdef __RTTI_OLDNAMES.

------------------------------------------------------------------

Fri 18-Nov-94    (GregF)

crtw32\string\i386\strchr.asm
        Did some long overdue (VERY long overdue!) tuning. This is part of
        Olympus bug #893

-----------------------------------------------------------------

Wed 15-Nov-94    (JamesMa)

crtw32\eh\rtti.cxx
        Added more agressive checking for non-rtti objects in __RTtypeid().

crtw32\h\typeinfo.h, stdexcpt.h
        Made several more eh classes _CRTIMP to remove the C4275 build warnings.

-----------------------------------------------------------------

Mon 14-Nov-94    (GregF)

crtwin32\convert\toupper.c, towupper.c
        Removed extra mlock call.

crtwin32\string\i386\stricmp.asm
        Fixed typo (was saving esi twice).

-----------------------------------------------------------------

Sat 12-Nov-94    (GregF)

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
        Wasn't saving volatile regs across function calls. Having to work on
        Sat is probably suitable punishment in this case.

-----------------------------------------------------------------

Thu 10-Nov-94    (SteveSa)

crt\makefile
crt\crtw32\eh\lsources
crt\crtw32\eh\special.mak (re-created)
        One source file and 4 include files are needed from the LANGAPI
        project.  The LANGAPI environment variable must point to the
        main directory of that project on the local system.  This practice
        matches the rest of the VC tools projects.  The "langapi" target
        is now defunct.

-----------------------------------------------------------------

Wed 09-Nov-94    (SteveSa)

crt\makefile
crt\crtw32\eh\lsources
crt\crtw32\eh\special.mak (deleted)
        One source file and 4 include files are needed from the LANGAPI
        project on //lang1/v3slm.  Instead of compiling/including those
        files from the network, local copies are used instead.  The top-
        level makefile now includes a target "langapi" which grabes them.

        This is to avoid the problem of files out on //lang1 changing
        while a build is taking place on the local machine, leading to
        synchronization problems and/or unexpected results.

-----------------------------------------------------------------

Wed 09-Nov-94    (SteveSa)

crt\makefile
crt\libw32\msvcrt30.rc
        Invoke RC and CVTRES on MSVCRT20.DLL/.DLS to set version info.
        This step is already in crt\libw32\makefile but needed to be
        propogated into crt\makefile.  Also change msvcrt30.rc to
        include .../langapi/include/version.h to get the Julian date
        build information into the sub-minor version.

-----------------------------------------------------------------

Wed 09-Nov-94    (GregF)

crt\crtw32\direct\fullpath.c
        Revised (i.e., threw away 9/10-ths of the code) to use NT's
        GetFullPathName API. This fixes Olympus bug 138.

-----------------------------------------------------------------

Tue 08-Nov-94    (SteveSa)

crt\crtw32\dllstuff\crtdll.c
        Free up __onexitbegin to avoid a slow memory leak

-----------------------------------------------------------------

Tue 08-Nov-94    (SteveSa)

crt\makefile
crt\libw32\makefile
crt\libw32\msvcrt20.rc -> msvcrt30.rc
crt\libw32\alpha\msvcrt20.def -> msvcrt30.def
crt\libw32\i386\msvcrt20.def -> msvcrt30.def
crt\libw32\i386\win32s\msvcrt20.def -> msvcrt30.def
crt\libw32\mips\msvcrt20.def -> msvcrt30.def
        Change all references to msvcrt20.* to msvcrt30.* (2.0 to
        3.0) and edit version number in .DEF files and .RC file.
        Changed DLL base address from 0x1010_0000 to 0x1020_0000.

-----------------------------------------------------------------

Mon 07-Nov-94    (GregF)

crt\libw32\include\*
        Updated header files to bring them in sync with what we have
        in crtw32\h.

-----------------------------------------------------------------

Mon 07-Nov-94    (GregF)

crtw32\h\winheap.h
crtw32\winheap\heapinit.c
        Made a couple of changes so the DLLs for Win32 and Win32s would
        build.

-----------------------------------------------------------------

Mon 07-Nov-94    (GregF)

crtw32\h\winheap.h
crtw32\winheap\heapchk.c, heapinit.c, heapmin.c, heapterm.c (deleted!),
               heapwalk.c, lsources, sources.vc
crtw32\winheap\dll\sources
crtw32\winheap\mt\sources
crtw32\winheap\psx\sources
crtw32\winheap\st\sources
        Use HeapCreate API instead of GetProcessHeap API.

-----------------------------------------------------------------

Sun 06-Nov-94    (GregF)

crtw32\h\direct.h, dos.h, doscalls.h, ehdata.h, eh.h, excpt.h, fpieee.h,
         fstream.h, io.h, iomanip.h, ios.h, iostream.h, istream.h, locale.h,
         malloc.h, math.h, mbstring.h, ostream.h, setjmp.h, stdarg.h, stdio.h,
         stdiostr.h, stdlib.h, streamb.h, strstrea.h, time.h, varargs.h, wchar.h
crtw32\sys\stat.h, timeb.h, utime.h
        Added, or changed, pack pragmas for 8 byte alignment. This fixes
        Olympus bug #104. Apps which include ios.h (this probably includes all
        users of iostream), stat.h or wchar.h need to be recompiled.

-----------------------------------------------------------------

Sun 06-Nov-94    (GregF)

crt\makefile
        Fixed omissions related to runtime errors and matherr in msvcrt*.dll.

-----------------------------------------------------------------

Sat 05-Nov-94    (BryanT)

crtw32\startup\dlllib\sources - link the checkstack code into the
        DLL users.

-----------------------------------------------------------------

Thu 03-Nov-94    (ChrisWei)

crtw32\misc\dbgheap.c, dbgrpt.c - addfile
crtw32\misc\lsources
crtw32\h\dbgint.h crtdbg.h - addfile
crtw32\heap\malloc.c, calloc.c, free.c, realloc.c, msize.c
        Add debug heap support. Controlled by _DEBUG macro.

crt\makefile - put the .pdb file where the libs are built.

-----------------------------------------------------------------

Thu 03-Nov-94    (SteveSa)

makefile
libw32\makefile
        Add hypot, cabs, j0, j1, jn, y0, y1, and yn to oldnames aliases.
        This is Olympus bug #1684.  Curiously, these aliases were always
        in the 16-bit libs.  Not sure why they got left out of VCNT v1.1.

-----------------------------------------------------------------

Thu 03-Nov-94    (SteveSa)

crtw32\h\process.h -
crtw32\dllstuff\crtdll.c
crtw32\startup\dllcrt0.c
crtw32\startup\thread.c
crtw32\startup\threadex.c
        Backed out yesterday's change to these files.  The __cdecl/__stdcall
        keyword DOES belong before the asterisk in a function prototype, not
        after it.  The __stdcall modifies what the pointer points to, not
        the pointer variable itself.

-----------------------------------------------------------------

Thu 03-Nov-94    (GregF)

crtw32\misc\alpha\extvvol.s, extzvvol.s, insvvol.s, sfill.s, smove.s,
                  smovem.s, szero.s
        Changes for DEC Alpha from Fred Kunz.

-----------------------------------------------------------------

Wed 02-Nov-94    (SteveSa)

crtw32\heap\heapinit.c,
crtw32\h\heap.h -
        Back out my 8/24 change to the Win32s detection code which tried to
        detect Phar Lap TNT but not Win32s.  Instead, use a simpler solution:
        maximum region size under Win32s increased from 256 KB to 16 MB
        to allow Win32s users to allocate huge amounts of memory.

-----------------------------------------------------------------

Wed 02-Nov-94    (SteveSa)

        *** This change backed-out on Thu 03-Nov-94 ***

crtw32\h\process.h -
crtw32\dllstuff\crtdll.c
crtw32\startup\dllcrt0.c
crtw32\startup\thread.c
crtw32\startup\threadex.c
        Fix position of __cdecl/__stdcall/WINAPI in declaration of pointer
        to function (parameters to _beginthread and _beginthreadex and the
        variable _pRawDllMain).  The function type goes AFTER the asterisk.
        A compiler bug allowed it to occur afterward as well.

-----------------------------------------------------------------

Wed 02-Nov-94    (GregF)

crtw32\string\strcoll.c, stricoll.c, strlwr.c, strncoll.c, strupr.c,
              strxfrm.c, wcscoll.c, wcsicoll.c, wcslwr.c, wcsncoll.c,
              wcsnicol.c, wcsupr.c, wcsxfrm.c
        Sped up for the C locale, multi-thread version. These are the final
        changes to resolve Olympus bug #1681.

-----------------------------------------------------------------

Tue 01-Nov-94    (BryanT)

crtw32\winheap\heapterm.c, heapadd.c, heapused.c, new_mode.cxx
        Initial stubs until new kernel32 api's are ready

crtw32\winheap\sources.nt
crtw32\winheap\st\sources
crtw32\winheap\mt\sources
crtw32\winheap\dll\sources
crtw32\winheap\dlllib\sources
        Setup so _newmode.c can be linked into image (not exported
        from the DLL)

libw32\lib\dll\ntcrt.src
        Add extra entrypoints (for C++ EH and other stuff)

libw32\lib\sources.nt
        Fix random problems

-----------------------------------------------------------------

Tue 01-Nov-94    (BryanT)

crtw32\string\memicmp.c, strnicmp.c
        Fix non-X86 builds by including locale.h (for the LC_CTYPE
        definition)

-----------------------------------------------------------------

Fri 28-Oct-94    (BryanT)

crtw32\eh\st\sources
crtw32\eh\mt\sources
crtw32\dll\sources
        Add ehprolog.asm to i386_SOURCES

libw32\lib\dll\ntcrt35.src
        Export _EH_Prolog on X86

-----------------------------------------------------------------

Fri 28-Oct-94    (SteveSa, JamesMa)

crtw32\dllstuff\cinitexe.c
crtw32\startup\crt0init.c
crtw32\startup\wincrt0.c
crtw32\startup\wwincrt0.c
        There is a default library search record (-defaultlib:) for
        KERNEL32.LIB in all cases.  Until now, a -defaultlib directive
        for USER32.LIB was only included in wincrt0.c and wwincrt0.c,
        but now that our error-handling code can call MessageBoxA, we
        need a -defaultlib directive for user32.lib in ALL cases, just
        like kernel32.lib has.

-----------------------------------------------------------------

Fri 28-Oct-94    (SteveSa, JamesMa)

crtw32\eh\special.mak (new file)
crtw32\eh\lsources
crtw32\eh\stdexcpt.cxx
crtw32\eh\stdnewh.cxx
        Add RTTI support objects: undname.obj, rtti.obj, stdexcpt.h,
        stdnew.obj, and typeinfo.obj.  The source for undname.obj is
        NOT in this directory (or even this probject), but out on
        //lang1/v3slm/src/langapi/undname/.  The RTTI sources include
        files in the //lang1/v3slm/src/langapi/{include,undname}/
        directories, so two -I directives are added for this directory.

crtw32/h/typeinfo.h
        Also removed the definition of WIN32_LEAN_AND_MEAN from this file.
        This symbol is now *always* defined by our build process.

-----------------------------------------------------------------

Thu 27-Oct-94    (GregF)

crtw32\string\memicmp.c, stricmp.c, strnicmp.c
        Fixed more silly mistakes

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
        Now works for DLL_FOR_WIN32S.

-----------------------------------------------------------------

Thu 27-Oct-94    (ChrisWei)

crtw32\eh\lsources, sources.vc
crtw32\eh\i386\ehprolog.asm added
        EH prolog stuff added - from LouisL

crtw32\misc\aw_str.c - fix for FE win95 - verify proper lcid/codepage match

-----------------------------------------------------------------

Thu 27-Oct-94    (GregF)

crtw32\h\ctype.h

crtw32\convert\toupper.c, towupper.c

Fixed several silly mistakes. I was too quick and careless with yesterday's
checkin.

-----------------------------------------------------------------

Wed 26-Oct-94    (GregF)

crtw32\convert\tolower.c, toupper.c, towlower.c, towupper.c

crtw32\h\ctype.h

crtw32\string\memicmp.c, stricmp.c, strnicmp.c, wcsicmp.c, wcsnicmp.c

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm

A package of fixes so that these functions work properly and are mult-thread
safe in non-C locales. This is part of the fix for 1232. A few were also
sped up for the C locale (e.g., memicmp.c, used for non-x86 targets).

-----------------------------------------------------------------

Fri 21-Oct-94    (BryanT)

crtw32\mbstring\i386\mbsdup.asm, mbscat.asm
        Change macros to work correctly in VC build environment where
        the i386 path is defined away.

-----------------------------------------------------------------

Thu 20-Oct-94    (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt
libw32\lib\sources.nt
        Allow NTDEBUG to be set (so libs can have debug symbolic)
        If building CRTDLL (instead of NTCRT35), define _NTSDK.

-----------------------------------------------------------------

Wed 19-Oct-94    (BryanT)

crtw32\stdio\output.c
        Re-enabled %Z and %ws/%wc for NT_BUILD only.

-----------------------------------------------------------------

Tue 18-Oct-94    (BryanT)

crtw32\mbstring\toupper.c, mbtowc.c mbstowcs.c
        Fix build warnings in _NTSUBSET_ section.

-----------------------------------------------------------------

Tue 18-Oct-94    (BryanT)

crtw32\eh\*.cxx
        Disable all code for _M_PPC builds only.

crtw32\mbstring\i386\*.asm
crtw32\eh\alpha\bridge.s
        include w/o path when NT_BUILD is used

crtw32\dirs, crt32.nt
crtw32\convert\dirs
crtw32\direct\sources.nt
crtw32\dos\dirs
crtw32\heap\dirs
crtw32\linkopts\makefile.inc
crtw32\small\sources, sources.vc
fpw32\dirs, fp32.nt
        Fix typos and add files I missed yesterday.

-----------------------------------------------------------------

Mon 17-Oct-94    (JamesMa)

Added the folowing files related to Runtime Type Information:
        crtw32\eh\rtti.cxx
        crtw32\eh\typeinfo.cxx
        crtw32\eh\stdexcpt.cxx
        crtw32\eh\stdnewh.cxx
        crtw32\h\rtti.h
        crtw32\h\typeinfo.h
        crtw32\h\stdexcpt.h

Note: these files have not been added to the makefile yet -
dependency issues with the \langapi project must be resolved first.

---------------------------------------------------------------

Mon 17-Oct-94    (BryanT)

        Add support for NT build from one enlistment.  Lots of files
        changed.  The old VC sources files were renamed to sources.vc
        Here's the log:

time            user     op      file               comment

Log for crt:

10-17-94@19:32  BryanT3  addfile dirs v1            New NT build
10-17-94@19:33  BryanT3  in      makefile v21       New NT build

Log for crt\crtw32:

10-17-94@17:36  BryanT3  in      crt32.nt v4        No _NTSDK
10-17-94@17:37  BryanT3  rename  makefile v4        makefile.vc;Not needed

Log for crt\crtw32\convert:

10-17-94@17:38  BryanT3  delfile makefile v2        Not needed
10-17-94@17:38  BryanT3  rename  sources v2         sources.vc;Save
10-17-94@17:38  BryanT3  in      sources.nt v2      Update
10-17-94@17:39  BryanT3  addfile st v1              New build
10-17-94@17:39  BryanT3  addfile mt v1              New build
10-17-94@17:39  BryanT3  addfile nt v1              New build
10-17-94@17:39  BryanT3  addfile dll v1             New build
10-17-94@17:39  BryanT3  addfile psx v1             New build

Log for crt\crtw32\convert\dll:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\mt:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\nt:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\psx:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\st:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\direct:

10-17-94@17:44  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@17:44  BryanT3  in      sources.nt v2      New build
10-17-94@17:44  BryanT3  delfile makefile v2        Not needed
10-17-94@17:45  BryanT3  addfile st v1              New build
10-17-94@17:45  BryanT3  addfile mt v1              New build
10-17-94@17:45  BryanT3  addfile dll v1             New build
10-17-94@17:46  BryanT3  addfile dirs v1            New NT build

Log for crt\crtw32\direct\dll:

10-17-94@17:45  BryanT3  addfile                    New build
10-17-94@17:45  BryanT3  addfile makefile v1        New build
10-17-94@17:45  BryanT3  addfile sources v1         New build

Log for crt\crtw32\direct\mt:

10-17-94@17:45  BryanT3  addfile                    New build
10-17-94@17:45  BryanT3  addfile makefile v1        New build
10-17-94@17:45  BryanT3  addfile sources v1         New build

Log for crt\crtw32\direct\st:

10-17-94@17:45  BryanT3  addfile                    New build
10-17-94@17:45  BryanT3  addfile makefile v1        New build
10-17-94@17:45  BryanT3  addfile sources v1         New build

Log for crt\crtw32\dllstuff:

10-17-94@17:49  BryanT3  delfile makefile v2        Not needed
10-17-94@17:49  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@17:49  BryanT3  addfile sources.nt v1      New NT build
10-17-94@17:49  BryanT3  addfile dll v1             New NT build
10-17-94@17:49  BryanT3  addfile dlllib v1          New NT build
10-17-94@17:50  BryanT3  addfile dirs v1            New NT build
10-17-94@17:51  BryanT3  in      crtexe.c v5        Fix _NTSDK build
10-17-94@17:51  BryanT3  in      crtlib.c v10       Fix _NTSDK build

Log for crt\crtw32\dllstuff\dll:

10-17-94@17:49  BryanT3  addfile                    New NT build
10-17-94@17:49  BryanT3  addfile makefile v1        New NT build
10-17-94@17:49  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dllstuff\dlllib:

10-17-94@17:49  BryanT3  addfile                    New NT build
10-17-94@17:49  BryanT3  addfile makefile v1        New NT build
10-17-94@17:49  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dos:

10-17-94@17:53  BryanT3  delfile makefile v2        Not needed
10-17-94@17:54  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@17:54  BryanT3  addfile sources.nt v1      New NT build
10-17-94@17:56  BryanT3  addfile st v1              New NT build
10-17-94@17:56  BryanT3  addfile mt v1              New NT build
10-17-94@17:56  BryanT3  addfile dll v1             New NT build

Log for crt\crtw32\dos\dll:

10-17-94@17:56  BryanT3  addfile                    New NT build
10-17-94@17:56  BryanT3  addfile makefile v1        New NT build
10-17-94@17:56  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dos\mt:

10-17-94@17:56  BryanT3  addfile                    New NT build
10-17-94@17:56  BryanT3  addfile makefile v1        New NT build
10-17-94@17:56  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dos\st:

10-17-94@17:56  BryanT3  addfile                    New NT build
10-17-94@17:56  BryanT3  addfile makefile v1        New NT build
10-17-94@17:56  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh:

10-17-94@18:00  BryanT3  delfile makefile v2        Not needed
10-17-94@18:00  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@18:01  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:01  BryanT3  addfile dirs v1            New NT build
10-17-94@18:02  BryanT3  addfile st v1              New NT build
10-17-94@18:02  BryanT3  addfile mt v1              New NT build
10-17-94@18:02  BryanT3  addfile dll v1             New NT build
10-17-94@18:02  BryanT3  addfile dlllib v1          New NT build

Log for crt\crtw32\eh\dll:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh\dlllib:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh\mt:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh\st:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\exec:

10-17-94@18:04  BryanT3  delfile makefile v2        Not needed
10-17-94@18:04  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:05  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:05  BryanT3  addfile dirs v1            New NT build
10-17-94@18:05  BryanT3  addfile st v1              New NT build
10-17-94@18:05  BryanT3  addfile mt v1              New NT build
10-17-94@18:05  BryanT3  addfile dll v1             New NT build

Log for crt\crtw32\exec\dll:

10-17-94@18:05  BryanT3  addfile                    New NT build
10-17-94@18:05  BryanT3  addfile makefile v1        New NT build
10-17-94@18:05  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\exec\mt:

10-17-94@18:05  BryanT3  addfile                    New NT build
10-17-94@18:05  BryanT3  addfile makefile v1        New NT build
10-17-94@18:05  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\exec\st:

10-17-94@18:05  BryanT3  addfile                    New NT build
10-17-94@18:05  BryanT3  addfile makefile v1        New NT build
10-17-94@18:05  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\h:

10-17-94@17:23  BryanT3  in      tchar.h v4         Posix fix

Log for crt\crtw32\hack:

10-17-94@18:06  BryanT3  delfile makefile v2        Not needed
10-17-94@18:06  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:06  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:07  BryanT3  addfile dirs v1            New NT build
10-17-94@18:07  BryanT3  addfile nt v1              New NT build

Log for crt\crtw32\hack\nt:

10-17-94@18:07  BryanT3  addfile                    New NT build
10-17-94@18:07  BryanT3  addfile makefile v1        New NT build
10-17-94@18:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap:

10-17-94@18:08  BryanT3  delfile makefile v2        Not needed
10-17-94@18:08  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:08  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:08  BryanT3  addfile dirs v1            New NT build
10-17-94@18:09  BryanT3  addfile st v1              New NT build
10-17-94@18:09  BryanT3  addfile mt v1              New NT build
10-17-94@18:09  BryanT3  addfile dll v1             New NT build
10-17-94@18:09  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\heap\dll:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap\mt:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap\psx:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap\st:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper:

10-17-94@18:11  BryanT3  delfile makefile v2        Not needed
10-17-94@18:11  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:11  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:11  BryanT3  addfile dirs v1            New NT build
10-17-94@18:13  BryanT3  addfile st v1              New NT build
10-17-94@18:13  BryanT3  addfile mt v1              New NT build
10-17-94@18:13  BryanT3  addfile nt v1              New NT build
10-17-94@18:13  BryanT3  addfile dll v1             New NT build
10-17-94@18:13  BryanT3  addfile dlllib v1          New NT build
10-17-94@18:13  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\helper\dll:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\dlllib:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\mt:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\nt:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\psx:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\st:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\iostream:

10-17-94@18:15  BryanT3  delfile makefile v2        Not needed
10-17-94@18:15  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:15  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:15  BryanT3  addfile dirs v1            New NT build
10-17-94@18:17  BryanT3  addfile st v1              New NT build
10-17-94@18:17  BryanT3  addfile mt v1              New NT build
10-17-94@18:17  BryanT3  addfile dll v1             New NT build

Log for crt\crtw32\iostream\dll:

10-17-94@18:17  BryanT3  addfile                    New NT build
10-17-94@18:17  BryanT3  addfile makefile v1        New NT build
10-17-94@18:17  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\iostream\mt:

10-17-94@18:17  BryanT3  addfile                    New NT build
10-17-94@18:17  BryanT3  addfile makefile v1        New NT build
10-17-94@18:17  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\iostream\st:

10-17-94@18:17  BryanT3  addfile                    New NT build
10-17-94@18:17  BryanT3  addfile makefile v1        New NT build
10-17-94@18:17  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\linkopts:

10-17-94@18:21  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@18:22  BryanT3  in      sources v2         New NT build

Log for crt\crtw32\lowio:

10-17-94@18:25  BryanT3  delfile makefile v2        Not needed
10-17-94@18:25  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:25  BryanT3  addfile dirs v1            New NT build
10-17-94@18:25  BryanT3  in      sources.nt v2      New NT build
10-17-94@18:26  BryanT3  addfile st v1              New NT build
10-17-94@18:26  BryanT3  addfile mt v1              New NT build
10-17-94@18:26  BryanT3  addfile dll v1             New NT build
10-17-94@18:27  BryanT3  addfile dlllib v1          New NT build

Log for crt\crtw32\lowio\dll:

10-17-94@18:26  BryanT3  addfile                    New NT build
10-17-94@18:26  BryanT3  addfile makefile v1        New NT build
10-17-94@18:26  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\lowio\dlllib:

10-17-94@18:27  BryanT3  addfile                    New NT build
10-17-94@18:27  BryanT3  addfile makefile v1        New NT build
10-17-94@18:27  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\lowio\mt:

10-17-94@18:26  BryanT3  addfile                    New NT build
10-17-94@18:26  BryanT3  addfile makefile v1        New NT build
10-17-94@18:26  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\lowio\st:

10-17-94@18:26  BryanT3  addfile                    New NT build
10-17-94@18:26  BryanT3  addfile makefile v1        New NT build
10-17-94@18:26  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring:

10-17-94@18:27  BryanT3  delfile makefile v2        Not needed
10-17-94@18:28  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:29  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:29  BryanT3  addfile dirs v1            New NT build
10-17-94@18:33  BryanT3  addfile st v1              New NT build
10-17-94@18:33  BryanT3  addfile mt v1              New NT build
10-17-94@18:33  BryanT3  addfile dll v1             New NT build
10-17-94@18:33  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\mbstring\dll:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring\mt:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring\psx:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring\st:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc:

10-17-94@18:49  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:49  BryanT3  addfile dirs v1            New NT build
10-17-94@19:07  BryanT3  addfile st v1              New NT build
10-17-94@19:07  BryanT3  addfile mt v1              New NT build
10-17-94@19:07  BryanT3  addfile dll v1             New NT build
10-17-94@19:07  BryanT3  addfile nt v1              New NT build
10-17-94@19:07  BryanT3  addfile dlllib v1          New NT build
10-17-94@19:07  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\misc\dll:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\dlllib:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\mt:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\nt:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\psx:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\st:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\small:

10-17-94@19:10  BryanT3  in      makefile.inc v2    Fix path

Log for crt\crtw32\startup:

10-17-94@19:12  BryanT3  delfile makefile v2        Not needed
10-17-94@19:12  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:12  BryanT3  addfile dirs v1            New NT build
10-17-94@19:12  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:14  BryanT3  addfile st v1              New NT build
10-17-94@19:15  BryanT3  addfile mt v1              New NT build
10-17-94@19:15  BryanT3  addfile dll v1             New NT build
10-17-94@19:15  BryanT3  addfile nt v1              New NT build
10-17-94@19:15  BryanT3  addfile dlllib v1          New NT build
10-17-94@19:15  BryanT3  addfile psx v1             New NT build
10-17-94@19:18  BryanT3  in      makefile.inc v2    New NT build
10-17-94@19:19  BryanT3  in      crt0dat.c v3       PPC changes

Log for crt\crtw32\startup\dll:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\dlllib:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\mt:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\nt:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\psx:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:16  BryanT3  addfile makefile v1        New NT build
10-17-94@19:16  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:16  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\st:

10-17-94@19:14  BryanT3  addfile                    New NT build
10-17-94@19:14  BryanT3  addfile makefile v1        New NT build
10-17-94@19:14  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:14  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\stdio:

10-17-94@17:26  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@17:26  BryanT3  addfile sources.nt v1      NT build
10-17-94@17:27  BryanT3  addfile dirs v1            New build
10-17-94@17:27  BryanT3  delfile makefile v2        Not needed
10-17-94@17:28  BryanT3  addfile st v1              New build
10-17-94@17:28  BryanT3  addfile mt v1              New build
10-17-94@17:28  BryanT3  addfile nt v1              New build
10-17-94@17:28  BryanT3  addfile dll v1             New build
10-17-94@17:28  BryanT3  addfile dlllib v1          New build
10-17-94@17:28  BryanT3  addfile psx v1             New build

Log for crt\crtw32\stdio\dll:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\stdio\dlllib:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build
10-17-94@17:35  BryanT3  in      sources v2         Add defines

Log for crt\crtw32\stdio\mt:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\stdio\nt:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\stdio\psx:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build
10-17-94@17:33  BryanT3  in      sources v2         Cleanup

Log for crt\crtw32\stdio\st:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\string:

10-17-94@19:20  BryanT3  delfile makefile v2        Not needed
10-17-94@19:20  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:21  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:21  BryanT3  addfile dirs v1            New NT build
10-17-94@19:22  BryanT3  addfile st v1              New NT build
10-17-94@19:22  BryanT3  addfile mt v1              New NT build
10-17-94@19:22  BryanT3  addfile dll v1             New NT build
10-17-94@19:22  BryanT3  addfile nt v1              New NT build
10-17-94@19:22  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\string\dll:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\mt:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\nt:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\psx:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\st:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time:

10-17-94@19:26  BryanT3  delfile makefile v2        Not needed
10-17-94@19:26  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:28  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:28  BryanT3  addfile dirs v1            New NT build
10-17-94@19:28  BryanT3  addfile st v1              New NT build
10-17-94@19:28  BryanT3  addfile mt v1              New NT build
10-17-94@19:28  BryanT3  addfile dll v1             New NT build
10-17-94@19:28  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\time\dll:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time\mt:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time\psx:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time\st:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap:

10-17-94@19:30  BryanT3  delfile makefile v2        Not needed
10-17-94@19:30  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@19:30  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:30  BryanT3  addfile dirs v1            New NT build
10-17-94@19:31  BryanT3  addfile st v1              New NT build
10-17-94@19:31  BryanT3  addfile mt v1              New NT build
10-17-94@19:31  BryanT3  addfile dll v1             New NT build
10-17-94@19:31  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\winheap\dll:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap\mt:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap\psx:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap\st:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32:

10-17-94@19:35  BryanT3  in      fp32.nt v4         Don't use _NTSDK
10-17-94@19:36  BryanT3  rename  makefile v2        makefile.vc;Not needed

Log for crt\fpw32\conv:

10-17-94@19:38  BryanT3  delfile makefile v2        Not needed
10-17-94@19:38  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:39  BryanT3  addfile st v1              New NT build
10-17-94@19:39  BryanT3  addfile mt v1              New NT build
10-17-94@19:40  BryanT3  addfile dll v1             New NT build
10-17-94@19:40  BryanT3  addfile dirs v1            New NT build
10-17-94@19:40  BryanT3  addfile sources.nt v1      New NT build

Log for crt\fpw32\conv\dll:

10-17-94@19:40  BryanT3  addfile                    New NT build
10-17-94@19:40  BryanT3  addfile makefile v1        New NT build
10-17-94@19:40  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\conv\mt:

10-17-94@19:39  BryanT3  addfile                    New NT build
10-17-94@19:39  BryanT3  addfile makefile v1        New NT build
10-17-94@19:39  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\conv\st:

10-17-94@19:39  BryanT3  addfile                    New NT build
10-17-94@19:39  BryanT3  addfile makefile v1        New NT build
10-17-94@19:39  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran:

10-17-94@19:42  BryanT3  in      sincosh.c v2       Alpha/PPC fix
10-17-94@19:42  BryanT3  addfile dirs v1            New NT build
10-17-94@19:42  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:42  BryanT3  delfile makefile v2        Not needed
10-17-94@19:43  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@19:43  BryanT3  addfile st v1              New NT build
10-17-94@19:43  BryanT3  addfile mt v1              New NT build
10-17-94@19:43  BryanT3  addfile dll v1             New NT build
10-17-94@19:43  BryanT3  addfile nt v1              New NT build

Log for crt\fpw32\tran\dll:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran\mt:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran\nt:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran\st:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\libw32:

10-17-94@19:46  BryanT3  addfile dirs v1            New NT build
10-17-94@19:46  BryanT3  rename  makefile v7        makefile.vc;Not needed
10-17-94@19:47  BryanT3  rename  makefile.vc v8     makefile;oops
10-17-94@19:48  BryanT3  in      makefile v9        New NT build

Log for crt\libw32\lib:

10-17-94@19:49  BryanT3  addfile dirs v1            New NT build
10-17-94@19:49  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:50  BryanT3  addfile st v1              New NT build
10-17-94@19:51  BryanT3  addfile mt v1              New NT build
10-17-94@19:51  BryanT3  addfile dll v1             New NT build
10-17-94@19:51  BryanT3  addfile nt v1              New NT build
10-17-94@19:51  BryanT3  addfile dlllib v1          New NT build
10-17-94@19:51  BryanT3  addfile posix v1           New NT build

Log for crt\libw32\lib\dll:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build
10-17-94@19:52  BryanT3  addfile ntcrt35.src v1     New NT build

Log for crt\libw32\lib\dlllib:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\mt:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\nt:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\posix:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\st:

10-17-94@19:50  BryanT3  addfile                    New NT build
10-17-94@19:50  BryanT3  addfile makefile v1        New NT build
10-17-94@19:50  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:50  BryanT3  addfile sources v1         New NT build

---------------------------------------------------------------

Mon 17-Oct-94    (BryanT)

crtw32\stdio\_filbuf.c
crtw32\stdio\_flsbuf.c
crtw32\h\tchar.h
        POSIX fixes (move wchar.h include to non-posix section), define
        _txxx macros for POSIX correctly

-----------------------------------------------------------------

Fri 14-Oct-94    (JamesMa)

eh/frame.cxx - AdjustPointer() now adds vdisp to result (Olympus bug 1620).

---------------------------------------------------------------

Fri 14-Oct-94    (BryanT)

crtw32\startup\crt0.c - try/except -> __try/__except for POSIX

---------------------------------------------------------------

Thu 13-Oct-94    (BryanT)

crtw32\tools\win32\relinc.if - Add _M_PPC to strip list.

---------------------------------------------------------------

Thu 13-Oct-94    (BryanT)

crtw32\time\tzset.c - SteveWo fix.  Check for NULL before calling free.

---------------------------------------------------------------

Mon 10-Oct-94    (BryanT)

crtw32\eh\mips\ehcrt.mak - change link32 reference to link

---------------------------------------------------------------

Mon 10-Oct-94    (ChrisWei)

crtw32\eh\ehvecctr.cxx, ehveccvb.cxx, ehvecdtr.cxx
        Fix handling of EH/SEH interaction. As per ANSI, one EH during
        vector ctor or dtor, then another causes terminate(). Now two SEH
        will abort vector 'unwind', but stack unwind continues.

---------------------------------------------------------------

Mon 10-Oct-94    (BryanT)

crtw32\h\cruntime.h, heap.h, trnsctrl.h, varargs.h -
        Merge in changes from John Morgan to warn about unknown machine
        type (for future new platforms).

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

fpw32\conf\tenpow.c
fpw32\include\cv.h
fpw32\include\trans.h
fpw32\tran\pow.c
        PPC merge.  Note: someone who knows the Fp code should look
        at the change to pow.c and determine if the PPC folks fixed
        a legitimate bug or not.

---------------------------------------------------------------

Fri 07-Oct-94    (SteveSa)

makefile, makefile.sub -
        Change the way that the target libraries depend on the output
        subdirectories.  Otherwise the libs were re-built every time,
        even when no objects or component libs had changed.

        Also condensed $(CRT_RELDIR)\$(TARGET_CPU) to just $(RELDIR_CPU)
        and added $(RELDIR_CPU_LEGO) and $(RELDIR_CPU_DBG) for the debug
        and lego subdirectories of $(CRT_RELDIR)\$(TARGET_CPU)\.
        This greatly improves the legibility of the makefile.

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

crtw32\misc\ppc
crtw32\startup\ppc
crtw32\string\ppc
fpw32\tran\ppc
        Add latest code from PPC codebase.

fpw32\fp32.nt
crtw32\crt32.nt
        Cleanup for new NT build.

crtw32\h\winheap.h - Add _nh_malloc prototype.
crtw32\h\malloc.h - Define _heapinfo struct for NTSDK build
crtw32\h\cruntime.h excpt.h float.h fltintrn.h setjmp.h stdarg.h varargs.h
        Add PPC support.

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

crtw32\eh\mips\tmphack.s - Remove optimization override so command line
        defaults are honored (and not warned about).

crtw32\misc\alpha\fastdiv.s - Fix typo found by RichardS using the new
        Alpha assembler.

crtw32\small\mips\huge.s - Fix path to fp\tran\mips\huge.s (VC Makefile
        needs to be modified to give the root of crt project as an
        include path for this to work with both builds)

crtw32\stdio\output.c - Add _M_PPC test.

crtw32\stdio\makefile.inc - localize directory differences

crtw32\string\memset.c, memmove.c, memcpy.c, strset.c
        Add PPC support.  Also, make add a function pragma for memmove
        so the Alpha version can be built with /Oi

crtw32\string\makefile.inc - localize directory differences

crtw32\winheap\heapchk.c, heapmin.c, heapwalk.c
        Change os2dll.h include to mtdll.h

crtw32\winheap\malloc.c - Fix call to _nh_malloc

crtw32\winheap\_newmode.c - Add definition for _newmode.

fpw32\tran\fpexcept.c - Must include nt.h for _NTSUBSET_ builds.
        Add PPC support.

fpw32\tran\tanh.c - Define tanh as a function so Alpha version can be
        built with /Oi.

fpw32\tran\alpha\hypots.s - Fix type found with new Alpha assembler.

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

crtw32\mbstring\*.c - Fix POSIX build by including mtdll.h if _POSIX_ defined.
        W/o this, _MB_CP_LOCK is undefined

---------------------------------------------------------------

Thu 06-Oct-94    (SteveSa)

crtw32/startup/i386/atlssup.asm - Add standard file header comment

-----------------------------------------------------------------

Wed 05-Oct-94   (SteveSa)

makefile, makefile.sub,
crtw32\{eh,helper\lsources,linkopts,mbstring,misc,small,string}\lsources,
fpw32\{conv,tran}\lsources
        Add MIPS (and partial Alpha) support to the NMake build.

---------------------------------------------------------------

Tue 04-Oct-94   (SteveSa)

crtw32\misc\i386\*.asm
        Add IFSTRIP directive comments to remove support for MASM 5.Xi
        (in the form of if directives that evaluate "@Version LT 600")

---------------------------------------------------------------

Tue 04-Oct-94   (ChrisWei)

crtw32\time\timeset.c
crtw32\dllstuff\crtlib.c
        Remove last remnants of _KANJI.

---------------------------------------------------------------

Thu 29-Sep-94   (SteveSa)

makefile -
        Added pseudo-target "depend" which generates dependencies in all of
        the crtw32/*/ and fpw32/*/ subdirectories.  A file named "depend.def"
        is created in all of those subdirectories.  An up-to-date version of
        MKDEP.EXE must be in the path, and the nmake command line must set
        the value ENV_INC to be an -I directive that points to the Win32
        include files.  For example, if MSVC++ 2.0 is installed on E:\MSVC20,
        dependencies would be built by:

                nmake depend ENV_INC=-Ie:/msvc20/include

        Various warning messages will be created because there are not
        *.c, *.cxx, and *.asm files in all subdirectories and their i386
        subdirectories.

---------------------------------------------------------------

Thu 29-Sep-94   (GregF)

crtw32\eh\throw.cxx
        Made (__)pMyUnhandledExceptionFilter global. As a static, it was a
        ripe candidate for deletion by the optimizer (and the Alpha compiler
        did, in fact, delete it).

---------------------------------------------------------------

Tue 27-Sep-94   (ChrisWei)

crtw32\misc\nlsdata1.c, crtw32\h\nlsint.h
        Declare __decimal_point as a char [], not a char *, so that even with
        compiler string pooling (-Gf), the decimal point string (".") will not
        be overwrittten by some other code with a literal string ".".

---------------------------------------------------------------

Tue 27-Sep-94   (SteveSa)

makefile, makefile.sub, mk.bat
crtw32/*/lsources
fpw32/{conv,tran}/lsources
        * Common Assembler flags (-c -nologo -Cx -Zm etc.) are passed in the
          ML environment variable to give short command lines.
        * Removed numerous bogus NT-related assembler defines
        * Fixed so that -D_MT is NOT passed to single thread asm files
        * Added -DQUIET -D?QUIET to ML switches to suppress messages from
          <cruntime.inc> and <cmacros.inc> (respectively).
        * LSOURCES in the CRTW32/* subdirectories no longer set C_INCLUDES
          or A_INCLUDES, but rather rely on the default values set in
          MAKEFILE.SUB.  LSOURCES in the two FPW32/* subdirectories set
          C_INCLUDES and A_INCLUDES to override the default settings.
        * Change -Fo directive for ML to match that for CL (that is, minimal).
        * Add -nologo to all occurrences of LINK
        * Change last few occurrences of LIB to LINK -LIB
        * Invoke nmake with "-i" option unless overridden using IFLAG=

---------------------------------------------------------------

Sat 24-Sep-94   (SteveSa)

makefile, makefile.sub
crtw32/*/lsources
fpw32/{conv,tran}/lsources
        * The common C compiler flags (-c -nologo -Zel -Zp8 -W3 -Gd -G4 -Gs
          -DWIN32 -D_WIN32_ -D_MBCS -D_MB_MAP_DIRECT) which are ALWAYS set
          for all models and targes are now passed in the "CL" environment
          variable.  This shortens the command line length in makefile.sub.
        * Pass -I../h for all crtw32 subdirectories and -I../../crtwin32/h
          -I../include for fpw32 subdirectories.  Before both crtwin32/h
          and fpwin32/include (and fpwin32/inc/i386) were passed to all.
        * Changed /c /Fo... to -c -Fo... etc.
        * Pass -i from the top level NMake to the 2nd level NMAKE for
          more complete builds in the presence of some errors.
        * Change the pseudo-target for release libs & objects from "all" to
          "release".  Pseudo-target "all" now means "release" and "debug".
        * Change from -G4 (optimize for 486) to -GB (blended for 486/Pentium)
        * Remove some redundant leading ".\" strings from build rules.
        * Collapse -Zel -Zp8 to -Zelp8 and -Gd -GB -Gs to -GdBs

---------------------------------------------------------------

Thu 21-Sep-94   (GregF)

crtw32\winheap\heapchk.c, heapmin.c, heapwalk.c (new)
       winheap\calloc.c, handler.cxx, lsources, malloc.c, new.cxx, realloc.c,
               sources
        Picked up the latest from \\orville\razzle\src\crt32\winheap.c and
        merged in changes SteveSa made to the new handler support. Note, this
        subdirectory is NOT currently built for our retail libs.

---------------------------------------------------------------

Thu 21-Sep-94   (SteveSa)

crtw32/dllstuff/crtlib.c
        Fixed (_)DLL_FOR_WIN32S ifdef of local variable to be ifdef _M_IX86
        since it is only used under WIN32S (which is X86-only) and _M_IX86.
        Also changed GetModuleHandle to GetModuleHandleA (2 places).

---------------------------------------------------------------

Thu 21-Sep-94   (GregF)

crtw32\dllstuff\crtlib.c
       heap\heapinit.c
       misc\aw_cmp.c, aw_com.c, aw_env.c, aw_loc.c, aw_map.c, aw_str.c
       startup\dllcrt0.c

        Replaced GetModuleHandle("kernel32.dll") with
        GetModuleHandleA("kernel32.dll").

---------------------------------------------------------------

Wed 21-Sep-94   (SteveSa)

crtw32/eh/frame.cxx ehvecctr.cxx ehveccvb.cxx ehvecdtr.cxx hooks.cxx
crtw32/eh/throw.cxx unhandld.cxx user.cxx validate.cxx -
        Add standard file header comments, add ifstrip direct comments
        on lines with #if directives that compare symbols to constants.

crtw32/dllstuff/crtdll.c crtexe.c dll_argv.c dllargv.c wildcard.c cinitexe.c
        Move #ifdefs to after the main file header comment (for src release)

crtw32/dllstuff/crtlib.c crtw32/h/heap.h,win32s.h crtw32/heap/handler.cxx
        Changed misspelling _DLL_FOR_WIN32S to correct DLL_FOR_WIN32S

-----------------------------------------------------------------

Tue 20-Sep-94   (SteveSa)

makefile, makefile.sub - added support for DEBUG targets (xst, xmt, etc.)

-----------------------------------------------------------------

Thu 15-Sep-94   (SteveSa)

crtw32\dllstuff\crtlib.c, crtw32\startup\dllcrt0.c -
        Move #ifdef directive(s) to after file header comment
        Clean up commments that confuse the striphdr utility.

-----------------------------------------------------------------

Wed 14-Sep-94   (SteveSa)

crtw32\mbstring\mbscspn.c, mbsspn.c -
        Changed #include directives inside comments to *ifdef and so on.
        Otherwise the ifstripper for the source release runs into trouble.

crtw32\mbstring\ismbbyte.c -
        remove redundant parentheses in #ifdef; add ifstrip directive comment

-----------------------------------------------------------------

Mon 12-Sep-94   (GregF)

crtw32\buildcrt.cmd, makefile
       eh\frame.cxx, throw.cxx, sources
       eh\alpha\bridge.h, bridge.s, ehunwind.c, ehunwind.h, trnsctrl.cxx,
                xcptmisc.h, xcptmisc.s
       h\ehdata.h, ehstate.h, trnsctrl.h

fpw32\sources

libw32\makefile

        Merged in changes from DEC (via John Hatch) for the Alpha.

---------------------------------------------------------------

Thu 08-Sep-94   (GregF)

libw32\makefile

crtw32\dllstuff\crtexe.c, crtlib.c
       h\internal.h, stdlib.h, win32s.h
       misc\assert.c, errmode.c, lsources, sources
       startup\crt0.c, crt0msg.c, dllcrt0.c

        Package of changes to way the error message output works. Affects the
        behavior of _assert() and _amsg_exit(). Behavior is now determined
        by two internal global variables, __error_mode and __app_type. The
        former (__error_mode) is modifiable by the user via the new function
        _set_error_mode().

        New behavior: For console exes, error output is written to the C
        stream stderr for assertions, and to the standard error handle for
        RTEs. For GUI exes, error output is displayed using the MessageBox
        API. For user dlls, we try to determine if the host OS is either
        Win32s (hence everthing is GUI) or Phar Lap TNT (hence everything is
        console) and direct error output approriately. The default, in the
        absence of any knowledge about the client app, is to use MessageBox.

---------------------------------------------------------------

Tue 06-Sep-94   (ChrisWei)

Massive #define cleanup - removed all references to:

_INTL - all builds are now _INTL
_CRUISER - who? what? :-)
MTHREAD - replaced by _MT
_MBCS_OS - _MBCS implies _MBCS_OS, no more hard-wired MB
_CRTHEAP - not being used at all
I386 (except in asm files), M_I386, _X86_ - all use _M_IX86

Here's the changed files:

Status for \\D:G2000N2\NT\PRIVATE\CRT, owner = CHRISWEI4:
Subdirectory \, version 1.00, robust:

file      local-ver  ver  status   base

log.txt          23   23  out
makefile.sub      2    2  out

Subdirectory \crtw32, version 1.00, robust:

file      local-ver  ver  status   base

buildcrt.cmd      1    1  out
buildcrt.nt       1    1  out
crt32.def         1    1  out
crt32.nt          1    1  out

Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

atof.c            1    1  out
fcvt.c            4    4  out
gcvt.c            1    1  out
strtod.c          1    1  out
wcstod.c          1    1  out

Subdirectory \crtw32\dllstuff, version 1.00, robust:

file      local-ver  ver  status   base

crtlib.c          2    2  out

Subdirectory \crtw32\dllstuff\i386, version 1.00, robust:

file      local-ver  ver  status   base

cinitexe.mak      1    1  out

Subdirectory \crtw32\eh\mips, version 1.00, robust:

file      local-ver  ver  status   base

ehcrt.mak         1    1  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

cruntime.inc      1    1  out
heap.h            4    4  out
internal.h        2    2  out

Subdirectory \crtw32\heap, version 1.00, robust:

file      local-ver  ver  status   base

heapdump.c        1    1  out
msize.c           1    1  out

Subdirectory \crtw32\iostream, version 1.00, robust:

file      local-ver  ver  status   base

ios.cxx           1    1  out
mtlock.c          2    2  out
streamb.cxx       1    1  out

Subdirectory \crtw32\lowio, version 1.00, robust:

file      local-ver  ver  status   base

chsize.c          2    2  out
close.c           1    1  out
dup2.c            2    2  out
getch.c           1    1  out
lseek.c           3    3  out
osfinfo.c         1    1  out
putch.c           2    2  out
read.c            3    3  out
setmode.c         1    1  out
write.c           2    2  out

Subdirectory \crtw32\mbstring\i386, version 1.00, robust:

file      local-ver  ver  status   base

mbcsinit.os2      1    1  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

_strerr.c         2    2  out
mtest.c           1    1  out
putenv.c          1    1  out
rand.c            2    2  out
strerror.c        2    2  out
winsig.c          1    1  out
winxfltr.c        1    1  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

crt0.c            3    3  out
dllcrt0.c         1    1  out

Subdirectory \crtw32\startup\i386, version 1.00, robust:

file      local-ver  ver  status   base

chkstk.asm        1    1  out
crt0init.mak      1    1  out

Subdirectory \crtw32\stdio, version 1.00, robust:

file      local-ver  ver  status   base

_freebuf.c        2    2  out
clearerr.c        1    1  out
fclose.c          2    2  out
fdopen.c          1    1  out
fgetc.c           1    1  out
fgets.c           1    1  out
fgetwc.c          3    3  out
fprintf.c         1    1  out
fputc.c           1    1  out
fputs.c           1    1  out
fputws.c          1    1  out
fscanf.c          1    1  out
ftell.c           1    1  out
fwprintf.c        1    1  out
fwscanf.c         1    1  out
gets.c            1    1  out
getw.c            1    1  out
printf.c          1    1  out
puts.c            1    1  out
putw.c            1    1  out
scanf.c           1    1  out
stream.c          1    1  out
ungetc.c          1    1  out
vfprintf.c        1    1  out
vfwprint.c        1    1  out
vprintf.c         1    1  out
vwprintf.c        1    1  out
wprintf.c         1    1  out
wscanf.c          1    1  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

wcstok.c          1    1  out

Subdirectory \crtw32\time, version 1.00, robust:

file      local-ver  ver  status   base

asctime.c         1    1  out
gmtime.c          1    1  out

Subdirectory \crtw32\tools\win32, version 1.00, robust:

file      local-ver  ver  status   base

relinc.if         1    1  out
relinc.sed        2    2  out

Subdirectory \crtw32\winheap, version 1.00, robust:

file      local-ver  ver  status   base

handler.cxx       1    1  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

def.mak           1    1  out
fp32.def          1    1  out
fp32.nt           1    1  out

Subdirectory \fpw32\conv, version 1.00, robust:

file      local-ver  ver  status   base

cfin.c            1    1  out
cfout.c           1    1  out
cvt.c             1    1  out
strgtold.c        1    1  out

Subdirectory \fpw32\inc\i386, version 1.00, robust:

file      local-ver  ver  status   base

cruntime.inc      1    1  out
elem87.inc        1    1  out
os2dll.inc        1    1  out
os2supp.inc       1    1  out

Subdirectory \fpw32\tran\i386, version 1.00, robust:

file      local-ver  ver  status   base

87cdisp.asm       1    1  out
87disp.asm        1    1  out
87tran.asm        1    1  out

Subdirectory \libw32, version 1.00, robust:

file      local-ver  ver  status   base

buildall.cmd      1    1  out
makefile.nt       1    1  out

Subdirectory \libw32\tools\source, version 1.00, robust:

file      local-ver  ver  status   base

i386mips.c        1    1  out

---------------------------------------------------------------

Tue 06-Sep-94   (ChrisWei)

crtw32\convert\mbstowcs.c, wcstombs.c - bug fix #15300 and optimize.
crtw32\stdio\fgetwc.c, fputwc.c, ungetwc.c - Fix for "C" locale, call
        mbtowc() or wctomb().
crtw32\h\tchar.h - add __targv.
crtw32\mbstring\mbsupr.c, mbslwr.c - fix for double-width latin chars
crtw32\mbstring\ismbalnm.c - fix for double-width digits

---------------------------------------------------------------

Mon 05-Sep-94   (SteveSa)

fpw32\tran\fpexcept.c, fpw32\tran\i386\frnd.c -
        Change #ifdef i386 to #ifdef _M_IX86

crtw32\stdio\input.c -
        Remove #include of obsolete 16-bit header file "sizeptr.h"

crtw32\misc\getpath.c,
crtw32\stdio\_freebuf.c, output.c,
crtw32\stdio\sprintf.c, swprintf.c, vsprintf.c, vswprint.c -
        Changed #include directives inside comments to *ifdef and so on.
        Otherwise the ifstripper for the source release runs into trouble.

-----------------------------------------------------------------

Mon 05-Sep-94   (SteveSa)

crtw32\tools\win32\relinc.sed - remove comments of the form /*IFSTRIP=IGN*/

libw32\include\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h,
   excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h,
   mbctype.h, mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h,
   signal.h, stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h,
   sys\stat.h, sys\timeb.h, sys\utime.h - updated to reflect changes of
        Fri 2 Sep 94, which just removed some redundant parentheses.

-----------------------------------------------------------------

Fri 02-Sep-94   (SteveSa)

All the following changes are in crtw32\:

heap\heapchk.c - clean-up for cleansing (remove obnoxious comment)
startup\crt0.c, wcrt0.c - edit (improve) file header comment
startup\crt0dat.c - clean up comments (remove references to OS/2, etc.)
startup\tidtable.c - remove obsolete var. "end", clean-up for source cleansin
string\strspn.c - fix comment (no final */); clean-up for cleansing
string\wcsxfrm.c - fix misplaced * in file header comment

convert\isctype.c, iswctype.c,
h\assert.h, conio.h ctype.h, direct.h, dos.h, eh.h, errno.h, excpt.h,
  float.h, fltintrn.h, fpieee.h, heap.h, internal.h, io.h, limits.h, locale.h,
  malloc.h, math.h, mbctype.h, mbstring.h, memory.h, mtdll.h, new.h, process.h,
  search.h, setjmp.h, signal.h, stddef.h, stdio.h, stdlib.h, string.h, time.h,
  wchar.h, sys\stat.h, sys\timeb.h, sys\utime.h,
lowio\lseek.c,
misc\inithelp.c, rotl.c, rotr.c, setlocal.c,
stdio\input.c, output.c
        - add comments for source cleansing

dllstuff\crtexew.c, wcrtexew.c,
h\ehhooks.h, ehassert.h,
startup\wincrt0.c, wwincrt0.c,
string\strcspn.c, strpbrk.c
        - add standard file header comment

h\ehdata.h, ehstate.h, trnsctrl.h,
        - add standard file header comment, add comments for source cleansing

misc\charmax.c,
startup\crt0init.c, mlock.c, thread.c, threadex.c
        - clean-up for cleansing (moved #ifdef)

-----------------------------------------------------------------

Thu 01-Sep-94   (SteveSa)

crtw32\startup\tlssup.c
fpw32\tran\fpexcept.c
fpw32\tran\i386\filter.c
fpw32\tran\i386\ieee87.c
        Changed #include of "<nt.h>" to "<windows.h>".
        Also moved #ifdef in tlssup.c to after main file comment.
        This latter cosmetic change was necessary for ifstrip-ing.

-----------------------------------------------------------------

Wed 24-Aug-94   (SteveSa)

crtw32\heap\heapinit.c
        Changed the heap initialization code to treat Win32s the same as
        Win32.  In VCNT 1.1 and VC 2.0, Win32s was considered a low memory
        situation because early versions of Win32s did not support reserved
        but uncommitted memory.  Win32s now supports uncommitted memory.
        The test has been changed to recognize PharLap TNT under Windows 3.X
        and continues to use small heap regions in that environment.

-----------------------------------------------------------------

Mon 22-Aug-94   (GregF)

crtw32\misc\onexit.c
        Fixed the test for the size of the onexit table so that it doesn't
        implicitly assume a heap granularity >= sizeof( function pointer
        type). This assumption prevented some user or 3rd party supplied heap
        managers from working with our runtime library. More specifically,
        it broke MicroQuill's SmartHeap.

-----------------------------------------------------------------

Fri 19-Aug-94   (GregF)

crtw32\stdio\_file.c, fflush.c
        Moved stdio term. code from fflush.c to _file.c. Also, added a stdio
        initializer (to _file.c). Currently, it's only job is to reset the
        _file field of _iob[0], _iob[1] and _iob[2] to -1, when the values
        in _osfhnd[0], _osfhnd[1] and _osfhnd[2] are invalid (0 or -1). This
        was Orca #132.

-----------------------------------------------------------------

Thu 18-Aug-94   (GregF)

crtw32\dos\getcwd.c
        Per Richard Shupak's suggestion, check GetDriveType return against
        specific failure codes (if not equal, assume success).

-----------------------------------------------------------------

Tue 16-Aug-94   (GregF)

crtw32\dos\getcwd.c
        Changed _validdrive() to use GetDriveType API. This was Orca bug
        137, a suggestion from the infamous Richard Shupak.

-----------------------------------------------------------------

Tue 16-Aug-94   (GregF)

crtw32\lowio\read.c
        Changed so that the caller's buffer is not touched when the ReadFile
        read 0 bytes. Previously, in text mode, the first byte of the
        caller's was always checked to determine if it was a LF. This was
        Orca bug #134.

-----------------------------------------------------------------

Tue 16-Aug-94   (GregF)

crtw32\h\fstream.h, iomanip.h, ios.h, iostream.h, istream.h, ostream.h,
        stdiostr.h, streamb.h, strstrea.h, tchar.h
libw32\include\fstream.h, iomanip.h, ios.h, iostream.h, istream.h, ostream.h,
        stdiostr.h, streamb.h, strstrea.h, tchar.h

        Changed pragma to disable warning 4514 instead of 4505. This was
        Orca bug #95.

-----------------------------------------------------------------

Wed 09-Aug-94   (GregF)

crtw32\tools\win32\relinc.cmd
        Fixed to work with new project.

libw32\include\math.h
        Removed _CRTIMP from _matherr prototype (part of change below).

-----------------------------------------------------------------

Tue 09-Aug-94   (GregF)

crtw32\makefile
crtw32\dllstuff\crtexe.c, lsources, merr.c (new), sources
crtw32\h\matherr.h, win32s.h
fpw32\tran\matherr.c
libw32\makefile
libw32\lib\alpha\msvcrt20.def
libw32\lib\i386\msvcrt20.def
libw32\lib\i386\win32s\msvcrt20.def
libw32\lib\mips\msvcrt20.def
    Package of changes to support user-supplied _matherr routines for clients
    of msvcrt*.dll. Only client exe-s are support, not other dlls.

-----------------------------------------------------------------

Fri 05-Aug-94   (JamesMa)

crtw32\convert\_fptostr.c
        Backed off ChrisWei's earlier fix for _ecvt() problem (see Dolphin 15092).
crtw32\convert\fcvt.c
        Surgical fix (aka 'Band-Aid') for _ecvt problem (Dolphin bug 10783).

-----------------------------------------------------------------

Thu 04-Aug-94   (GregF)

crtw32\h\heap.h
        Need eight byte granularity for the DEC Alpha too.

-----------------------------------------------------------------

Mon 01-Aug-94   (ChrisWei)

V2 postponed bug fixes:

crtw32\stdio\popen.c - bug #14666
crtw32\mbstring\mbclevel - bug #14685
crtw32\mbstring\mbsncoll.c, mbsnicol.c - bug #13384
crtw32\mbstring\mbsupr.c, mbslwr.c - bug #14199
crtw32\startup\crt0.c - bug #14941
crtw32\misc\wsetloca.c - bug fix #14663
crtw32\misc\initnum.c, initmon.c - bug fix #14810
crtw32\misc\aw_map.c, aw_cmp.c, aw_com.c - optimize for NT 3.5

-----------------------------------------------------------------

Mon 01-Aug-94   (GregF)

libw32\makefile
        Two sets of changes. First, I revised the definition of the
        COMPONENTS_SUPPOBJS_COMMON list so that some EH and TLS objects now
        get built for the DEC Alpha too. Only the Alpha build is affected
        by this change.

        Second, I moved crtlib.obj from the COMPONENTS_SUPPOBJS list to the
        components COMPONENTS_CRTDLL list so it didn't get build into the
        imports lib, but the access functions still go exported. I did
        the corresponding thing for the Win32s lists. Only the x86 build is
        affected.

-----------------------------------------------------------------

Mon 01-Aug-94   (GregF)

crtw32\h\heap.h
        Made def of _PAGESIZE_ conditional on _M_ALPHA - pages are twice as
        big on the DEC Alpha.

-----------------------------------------------------------------

Wed 27-Jul-94   (GregF)

log.txt
        Added this file to hold change notes for all of crt project.

crt32w\log.txt renamed to crt32w\oldv2log.txt
fp32w\log.txt renamed to fp32w\oldv2log.txt
        Renamed the changes logs used for Dolphin (v2).

-----------------------------------------------------------------

Wed 27-Jul-94   (GregF)

crtw32\helper\i386\*.asm
        Speedups for the __int64 arithmetic helpers. This work was originally
        done for, and at the request of, the Daytona folks (MarkL).

-----------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\doc\crt40.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6C:\WINWORD\TEMPLATE\NORMAL.DOT M Visual C++ Opt++ 2.0 Project Overview chriswei Microsoft Word 6.0M Visual C++ 4.0 C Runtime Library Project Overview Introduction Changes to the CRT for version 4.0 consist primarily of making the runtimes smaller, faster, and easier to use and providing a debug version to help users quickly develop bug-free programs. The development of a debug version of the library will be extremely helpful to users. We can help catch some of the most common user programming mistakes: writing past the end of an allocated block (usually by only a few bytes); failing to free allocated memory (memory leak); and passing invalid parameters to C runtime functions. Integration with the MFC debug heap will assist MFC users Details Performance Heap Speed - The current runtime heap is extremely fast for  normal  allocation patterns. However, unusual or pathological patterns can result in performance degradation and fragmentation. We plan to implement a  souped up  version of the current heap that handles small objects separately - we believe that this will help with unusual allocation patterns (paying particular attention to ones that can be generated by C++ and MFC). Testing will be required to determine the fragmentation behavior of this scheme. We also plan to implement a   version of some TBD but widely known and respected heap algorithm. We will then compare 1) current heap; 2)  souped up  heap; 3)   heap; and 4) NT heap. The NT heap is being compared as a baseline - the newly added heap walking APIs are not available on all platforms and use of the system heap would preclude doing a debug heap. If a clear winner emerges early, this might be a Manatee release 2 candidate. Reduce Code Size - Much attention has always been paid to keeping CRT at minimum size and granularity, but we plan to take a fresh look at ways to help users produce the smallest EXE. We will examine the minimum required startup code and see if that can be reduced. We can document more fully how users can create their own entry points to avoid any runtime startup overhead at all. Also, support for multiple version of Win32, particularly in the international portions of the runtime, has severely bloated certain sets of functions. NCEG FP Conformance - The NCEG/X3J11 working paper on floating point libraries is quite stable and will probably be adopted pretty much as is. We plan to implement those features which are least likely to change (which means most of them).  Memory mapped stdio - Using memory mapped direct to disk for binary mode file IO could be a huge performance win. We will implement and test this scheme and add it for V4 if it is effective. IO buffering - The current stdio buffering scheme flushes the buffer whenever a seek is made. In binary mode, it is possible to determine if the seek is within the current buffer and avoid flushing. We will implement it and see if saving the buffer offsets the cost of calculation. Debug Support We will create debug versions of all library models: perhaps libcd.lib, libcmtd.lib, and dcrt40.dll. Note that modules compiled with the non-debug version interacting with modules compiled with the debug heap is not supported. It can be done if care is taken to ensure   interaction between these modules, but we should strongly discourage this practice. We are very early in the planning stages, so much of this section may later change. Debug Heap - We will move as much as possible of the MFC debug heap down into the CRT heap and leave hooks as needed to support MFC-specific debugging needs. Allocated blocks will be larger than normal and the padding will be initialized to a known pattern. Whenever requested or at every free() (TBD) we will examine the allocated heap for overwritten padding and notify the user if found. We will support MFC-like leak detection. A heap browser in the IDE might be considered, but certainly not in the V4-timeframe. Debug Functions - All runtime functions should have asserts in place to detect bad parameters, unusual conditions, and non-benign Win32 API failure. Note that things like running out of memory during allocation should not assert - malloc should continue to return NULL - but should print a warning message. Whether asserts call the debugger or print an assert message is TBD and may be an option for the user to choose. The TRACE feature found in MFC may not be appropriate and useful for most of the C runtime, except perhaps in stdio/lowio. Source Release - Starting with Manatee release 2 and continuing with all subsequent releases, CRT source will be included on the CD. This will not include floating point sources or non-portable source other than Intel assembly. The debug libraries will be built from these sources, so users will be able to step into the runtimes when debugging their programs. Also, for the first time, this source release will allow users to build the CRT as a DLL (but their version will be named mycrt40.dll or somesuch). Miscellaneous File Handle Limit - We will remove the current arbitrary limit on the number of file handles. MT locks - Allow users to turn of MT locks when using the multithreaded CRT. The lock() function will still be called, but expensive calls to EnterCriticalSection will be avoided. Others - We need to merge the NT SDK CRT tree fixes and Mac/PowerMac platform-specific work into our tree. Also, IBM/PowerPC work will be merged in this timeframe. Key Resources Development Lead: Chris Weight (ChrisWei) QA Lead: TBD [Kevin Boyle (KevinBoy) current] Program Management: TBD [Jeff Henshaw (Jhenshaw) current] User Ed: TBD [Marilyn Johnstone (MarilynJ) current] SLM Tree Locations TBD - most likely \\ikura\vc3slm ! src\crt. Development/QA/User Ed Detail Documents Development User Ed  STYLEREF  heading 1  \* MERGEFORMAT  M Visual C++ 4.0 C Runtime Library Project Overview Created:   CREATEDATE  \* MERGEFORMAT  07/21/94 11:08 AM Microsoft Confidential Page   PAGE  Modified:   SAVEDATE  \* MERGEFORMAT  07/21/94 5:03 PM  FILENAME  \* MERGEFORMAT  CRT40.DOC Created:   CREATEDATE  \* MERGEFORMAT  07/21/94 11:08 AM Microsoft Confidential Page   PAGE  Modified:   SAVEDATE  \* MERGEFORMAT  07/21/94 5:03 PM  FILENAME  \* MERGEFORMAT  CRT40.DOC Normal Heading 1 Heading 2 Default Paragraph Font Page Number Header Footer Jeff Henshaw D:\SLM\DOC\V3OVRVW\OPTXX20.DOC Peter Mason C:\V3OVRVW\OPTXX20.DOC C:\WINWORD\CRT30.DOC TRIO'\\SLANG\EXCHANGE\CHRISWEI\DOC\CRT30.DOC chriswei$\\chriswei5\ddrive\crt\doc\crt40.doc @\\MSPRINT10\25/2373 CORPK 157.55.64.245 Ne00: winspool HP LaserJet 4Si/4Si MX PS \\MSPRINT10\25/2373 CORPK 157.5 Letter PRIV`  N N N \\MSPRINT10\25/2373 CORPK 157.5 Letter PRIV`  N N N Times New Roman Symbol Arial Microsoft Logo Helvetica 'M Visual C++ Opt++ 2.0 Project Overview chriswei
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\doc\pjp\readme.txt ===
C++ Library build procedure

--- Setup and Customization ---

Unpack the zipfile.  The tree as shipped assumes the root of the source tree
will be at d:\rtl\crt, and the build tree will be at d:\rtl\bld.

Edit settools.cmd to customize for your particular setup.  If you want to use
some other location for the source and build trees, edit the CRT_SRC and 
CRT_BUILDDIR settings accordingly.  You'll also need to change the V6TOOLS
setting to point to the root of your VC6 installation (the parent directory
of the include and lib dirs).

The remainder of this readme assumes you're using the default tree locations.

The C++ headers are found in the source tree at d:\rtl\crt\crtw32\stdhpp.  The
C++ support files used to build the static libs and DLL are found at
d:\rtl\crt\crtw32\stdcpp.

There's one file renamed from your distribution.  Stdcpp\throw.cpp is actually
stdcpp\stdthrow.cpp.  There is already a file throw.cpp in the source tree,
and since when the CRT source is shipped all the source ends up in the same
directory, we can't allow name collisions.  The other throw.cpp isn't found
in this distribution, though, since I'm only including those files necessary
to build the C++ libraries.

--- Building ---

From the source tree root, run settools.cmd to establish the build environment.
Then run cleanbld.cmd on WinNT or clns_bld.bat on Win9x to do the build.  I'm
not certain if the Win9x build is working - I normally only do WinNT builds.
I have gotten the Win9x build working on my laptop, but can't remember if I
needed to tweak anything to do so (it's at home).

I generally run "cleanbld DELNODE 2>&1 | tee build.log" to do a totally clean
build by wiping out the build tree first, or "cleanbld 2>&1 | tee build.log" if
I'm just trying a rebuild.  I don't think the header dependency generation
stuff in the makefile actually works, so a DELNODE build is a good idea after
any header changes.

I've including build.txt as a build log from my system, in case you run into
problems.

The build procedure is actually pretty convoluted.  Because we ship source
code, the build actually copies just about everything from the source tree to
the build tree, then "cleanses" the build tree source, removing some internal
comments and #ifs.

The following files are the most interesting ones produced by the build:

Static single-thread:
    D:\rtl\bld\crt\src\build\intel\libcp.lib    -- release static lib
    D:\rtl\bld\crt\src\build\intel\libcp.pdb    -- release static lib debug info
    D:\rtl\bld\crt\src\build\intel\libcpd.lib   -- debug static lib
    D:\rtl\bld\crt\src\build\intel\libcpd.pdb   -- debug static lib debug info
Static multi-thread:
    D:\rtl\bld\crt\src\build\intel\libcpmt.lib  -- release static lib
    D:\rtl\bld\crt\src\build\intel\libcpmt.pdb  -- release static lib debug info
    D:\rtl\bld\crt\src\build\intel\libcpmtd.lib -- debug static lib
    D:\rtl\bld\crt\src\build\intel\libcpmtd.pdb -- debug static lib debug info
DLL:
    D:\rtl\bld\crt\src\build\intel\msvcp61.dll  -- release DLL
    D:\rtl\bld\crt\src\build\intel\msvcprt.lib  -- release DLL import lib
    D:\rtl\bld\crt\src\build\intel\dll_pdb\msvcp61.pdb -- release DLL debug info
    D:\rtl\bld\crt\src\build\intel\msvcp61d.dll -- debug DLL
    D:\rtl\bld\crt\src\build\intel\msvcprtd.lib -- debug DLL import lib
    D:\rtl\bld\crt\src\build\intel\dll_pdb\msvcp61d.pdb -- debug DLL debug info 

--- Release headers ---

There's one last step in producing the build.  The headers must be cleansed
to produce something appropriate for shipping in the INCLUDE directory.  This
mostly means _CRTIMP2 must be changed to _CRTIMP, and some #ifs must be
deleted.

CD down to d:\rtl\crt\crtw32\tools\win32.  Do "set crtdir=d:\rtl\crt\crtw32"
and run "relinc d:\rtl\relinc".  This will copy the C++ headers from stdhpp
over to d:\rtl\relinc, where they will be appropriately cleansed.  Normally,
these cleansed headers are then copied to d:\rtl\crt\libw32\include, where they
are checked into the master source tree.

--- ---

Let me know if you have any trouble.

...Phil
philiplu@microsoft.com
425-936-7575
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\doc\crtmsdn.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6v2z@Q C:\WORD6\TEMPLATE\newsart.dot Languages Business Unit Microsoft Word 6.0Internationalization with the Visual C++ 2.0 Run-time Library by Chris Weight When you are ready to internationalize your product, the C run-time library from Microsoft Visual C++ 2.0 provides a range of services to assist you. These include routines for character and string conversion and classification, locale-specific date and time information, language-sensitive collation, and other support geared towards making it easier to market your product worldwide.  Visual C++ Version 2.0 is a 32-bit development environment; its run-time library can target any Win32 system, including Windows NT 3.1, NT 3.5,  Chicago , and Win32s . The run-time library can be used to develop applications for any country/language supported by these operating systems. So with appropriate operating system support, a developer in the US can easily build applications for the Japanese market. The run-time library can even detect the current country/language operating system defaults and use these values to initialize the library. If you are careful to isolate your country/language-dependent features (such as strings in a resource file), one  worldwide  executable can be used for any country. C runtime or Win32 API? The services provided by the C runtime library and the Win32 API sets are very similar. However, there are some differences that may influence which you choose to use: If you use only the ANSI/ISO C runtime functions, your program can be ported to any other compiler/library platform that supports the ANSI/ISO C standard. The runtime library minimizes the differences between Win32 systems. For example, Windows 4.0 does not have full Unicode support, but most of the runtime functions that support Unicode will nevertheless work on Windows 4.0. Some runtime functions use the Win32 API set and will usually be slower than a comparable Win32 call. But most runtime functions do not make Win32 calls and they will generally be faster than a comparable Win32 call. The Win32 error return system is more comprehensive -- if a runtime function calls a Win32 API that fails, the translation of Win32 error codes to runtime error codes may not give as much information as when you use the API and obtain the Win32 error code directly. Character Sets and Code Pages ASCII - ASCII is a 7-bit character set that defines the characters 0x00 through 0x7F. SBCS (Single-Byte Character Set) -- A character is represented as a fixed-width 8-bit value (0x00 - 0xFF). All SBCS systems share the ASCII character set for the range 0x32 to 0x7F and they define additional values outside this range as appropriate for the given language. MBCS (Multi-Byte Character Set) -- A character is represented as either an 8-bit or 16-bit value. (MBCS is sometimes called Double Byte Character Set or DBCS). MBCS systems are used for languages with ideographic characters, such as Chinese, Japanese, or Korean, that cannot be represented in 256 characters. In MBCS, specific byte values are lead bytes and indicate that the following byte is a trail byte. A lead byte and trail byte together comprise a single character. Thus an MBCS string may consist of both single-byte and double-byte characters. All MBCS systems contain the ASCII character set in their single-byte range. Unicode - A character is represented as a fixed-width 16-bit value. The Unicode Standard provides enough character encodings to represent all the world s scripts and technical symbols in common use. Unicode is defined by the Unicode Consortium, which includes Microsoft. There is a direct mapping between the ASCII character set (0x00-0x7F) and the equivalent Unicode characters (0x0000-0x007F). The Microsoft C runtime often uses the term  wide character  and Unicode interchangeably. A code page is the representation of a character set; you can think of a character set as an abstract definition and a code page as the instantiation. A given character value is meaningless without knowing the code page; the value 0x1234 can represent different characters depending on the code page. The C runtime has two distinct code page variables -- the locale code page and the multibyte code page (MBCP). The locale code page is set by a call to setlocale(), while the multibyte code page is set by a call to _setmbcp(). A Word about Names C runtime function names can be cryptic but, if you understand the naming conventions, you can tell a lot about a function just by the name. strxxxx, isxxxx, toxxxx -- Traditional (SBCS) character and string functions. Many have been updated to handle MBCS but some, by their very nature, are not appropriate for MBCS use.  mbsxxxx, ismbbxxxx, ismbcxxxx mbctoxxxx -- Multibyte functions have been added to handle MBCS characters and strings. ismbb functions handle multi-byte bytes (ismbblead for example) and ismbc functions deal with multi-byte characters (which can be either one or two bytes). wcsxxxx, iswxxxx, towxxxx -- These functions handle wide (Unicode) characters and strings. tcsxxxx, istxxxx, totxxxx -- Generic Text functions -- they can be compiled to any of the three character models (SBCS, MBCS or Unicode). See the section on tchar.h and the Generic Text functions for more information. Note: All Microsoft-specific C runtime functions start with a leading underscore (_mbsrev for example). This means that they are not ANSI/ISO C-mandated functions; the leading underscore makes their names ANSI/ISO C-conformant. s New in VC++ 2.0 While previous library versions had limited international support, you can now write entirely multibyte, entirely Unicode, or mixed-model applications. Most of the existing library functions have been  internationalized  and many totally new international functions have been added: the locale-dependent functions -- most runtime functions now behave appropriately for the operating environment a complete set of multibyte functions -- counterparts to traditional single-byte character and string functions a complete set of functions that support Unicode -- counterparts to traditional single-byte character and string functions generic text functions that provide a convenient way to conditionally internationalize your program Locale-dependent functions A locale is a collection of information about a specific country, language, and code page. Locale-dependent functions are those functions affected by a change of locale. The C run-time function setlocale() allows you to change the current run-time locale to any locale supported by the operating system. For example, you can call setlocale(LC_ALL, "french") at any time during program execution. Or call setlocale(LC_ALL,"") and the run-time will query the operating system to determine the current system default values for country and locale -- all locale-dependent functions will then behave appropriately for the target machine. By default, all C programs operate in the   locale as defined by the ANSI/ISO C standard. In the   locale, the locale-dependent functions behave as defined by the C standard, but their behavior changes when the locale is changed. For example, isalpha() has traditionally returned TRUE for the characters 'a'-'z' and 'A'-'Z' but no others. In the   locale, isalpha() continues to behave this way. But in the French locale, isalpha() also returns TRUE for other characters, such as ' Multibyte functions The C run time also provides a complete set of multibyte character and string processing functions. Many of the traditional SBCS functions now handle MBCS appropriately, but all SBCS functions not appropriate for MBCS processing have MBCS counterparts. For example, _fullpath() now handles MBCS strings, but strtok() does not, so _mbstok() has been added. There are also a number of functions that are unique to MBCS processing. For example, _mbsncmp() compares n characters of two multibyte strings while _mbsnbcmp() compares n bytes of two multibyte strings. There are a limited number of locale-dependent multibyte functions mbtowc(), mbstowcs(), wctomb(), wcstombs(), mblen(), and _mbstrlen() that use the locale code page for their character and string processing. (Except for _mbstrlen(), they are all ANSI/ISO C functions that are defined to be locale-dependent.) All other multibyte functions use the multibyte code page (MBCP). At program startup, the MBCP is automatically set to the system default code page. During program execution, you can set the code page to any supported multibyte code page by calling _setmbcp(). Since the MBCP is automatically set to the system default code page, one executable program can be used in any country; the MBCP will be set as appropriate to the target machine and all multibyte functions behave appropriately for that code page. Because the MBCP can be set to a  single byte  code page, this target country can even be European or the U.S. Functions that support Unicode The C run time provides a complete set of character and string processing functions that process Unicode. Virtually every SBCS character or string function has a Unicode counterpart. Many of these functions are specified in an upcoming amendment to the ISO/ANSI C standard (ISO/IEC 9899, Amendment 1). Since Unicode can represent virtually all languages of the world in one code set, there are no code pages in programming for Unicode. Only functions (such as wcsftime()) that depend on language or regional preferences are locale-dependent. Therefore, most Unicode functions are not locale-dependent. A very useful feature of the wide character formatted I/O functions (wprint and wscan family) and the traditional formatted I/O functions (print and scan family) is the ability to handle strings of different types. They handle SBCS, MBCS, and Unicode strings when given the appropriate format specifier. You can now write a completely Unicode program even your program arguments and environment variables can be Unicode! If you define wmain() rather than main() (and use the appropriate run-time entry point), your program arguments and the environment strings will be Unicode. You can then use _wputenv() and _wgetenv() to maintain the wide environment. Generic text characters -- TCHAR.H The header file TCHAR.H provides a convenient way to create separate executable files that can process SBCS, MBCS, or Unicode characters from the same source file. You use generic text  functions  (these are actually macros) in your source code, and these  functions  are mapped to the appropriate function by the pre-processor (depending on whether you have _UNICODE, _MBCS, or neither defined). With only one version of the source code to maintain, you can write generic code that is initially compiled for SBCS, but that can later be compiled as MBCS or Unicode at the flip of a  switch. Also, you can have two executable versions -- one for international use (MBCS or Unicode), and one for domestic use (SBCS) -- but only one version of the source code to maintain. This is a partial list of TCHAR.H mappings: Generic Text Unicode _TCHAR wchar_t string string string string _tmain wmain _tgetenv getenv getenv _wgetenv _tprintf printf printf wprintf _tcsrev strrev _mbsrev wcsrev Here is a generic text example program that demonstrates many of the new international features of the runtime library: The use of TCHAR.H to write generic programs that can be compiled to any of the three character models. The symmetry that exists  among the SBCS, MBCS, and Unicode environments a string reversing function exists for each model. The ability of both printf and wprintf  to handle single byte, multibyte, and Unicode strings. Some traditional functions (getenv() & printf() in this example) that are now MBCS-enabled. A completely Unicode program -- even the environment strings and program arguments are Unicode. Generic text example program #include <stdio.h> #include <stdlib.h> #include <string.h> #include <tchar.h> int _tmain(int argc, _TCHAR **argv, _TCHAR **envp) _TCHAR *str = _T("Astring"); char *amsg = "Reversed"; wchar_t *wmsg = L"Is"; _tprintf(_T("My name is: '%s'\n"), argv[0]); printf("Current path is: "); _tprintf(_T("'%s'\n"), _tgetenv(_T("path"))); _tprintf(_T("'%s' %hs %ls: "), str, amsg, wmsg); _tprintf(_T("'%s'\n"), _tcsrev(str)); return 0; Unicode version #include <stdio.h> #include <stdlib.h> #include <string.h> #include <tchar.h> int wmain(int argc, wchar_t **argv, wchar_t **envp) wchar_t *str = L"Astring"; char *amsg = "Reversed"; wchar_t *wmsg = L"Is"; wprintf(L"My name is: '%s'\n", argv[0]); printf("Current path is: "); wprintf(L"'%s'\n", _wgetenv(L"path")); wprintf(L"'%s' %hs %ls: ", str, amsg, wmsg); wprintf(L"'%s'\n", _wcsrev(str)); return 0; Multibyte version #include <stdio.h> #include <stdlib.h> #include <string.h> #include <tchar.h> int main(int argc, char **argv, char **envp) char *str = "Astring"; char *amsg = "Reversed"; wchar_t *wmsg = L"Is"; printf("My name is: '%s'\n", argv[0]); printf("Current path is: "); printf("'%s'\n", getenv("path")); printf("'%s' %hs %ls: ", str, amsg, wmsg); printf("'%s'\n", _mbsrev(str)); return 0; Single-byte version #include <stdio.h> #include <stdlib.h> #include <string.h> #include <tchar.h> int main(int argc, char **argv, char **envp) char *str = "Astring"; char *amsg = "Reversed"; wchar_t *wmsg = L"Is"; printf("My name is: '%s'\n", argv[0]); printf("Current path is: "); printf("'%s'\n", getenv("path")); printf("'%s' %hs %ls: ", str, amsg, wmsg); printf("'%s'\n", _strrev(str)); return 0;  Visual C++ Version 2.0 can even target the Macintosh! The run-time library in the Visual C++ 2.0 Cross-Development Edition for Macintosh provides complete multibyte functionality but does not support the locale model or Unicode. title  Languages Business Unit Microsoft Corporation Company Confidential Version Version  ( Daytona )Windows 4.0 ()() Normal Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Default Paragraph Font text2 text1 text4 Header Footer text3 tech3 Body Text caption codeblack codeblue Normal Indent pullquote Footnote Text Footnote Reference Unknown Jonathan King)\\MONGOLIA\EDIT\NEWS\NEWS3_5\RUNTIME2.DOC Jonathan King)\\MONGOLIA\EDIT\NEWS\NEWS3_5\RUNTIME3.DOC Jonathan King)\\MONGOLIA\EDIT\NEWS\NEWS3_5\RUNTIME3.DOC Jonathan King)\\MONGOLIA\EDIT\NEWS\NEWS3_5\RUNTIME3.DOC Jonathan King)\\MONGOLIA\EDIT\NEWS\NEWS3_5\RUNTIME3.DOC Jonathan King)\\MONGOLIA\EDIT\NEWS\NEWS3_5\RUNTIME3.DOC Asmus Freytag D:\TEMP\RUNTIME3.DOC C:\WINWORD\RUNTIME3.DOC C:\WINWORD\RUNTIME4.DOC C:\WINWORD\RUNTIME4.DOC @HP LaserJet IIISi PostScript LPT1: PSCRIPT HP LaserJet IIISi PostScript HP LaserJet IIISi PostScript Times New Roman Symbol Arial Tms Rmn Arial MT Black Arial Super Times Courier New C:\WORD6\TEMPLATE\newsart.dot Languages Business Unit
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\crts\fpw32\oldv2log.txt ===
----------------------------------------------------------------------

Thu 26-May-94	(GregF)

fpwin32\tran\lsources, sources
fpwin32\tran\alpha\ceil.c, floor.c, modf.c (all deleted)
fpwin32\tran\alpha\ceil.s, fabss.s, floors.s, fmods.s, modfs.s (new)
fpwin32\tran\alpha\ieee.c (update)
	Changes picked up from \\orville\razzle\src\fp32 version of tree.

----------------------------------------------------------------------

Tue 17-May-94	(GregF)

fpwin32\tran\mips\asincosm.s, expm.s, fasincos.s, powm.s
	Latest from Roger Lanser

----------------------------------------------------------------------

Thu 28-Apr-94	(GregF)

fpwin32\buildcrt.cmd, fp32.def
	Minor changes to support building special DLL for Win32s (currently
	named msvcrt19.dll)

----------------------------------------------------------------------

Fri 11-Mar-94	(GregF)

fpwin32\fp32.def
	Deleted the MIPS_OPTIMIZATION variable. Amounts to removing the
	-Ox- (disable intrinsics) switch from the MIPS build. This
	corresponds to Steve Hanson's change to \\orville\razzle\src\fp32
	version.

fpwin32\include\trans.h
	Latest from Dec (from \\orville\razzle\src\fp32

fpwin32\tran\sources
	Picked several changes for Alpha build (only)

fpwin32\tran\alpha\fpctrl.s, frnd.s
	Latest versions from \\orville\razzle\src\fp32.

fpwin32\tran\alpha\asinacos.s
		   atan2s.s
		   atans.s
		   coss.s
		   dpml_exc.c
		   exph.c
		   exps.s
		   hypoth.c
		   hypots.s
		   log10s.s
		   logs.s
		   pows.s
		   sins.s
		   sqrts.s
		   tans.s
		   trig_rdx.s
		   trig_tab.s
	New sources from Dec taken from (\\orville\razzle\src\fp32).

fpwin32\tran\mips\asincosm.s
		  atanm.s
		  cabs.s
		  coshm.s
		  dtoul.s
		  expm.s
		  fabsf.s
		  fasincos.s
		  fatan.s
		  fcosh.s
		  fexp.s
		  ffloor.s
		  fhypot.s
		  flog.s
		  floorm.s
		  fmodm.s
		  fpctrl.s
		  frnd.s
		  fsincos.s
		  fsinh.s
		  fsqrt.s
		  fsqrthlp.s
		  ftan.s
		  ftanh.s
		  hypotm.s
		  logm.s
		  powm.s
		  rint.s
		  sinhm.s
		  sqrtm.s
		  tanhm.s
		  trigm.s
		  xsqrt.s
	Latest from Steve Hanson/Roger Lanser. Fixed prologues for unwinds.
	Taken from \\orville\razzle\src\fp32

----------------------------------------------------------------------

Thu 27-Jan-94	(GregF)

tran\sources
	Name changes to mips objects.

----------------------------------------------------------------------

Wed 26-Jan-94	(GregF)

***** ALL CHANGES BELOW ARE DERIVED FROM ROGER LANSER'S CHANGES TO *****
***** TO THE FP32 TREE						   *****

tran\mips\asincos.s renamed to asincosm.s,
	  atan.s    renamed to atanm.s,
	  cosh.s    renamed to coshm.s,
	  exp.s     renamed to expm.s,
	  fabs.s    renamed to fabsm.s,
	  ffloor.s  renamed to floorm.s,
	  ffloorf.s renamed to ffloor.s,
	  fmod.s    renamed to fmodm.s,
	  fpow.s    renamed to powm.s
	  fpowf.c   renamed to fpow.c,
	  fsqrt.s   renamed to sqrtm.s,
	  fsqrtf.s  renamed to fsqrt.s,
	  hypot.s   renamed to hypotm.s
	  log.s     renamed to logm.s
	  modff.c   renamed to fmodf.c,
	  sinh.s    renamed to sinhm.s,
	  tanh.s    renamed to tanhm.s,
	  trig.s    renamed to trigm.s
	Renamed files to avoid possible name conflicts and consequent
	headaches with the NT build tools (e.g., tran\asincos.c was getting
	built instead of tran\mips\asincos.s). The naming convention was
	extended to files which weren't actually in conflict for consistency
	(by Roger Lanser).

tran\mips\cabsm.s
	Replaced __cabs with cabs, bypot with _hypot

tran\mips\expm.s
	Fixed reference to _HUGE.

tran\mips\fabsm.s
	Removed bogus enclosing #ifdef - #endif (was preventing the source
	from actually being assembled).

tran\mips\hypotm.s
	Replaced __hypot with _hypot.

----------------------------------------------------------------------

Mon 24-Jan-94	(GregF)

tran\include\trans.h
	Merged in _LANGUAGE_ASSEMBLY conditionals added by Roger Lanser
	to the fp32 version on \\orville\razzle.

----------------------------------------------------------------------

Mon 24-Jan-94	(GregF)

tran\mips\cosh.s, hypot.s, sinh.s
	Merged latest versions from fp32 on \\orville\razzle. They fix
	bugs in references to HUGE.

----------------------------------------------------------------------

Sun 23-Jan-94	(GregF)

buildcrt.cmd, buildcrt.nt, dirs
	Dropped build of libm.

libm
	Deleted, along with all files and subdirectories. This has been
	superceded by the changes below.

tran\mips\asincos.s, atan.s, cabs.s, cosh.s, exp.s, exptable.s, fabs.s,
	  fabsf.s, fasincos.s, fatan.s, fcosh.s, fexp.s, ffloor.s, ffloorf.s,
	  fhypot.s, flog.s, fmod.s, fpow.s, fpowf.c, fsincos.s, fsinh.s,
	  fsqrtf.s, fsqrthlp.s, ftan.s, ftanh.s, hypot.s, log.s, logtable.s,
	  modff.c, sinh.s, tanh.s, trig.s
	New files from Steve Hanson and Roger Lanser.

tran\mips\fsqrt.s
	Whole new version for Steve Hanson and Roger Lanser.

tran\sources
	Revised to build the files above for MIPS.

----------------------------------------------------------------------

Wed 12-Jan-94	(GregF)

fp32.def, fp32.nt
	Added fp32.nt, a variation of fp32.def used when building libs for
	the NT SDK.  Took CRTLIBTYPE==NT support out of fp32.def, moved it
	to fp32.nt.

----------------------------------------------------------------------

Wed 05-Jan-94	(GregF)

buildcrt.cmd
	Added libm to the build.

buildcrt.nt
	Variant of buildcrt.cmd used to build the CRT libs for the NT SDK.

dirs
	Added libm.

makefile
	Restored support for building libcnt. Thus, there is no need for
	a special version to build the NT SDK version (i.e., there is no
	makefile.nt).

libm\*.*
	Added libm and all subdirectories and files. These are Steve
	Hanson's fast and single-precision floating point routines. They
	are for MIPS only. Note, this was NOT the right way to do this.
	They SHOULD have been integrated into tran\mips, as I had hinted
	to Steve twice in email. However, he ignored the hints and I don't
	have time to fix his hacks so...

----------------------------------------------------------------------

Wed 01-Dec-93	(GregF)

tran\alpha\huge.s
	_HUGE for Dolphin build

----------------------------------------------------------------------

Wed 01-Dec-93	(GregF)

buildcrt.cmd -
	Made more similar to NT SDK build script.

dirs, fp32.def, makefile -
	Merged in NT SDK version.

conv\cvt.c, tenpow.c -
	Merged in NT SDK version. Also, revised the build control macros
	(e.g., replaced MTHREAD with _MT, ALPHA with _M_ALPHA,...,etc.)

conv\sources -
	Moved fp8.c onto i386_SOURCES list

include\cv.h, tran.h -
	Merged in NT SDK. Substantially revised build control macros.

tran\fabs.c, ldexp.c, pow.c, sincosh.c, sources
	Merged in NT SDK version.

tran\i386\huge.asm -
	Restored _HUGE_DLL for NT SDK build (forgot to check in on 10/14).

tran\fpexcept.c
	Merged in NT SDK. Substantially revised build control macros.

----------------------------------------------------------------------

    18-Nov-93	(GregF)

tran\alpha
tran\alpha\*.* -
	Copied over Alpha support from fp32 tree (NT SDK tree)

----------------------------------------------------------------------

Thu 14-Oct-93	(GregF)

tran\mips\huge.s
	Restored _HUGE_DLL for NT SDK build.

----------------------------------------------------------------------

Wed 22-Sep-93	(SteveSa)

tran/sources -
	remove obsolete files from build

tran/i386/87fmod.asm -
	remove obsolete FORTRAN entry point _FIamod

tran/i386/87fsqrt.asm,
tran/i386/87ftran.asm,
tran/i386/87ftrig.asm,
tran/i386/87ftriga.asm,
tran/i386/87ftrigh.asm -
	These files were deleted because these files just contained _FI*
	entry points for FORTRAN.  The FORTRAN group no longer needs
	those entry points, so these files are now obsolete.

----------------------------------------------------------------------

Wed 22-Sep-93	(SteveSa)

log.txt created, for tracking changes to the "Dolphin"
C Run-Time Floating Point code in the FPWin32 project.

----------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ddk\ddk_base.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination

busdrv\acpi\smbus\smbbatt                    , *           , src\wdm\acpi\smbbatt                              , *           , COPY
busdrv\acpi\tools\acpisim\driver             , *           , src\wdm\acpi\acpisim\driver                       , *           , HSPLIT
busdrv\acpi\tools\acpisim\inc                , *           , src\wdm\acpi\acpisim\inc                          , *           , HSPLIT
busdrv\acpi\tools\acpisim\asl                , *           , src\wdm\acpi\acpisim\asl                          , *           , HSPLIT
busdrv\acpi\tools\acpisim\inf                , *           , src\wdm\acpi\acpisim\inf                          , *           , HSPLIT
busdrv\acpi\tools\acpisim\lib\obj            , acpisim.lib , \                                                 , *           , COPYLIB
busdrv\acpi\wmiacpi\sample                   , *           , src\wdm\wmi\wmiacpi                               , *           , COPY
busdrv\agp\agp440                            , *           , src\kernel\agp\agp440                             , *           , HSPLIT
busdrv\agp\agplib                            , *           , src\kernel\agp\agplib                             , *           , HSPLIT
busdrv\agp\inc                               , agp.h       , src\kernel\agp\inc                                , *           , HSPLIT
hals\mcasample\imca                          , readme.htm  , src\kernel\mca\imca                               , *           , HSPLIT
hals\mcasample\imca\exe                      , *           , src\kernel\mca\imca\exe                           , *           , HSPLIT
hals\mcasample\imca\sys                      , *           , src\kernel\mca\imca\sys                           , *           , HSPLIT
ntos\inc                                     , class.h     , src\storage\inc                                   , *           , HSPLIT
ntos\inc                                     , tape.h      , src\storage\inc                                   , *           , HSPLIT
ntos\wmi\sample\wmifilt                      , *           , src\wdm\wmi\wmifilt                               , *           , HSPLIT
; no IA64 versions checked in yet
busdrv\acpi\tools\sleeper                    , *           , tools\acpi\sleeper\x86                            , *           , COPYX86
busdrv\acpi\tools\pmte                       , *           , tools\acpi\pmte\x86                               , *           , COPYX86
pnp\tools\devcon                             , *           , src\setup\devcon                                  , *           , HSPLIT
pnp\tools\devcon\bin                         , *           , tools\devcon                                      , *           , COPY

tools\devctl                                 , *.htm       , tools\devctl                                      , *           , COPY
;
; NOTE: tools\devcon\*\devcon.exe is binplaced to the DDK from base\pnp\tools\devcon
; NOTE: tools\devctl\*\devcon.exe is binplaced to the DDK from base\tools\devctl
;
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ddk\hal_base.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination
;

; BASE
;
boot\detect\chk                              , makefile    , src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\chk                              , makefile.inc, src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\chk                              , sources     , src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\chk                              , sources.inc , src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\fre                              , makefile    , src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\fre                              , makefile.inc, src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\fre                              , sources     , src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\fre                              , sources.inc , src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\i386                             , acpibios.h  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , bios.h      , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , comlpt.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , comlptc.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , cpu.asm     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , cpu.inc     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , disk.h      , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , diska.asm   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , diskc.c     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , display.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , eisa.h      , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwapm.c     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwdetect.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwdetect.h  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hweisa.inc  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hweisaa.asm , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hweisac.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwheap.c    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwmisca.asm , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpbiosc.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpci.inc   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpcia.asm  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpmbios.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwvbios.h   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwvbiosc.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , keybda.asm  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , keybdc.c    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , main.asm    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , main.inc    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , mouse.inc   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , mousea.asm  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , mousec.c    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , ntmisc.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccard.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccard.inc  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccarda.asm , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccardc.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pcibios.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pcibios.h   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pnpbios.h   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , string.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , types.h     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , video.inc   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , videoa.asm  , src\boot\detect\i386                              , *           , HSPLIT      
; Special case the next three items. The files are 16 bit libraries for ntdetect only.
boot\detect\i386                             , llibce.lib  , src\boot\detect\i386                              , *           , COPY
boot\detect\i386                             , long.lib    , src\boot\detect\i386                              , *           , COPY
boot\detect\i386                             , slibce.lib  , src\boot\detect\i386                              , *           , COPY

boot\inc                                     , dockinfo.h  , src\boot\inc                                      , *           , HSPLIT      
boot\kdcom                                   , *           , src\boot\kdcom                                    , *           , HSPLIT      
boot\kd1394                                  , *           , src\boot\kd1394                                   , *           , HSPLIT      
hals                                         , acpidtct.c  , src\hals                                          , *           , HSPLIT      
hals                                         , bushnd.c    , src\hals                                          , *           , HSPLIT      
hals                                         , hal.src     , src\hals                                          , *           , HSPLIT      
hals                                         , hals.inc    , src\hals                                          , *           , HSPLIT      
hals                                         , drivesup.c  , src\hals                                          , *           , HSPLIT      
hals                                         , chiphacks.c , src\hals                                          , *           , HSPLIT      
hals                                         , rangesup.c  , src\hals                                          , *           , HSPLIT      
hals\halacpi                                 , *           , src\hals\halacpi                                  , *           , HSPLIT      
hals\halacpi\apic                            , *           , src\hals\halacpi\apic                             , *           , HSPLIT      
hals\halacpi\i386                            , *           , src\hals\halacpi\i386                             , *           , HSPLIT      
hals\halacpi\mpapic                          , *           , src\hals\halacpi\mpapic                           , *           , HSPLIT      
hals\halacpi\picacpi                         , *           , src\hals\halacpi\picacpi                          , *           , HSPLIT      

;hals\halia64                                , *           , src\hals\halia64x                                 , *           , HSPLIT      
;hals\halia64\ia64                           , *           , src\hals\halia64x\ia64                            , *           , HSPLIT      
;hals\halia64\mpapic                         , *           , src\hals\halia64x\mpapic                          , *           , HSPLIT      

hals\halmps                                  , *           , src\hals\halmps                                   , *           , COPY
hals\halmps\i386                             , *           , src\hals\halmps\i386                              , *           , COPY
hals\halmps\mp                               , *           , src\hals\halmps\mp                                , *           , COPY
hals\halmps\up                               , *           , src\hals\halmps\up                                , *           , COPY

hals\halx86                                  , *           , src\hals\halx86                                   , *           , HSPLIT      
hals\halx86\i386                             , *           , src\hals\halx86\i386                              , *           , HSPLIT      

inc                                          , kdcom.h     , inc\hal\wxp                                  , *           , HSPLIT      
inc                                          , kdlog.h     , inc\hal\wxp                                  , *           , HSPLIT      
inc                                          , cardbus.h   , inc\hal\wxp                                  , *           , HSPLIT      

hals\x86new                                  , emulate.h   , inc\hal\wxp                                  , *           , COPY
hals\x86new                                  , x86new.h    , inc\hal\wxp                                  , *           , COPY
hals\x86new                                  , xm86.h      , inc\hal\wxp                                  , *           , COPY

hals\inc                                     , *           , inc\hal\wxp                                  , *           , HSPLIT      

ntos\inc                                     , arbiter.h   , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , eisa.h      , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , exboosts.h  , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , hal.h       , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , halpnpp.h   , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , kddll.h     , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , mac386.inc  , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , pci.h       , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , pciirqmp.h  , inc\hal\wxp                                  , *           , HSPLIT      
ntos\inc                                     , smbios.h    , inc\hal\wxp                                  , *           , HSPLIT      
ntos\ke\i386                                 , kimacro.inc , inc\hal\wxp                                  , *           , HSPLIT      
ntos\ke\i386                                 , kimacro.inc , inc\hal\wxp\i386                                 , *           , HSPLIT
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ddk\processor_base.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination
;

; BASE
;
hals\processor\generic                      , *            , src\processor\generic                             , *           , COPY      
hals\processor\lib                          , *            , src\processor\lib                                 , *           , COPY      
hals\processor\lib\i386                     , *            , src\processor\lib\i386                            , *           , COPY      
hals\processor\lib\ia64                     , *            , src\processor\lib\ia64                            , *           , COPY      
hals\processor                              , eventmsg.mc  , src\processor                                     , *           , COPY      
hals\processor                              , processor.mof, src\processor                                     , *           , COPY
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\ddk\ifs_base.ini ===
fs\cdfs                                      , *           , src\filesys\cdfs\wxp                  , *           , HSPLIT
fs\fastfat                                   , *.c         , src\filesys\fastfat\wxp               , *           , HSPLIT
fs\fastfat                                   , *.h         , src\filesys\fastfat\wxp               , *           , HSPLIT
fs\fastfat                                   , fastfat.rc  , src\filesys\fastfat\wxp               , *           , HSPLIT
fs\fastfat                                   , sources.inc , src\filesys\fastfat\wxp               , *           , HSPLIT
fs\fastfat                                   , dirs        , src\filesys\fastfat\wxp               , *           , HSPLIT
fs\fastfat\mp                                , *           , src\filesys\fastfat\wxp\mp            , *           , HSPLIT
fs\fltSamples\filespy                        , dirs        , src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy                        , filespy.inf , src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy                        , filespyw2k.inf , src\filesys\filter\filespy         , *           , HSPLIT
fs\fltSamples\filespy\docs                   , usrGuide.htm, src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy\filter                 , *           , src\filesys\filter\filespy\filter     , *           , HSPLIT
fs\fltSamples\filespy\lib                    , *           , src\filesys\filter\filespy\lib        , *           , HSPLIT
fs\fltSamples\filespy\fspykd                 , *           , src\filesys\filter\filespy\fspykd     , *           , HSPLIT
fs\fltSamples\filespy\user                   , *           , src\filesys\filter\filespy\user       , *           , HSPLIT
fs\fltSamples\sfilter                        , makefile    , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilter.c   , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilter.inf , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilterw2k.inf , src\filesys\filter\sfilter         , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilter.rc  , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , *.cmd       , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sources     , src\filesys\filter\sfilter            , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\nulmrx              , Readme.htm  , src\filesys\nulmrx\wxp                , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\nulmrx\sys          , *           , src\filesys\nulmrx\wxp\sys            , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\nulmrx\dll          , *           , src\filesys\nulmrx\wxp\dll            , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx              , Readme.htm  , src\filesys\smbmrx\wxp                , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx\sys          , *           , src\filesys\smbmrx\wxp\sys            , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx\dll          , *           , src\filesys\smbmrx\wxp\dll            , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx\exe          , *           , src\filesys\smbmrx\wxp\exe            , *           , HSPLIT
fs\rdr2\inc                                  , backpack.h  , inc\ifs\wxp                  		   , *           , HSPLIT
fs\rdr2\inc                                  , buffring.h  , inc\ifs\wxp                    	   , *           , HSPLIT
fs\rdr2\inc                                  , cifs.h      , inc\ifs\wxp                  	       , *           , HSPLIT
fs\rdr2\inc                                  , fcb.h       , inc\ifs\wxp  		                   , *           , HSPLIT
fs\rdr2\inc                                  , fcbtable.h  , inc\ifs\wxp           	               , *           , HSPLIT
fs\rdr2\inc                                  , fsctlbuf.h  , inc\ifs\wxp                   	       , *           , HSPLIT
fs\rdr2\inc                                  , lowio.h     , inc\ifs\wxp	                       , *           , HSPLIT
fs\rdr2\inc                                  , midatlax.h  , inc\ifs\wxp   	                       , *           , HSPLIT
fs\rdr2\inc                                  , mrx.h       , inc\ifs\wxp           	               , *           , HSPLIT
fs\rdr2\inc                                  , mrxfcb.h    , inc\ifs\wxp                   	       , *           , HSPLIT
fs\rdr2\inc                                  , namcache.h  , inc\ifs\wxp	                       , *           , HSPLIT
fs\rdr2\inc                                  , nodetype.h  , inc\ifs\wxp   	                       , *           , HSPLIT
fs\rdr2\inc                                  , ntrxdef.h   , inc\ifs\wxp           	               , *           , HSPLIT
fs\rdr2\inc                                  , prefix.h    , inc\ifs\wxp               	           , *           , HSPLIT
fs\rdr2\inc                                  , rdbss.h     , inc\ifs\wxp 	                       , *           , HSPLIT
fs\rdr2\inc                                  , rx.h        , inc\ifs\wxp          	               , *           , HSPLIT
fs\rdr2\inc                                  , rxassert.h  , inc\ifs\wxp                   	       , *           , HSPLIT
fs\rdr2\inc                                  , rxce.h      , inc\ifs\wxp 	                       , *           , HSPLIT
fs\rdr2\inc                                  , rxcehdlr.h  , inc\ifs\wxp           	               , *           , HSPLIT
fs\rdr2\inc                                  , rxcommon.h  , inc\ifs\wxp                   	       , *           , HSPLIT
fs\rdr2\inc                                  , rxcontx.h   , inc\ifs\wxp    	                   , *           , HSPLIT
fs\rdr2\inc                                  , rxdata.h    , inc\ifs\wxp             	           , *           , HSPLIT
fs\rdr2\inc                                  , rxdebug.h   , inc\ifs\wxp                     	   , *           , HSPLIT
fs\rdr2\inc                                  , rxexcept.h  , inc\ifs\wxp 		                   , *           , HSPLIT
fs\rdr2\inc                                  , rxlog.h     , inc\ifs\wxp           	               , *           , HSPLIT
fs\rdr2\inc                                  , rxovride.h  , inc\ifs\wxp                   	       , *           , HSPLIT
fs\rdr2\inc                                  , rxpooltg.h  , inc\ifs\wxp	                       , *           , HSPLIT
fs\rdr2\inc                                  , rxprocs.h   , inc\ifs\wxp        	               , *           , HSPLIT
fs\rdr2\inc                                  , rxstruc.h   , inc\ifs\wxp                	       , *           , HSPLIT
fs\rdr2\inc                                  , rxtimer.h   , inc\ifs\wxp	                       , *           , HSPLIT
fs\rdr2\inc                                  , rxtrace.h   , inc\ifs\wxp        		           , *           , HSPLIT
fs\rdr2\inc                                  , rxtypes.h   , inc\ifs\wxp                   	       , *           , HSPLIT
fs\rdr2\inc                                  , rxworkq.h   , inc\ifs\wxp                       	   , *           , HSPLIT
fs\rdr2\inc                                  , scavengr.h  , inc\ifs\wxp                      	   , *           , HSPLIT
fs\rdr2\inc                                  , struchdr.h  , inc\ifs\wxp                           , *           , HSPLIT
fs\rdr2\rdbss\copysup.nt\daytona\obj         , copysup.lib , \                                     , *           , COPYLIB
fs\rdr2\rdbss\monolithic\obj                 , rdbsslib.lib, \                                     , *           , COPYLIB
fs\rdr2\rxce\daytona\obj                     , rxce.lib    , \                                     , *           , COPYLIB
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\dload\readme.txt ===
# NOTE: The delayload stubs for each dll should be in the same
#       directory as the dll is build from
#
#	Examples:
#
#		shell32.dll is built from the shell depot, so its delayload error handler 
#	        file is in \nt\shell\published\dload\shell32.c
#
#		netrap.dll is built from the ds depot, so its delayload error handler file
#               is in \nt\ds\published\dload\netwrap.c
#
#		mpr.dll is built from the net depot, so its delayload error handler file
#		is in \nt\net\published\lib\dload\mpr.c
#
#
# !! Please do NOT add files here that are not build from the base depot !!
#
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\a_readme.txt ===
NOTE WELL

This directory (efiutil) contains sources of programs
and related materials Microsoft provides to the "EFI group"
for distribution with the "EFI Kit"

NO MS CRITICAL IP SHOULD BE CHECKED INTO THIS DIRECTORY.

These sources build and run in EFI mode, which is NOT
something that exists on NT except in an emulator.
This directory should never be part of a normal build,
it is here for safekeeping.

Changes to FAT FS are NOT necessarily to be added to EFI-FS
tools in this directory, since EFI-FS may evolve at a different
(slower) rate than FAT.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\how do i build.txt ===
How do I build in the EFI environment?

first run "build.cmd" in this directory

This sets up the build environment, then:

cd sdk\build\nt32 for the 32 bit environment under the emulator or,
cd sdk\build\sal64 for the 64 bit Itanium environment (Make sure you started razzle
as "...\razzle.cmd Win64")

nmake

cd ..\..\..

then, go to your project dir. (Or pickup hello and modify it) and type bz / bcz

This will produce your binary
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\diskpart\worklist.txt ===
xx1. Write out Shadow MBR as part of any WriteGPT
xx2. Pick up fixes from Ken's code about enummeration.
xx3. Modify emulator for 2 or 3 devices, and much larger,
     and rerun tests...
xx4. Add a version command
xx5. Write Fix...
6. Pass it of for MBR work...
xx7. guid generator
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\build\bios32\makefile.txt ===
!include master.env

#
# Libs to link together a FW image
#

EFI_LIBS =                                                          \
    output\lib\lib.lib

#
# We sometimes link the shell's tools into this build, so include
# libs for all the tools and the shell.
#
# (Note this is for debugging, and a real build should remove
# this as to be sure it's not mistakenly including any parts of
# the shell)
#

!include $(EFI_SOURCE)\shell\inc\shelllib.mak

#
#
#

TARGET_BASENAME=Bios32
OUTPUTS=bin\$(TARGET_BASENAME).exe

all: makemaker

$(OUTPUTS): $(EFI_LIBS)
    $(LINK) $(L_FLAGS) $(NT_LIBS) $(EFI_LIBS) /entry:MainEntry /out:$@ /pdb:$*.pdb


#
#? Everything to build
#

makemaker:
    $(BUILD_TOOL)\genmake
    $(MAKE) -f output\lib\makefile                                all
    $(MAKE) -f output\shell\makefile                              all
    $(MAKE) -f output\apps\test\makefile                          all
    $(MAKE) -f output\apps\test2\makefile                         all
    $(MAKE) -f output\apps\test3\makefile                         all
    $(MAKE) -f output\apps\test4\makefile                         all
    $(MAKE) -f output\apps\fpswa\makefile                         all
    $(MAKE) -f output\apps\osloader\makefile                      all

bsc:
   - dir /s /b *.sbr > temp.rm
   $(BSCMAKE) /n /o bin\$(TARGET_BASENAME).bsc "@temp.rm"
   - del temp.rm 

clean:
    - rd  /s /q output
    - rd  /s /q bin
    - del VC?0.*
    - del $(TARGET_BASENAME).*

floppy: bin\efildr bin\bootsect.com
    - copy bin\efildr a:\efildr

bin\efildr.dll: output\corefw\fw\platform\BuildTip\bios32\efildr.obj output\lib\lib.lib
    link /nologo /MACHINE:IX86 /subsystem:console /NODEFAULTLIB /INCREMENTAL:NO /MAP /FIXED /BASE:0x00400000 /ENTRY:EfiLoader output\corefw\fw\platform\BuildTip\bios32\efildr.obj output\lib\lib.lib /OUT:bin\efildr.dll

bin\efildr.efi: bin\efildr.dll
    $(FWIMAGE) app bin\efildr.dll bin\efildr.efi

bin\Bios32.efi: bin\Bios32.exe
    $(FWIMAGE) app bin\Bios32.exe bin\Bios32.efi

bin\efildr32: bin\efildr.efi bin\Bios32.efi
    $(BUILD_TOOL)\efildrimage bin\efildr32 bin\efildr.efi bin\Bios32.efi

bin\bootsect.com: output\corefw\fw\platform\BuildTip\bios32\ia32\bootsect.obj
    $(MASMLINK) /tiny output\corefw\fw\platform\BuildTip\bios32\ia32\bootsect.obj,bin\bootsect.com,bin\bootsect.map,,,

bin\start.com: output\corefw\fw\platform\BuildTip\bios32\ia32\start.obj
    $(MASMLINK) /tiny output\corefw\fw\platform\BuildTip\bios32\ia32\start.obj,bin\start.com,bin\start.map,,,

bin\efi32.com: output\corefw\fw\platform\BuildTip\bios32\ia32\efi32.obj
    $(MASMLINK) /tiny output\corefw\fw\platform\BuildTip\bios32\ia32\efi32.obj,bin\efi32.com,bin\efi32.map,,,

bin\efildr: bin\start.com bin\efi32.com bin\efildr32
    copy /b bin\start.com+bin\efi32.com+bin\efildr32 bin\efildr

createfloppy:
    - $(BUILD_TOOL)\dskimage $(BUILD_TOOL)\efiboot.img a: /f1.44

floppytools:
    - copy bin\cp.efi a:
    - copy bin\date.efi a:
    - copy bin\dblk.efi a:
    - copy bin\dmem.efi a:
    - copy bin\dmpstore.efi a:
    - copy bin\getmtc.efi a:
    - copy bin\load.efi a:
    - copy bin\ls.efi a:
    - copy bin\memmap.efi a:
    - copy bin\mkdir.efi a:
    - copy bin\mm.efi a:
    - copy bin\mode.efi a:
    - copy bin\nshell.efi a:
    - copy bin\osloader.efi a:
    - copy bin\pci.efi a:
    - copy bin\rm.efi a:
    - copy bin\shellenv.efi a:
    - copy bin\stall.efi a:
    - copy bin\time.efi a:
    - copy bin\type.efi a:
    - copy bin\ver.efi a:
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\inc\protocol\readme.txt ===
The protocol directory contains non Architectural 
Protocols that span the FW, Platform, or application
space.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\notes\config.txt ===
Project settings:
            C/C++
                General
                    level 3
                    Warning as errors
                    Debug = Program database
                    Optimizations = Disabled
                    Preprocessor defines = EFI32,EFI_DEBUG,EFI_NT_EMULATOR

                Code Generation
                    Processor = Blend
                    Run-time library = Debug Multithreaded
                    Calling convention = __cdecl
                    Struct member alignment = 8

                Customize
                    Enable function-level linking
                    Elminate duplicate strings
                    Enable minimal rebuild
                    Suppress startup banner

                Listing
                    Generate browse info, Debug/

                Optimizations
                    Disabled
                    Inline function expansion disabled

                Precompiled headers
                    Automatic use of precompiled headers

                Preprocessor
                    Preprocessor defines = EFI32,EFI_DEBUG,EFI_NT_EMULATOR
   DRV ...........  Addition include directories: ..\..\public
FW ................ Addition include directories: inc, ..\public
   LIBSRC.......... Addition include directories: ..\public

                    Ignore standard include paths
                    Generate browse info

            Link
                General
   DRV ............ Object/library modules: ..\..\lib\libsrc.lib
FW ................ Object/library modules: ..\lib\libsrc.lib
                    Generate debug info
                    Link incrementally
                    Ignore default libraries
FW ................ Generate mapfile

                Customize
                    Link incrementally
                    Use program database
                    Suppress startup banner

                Debug
                    Debug Info
                    Microsoft format
                    Separate types

                Input
                    ..\lib\libsrc.lib
                    ignore default libraries

            Browse info
                    build browse info file
                    Suppress startup banner

            Post-build step

FW ................ copy debug\fw.lib ..\lib
FW ................ copy debug\fw.dll ..\exe

   FS ............. copy debug\fs.dll ..\lib



CRIBI:

WIN32,_DEBUG,_CONSOLE,_MBCS
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\notes\iso-639-2.txt ===
"Termi-	"Biblio-	Name (English)
nology"	graphy"

aar	aar	Afar
abk	abk	Abkhazian
ace	ace	Achinese
ach	ach	Acoli
ada	ada	Adangme
afa	afa	Afro-Asiatic (Other)
afh	afh	Afrihili
afr	afr	Afrikaans
ajm	ajm	Aljamia
aka	aka	Akan
akk	akk	Akkadian
ale	ale	Aleut
alg	alg	Algonquian languages
amh	amh	Amharic
ang	ang	English, Old (ca. 450-1100)
apa	apa	Apache languages
ara	ara	Arabic
arc	arc	Aramaic
arn	arn	Araucanian
arp	arp	Arapaho
art	art	Artificial (Other)
arw	arw	Arawak
asm	asm	Assamese
ath	ath	Athapascan languages
aus	aus	Australian languages
ava	ava	Avaric
ave	ave	Avestan
awa	awa	Awadhi
aym	aym	Aymara
aze	aze	Azerbaijani
bad	bad	Banda
bai	bai	Bamileke languages
bak	bak	Bashkir
bal	bal	Baluchi
bam	bam	Bambara
ban	ban	Balinese
bas	bas	Basa
bat	bat	Baltic (Other)
bej	bej	Beja
bel	bel	Belarussian
bem	bem	Bemba
ben	ben	Bengali
ber	ber	Berber (Other)
bho	bho	Bhojpuri
bih	bih	Bihari
bik	bik	Bikol
bin	bin	Bini
bis	bis	Bislama
bla	bla	Siksika
bnt	bnt	Bantu (Other)
bod	tib	Tibetan
bra	bra	Braj
bre	bre	Breton
btk	btk	Batak (Indonesia)
bua	bua	Buriat
bug	bug	Buginese
bul	bul	Bulgarian
cad	cad	Caddo
cai	cai	Central American Indian (Other)
car	car	Carib
cat	cat	Catalan
cau	cau	Caucasian (Other)
ceb	ceb	Cebuano
cel	cel	Celtic (Other)
ces	cze	Czech
cha	cha	Chamorro
chb	chb	Chibcha
che	che	Chechen
chg	chg	Chagatai
chk	chk	Chuukese
chm	chm	Mari
chn	chn	Chinook jargon
cho	cho	Choctaw
chp	chp	Chipewyan
chr	chr	Cherokee
chu	chu	Church Slavic
chv	chv	Chuvash
chy	chy	Cheyenne
cmc	cmc	Chamic languages
cop	cop	Coptic
cor	cor	Cornish
cos	cos	Corsican
cpe	cpe	Creoles and pidgins, English-based (Other)
cpf	cpf	Creoles and pidgins, French-based (Other)
cpp	cpp	Creoles and pidgins, Portuguese-based (Other)
cre	cre	Cree
crp	crp	Creoles and pidgins (Other)
cus	cus	Cushitic (Other)
cym	wel	Welsh
dak	dak	Dakota
dan	dan	Danish
day	day	Dayak
del	del	Delaware
den	den	Slave (Athapascan)
deu	ger	German
dgr	dgr	Dogrib
din	din	Dinka
div	div	Divehi
doi	doi	Dogri
dra	dra	Dravidian (Other)
dua	dua	Duala
dum	dum	Dutch, Middle (ca. 1050-1350)
dyu	dyu	Dyula
dzo	dzo	Dzongkha
efi	efi	Efik
egy	egy	Egyptian (Ancient)
eka	eka	Ekajuk
ell	gre	Greek, Modern (1453-)
elx	elx	Elamite
eng	eng	English
enm	enm	English, Middle (1100-1500)
epo	epo	Esperanto
est	est	Estonian
eth	eth	Ethiopic
eus	baq	Basque
ewe	ewe	Ewe
ewo	ewo	Ewondo
fan	fan	Fang
fao	fao	Faroese
fas	per	Persian
fat	fat	Fanti
fij	fij	Fijian
fin	fin	Finnish
fiu	fiu	Finno-Ugrian (Other)
fon	fon	Fon
fra	fre	French
frm	frm	French, Middle (ca. 1400-1600)
fro	fro	French, Old (ca. 842-1400)
fry	fry	Frisian
ful	ful	Fulah
fur	fur	Friulian
gaa	gaa	Ga
gai	iri	Irish
gay	gay	Gayo
gba	gba	Gbaya
gdh	gae	Gaelic (Scots)
gem	gem	Germanic (Other)
gez	gez	Geez
gil	gil	Gilbertese
glg	glg	Gallegan
gmh	gmh	German, Middle High (ca. 1050-1500)
goh	goh	German, Old High (ca. 750-1050)
gon	gon	Gondi
gor	gor	Gorontalo
got	got	Gothic
grb	grb	Grebo
grc	grc	Greek, Ancient (to 1453)
grn	grn	Guarani
guj	guj	Gujarati
gwi	gwi	Gwich'in
hai	hai	Haida
hau	hau	Hausa
haw	haw	Hawaiian
heb	heb	Hebrew
her	her	Herero
hil	hil	Hiligaynon
him	him	Himachali
hin	hin	Hindi
hit	hit	Hittite
hmn	hmn	Hmong
hmo	hmo	Hiri Motu
hrv	scr	Croatian
hun	hun	Hungarian
hup	hup	Hupa
hye	arm	Armenian
iba	iba	Iban
ibo	ibo	Igbo
ijo	ijo	Ijo
iku	iku	Inuktitut
ile	ile	Interlingue
ilo	ilo	Iloko
ina	ina	Interlingua (International Auxilary Language Association)
inc	inc	Indic (Other)
ind	ind	Indonesian
ine	ine	Indo-European (Other)
ipk	ipk	Inupiak
ira	ira	Iranian (Other)
iro	iro	Iroquoian languages
isl	ice	Icelandic
ita	ita	Italian
jaw	jav	Javanese
jpn	jpn	Japanese
jpr	jpr	Judeo-Persian
jrb	jrb	Judeo-Arabic
kaa	kaa	Kara-Kalpak
kab	kab	Kabyle
kac	kac	Kachin
kal	kal	Kalaallisut
kam	kam	Kamba
kan	kan	Kannada
kar	kar	Karen
kas	kas	Kashmiri
kat	geo	Georgian
kau	kau	Kanuri
kaw	kaw	Kawi
kaz	kaz	Kazakh
kha	kha	Khasi
khi	khi	Khoisan (Other)
khm	khm	Khmer
kho	kho	Khotanese
kik	kik	Kikuyu
kin	kin	Kinyarwanda
kir	kir	Kirghiz
kmb	kmb	Kimbundu
kok	kok	Konkani
kom	kom	Komi
kon	kon	Kongo
kor	kor	Korean
kos	kos	Kosraean
kpe	kpe	Kpelle
kro	kro	Kru
kru	kru	Kurukh
kua	kua	Kuanyama
kum	kum	Kumyk
kur	kur	Kurdish
kut	kut	Kutenai
lad	lad	Ladino
lah	lah	Lahnda
lam	lam	Lamba
lao	lao	Lao
lat	lat	Latin
lav	lav	Latvian
lez	lez	Lezghian
lin	lin	Lingala
lit	lit	Lithuanian
lol	lol	Mongo
loz	loz	Lozi
ltz	ltz	Letzeburgesch
lua	lua	Luba-Lulua
lub	lub	Luba-Katanga
lug	lug	Ganda
lui	lui	Luiseno
lun	lun	Lunda
luo	luo	Luo (Kenya and Tanzania)
lus	lus	Lushai
mad	mad	Madurese
mag	mag	Magahi
mah	mah	Marshall
mai	mai	Maithili
mak	mak	Makasar
mal	mal	Malayalam
man	man	Mandingo
map	map	Austronesian (Other)
mar	mar	Marathi
mas	mas	Masai
max	max	Manx
mdr	mdr	Mandar
men	men	Mende
mga	mga	Irish, Middle (900-1200)
mic	mic	Micmac
min	min	Minangkabau
mis	mis	Miscellaneous languages
mkd	mac	Macedonian
mkh	mkh	Mon-Khmer (Other)
mlg	mlg	Malagasy
mlt	mlt	Maltese
mni	mni	Manipuri
mno	mno	Manobo languages
moh	moh	Mohawk
mol	mol	Moldavian
mon	mon	Mongolian
mos	mos	Mossi
mri	mao	Maori
msa	may	Malay
mul	mul	Multiple languages
mun	mun	Munda languages
mus	mus	Creek
mwr	mwr	Marwari
mya	bur	Burmese
myn	myn	Mayan languages
nah	nah	Aztec
nai	nai	North American Indian (Other)
nau	nau	Nauru
nav	nav	Navajo
nbl	nbl	Ndebele, South
nde	nde	Ndebele, North
ndo	ndo	Ndonga
nep	nep	Nepali
new	new	Newari
nia	nia	Nias
nic	nic	Niger-Kordofanian (Other)
niu	niu	Niuean
nld	dut	Dutch
non	non	Norse, Old
nor	nor	Norwegian
nso	nso	Sohto, Northern 
nub	nub	Nubian languages
nya	nya	Nyanja
nym	nym	Nyamwezi
nyn	nyn	Nyankole
nyo	nyo	Nyoro
nzi	nzi	Nzima
oci	oci	Occitan (post 1500)
oji	oji	Ojibwa
ori	ori	Oriya
orm	orm	Oromo
osa	osa	Osage
oss	oss	Ossetic
ota	ota	Turkish, Ottoman (1500-1928)
oto	oto	Otomian languages
paa	paa	Papuan (Other)
pag	pag	Pangasinan
pal	pal	Pahlavi
pam	pam	Pampanga
pan	pan	Panjabi
pap	pap	Papiamento
pau	pau	Palauan
peo	peo	Persian, Old (ca. 600-400 B.C.)
phi	phi	Philippine (Other)
phn	phn	Phoenician
pli	pli	Pali
pol	pol	Polish
pon	pon	Pohnpeian
por	por	Portuguese
pra	pra	Prakrit languages
pro	pro	Provenal, Old (to 1500)
pus	pus	Pushto
qaa-qtz	qaa-qtz	reserved for local use
que	que	Quechua
raj	raj	Rajasthani
rap	rap	Rapanui
rar	rar	Rarotongan
roa	roa	Romance (Other)
roh	roh	Raeto-Romance
rom	rom	Romany
ron	rum	Romanian
run	run	Rundi
rus	rus	Russian
sad	sad	Sandawe
sag	sag	Sango
sai	sai	South American Indian (Other)
sal	sal	Salishan languages
sam	sam	Samaritan Aramaic
san	san	Sanskrit
sas	sas	Sasak
sat	sat	Santali
sco	sco	Scots
sel	sel	Selkup
sem	sem	Semitic (Other)
sga	sga	Irish, Old (to 900)
shn	shn	Shan
sid	sid	Sidamo
sin	sin	Sinhalese
sio	sio	Siouan languages
sit	sit	Sino-Tibetan (Other)
sla	sla	Slavic (Other)
slk	slo	Slovak
slv	slv	Slovenian
smi	smi	Sami languages
smo	smo	Samoan
sna	sna	Shona
snd	snd	Sindhi
snk	snk	Soninke
sog	sog	Sogdian
som	som	Somali
son	son	Songhai
sot	sot	Sotho, Southern
spa	spa	Spanish
sqi	alb	Albanian
srd	srd	Sardinian
srp	scc	Serbian
srr	srr	Serer
ssa	ssa	Nilo-Saharan (Other)
ssw	ssw	Swati
suk	suk	Sukuma
sun	sun	Sundanese
sus	sus	Susu
sux	sux	Sumerian
swa	swa	Swahili
swe	swe	Swedish
syr	syr	Syriac
tah	tah	Tahitian
tai	tai	Tai (Other)
tam	tam	Tamil
tat	tat	Tatar
tel	tel	Telugu
tem	tem	Timne
ter	ter	Tereno
tet	tet	Tetum
tgk	tgk	Tajik
tgl	tgl	Tagalog
tha	tha	Thai
tig	tig	Tigre
tir	tir	Tigrinya
tiv	tiv	Tiv
tkl	tkl	Tokelau
tli	tli	Tlingit
tmh	tmh	Tamashek
tog	tog	Tonga (Nyasa)
ton	ton	Tonga (Tonga Islands)
tpi	tpi	Tok Pisin
tsi	tsi	Tsimshian
tsn	tsn	Tswana
tso	tso	Tsonga
tuk	tuk	Turkmen
tum	tum	Tumbuka
tur	tur	Turkish
tut	tut	Altaic (Other)
tvl	tvl	Tuvalu
twi	twi	Twi
tyv	tyv	Tuvinian
uga	uga	Ugaritic
uig	uig	Uighur
ukr	ukr	Ukrainian
umb	umb	Umbundu
und	und	Undetermined
urd	urd	Urdu
uzb	uzb	Uzbek
vai	vai	Vai
ven	ven	Venda
vie	vie	Vietnamese
vol	vol	Volapk
vot	vot	Votic
wak	wak	Wakashan languages
wal	wal	Walamo
war	war	Waray
was	was	Washo
wen	wen	Sorbian languages
wol	wol	Wolof
xho	xho	Xhosa
yao	yao	Yao
yap	yap	Yapese
yid	yid	Yiddish
yor	yor	Yoruba
ypk	ypk	Yupik languages
zap	zap	Zapotec
zen	zen	Zenaga
zha	zha	Zhuang
zho	chi	Chinese
znd	znd	Zande
zul	zul	Zulu
zun	zun	Zuni
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\notes\relnote.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Intel Title _PID_GUIDKoo Heng Daniel Aw Normal.dot Michael Kinney Microsoft Word 8.0#RLp= @\\DPSOFFICE007\DP2-4F8-HP5 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\DPSOFFICE007\DP2-4F8-HP5 Letter \\DPSOFFICE007\DP2-4F8-HP5 Letter,)BP)* o".g1 6TCED# %Ks%Ss$C_ Y?+XK [=4p1 C{wY; c_Yo;`I DKe~fj mO`mOdbjbjt+t+ Product Release Notes EFI Version 0.99.12.24 Sample Implementation Introduction The EFI Version 0.99.12.24 Sample Implementation contains the source code and documentation required to develop EFI related software.  This includes the development of EFI firmware, EFI shells, EFI device drivers, EFI applications, and EFI OS loaders.  This release follows the EFI Specification 0.99.  These release notes contain the following information: vironment. Building EFI Version 0.99.12.24 There are four major build points (tips) in the tree: build\nt32 -  The NT emulator code & Tools build\bios32 - IA-32 version with a standard BIOS build\ia-32emb - IA-32 embedded version (No BIOS) build\Sal64** - IA-64 version  In each directory tip there is a build.cmd file. This file has global environment variables that must match you tree and your tools. Run this script and then run nmake. You can run a nmake clean to clean the tree. The resulting output files will get put in the tree called output that is one level below the build tip. Output is a copy of the EFI tree that is automatically generated to place the *.obj and other intermediate data. The resulting linked binary files end up in bin that is also one level below the build tip. You may need to modify the build.cmd at each tip to match you system.  There are a few environment variables that must be set correctly to build EFI.  A sample of these are: EFI_SOURCE=C:\Project\Efi EFI_MSVCTOOLPATH=c:\Program Files\DevStudio\VC EFI_MASMPATH=c:\masm611 EFI_DEBUG=YES EFI_DEBUG_CLEAR_MEMORY=YES EFI_BOOTSHELL=NO EFI_SPLIT_CONSOLES=YES EFI_SOURCE is the path to the root of the EFI tree. EFI_MSVCTOOLPATH is the path to the VC++ tools on your system. EFI_MASMPATH is the path to the MASM 6.11 tools on your system. EFI_DEBUG is set to YES to enable all debug messages and asserts, and set to NO to disable all debug messages and asserts. EFI_DEBUG_CLEAR_MEMORY is set to YES to enable setting buffers to a fixed value on FreePages, AllocatePool, and FreePool.  This is intended to be a fine-grained control such that debug messages will be available without the overhead of frequent buffer clears.  Set NO to disable the feature. EFI_BOOTSHELL is set to YES to build the EFI Shell and all the external EFI Shell commands and debug commands into the firmware.  If this environment variable is set to NO, then the firmware will not include the EFI Shell or any external EFI Shell commands or debug commands.  In either case, the firmware will boot directly to the Boot Manager.  This is the default behavior for production firmware.  The difference with the EFI_BOOTSHELL set to YES option is that there will be an option with the Boot Manager to launch the internal shell application. EFI_SPLIT_CONSOLES is set to YES to enable multiple active consoles.  In this case, all the console input and console output devices will be active according to the setting of the associated global variables.  When this environment variable is NO, there will be one standard input device, one standard output device, and one standard error device.  For correct behavior of the consoles, as detailed in Chapter 17 of the EFI 0.99 specification, this variable should be set to YES. This release differs from the former release that kept EFI_FIRMWARE_REVISION as an environment variable that defines the firmware s revision.  Now, the firmware revision is tracked in the files \inc\efi.h and \inc\efiapi.h.  The salient fields for tracking the vintage of the code are: #define EFI_FIRMWARE_MAJOR_REVISION #define EFI_FIRMWARE_MINOR_REVISION #define EFI_SPECIFICATION_MAJOR_REVISION #define EFI_SPECIFICATION_MINOR_REVISION **If the build tip is under the SOFTSDV64\EFI directory, then modify build.cmd to set the _IA64SDK_DIR to proper path as per your install. Follow the steps mentioned above to build EFI applications. If the build tip is under \DEV\EFI then refer to SAL Firmware Writers Guide and Release notes under the \DEV\DOC directory for building with firmware. You can go to build\nt32 to make the EFI emulator.  You can run emulator by running Nt32.exe in the build\nt32\bin directory. A red Standard Error and Blue ConsoleIn and ConsoleOut window should appear. This emulator only runs under NT. The bios32 and ia-32emb build tips also support the following nmake commands: nmake createfloppy - Formats and creates a bootable IA-32 EFI floppy. nmake floppy - Compiles and copies EFILDR onto a bootable IA-32 EFI floppy. nmake floppytools - Copies the standard EFI tools to a bootable IA-32 EFI floppy. Debugging EFI Version 0.99.12.24 with MSVC++ 5.0 or 6.0 Create a project (File New, select project tab) and pick the Win32 Application button. Point the project to your build\nt32\bin directory and fill in a dummy project name and click O.K. Next on the Project pull down menu select the settings options. [Debug Tab]: Executable for Debug must point to : build\nt32\bin\Nt32.exe [Debug Tab]: Working Directory : build\nt32\bin [Browse Info]: Browse info file name: build\nt32\bin\Nt32.bsc Then you can pull down the Build menu and click on start debugging. And you are at source level debug. If you have trouble breaking on the code you would like to see there is a BREAKPOINT() macro you can insert in the code to make it stop where you would like. The GUI lets you set breakpoints in source code. You can access the source browser from tools sub menu source browser. EFI Version 0.99.12.24 Directory Structure The EFI Version 0.99.12.24 tree has a basic directory structure. All IA32 or IA64 specific code resides in IA32 or IA64 subdirectories. If IA32 or IA64 specific code is added to a directory it will force the creation of IA32 and IA64 subdirectories. Only directories that have non-portable code have IA32 and IA64 subdirectories. The main directory level of EFI Version 0.99.12.24 is as follows: Build Build tips as outlined in Building EFI Version 0.99.12.24 CoreFW The core EFI firmware. This includes the core EFI code that follows the EFI specification and the Platform code that must be ported to port to new environments. Common include files for EFI Common library routines that can be used in the firmware, shell, applications,  drivers, or OS loaders. Notes  Documentation for EFI Sample Implementation 0.99.12.24 and sample code  listings. CoreFW The core firmware tree is broken up into the following major directories: The firmware directory contains all the EFI based firmware. It also contains the  Platform code that needs to be ported to each platform. The Inc directory contains included files that are used to bind the core EFI and platform code together. Drivers Contains drivers that are written exclusively to the EFI specification. These  drivers only make calls that are required to exist in the EFI specification.  This is why they are not in a platform directory. Drivers Core firmware drivers do not touch hardware directly and thus they must only call APIs that are defined in the EFI specification. These drivers can add their own extensions to EFI, but they can only consume standard EFI APIs. The following core Drivers are currently supported: Console This component provides two messaging drivers, a VT-100 and PC-ANSI,  that layer on top of SerialIo Devices and produce the SimpleInput and SimpleTextOutput Protocols.    ConSpliter This driver layers on top of SimpleInput and SimpleTextOutput Devices and  produces SimpleInput and SimpleTextOutput Protocols.  The idea is that a ConSpliter driver multiplexes multiple SimpleInput and SimpleTextOutput devices into a virtual SimpleInput device and a virtual SimpleTextOutput device.   DskIo This driver layers on top of BlockIo Devices and produces the DiskIo Protocol   that is consumed by filesystems. This driver implements the FAT32 filesystem. It layers it s self on top of devices  that support the DskIo protocol. PblkIo  This driver consumes the Raw BlockIo of an entire device and generates logical  BlockIo devices based on the format of the raw media. For hard drives this driver parses the MBR and produces a BlockIo driver for every partition on the disk that supports an EFI filesystem. For CD-ROM this driver parses the ISO-9660 filesystem on the CD-ROM and uses the  El Torito  extensions to produce a partition that supports the FAT filesystem. PXEBC This driver implements the PXE Base Code and Load File Protocols for remote  booting support. RamDisk  This driver produces a BlockIo Device that produces a RAM Disk. The memory  for the RAM Disk is allocated using EFI memory management calls. The corefw\fw\efi contains the EFI code that implements the EFI specification. This code is portable and should never be modified when a port is made to a new platform.  This is the key code that is tracking the specification. You should not change this code and any bugs in this code should be fixed by the core EFI team.  The following directories are supported: Loader Variable Platform The code in corefw\fw\platform\ is the only code that needs to be modified to port EFI to new platforms. Currently there are four supported platforms.  The entry points to each of these platforms can be found in corefw\fw\platform\BuildTip: This is the platform code for the NT emulator. It requires ntemulc.exe to exist to  function. This is due to the fact that the consoles in the NT emulator are really RPC calls to a pipe. There must be some thing on the other end of the pipe to make the consoles function and this is ntemulc.exe. Bios32 This platform is a generic port of EFI to a PC. The IA-32 code must load,  relocate, and then call MainEntry().The ConsoleIn, ConsoleOut, and BlockIo Drivers come from the Drivers\BiosInt directory. These drivers use the legacy BIOS INT calls to build the basic EFI platform drivers. IA-32Emb This platform is a generic port of EFI to a PC. The IA-32 code must load,  relocate, and then call MainEntry().The ConsoleIn, ConsoleOut, and BlockIo Drivers come from the Drivers directory. These are native drivers that do not depend on any BIOS services.  In fact, this implementation does not use an BIOS calls at all. SAL64 This platform is a generic port of the reference SAL. There is code in the  reference SAL that loads and relocates, then calls MainEntry(). The ConsoleIn, ConsoleOut, and BlockIo Drivers come from the Drivers\BiosInt directory. These drivers use the legacy BIOS INT calls to build the basic EFI platform drivers. There also exists some common code in the \corefw\fw\platform directory: BootMgr Sample Implementation of an EFI Boot Manager, including Boot Maint. Mgr. Drivers This directory contains device drivers for console and block I/O devices. PlDriver This directory contains all the drivers for system specific devices.  These are  typically drivers for motherboard devices. Drivers The code in corefw\fw\platform\Drivers contains all the device drivers for physical hardware devices. BiosInt This directory contains drivers that use legacy BIOS INT calls to build EFI  drivers. There is a driver for VGA, PS2 Keyboard, 16-bit UNDI, and Legacy INT 13h (hard drive, floppy, CD-ROM, Floppy              Native floppy driver for 1.44 MB floppy devices. Native IDE driver for ATA and ATAPI devices. Keyboard Native 8042 device driver for PS/2 keyboards.  Serial Native 16500 device driver for serial ports COM1-COM4 UNDI32         UNDI32 driver for Simple Network Protocol. VgaClass Generic VGA Class driver for VGA compatible video adapters.  VgaMini Generic VGA miniport drivers for standard VGA adapters. Porting to a new Platform Each platform will need it s own copy of init.c. This file will contain MainEntry().  This is the code that the platform will call to pass control to EFI. The platform is responsible for loading and relocating the EFI code and calling its entry point. Code in the Platform tree should never call EFI code directly. All core EFI code must be called via the FW (pointer to EFI_FIRMWARE_TABLE). The exception to this rule is that the platform code may call EFI library functions. EFI Library functions can only be called after the platforms memory map has been initialized and a call to InitializeLib() has been made. The main flow of the EFI code is controlled from the Platform code and the calls back into the core firmware must be made in sequence. The following is time line of initializing EFI: Platform Specific Code Loads and Relocates EFI code Platform Specific Code calls MainEntry() [This source tree starts running] Platform Specific Code Initializes Tables Get Initial EFI System Table Fill in ACPI, SMBIOS, SAL System Table,  Patch in any Run Time or Boot Services functions not supported by the EFI core Call PlInstallMemoryMap() to setup the EFI memory map First call back to FW to add a memory Descriptor must pass in Conventional Memory Conventional memory is then used to build the EFI memory map. The FW is called with an initialized memory map Initialize The EFI Lib   Lib calls can now be made Install Base Devices Call FW to install base IO devices Initialize internal NVRAM The FW is called to install the NVRAM store. this is after the System Volumes on BIOS32 systems where variables are stored in a file on a fixed disk Install Console Add BIOS Keyboard Driver Add Bios VGA Driver The FW is called with a working console Install System Volumes Add system Block IO Drivers   BIOS Block IO Drivers Install the serial console drivers (VT-100, PC-ANSI), serial port driver Install the console spliter to multiplex all available consoles The FW is called with System Volumes Installed Install Other Devices What ever extra you need NT emulator adds a emulated or raw floppy device NT emulator adds bogus NT file system access at this point Call FW Boot Manager Call Platform Boot Manager Known Limitations In This Release A few EFI Services are not fully implemented yet.  These include: GetWakeupTime()   This service programs the RTC, but is mechanism to wake up a system when the alarm fires has not been implemented.  This function is not implemented in the NT emulation environment. SetWakeupTime()   This service programs the RTC, but the mechanism to wake up a system when the alarm files has not been implemented.  This function is not implemented in the NT emulation environment. SetWatchdogTimer()   Not implemented.  This requires platform specific functionality. The NT emulation environment does not support all the EFI Shell Commands and all the FILE_SYSTEM_PROTOCOL interfaces. The EFI Shell command 'cd' is not functional. The EFI Shell command 'rmdir' is not functional. The EFI Shell command 'mkdir' is not functional. The file information returned by 'ls' is not complete. The EFI Shell command 'err' is not functional.   Workaround : Set the debug mask in \efi\inc\efidebug.h and recompile. The File System Protocol services GetInfo() and SetInfo() are not fully  implemented. Timers events of type EVT_NOTIFY_SIGNAL are not implemented in the NT emulation environment. Linking in the EFI Shell The EFI Shell provides a command line environment to develop and debug EFI applications.  The EFI Shell is supplied in the EFI ToolKit.  If you wish to use the EFI Shell, you will need to copy the executable images for the EFI Shell from the EFI ToolKit into the target environment. If you wish to integrate the EFI Shell into the EFI firmware, you will have to copy the EFI Shell source files from the EFI Toolkit directory into the EFI Reference Implementation directory.  There is a batch file to help you do this.  It is called \efi\GetShell.cmd.  It takes a single parameter that is the root directory of the EFI ToolKit.  For example, if the EFI Reference Implementation is in c:\project\efi, and the EFI ToolKit is in c:\project\toolkit, you could use the following command to copy the EFI Shell files. c:\project\efi> GetShell c:\project\toolkit Once the source files to the EFI Shell have been copied, you will need to set EFI_BOOTSHELL=YES to build the EFI Shell into the EFI firmware.  It is always a good ideal to do a clean build after the EFI Shell sources have been copied. Using the EFI Boot Manager The EFI Boot Maintenance Manager allows the user to add boot options, delete boot options, launch an EFI application, and set the auto boot time out value.  If there are no boot options in the system (and no integrated shell), the Boot Maintenance Menu is presented.  If boot options are available, then the set of available boot options is displayed, and the user can select one or choose to go to the Boot Maintenance Menu.  If the time out period is not zero, then the system will auto boot the first boot selection after the time out has expired.  If the time out period is zero, then the EFI Boot Manager will wait for the user to select an option. Boot Maintenance Menu: Boot from a file This option searches all the EFI System Partitions in the system.  For each partition it looks for an EFI directory.  If the EFI directory is found, then it looks in each of the subdirectories below EFI.  In each of those subdirectories, it looks for the first file that is an executable EFI Application.  Each of the EFI Applications that meet this criteria are automatically added as a boot option.  In addition, legacy boot options for A: and C: are also added if those devices are present. This option allows the user to launch an application without adding it as a boot option.  The EFI Boot Manager will search the root directories and the \EFI\TOOLS directories of all of the EFI System Partitions present in the system for the specified EFI Application. Add a boot option This option allows the user to specify the name of the EFI Application to add as a boot option.  The EFI Boot Manager searches the same partitions and directories as described in 1), until is finds an EFI Application with the same name that the user specified. This menu also allows the user to provide either ASCII or UNICODE arguments to the option that will be launched. Delete boot options This option provides the opportunity to delete any single boot options or all boot options. Change boot order This option gives the user control of the relative order that the boot manager will attempt to boot options. There is a help menu to describe the control key sequences to employ. Manage BootNext Setting This option gives the user the ability to prescribe the first boot option to be tried on a subsequent boot. Set auto boot time out This option allows the user to set the auto boot time out value in seconds.  If it is set to zero, then the auto boot feature is disabled Select Active Console Output Devices This option displays the list of available console output devices, as contained in the ConOutDev list volatile variable.  The console output devices that have been selected to be active consoles are annotated as such.  The user can select or deselect additional output consoles from this menu.  The boot maintenance manager will perform logic checking to ensure that a legal ensemble of devices is chosen (i.e., you cannot choose two different messaging devices, such as both PC-ANSI and VT-100, to be active consoles on a given UART).  The system should choose a set of defaults in an implementation-specific fashion if the console out variable is empty; this could be expected for the first boot of a given system.   Select Active Console Input Devices This option is the same as option 6 above, but it treats the ConInDev list of devices and the subset  detailed in ConIn variable. Select Active Error Devices This option is the same as number 6, but it treats the ErrOutDev list of devices and the subset detailed in ErrOut variable.  The Active Error Devices are essentially a type of console output devices whose only traffic includes error messaging.   Cold Reset This option will perform a platform-specific COLD reset of the system.   This has traditionally meant a full platform reset. Return to the Boot Manager main menu.  This will display the active boot devices, including a possible integrated shell (if the implementation is so constructed). Copyright 2000, Intel Corporation, All Rights Reserved. *Other brands and names are the property of their respective owners. ~{xurolif xurjga[ }zwtqkh`] {vspmjdaY xumjd^[SP yvph`XP
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\notes\efi_dg.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDNancy Navarro 8x11spec97ibi3.dot Michael Kinney Microsoft Word 8.0yfU/} |QP 6c -6}#. L6y~V( foWxnyfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ,ID="{C56AC065-DE35-11D2-99FC-0090273FC14D}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9092446248624862486248" DPB="0200D6A649A749A749" GC="7476A03860AB61AB6154" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=44, 44, 840, 674,  NewMacros=22, 22, 982, 679, ZThisDocument NewMacrosMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Macro recorded 03/19/99 by Michael Kinney Project.NewMacros.FV Project.NewMacros.FB Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney  FH Macro  Macro recorded 03/19/99 by Michael Kinney Heading 3  Fuction  FV Macro  Macro recorded 03/19/99 by Michael Kinney Parameters9 Function5 Stop Recording$  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5 CodeIBIProtoArgument  Times New Roman  FA Macro  Macro recorded 03/22/99 by Michael Kinney Stop Recording$  FA Macro  Macro recorded 03/22/99 by Michael Kinney CodeIBIProtoArgument   FB Macro  Macro recorded 03/24/99 by Michael Kinney CodeIBIPrototype  Attribut e VB_Nam e = "New Macros" Sub FH( Descript corded 0 3/19/99  by Micha el Kinne ProcD VInvo ke_Func ject. omeKey U nit:=wdL ActiveD ocument. s("Head ing 3" .Type Text  Paragr iAiCopy MeEscap $MoAown {, PCoun ind.Clea rFormatt With  Al.Bs Replace? MatchC Wild*c S`)ds !Z!+C) +.E8xec@ CodeIBI htoArgB Tab &  Times  Roma Itali wdToggl ColorIn "Fook 5Ck$ZBl$BAttribut e VB_Nam e = "Thi sDocumen 1Normal VCreata `False Predecl "Expose Template Deriv stomiz336f2c544 536f914f7 Win16 Win32 EFILIB7 stdole MSFormsC ThisDocument< _Evaluate Normal Office Project- Module1b NewMacros SelectionZ Style ActiveDocument Styles EndKey5 wdLine TypeText TypeParagraph Documentj HomeKey MoveDown Count0v MoveUp Findn ClearFormatting Replacement Forward WrapWy wdFindContinueBP MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY EscapeKey CommandBars Visible wdFindAskt Paste vbTabc9 FontU Italic! wdToggle ColorIndex wdAutoKV*\CNormalrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\STDOLE2.TLB stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office CodeIBIPrototype CodeIBIProtoArgumentNMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Project.NewMacros.FV Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney Project.NewMacros.FB4Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ STDOLE2. tomation mMSFo@rms> FC56AC0 4D-DE35- 11D2-99F F90273F0C14D WD#Micro soft   Libprary D4E493-E PTEMP \VBE\ CvN@SalCv 2DF8D04C -5BFA-10 1B-BDE5 gram FilXes\ SO97.DLLCHi ThisDoc@ument h@6sD SNewMaEAbjbjt+t+ EFI Developer s Guide Version 0.997  May 4 December 21, 20008 THIS SPECIFICATION IS PROVIDED "AS IS" WITH NO WARRANTIES  WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY,  FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE.  A license is hereby granted to copy and reproduce this specification for internal use only. No other license, express or implied, by estoppel or otherwise, to any other intellectual property rights is granted herein. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to implementation of information in this specification.  Intel does not warrant or represent that such implementation(s) will not infringe such rights.  Third-party trademarks are the property of their respective owners. Copyright ( 1999. Intel Corporation, All Rights Reserved. Revision History Revision Revision History Author Initial review draft 5/3/99 Intel Corporation Updated for the 0.91 Sample Implementation 7/14/99 Intel Corporation Updated for the 0.91.009 Sample Implementation 11/18/99 Intel Corporation Updated for the 0.99.12.20 Sample Implementation 05/04/00 Intel Corporation Table of Contents  TOC \o \t  "1-4, AppHeading1,1, AppHeading2,2" 1 Introduction  PAGEREF _Toc482076405 \h  Organization of this Document  PAGEREF _Toc482076406 \h  Goals  PAGEREF _Toc482076407 \h  Target Audience  PAGEREF _Toc482076408 \h  Prerequisite Specifications  PAGEREF _Toc482076409 \h  Conventions Used in This Document  PAGEREF _Toc482076410 \h  1.5.1 Typographic Conventions  PAGEREF _Toc482076411 \h  2 EFI Shell  PAGEREF _Toc482076412 \h  Invocation of the EFI Shell  PAGEREF _Toc482076413 \h  EFI Shell Command Syntax  PAGEREF _Toc482076414 \h  2.2.1 Variable Substitution  PAGEREF _Toc482076415 \h  2.2.2 Wildcard Expansion  PAGEREF _Toc482076416 \h  2.2.3 Output Redirection  PAGEREF _Toc482076417 \h  2.2.4 Quoting  PAGEREF _Toc482076418 \h  2.2.5 Execution of Batch Scripts  PAGEREF _Toc482076419 \h  2.2.6 Error Handling in Batch Scripts  PAGEREF _Toc482076420 \h  2.2.7 Comments in Script Files  PAGEREF _Toc482076421 \h  EFI Shell Commands  PAGEREF _Toc482076422 \h  2.3.1  PAGEREF _Toc482076423 \h  2.3.2  PAGEREF _Toc482076424 \h  2.3.3  PAGEREF _Toc482076425 \h  2.3.4 alias  PAGEREF _Toc482076426 \h  2.3.5  PAGEREF _Toc482076427 \h  2.3.6  PAGEREF _Toc482076428 \h  2.3.7  PAGEREF _Toc482076429 \h  2.3.8  PAGEREF _Toc482076430 \h  2.3.9  PAGEREF _Toc482076431 \h  2.3.10  PAGEREF _Toc482076432 \h  2.3.11  PAGEREF _Toc482076433 \h  2.3.12 pause  PAGEREF _Toc482076434 \h  2.3.13  PAGEREF _Toc482076435 \h  2.3.14 attrib  PAGEREF _Toc482076436 \h  2.3.15  PAGEREF _Toc482076437 \h  2.3.16  PAGEREF _Toc482076438 \h  2.3.17  PAGEREF _Toc482076439 \h  2.3.18  PAGEREF _Toc482076440 \h  2.3.19  PAGEREF _Toc482076441 \h  2.3.20  PAGEREF _Toc482076442 \h  2.3.21 hexedit  PAGEREF _Toc482076443 \h  2.3.22  PAGEREF _Toc482076444 \h  2.3.23  PAGEREF _Toc482076445 \h  2.3.24 memmap  PAGEREF _Toc482076446 \h  2.3.25 mkdir  PAGEREF _Toc482076447 \h  2.3.26  PAGEREF _Toc482076448 \h  2.3.27 nshell  PAGEREF _Toc482076449 \h  2.3.28  PAGEREF _Toc482076450 \h  2.3.29  PAGEREF _Toc482076451 \h  2.3.30  PAGEREF _Toc482076452 \h  2.3.31  PAGEREF _Toc482076453 \h  2.3.32  PAGEREF _Toc482076454 \h  2.3.33  PAGEREF _Toc482076455 \h  2.3.34  PAGEREF _Toc482076456 \h  2.3.35 dmpstore  PAGEREF _Toc482076457 \h  2.3.36  PAGEREF _Toc482076458 \h  2.3.37 getmtc  PAGEREF _Toc482076459 \h  2.3.38  PAGEREF _Toc482076460 \h  2.3.39  PAGEREF _Toc482076461 \h  2.3.40  PAGEREF _Toc482076462 \h  2.3.41 reset  PAGEREF _Toc482076463 \h  2.3.42 setsize  PAGEREF _Toc482076464 \h  2.3.43 stall  PAGEREF _Toc482076465 \h  2.3.44 touch  PAGEREF _Toc482076466 \h  3 Writing EFI Shell Commands  PAGEREF _Toc482076467 \h  Writing a Shell Command  PAGEREF _Toc482076468 \h  Compiling a Shell Command  PAGEREF _Toc482076469 \h  Adding Commands to the EFI Shell  PAGEREF _Toc482076470 \h  Removing Commands from the EFI Shell  PAGEREF _Toc482076471 \h  4 EFI Applications  PAGEREF _Toc482076472 \h  Writing EFI Applications  PAGEREF _Toc482076473 \h  Compiling EFI Applications  PAGEREF _Toc482076474 \h  Writing EFI Applications with EFI Library Support  PAGEREF _Toc482076475 \h  Running EFI Applications  PAGEREF _Toc482076476 \h  5 EFI OS Loaders  PAGEREF _Toc482076477 \h  Device Path and Image Information of the OS Loader  PAGEREF _Toc482076478 \h  Accessing Files in the Device Path of the OS Loader  PAGEREF _Toc482076479 \h  Finding the OS Partition  PAGEREF _Toc482076480 \h  Getting the Current System Configuration  PAGEREF _Toc482076481 \h  Getting the Current Memory Map  PAGEREF _Toc482076482 \h  Getting Environment Variables  PAGEREF _Toc482076483 \h  Transitioning to an OS Kernel  PAGEREF _Toc482076484 \h  A EFI Boot Time Services  PAGEREF _Toc482076485 \h  Event Services  PAGEREF _Toc482076486 \h  Memory Allocation Services  PAGEREF _Toc482076487 \h  Protocol Handler Services  PAGEREF _Toc482076488 \h  Image Services  PAGEREF _Toc482076489 \h  Miscellaneous Services  PAGEREF _Toc482076490 \h  B EFI Run Time Services  PAGEREF _Toc482076491 \h  Variable Services  PAGEREF _Toc482076492 \h  Time Services  PAGEREF _Toc482076493 \h  Virtual Memory Services  PAGEREF _Toc482076494 \h  Miscellaneous Services  PAGEREF _Toc482076495 \h  C EFI Protocol Interfaces  PAGEREF _Toc482076496 \h  Device Path Protocol  PAGEREF _Toc482076497 \h  Device I/O Protocol  PAGEREF _Toc482076498 \h  Simple Input Protocol  PAGEREF _Toc482076499 \h  Simple Text Output Protocol  PAGEREF _Toc482076500 \h  Block I/O Protocol  PAGEREF _Toc482076501 \h  Disk I/O Protocol  PAGEREF _Toc482076502 \h  Simple File System Protocol  PAGEREF _Toc482076503 \h  File System Protocol  PAGEREF _Toc482076504 \h  Load File Protocol  PAGEREF _Toc482076505 \h  Loaded Image Protocol  PAGEREF _Toc482076506 \h  Serial I/O Protocol  PAGEREF _Toc482076507 \h  Unicode Collation Protocol  PAGEREF _Toc482076508 \h  PXE I/O Protocol  PAGEREF _Toc482076509 \h  Simple Network Protocol  PAGEREF _Toc482076510 \h  D EFI Library Functions and Macros  PAGEREF _Toc482076511 \h  Initialization Functions  PAGEREF _Toc482076512 \h  Linked List Support Macros  PAGEREF _Toc482076513 \h  String Functions  PAGEREF _Toc482076514 \h  Memory Support Functions  PAGEREF _Toc482076515 \h  CRC Support Functions  PAGEREF _Toc482076516 \h  Text I/O Functions  PAGEREF _Toc482076517 \h  Math Functions  PAGEREF _Toc482076518 \h  Spin Lock Functions  PAGEREF _Toc482076519 \h  Handle and Protocol Support Functions  PAGEREF _Toc482076520 \h  File I/O Support Functions  PAGEREF _Toc482076521 \h  Device Path Support Functions  PAGEREF _Toc482076522 \h  PCI Functions and Macros  PAGEREF _Toc482076523 \h  Miscellaneous Functions and Macros  PAGEREF _Toc482076524 \h  E Sample OS Loader Listing  PAGEREF _Toc482076525 \h  F Sample OS Loader Output  PAGEREF _Toc482076526 \h  Tables  TOC \t "TableTitle,2"  Table 1-1. Specification Organization and Contents  PAGEREF _Toc482076527 \h  Table 2-1. Wildcard Character Expansion  PAGEREF _Toc482076528 \h  Table 2-2. Output Redirection Syntax  PAGEREF _Toc482076529 \h  Table 2-3. List of Internal EFI Shell Commands  PAGEREF _Toc482076530 \h  Table 2-4. List of External EFI Shell Commands  PAGEREF _Toc482076531 \h  Table 2-5. List of Debug EFI Shell Commands  PAGEREF _Toc482076532 \h  Table A-1. Event Services  PAGEREF _Toc482076533 \h  Table A-2. Memory Allocation Services  PAGEREF _Toc482076534 \h  Table A-3. Protocol Handler Services  PAGEREF _Toc482076535 \h  Table A-4. Image Services  PAGEREF _Toc482076536 \h  Table A-5. Miscellaneous Services  PAGEREF _Toc482076537 \h  Table B-1. Variable Services  PAGEREF _Toc482076538 \h  Table B-2. Time Services  PAGEREF _Toc482076539 \h  Table B-3. Virtual Memory Services  PAGEREF _Toc482076540 \h  Table B-4. Miscellaneous Services  PAGEREF _Toc482076541 \h  Table C-2. Device I/O Protocol Interfaces  PAGEREF _Toc482076542 \h  Table C-3. Simple Input Protocol Interfaces  PAGEREF _Toc482076543 \h  Table C-4. Simple Text Output Protocol Interfaces  PAGEREF _Toc482076544 \h  Table C-5. Block I/O Protocol Interfaces  PAGEREF _Toc482076545 \h  Table C-6. Disk I/O Protocol Interfaces  PAGEREF _Toc482076546 \h  Table C-7. Simple File System Protocol Interfaces  PAGEREF _Toc482076547 \h  Table C-8. File System Protocol Interfaces  PAGEREF _Toc482076548 \h  Table C-9. Load File Protocol Interfaces  PAGEREF _Toc482076549 \h  Table C-10. Loaded Image Protocol Interfaces  PAGEREF _Toc482076550 \h  Table C-11. Serial I/O Protocol Interfaces  PAGEREF _Toc482076551 \h  Table C-12. Unicode Collation Protocol Interfaces  PAGEREF _Toc482076552 \h  Table C-13. PXE I/O Protocol Interfaces  PAGEREF _Toc482076553 \h  Table C-14. Simple Network Protocol Interfaces  PAGEREF _Toc482076554 \h  Table D-1. Initialization Functions  PAGEREF _Toc482076555 \h  Table D-2. Linked List Support Macros  PAGEREF _Toc482076556 \h  Table D-3. String Functions  PAGEREF _Toc482076557 \h  Table D-4. Memory Support Functions  PAGEREF _Toc482076558 \h  Table D-5. CRC Support Functions  PAGEREF _Toc482076559 \h  Table D-6. Text I/O Functions  PAGEREF _Toc482076560 \h  Table D-7. Math Functions  PAGEREF _Toc482076561 \h  Table D-8. Spin Lock Functions  PAGEREF _Toc482076562 \h  Table D-9. Handle and Protocol Support Functions  PAGEREF _Toc482076563 \h  Table D-10. File I/O Support Functions  PAGEREF _Toc482076564 \h  Table D-11. Device Path Support Functions  PAGEREF _Toc482076565 \h  Table D-12. Miscellaneous Functions and Macros  PAGEREF _Toc482076566 \h  Table D-13. Miscellaneous Functions and Macros  PAGEREF _Toc482076567 \h  Introduction seq chapter \r1 The Extensible Firmware Interface (EFI) Specification describes a set of Application Program Interfaces (APIs) and data structures that are exported by a system s firmware.  Software that takes advantage of these APIs and data structures may take one of many forms.  These include an EFI device driver, an EFI shell, an EFI system utility, an EFI system diagnostic, or an Operating System (OS)  loader.  In addition, the EFI Specification describes a set of run-time services that are available to an OS while the OS has full control of the system. The sample implementation of the EFI Specification includes an EFI Shell.  An EFI Shell is a special type of EFI Application that allows other EFI Applications to be launched.  The combination of the EFI firmware and the EFI Shell provide an environment that can be modified to easily adapt to many different hardware configurations.  The EFI shell is a simple, interactive environment that allows EFI device drivers to be loaded, EFI applications to be launched, and operating systems to be booted.  In addition, the shell also provides a set of basic commands used to  manage files and the system environment variables. An EFI application has access to the APIs and data structures exported by the EFI firmware.  An EFI application may be any number of things including a system utility, a system diagnostic, or an OS loader.  Many of the EFI Shell commands are implemented as EFI applications. An OS loader is a special type of EFI application because it typically will load a number of other files related to the OS  into memory, and then transfer control an OS kernel.  During this process, the OS loader may collect the system s configuration information that is maintained by the EFI firmware and put it into a form that can be used by the OS kernel.  An EFI device driver provides a set of interfaces that allow communication with a hardware device.  The types of devices that are typically available in the EFI environment include keyboard, display, hard drive, network, CD-ROM, floppy, etc.  The EFI Specification provides mechanisms to add new types of device drivers to the base firmware so new types of devices can be accessed from the EFI environment and presented to the OS loader during the boot process.  These device drivers can be loaded from the system s non-volatile storage, a PCI Option ROM, or any system device that is natively supported by the EFI environment.  Device drivers are very similar to EFI applications.  They have the same access to all the APIs and data structures.  The main difference is that they typically add a set of interfaces that provide access to a hardware device.  When the device driver exits, the EFI device driver stays resident in memory, so those interfaces may be used by other types of EFI applications to access the hardware device. The sample implementation of the EFI firmware and the EFI shell includes a set of library functions and macros.  These functions and macros represent one possible minimal implementation of the EFI environment.  Together, the EFI APIs and EFI library functions, provide the functionality required for basic console I/O, basic disk I/O, memory management, and string manipulation.  The EFI library also provides functions for 64-bit math operations, CRC checks, spin locks, and helper functions to manage device handle, device protocol, and device paths.  The appendices in this document contain a complete list of the APIs, library functions, and library macros that are available to an EFI developer.  Please refer to the appropriate specification for complete details on all the APIs and macros. Organization of this Document This specification is organized as follows:  XE "organization, document"   XE "contents, document"   Table 1-1.1-  seq tbl \* MERGEFORMAT  Specification Organization and Contents Chapter Description Chapter 1: Introduction Introduction to EFI Development. Chapter 2: EFI Shell Booting  Overview of EFI shell commands.  Chapter 3: Writing EFI Shell Commands EFI File System Structures Describes how to write, compile, and run EFI Shell commands .  Chapter 4 : EFI Applications Describes how to write, compile, and run EFI Applications.  Chapter 5: EFI OS Loaders Describes how to write an EFI OS loader. Appendix A: EFI Boot Time Services List and high level description of EFI Boot Time Services. Appendix B: EFI Run Time Services List and high level description of EFI Run Time Services. Appendix C: EFI Protocol Interfaces List and high level description of EFI Protocol Interfaces. Appendix D: EFI Library Overview List and high level description of EFI Library functions. Appendix E: Sample OS Loader Listing C source code to OS Loader sample. Appendix F 5: Sample OS Loader Output Output from OS Loader sample. Goals The primary goal of  this document is to provide an overview of the EFI environment and its capabilities. This includes using the EFI shell, writing EFI applications, and writing EFI device drivers. Target Audience This document is intended for the following readers:  XE "target audience"  Developers who will be utilizing and writing applications, including tests and diagnostics, OS loaders, and device drivers for the EFI environment. Prerequisite Specifications Extensible Firmware Interface Specification Version 0.9, Intel Corporation, 1999. EFI Library Specification Version 0.9, Intel Corporation , 1999. Conventions Used in This Document This document uses typographic and illustrative conventions described below.  XE "conventions, document"   XE "little endian"  Typographic Conventions  XE "typographic conventions"  The following typographic conventions are used in this document to illustrate programming concepts: Prototype This typeface is use to indicate prototype code. Argument This typeface is used to indicate arguments. This typeface is used to indicate actual code or a programming construct. register This typeface is used to indicate a processor register. EFI Shell This section describes the features of the EFI Shell.  The EFI Shell supports a command line interface, batch scripting, a set of internal shell commands, and a set of external shell commands. Invocation of the EFI Shell When the EFI Shell is invoked, it first looks for commands in the file startup.nsh on the execution path defined by the environment.  There is no requirement for a startup file to exist. Once the startup file commands are completed, the shell looks for commands from console input device. EFI Shell Command Syntax The EFI Shell implements a programming language that provides control over the execution of individual commands.  When the shell scans its input, it always treats certain characters specially: (#, >, %, *, ?, [, ^, space, and newline). Care should be exercised in the use of these characters. When a command contains a defined alias the shell replaces the alias with its definition (see alias command in this chapter).  If the argument is prefixed with the ^ character, however, the argument is treated as a literal argument and alias processing is not performed. In interactive execution, the shell performs variable substitution, then expands wildcards before the command is executed.  In batch script execution, the shell performs argument substitution, then variable substitution, then expands wildcards before the command is executed. Variable Substitution Environment variables can be set and viewed through the use of the set command (see set command in this chapter).  To access the value of an environment variable as an argument to a shell command, delimit the name of the variable with the % character before and after the variable name; for example, %myvariable%. The shell maintains a special variable, named lasterror.  The variable contains the return code of the most recently executed shell command. Wildcard Expansion The * , ? and [ characters can be used as wildcard characters in filename arguments to shell commands.  If an argument contains one or more of these characters, the shell processes the argument for file meta-arguments and expands the argument list to include all filenames matching the pattern.  These characters are part of patterns which represent file and directory names. Table 2-1. Wildcard Character Expansion Character Sequence Meaning Matches zero or more characters in a file name Matches exactly one character of a file name "[chars]" Defines a set of characters; the pattern matches any single character in the set. Characters in the set are not separated.  Ranges of characters can be specified by specifying the first character in a range, then the   character, then the last character in the range.  Example: [a-zA-Z] Output Redirection Output of EFI Shell commands can be redirected to files. The syntax of this is as follows: Command > unicode_output_file_pathname Command >a ascii_output_file_pathname Command 1> unicode_output_file_pathname Command 1>a ascii_output_file_pathname Command 2> unicode_output_file_pathname Command 2>a ascii_output_file_pathname Command >> unicode_output_file_pathname Command >>a ascii_output_file_pathname Command 1>> unicode_output_file_pathname Command 1>>a ascii_output_file_pathname The meanings of the special character sequences used to denote output redirection are shown in Table 2-1. Table 2-2. Output Redirection Syntax Character Sequence Meaning redirect standard output to a unicode file redirect standard output to an ascii file redirect standard output to a unicode file "1>a" redirect standard output to an ascii file redirect standard error to unicode file "2>a" redirect standard error to ascii file redirect standard output appended to a unicode file ">>a" redirect standard output appended to an ascii file "1>>" redirect standard output appended to a unicode file "1>>a" redirect standard output appended to an ascii file The shell will redirect standard output to a single file and standard error to a single file.  Redirecting both standard output and standard error to the same file is allowed.  Redirecting Standard output to more than one file on the same command is not supported.  Similarly, redirecting to multiple files is not supported for standard error. Quoting Quotation marks in the EFI Shell are used for argument grouping. A quoted string is treated as a single argument to a command, and any whitespace characters included in the quoted string are just part of that single argument.  Quoting an environment variable does not have any effect on the de-referencing of that variable.  Double quotation marks   are used to denote strings.  Single quotation marks are not treated specially by the shell in any way.  Empty strings are treated as valid command line arguments. Execution of Batch Scripts The EFI Shell has the capability of executing commands from a file (batch script).  EFI Shell batch script files are named using the   extension.  Batch script files can be either UNICODE or ASCII format files.  EFI Shell script files are invoked by entering the filename at the command prompt, with or without the filename extension. Up to nine (9) positional arguments are supported for batch scripts.  Positional argument substitution is performed before the execution of each line in the script file.  Positional arguments are denoted by %n, where n is a digit between 0 and 9.  By convention, %0 is the name of the script file currently being executed.  In batch scripts, argument substitution is performed first, then variable substitution.  Thus, for a variable containing %2, the variable will be replaced with the literal string %2, not the second argument on the command line. If no real argument is found to substitute for a positional argument, then the positional argument is ignored. Script file execution can be nested; that is, script files may be executed from within other script files.  Recursion is allowed. Output redirection is fully supported.  Output redirection on a command in a script file causes the output for that command to be redirected.  Output redirection on the invocation of a batch script causes the output for all commands executed from that batch script to be redirected to the file, with the output of each command appended to the end of the file. By default, both the input and output for all commands executed from a batch script are echoed to the console.  Display of commands read from a batch file can be suppressed via the echo -off command (see echo).   If output for a command is redirected to a file, then that output is not displayed on the console.  Note that commands executed from a batch script are not saved by the shell for DOSkey history (up-arrow command recall). Error Handling in Batch Scripts By default, if an error is encountered during the execution of a command in a batch script, the script will continue to execute.  The lasterror shell variable is provided allow batch scripts to test the results of the most recently executed command using the if command.  This variable is not an environment variable, but is a special variable maintained by the shell for the lifetime of that instance of the shell. Comments in Script Files Comments can be embedded in batch scripts.  The # character on a line is used to denote that all characters on the same line and to the right of the # are to be ignored by the shell.  Comments are not echoed to the console. EFI Shell Commands There are two types of commands available with the shell:  internal commands and external commands.  Internal commands are part of the EFI shell image, while external commands are stand-alone EFI applications.  Note: This allows users to add their own user-defined commands. The user may also run an EFI application by entering the name of the application at the command prompt.  In addition, the active drive may be changed by entering the mapped name followed by a   at the command prompt. Table 2-3. List of Internal EFI Shell Commands Command Built-in Description Displays the list of available commands Displays the list of Globally Unique Identifiers. Displays, sets, or deletes environment variables. Alias Define as alias for an EFI command or an EFI application. Displays information on the protocol handles. Maps a user defined name to a protocol handle. Sets the working directory for the EFI shell environment. Toggle console output or write text to the console For / endfor Control flow construct: Looping (script-only) If / endif Control flow construct: Conditional execution (script-only) Control flow construct: Jump (script-only) Pause Pause for keyboard input; exit on   (script-only) Exit the shell  Table 2-4. List of External EFI Shell Commands Command Built-in Description Attrib Get/Set file attributes. Manage boot and driver environment variables. Clear the standard output device. Compare two files. Copy a file. Get/Set the system's date. Unicode/ASCII text editor. Hexedit Hex editor Load an EFI Device Driver. Displays the contents of a directory. Memmap Displays the memory map. Mkdir Creates a new directory. Changes the display mode of the standard output device. Move a file from one location to another on a disk. Nshell Invoke another EFI Shell. Reset Reset the system. Deletes a file or a directory. Displays contents of a text file. Get/Set the system's time. Display version information on the EFI firmware. Get/Set volume information on a disk. Table 2-5. List of Debug EFI Shell Commands Command Built-in Description Display a block from a block device. Display the contents of memory. Dmpstore Display all the environment variables and their values. Set the current debug error level. Getmtc Display the value of the monotonic counter Perform an PCI I/O, PCI Memory, PCI Configuration, or MMIO cycle. Display all the PCI devices in the system. Setsize Set the size of a file. Stall Stall the processor for a given number of microseconds. Touch Set the date and time of a file to the current date and time. help  help [-b] [-b]     - Display one screen at a time  The help command displays the list of commands that are built into the EFI Shell.  The following example shows the output from this command. Examples Shell> help help [internal command]        - Displays this help guid [sname]                   - Dump known guid ids set [-d] [sname] [value]       - Set/get environment variable alias [-d] [sname] [value]     - Set/get alias settings dh [-p prot_id] | [handle]     - Dump handle info map [-dvr] [sname[:]] [handle] - Map shortname to device path cd [path]                      - Updates the current directory echo [[-on | -off] | [text]    - Echo text to stdout or toggle script echo if [not] condition then        - Script-only: Condition is "string1 == string2"  or "exist file" endif                          - Script-only: Terminate effect of if command goto label                     - Script-only: Jump to label location in script for var in <set>               - Script-only: loop construct endfor                         - Script-only: delimiter for loop construct pause                          - Script-only: prompt to quit or continue Shell> guid  guid [-b] [-b]     - Display one screen at a time  This command displays a list of all the GUIDs that have been registered with the EFI environment.  The following example shows the output from this command. Examples Shell> guid   DevIo           : AF6AC311-84C3-11D2-8E3C-00A0C969723B   diskio          : CE345171-BA0B-11D2-8E4F-00A0C969723B   blkio           : 964E5B21-6459-11D2-8E39-00A0C969723B  *   txtin           : 387477C1-69C7-11D2-8E39-00A0C969723B   txtout          : 387477C2-69C7-11D2-8E39-00A0C969723B  *   fs              : 964E5B22-6459-11D2-8E39-00A0C969723B   load            : 56EC3091-954C-11D2-8E3F-00A0C969723B   image           : 5B1B31A1-9562-11D2-8E3F-00A0C969723B  *   varstore        : F088CD91-A046-11D2-8E42-00A0C969723B   dpath           : 09576E91-6D3F-11D2-8E39-00A0C969723B  *   unicode         : 1D85CD7F-F43D-11D2-9A0C-0090273FC14D   pxe             : 01949C4C-9496-11D2-85E1-00A0C93EC93B   ShellInt        : 47C7B223-C42A-11D2-8E57-00A0C969723B   SEnv            : 47C7B224-C42A-11D2-8E57-00A0C969723B   ShellProtId     : 47C7B226-C42A-11D2-8E57-00A0C969723B   ShellDevPathMap : 47C7B225-C42A-11D2-8E57-00A0C969723B   ShellAlias      : 47C7B227-C42A-11D2-8E57-00A0C969723B   G0              : 00000000-0000-0000-0000-000000000000   Efi             : 8BE4DF61-93CA-11D2-AA0D-00E098032B8C   GenFileInfo     : 09576E92-6D3F-11D2-8E39-00A0C969723B   FileSysInfo     : 09576E93-6D3F-11D2-8E39-00A0C969723B   PcAnsi          : E0C14753-F9BE-11D2-9A0C-0090273FC14D   Unknown Device  : CF31FAC5-C24E-11D2-85F3-00A0C93EC93B   g1              : 43D66E51-AD78-11D2-8E4B-00A0C969723B   g2              : 386F4BBC-7782-11D2-85D6-00A0C93EC93B   g3              : EFE309D1-ACA9-11D2-85E2-00A0C93EC93B Shell> set [-d] [-b] [sname] [value] [-d]     - Delete the environment variable  [-b]     - Display one screen at a time  [sname]  - Environment variable name [value]  - Environment variable value This command is used maintain the environment variables that are available from the EFI environment.  This command can display the environment variables, create new environment variables, change the value of existing environment variables, or delete environment variables.  The set command will set the environment variable specified by sname to value.  This form of the command can be used to create a new environment variable, or to modify an existing environment variable.  If the set command is used without any parameters, then all the environment variables are displayed.  If the set command is used with the  d option, then the environment variable specified by sname will be deleted.  The following examples show how this command can be used to create, modify, and delete the environment variable DiagnosticPath. Examples Shell> set   path : fs0:\efi\tools;fs0:\;. Shell> set DiagnosticPath fs0:\efi\diag Shell> set   path           : fs0:\efi\tools;fs0:\;.   DiagnosticPath : fs0:\efi\diag Shell> set DiagnosticPath fs0:\efi\diag;fs1:\efi\diag Shell> set   path           : fs0:\efi\tools;fs0:\;.   DiagnosticPath : fs0:\efi\diag;fs1:\efi\diag Shell> set  d DiagnosticPath  Shell> set   path : fs0:\efi\tools;fs0:\;. Shell> alias  alias [-d] [-b] [sname] [value] [-d]     - Delete the alias [-b]     - Display one screen at a time  [sname]  - Alias name [value]  - EFI command or EFI application This command displays, creates, or deletes aliases in the EFI shell environment.  An alias provides a new name for an existing EFI shell command or an EFI application.  Once the alias is created, it can be used to run the command or launch the EFI application.  There are some aliases that are predefined in the EFI shell environment.  These aliases provide the DOS and UNIX equivalent names for the file manipulation commands. The examples below show the default aliases available in the EFI shell environment, and an example of how to create and delete a new alias for the guid command. Examples Shell> alias   dir  : ls   md   : mkdir   rd   : rm   del  : rm   copy : cp Shell> alias myguid guid Shell> alias   dir    : ls   md     : mkdir   rd     : rm   del    : rm   copy   : cp   myguid : guid Shell> alias  d myguid Shell> alias   dir  : ls   md   : mkdir   rd   : rm   del  : rm   copy : cp dh [-p prot_id] [-b] | [handle] [-p prot_id]  - Protocol to dump [-b]          - Display one screen at a time  [handle]      - Handle number to dump This command displays the device handles in the EFI environment.  When the dh command is used without any parameters, a list of all the device handles in the EFI environment is displayed.  A single device handle can contain one or more protocol instances.  If the dh command is used with a specific handle number, the details of all the protocols associated with that device handle are displayed.  If the  p option is used, the list of device handles containing a specific protocol will be displayed.  The following examples show how the dh command can be used.  The first example displays all the device handles in a system.  The second example displays all the device handles with a file system protocol, and the third example displays the details of the device handle for the floppy drive. Examples Shell> dh   1: varstore    2: varstore    3: Image(dskio)    4: Image(pblkio)    5: Image(fat)    6: DevIo DevPath()   7: unicode    8: txtin DevPath(..,0)/Pci(0|0)/Acpi(PNP0303,0))   9: txtout DevPath(Acpi(PNP0A03,0)/Pci(3|0))   A: diskio blkio fs DevPath(..,0)/Pci(0|0)/Acpi(PNP0604,0))   B: diskio blkio DevPath(VenHw(Unknown Device:80))   C: diskio blkio fs DevPath(..vice:80)/HD(Part1,Sig1-F4A3))   D: diskio blkio DevPath(..vice:80)/HD(Part2,Sig1-F4A3))   E: diskio blkio fs DevPath(..,Sig1-F4A3)/HD(Part1,Sig1-0))   F: diskio blkio DevPath(..,Sig1-F4A3)/HD(Part2,Sig1-0))  10: diskio blkio fs DevPath(..rt2,Sig1-0)/HD(Part1,Sig1-0))  11: varstore DevPath(..0|0)/Acpi(PNP0604,0)/BootStr)  12: Image(ramdisk)   13: diskio blkio DevPath(VenMsg(g1))  14: Image(bootmgr)   15: Image(shellenv.efi)   16: Image(nshell) ShellInt  Shell> dh    A: diskio blkio fs DevPath(..,0)/Pci(0|0)/Acpi(PNP0604,0))   C: diskio blkio fs DevPath(..vice:80)/HD(Part1,Sig1-F4A3))   E: diskio blkio fs DevPath(..,Sig1-F4A3)/HD(Part1,Sig1-0))  10: diskio blkio fs DevPath(..rt2,Sig1-0)/HD(Part1,Sig1-0)) Shell> dh A Handle 0A (07FC6E08)    diskio     blkio Fixed MId:1 bsize 200, lblock B40 (1,474,560), raw rw cached    fs     dpath        PNP Device Path for PnP        HID A0341D0, UID 0       Hardware Device Path for PCI       PNP Device Path for PnP        HID 60441D0, UID 0    AsStr: 'Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)' Shell> map [-dvrb] [sname] [handle] [-d]      - Delete a mapping [-v]      - Verbose listing of mappings [-r]      - Reset to default mappings [-b]      - Display one screen at a time  [sname]   - A user defined name for the mapping [handle]  - The handle number from the dh command This command is used to define a mapping between a user defined name and a device handle.  The most common use of this command is to assign drive letters to device handles that support a file system protocol.  Once these mappings are created, the drive letters can be used with all the file manipulation commands.  The EFI shell environment creates default mappings for all the device handles that support a recognized file systems.  The floppy drive is typically fs0, and hard drive partitions with recognized file systems are typically fs1, fs2,  , fsn.  This command can be used to create additional mappings, or it can be used to delete an existing mapping with the  -d option.  If the map command is used without any parameters, all the current mappings will be listed.  If the  v option is used, the mappings will be shown with additional information on each mapped handle.  The -r option is used to regenerate all the mappings in a system.  This is useful if the system configuration has changed since the last boot.  The following examples show how to create a new mapping of D: for the first hard drive partition that supports the file system protocol  Please refer to the list of handles in the example for the dh command. Examples Shell> map Device mapping table   fs0  : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk0 : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk1 : VenHw(Unknown Device:80)   blk2 : VenHw(Unknown Device:80)/HD(Part1,Sig1-B3C8)   blk3 : VenHw(Unknown Device:80)/HD(Part2,Sig1-B3C8)   blk4 : VenHw(Unknown Device:80)/HD(Part3,Sig1-B3C8)   blk5 : VenMsg(g1)   fs1  : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)   fs2  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part1,Sig1-0)   fs3  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part2,Sig1-0)/HD(Part1,Sig1-0) Shell> map D C Shell> map Device mapping table   fs0  : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk0 : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk1 : VenHw(Unknown Device:80)   blk2 : VenHw(Unknown Device:80)/HD(Part1,Sig1-B3C8)   blk3 : VenHw(Unknown Device:80)/HD(Part2,Sig1-B3C8)   blk4 : VenHw(Unknown Device:80)/HD(Part3,Sig1-B3C8)   blk5 : VenMsg(g1)   fs1  : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)   fs2  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part1,Sig1-0)   fs3  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part2,Sig1-0)/HD(Part1,Sig1-0)   D    : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3) Shell> map    D    : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)        = Handle  C: diskio blkio fs         > \ Shell> map  Shell> map Device mapping table   fs0  : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk0 : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk1 : VenHw(Unknown Device:80)   blk2 : VenHw(Unknown Device:80)/HD(Part1,Sig1-B3C8)   blk3 : VenHw(Unknown Device:80)/HD(Part2,Sig1-B3C8)   blk4 : VenHw(Unknown Device:80)/HD(Part3,Sig1-B3C8)   blk5 : VenMsg(g1)   fs1  : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)   fs2  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part1,Sig1-0)   fs3  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part2,Sig1-0)/HD(Part1,Sig1-0) cd [path] This command changes the current working directory used by the EFI shell environment.  The following example shows how to move between the directories on a floppy drive containing an EFI directory, and a TOOLS subdirectory below the EFI directory.  The EFI shell environment uses the directory name   to refer to the current directory, and the directory name   to refer to the directory s parent. Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> cd .. fs0:\> cd efi\tools fs0:\efi\tools\> cd \ fs0:> echo [-on | -off] echo [text] The first form of the echo command controls whether or not batch commands are displayed as they are read from the batch file.  If no argument is given the current   status is displayed. The second form prints the given message to the display.  Wildcard substitution is performed on the second form of the command. Examples Shell> echo Echo is on. Shell> echo  Shell> echo Hello world Hello world Shell> echo Loop count is %c for this iteration Loop count is 42 for this iteration Shell> for %indexvar in set command [arguments] [command [arguments]] endfor The for command executes one or more commands for each item in a set of items. The set may be text strings or filenames or a mixture of both, separated by spaces. Wildcards in filenames are expanded before command is executed. Indexvar is any single printable character, but it should not be a digit (0-9) because %digit will be interpreted as a positional argument (see  Execution of Batch Scripts ).  The namespace for index variables is separate from that for environment variables, so if indexvar has the same name as an existing environment variable, the environment variable will remain unchanged by the for loop.  Each command is executed once for each item in the set, with any occurrence of %indexvar in the command replaced with the current item. The for command is available only in batch scripts. Examples #  Sample for loop   type contents of all .txt files for %a in *.txt     type %a    echo ===== %a done ===== endfor if [not] exist filename then command [arguments] endif if [not] string1 == string2 then  command [arguments] [command [arguments]] endif The if command executes one or more commands if the specified condition is true, unless the not keyword is given, in which case the command is executed if the condition is false. The exist condition is true if filename exists. The filename argument may include device and path information.  Wildcard expansion is supported for the exist form of the command.  If more than one file matches the wildcard pattern, the condition evaluates to TRUE.  The string1 == string2 condition is true if the two strings are identical. The if command is available only in batch scripts. Examples #  Example script for   command if exist fs0:\myscript.sc then myscript myarg1 myarg2 endif if %myvar% == runboth then myscript1 myscript2 endif goto label The goto command directs batch file execution to the line in the batch file after the given label. The command is not supported from the interactive shell.  A label is a line beginning with a colon (:). The search for label is done forward in the batch file. If the end of the file is reached, the search resumes at the top of the file and continues until label is found or the starting point is reached. If label is not found, the batch process terminates and an error message is displayed. When not searching for the target of a goto command, the shell reads label lines and ignores them. The goto command is available only in batch scripts. The following example shows the use of this command. Examples # This is a batch script goto Done :Done cleanup.nsh pause pause The pause command prints a message to the display and then suspends batch file execution and waits for keyboard input. Pressing any key resumes execution, except for q or Q.  If q or Q is pressed, batch processing terminates; otherwise execution continues with the next line after the pause command. The pause command is available only in batch scripts. The following example shows the use of this command. Examples +script.nsh> pause  to quit, any other key to continue: fs0:>  exit  This command exits the EFI Shell environment and returns control to the EFI application that launched the EFI Shell. Examples Shell> exit  attrib attrib [+a|-a] [+s|-s] [+h|-h] [+r|-r] [-b] file [+a|-a]    - Set or clear the archive attribue [+s|-s]    - Set or clear the system attribute [+h|-h]    - Set or clear the hidden attribute [+r|-r]    - Set or clear the read only attribute [-b]       - Display one screen at a time  Displays or sets file attributes.  There are four attribute types that are supported for the EFI File System.  These are archive[A], system[S], hidden[H], and read only[R].  If a file is a directory, then it is also shown to have the attribute [D].       Examples Shell> attrib fs0:\ DA SH  fs0:\efi  A     fs0:\cp.efi  A     fs0:\date.efi  A     fs0:\dblk.efi Shell> attrib -a +r fs0:\cp.efi      R fs0:\cp.efi Shell> attrib fs0:\ DA SH  fs0:\efi      R fs0:\cp.efi  A     fs0:\date.efi  A     fs0:\dblk.efi bcfg  bcfg driver|boot [dump [-v]] [add # file  ] [rm #] [mv # #] driver selects boot driver list selects boot option list dump selected list dumps verbose including load options  with   at position # remove # move # to # Manages the boot and driver options stored in NVRAM.  This command can display the Boot#### or Driver#### environment variables by using the dump option.  The add option can be used to add a new Boot#### or Driver#### environment variable.  The rm option can be used to delete a Boot#### or Driver#### environment variable, and finally, then mv option can be used to reorder the Boot#### and Driver#### environment variables.  The add, rm, and mv options also update the BootOrder or DriverOrder environment variables as appropriate. Examples Shell> bcfg boot dump The boot option list is: Shell> bcfg driver dump The boot driver list is: Shell> fs0: fs0:\> bcfg boot add 1 osloader.efi  EFI OS Loader fs0:\> bcfg boot add 2 foo.efi  fs0:\> bcfg boot add 3 bar.efi  fs0:\> bcfg boot dump The boot option list is: Acpi(PNP0700,0)/\osloader.efi  EFI OS Loader Acpi(PNP0700,0)/\foo.efi  Acpi(PNP0700,0)/\bar.efi  fs0:\> bcfg boot mv 1 4 fs0:\> bcfg boot dump The boot option list is: Acpi(PNP0700,0)/\foo.efi  Acpi(PNP0700,0)/\bar.efi  Acpi(PNP0700,0)/\osloader.efi  EFI OS Loader fs0:\> bcfg boot rm 1  fs0:\> bcfg boot rm 1  fs0:\> bcfg boot rm 1  fs0:\> bcfg boot dump The boot option list is: comp  comp file1 file2 Compares the contents of file1 to file2.  The first 10 differences are shown before the compare operation is terminated. Examples Shell> comp fs0:\a.txt fs0:\a.txt Compare fs0:\a.txt to fs0:\a.txt Shell> comp fs0:\a.txt fs0:\b.txt Compare fs0:\a.txt to fs0:\b.txt Miscompare #1 File1: fs0:\a.txt  00000914: 20                                               * * File2: fs0:\b.txt  00000914: 42                                               *B* Miscompare #2 File1: fs0:\a.txt  00000916: 42                                               *B* File2: fs0:\b.txt  00000916: 53                                               *S* Miscompare #3 File1: fs0:\a.txt  00000918: 53                                               *S* File2: fs0:\b.txt  00000918: 5F                                               *_* cp file [file]   [dest] This command copies one or more files from one location to another location.  The following example shows how to copy the file MEMMAP.EFI in the TOOLS directory on the floppy drive to the file MM.EFI.   Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> cd tools fs0:\efi\tools\> cp memmap.efi mm.efi fs0:\efi\tools\> cls [color] color - new background color This command clears the standard output device with an optional background color attribute.  If color is not specified, then the background is cleared to black. Examples Shell> cls Shell> cls 1 date  date [mm/dd/yyyy] This command displays to sets the current date for the system.  If not parameters are used, it shows the current date.  If a valid month, day, and year are provided, then the system's date will be updated. Examples Shell> date 07/14/1999 Shell> date 07/12/1999 Shell> edit  edit [file] This command allows a file to be edited using a full screen editor.  The editor supports both Unicode and ASCII file types. Examples fs0:\> edit fs0:\> edit foo.txt hexedit  hexedit This command allows a file, block device, or memory region to be edited.  The region being edited is displayed as hexidecimal bytes, and the contents can be modified and saved Examples fs0:\> hexedit  load  load file This command loads an EFI driver. Examples Shell> load serial.efi ls [-b] [dir] [dir]  [-b]      - Display one screen at a time  This command lists all the files and subdirectories present in a directory.  If the ls command is used without any parameters, then the contents of the current working directory are displayed.  If a parameter is used, then that parameter is interpreted as a file path, and the contents of the directory specified by the file path are displayed.  The following examples show how the ls command can be used.  The first example lists the files in the current working directory fs0:\.  The second example lists the files in the EFI subdirectory.  The third example lists the files in the root directory of the first hard drive partition containing a recognized file system. Examples Shell> fs0: fs0:\> ls Directory of fs0:\   01/22/99  10:11p <DIR>            512  EFI   05/05/99  05:41p               36,924  TEST.EFI   05/06/99  01:48p               41,024  OSLOADER.EFI   05/06/99  11:00a               41,024  OSKERNEL.BIN                     3 Files      118,972 bytes                     1 Dirs           512 bytes fs0:\> ls efi Directory of fs0:\EFI 00/00/80  12:00a <DIR>            512  .   00/00/83  12:00a <DIR>              0  ..   00/00/80  12:00a               32,768  BOOTSTR                     1 File        32,768 bytes                     2 Dirs           512 bytes fs0:\> ls fs1:\ Directory of fs1:\ fs0:\> memmap  memmap [-b] [-b]      - Display one screen at a time  This command displays the memory map that is maintained by the EFI environment.  The EFI environment keeps track all the physical memory in the system and how it is currently being used.  The EFI Specification defines a set of Memory Type Descriptors.  Please see the EFI Specification for a description of how each of these memory types is used. Examples Shell> memmap Type       Start            End               # Pages          Attributes BS_data    0000000000000000-0000000000000FFF  0000000000000001 0000000000000008 available  0000000000001000-000000000001FFFF  000000000000001F 0000000000000008 BS_data    0000000000020000-0000000000021FFF  0000000000000002 0000000000000008 available  0000000000022000-0000000000089FFF  0000000000000068 0000000000000008 BS_data    000000000008A000-000000000009AFFF  0000000000000011 0000000000000008 BS_code    000000000009B000-000000000009EFFF  0000000000000004 0000000000000008 BS_data    000000000009F000-000000000009FFFF  0000000000000001 0000000000000008 BS_data    00000000000F0000-00000000000FFFFF  0000000000000010 0000000000000008 available  0000000000100000-00000000001DFFFF  00000000000000E0 0000000000000008 BS_data    00000000001E0000-00000000001FFFFF  0000000000000020 0000000000000008 available  0000000000200000-0000000000200FFF  0000000000000001 0000000000000008 BS_code    0000000000201000-0000000000215FFF  0000000000000015 0000000000000008 RT_code    0000000000216000-0000000000218FFF  0000000000000003 8000000000000008 BS_data    0000000000219000-000000000021BFFF  0000000000000003 0000000000000008 RT_data    000000000021C000-000000000021CFFF  0000000000000001 8000000000000008 BS_data    000000000021D000-000000000021DFFF  0000000000000001 0000000000000008 available  000000000021E000-0000000007E61FFF  0000000000007C44 0000000000000008 LoaderData 0000000007E62000-0000000007E62FFF  0000000000000001 0000000000000008 LoaderCode 0000000007E63000-0000000007E65FFF  0000000000000003 0000000000000008 LoaderData 0000000007E66000-0000000007E69FFF  0000000000000004 0000000000000008 available  0000000007E6A000-0000000007E6EFFF  0000000000000005 0000000000000008 LoaderData 0000000007E6F000-0000000007E6FFFF  0000000000000001 0000000000000008 BS_data    0000000007E70000-0000000007E70FFF  0000000000000001 0000000000000008 LoaderData 0000000007E71000-0000000007E75FFF  0000000000000005 0000000000000008 BS_data    0000000007E76000-0000000007E77FFF  0000000000000002 0000000000000008 LoaderData 0000000007E78000-0000000007E79FFF  0000000000000002 0000000000000008 BS_data    0000000007E7A000-0000000007E7AFFF  0000000000000001 0000000000000008 LoaderData 0000000007E7B000-0000000007E7BFFF  0000000000000001 0000000000000008 BS_data    0000000007E7C000-0000000007E85FFF  000000000000000A 0000000000000008 RT_data    0000000007E86000-0000000007E86FFF  0000000000000001 8000000000000008 BS_data    0000000007E87000-0000000007E87FFF  0000000000000001 0000000000000008 BS_code    0000000007E88000-0000000007E93FFF  000000000000000C 0000000000000008 BS_data    0000000007E94000-0000000007E99FFF  0000000000000006 0000000000000008 LoaderData 0000000007E9A000-0000000007E9BFFF  0000000000000002 0000000000000008 BS_data    0000000007E9C000-0000000007E9CFFF  0000000000000001 0000000000000008 LoaderData 0000000007E9D000-0000000007E9DFFF  0000000000000001 0000000000000008 LoaderCode 0000000007E9E000-0000000007EA1FFF  0000000000000004 0000000000000008 LoaderData 0000000007EA2000-0000000007EA4FFF  0000000000000003 0000000000000008 BS_data    0000000007EA5000-0000000007FC6FFF  0000000000000122 0000000000000008 RT_data    0000000007FC7000-0000000007FC8FFF  0000000000000002 8000000000000008 BS_data    0000000007FC9000-0000000007FCEFFF  0000000000000006 0000000000000008 RT_data    0000000007FCF000-0000000007FCFFFF  0000000000000001 8000000000000008 BS_data    0000000007FD0000-0000000007FFFFFF  0000000000000030 0000000000000008 BS_data    00000000FFFE0000-00000000FFFFFFFF  0000000000000020 0000000000000008 LoaderCode:       7 pages (28,672) LoaderData:      20 pages (81,920) BS_code   :      37 pages (151,552) BS_data   :     471 pages (1,929,216) RT_code   :       3 pages (12,288) RT_data   :       5 pages (20,480) available :  32,177 pages (131,796,992) Shell> mkdir  mkdir dir [dir]  This command creates a new directory on a file system.  The following example shows how to create the directory DIAGS below the directory EFI on the floppy drive. Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> mkdir diags fs0:\efi\> cd diags fs0:\efi\diags\> mode  mode [row col] This command is used to change the display mode for the console output device.  When this command is used without any parameters, it shows the list of modes that the standard output device currently supports.  The mode command can then be used with the row and col parameter to change the number of rows and columns on the standard output device.  The following examples show how the mode command can be used.  The first example lists all modes that are currently available, and the current selected mode is indicated by an  .  The second example changes the mode to an 80 X 50 text mode display.  The display is cleared every time the mode command is used to change the currently selected display mode. Examples Shell> mode Available modes on standard output   col  80 row  25  *   col  80 row  50   col  80 row  43   col 100 row 100   col 100 row 999 Shell> mode 80 50 Shell> nshell  nshell This command launches another copy of the EFI Shell.  This new shell inherits the environment variables of the parent shell along with the standard input device, standard output device, and the standard error device.   Examples Shell> nshell rm file|dir [file|dir]  This command deletes one or more files or directories.  The following examples show how to delete the directory created in the mkdir command example, and the file copied in the cp command example. Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> rm diags fs0:\efi\> cd tools fs0:\efi\tools\> rm mm.efi fs0:\efi\tools\> date [hh:mm:ss] This command displays to sets the current time for the system.  If not parameters are used, it shows the current time.  If valid hours, minutes, and seconds are provided, then the system's time will be updated. Examples Shell> time 15:09:57 Shell> time 15:10:00 Shell> type  type [-a] [-u] [-b] file     [-a]  - Display the file as ASCII characters.     [-u]  - Display the file as Unicode characters.          [-b]  - Display one screen at a time  This command sends the contents of a file to the standard output device.  If no options are used, then the file type is auto-detected and sent to the standard output device. If the  a option is used, the file is sent to the standard output device as a stream of ASCII characters. If the  u option is used, the file is sent to the standard output device as a stream of Unicode characters.  The following example shows how to send the ASCII file README.TXT on the floppy drive to the standard output device and the Unicode file READMEU.TXT on the floppy drive to the standard output device. Examples Shell> fs0: fs0:\> type readme.txt fs0:\> type  a readme.txt fs0:\> type readmeu.txt fs0:\> type  u readmeu.txt fs0:\> Displays the version information for this EFI Firmware.  This information is retrieved through the EFI System Table. Examples Shell> ver EFI Specification Revision 0.91   EFI Vendor      = INTEL   EFI Revision    = 00000009 Shell> vol fs [Volume Label]   fs            - The name of the file system to use   Volume Label    New volume label Displays volume information for the file system specified by fs.  If Volume Label is specified, then the volume label for fs will be set to Volume Label.  The maximum length for Volume Label is 11 characters. Examples Shell> vol fs0 Shell> vol fs0 New Volume dblk  dblk BlockDeviceName [LBA] [# Blocks]     BlockDeviceName  The name of the block device to display     [LBA]            The block number to display     [# Blocks]       The number of block to display Displays the contents of one or more blocks from a block device.   If [LBA] is not specified or it greater than the last block on that block device, then block #0 is displayed.  If [# Blocks] is not specified, then on1y 1 block will be displayed.  The maximum number of blocks that can be displayed at one time is 0x10. Examples Shell> dblk blk0  LBA 0x0000000000000000 Size 0x00000200 bytes BlkIo 0x07FCD350   00000000: EB 3C 90 28 25 5A 69 59-49 48 43 00 02 01 01 00  *.<.INTEL   .....*   00000010: 02 E0 00 40 0B F0 09 00-12 00 02 00 00 00 00 00  *...@............*   00000020: 00 00 00 00 00 01 29 20-20 20 20 45 46 49 20 46  *......)    EFI F*   00000030: 4C 4F 50 50 59 20 46 41-54 31 32 20 20 20 8C C8  *LOPPY FAT12   ..*   00000040: 8E D0 05 00 10 8E D8 BC-00 7C 8B EC B4 08 B2 00  *................*   00000050: CD 13 33 C0 8A C6 24 3F-FE C0 50 8A C1 24 3F 50  *..3...$?..P..$?P*   00000060: 81 BE FE 01 55 AA 0F 85-6F 01 80 BE 00 00 EB 0F  *....U...o.......*   00000070: 85 66 01 81 BE 0B 00 00-02 0F 85 5C 01 80 BE 0D  *.f.........\....*   00000080: 00 00 0F 84 53 01 83 BE-11 00 00 0F 84 4A 01 8B  *....S........J..*   00000090: 86 0E 00 3B 86 13 00 0F-8F 3E 01 33 C9 8D 36 03  *...;.....>.3..6.*   000000A0: 00 B1 08 E8 25 01 8D 36-2B 00 B1 0B E8 1C 01 81  *....%..6+.......*   000000B0: BE 36 00 46 41 0F 85 20-01 81 BE 38 00 54 31 0F  *.6.FA.. ...8.T1.*   000000C0: 85 16 01 B8 20 20 39 86-3B 00 0F 85 0B 01 39 86  *....  9.;.....9.*   000000D0: 3C 00 0F 85 03 01 80 BE-3A 00 32 74 0C 80 BE 3A  *<.......:.2t...:*   000000E0: 00 36 0F 84 F3 00 E9 F0-00 8B 8E 11 00 C1 E1 05  *.6..............*   000000F0: 8B D9 81 E3 FF 01 0F 85-DF 00 8B D9 C1 EB 09 BF  *................*   00000100: 00 00 8A 86 10 00 32 E4-F7 A6 16 00 03 86 0E 00  *......2.........*   00000110: 1E 07 E8 6D 00 03 C3 89-46 00 81 3D 45 46 75 27  *...m....F..=EFu'*   00000120: 81 7D 02 49 4C 75 20 81-7D 04 44 52 75 19 B8 20  *...ILu ...DRu.. *   00000130: 20 39 45 06 75 11 39 45-08 75 0C 39 45 09 75 07  * 9E.u.9E.u.9E.u.*   00000140: 8A 45 0B 24 58 74 0B 83-C7 20 83 E9 20 75 CB E9  *.E.$Xt... .. u..*   00000150: 87 00 8B 4D 1A 8C C8 05-00 20 8E C0 33 FF 8B C1  *...M..... ..3...*   00000160: 83 E8 02 32 FF 8A 9E 0D-00 F7 E3 03 46 00 32 FF  *...2........F.2.*   00000170: 8A 9E 0D 00 06 E8 0A 00-58 89 86 80 01 EA 00 00  *........X.......*   00000180: 00 20 60 8B F0 8B CB BD-FC 7B 8B C6 33 D2 F7 76  *. `.........3..v*   00000190: 00 42 8B 5E 00 2B DA 43-3B CB 7F 02 8B D9 51 8A  *.B.^.+.C;.....Q.*   000001A0: CA 33 D2 F7 76 02 53 8A-F2 B2 00 8A E8 8A C3 B4  *.3..v.S.........*   000001B0: 02 8B DF CD 13 5B 59 03-F3 2B CB 8C C0 C1 E3 05  *.....[Y..+......*   000001C0: 03 C3 8E C0 83 F9 00 75-BE 61 C3 80 3A 7F 7F 09  *.......u.a..:...*   000001D0: 80 3A 20 7C 04 46 E2 F3-C3 CC EB FD 00 00 00 00  *.: ..F..........*   000001E0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   000001F0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 55 AA  *..............U.* Fat 12 BPB  FatLabel: 'EFI FLOPPY '  SystemId: 'FAT12   ' OemId: 'INTEL   '  SectorSize 0x200  SectorsPerCluster 1 ReservedSectors 1  # Fats 2  Root Entries 0xE0  Media 0xF0  Sectors 0xB40  SectorsPerFat 0x9  SectorsPerTrack 0x12 Heads 2 dmem  dmem [Address] [Size] [;MMIO]     [Address]  Start address     [Size]     Number of bytes to display     [;MMIO]    Use DEVICE_IO protocol to access memory Displays the contents of system memory or device memory.  If Address is not specified, then the contents of the EFI System Table are displayed.  Otherwise, memory starting at Address is displayed.  Size specifies the number of bytes to display.  If Size is not specified, then this command defaults to 512 bytes.  If MMIO is not specified, then main system memory is displayed.  Otherwise, device memory is displayed through the use of the DEVICE_IO protocol. Examples Shell> dmem Memory Address 000000000012FB60 200 Bytes   0012FB60: 49 42 49 20 53 59 53 54-5B 00 00 00 48 00 00 00  *IBI SYST[...H...*   0012FB70: 66 78 20 E5 00 00 00 00-88 08 82 01 09 00 00 00  *fx .............*   0012FB80: 08 0A 82 01 68 1C 82 01-08 0A 82 01 28 1C 82 01  *....h.......(...*   0012FB90: 88 E3 82 01 28 1F 82 01-58 50 42 00 E8 F6 41 00  *....(...XPB...A.*   0012FBA0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBB0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBC0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBD0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBE0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBF0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC00: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC10: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC20: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC30: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC40: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC50: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC60: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC70: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC80: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC90: 00 00 00 00 A8 FC 12 00-96 59 A3 01 88 50 81 01  *.........Y...P..*   0012FCA0: C0 FC 12 00 01 FC 12 00-C8 FE 12 00 F8 14 A3 01  *................*   0012FCB0: 88 50 81 01 C0 FC 12 00-01 00 00 00 08 CE 82 01  *.P..............*   0012FCC0: 64 00 6D 00 65 00 6D 00-00 00 00 00 00 00 00 00  *d.m.e.m.........*   0012FCD0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FCE0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FCF0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD00: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD10: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD20: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD30: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD40: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD50: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   Valid EFI Header at Address 000000000012FB60   --------------------------------------------   System: Table Structure size 00000048 revision 0000005B   ConIn (0x01820A08) ConOut (0x01820A08) StdErr (0x0182E388)    Console In on  VenHw(g3)    Console Out on VenHw(g3)    Std Error on   VenHw(g3)   Runtime Services 0x0000000000425058   Boot Services    0x000000000041F6E8 Shell> dmem 01820a08 18   Memory Address 0000000001820A08 18 Bytes   01820A08: 68 6E 64 6C 8C 07 82 01-0C 0D 82 01 10 09 82 01  *hndl............*   01820A18: 90 0A 82 01 57 00 00 00-                         *....W...* dmpstore  dmpstore Displays all the environment variables being managed by EFI. Examples Shell> dmpstore Dump NVRAM Variable RT+BS 'Efi:LangCodes' DataSize = 3   00000000: 65 6E 67                                         *eng* Variable NV+RT+BS 'Efi:Lang' DataSize = 3   00000000: 65 6E 67                                         *eng* Variable NV+RT+BS 'ShellProtId:DevIo' DataSize = 10   00000000: 11 C3 6A AF C3 84 D2 11-8E 3C 00 A0 C9 69 72 3B  *..j......<...ir;* Variable NV+RT+BS 'ShellProtId:fs' DataSize = 10   00000000: 22 5B 4E 96 59 64 D2 11-8E 39 00 A0 C9 69 72 3B  *"[N.Yd...9...ir;* Variable NV+RT+BS 'ShellProtId:diskio' DataSize = 10   00000000: 71 51 34 CE 0B BA D2 11-8E 4F 00 A0 C9 69 72 3B  *qQ4......O...ir;* Variable NV+RT+BS 'ShellProtId:blkio' DataSize = 10   00000000: 21 5B 4E 96 59 64 D2 11-8E 39 00 A0 C9 69 72 3B  *![N.Yd...9...ir;* Variable NV+RT+BS 'ShellProtId:txtin' DataSize = 10   00000000: C1 77 74 38 C7 69 D2 11-8E 39 00 A0 C9 69 72 3B  *.wt8.i...9...ir;* Variable NV+RT+BS 'ShellProtId:txtout' DataSize = 10   00000000: C2 77 74 38 C7 69 D2 11-8E 39 00 A0 C9 69 72 3B  *.wt8.i...9...ir;* Variable NV+RT+BS 'ShellProtId:load' DataSize = 10   00000000: 91 30 EC 56 4C 95 D2 11-8E 3F 00 A0 C9 69 72 3B  *.0.VL....?...ir;* Variable NV+RT+BS 'ShellProtId:image' DataSize = 10   00000000: A1 31 1B 5B 62 95 D2 11-8E 3F 00 A0 C9 69 72 3B  *.1.[b....?...ir;* Variable NV+RT+BS 'ShellProtId:varstore' DataSize = 10   00000000: 91 CD 88 F0 46 A0 D2 11-8E 42 00 A0 C9 69 72 3B  *....F....B...ir;* Variable NV+RT+BS 'ShellProtId:unicode' DataSize = 10   00000000: 7F CD 85 1D 3D F4 D2 11-9A 0C 00 90 27 3F C1 4D  *....=.......'?.M* Variable NV+RT+BS 'ShellProtId:LegacyBoot' DataSize = 10   00000000: B2 5E 6E 37 E4 30 D3 11-BA E5 00 80 C7 3C 88 81  *.^n7.0.......<..* Variable NV+RT+BS 'ShellProtId:serialio' DataSize = 10   00000000: 6F CF 25 BB D4 F1 D2 11-9A 0C 00 90 27 3F C1 FD  *o.%.........'?..* Variable NV+RT+BS 'ShellProtId:pxe' DataSize = 10   00000000: 4C 9C 94 01 96 94 D2 11-85 E1 00 A0 C9 3E C9 3B  *L............>.;* Variable NV+RT+BS 'ShellProtId:dpath' DataSize = 10   00000000: 91 6E 57 09 3F 6D D2 11-8E 39 00 A0 C9 69 72 3B  *.nW.?m...9...ir;* Variable NV+RT+BS 'ShellProtId:VgaClass' DataSize = 10   00000000: 10 63 3D 0E E4 6F D3 11-BB 81 00 80 C7 3C 88 81  *.c=..o.......<..* Variable NV+RT+BS 'ShellProtId:TxtOutSplit' DataSize = 10   00000000: A0 30 D8 56 7A 7E D3 11-BB A0 00 A0 C9 69 72 3B  *.0.Vz........ir;* Variable NV+RT+BS 'ShellProtId:TxtInSplit' DataSize = 10   00000000: 50 C5 A3 F9 B5 7F D3 11-BB A0 00 A0 C9 69 72 3B  *P............ir;* Variable NV+RT+BS 'ShellProtId:ShellInt' DataSize = 10   00000000: 23 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *#..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:SEnv' DataSize = 10   00000000: 24 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *$..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:ShellProtId' DataSize = 10   00000000: 26 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *&..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:ShellDevPathMap' DataSize = 10   00000000: 25 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *%..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:ShellAlias' DataSize = 10   00000000: 27 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *'..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:G0' DataSize = 10   00000000: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* Variable NV+RT+BS 'ShellProtId:Efi' DataSize = 10   00000000: 61 DF E4 8B CA 93 D2 11-AA 0D 00 E0 98 03 2B 8C  *a.............+.* Variable NV+RT+BS 'ShellProtId:GenFileInfo' DataSize = 10   00000000: 92 6E 57 09 3F 6D D2 11-8E 39 00 A0 C9 69 72 3B  *.nW.?m...9...ir;* Variable NV+RT+BS 'ShellProtId:FileSysInfo' DataSize = 10   00000000: 93 6E 57 09 3F 6D D2 11-8E 39 00 A0 C9 69 72 3B  *.nW.?m...9...ir;* Variable NV+RT+BS 'ShellProtId:Unknown Device' DataSize = 10   00000000: C5 FA 31 CF 4E C2 D2 11-85 F3 00 A0 C9 3E C9 3B  *..1.N........>.;* Variable NV+RT+BS 'SEnv:path' DataSize = 2E   00000000: 66 00 73 00 30 00 3A 00-5C 00 65 00 66 00 69 00  *f.s.0.:.\.e.f.i.*   00000010: 5C 00 74 00 6F 00 6F 00-6C 00 73 00 3B 00 66 00  *\.t.o.o.l.s.;.f.*   00000020: 73 00 30 00 3A 00 5C 00-3B 00 2E 00 00 00        *s.0.:.\.;.....* Variable NV+RT+BS 'ShellAlias:dir' DataSize = 6   00000000: 6C 00 73 00 00 00                                *l.s...* Variable NV+RT+BS 'ShellAlias:md' DataSize = C   00000000: 6D 00 6B 00 64 00 69 00-72 00 00 00              *m.k.d.i.r...* Variable NV+RT+BS 'ShellAlias:rd' DataSize = 6   00000000: 72 00 6D 00 00 00                                *r.m...* Variable NV+RT+BS 'ShellAlias:del' DataSize = 6   00000000: 72 00 6D 00 00 00                                *r.m...* Variable NV+RT+BS 'ShellAlias:copy' DataSize = 6   00000000: 63 00 70 00 00 00                                *c.p...* Variable NV+RT+BS 'g4:MTC' DataSize = 4   00000000: 07 00 00 00                                      *....* Variable NV+RT+BS 'ShellDevPathMap:fs0' DataSize = 18   00000000: 01 04 14 00 51 6E D6 43-78 AD D2 11 8E 4B 00 A0  *....Qn.Cx....K..*   00000010: C9 69 72 3B 7F FF 04 00-                         *.ir;....* Variable NV+RT+BS 'ShellDevPathMap:blk0' DataSize = 2C   00000000: 01 04 14 00 BC 4B 6F 38-82 77 D2 11 85 D6 00 A0  *.....Ko8.w......*   00000010: C9 3E C9 3B 01 04 14 00-BC 4B 6F 38 82 77 D2 11  *.>.;.....Ko8.w..*   00000020: 85 D6 00 A0 C9 3E C9 3B-7F FF 04 00              *.....>.;....* err [Error Level]   [Error Level]    New error level bit mask. This command sets the current debug error level in the system.  This commands only works if the EFI Shell and the ERR command are built into the core firmware.  Error Level is a bit mask for different types of error messages.  The following is the list of definitions for the bit mask. #define D_INIT        0x00000001          // Initialization style messages #define D_WARN        0x00000002          // Warnings #define D_LOAD        0x00000004          // Load events #define D_FS          0x00000008          // EFI File system #define D_POOL        0x00000010          // Alloc & Free's #define D_PAGE        0x00000020          // Alloc & Free's #define D_INFO        0x00000040          // Verbose #define D_VAR         0x00000100          // Variable #define D_PARSE       0x00000200          // Command parsing #define D_BM          0x00000400          // Boot manager #define D_BLKIO       0x00001000          // BlkIo Driver #define D_BLKIO_ULTRA 0x00002000          // BlkIo Driver #define D_ERROR       0x80000000          // Error Examples Shell> err EFI ERROR 0000000080001007  Shell> err 80003007 EFI ERROR 80003007 getmtc  getmtc This command displays the current monotonic counter value.  The lower 32 bits increment every time this command is executed.  Every time the system is reset, the upper 32 bits will be incremented, and the lower 32 bits will be reset to 0. Examples Shell> getmtc Monotinic count = 700000000 Shell> getmtc Monotonic count = 700000001 mm Address [Width 1|2|4|8] [;MMIO | ;MEM | ;IO | ;PCI] [:Value] [-n]    Address   Start address    Width   - Size access in bytes.  Default is 1 byte.    MEM     - Memory Address 0 - 0xffffffff_ffffffff    MMIO    - Memory Mapped IO Address 0 - 0xffffffff_ffffffff    IO      - IO Address 0 - 0xffff    PCI     - PCI Config Address 0x000000ssbbddffrr              ss-> _SEG  bb-> bus  dd-> Device  ff-> Func  rr-> Register    Value   - The value to write    [-n]    - Nonintewractive mode Allows the user to display and/or modify I/O register, memory contents, or PCI configuration space.  The user can specify the start address and the access size they wish to perform using the Address and Width parameters.  MEM accesses system memory, MMIO accesses device memory, IO accesses device I/O ports, and PCI accesses PCI Configuration Space.  When this command is executed, the current contents of Address are displayed, and the user has the option of modifying the contents by typing in a hex value.  When the user pressed [ENTER], then next address is displayed.  This is continued until the user enter  Examples Shell> mm 80 1 ;IO IO  0x0000000000000080 : 0x0E > aa IO  0x0000000000000081 : 0x00 > IO  0x0000000000000082 : 0x00 > q Shell> mv file1 file2 This command moves a file from the path specified by file1 to the path specified by file2.  This command can be used to rename file, or move a file from one directory into another directory. Examples Shell> mv fs0:\a.txt fs0:\b.txt mv: fs0:\a.txt -> fs0:\b.txt [ok] Shell> mv fs0:\a.txt fs0:\efi\a.txt mv: fs0:\a.txt -> fs0:\efi\a.txt [ok] Displays all the PCI devices found in the system. Examples Shell> pci    Bus  Dev  Func    ---  ---  ----      0    0     0 ==> PCI Bridge Device - Host                        Vendor 0x8086 Device 0x7192 Prog Interface 0      0    2     0 ==> PCI Bridge Device - CardBus                        Vendor 0x104C Device 0xAC16 Prog Interface 0      0    2     1 ==> PCI Bridge Device - CardBus                        Vendor 0x104C Device 0xAC16 Prog Interface 0      0    3     0 ==> Display Controller - VGA                        Vendor 0x10C8 Device 0x0004 Prog Interface 0      0    7     0 ==> PCI Bridge Device -                         Vendor 0x8086 Device 0x7110 Prog Interface 0      0    7     1 ==> Mass Storage Controller - IDE                        Vendor 0x8086 Device 0x7111 Prog Interface 80      0    7     2 ==> Serial Bus Controller - USB                        Vendor 0x8086 Device 0x7112 Prog Interface 0      0    7     3 ==> PCI Bridge Device -                         Vendor 0x8086 Device 0x7113 Prog Interface 0 reset reset [/warm] [reset string]     [/warm]         - Perform a warm reset     [reset string]    String to pass to reset API.  Resets the system.  The default is to perform a cold reset unless the /warm parameter is specified.  If reset string is specified, then it is passed into the Reset() function, so the system can know the reason for the system reset. Examples Shell> reset Shell> reset /warm Shell> setsize setsize newsize filename   newsize    The new size of the file in bytes.   filename   The file path of the file to resize. This command sets the size of the file specified by filename to newsize bytes.  This command can be used to either shrink or grow and existing file. Examples Shell> setsize fs0:\a.txt 100 setsize: fs0:\a.txt 100 Shell> setsize fs0:\a.txt 0 setsize: fs0:\a.txt 0 Shell> stall stall microseconds   microseconds  - Time to stal in microseconds This command stalls the processor for the number of microseconds specified by microseconds. Examples Shell> stall 1000000 Stall for 1000000 uS Shell>  touch  touch filename This command updates the time and date on file specified by filename to the current time and date. Examples Shell> touch fs0:\a.txt touch: fs0:\a.txt [ok] Shell> Writing EFI Shell Commands This section describes how to write, compile, and modify the set of commands available from the EFI Shell environment.  The EFI Shell is provided as part of the EFI Application Toolkit.  The EFI Shell can either be built as a stand alone set of applications from the EFI Application Toolkit, or they can be integrated into the EFI Sample Implementation.  This section describes how to write EFI Shell commands that are built as part of the EFI Sample Implementation.  Please see the release notes for the EFI Sample Implementation for directions on how to import the EFI Shell from the EFI Application Toolkit. Writing a Shell Command EFI Shell commands can be added to the EFI source tree.  It is recommended that the EFI Shell commands be placed below the \efi\shell directory.  To add a new shell command to the build environment, a new subdirectory needs to be created, and a make.inf file along with the command s source code needs to be placed in that subdirectory.  There are two types of shell commands that can be written.  One is an internal shell command, and the other is an external shell command.  Internal shell commands are built into the EFI Shell itself.  This means that the image for the shell command is resident in memory along with the rest of the EFI Shell.  External shell commands reside on a storage device, and they are loaded into memory from the storage device each time they are executed.  For this example, the files for an internal EFI Shell command that displays all of the command line arguments are placed in the directory itestcmd, and their contents are listed below.  The make.inf file specifies a list of source files, the path to the include directories, the path of the library directories, the entry point for the application, and the name of the executable EFI Shell command.  The contents of make.inf are listed below. [sources]     itestcmd.c [includes]     .     ..\inc     $(EFI_SOURCE)\inc [libraries]     $(EFI_SOURCE)\lib     $(EFI_SOURCE)\shell\lib [nmake]     IMAGE_ENTRY_POINT=InitializeInternalTestCommand     TARGET_APP=itestcmd The source to the EFI Shell command itestcmd listed below is a shell command that displays the list of command line parameters on the console out device.  It makes use of some EFI Library calls, and some EFI Shell support functions.  The call to InstallInternalShellCommand() registers the command with the shell as an internal command, so the command can be executed without loading it from a storage device.  It also provides the EFI Shell with the information required to display help on the command s usage. Copyright (c) 1998  Intel Corporation Module Name:     itestcmd.c Abstract:     Shell app "itestcmd" Author: Revision History #include "shell.h" EFI_STATUS InitializeInternalTestCommand (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     ); EFI_DRIVER_ENTRY_POINT(InitializeInternalTestCommand) EFI_STATUS InitializeInternalTestCommand (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     CHAR16 **Argv;     UINTN  Argc;     UINTN  i;     //     // Check to see if the app is to be installed as a "internal command"      // to the shell     //     InstallInternalShellCommand (         ImageHandle,   SystemTable,   InitializeInternalTestCommand,         L"itestcmd",                    // command         L"itestcmd",                    // command syntax         L"Displays argc/argv list",     // 1 line descriptor         NULL                            // command help page         );     //     // We are not being installed as an internal command driver, initialize     // as an nshell app and run     //     InitializeShellApplication (ImageHandle, SystemTable);     //     // Get Argc and Argv.     //     Argv = SI->Argv;     Argc = SI->Argc;     //     // Display list of argumnents.     //     for(i=0;i<Argc;i++) {         Print(L"Argv[%d] = %s\n",i,Argv[i]);     }     return EFI_SUCCESS; Compiling a Shell Command  EFI Shell commands are PE/COFF images with a modified header signature.  The modified header helps distinguish EFI images from PE/COFF images.  Please refer to the EFI Specification for details on EFI images.   Before the EFI image type is integrated into the standard commercial tool chain, a utility for converting PE/COFF images to 64-bit EFI images is available. This will be provided with the initial release of the EFI Sample Implementation. Before a new EFI Shell command can be compiled, the makefile for each build tip need to be modified.  These files include: \efi\build\nt32\makefile \efi\build\sal64\makefile \efi\build\bios32\makefile \efi\build\ia-32emb\makefile In each of these files, there are two sections that need to be updated.  These are the list of EFI Shell command libraries, and the list of EFI Shell command makefiles.  A line needs to be added to each of these section for each EFI Shell command that is added.  An example for the itestcmd EFI Shell command is shown below: !IF "$(EFI_BOOTSHELL)" == "YES" EFI_LIBS = $(EFI_LIBS)  \             output\shell\newshell\newshell.lib                  \             output\shell\shellenv\shellenv.lib                  \             output\shell\lib\lib.lib                            \             output\shell\rm\rm.lib                              \ . . .             output\shell\edit\edit.lib                          \             output\shell\itestcmd\itestcmd.lib                  \ !ENDIF . . . makemaker: . . .     $(MAKE) -f output\shell\err\makefile                          all     $(MAKE) -f output\shell\vol\makefile                          all     $(MAKE) -f output\shell\bcfg\makefile                         all     $(MAKE) -f output\shell\cls\makefile                          all     $(MAKE) -f output\shell\edit\makefile                         all     $(MAKE) -f output\shell\itestcmd\makefile                     all !ENDIF If an EFI Shell command is going to be an internal command, one more file need to be updated.  This is \efi\corefw\fw\inc\plshell.h.  This file must declare the entry point to the new command.  For this example, this entry point is InitializeInternalTestCommand().  The other change to this file is to the declaration of the PlLoadShellTools() define.  This define must be appended with a call to LOAD_INTENAL_DRIVER() for the itestcmd command.  A portion of the modified version of plshell.h is shown below.  Please refer to the sample code for a complete listing of this file. EFI_STATUS InitializeInternalTestCommand (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     ); #define PlLoadShellTools()                          \                                                     \     LOAD_INTERNAL_DRIVER(                           \         FW,                                         \         IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER,    \         L"shellenv",                                \         InitializeShellEnviroment                   \         );                                          \                                                     \     LOAD_INTERNAL_DRIVER(                           \         FW,                                         \         IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER,    \         L"ls",                                      \         InitializeLS                                \         );                                          \                                                     \                                                     \     LOAD_INTERNAL_DRIVER(                           \         FW,                                         \         IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER,    \         L"itestcmd",                                \         InitializeInternalTestCommand               \         );                                          \ Once all of these changes have been made to the EFI build environment the code can be built as normal from one of the build tips.  If an internal EFI shell command has been added, then the new command will be available from the EFI Shell, and the command should be listed when the help command is executed.  If a new EFI Shell command is not an internal shell command, then the image for the new command will have to be placed on a storage device where the EFI Shell can find it.  The new EFI Shell command can then be loaded and executed. Adding Commands to the EFI Shell The following is a summary of the steps required to add a new standard EFI Shell command to the EFI Shell. Create a new directory for the command below \efi\shell\ Place make.inf and the source files to the new command in the new directory. Update the makefile in each of the build tips to include the new command. If the new EFI Shell command is going to be an internal command, then the following three steps also need to be performed. Add a declaration to the entry point of the new command to \efi\corefw\fw\inc\plshell.h. Add a call to LOAD_INTERNAL_DRIVER for the new command to #define PlLoadShellTools in the file \efi\corefw\fw\inc\plshell.h. Removing Commands from the EFI Shell If a command needs to be removed from the EFI shell, then undo the steps listed in previous section. EFI Applications This section describes how to write, compile, and run applications in the sample implementation of the EFI environment.  Building applications in the sample implementation is described for illustration purposes. Writing EFI Applications EFI Applications can be added to the EFI source tree.  It is recommended that all stand alone EFI Applications be placed below the \efi\apps directory.  This recommendation is not strictly required.  However, it does provide a convenient build environment.  To add a new application to the build environment, a new subdirectory needs to be created, and a make.inf file along with the source code needs to be placed in that subdirectory.  For this example, the files for a simple test application are placed in the directory hello, and their contents are listed below.  The make.inf file specifies a list of source files, the path to the include directories, the path the library directories, the entry point for the application, and the name of the executable EFI Application image.  The contents of make.inf are listed below. [sources]     hello.c [includes]     $(EFI_SOURCE)\inc [libraries]     $(EFI_SOURCE)\lib [nmake]     IMAGE_ENTRY_POINT=InitializeHelloApplication     TARGET_APP=hello  The test application listed below is the simplest possible application that can be written.  It does not depend upon any EFI Library functions, so the EFI Library is not linked into the executable that is generated.  This test application uses the SystemTable that is passed into the entry point to get access to the EFI console devices.  The console output device is used to display a message using the OutputString() function of the SIMPLE_TEXT_OUTPUT_INTERFACE protocol, and the application waits for a keystroke from the user on the console input device using the WaitForEvent() service with the WaitForKey event in the SIMPLE_INPUT_INTERFACE protocol.  Once a key is pressed, the application exits. Copyright (c) 1998  Intel Corporation Module Name:     hello.c Abstract: Author: Revision History #include "efi.h" EFI_STATUS InitializeHelloApplication (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     UINTN Index;     //     // Send a message to the ConsoleOut device.     //     SystemTable->ConOut->OutputString(SystemTable->ConOut,                                       L"Hello application started\n\r");     //     // Wait for the user to press a key.     //     SystemTable->ConOut->OutputString(SystemTable->ConOut,                                       L"\n\r\n\r\n\rHit any key to exit\n\r");     SystemTable->BootServices->WaitForEvent (1,                                               &(SystemTable->ConIn->WaitForKey),                                               &Index);     SystemTable->ConOut->OutputString(SystemTable->ConOut,L"\n\r\n\r");     //     // Exit the application.     //     return EFI_SUCCESS; Compiling EFI Applications EFI applications are PE/COFF images with a modified header signature.  The modified header helps distinguish EFI images from PE/COFF images.  Please refer to the EFI Specification for details on EFI images.   Before the EFI image type is integrated into the standard commercial tool chain, a utility for converting PE/COFF images to 64-bit EFI images is available. This will be provided with the initial release of the EFI sample implementation. Before a new EFI application can be compiled, the makefile for each build tip need to be modified.  These files include: \efi\build\ntdbg32\makefile \efi\build\sal64\makefile \efi\build\saldbg64\makefile \efi\build\bios32\makefile \efi\build\biosdbg32\makefile In each of these files, there is a section labeled "makemaker".  Add a line to the end of this section for each new EFI application.  The section of a makefile that supports two test applications is listed below.  Once these changes have been made, the new application will be compiled when nmake is run from a build tip. makemaker: . . . !IF "$(EFI_BOOTSHELL)" == "YES" . . . !ENDIF     $(MAKE) -f output\apps\hello\makefile                       all     $(MAKE) -f output\apps\hellolib\makefile                    all Writing EFI Applications with EFI Library Support If an EFI Application wants to use the EFI Library functions, then the file efilib.h needs to be included, and a call to InitializeLib() needs to be added.  The following is a listing of the EFI application hellolib.c.  This application makes use of the EFI Library to print text to the console output device.  It also uses the global variable ST instead of SystemTable to make the standard EFI API calls. Copyright (c) 1999  Intel Corporation Module Name: hellolib.c Abstract: This is an example EFI program Author:  Revision History: 1.0 #include "efi.h" #include "efilib.h" EFI_STATUS InitializeHelloLibApplication (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     //     // Initialize the Library. Set BS, RT, &ST globals     //  BS = Boot Services      //  RT = RunTime Services     //  ST = System Table     //     InitializeLib (ImageHandle, SystemTable);     //     // Print a message to the console device using a library function.     //     Print(L"HelloLib application started\n");     //     // Wait for a key to be pressed on the console device.     //     Print(L"\n\n\nHit any key to exit this image\n");     WaitForSingleEvent (ST->ConIn->WaitForKey, 0);     //     // Print a message to the console device using a protocol interface.     //     ST->ConOut->OutputString (ST->ConOut, L"\n\n");     //     // Return control to the Shell.     //     return EFI_SUCCESS; Running EFI Applications An EFI application may be executed by typing the program s name at the EFI shell command line.  The following examples show how to run the test applications described in the sections above from the EFI Shell.  Both applications wait for the user to press a key before they will return to the EFI Shell prompt.  It is assumed that hello.efi and hellolib.efi are in the search path of the EFI Shell environment. Examples Shell> hello Hello application started Hit any key to exit this image Shell> hellolib HelloLib application started Hit any key to exit this image Shell> EFI OS Loaders This section discusses the special considerations required when writing an OS loader.  An OS loader is a special type of EFI Application.  It is responsible for transitioning a system from a firmware environment into an Operating System environment.  To accomplish this task, several important steps must be taken. The OS loader must determine where it was loaded from.  This will allow an OS loader to retrieve additional files from the same location. The OS loader must determine where in the system the OS exists.  Typically, the OS will reside on a partition of a hard drive.  However, the partition where the OS exists may not use a file system that is recognized by the EFI environment.  In this case, the OS loader can only access the partition as a block device using only block I/O operations.  The OS loader will then be required to implement or load the file system driver to access files on the OS partition. The OS loader must build a memory map of the physical memory resources so that the OS kernel can know what memory to manage.  Some of the physical memory in the system must remain untouched by the OS kernel, so the OS loader must use the EFI APIs to retrieve the system s current memory map.   An OS has the option of storing boot paths and boot options in non-volatile storage in the form of environment variables.  The OS loader may need to use some of the environment variables stored in non-volatile storage.  In addition, the OS loader may be required to pass some of the environment variables to the OS kernel. The next step is to call ExitBootServices().  This can be done from either the OS loader, or from the OS kernel.  Special care must be taken to guarantee that the most current memory map has been retrieved prior to making this call.  Once ExitBootServices() had been called, no more EFI Boot Time Service calls can be made.  At some point, either just prior to calling ExitBootServices() or just after, the OS loader will transfer control to the OS kernel. Finally, after ExitBootServices() has been called, the EFI Boot Service calls are no longer available.  This means that once an OS kernel has taken control of the system, the OS kernel may only make EFI Run Time Service calls.  A complete listing of the an OS Loader sample application can be found in Appendix E, and the output from the OS loader sample can be found in Appendix F. The code fragments in the following sections do not perform any error checking.  The code listing in Appendix E has similar code sections, but all the return status codes are checked.  Also, the OS Loader sample application makes use of several EFI Library functions to simplify the implementation.   The output shown in Appendix F shows the OS loader sample going through the steps listed above.  It starts by printing out the device path and the file path of the OS loader itself.  It also shows where in memory the OS loader resides, and how many bytes it is using.  Next, it loads the file OSKERNEL.BIN into memory.  The file OSKERNEL.BIN was retrieved from the same directory as the image of the OS loader sample. The next section of the output shows the first block of several block devices.  The first one is the first block of floppy drive with a FAT12 file system.  The second one is the Master Boot Record from the hard drive.  The third one is the first block of a large FAT32 partition on the same hard drive, and the fourth one is the first block of a smaller FAT16 partition on the same hard drive. The next section shows the pointers to all the system configuration tables, the system s current memory map, and a list of all the system s environment variables.  The very last step shown is the OS loader calling ExitBootServices(). Device Path and Image Information of the OS Loader The following code fragment shows the steps required to get the device path and file path to the OS loader itself.  The first call to HandleProtocol() gets the LOADED_IMAGE_PROTOCOL interface from the ImageHandle that was passed into the OS loader application.  The second call to HandleProtocol() gets the DEVICE_PATH_PROTOCOL interface to the device handle of the OS loader image.  With these two calls, the device path of the OS loader image is known, and the file path along with other image information is known about the OS loader. BS->HandleProtocol(ImageHandle, &LoadedImageProtocol, LoadedImage); BS->HandleProtocol(LoadedImage->DeviceHandle, &DevicePathProtocol, &DevicePath); Print (L"Image device : %s\n", DevicePathToStr (DevicePath));  Print (L"Image file   : %s\n", DevicePathToStr (LoadedImage->FilePath)); Print (L"Image Base   : %X\n", LoadedImage->ImageBase); Print (L"Image Size   : %X\n", LoadedImage->ImageSize); Accessing Files in the Device Path of the OS Loader Section 5.1 shows how to retrieve the device path and the image path of the OS loader image.  The following code fragment shows how to use this information to open another file called OSKERNEL.BIN that resides in the same directory as the OS loader itself.  The first step is to use HandleProtocol() to get the FILE_SYSTEM_PROTOCOL interface to the device handle retrieved in the previous section.  Then, the disk volume can be opened so file access calls can be made.  The end result is that the variable CurDir is a file handle to the same partition that the OS loader resides. BS->HandleProtocol(LoadedImage->DeviceHandle, &FileSystemProtocol, &Vol); Vol->OpenVolume (Vol, &RootFs); CurDir = RootFs; The next step is to build a file path to OSKERNEL.BIN that exists in the same directory as the OS loader image.  Once the path is built, the file handle CurDir can be used to perform Open, Close, Read, and Write calls on the OSKERNEL.BIN file.  The following code fragment builds a file path, opens the file, reads it into an allocated buffer, and closes the file. StrCpy(FileName,DevicePathToStr(LoadedImage->FilePath)); for(i=StrLen(FileName);i>=0 && FileName[i]!='\\';i--); FileName[i] = 0; StrCat(FileName,L"\\OSKERNEL.BIN"); CurDir->Open (CurDir, &FileHandle, FileName, EFI_FILE_MODE_READ, 0); Size = 0x00100000; BS->AllocatePool(EfiLoaderData, Size, &OsKernelBuffer); FileHandle->Read(FileHandle, &Size, OsKernelBuffer); FileHandle->Close(FileHandle); Finding the OS Partition The EFI sample environment materializes a BLOCK_IO_PROTOCOL instance for every partition found in a system.  An OS loader can search for OS partitions by looking at all the BLOCK_IO devices.  The following code fragment uses LibLocateHandle() to get a list of BLOCK_IO device handles.  These handles are then used to retrieve the first block from each one of these BLOCK_IO devices.  The HandleProtocol() API is used to get the DEVICE_PATH_PROTOCOL and the BLOCK_IO_PROTOCOL instances for each of the BLOCK_IO devices.  The variable BlkIo is a handle to the BLOCK_IO device using the BLOCK_IO_PROTOCOL interface.  At this point, a ReaddBlocks() call can be used to read the first block of a device.  The sample OS loader just dumps the contents of the block to the display.  A real OS loader would have to test each block read to see if it is a recognized partition.  If a recognized partition is found, then the OS loader can implement a simple file system driver using the EFI API ReadBlocks() to load additional data from that partition. NoHandles = 0; HandleBuffer = NULL; LibLocateHandle(ByProtocol, &BlockIoProtocol, NULL, &NoHandles, &HandleBuffer); for(i=0;i<NoHandles;i++) {     BS->HandleProtocol (HandleBuffer[i], &DevicePathProtocol, &DevicePath);     BS->HandleProtocol (HandleBuffer[i], &BlockIoProtocol, &BlkIo);      Block = AllocatePool (BlkIo->BlockSize);     MediaId = BlkIo->MediaId;     BlkIo->ReadBlocks(BlkIo, MediaId, (EFI_LBA)0, BlkIo->BlockSize, Block);     Print(L"\nBlock #0 of device %s\n",DevicePathToStr(DevicePath));     DumpHex(0,0,BlkIo->BlockSize,Block); Getting the Current System Configuration     All the system configuration is available through the SystemTable data structure that is passed into the OS loader.  There are five tables available, and their structure and contents are described in the appropriate specifications.       LibGetSystemConfigurationTable(&AcpiTableGuid,&AcpiTable);       LibGetSystemConfigurationTable(&SMBIOSTableGuid,&SMBIOSTable);       LibGetSystemConfigurationTable(&SalSystemTableGuid,&SalSystemTable);       LibGetSystemConfigurationTable(&MpsTableGuid,&MpsTable);       Print(L"  ACPI Table is at address                   : %X\n",AcpiTable);       Print(L"  SMBIOS Table is at address                 : %X\n",SMBIOSTable);       Print(L"  Sal System Table is at address             : %X\n",SalSystemTable);       Print(L"  MPS Table is at address                    : %X\n",MpsTable); Getting the Current Memory Map There is one EFI Library function that can retrieve the memory map maintained by the EFI environment.  The following code fragment shows the use of this library function, and it displays the contents of memory map.  An OS loader must pay special attention to the MapKey parameter.  Every time that the EFI environment modifies the memory map that is maintains, the MapKey is incremented.  An OS loader needs to pass to current memory map to the OS kernel.  Depending on what functions the OS loader calls between the time the memory map is retrieved and the time that ExitBootServices() is called, the memory map may be modified.  In general, the OS loader should retrieve the memory map just before the call to ExitBootServices().  If ExitBootServices() fails because the MapKey does not match, then the OS loader must get a new copy of the memory map and try again.       MemoryMap = LibMemoryMap(&NoEntries,&MapKey,&DescriptorSize,&DescriptorVersion);       Print(L"Memory Descriptor List:\n\n");       Print(L"  Type        Start Address     End Address       Attributes      \n");       Print(L"  ==========  ================  ================  ================\n");       MemoryMapEntry = MemoryMap;       for(i=0;i<NoEntries;i++) {           Print(L"  %s  %lX  %lX  %lX\n",                 OsLoaderMemoryTypeDesc[MemoryMapEntry->Type],                 MemoryMapEntry->PhysicalStart,                 MemoryMapEntry->PhysicalStart +                      LShiftU64(MemoryMapEntry->NumberOfPages,PAGE_SHIFT)-1,                 MemoryMapEntry->Attribute);           MemoryMapEntry = NextMemoryDescriptor(MemoryMapEntry, DescriptorSize);       } Getting Environment Variables The following code fragment shows how to extract all the environment variables maintained by the EFI environment.  It uses the GetNextVariableName() API to walk the entire list.   VariableName[0] = 0x0000; VendorGuid = NullGuid; Print(L"GUID                                Variable Name        Value\n"); Print(L"=================================== ==================== ========\n");   VariableNameSize = 256;   Status = RT-GetNextVariableName(&VariableNameSize,VariableName,&VendorGuid);   if (Status == EFI_SUCCESS) {     VariableValue = LibGetVariable(VariableName,&VendorGuid);     Print(L"%.-35g %.-20s %X\n",&VendorGuid,VariableName,VariableValue); } while (Status == EFI_SUCCESS); Transitioning to an OS Kernel A single call to ExitBootServices() terminates all the Boot Time Services that the EFI environment provides.  From that point on, only the EFI Run Time Services may be used.  Once this call is made, the OS loader needs to prepare for the transition to the OS kernel.  It is assumed that the OS kernel has full control of the system, and that only a few firmware functions are required by the OS kernel.  These functions are the EFI Run Time Services.  The OS loader must pass the SystemTable to the OS kernel, so the OS kernel can make the Run Time Service calls.  The exact mechanism used to transition from the OS loader to the OS kernel is implementation dependent.  It is important to note that the OS loader could transition to the OS kernel prior to calling ExitBootServices().  In this case, the OS kernel is responsible for calling ExitBootServices() before taking full control of the system. EFI Boot Time Services A high level description of the EFI Boot Time Services are described in this section. These services are APIs exported by the EFI environment, and they are only available at boot time before an operating system takes control of the system.  Once a call to ExitBootServices() is made, the EFI Boot Time Service APIs may no longer be used.   The EFI Boot Time Services are organized into the following groups.   Event Services Memory Allocation Services Protocol Handler Services Image Services Miscellaneous Services Event Services Table A-1 lists the functions used to manage events. Table A-1. Event Services Description CreateEvent Creates a general-purpose event structure. CloseEvent Closes and frees an event structure. CheckEvent Checks whether an event is in the signaled state.  SignalEvent Signals an event. RaiseTPL Raises the task priority level. RestoreTPL Restores/lowers the task priority level. SetTimer Sets an event to be signaled at a particular time. WaitForEvent Waits for an event to be signaled. Memory Allocation Services Table A-2 lists the functions used to allocate and free memory. Table A-2. Memory Allocation Services Description AllocatePages Allocates memory pages of a particular type. FreePages Frees memory pages. GetMemoryMap Returns the current boot services memory map and memory map key. AllocatePool Allocates pool of a particular type. FreePool Frees allocated pool. Protocol Handler Services Table A-3 lists the functions used to manage protocol handles. Table A-3. Protocol Handler Services Description InstallProtocolInterface Adds protocol handler onto an existing or new device handle. UninstallProtocolInterface Removes a protocol handler from a device handle. ReinstallProtocolInterface Replaces a protocol interface. HandleProtocol Queries the list of protocol handlers on a device handle for the requested Protocol Interface. RegisterProtocolNotify Registers for protocol interface installation notifications LocateHandle Locates the handle(s) that support the specified protocol. LocateDevicePath Locates the closest handle that supports the specified protocol on the specified device path. Image Services Table A-4 lists the functions used load, execute, and exit EFI images. Table A-4. Image Services Description LoadImage Function to dynamically load another EFI Image. StartImage Function to transfer control to the Image s entry point. EFI_IMAGE_ENTRY_POINT Prototype of an EFI Image s entry point. Exits the image s entry point. UnloadImage Unloads an image loaded with LoadImage. ExitBootServices Terminates boot services. Miscellaneous Services Table A-5. Miscellaneous Services Description SetWatchdogTimer Resets and sets the system s watchdog timer. Stall Stall the processor for a specified number of microseconds. GetNextMonotonicCount Returns a monotonically increasing count for the platform. InstallConfigurationTable Adds, updates, or removes a configuration table from the EFI System Table EFI Run Time Services A high level description of the EFI Run Time Services are described in this section. These services are APIs exported by the EFI environment, and they are always available.  The EFI Run Time Services are organized into the following groups.   Variable Services Time Services Virtual Memory Services Miscellaneous Services Variable Services The Variable Services are used to maintain environment variables in non-volatile storage.  Table B-1 lists the functions available for retrieving, creating, modifying, and deleting environment variables in non-volatile storage. Table B-1. Variable Services Description GetVariable Returns the value of the specified variable GetNextVariableName Enumerates the current variables names SetVariable Sets the value of the specified variable. Time Services Table B-2 lists the functions available to access the system s Real Time Clock (RTC) and timer hardware. Table B-2. Time Services Description GetTime Returns the current time and date information. SetTime Sets the current time and date. GetWakeupTime Returns the current wakeup alarm clock setting. SetWakeupTime Sets the current wakeup alarm clock setting. Virtual Memory Services Table B-3 lists the functions used transition the firmware from flat physical  mode to virtual runtime mode. Table B-3. Virtual Memory Services Description SetVirtualAddressMap Used by an OS loader to convert from physical addressing to virtual addressing. ConvertPointer Used by EFI components to convert internal pointers when switching to virtual addressing. Miscellaneous Services Table B-4 lists the miscellaneous runtime services. Table B-4. Miscellaneous Services Description GetNextHighMonotonicCount Subsumes the platform s monotonic counter functionality. ResetSystem Resets all processors and devices and reboots the system. EFI Protocol Interfaces A high level description of the EFI Protocol Interfaces are described in this section. These services are APIs exported by the EFI environment through GUID based protocol handles.  The standard set of protocol interfaces are listed here.  Additional protocol interfaces may be added to a system by an EFI device driver.  The EFI Protocol Interfaces are organized into the following groups.   Device Path Protocol Device I/O Protocol Simple Input Protocol Simple Text Output Protocol Block I/O Protocol Disk I/O Protocol File System Protocol Load File Protocol Loaded Image Protocol Serial I/O Protocol Unicode Collation Protocol PXI I/O Protocol Simple Network Protocol Device Path Protocol This protocol does not contain any interfaces.  It simply returns a pointer to the device path for the protocol instance. Device I/O Protocol Table C-2 lists the functions used by device drivers to access hardware devices in a bus specific manner.  Table C-2. Device I/O Protocol Interfaces Description Mem.Read Reads from memory on a bus. Mem.Write Writes to memory on a bus. Io.Read Reads from I/O ports on a bus. Io.Write Writes to I/O ports on a bus. Pci.Read Reads from PCI Configuration Space. Pci.Write Writes to PCI Configuration Space. PciDevicePath Provides an EFI Device Path for a PCI device with the given PCI configuration space address. Provides the device specific addresses needed to access host memory for DMA. Unmap Releases any resources allocated with Map() AllocateBuffer Allocates pages that are suitable for a common buffer mapping. Flush Flushes any posted write data to the device. FreeBuffer Frees pages that were allocated with AllocateBuffer() Simple Input Protocol Table C-3 lists the functions used to access a simple input hardware device. Table C-3. Simple Input Protocol Interfaces Description Reset Resets a simple input device. ReadKeyStroke Read a keystroke from a simple input device. Simple Text Output Protocol Table C-4 lists the functions used to access the standard output device, the standard error device, or any other text based output device. Table C-4. Simple Text Output Protocol Interfaces Description Reset Reset the ConsoleOut device. OutputString Displays the Unicode string on the device at the current cursor location. TestString Test to see if the ConsoleOut device supports this Unicode string. QueryMode Queries information concerning the output device s supported text mode. SetMode Sets the current mode of the output device. SetAttribute Sets the foreground and background color of the text that is output. ClearScreen Clears the screen with the currently set background color. SetCursorPosition Sets the current cursor position. EnableCursor Turns on/off the visibility of the cursor. Block I/O Protocol Table C-5 lists the functions used to access a block based I/O device. Table C-5. Block I/O Protocol Interfaces Description Reset Resets the block device hardware. ReadBlocks Reads the requested number of blocks from the device. WriteBlocks Writes the requested number of blocks to the device. FlushBlocks Flushes any cached blocks. Disk I/O Protocol Table C-6 lists the functions used to access a block based I/O device as a byte stream device. Table C-6. Disk I/O Protocol Interfaces Description ReadDisk Reads data from the disk. WriteDisk Writes data to the disk. Simple File System Protocol Table C-7 lists the functions used to open a partition for file access. Table C-7. Simple File System Protocol Interfaces Description OpenVolume Opens the volume for file I/O access. File System Protocol Table C-8 lists the functions used to maintain files in a partition containing a supported file system. Table C-8. File System Protocol Interfaces Description Opens or creates a new file. Close Closes the current file handle. Delete Deletes a file. Reads bytes from the file. Write Writes bytes to the file. SetPosition Sets the current file position. GetPosition Returns the current file position. GetInfo Gets the requested file or volume information. SetInfo Sets the requested file information. Flush Flushes all modified data associated with the file to the device. Load File Protocol Table C-9 lists the functions used to load drivers from sources other than a file system. Table C-9. Load File Protocol Interfaces Description LoadFile Causes the driver to load the requested file. Loaded Image Protocol Table C-10 lists the functions used to load drivers from sources other than a file system. Table C-10. Loaded Image Protocol Interfaces Description Unload Requests an image to unload. Serial I/O Protocol Table C-11 lists the functions used to access a serial I/O device. Table C-11. Serial I/O Protocol Interfaces Description Reset Resets the hardware device. SetAttributes Sets communication parameters for a serial device.  These include the baud rate, receive FIFO depth, transmit/receive time out, parity, data bits, and stop bit attributes. SetControl Set the control bits on a serial device.  These include Request to Send and Data Terminal Ready. GetControl Read the status of the control bits on a serial device.  These include Clear to Send, Data Set Ready, Ring Indicator, and Carrier Detect. Write Send a buffer of characters to a serial device. Receive a buffer of characters from a serial device. Unicode Collation Protocol Table C-12 lists the functions used to perform case insensitive Unicode string comparisons. Table C-12. Unicode Collation Protocol Interfaces Description StriColl Performs a case insensitive comparison between two Unicode strings. MetaiMatch Performs a case insensitive comparison between aUnicode pattern string and a Unicode string.  The pattern string can use the   wildcard for match any character, and the   wildcard for match any substring. StrLwr Converts characters in a Unicode string to upper case characters. StrUpr Converts characters in a Unicode string to lower case characters. FatToStr Converts a FAT 8.3 file name to a Unicode string StrToFat Converts a Unicode string to a FAT 8.3 file name. PXE I/O Protocol Table C-13 lists the functions used to access a network device. Table C-13. PXE I/O Protocol Interfaces Description Uses the ARP protocol to resolve a MAC address.  Attempts to complete a DHCPv4 D.O.R.A. (discover / offer / request / acknowledge) or DHCPv6 S.A.R.R (solicit / advertise / request / reply) sequence. Discover Attempts to complete the PXE Boot Server and/or boot image discovery sequence. EFI_PXE_BASE_CODE _CALLBACK Callback function that is invoked when the PXE Base Code Protocol is waiting for an event.  Mtftp Is used to perform TFTP and MTFTP services.  SetIpFilter Updates the IP receive filters of a network device and enables software filtering.  SetPackets Updates the contents of the cached DHCP and Discover packets.  SetParameters Updates the parameters that affect the operation of the PXE Base Code Protocol.  SetStationIp Updates the station IP address and/or subnet mask values.  Start Enables the use of PXE Base Code Protocol functions. Disables the use of PXE Base Code Protocol functions. UdpRead Reads a UDP packet from a network interface.  UdpWrite Writes a UDP packet to a network interface.  Simple Network Protocol Table C-14 lists the functions used to access a network device. Table C-14. Simple Network Protocol Interfaces Description GetStatus Reads the current interrupt status and recycled transmit buffer status from the network interface.  Initialize Resets the network adapter and allocates the transmit and receive buffers required by the network interface; also optionally allows space for additional transmit and receive buffers to be allocated MCastIPtoMAC Allows a multicast IP address to be mapped to a multicast HW MAC address.  NVData Allows read and writes to the NVRAM device attached to a network interface.  Receive Receives a packet from the network interface.  Reset Resets the network adapter, and re-initializes it with the parameters that were provided in the previous call to Initialize(). Shutdown Resets the network adapter and leaves it in a state safe for another driver to initialize. Start Changes the network interface from the stopped state to the started state.  StationAddress Allows the station address of the network interface to be modified. Statistics Allows the statistics on the network interface to be reset and/or collected.  Changes the network interface from the started state to the stopped state. Transmit Places a packet in the transmit queue of the network interface.  EFI Library Functions and Macros A high level description of the EFI library functions and macros are described in this section. These library functions are complementary to the APIs described in the EFI specification.  EFI library functions and macros are organized into the following groups.   Initialization Functions Linked List Support Macros String Functions Memory Support Functions CRC Support Functions Text I/O Functions Math Functions Spin Lock Functions Handle and Protocol Functions File I/O Support Functions Device Path Support Functions Miscellaneous Functions Initialization Functions The initialization functions in the EFI Library are used to initialize the execution environment so that other EFI Library function may be used.  Table D-1 lists the initialization support. Table D-1. Initialization Functions Description InitializeLib Initializes the EFI Library. InitializeUnicodeSupport Initializes the use of language dependant Unicode library functions. Linked List Support Macros The EFI Library supplies a set of macros that allow doubly linked lists to be created and maintained.  Table D-2 contains the list of macros. Table D-2. Linked List Support Macros Description InitializeListHead Initializes the head node of a doubly linked list. IsListEmpty Determines if a doubly linked list is empty. RemoveEntryList Removes a node from a doubly linked list. InsertTailList Adds a node to the end of a double linked list. InsertHeadList Adds a node to the beginning of a doubly linked list. String Functions The string functions in the EFI Library perform operations on Unicode and ASCII string.  Table D-3 contains the list of string support functions. Table D-3. String Functions Description StrCmp Compares two Unicode strings. StrnCmp Compares a portion of two Unicode strings. StriCmp Performs a case insensitive comparison of two Unicode strings. StrCpy Copies one Unicode string to another Unicode string. StrCat Concatenates two Unicode strings. StrLen Determines the length of a Unicode string. StrSize Determines the size of a Unicode string in bytes. StrDuplicate Creates a duplicate of a Unicode string. StrLwr Converts characters in a Unicode string to upper case characters. StrUpr Converts characters in a Unicode string to lower case characters. strlena Determines the length of an ASCII string. strcmpa Compares two ASCII strings. strncmpa Compares a portion of two ASCII strings. Converts a hexidecimal formatted Unicode string to an integer. Converts a decimal formatted Unicode string to an integer. MetaMatch Checks to see if a Unicode string matches a given pattern.  MetaiMatch Performs a case insensitive comparison of a Unicode pattern string and a Unicode string.  ValueToString Converts an integer to a decimal formatted Unicode string. ValueToHex Converts an integer to a hexidecimal formatted Unicode string. TimeToString Converts a data structure containing the time and date into a Unicode string. GuidToString Converts a 128 bit GUID into a Unicode string. StatusToString Converts an EFI_STATUS value into a Unicode string. DevicePathToStr Converts a device path data structure into a Unicode string. Memory Support Functions The EFI Library provides a set of functions that operating on buffers in memory.  Buffers can either be allocated on the stack, as global variables, or from the memory pool Table D-4 contains the list of memory support functions. Table D-4. Memory Support Functions Description ZeroMem Fills a buffer with zeros. SetMem Fills a buffer with a value.. CopyMem Copies the contents of one buffer to another buffer. CompareMem Compares the contents of two buffers. AllocatePool Allocates a buffer from pool. AllocateZeroPool Allocates a buffer from pool and fills it with zeros. ReallocatePool Adjusts the size of a previously allocated buffer. FreePool Frees a previously allocated buffer. GrowBuffer Allocates a new buffer or grows the size of a previously allocated buffer. LibMemoryMap Retrieves the system s current memory map. CRC Support Functions The EFI Library provides a set of functions that are used to compute and verify CRC32 values..  Table D-5 contains the list of CRC support functions. Table D-5. CRC Support Functions Description SetCrc Computes and updates the CRC32 value for a table header. SetCrcAltSize Computes and updates the CRC32 value for a portion of a table header. CheckCrc Verifies the CRC32 value for a table header. CheckCrcAltSize Verifies the CRC32 value for a portion of a table header. CalculateCrc Computes the CRC32 value. Text I/O Functions The Text I/O functions in the EFI Library provide a simple means to get input and output from a console device. Table D-6 lists the text I/O functions. Table D-6. Text I/O Functions Description Input Input a Unicode string at the current cursor location using the console in and console out device. IInput Input a Unicode string at the current cursor location using the specified input and output devices. Output Send a Unicode string to the console out device at the current cursor location. Print Sends a formatted Unicode string to the console out device at the current cursor location.. PrintAt Sends a formatted Unicode string to the specified location on the console out device.  IPrint Sends a formatted Unicode string to the specified output device. IPrintAt Sends a formatted Unicode string to the specified location of the specified console device. Aprint Sends a formatted Unicode string to the console out device using an ASCII format string. Sprint Sends a formatted Unicode string to the specified buffer. PoolPrint Sends a formatted Unicode string to a buffer allocated from pool. CatPrint Concatenates a formatted Unicode string to a string allocated from pool. DumpHex Prints the contents of a buffer in hexidecimal format. LibIsValidTextGraphics Determines if a character is a legal Unicode box drawing character. IsValidAscii Determines if a character is a legal ASCII character. IsValidEfiCntlChar Determines if a character is a legal EFI control character. Math Functions The EFI Library provides a few math functions to operate on 64-bit operands.  These include shift operations, multiplication, and division.  Table D-7 lists the set of 64-bit math functions.  Table D-7. Math Functions Description LshiftU64 Shift a 64 bit integer left between 0 and 63 bits. RshiftU64 Shift a 64 bit integer right between 0 and 63 bits. MultU64x32 Multiply a 64 bit unsigned integer by a 32 bit unsigned integer and generate a 64 bit unsigned result. DivU64x32 Divide a 64 bit unsigned integer by a 32 bit unsigned integer and generate a 64 bit unsigned result with an optional 32 bit unsigned remainder. Spin Lock Functions Spin locks are used to protect data structures that may be updated by more than one processor at a time, or a single processor that may update the same data structure while running a several different priority levels.  Table D-8 lists the support functions for creating and maintaining spin locks.   Table D-8. Spin Lock Functions Description InitializeLock Initialize a spin lock. AcquireLock Acquire a spin lock. ReleaseLock Release a spin lock. Handle and Protocol Support Functions The EFI Library contains a set of functions that help drivers maintain the protocol interfaces in the boot services environment.  Table D-9 lists the set of helper functions. Table D-9. Handle and Protocol Support Functions Description LibLocateHandle Finds all device handles that match the specified search criteria. LibLocateHandleByDiskSignature Finds all device handles that support the Block I/O protocol and have a disk with a matching disk signature. LibLocateProtocol Finds the first protocol instance that matches a given protocol. LibInstallProtocolInterfaces Installs one or more protocol interfaces into the boot services environment.. LibUninstallProtocolInterfaces Removes one or more protocol interfaces from the boot services environment. LinReinstallProtocolInterfaces Reinstalls one or more protocol interfaces into the boot services environment. File I/O Support Functions Table D-10 lists the set of file I/O support functions. Table D-10. File I/O Support Functions Description LibOpenRoot Opens and returns a file handle to a root directory of a volume. LibFileInfo Retrieves the file information on an open file handle. LibFileSystemInfo Retrieves the file system information on an open file handle. LibFileSystemVolumeLabelInfo Retrieves the volume label from an open file handle. ValidMBR Determines if a hard drive s Master Boot Record is valid. OpenSimpleReadFile Opens a file from several possible sources and returns a file handle. ReadSimpleReadFile Read from a file opened with OpenSimpleReadFile. CloseSimpleReadFile Close a file opened with OpenSimpleReadFile. Device Path Support Functions Table D-11 lists the support functions for creating and maintaining device path data structures.  Table D-11. Device Path Support Functions Description DevicePathFromHandle Retrieves the device path from a specified handle. DevicePathInstance Retrieves the next device path instance from a device path. DevicePathInstanceCount Returns the number of device path instances in a device path. AppendDevicePath Appends a device path to all the instances of another device path. AppendDevicePathNode Appends a device path node to all the instances of a device path.  AppendDevicePathInstance Appends a device path instance to a device path.  AllocateAndAppendDevicePathNode Allocates and appends a device path node to all the instances of a device path. FileDevicePath Appends a file path to a device path. DevicePathSize Returns the size of a device path in bytes. DuplicateDevicePath Creates a new copy of a device path. LibDevicePathToInterface Retrieves a protocol interface for a device. UnpackDevicePath Naturally aligns all the nodes in a device path. LibMatchDevicePaths Reports membership of a single-instance device path in a possible multi-instance device path. LibDuplicateDevicePathInstance Creates a second corresponding instance of a given device path. PCI Functions and Macros Table D-12 lists some miscellaneous helper functions that are described in the following sections. Table D-12. Miscellaneous Functions and Macros Description PciFindDeviceClass Finds a PCI device that matches the PCI BaseClass and SubClass. PciFindDevice Finds the first PCI device with the specified Device ID and Vendor ID. InitializeGlobalIoDevice Retrieves the DEVICE_IO protocol instance for a given device. ReadPort Reads an I/O port. WritePort Writes to an I/O port. ReadPciConfig Reads an I/O port. WritePciConfig Writes to an I/O port. Read an 8 bit value from an I/O port. Write an 8 bit value to an I/O port. Read a 16 bit value from an I/O port. outpw Write a 16 bit value to an I/O port. Read a 32 bit value from an I/O port. outpw Write a 32 bit value to an I/O port. readpci8 Read an 8 bit value from PCI Configuration Space. writepci8 Write an 8 bit value to PCI Configuration Space. readpci16 Read a 16 bit value from PCI Configuration Space. writepci16 Write a 16 bit value to PCI Configuration Space. readpci32 Read a 32 bit value from PCI Configuration Space. writepci32 Write a 32 bit value to PCI Configuration Space. Miscellaneous Functions and Macros Table D-13 lists some miscellaneous helper functions that are described in the following sections. Table D-13. Miscellaneous Functions and Macros Description LibGetVariable Retrieves and environment variables value. LibGetVariableAndSIze Retrieves and environment variables value and its size in bytes. CompareGuid Compares two 128 bit GUID. Returns a pointer to a elements containing record. DecimaltoBCD Converts a decimal value to a BCD value. BCDtoDecimal Converts a BCD value to a decimal value. LibCreateProtocolNotifyEvent Creates a notification event that fires every time a specific protocol instance type is created. WaitForSingleEvent Waits for an event to fire or a timeout to expire. WaitForEventWithTimeout Waits for either a SIMPLE_INPUT event or a timeout to occur. RtLibEnableVirtualMappings Converts internal library pointers to virtual runtime pointers. RtConvertList Converts pointers in a linked list to virtual runtime pointers. LibGetSystemConfigurationTable Retrieves a system configuration table from the EFI System Table. Sample OS Loader Listing Copyright (c) 1998  Intel Corporation Module Name:     osloader.c Abstract: Author: Revision History #include "efi.h" #include "efilib.h" static CHAR16  *OsLoaderMemoryTypeDesc[EfiMaxMemoryType]  = {             L"reserved  ",             L"LoaderCode",             L"LoaderData",             L"BS_code   ",             L"BS_data   ",             L"RT_code   ",             L"RT_data   ",             L"available ",             L"Unusable  ",             L"ACPI_recl ",             L"ACPI_NVS  ",             L"MemMapIO  ",             L"MemPortIO ",             L"PAL_code  "     }; EFI_STATUS InitializeOSLoader (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     EFI_STATUS              Status;     UINT16                  InputString[20];     EFI_TIME                Time;     CHAR16                  *DevicePathAsString;     EFI_LOADED_IMAGE        *LoadedImage;     EFI_DEVICE_PATH         *DevicePath;     EFI_FILE_IO_INTERFACE   *Vol;     EFI_FILE_HANDLE         RootFs;     EFI_FILE_HANDLE         CurDir;     EFI_FILE_HANDLE         FileHandle;     CHAR16                  FileName[100];     UINTN                   i;     UINTN                   Size;     VOID                    *OsKernelBuffer;     UINTN                   NoHandles;     EFI_HANDLE              *HandleBuffer;     EFI_BLOCK_IO            *BlkIo;     EFI_BLOCK_IO_MEDIA      *Media;     UINT8                   *Block;     UINT32                  MediaId;     VOID                    *AcpiTable              = NULL;     VOID                    *SMBIOSTable            = NULL;     VOID                    *SalSystemTable         = NULL;     VOID                    *MpsTable               = NULL;     EFI_MEMORY_DESCRIPTOR   *MemoryMap;     EFI_MEMORY_DESCRIPTOR   *MemoryMapEntry;     UINTN                   NoEntries;     UINTN                   MapKey;     UINTN                   DescriptorSize;     UINT32                  DescriptorVersion;     UINTN                   VariableNameSize;     CHAR16                  VariableName[256];     EFI_GUID                VendorGuid;     UINT8                   *VariableValue;     //     // Initialize the Library. Set BS, RT, &ST globals     //  BS = Boot Services RT = RunTime Services     //  ST = System Table     //     InitializeLib (ImageHandle, SystemTable);     //     // Print a message to the console output device.     //     Print(L"OS Loader application started\n");     //     // Print Date and Time      //     Status = RT->GetTime(&Time,NULL);     if (!EFI_ERROR(Status)) {         Print(L"Date : %02d/%02d/%04d  Time : %02d:%02d:%02d\n",                Time.Month,Time.Day,Time.Year,Time.Hour,Time.Minute,Time.Second);     }     //     // Get the device handle and file path to the EFI OS Loader itself.     //     Status = BS->HandleProtocol (ImageHandle,                                   &LoadedImageProtocol,                                   &LoadedImage                                  );     if (EFI_ERROR(Status)) {         Print(L"Can not retrieve a LoadedImageProtocol handle for ImageHandle\n");         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     Status = BS->HandleProtocol (LoadedImage->DeviceHandle,                                   &DevicePathProtocol,                                   &DevicePath                                  );     if (EFI_ERROR(Status) || DevicePath==NULL) {         Print(L"Can not find a DevicePath handle for LoadedImage->DeviceHandle\n");         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     DevicePathAsString = DevicePathToStr(DevicePath);     if (DevicePathAsString != NULL) {         Print (L"Image device : %s\n", DevicePathAsString);         FreePool(DevicePathAsString);     }     DevicePathAsString = DevicePathToStr(LoadedImage->FilePath);     if (DevicePathAsString != NULL) {         Print (L"Image file   : %s\n", DevicePathToStr (LoadedImage->FilePath));         FreePool(DevicePathAsString);     }     Print (L"Image Base   : %X\n", LoadedImage->ImageBase);     Print (L"Image Size   : %X\n", LoadedImage->ImageSize);     //     // Open the volume for the device where the EFI OS Loader was loaded from.     //     Status = BS->HandleProtocol (LoadedImage->DeviceHandle,                                  &FileSystemProtocol,                                  &Vol                                  );     if (EFI_ERROR(Status)) {         Print(L"Can not get a FileSystem handle for LoadedImage->DeviceHandle\n");         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     Status = Vol->OpenVolume (Vol, &RootFs);     if (EFI_ERROR(Status)) {         Print(L"Can not open the volume for the file system\n");         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     CurDir = RootFs;     //     // Open the file OSKERNEL.BIN in the same path as the EFI OS Loader.     //     DevicePathAsString = DevicePathToStr(LoadedImage->FilePath);     if (DevicePathAsString!=NULL) {         StrCpy(FileName,DevicePathAsString);         FreePool(DevicePathAsString);     }     for(i=StrLen(FileName);i>0 && FileName[i]!='\\';i--);     FileName[i] = 0;     StrCat(FileName,L"\\OSKERNEL.BIN");     Status = CurDir->Open (CurDir,                            &FileHandle,                            FileName,                            EFI_FILE_MODE_READ,                            0                            );     if (EFI_ERROR(Status)) {         Print(L"Can not open the file %s\n",FileName);         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     Print(L"Opened %s\n",FileName);     //     // Allocate a 1MB buffer for OSKERNEL.BIN     //     Size = 0x00100000;     BS->AllocatePool(EfiLoaderData,                      Size,                      &OsKernelBuffer                      );     if (OsKernelBuffer == NULL) {         Print(L"Can not allocate a buffer for the file %s\n",FileName);         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     //     // Load OSKERNEL.BIN into the allocated memory.     //     Status = FileHandle->Read(FileHandle,                               &Size,                               OsKernelBuffer                               );     if (EFI_ERROR(Status)) {         Print(L"Can not read the file %s\n",FileName);         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     Print(L"%X bytes of OSKERNEL.BIN read into memory at %X\n",Size,OsKernelBuffer);     //     // Close OSKERNEL.BIN      //     Status = FileHandle->Close(FileHandle);     if (EFI_ERROR(Status)) {         Print(L"Can not close the file %s\n",FileName);         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     //     // Free the resources allocated from pool.     //     FreePool(OsKernelBuffer);     Print(L"\nPress [ENTER] to continue...\n");     Input(NULL,InputString,20);     //     // Get a list of all the BLOCK_IO devices     //     NoHandles = 0;     HandleBuffer = NULL;     Status = LibLocateHandle(ByProtocol,                              &BlockIoProtocol,                              NULL,                              &NoHandles,                              &HandleBuffer                              );     if (EFI_ERROR(Status)) {         Print(L"Can not get the array of BLOCK_IO handles\n");         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     //     // Read the first block from each BLOCK_IO device and display it     //     for(i=0;i<NoHandles;i++) {         //         // Get the DEVICE_PATH Protocol Interface to the device         //         Status = BS->HandleProtocol (HandleBuffer[i],                                       &DevicePathProtocol,                                       &DevicePath                                      );         if (EFI_ERROR(Status) || DevicePath==NULL) {             Print(L"Can not get a DevicePath handle for HandleBuffer[%d]\n",i);             BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);         }                  //         // Get the BLOCK_IO Protocol Interface to the device         //         Status = BS->HandleProtocol (HandleBuffer[i],                                      &BlockIoProtocol,                                      &BlkIo                                      );         if (EFI_ERROR(Status) || BlkIo==NULL) {             Print(L"Handle does not support the BLOCK_IO protocol\n");             BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);         }         //         // Allocate a buffer for the first block on the device.         //         Media = BlkIo->Media;         Block = AllocatePool (Media->BlockSize);         if (Block == NULL) {             Print(L"Can not allocate buffer for a block\n");             BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);         }         //         // Read block #0 from the device.         //         MediaId = Media->MediaId;         Status = BlkIo->ReadBlocks(BlkIo,                                     MediaId,                                     (EFI_LBA)0,                                     Media->BlockSize,                                     Block);         //         // Display block#0 from the device.         //         DevicePathAsString = DevicePathToStr(DevicePath);         if (DevicePathAsString != NULL) {             Print(L"\nBlock #0 of device %s\n",DevicePathAsString);             FreePool(DevicePathAsString);         }         DumpHex(0,0,Media->BlockSize,Block);         //         // Free the resources allocated from pool.         //         FreePool(Block);         Print(L"\nPress [ENTER] to continue...\n");         Input(NULL,InputString,20);     }     //     // Free the resources allocated from pool.     //     FreePool(HandleBuffer);     //     // Get System Configuration     //     Print(L"System Configuration Tables:\n\n");     Status = LibGetSystemConfigurationTable(&AcpiTableGuid,&AcpiTable);     if (!EFI_ERROR(Status)) {         Print(L"  ACPI Table is at address                   : %X\n",AcpiTable);     }     Status = LibGetSystemConfigurationTable(&SMBIOSTableGuid,&SMBIOSTable);     if (!EFI_ERROR(Status)) {         Print(L"  SMBIOS Table is at address                 : %X\n",SMBIOSTable);     }     Status = LibGetSystemConfigurationTable(&SalSystemTableGuid,&SalSystemTable);     if (!EFI_ERROR(Status)) {         Print(L"  Sal System Table is at address             : %X\n",SalSystemTable);     }     Status = LibGetSystemConfigurationTable(&MpsTableGuid,&MpsTable);     if (!EFI_ERROR(Status)) {         Print(L"  MPS Table is at address                    : %X\n",MpsTable);     }     Print(L"\nPress [ENTER] to continue...\n");     Input(NULL,InputString,20);     //     // Display the current Memory Map     //     MemoryMap = LibMemoryMap(&NoEntries,&MapKey,&DescriptorSize,&DescriptorVersion);     if (MemoryMap == NULL) {         Print(L"Can not retrieve the current memory map\n");         BS->Exit(ImageHandle,EFI_SUCCESS,0,NULL);     }     Print(L"Memory Descriptor List:\n\n");     Print(L"  Type        Start Address     End Address       Attributes      \n");     Print(L"  ==========  ================  ================  ================\n");     MemoryMapEntry = MemoryMap;     for(i=0;i<NoEntries;i++) {         Print(L"  %s  %lX  %lX  %lX\n",               OsLoaderMemoryTypeDesc[MemoryMapEntry->Type],               MemoryMapEntry->PhysicalStart,               MemoryMapEntry->PhysicalStart +                    LShiftU64(MemoryMapEntry->NumberOfPages,PAGE_SHIFT)-1,               MemoryMapEntry->Attribute);         MemoryMapEntry = NextMemoryDescriptor(MemoryMapEntry, DescriptorSize);     }     //     // Free the resources allocated from pool.     //     FreePool(MemoryMap);     Print(L"\nPress [ENTER] to continue...\n");     Input(NULL,InputString,20);     //     // Display all the Environment Variables     //     Print(L"Environment Variable List:\n\n");     VariableName[0] = 0x0000;     VendorGuid = NullGuid;     Print(L"GUID                                Variable Name        Value\n");     Print(L"=================================== ==================== ========\n");     do {         VariableNameSize = 256;         Status = RT->GetNextVariableName(&VariableNameSize,                                          VariableName,                                          &VendorGuid                                          );         if (Status == EFI_SUCCESS) {             VariableValue = LibGetVariable(VariableName,&VendorGuid);             if (VariableValue != NULL) {                 Print(L"%.-35g %.-20s %X\n",&VendorGuid,VariableName,VariableValue);                 FreePool(VariableValue);             }         }     } while (Status == EFI_SUCCESS);     Print(L"\nPress [ENTER] to continue...\n");     Input(NULL,InputString,20);     //     // Get the most current memory map.     //     MemoryMap = LibMemoryMap(&NoEntries,&MapKey,&DescriptorSize,&DescriptorVersion);     //     // Transition from Boot Services to Run Time Services.       //     Print(L"Call ExitBootServices()\n"); //    BS->ExitBootServices(ImageHandle,MapKey);     Print(L"\nPress [ENTER] to continue...\n");     Input(NULL,InputString,20);     return EFI_SUCCESS; Sample OS Loader Output OS Loader application started Date : 07/14/1999  Time : 14:15:45 Image device : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0) Image file   : \osloader.efi Image Base   : 07E68000 Image Size   : 00008FFF Opened \OSKERNEL.BIN 00009000 bytes of OSKERNEL.BIN read into memory at 07D67008 Press [ENTER] to continue... Block #0 of device  00000000: EB 3C 90 49 4E 54 45 4C-20 20 20 00 02 01 01 00  *.<.INTEL   .....* 00000010: 02 E0 00 40 0B F0 09 00-12 00 02 00 00 00 00 00  *...@............* 00000020: 00 00 00 00 00 01 29 20-20 20 20 45 46 49 20 46  *......)    EFI F* 00000030: 4C 4F 50 50 59 20 46 41-54 31 32 20 20 20 8C C8  *LOPPY FAT12   ..* 00000040: 8E D0 05 00 10 8E D8 BC-00 7C 8B EC B4 08 B2 00  *................* 00000050: CD 13 33 C0 8A C6 24 3F-FE C0 50 8A C1 24 3F 50  *..3...$?..P..$?P* 00000060: 81 BE FE 01 55 AA 0F 85-6F 01 80 BE 00 00 EB 0F  *....U...o.......* 00000070: 85 66 01 81 BE 0B 00 00-02 0F 85 5C 01 80 BE 0D  *.f.........\....* 00000080: 00 00 0F 84 53 01 83 BE-11 00 00 0F 84 4A 01 8B  *....S........J..* 00000090: 86 0E 00 3B 86 13 00 0F-8F 3E 01 33 C9 8D 36 03  *...;.....>.3..6.* 000000A0: 00 B1 08 E8 25 01 8D 36-2B 00 B1 0B E8 1C 01 81  *....%..6+.......* 000000B0: BE 36 00 46 41 0F 85 20-01 81 BE 38 00 54 31 0F  *.6.FA.. ...8.T1.* 000000C0: 85 16 01 B8 20 20 39 86-3B 00 0F 85 0B 01 39 86  *....  9.;.....9.* 000000D0: 3C 00 0F 85 03 01 80 BE-3A 00 32 74 0C 80 BE 3A  *<.......:.2t...:* 000000E0: 00 36 0F 84 F3 00 E9 F0-00 8B 8E 11 00 C1 E1 05  *.6..............* 000000F0: 8B D9 81 E3 FF 01 0F 85-DF 00 8B D9 C1 EB 09 BF  *................* 00000100: 00 00 8A 86 10 00 32 E4-F7 A6 16 00 03 86 0E 00  *......2.........* 00000110: 1E 07 E8 6D 00 03 C3 89-46 00 81 3D 45 46 75 27  *...m....F..=EFu'* 00000120: 81 7D 02 49 4C 75 20 81-7D 04 44 52 75 19 B8 20  *...ILu ...DRu.. * 00000130: 20 39 45 06 75 11 39 45-08 75 0C 39 45 09 75 07  * 9E.u.9E.u.9E.u.* 00000140: 8A 45 0B 24 58 74 0B 83-C7 20 83 E9 20 75 CB E9  *.E.$Xt... .. u..* 00000150: 87 00 8B 4D 1A 8C C8 05-00 20 8E C0 33 FF 8B C1  *...M..... ..3...* 00000160: 83 E8 02 32 FF 8A 9E 0D-00 F7 E3 03 46 00 32 FF  *...2........F.2.* 00000170: 8A 9E 0D 00 06 E8 0A 00-58 89 86 80 01 EA 00 00  *........X.......* 00000180: 00 20 60 8B F0 8B CB BD-FC 7B 8B C6 33 D2 F7 76  *. `.........3..v* 00000190: 00 42 8B 5E 00 2B DA 43-3B CB 7F 02 8B D9 51 8A  *.B.^.+.C;.....Q.* 000001A0: CA 33 D2 F7 76 02 53 8A-F2 B2 00 8A E8 8A C3 B4  *.3..v.S.........* 000001B0: 02 8B DF CD 13 5B 59 03-F3 2B CB 8C C0 C1 E3 05  *.....[Y..+......* 000001C0: 03 C3 8E C0 83 F9 00 75-BE 61 C3 80 3A 7F 7F 09  *.......u.a..:...* 000001D0: 80 3A 20 7C 04 46 E2 F3-C3 CC EB FD 00 00 00 00  *.: ..F..........* 000001E0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001F0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 55 AA  *..............U.* Press [ENTER] to continue... Block #0 of device  00000000: 33 C0 8E D0 BC 00 7C FB-50 07 50 1F FC BE 1B 7C  *3.......P.P.....* 00000010: BF 1B 06 50 57 B9 E5 01-F3 A4 CB BE BE 07 B1 04  *...PW...........* 00000020: 38 2C 7C 09 75 15 83 C6-10 E2 F5 CD 18 8B 14 8B  *8,..u...........* 00000030: EE 83 C6 10 49 74 16 38-2C 74 F6 BE 10 07 4E AC  *....It.8,t....N.* 00000040: 3C 00 74 FA BB 07 00 B4-0E CD 10 EB F2 89 46 25  *<.t...........F%* 00000050: 96 8A 46 04 B4 06 3C 0E-74 11 B4 0B 3C 0C 74 05  *..F...<.t...<.t.* 00000060: 3A C4 75 2B 40 C6 46 25-06 75 24 BB AA 55 50 B4  *:.u+@.F%.u$..UP.* 00000070: 41 CD 13 58 72 16 81 FB-55 AA 75 10 F6 C1 01 74  *A..Xr...U.u....t* 00000080: 0B 8A E0 88 56 24 C7 06-A1 06 EB 1E 88 66 04 BF  *....V$.......f..* 00000090: 0A 00 B8 01 02 8B DC 33-C9 83 FF 05 7F 03 8B 4E  *.......3.......N* 000000A0: 25 03 4E 02 CD 13 72 29-BE 75 07 81 3E FE 7D 55  *%.N...r).u..>..U* 000000B0: AA 74 5A 83 EF 05 7F DA-85 F6 75 83 BE 3F 07 EB  *.tZ.......u..?..* 000000C0: 8A 98 91 52 99 03 46 08-13 56 0A E8 12 00 5A EB  *...R..F..V....Z.* 000000D0: D5 4F 74 E4 33 C0 CD 13-EB B8 00 00 80 01 44 16  *.Ot.3.........D.* 000000E0: 56 33 F6 56 56 52 50 06-53 51 BE 10 00 56 8B F4  *V3.VVRP.SQ...V..* 000000F0: 50 52 B8 00 42 8A 56 24-CD 13 5A 58 8D 64 10 72  *PR..B.V$..ZX.d.r* 00000100: 0A 40 75 01 42 80 C7 02-E2 F7 F8 5E C3 EB 74 49  *.@u.B......^..tI* 00000110: 6E 76 61 6C 69 64 20 70-61 72 74 69 74 69 6F 6E  *nvalid partition* 00000120: 20 74 61 62 6C 65 2E 20-53 65 74 75 70 20 63 61  * table. Setup ca* 00000130: 6E 6E 6F 74 20 63 6F 6E-74 69 6E 75 65 2E 00 45  *nnot continue..E* 00000140: 72 72 6F 72 20 6C 6F 61-64 69 6E 67 20 6F 70 65  *rror loading ope* 00000150: 72 61 74 69 6E 67 20 73-79 73 74 65 6D 2E 20 53  *rating system. S* 00000160: 65 74 75 70 20 63 61 6E-6E 6F 74 20 63 6F 6E 74  *etup cannot cont* 00000170: 69 6E 75 65 2E 00 00 00-00 00 00 00 00 00 00 00  *inue............* 00000180: 00 00 00 8B FC 1E 57 8B-F5 CB 00 00 00 00 00 00  *......W.........* 00000190: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001A0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001B0: 00 00 00 00 00 00 00 00-A3 F4 00 00 00 00 80 01  *................* 000001C0: 01 00 0B 7F 7F EF 3F 00-00 00 C1 07 3D 00 00 00  *......?.....=...* 000001D0: 41 F0 05 7F FF DF 00 08-3D 00 00 08 3D 00 00 00  *A.......=...=...* 000001E0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001F0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 55 AA  *..............U.* Press [ENTER] to continue... Block #0 of device  00000000: EB 58 90 4D 53 57 49 4E-34 2E 31 00 02 08 20 00  *.X.MSWIN4.1... .* 00000010: 02 00 00 00 00 F8 00 00-3F 00 80 00 3F 00 00 00  *........?...?...* 00000020: C1 07 3D 00 3F 0F 00 00-00 00 00 00 02 00 00 00  *..=.?...........* 00000030: 01 00 06 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 00000040: 80 00 29 EB 17 22 1D 4E-4F 20 4E 41 4D 45 20 20  *..)..".NO NAME  * 00000050: 20 20 46 41 54 33 32 20-20 20 33 C9 8E D1 BC F4  *  FAT32   3.....* 00000060: 7B 8E C1 8E D9 BD 00 7C-88 4E 02 8A 56 40 B4 08  *.........N..V@..* 00000070: CD 13 73 05 B9 FF FF 8A-F1 66 0F B6 C6 40 66 0F  *..s......f...@f.* 00000080: B6 D1 80 E2 3F F7 E2 86-CD C0 ED 06 41 66 0F B7  *....?.......Af..* 00000090: C9 66 F7 E1 66 89 46 F8-83 7E 16 00 75 38 83 7E  *.f..f.F.....u8..* 000000A0: 2A 00 77 32 66 8B 46 1C-66 83 C0 0C BB 00 80 B9  **.w2f.F.f.......* 000000B0: 01 00 E8 2B 00 E9 48 03-A0 FA 7D B4 7D 8B F0 AC  *...+..H.........* 000000C0: 84 C0 74 17 3C FF 74 09-B4 0E BB 07 00 CD 10 EB  *..t.<.t.........* 000000D0: EE A0 FB 7D EB E5 A0 F9-7D EB E0 98 CD 16 CD 19  *................* 000000E0: 66 60 66 3B 46 F8 0F 82-4A 00 66 6A 00 66 50 06  *f`f;F...J.fj.fP.* 000000F0: 53 66 68 10 00 01 00 80-7E 02 00 0F 85 20 00 B4  *Sfh.......... ..* 00000100: 41 BB AA 55 8A 56 40 CD-13 0F 82 1C 00 81 FB 55  *A..U.V@........U* 00000110: AA 0F 85 14 00 F6 C1 01-0F 84 0D 00 FE 46 02 B4  *.............F..* 00000120: 42 8A 56 40 8B F4 CD 13-B0 F9 66 58 66 58 66 58  *B.V@......fXfXfX* 00000130: 66 58 EB 2A 66 33 D2 66-0F B7 4E 18 66 F7 F1 FE  *fX.*f3.f..N.f...* 00000140: C2 8A CA 66 8B D0 66 C1-EA 10 F7 76 1A 86 D6 8A  *...f..f....v....* 00000150: 56 40 8A E8 C0 E4 06 0A-CC B8 01 02 CD 13 66 61  *V@............fa* 00000160: 0F 82 54 FF 81 C3 00 02-66 40 49 0F 85 71 FF C3  *..T.....f@I..q..* 00000170: 4E 54 4C 44 52 20 20 20-20 20 20 0D 0A 4E 54 4C  *NTLDR      ..NTL* 00000180: 44 52 20 69 73 20 6D 69-73 73 69 6E 67 FF 0D 0A  *DR is missing...* 00000190: 44 69 73 6B 20 65 72 72-6F 72 FF 0D 0A 50 72 65  *Disk error...Pre* 000001A0: 73 73 20 61 6E 79 20 6B-65 79 20 74 6F 20 72 65  *ss any key to re* 000001B0: 73 74 61 72 74 0D 0A 00-00 00 00 00 00 00 00 00  *start...........* 000001C0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001D0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001E0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 000001F0: 00 00 00 00 00 00 00 00-00 7B 8E 9B 00 00 55 AA  *..............U.* Press [ENTER] to continue... Block #0 of device  00000000: EB 3C 90 4D 53 57 49 4E-34 2E 31 00 02 04 01 00  *.<.MSWIN4.1.....* 00000010: 02 00 02 00 00 F8 67 00-3F 00 80 00 3F 00 00 00  *......g.?...?...* 00000020: 41 99 01 00 80 00 29 E3-18 61 2D 4E 4F 20 4E 41  *A.....)..a-NO NA* 00000030: 4D 45 20 20 20 20 46 41-54 31 36 20 20 20 33 C9  *ME    FAT16   3.* 00000040: 8E D1 BC FC 7B 16 07 BD-78 00 C5 76 00 1E 56 16  *........x..v..V.* 00000050: 55 BF 22 05 89 7E 00 89-4E 02 B1 0B FC F3 A4 06  *U.".....N.......* 00000060: 1F BD 00 7C C6 45 FE 0F-38 4E 24 7D 20 8B C1 99  *.....E..8N$. ...* 00000070: E8 7E 01 83 EB 3A 66 A1-1C 7C 66 3B 07 8A 57 FC  *.....:f...f;..W.* 00000080: 75 06 80 CA 02 88 56 02-80 C3 10 73 ED 33 C9 FE  *u.....V....s.3..* 00000090: 06 D8 7D 8A 46 10 98 F7-66 16 03 46 1C 13 56 1E  *....F...f..F..V.* 000000A0: 03 46 0E 13 D1 8B 76 11-60 89 46 FC 89 56 FE B8  *.F....v.`.F..V..* 000000B0: 20 00 F7 E6 8B 5E 0B 03-C3 48 F7 F3 01 46 FC 11  * ....^...H...F..* 000000C0: 4E FE 61 BF 00 07 E8 28-01 72 3E 38 2D 74 17 60  *N.a....(.r>8-t.`* 000000D0: B1 0B BE D8 7D F3 A6 61-74 3D 4E 74 09 83 C7 20  *.......at=Nt... * 000000E0: 3B FB 72 E7 EB DD FE 0E-D8 7D 7B A7 BE 7F 7D AC  *;.r.............* 000000F0: 98 03 F0 AC 98 40 74 0C-48 74 13 B4 0E BB 07 00  *.....@t.Ht......* 00000100: CD 10 EB EF BE 82 7D EB-E6 BE 80 7D EB E1 CD 16  *................* 00000110: 5E 1F 66 8F 04 CD 19 BE-81 7D 8B 7D 1A 8D 45 FE  *^.f...........E.* 00000120: 8A 4E 0D F7 E1 03 46 FC-13 56 FE B1 04 E8 C2 00  *.N....F..V......* 00000130: 72 D7 EA 00 02 70 00 52-50 06 53 6A 01 6A 10 91  *r....p.RP.Sj.j..* 00000140: 8B 46 18 A2 26 05 96 92-33 D2 F7 F6 91 F7 F6 42  *.F..&...3......B* 00000150: 87 CA F7 76 1A 8A F2 8A-E8 C0 CC 02 0A CC B8 01  *...v............* 00000160: 02 80 7E 02 0E 75 04 B4-42 8B F4 8A 56 24 CD 13  *.....u..B...V$..* 00000170: 61 61 72 0A 40 75 01 42-03 5E 0B 49 75 77 C3 03  *aar.@u.B.^.Iuw..* 00000180: 18 01 27 0D 0A 49 6E 76-61 6C 69 64 20 73 79 73  *..'..Invalid sys* 00000190: 74 65 6D 20 64 69 73 6B-FF 0D 0A 44 69 73 6B 20  *tem disk...Disk * 000001A0: 49 2F 4F 20 65 72 72 6F-72 FF 0D 0A 52 65 70 6C  *I/O error...Repl* 000001B0: 61 63 65 20 74 68 65 20-64 69 73 6B 2C 20 61 6E  *ace the disk, an* 000001C0: 64 20 74 68 65 6E 20 70-72 65 73 73 20 61 6E 79  *d then press any* 000001D0: 20 6B 65 79 0D 0A 00 00-49 4F 20 20 20 20 20 20  * key....IO      * 000001E0: 53 59 53 4D 53 44 4F 53-20 20 20 53 59 53 7F 01  *SYSMSDOS   SYS..* 000001F0: 00 41 BB 00 07 60 66 6A-00 E9 3B FF 00 00 55 AA  *.A...`fj..;...U.* Press [ENTER] to continue... System Configuration Tables:   ACPI Table is at address                   : 00000000   SMBIOS Table is at address                 : 00000000   MPS Table is at address                    : 00000000 Press [ENTER] to continue... Memory Descriptor List:   Type        Start Address     End Address       Attributes         ==========  ================  ================  ================   BS_data     0000000000000000  0000000000000FFF  0000000000000008   available   0000000000001000  000000000001FFFF  0000000000000008   BS_data     0000000000020000  0000000000021FFF  0000000000000008   available   0000000000022000  0000000000089FFF  0000000000000008   BS_data     000000000008A000  000000000009AFFF  0000000000000008   BS_code     000000000009B000  000000000009EFFF  0000000000000008   BS_data     000000000009F000  000000000009FFFF  0000000000000008   BS_data     00000000000F0000  00000000000FFFFF  0000000000000008   available   0000000000100000  00000000001DFFFF  0000000000000008   BS_data     00000000001E0000  00000000001FFFFF  0000000000000008   available   0000000000200000  0000000000200FFF  0000000000000008   BS_code     0000000000201000  0000000000215FFF  0000000000000008   RT_code     0000000000216000  0000000000218FFF  8000000000000008   BS_data     0000000000219000  000000000021BFFF  0000000000000008   RT_data     000000000021C000  000000000021CFFF  8000000000000008   BS_data     000000000021D000  000000000021DFFF  0000000000000008   available   000000000021E000  0000000007E67FFF  0000000000000008   LoaderData  0000000007E68000  0000000007E68FFF  0000000000000008   LoaderCode  0000000007E69000  0000000007E6CFFF  0000000000000008   LoaderData  0000000007E6D000  0000000007E74FFF  0000000000000008   available   0000000007E75000  0000000007E7AFFF  0000000000000008   LoaderData  0000000007E7B000  0000000007E7BFFF  0000000000000008   BS_data     0000000007E7C000  0000000007E85FFF  0000000000000008   RT_data     0000000007E86000  0000000007E86FFF  8000000000000008   BS_data     0000000007E87000  0000000007E87FFF  0000000000000008   BS_code     0000000007E88000  0000000007E93FFF  0000000000000008   BS_data     0000000007E94000  0000000007E99FFF  0000000000000008   LoaderData  0000000007E9A000  0000000007E9BFFF  0000000000000008   BS_data     0000000007E9C000  0000000007E9CFFF  0000000000000008   LoaderData  0000000007E9D000  0000000007E9DFFF  0000000000000008   LoaderCode  0000000007E9E000  0000000007EA1FFF  0000000000000008   LoaderData  0000000007EA2000  0000000007EA4FFF  0000000000000008   BS_data     0000000007EA5000  0000000007FC6FFF  0000000000000008   RT_data     0000000007FC7000  0000000007FC8FFF  8000000000000008   BS_data     0000000007FC9000  0000000007FCEFFF  0000000000000008   RT_data     0000000007FCF000  0000000007FCFFFF  8000000000000008   BS_data     0000000007FD0000  0000000007FFFFFF  0000000000000008   BS_data     00000000FFFE0000  00000000FFFFFFFF  0000000000000008 Press [ENTER] to continue... Environment Variable List: GUID                                Variable Name        Value =================================== ==================== ======== Efi                                 Lang                 07E9AF08 Efi                                 Timeout              07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 DevIo                07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 fs                   07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 diskio               07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 blkio                07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 txtin                07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 txtout               07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 load                 07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 image                07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 varstore             07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 dpath                07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 unicode              07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 pxe                  07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 ShellInt             07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 SEnv                 07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 ShellProtId          07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 ShellDevPathMap      07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 ShellAlias           07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 G0                   07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 Efi                  07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 GenFileInfo          07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 FileSysInfo          07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 PcAnsi               07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 Unknown Device       07E9AF08 47C7B227-C42A-11D2-8E57-00A0C969723 dir                  07E9AF08 47C7B227-C42A-11D2-8E57-00A0C969723 md                   07E9AF08 47C7B227-C42A-11D2-8E57-00A0C969723 rd                   07E9AF08 47C7B227-C42A-11D2-8E57-00A0C969723 del                  07E9AF08 47C7B227-C42A-11D2-8E57-00A0C969723 copy                 07E9AF08 47C7B226-C42A-11D2-8E57-00A0C969723 LegacyBoot           07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 fs0                  07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 fs1                  07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 fs2                  07E7BF08 47C7B225-C42A-11D2-8E57-00A0C969723 fs3                  07E7BF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk0                 07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk1                 07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk2                 07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk3                 07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk4                 07E7BF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk5                 07E7BF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk6                 07E7BF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk7                 07E9AF08 47C7B225-C42A-11D2-8E57-00A0C969723 blk8                 07E9AF08 47C7B224-C42A-11D2-8E57-00A0C969723 path                 07E7BF08 Efi                                 LangCodes            07E9AF08 Press [ENTER] to continue... Call ExitBootServices() Press [ENTER] to continue... Intel Boot Initiative  PAGE  Intel Confidential  DATE \@ "MM/dd/yy"  05/04/00 Version 0.70.9 Version 0.70.99    DATE \@ "MM/dd/yy"  05/04/00  PAGE  S3fgH }vokd]YK |yvsgdaSN }xsnid_ZS {wpie^WS zsleaZSL ~wpie^WPL ~wpie^WPL |unjc\UQ |unjc\UQ |unje^WPL |unjc\UQ {vqlgb]XS {vqlgb]X ~ytoje`[V ~ytoje`[V ~{vqlg ~ytoje`[ }xsnid_Z ~ytoje`[ {vqlgb]X |wrmhc^YV fc`]Z ~ytoje`[V ~ytoje`[V zupkfXSN }zuroje`[ ~ytoje`[ |wifa\WT ~ytoj\Y }xsnid_Z ~ytoa^YV |wrmhcU vqlifa\W ~ytfa\WT zupkhe`[V ~ytoje`[ ~ytoje`[V ~ytoje` }xsnid_ZU ~ytoje`[ zupkhc^Y ~ytoje`R zupkfa\ }xsn`[V {mhc^[X }xsnid_ZU {vqlgb]X ~ytoje`[ {vqlgb_Z zupkfa\ xumj^[VQ ~ytoje`[ ~pmjgb]X {vqlgb]X ~ytoje` xuog_W }zupkfa\W |wrmhc^P }xsnid_Z ~wsleaZSOH xtmfb[TP xqmf_[TM ~zslh[VO urmf_[TM ~zslh[XSL |yqiaYQI yrng`\UNJ {tpc`[TM ~zslhaZVO xtmfb[TP {nkf_XTM {wpie^WS }xqjf_XTM xtmfb[TP xqmf_[TM S3fgH }vok^[VO {wpie^WS xph`XMJ yungc\UQ xqmf_[TM }vokd]YR |ytmfb[TP {tpib^QN zungc\UQ {tpib^WP ~zslhaZVO |uqjc_XQM }vokd]YRK ~zslhaZVO {wpie^WS xqmf_[TM }vokd]YR xtmfb[TP xsnid_ZUP ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[V ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\efiutil\sdk\notes\efi_lib.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDNancy Navarro 8x11spec97ibi3.dot Intel Corporation Microsoft Word 8.0yfU/} |QP 6c -6}#. L6y~V( foWxn0sb<F~ 'ZOwbY ILg0b= c,b#o v8d-a =0'V9 *3,+u% TuAo/ -qHr> X;"04 z[ndnb R;G/? 0qS`P "#?S' >tlg0 M5~Bj [f{\- jrkS= ee)Vi 3H068 o~*e<T QZ[MQu r&ON##' Qmff: X'AZy z[zMF 52\r" kmt}|9 yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ,ID="{C56AC065-DE35-11D2-99FC-0090273FC14D}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="BFBD6B2E95525056505650565056" DPB="7E7CAAEFD6119412941294" GC="3D3FE9AC176A186A1895" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=44, 44, 840, 674,  NewMacros=22, 22, 982, 679, ZThisDocument NewMacrosMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Macro recorded 03/19/99 by Michael Kinney Project.NewMacros.FV Project.NewMacros.FB Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney  FH Macro  Macro recorded 03/19/99 by Michael Kinney Heading 3  Fuction  FV Macro  Macro recorded 03/19/99 by Michael Kinney Parameters9 Function5 Stop Recording$  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5 CodeIBIProtoArgument  Times New Roman  FA Macro  Macro recorded 03/22/99 by Michael Kinney Stop Recording$  FA Macro  Macro recorded 03/22/99 by Michael Kinney CodeIBIProtoArgument   FB Macro  Macro recorded 03/24/99 by Michael Kinney CodeIBIPrototype  Attribut e VB_Nam e = "New Macros" Sub FH( Descript corded 0 3/19/99  by Micha el Kinne ProcD VInvo ke_Func ject. omeKey U nit:=wdL ActiveD ocument. s("Head ing 3" .Type Text  Paragr iAiCopy MeEscap $MoAown {, PCoun ind.Clea rFormatt With  Al.Bs Replace? MatchC Wild*c S`)ds !Z!+C) +.E8xec@ CodeIBI htoArgB Tab &  Times  Roma Itali wdToggl ColorIn "Fook 5Ck$ZBl$BAttribut e VB_Nam e = "Thi sDocumen 1Normal VCreata `False Predecl "Expose Template Deriv stomiz336f2c544 536f914f7 Win16 Win32 EFILIB7 stdole MSFormsC ThisDocument< _Evaluate Normal Office Project- Module1b NewMacros SelectionZ Style ActiveDocument Styles EndKey5 wdLine TypeText TypeParagraph Documentj HomeKey MoveDown Count0v MoveUp Findn ClearFormatting Replacement Forward WrapWy wdFindContinueBP MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY EscapeKey CommandBars Visible wdFindAskt Paste vbTabc9 FontU Italic! wdToggle ColorIndex wdAutoKV*\CNormalrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\STDOLE2.TLB stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office CodeIBIPrototype CodeIBIProtoArgumentNMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Project.NewMacros.FV Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney Project.NewMacros.FB4Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ STDOLE2. tomation mMSFo@rms> FC56AC0 4D-DE35- 11D2-99F F90273F0C14D WD#Micro soft   Libprary D4E493-E PTEMP \VBE\ CvN@SalCv 2DF8D04C -5BFA-10 1B-BDE5 gram FilXes\ SO97.DLLCHi ThisDoc@ument h@6sD SNewMaEAbjbjt+t+ Extensible Firmware Interface  Library Specification nhanced  Draft for Review Version 0.997  April24, 20008 THIS SPECIFICATION IS PROVIDED "AS IS" WITH NO WARRANTIES  WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY,  FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE.  A license is hereby granted to copy and reproduce this specification for internal use only. No other license, express or implied, by estoppel or otherwise, to any other intellectual property rights is granted herein. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to implementation of information in this specification.  Intel does not warrant or represent that such implementation(s) will not infringe such rights.  Third-party trademarks are the property of their respective owners. Copyright ( 2000. Intel Corporation, All Rights Reserved. Revision History Revision Revision History Author Initial review draft 3/24/99 Intel Updated to match 0.91.007 Sample Implementation 7/14/99 Intel Updated to match 0.91.009 Sample Implementation 11/17/99 Intel Updated to match 0.99.12.20 Sample Implementation 4/24/00 Intel Table of Contents  TOC \o "1-3"  1 Introduction  PAGEREF _Toc481226401 \h  Organization of this Document  PAGEREF _Toc481226402 \h  Goals  PAGEREF _Toc481226403 \h  Target Audience  PAGEREF _Toc481226404 \h  Prerequisite Specifications  PAGEREF _Toc481226405 \h  Conventions Used in This Document  PAGEREF _Toc481226406 \h  1.5.1 Data Structure Illustrations  PAGEREF _Toc481226407 \h  1.5.2 Typographic Conventions  PAGEREF _Toc481226408 \h  2 Constants  PAGEREF _Toc481226409 \h  3 Global Variables  PAGEREF _Toc481226410 \h  4 Functions and Macros  PAGEREF _Toc481226411 \h  Initialization Functions  PAGEREF _Toc481226412 \h  4.1.1 InitializeLib Function  PAGEREF _Toc481226413 \h  4.1.2 InitializeUnicodeSupport Function  PAGEREF _Toc481226414 \h  Linked List Support Macros  PAGEREF _Toc481226415 \h  4.2.1 InitializeListHead Macro  PAGEREF _Toc481226416 \h  4.2.2 IsListEmpty Macro  PAGEREF _Toc481226417 \h  4.2.3 RemoveEntryList Macro  PAGEREF _Toc481226418 \h  4.2.4 InsertTailList Macro  PAGEREF _Toc481226419 \h  4.2.5 InsertHeadList Macro  PAGEREF _Toc481226420 \h  String Functions  PAGEREF _Toc481226421 \h  4.3.1 StrCmp Function  PAGEREF _Toc481226422 \h  4.3.2 StrnCmp Function  PAGEREF _Toc481226423 \h  4.3.3 StriCmp Function  PAGEREF _Toc481226424 \h  4.3.4 StrCpy Function  PAGEREF _Toc481226425 \h  4.3.5 StrCat Function  PAGEREF _Toc481226426 \h  4.3.6 StrLen Function  PAGEREF _Toc481226427 \h  4.3.7 StrSize Function  PAGEREF _Toc481226428 \h  4.3.8 StrDuplicate Function  PAGEREF _Toc481226429 \h  4.3.9 StrLwr Function  PAGEREF _Toc481226430 \h  4.3.10 StrUpr Function  PAGEREF _Toc481226431 \h  4.3.11 strlena Function  PAGEREF _Toc481226432 \h  4.3.12 strcmpa Function  PAGEREF _Toc481226433 \h  4.3.13 strncmpa Function  PAGEREF _Toc481226434 \h  4.3.14 xtoi Function  PAGEREF _Toc481226435 \h  4.3.15 Atoi Function  PAGEREF _Toc481226436 \h  4.3.16 MetaMatch Function  PAGEREF _Toc481226437 \h  4.3.17 MetaiMatch Function  PAGEREF _Toc481226438 \h  4.3.18 ValueToString Function  PAGEREF _Toc481226439 \h  4.3.19 ValueToHex Function  PAGEREF _Toc481226440 \h  4.3.20 TimeToString Function  PAGEREF _Toc481226441 \h  4.3.21 GuidToString Function  PAGEREF _Toc481226442 \h  4.3.22 StatusToString Function  PAGEREF _Toc481226443 \h  4.3.23 DevicePathToStr Function  PAGEREF _Toc481226444 \h  Memory Support Functions  PAGEREF _Toc481226445 \h  4.4.1 ZeroMem Function  PAGEREF _Toc481226446 \h  4.4.2 SetMem Function  PAGEREF _Toc481226447 \h  4.4.3 CopyMem Function  PAGEREF _Toc481226448 \h  4.4.4 CompareMem Function  PAGEREF _Toc481226449 \h  4.4.5 AllocatePool Function  PAGEREF _Toc481226450 \h  4.4.6 AllocateZeroPool Function  PAGEREF _Toc481226451 \h  4.4.7 ReallocatePool Function  PAGEREF _Toc481226452 \h  4.4.8 FreePool Function  PAGEREF _Toc481226453 \h  4.4.9 GrowBuffer Function  PAGEREF _Toc481226454 \h  4.4.10 LibMemoryMap Function  PAGEREF _Toc481226455 \h  CRC Support Functions  PAGEREF _Toc481226456 \h  4.5.1 SetCrc Function  PAGEREF _Toc481226457 \h  4.5.2 SetCrcAltSize Function  PAGEREF _Toc481226458 \h  4.5.3 CheckCrc Function  PAGEREF _Toc481226459 \h  4.5.4 CheckCrcAltSize Function  PAGEREF _Toc481226460 \h  4.5.5 CalculateCrc Function  PAGEREF _Toc481226461 \h  Text I/O Functions  PAGEREF _Toc481226462 \h  4.6.1 Input Function  PAGEREF _Toc481226463 \h  4.6.2 IInput Function  PAGEREF _Toc481226464 \h  4.6.3 Output Function  PAGEREF _Toc481226465 \h  4.6.4 Print Function  PAGEREF _Toc481226466 \h  4.6.5 PrintAt Function  PAGEREF _Toc481226467 \h  4.6.6 IPrint Function  PAGEREF _Toc481226468 \h  4.6.7 IPrintAt Function  PAGEREF _Toc481226469 \h  4.6.8 APrint Function  PAGEREF _Toc481226470 \h  4.6.9 SPrint Function  PAGEREF _Toc481226471 \h  4.6.10 PoolPrint Function  PAGEREF _Toc481226472 \h  4.6.11 CatPrint Function  PAGEREF _Toc481226473 \h  4.6.12 DumpHex Function  PAGEREF _Toc481226474 \h  4.6.13 LibIsValidTextGraphics Function  PAGEREF _Toc481226475 \h  4.6.14 IsValidAscii Function  PAGEREF _Toc481226476 \h  4.6.15 IsValidEfiCntlChar Function  PAGEREF _Toc481226477 \h  Math Functions  PAGEREF _Toc481226478 \h  4.7.1 LshiftU64 Function  PAGEREF _Toc481226479 \h  4.7.2 RshiftU64 Function  PAGEREF _Toc481226480 \h  4.7.3 MultU64x32 Function  PAGEREF _Toc481226481 \h  4.7.4 DivU64x32 Function  PAGEREF _Toc481226482 \h  Spin Lock Functions  PAGEREF _Toc481226483 \h  4.8.1 InitializeLock Function  PAGEREF _Toc481226484 \h  4.8.2 AcquireLock Function  PAGEREF _Toc481226485 \h  4.8.3 ReleaseLock Function  PAGEREF _Toc481226486 \h  Handle and Protocol Support Functions  PAGEREF _Toc481226487 \h  4.9.1 LibLocateHandle Function  PAGEREF _Toc481226488 \h  4.9.2 LibLocateHandleByDiskSignature Function  PAGEREF _Toc481226489 \h  4.9.3 LibLocateProtocol Function  PAGEREF _Toc481226490 \h  4.9.4 LibInstallProtocolInterfaces Function  PAGEREF _Toc481226491 \h  4.9.5 LibUninstallProtocolInterfaces Function  PAGEREF _Toc481226492 \h  4.9.6 LibReinstallProtocolInterfaces Function  PAGEREF _Toc481226493 \h  File I/O Support Functions  PAGEREF _Toc481226494 \h  4.10.1 LibOpenRoot Function  PAGEREF _Toc481226495 \h  4.10.2 LibFileInfo Function  PAGEREF _Toc481226496 \h  4.10.3 LibFileSystemInfo Function  PAGEREF _Toc481226497 \h  4.10.4 LibFileSystemVolumeLabelInfo Function  PAGEREF _Toc481226498 \h  4.10.5 ValidMBR Function  PAGEREF _Toc481226499 \h  4.10.6 OpenSimpleReadFile Function  PAGEREF _Toc481226500 \h  4.10.7 ReadSimpleReadFile Function  PAGEREF _Toc481226501 \h  4.10.8 CloseSimpleReadFile Function  PAGEREF _Toc481226502 \h  Device Path Support Functions  PAGEREF _Toc481226503 \h  4.11.1 DevicePathFromHandle Function  PAGEREF _Toc481226504 \h  4.11.2 DevicePathInstance Function  PAGEREF _Toc481226505 \h  4.11.3 DevicePathInstanceCount Function  PAGEREF _Toc481226506 \h  4.11.4 AppendDevicePath Function  PAGEREF _Toc481226507 \h  4.11.5 AppendDevicePathNode Function  PAGEREF _Toc481226508 \h  4.11.6 AppendDevicePathInstance Function  PAGEREF _Toc481226509 \h  4.11.7 FileDevicePath Function  PAGEREF _Toc481226510 \h  4.11.8 DevicePathSize Function  PAGEREF _Toc481226511 \h  4.11.9 DuplicateDevicePath Function  PAGEREF _Toc481226512 \h  4.11.10 LibDevicePathToInterface Function  PAGEREF _Toc481226513 \h  4.11.11 UnpackDevicePath Function  PAGEREF _Toc481226514 \h  4.11.12 LibMatchDevicePaths Function  PAGEREF _Toc481226515 \h  4.11.13 LibDuplicateDevicePathInstance Function  PAGEREF _Toc481226516 \h  PCI Functions and Macros  PAGEREF _Toc481226517 \h  4.12.1 PciFindDeviceClass Function  PAGEREF _Toc481226518 \h  4.12.2 PciFindDevice Function  PAGEREF _Toc481226519 \h  4.12.3 InitializeGlobalIoDevice Function  PAGEREF _Toc481226520 \h  4.12.4 ReadPort Function  PAGEREF _Toc481226521 \h  4.12.5 WritePort Function  PAGEREF _Toc481226522 \h  4.12.6 ReadPciConfig Function  PAGEREF _Toc481226523 \h  4.12.7 WritePciConfig Function  PAGEREF _Toc481226524 \h  4.12.8 inp Macro  PAGEREF _Toc481226525 \h  4.12.9 outp Macro  PAGEREF _Toc481226526 \h  4.12.10 inpw Macro  PAGEREF _Toc481226527 \h  4.12.11 outpw Macro  PAGEREF _Toc481226528 \h  4.12.12 inpd Macro  PAGEREF _Toc481226529 \h  4.12.13 outpd Macro  PAGEREF _Toc481226530 \h  4.12.14 readpci8 Macro  PAGEREF _Toc481226531 \h  4.12.15 writepci8 Macro  PAGEREF _Toc481226532 \h  4.12.16 readpci16 Macro  PAGEREF _Toc481226533 \h  4.12.17 writepci16 Macro  PAGEREF _Toc481226534 \h  4.12.18 readpci32 Macro  PAGEREF _Toc481226535 \h  4.12.19 writepci32 Macro  PAGEREF _Toc481226536 \h  Miscellaneous Functions and Macros  PAGEREF _Toc481226537 \h  4.13.1 LibGetVariable Function  PAGEREF _Toc481226538 \h  4.13.2 LibGetVariableAndSize Function  PAGEREF _Toc481226539 \h  4.13.3 CompareGuid Function  PAGEREF _Toc481226540 \h  4.13.4 CR Macro  PAGEREF _Toc481226541 \h  4.13.5 DecimaltoBCD Function  PAGEREF _Toc481226542 \h  4.13.6 BCDtoDecimal Function  PAGEREF _Toc481226543 \h  4.13.7 LibCreateProtocolNotifyEvent Function  PAGEREF _Toc481226544 \h  4.13.8 WaitForSingleEvent Function  PAGEREF _Toc481226545 \h  4.13.9 WaitForEventWithTimeout Function  PAGEREF _Toc481226546 \h  4.13.10 RtLibEnableVirtualMappings Function  PAGEREF _Toc481226547 \h  4.13.11 RtConvertList Function  PAGEREF _Toc481226548 \h  4.13.12 LibGetSystemConfigurationTable Function  PAGEREF _Toc481226549 \h  Tables  TOC \t "TableTitle,2"  Table 1-1. Specification Organization and Contents  PAGEREF _Toc481217582 \h  Table 4-1. Initialization Functions  PAGEREF _Toc481217583 \h  Table 4-2. Linked List Support Macros  PAGEREF _Toc481217584 \h  Table 4-3. String Functions  PAGEREF _Toc481217585 \h  Table 4-4. EFI_STATUS Output Formats  PAGEREF _Toc481217586 \h  Table 4-5. Hardware Device Path Output Formats  PAGEREF _Toc481217587 \h  Table 4-6. Messaging Device Path Output Formats  PAGEREF _Toc481217588 \h  Table 4-7. Media Device Path Output Formats  PAGEREF _Toc481217589 \h  Table 4-8. BSS Device Path Output Formats  PAGEREF _Toc481217590 \h  Table 4-9. Memory Support Functions  PAGEREF _Toc481217591 \h  Table 4-10. CRC Support Functions  PAGEREF _Toc481217592 \h  Table 4-11. Format string attribute and argument specification  PAGEREF _Toc481217593 \h  Table 4-12. Text I/O Functions  PAGEREF _Toc481217594 \h  Table 4-13. EFI Control Characters  PAGEREF _Toc481217595 \h  Table 4-14. Math Functions  PAGEREF _Toc481217596 \h  Table 4-15. Spin Lock Functions  PAGEREF _Toc481217597 \h  Table 4-16. Handle and Protocol Support Functions  PAGEREF _Toc481217598 \h  Table 4-17. File I/O Support Functions  PAGEREF _Toc481217599 \h  Table 4-18. Device Path Support Functions  PAGEREF _Toc481217600 \h  Table 4-19. PCI Functions and Macros  PAGEREF _Toc481217601 \h  Table 4-20. Miscellaneous Functions and Macros  PAGEREF _Toc481217602 \h  FIGURES  TOC \t "FigureTitle,2"  Figure 1-2. Memory Layout Conventions  PAGEREF _Toc467576748 \h  Introduction seq chapter \r1 The Extensible Firmware Interface (EFI) Specification describes a set of Application Program Interfaces (APIs) and data structures that are exported by a system s firmware.  During the development of a sample implementation of the EFI Specification, the need arose for a set of library functions to simplify the development process.  These library functions are also useful in the implementation of EFI Shells, EFI Shell commands, EFI Applications, EFI OS loaders, and EFI Device Drivers.  This document describes in detail each of the functions and macros present in the EFI Library along with the constants and global variables that are exported. Organization of this Document This specification is organized as follows:  XE "organization, document"   XE "contents, document"   Table 1-1.1-  seq tbl \* MERGEFORMAT  Specification Organization and Contents Chapter Description Chapter 1: Introduction Provides an overview of the EFI Library Specification. Chapter 2: ConstantsBooting  Definition of constants exported by the EFI Library. Chapter 3: Global VariablesEFI File System Structures Defines file system structures.Definition of global variables allocated by the EFI Library. Chapter  54: Functions and Macros Definition of functions and macros exported by the EFI Library. Goals The primary goal of the EFI Library Specification is to provide documentation for the collection of library functions that are available to EFI firmware developers, EFI shell developers, EFI shell application developers, and shrink wrapped operating system boot loader developers.  These library functions complement those APIs described in the EFI Specification.  The combination of the EFI APIs and the EFI Library functions provide all the functions required for basic console I/O, basic disk I/O, memory management, linked list management, and string manipulation.  In addition, there are miscellaneous functions for 64 bit math operations, CRC checks, spin locks, and helper functions used to managing device handle, device protocols, and device paths. Target Audience This document is intended for the following readers:  XE "target audience"  OEMs who will be creating Intel Architecture-based platforms intended to boot shrink-wrap operating systems. BIOS developers, either those who create general-purpose BIOS and other firmware products or those who modify these products for use in Intel Architecture-based products. Operating system developers who will be adapting their shrink-wrap operating system products to run on Intel Architecture-based platforms. Prerequisite Specifications Extensible Firmware Interface Specification Version 0.9, Intel Corporation, 1999. Conventions Used in This Document This document uses typographic and illustrative conventions described below.  XE "conventions, document"   XE "little endian"  Data Structure Illustrations The Intel Architecture processors of the IA-32 family are  little endian  machines.  This means that the low-order byte of a multibyte data item in memory is at the lowest address, while the high-order byte is at the highest address.  Processors of the IA-64 family may be configured for both  little endian  and  big endian  operation. For the purposes of this specification, illustrations of data structures in memory will always show the lowest addresses at the bottom and the highest addresses at the top of the illustration, as shown in Figure 1-2-  REF Fig_Mem_Layout_Conventions \h  .  Bit positions are numbered from right to left. Figure 1-2.   seq fig \* MERGEFORMAT  . Memory Layout Conventions In some memory layout descriptions, certain fields are marked RESERVED.  Software should initialize these fields as binary zeros, but should otherwise treat them as having a future, though unknown effect. Software should avoid any dependence on the values in the reserved fields. [NB: for this version of the draft, illustrations such as these are not yet present.  They will be added in a future draft version.] Typographic Conventions  XE "typographic conventions"  The following typographic conventions are used in this document to illustrate programming concepts: Prototype This typeface is use to indicate prototype code. Argument This typeface is used to indicate arguments. This typeface is used to indicate actual code or a programming construct. register This typeface is used to indicate a processor register. Constants The following is the list of environment variable name constants that are exported by the EFI Library.  These are environment variable names used by the EFI sample implementation. #define VarLanguageCodes       L"LangCodes"; #define VarLanguage            L"Lang"; #define VarTimeout             L"Timeout"; #define VarConsoleInp          L"ConIn"; #define VarConsoleOut          L"ConOut"; #define VarErrorOut            L"ErrOut"; #define VarBootOption          L"Boot%04x"; #define VarBootOrder           L"BootOrder"; #define VarBootNext            L"BootNext"; #define VarBootCurrent         L"BootCurrent"; #define VarDriverOption        L"Driver%04x"; #define VarDriverOrder         L"DriverOrder"; #define VarSerialNumber        L"SerialNumber"; #define VarSystemGuid          L"SystemGUID"; #define VarConsoleInpDev       L"ConInDev"; #define VarConsoleOutDev       L"ConOutDev"; #define VarErrorOutDev         L"ErrOutDev"; #define LanguageCodeEnglish    "eng" Global Variables There are three global variables exported by the EFI Library that provide access to the EFI System Table (ST), EFI Boot Time Services (BS), and the EFI Run Time Services (RT).  The declaration of these global variables is shown below. extern EFI_SYSTEM_TABLE         *ST; extern EFI_BOOT_SERVICES        *BS; extern EFI_RUNTIME_SERVICES     *RT; A group of EFI_GUID variables are also exported by the EFI Library.  These include protocol GUIDs and other miscellaneous GUIDs used by the EFI sample implementation. extern EFI_GUID DevicePathProtocol; extern EFI_GUID LoadedImageProtocol; extern EFI_GUID TextInProtocol; extern EFI_GUID TextOutProtocol; extern EFI_GUID BlockIoProtocol; extern EFI_GUID DiskIoProtocol; extern EFI_GUID FileSystemProtocol; extern EFI_GUID LoadFileProtocol; extern EFI_GUID DeviceIoProtocol; extern EFI_GUID UnicodeCollationProtocol; extern EFI_GUID SerialIoProtocol; extern EFI_GUID VariableStoreProtocol; extern EFI_GUID LegacyBootProtocol; extern EFI_GUID VgaClassProtocol; extern EFI_GUID TextOutSpliterProtocol; extern EFI_GUID TextInSpliterProtocol; extern EFI_GUID ErrorOutSpliterProtocol; extern EFI_GUID SimpleNetworkProtocol; extern EFI_GUID PxeBaseCodeProtocol; extern EFI_GUID PxeCallbackProtocol; extern EFI_GUID NetworkInterfaceIdentifierProtocol; extern EFI_GUID InternalLoadProtocol; The following are the group of EFI_GUID variables for the EFI Configuration Table entries. extern EFI_GUID EfiGlobalVariable; extern EFI_GUID GenericFileInfo; extern EFI_GUID FileSystemInfo; extern EFI_GUID PcAnsiProtocol; extern EFI_GUID Vt100Protocol; extern EFI_GUID NullGuid; extern EFI_GUID UnknownDevice; The following are the group of EFI_GUID variables for the EFI configuration table entries. extern EFI_GUID MpsTableGuid; extern EFI_GUID AcpiTableGuid; extern EFI_GUID SMBIOSTableGuid; extern EFI_GUID SalSystemTableGuid; There are also three Device Path data structures that are exported by the EFI Library.  These are used to build complete device paths. extern EFI_DEVICE_PATH RootDevicePath[]; extern EFI_DEVICE_PATH EndDevicePath[]; extern EFI_DEVICE_PATH EndInstanceDevicePath[]; The following is the global I/O Device I/O Protocol interface used to access the root PCI bus. extern EFI_DEVICE_IO_INTERFACE  *GlobalIoFncs; The following is the default memory allocation type for the EFI Library memory allocation functions. extern EFI_MEMORY_TYPE PoolAllocationType; Functions and Macros The functions and macros exported by the EFI Library are grouped as follows: Initialization Functions Linked List Support Macros String Functions Memory Support Functions CRC Support Functions Text I/O Functions Math Functions Spin Lock Functions Handle and Protocol Functions File I/O Support Functions Device Path Support Functions Miscellaneous Functions Initialization Functions The initialization functions in the EFI Library are used to initialize the execution environment so that other EFI Library function may be used.  Table 4-1 lists the initialization support functions that are described in the following sections. Table 4-1. Initialization Functions Description InitializeLib Initializes the EFI Library. InitializeUnicodeSupport Initializes the use of language dependant EFI Library functions. InitializeLib Function  XE "BLOCK_IO.Reset Function"  The InitializeLib() function initializes the EFI Library. InitializeLib (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     ); Parameters ImageHandle  A handle for the image that is initializing the library. SystemTable  A pointer to the EFI system table. Description This function must be called to enable the use of all the EFI Library functions.  Additional calls to this function are ignored.  This function initializes all the global variables required by the EFI Library functions.  In addition, it verifies the CRCs for all the EFI system tables. InitializeUnicodeSupport Function  XE "BLOCK_IO.Reset Function"  The InitializeUnicodeSupport() function initializes the use of the language dependant EFI Library functions. InitializeUnicodeSupport (     IN CHAR8           *LangCode,     ); Parameters LangCode  The 3 character ISO 639.2 language code. Description This function must be called to enable the use of all the language dependent EFI Library functions.  By default, the InitializeLib() function calls InitializeUnicodeSupport().  The only reason that this function would be called is to select a language other than the default one. Linked List Support Macros The EFI Library supplies a set of macros that allow doubly linked lists to be created and maintained.  The head node of a doubly linked list is a LIST_ENTRY data structure.  Each of the nodes in the linked list must also contain a LIST_ENTRY data structure.  The LIST_ENTRY data structure simply contains a forward link and a backward link.  The following is the definition of the LIST_ENTRY data structure. typedef struct _LIST_ENTRY {     struct _LIST_ENTRY  *Flink;     struct _LIST_ENTRY  *Blink; } LIST_ENTRY; Table 4-2 contains the list of macros that are described in the following sections. Table 4-2. Linked List Support Macros Description InitializeListHead Initializes the head node of a doubly linked list. IsListEmpty Determines if a doubly linked list is empty. RemoveEntryList Removes a node from a doubly linked list. InsertTailList Adds a node to the end of a double linked list. InsertHeadList Adds a node to the beginning of a doubly linked list. InitializeListHead Macro The InitializeListHead() macro initializes the head node of a doubly linked list. InitializeListHead(     LIST_ENTRY *ListHead     ); Parameters ListHead  A pointer to the head node of a new doubly linked list. Description This macro initializes the forward and backward links of a new linked list.  After initializing a linked list with this macro, the other linked list macros may be used to add and remove nodes from the linked list.  It is up to the caller of this macro to allocate the memory for ListHead. IsListEmpty Macro The IsListEmpty() macro checks to see if a doubly linked list is empty or not. BOOLEAN IsListEmpty(     LIST_ENTRY *ListHead     ); Parameters ListHead  A pointer to the head node of a doubly linked list. Description This macro checks to see if the doubly linked list is empty.  If the linked list contains zero nodes, this macro returns TRUE.  Otherwise, it returns FALSE. Status Codes Returned The linked list is empty FALSE The linked list is not empty RemoveEntryList Macro The RemoveEntryList() macro removes a node from a doubly linked list. RemoveEntryList(     LIST_ENTRY *Entry     ); Parameters Entry  A pointer to a node in a linked list Description This macro removes the node Entry from a doubly linked list.  It is up to the caller of this macro to release the memory used by this node if that is required. InsertTailList Macro The InsertTailList() macro adds a node to the end of a doubly linked list. InsertTailList(     LIST_ENTRY *ListHead,     LIST_ENTRY *Entry     ); Parameters ListHead  A pointer to the head node of a doubly linked list. Entry  A pointer to a node that is to be added at the end of the doubly linked list. Description This macro adds the node Entry to the end of the doubly linked list denoted by ListHead. InsertHeadList Macro The InsertHeadList() macro adds a node to the beginning of a doubly linked list. InsertHeadList(     LIST_ENTRY *ListHead,     LIST_ENTRY *Entry     ); Parameters ListHead  A pointer to the head node of a doubly linked list. Entry  A pointer to a node that is to be inserted at the beginning of a doubly linked list. Description This macro adds the node Entry at the beginning of the doubly linked list denoted by ListHead. String Functions The string functions in the EFI Library perform operations on Unicode and ASCII string.  Table 4-3 contains the list of string support functions that are described in the following sections. Table 4-3. String Functions Description StrCmp Compares two Unicode strings. StrnCmp Compares a portion of two Unicode strings. StriCmp Performs a case insensitive comparison of two Unicode strings. StrCpy Copies one Unicode string to another Unicode string. StrCat Concatenates two Unicode strings. StrLen Determines the length of a Unicode string. StrSize Determines the size of a Unicode string in bytes. StrDuplicate Creates a duplicate of a Unicode string. StrLwr Converts characters in a Unicode string to upper case characters. StrUpr Converts characters in a Unicode string to lower case characters. strlena Determines the length of an ASCII string. strcmpa Compares two ASCII strings. strncmpa Compares a portion of two ASCII strings. Converts a hexadecimal formatted Unicode string to an integer. Converts a decimal formatted Unicode string to an integer. MetaMatch Checks to see if a Unicode string matches a given pattern.  MetaiMatch Performs a case insensitive comparison of a Unicode pattern string and a Unicode string.  ValueToString Converts an integer to a decimal formatted Unicode string. ValueToHex Converts an integer to a hexadecimal formatted Unicode string. TimeToString Converts a data structure containing the time and date into a Unicode string. GuidToString Converts a 128 bit GUID into a Unicode string. StatusToString Converts an EFI_STATUS value into a Unicode string. DevicePathToStr Converts a device path data structure into a Unicode string. StrCmp Function The StrCmp() function compares two Unicode strings. StrCmp (     IN CHAR16   *s1,     IN CHAR16   *s2     ); Parameters Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function compares the Unicode string s1 to the Unicode string s2.  If s1 is identical to s2, then 0 is returned.  Otherwise, the difference between the first mismatched Unicode characters is returned. Status Codes Returned s1 is identical to s2. s1 is not identical to s2. StrnCmp Function The StrnCmp() function compares a portion of two Unicode strings. StrnCmp (     IN CHAR16   *s1,     IN CHAR16   *s2,     IN UINTN     ); Parameters Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function compares len Unicode characters from s1 to len Unicode characters from s2.  If all len characters from s1 and s2 are identical, then 0 is returned.  Otherwise, the difference between the first mismatched ASCII characters is returned. Status Codes Returned s1 is identical to s2. s1 is not identical to s2. StriCmp Function The StriCmp() function performs a case insensitive comparison of two Unicode strings. StriCmp (     IN CHAR16   *s1,     IN CHAR16   *s2     ); Parameters Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function performs a case insensitive comparison between the Unicode string s1 and the Unicode string s2 using the rules for the currently selected language code.  If s1 is equivalent to s2, then 0 is returned.  If s1 is lexically less than s2, then a negative number will be returned.  If s1 is lexically greater than s2, then a positive number will be returned.  This function allows Unicode strings to be compared and sorted. Status Codes Returned s1 is equivalent to s2. s1 is lexically greater than s2 s1 is lexically less than s2  StrCpy Function The StrCpy() function copies one Unicode string to another Unicode string. StrCpy (     IN CHAR16   *Dest,     IN CHAR16   *Src     ); Parameters Dest  Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function copies the contents of the Unicode string Src to the Unicode string Dest. StrCat Function The StrCat() function concatenates one Unicode string to another Unicode string. StrCat (     IN CHAR16   *Dest,     IN CHAR16   *Src     ); Parameters Dest  Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function concatenates two Unicode string.  The contents of Unicode string Src are concatenated to the end of Unicode string Dest. StrLen Function The StrLen() function determines the length of a Unicode string. UINTN StrLen (     IN CHAR16   *s1     ); Parameters Pointer to a Null-terminated Unicode string. Description This function returns the number of Unicode characters in the Unicode string s1. StrSize Function The StrSize() function determines the size of a Unicode string in bytes. UINTN StrSize (     IN CHAR16   *s1     ); Parameters Pointer to a Null-terminated Unicode string. Description This function returns the size of the Unicode string s1 in bytes. StrDuplicate Function The StrDulicate() function duplicates a Unicode string. CHAR16 * StrDuplicate (     IN CHAR16   *Src     ); Parameters Pointer to a Null-terminated Unicode string. Description This function creates a returns a new copy of the Unicode string Src.  The memory for the new string is allocated from pool. StrLwr Function The StrLwr() function converts all the characters in a Unicode string to lower case. StrLwr (     IN CHAR16   *Str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts all the characters in the Unicode string Str to lower case characters. StrUpr Function The StrUpr() function converts all the characters in a Unicode string to upper case. StrUpr (     IN CHAR16   *Str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts all the characters in the Unicode string Str to upper case characters. strlena Function The strlena() function determines the length of an ASCII string. UINTN strlena (     IN CHAR8    *s1     ); Parameters Pointer to a Null-terminated ASCII string. Description This function returns the length of the ASCII string s1. strcmpa Function The strcmpa() function compares two ASCII strings. UINTN strcmpa (     IN CHAR8    *s1,     IN CHAR8    *s2     ); Parameters Pointer to a Null-terminated ASCII string. Pointer to a Null-terminated ASCII string. Description This function compares the contents of the ASCII string s1 to the contents of the ASCII string s2.  If s1 is identical to s2, then 0 is returned.  Otherwise, the difference between the first mismatched ASCII characters is returned. Status Codes Returned s1 is identical to s2. s1 is not identical to s2 strncmpa Function The strncmpa() function compares a portion of two ASCII strings. UINTN strncmpa (     IN CHAR8    *s1,     IN CHAR8    *s2,     IN UINTN    len     ); Parameters Pointer to an ASCII string. Pointer to an ASCII string. Number of ASCII character to compare. Description This function compares len ASCII characters from s1 to len ASCII characters from s2.  If all len characters from s1 and s2 are identical, then 0 is returned.  Otherwise, the difference between the first mismatched ASCII characters is returned. Status Codes Returned s1 is identical to s2 for the first len characters. s1 is not identical to s2 for the first len characters. xtoi Function The xtoi() function converts a hexadecimal formatted Unicode string to a value. UINTN xtoi (     IN CHAR16      *str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts the hexadecimal formatted Unicode string str into an integer and returns that integer.  Any preceding white space in str is ignored. Atoi Function The Atoi() function converts a decimal formatted Unicode string to a value. UINTN Atoi (     IN CHAR16  *str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts the decimal formatted Unicode string str into an integer and returns that integer.  Any preceding white space in str is ignored. MetaMatch Function The MetaMatch() function checks to see if a Unicode string matches a given pattern. BOOLEAN  MetaMatch (     IN CHAR16   *String,     IN CHAR16   *Pattern     ); Parameters String  Pointer to a Null-terminated Unicode string. Pattern  Pointer to a Null-terminated Unicode string. Description This function checks to see if the pattern of characters described by Pattern is found in String.  If the pattern match succeeds, then TRUE is returned.  Otherwise FALSE is returned.  The following syntax can be used to build the string Pattern. Match 0 or more characters. Match any one character. [<char1><char2> <charN>] Match any character in the set. [<char1>-<char2>] Match any character between <char1> and <char2>. <char> Match the character <char>. Examples patterns: Match all strings that end in  [a-z] Match any lower case character.  [!@#$%^&*()] Match any one of these symbols. Match the lower case character z. DATA?.* Match the string   followed by any character followed by a   followed by any string. Status Codes Returned Pattern was found in String FALSE Pattern was not found in String MetaiMatch  XE "SIMPLE_INPUT_INTERFACE.ReadKeyStroke function"   XE "function:SIMPLE_INPUT_INTERFACE.ReadKeyStroke"   Function  The MetaiMatch() function performs a case insensitive comparison of a Unicode pattern string and a Unicode string. BOOLEAN MetaiMatch ( IN CHAR16 *String, IN CHAR16 *Pattern Parameters String A pointer to a Unicode string. Pattern A pointer to a Unicode pattern string. Description This function checks to see if the pattern of characters described by Pattern are found in String.  The pattern check is a case insensitive comparison using the rules for the currently selected language code.  If the pattern match succeeds, then TRUE is returned.  Otherwise FALSE is returned.  The following syntax can be used to build the string Pattern. Match 0 or more characters. Match any one character. [<char1><char2> <charN>] Match any character in the set. [<char1>-<char2>] Match any character between <char1> and <char2>. <char> Match the character <char>. Examples patterns (for English): Matches all strings that end in  [a-z] Match any letter in the alphabet.  [!@#$%^&*()] Match any one of these symbols. Match the character  Match the character   followed by any character followed by a   followed by any string. Status Codes Returned Pattern was found in String FALSE Pattern was not found in String ValueToString Function The ValueToString() function converts an integer to decimal formatted Unicode string. ValueToString (     IN CHAR16   *Buffer,     IN BOOLEAN  Comma,     IN INT64    v     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Comma  Tells if the converted string should be formatted with commas or not. The integer value that is to be converted into a string. Description This function converts the integer v into a decimal formatted Unicode string.  If Comma is TRUE, then the string is formatted with commas.  Otherwise, it is not formatted with commas.  The converted string is returned in Buffer. ValueToHex Function The ValueToHex() function converts an integer to hexadecimal formatted Unicode string. ValueToHex (     IN CHAR16   *Buffer,     IN UINT64   v     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. The integer value that is to be converted into a string. Description This function converts the integer v into a hexadecimal formatted Unicode string. The converted string is returned in Buffer. TimeToString Function The TimeToString() function converts the time and date stored in a data structure into a Unicode string. TimeToString (     OUT CHAR16      *Buffer,     IN EFI_TIME     *Time     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Time  Pointer to a data structure containing the time and date. Description This function converts the EFI_TIME data structure Time in the Unicode string Buffer.  The format of the Unicode string is: MM/DD/YY hh:mmA Month Day of the month Minutes AM/PM field.    for AM and    for PM. GuidToString Function The GuidToString() function converts a GUID data structure into a Unicode string. GuidToString (     OUT CHAR16      *Buffer,     IN EFI_GUID     *Guid     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Guid  Pointer to a data structure containing the GUID. Description This function converts an EFI_GUID data structure Guid into the Unicode string Buffer.  The format of the string is: LLLLLLLL-MMMM-HHHH-hh-ll-NNNNNNNNNNNN  LLLLLLLL The time_low field. The time_mid field. The time_hi_and_version field. The clock_sequence_high_and_reserved field. The clock_seq_low field. NNNNNNNNNNNN The node identifier.  This is typically an ethernet hardware ID. StatusToString Function The StatusToString() function converts an EFI_STATUS value into a Unicode string. StatusToString (     OUT CHAR16      *Buffer,     EFI_STATUS      Status     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Status  EFI_STATUS value. Description This function converts the EFI_STATUS value Status into the Unicode string Buffer.  Table  4-4 shows how EFI_STATUS values are converted to strings. Table 4-4. EFI_STATUS Output Formats EFI_STATUS Output Format EFI_SUCCESS Success EFI_LOAD_ERROR Load Error EFI_INVALID_PARAMETER Invalid Parameter EFI_UNSUPPORTED Unsupported EFI_BAD_BUFFER_SIZE Bad Buffer Size EFI_BUFFER_TOO_SMALL Buffer Too Small EFI_NOT_READY Not Ready EFI_DEVICE_ERROR Device Error EFI_WRITE_PROTECTED Write Protected EFI_OUT_OF_RESOURCES Out of Resources EFI_VOLUME_CORRUPTED Volume Corrupt EFI_VOLUME_FULL Volume Full EFI_NO_MEDIA No Media EFI_MEDIA_CHANGED Media Changed EFI_NOT_FOUND Not Found EFI_ACCESS_DENIED Access Denied EFI_NO_RESPONSE No Response EFI_NO_MAPPING No mapping EFI_TIMEOUT Time out EFI_NOT_STARTED Not started EFI_ALREADY_STARTED Already started EFI_ABORTED Aborted EFI_ICMP_ERROR ICMP Error EFI_TFTP_ERROR TFTP Error EFI_PROTOCOL_ERROR Protocol Error EFI_WARN_UNKOWN_GLYPH Warning Unknown Glyph EFI_WARN_DELETE_FAILED Warning Delete Failed EFI_WARN_WRITE_FAILURE Warning Write Failure EFI_WARN_BUFFER_TOO_SMALL Warning Buffer Too Small DevicePathToStr Function The DevicePathToStr() function converts a device path data structure into a printable Null-terminated Unicode string. CHAR16 * DevicePathToStr (     EFI_DEVICE_PATH         *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function converts a device path data structure into a Null-terminated Unicode string.  The memory for the Unicode string is allocated from pool, and a pointer to the Unicode string is returned.  Tables 4-5, 4-6, 4-7, and 4-8 show the conversions from the different device path types into printable strings.  Device path nodes are separated by a   and device path instances are separated by a  Table 4-5. Hardware Device Path Output Formats  Hardware Device Path Type Output Format PCI Device Path PCI(<Device Number>|<Function Number>) PCCARD Device Path Pccard(Socket<Socket Number>) Memory Device Path MemMap(<Memory Type>:<Starting Address>-<Ending Address>) Controller Device Path Ctlr(<Controller>) Vendor Device Path VenHw(<Vendor GUID>) Vendor Device Path(Legacy) VenHw(<Vendor GUID>:<Legacy Drive Letter>) ACPI Device Path Acpi(<ACPI HID>,<ACPI UID>) ACPI Device Path(EISA) Acpi(PNP<ACPI HID>,<ACPI UID>) Unknown Table 4-6. Messaging Device Path Output Formats  Messaging Device Path Type Output Format ATAPI  ATA(<Primary/Secondary>,<Master/Slave>) Scsi(<PUN>,<LUN>) FibreChannel Fibre(<WWN>) 1394(<GUID>) Usb(<Port>) I2O(<TID>) MAC Address MAC(<MAC address>) IPv4(not-done) "IP-v6(not-done)" InfiniBand InfiniBand(not-done) Uart(<Baud Rate>,<Parity>,<Data Bits>,<Stop Bits>) Vendor  VenMsg(<Vendor GUID>) Vendor(Legacy) VenMsg(<Vendor GUID>:<Legacy Drive Letter>) Unknown Table 4-7. Media Device Path Output Formats  Media Device Path Type Output Format Hard Drive HD(Part<Partition Number>,Sig<Signature>) CDROM CDROM(Entry<Boot Entry>) Vendor  VenMedia(<Vendor GUID>) Vendor(Legacy) VenMedia(<Vendor GUID>:<Legacy Drive Letter>) FilePath <File Name> Protocol "<Protocol GUID>" Unknown Table 4-8. BSS Device Path Output Formats  BSS Device Path Type Output Format Floppy Floppy HardDrive Harddrive CDROM  CDROM PCMCIA PCMCIA Embedded Network Other Unknown Memory Support Functions The EFI Library provides a set of functions that operating on buffers in memory.  Buffers can either be allocated on the stack, as global variables, or from the memory pool.  To prevent memory leaks, it is the caller s responsibility to maintain buffers allocated from pool.  This means that the caller must free a buffer when that buffer is no longer needed.  Table 4-9 contains the list of memory support functions that are described in the following sections. Table 4-9. Memory Support Functions Description ZeroMem Fills a buffer with zeros. SetMem Fills a buffer with a value.. CopyMem Copies the contents of one buffer to another buffer. CompareMem Compares the contents of two buffers. AllocatePool Allocates a buffer from pool. AllocateZeroPool Allocates a buffer from pool and fills it with zeros. ReallocatePool Adjusts the size of a previously allocated buffer. FreePool Frees a previously allocated buffer. GrowBuffer Allocates a new buffer or grows the size of a previously allocated buffer. LibMemoryMap Retrieves the system s current memory map. ZeroMem Function The ZeroMem() function fills a buffer with zeros.  ZeroMem (     IN VOID     *Buffer,     IN UINTN     Size     ); Parameters Buffer  Pointer to the buffer to zero. Number of bytes to zero in Buffer. Description This functions fills Size bytes of Buffer with zeros. SetMem Function The SetMem() function fills a buffer with a value..  SetMem (     IN VOID     *Buffer,     IN UINTN    Size,     IN UINT8    Value         ); Parameters Buffer  Pointer to the buffer to fill. Size  Number of bytes in Buffer to fill. Value  Value to fill Buffer with. Description This function fills Size bytes of Buffer with Value. CopyMem Function The CopyMem() function copies the contents of one buffer to another buffer. CopyMem (     IN VOID     *Dest,     IN VOID     *Src,     IN UINTN    len     ); Parameters Dest  Pointer to the destination buffer of the memory copy. Pointer to the source buffer of the memory copy. Number of bytes to copy from Src to Dest. Description This function copies len bytes from the buffer Src to the buffer Dest. CompareMem Function The CompareMem() function compares the contents of two buffers. CompareMem (     IN VOID     *Dest,     IN VOID     *Src,     IN UINTN    len     ); Parameters Dest  Pointer to the Buffer to compare. Pointer to the Buffer to compare. Number of bytes to compare. Description This function compares len bytes of Src to len bytes of Dest.  If the two buffers are identical for len bytes, then 0 is returned.  Otherwise, the difference between the first two mismatched bytes is returned. Status Codes Returned Dest is identical to Src for len bytes Desk is not identical to Src for len bytes  AllocatePool Function The AllocatePool() function allocates a buffer from memory with type PoolAllocationType. VOID * AllocatePool (     IN UINTN     Size     ); Parameters Size  The size of the buffer to allocate from pool. Description This function attempts to allocate Size bytes from memory with type PoolAllocationType. If  the memory allocation fails, NULL is returned.  Otherwise a pointer to the allocated buffer is returned.  AllocateZeroPool Function The AllocatePool() function allocates and zeros buffer from memory. VOID * AllocateZeroPool (     IN UINTN     Size     ); Parameters Size  The size of the buffer to allocate from pool. Description This function attempts to allocate Size bytes from memory. If  the memory allocation fails, NULL is returned.  Otherwise, Size bytes of the allocated buffer are set to zero, and a pointer to the allocated buffer is returned.  ReallocatePool Function The ReallocatePool() function adjusts the size of a previously allocated buffer. VOID * ReallocatePool (     IN VOID                 *OldPool,     IN UINTN                OldSize,     IN UINTN                NewSize     ); Parameters OldPool  A pointer to the buffer whose size is being adjusted. OldSize  The size of the current buffer. NewSize  The size of the new buffer. Description This function changes the size of a buffer allocated from pool from OldSize to NewSize.  The contents of the old buffer are copied to the new buffer.  If NewSize is zero, then OldPool is freed, and NULL is returned.  If NewSize is not zero, and the new buffer can not be allocated, then NULL is returned.  If NewSize is not zero, and the new buffer can be allocated, then the contents of OldPool are copied to the new buffer, OldPool is freed, and a pointer to the new buffer is returned. FreePool Function The FreePool() function releases a previously allocated buffer. FreePool (     IN VOID     *p     ); Parameters A pointer to the buffer to free. Description The free memory is returned to the available pool.  The buffer p must have been allocated with AllocatePool(). GrowBuffer Function The GrowBuffer() function either allocates a new buffer or it increases the size of a previously allocated buffer. BOOLEAN GrowBuffer(     IN OUT EFI_STATUS   *Status,     IN OUT VOID         **Buffer,     IN UINTN            BufferSize     ); Parameters Status  Status from the last EFI API call. Buffer  A pointer to the buffer to grow. BufferSize  The new size of the buffer. Description If Buffer is NULL on entry, then this function will attempt to allocate a new buffer with size BufferSize.  If the buffer is allocated, then Buffer will point to the new buffer, Status will be EFI_SUCCESS, and the function will return TRUE.  If the buffer can not be allocated, then Buffer will be set to NULL, Status will be set to EFI_OUT_OF_RESOURCES, and the function will return FALSE. If Buffer is not NULL and Status is EFI_BUFFER_TOO_SMALL, then this function will free the old buffer, and attempt to reallocate a new buffer with size BufferSize.  If that reallocation succeeds, then Buffer will point to the reallocated buffer, Status will be EFI_SUCCESS, and the function will return TRUE.  If the buffer can not be reallocated, then Buffer will be set to NULL, Status will be set to EFI_OUT_OF_RESOURCES, and the function will return FALSE. If Buffer is not NULL, and Status is not EFI_BUFFER_TOO_SMALL, then the buffer will be freed, Buffer will be set to NULL, and the function will return FALSE. The main purpose of this function is to retry an EFI API call until a buffer of the appropriate size is allocated.  The following is an example of how to use the GrowBuffer() function.  The first pass through the while loop uses the GrowBuffer() function to allocate a new 100 byte buffer.  If the GetVariable() API call needs more than 100 bytes, it will return with status EFI_BUFFER_TOO_SMALL.  Also, BufferSize will be set to the number of bytes required for the call to GetVariable() to succeed.  So, the next iteration through the while loop will call GrowBuffer() again.  This time, the buffer will be reallocated to the size required by GetVariable().  So, the next call to GetVariable() will succeed, and the buffer used to store the variable will be exactly the right size. EFI_STATUS              Status; VOID                    *Buffer; UINTN                   BufferSize; Buffer = NULL; BufferSize = 100; while (GrowBuffer (&Status, &Buffer, BufferSize)) {     Status = RT->GetVariable(Name,                              VendorGuid,                              NULL,                              &BufferSize,                              Buffer); Status Codes Returned The buffer was reallocated. FALSE The buffer could not be reallocated. LibMemoryMap Function The LibMemoryMap() function retrieves the systems current memory map. EFI_MEMORY_DESCRIPTOR * LibMemoryMap (     OUT UINTN                *NoEntries,     OUT UINTN                *MapKey     OUT UINTN                *DescriptorSize     OUT UINT32               *DescriptorVersion     ); Parameters NoEntries  A pointer to the number of memory descriptors in the system. MapKey  A pointer to the current memory map key. DescriptorSize A pointer to the size in bytes of a memory descriptor. DescriptorVersion A pointer to version of the memory descriptor.. Description This function retrieves and returns the system s current memory map.  The number of memory map entries is returned in NoEntries, and the size of each entry in bytes is returned in DescriptorSize.  Also, the version of the memory descriptor data structure is returned in DescriptorVersion, and the key for the current memory map is returned in MapKey.  The storage for the memory map is allocated by this function from pool. CRC Support Functions The EFI Library provides a set of functions that are used to compute and verify CRC32 values.  The main purpose of these function is to initialize the CRC field in a table header, or to verify the CRC field in a table header.  Table 4-10 contains the list of CRC support functions that are described in the following sections. Table 4-10. CRC Support Functions Description SetCrc Computes and updates the CRC32 value for a table header. SetCrcAltSize Computes and updates the CRC32 value for a portion of a table header. CheckCrc Verifies the CRC32 value for a table header. CheckCrcAltSize Verifies the CRC32 value for a portion of a table header. CalculateCrc Compute the CRC32 value of a data buffer.  SetCrc Function The SetCrc() function computes and updates the CRC32 value in a table header. SetCrc (     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters A pointer to a table header. Description This function calculates the 32 bit CRC for a table header, and fills in the CRC32 field of that table header with the computed value. SetCrcAltSize Function The SetCrcAltSize() function computes and updates the CRC32 value for a portion of  a table header. SetCrcAltSize (     IN UINTN                 Size,     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters Size  Number of bytes to include in the CRC32 calculation. A pointer to a table header. Description This function calculates the 32 bit CRC for the first Size bytes a table header, and fills in the CRC32 field of that table header with the computed value. CheckCrc Function The CheckCrc() function verifies the CRC32 value in a table header. BOOLEAN CheckCrc (     IN UINTN                 MaxSize,     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters MaxSize  The maximum size for which a CRC32 check will be performed. A pointer to a table header. Description This function computes the CRC32 value for a table header, and verifies that it matches the CRC32 value currently stored in the table header.  If the CRCs match, TRUE is returned.  Otherwise, FALSE is returned.  If MaxSize is not zero, and the size of the table header is greater than MaxSize, then FALSE is returned. Status Codes Returned The CRC32 value was verified. FALSE The CRC32 value was not verified. CheckCrcAltSize Function The CheckCrc() function verifies the CRC32 value in a table header. BOOLEAN CheckCrcAltSize (     IN UINTN                 MaxSize,     IN UINTN                 Size,     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters MaxSize  The maximum size for which a CRC32 check will be performed. Size  The number of bytes to include in the CRC32 check. A pointer to a table header. Description This function computes the CRC32 value for the first Size bytes of a table header, and verifies that it matches the CRC32 value currently stored in the table header.  If the CRCs match, TRUE is returned.  Otherwise, FALSE is returned.  If MaxSize is not zero, and the size of the table header is greater than MaxSize, then FALSE is returned. Status Codes Returned  The CRC32 value was verified. FALSE The CRC32 value was not verified. CalculateCrc Function The CalculateCrc() computes the CRC32 value. UINT32 CalculateCrc (     IN UINT8                *pt,     IN UINTN                 Size     ); Parameters Pointer to data buffer upon which the CRC calculation will be computed. Size  The number of bytes to include in the CRC32 calculation. Description This function computes the CRC32 value for the Size bytes of a data buffer referenced by the pointer pt.  The result is returned as an UINT32 value.  If size of zero is entered, the result will be zero. Text I/O Functions The Text I/O functions in the EFI Library provide a simple means to get input and output from a console device.  Many of the output functions use a format string to describe how to format the output of variable arguments.  The format string consists of normal text and argument descriptors.  There are no restrictions for how the normal text and argument descriptors can be mixed.  Each argument descriptor is of the form  %w.lF , where   is an optional integer value that represents the argument width parameter,   is an optional integer value that represents the field width parameter, and   is a set of optional field modifiers, and the data type of the argument to print.  Table 4-11 lists the optional field modifiers and arguments types. Table 4-11. Format string attribute and argument specification Description Pad the field with zeros Left justify the argument in the field. Insert commas in a decimal formatted integer. The field width is provided as an argument. Set the output attribute for this field to normal. Set the output attribute for this field to highlight. Set the output attribute for this field to error. The argument value is 64 bits.  The default is a 32 bit argument. The argument is an ASCII string. The argument is a Unicode string. Print the argument as a hexadecimal value padded with zeros.  The field width defaults to 8 for 32 bit arguments, and 16 for 64 bit arguments.  Print the argument as a hexadecimal value. Print the argument as a decimal value with optional commas. The argument is a Unicode character. The argument is a pointer to an EFI_TIME data structure.  Please see the TimeToString() function for the output format of this field. The argument is a pointer to a EFI_GUID data structure.  Please see the GuidToString() function for the output format of this field. The argument is an EFI_STATUS value.  Please see the StatusToString() function for the output format of this field. Set the output attribute to normal. Set the output attribute to highlight. Set the output attribute to error. Table 4-12 contains the list of Text I/O functions that are described in the following sections. Table 4-12. Text I/O Functions Description Input Input a Unicode string at the current cursor location using the console in and console out device. Iinput Input a Unicode string at the current cursor location using the specified input and output devices. Output Send a Unicode string to the console out device at the current cursor location. Print Sends a formatted Unicode string to the console out device at the current cursor location.. PrintAt Sends a formatted Unicode string to the specified location on the console out device.  Iprint Sends a formatted Unicode string to the specified output device. IprintAt Sends a formatted Unicode string to the specified location of the specified console device. Aprint Sends a formatted Unicode string to the console out device using an ASCII format string. Sprint Sends a formatted Unicode string to the specified buffer. PoolPrint Sends a formatted Unicode string to a buffer allocated from pool. CatPrint Concatenates a formatted Unicode string to a string allocated from pool. DumpHex Prints the contents of a buffer in hexadecimal format. LibIsValidTextGraphics Decide if Graphic is a supported Unicode Box Drawing character. IsValidAscii Decide if character is legal ASCII element. IsValidEfiCntlChar Decide if character is an EFI Control character. Input Function The Input() function reads a Unicode string form the console in device at the current cursor location. Input (     IN CHAR16   *Prompt OPTIONAL,     OUT CHAR16  *InStr,     IN UINTN    StrLen     ); Parameters Prompt  A pointer to a Unicode string. InStr  A pointer to the Unicode string used to store the string read from the console in device. StrLen  The maximum length of the Unicode string to read from the console in device. Description If Prompt is not NULL, then Prompt is displayed on the console out device.  Then, characters are read from the console in device and displayed on the console out device.  In addition, these characters are stored in InStr until either a   or a   character is received.  If the backspace key is pressed, then the last character is InStr is removed, and the display is updated to show that the character has been erased.  If more than StrLen characters are received, then the extra characters are ignored.  IInput Function The IInput() function reads a Unicode string form the specified device at the current cursor location. IInput (     IN SIMPLE_TEXT_OUTPUT_INTERFACE     *ConOut,     IN SIMPLE_INPUT_INTERFACE           *ConIn,     IN CHAR16                           *Prompt OPTIONAL,     OUT CHAR16                          *InStr,     IN UINTN                            StrLen     ); Parameters ConOut  A pointer to the output device s interface protocol. ConIn  A pointer to the input device s interface protocol. Prompt  A pointer to a Unicode string. InStr  A pointer to the Unicode string used to store the string read from the input device. StrLen  The maximum length of the Unicode string to read from the input device. Description If Prompt is not NULL, then Prompt is displayed on the ConOut device.  Then, characters are read from the ConIn device and displayed on the ConOut device.  In addition, these characters are stored in InStr until either a   or a   character is received.  If the backspace key is pressed, then the last character is InStr is removed, and the ConOut device is updated to show that the character has been erased.  If more than StrLen characters are received from the ConIn device, then the extra characters are ignored. Output Function The Output() function sends a Unicode string to the console out device at the current cursor location. Output (     IN CHAR16   *Str     ); Parameters A pointer to a Unicode string. Description This function sends the Unicode string Str to the console out device specified in the system table. Print Function The Print() function sends a formatted Unicode string to the console out device at the current cursor location. UINTN Print (     IN CHAR16   *fmt,     ...     ); Parameters A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the console out device.  The length of the formatted Unicode string is returned. PrintAt Function The PrintAt() function sends a formatted Unicode string to the console out device at the specified cursor location. UINTN PrintAt (     IN UINTN    Column,     IN UINTN    Row,     IN CHAR16   *fmt,     ...     ); Parameters Column  The column number on the console out device. The row number on the console out device. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the console out device at the cursor location specified by Column and Row.  The length of the formatted Unicode string is returned. IPrint Function The IPrint() function sends a formatted Unicode string to the specified device at the current cursor location. UINTN IPrint (     IN SIMPLE_TEXT_OUTPUT_INTERFACE    *Out,     IN CHAR16                          *fmt,     ...     ); Parameters A pointer to the output devices interface protocol.. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the device specified by Out at the current cursor location.  The length of the formatted Unicode string is returned. IPrintAt Function The IPrintAt() function sends a formatted Unicode string to the specified device at the specified cursor location. UINTN IPrintAt (     IN SIMPLE_TEXT_OUTPUT_INTERFACE     *Out,     IN UINTN                            Column,     IN UINTN                            Row,     IN CHAR16                           *fmt,     ...     ); Parameters A pointer to the output devices interface protocol.. Column  The column number on the console out device. The row number on the console out device. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the device specified by Out at the cursor location specified by Column and Row.  The length of the formatted Unicode string is returned. APrint Function The APrint() function sends a formatted Unicode string to the console out device at the current cursor location. UINTN APrint (     IN char     *fmt,     ...     ); Parameters A pointer to an ASCII string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the console out device.  The length of the formatted Unicode string is returned. SPrint Function The SPrint() function sends a formatted Unicode string to the specified buffer. UINTN SPrint (     OUT CHAR16  *Str,     IN UINTN    StrSize,     IN CHAR16   *fmt,     ...     ); Parameters A pointer to a Unicode string. StrSize  The maximum length of the Unicode string Str. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  Up to StrSize characters of  this formatted Unicode string is then stored in Str.  The length of the formatted Unicode string is returned. PoolPrint Function The PoolPrint() function sends a formatted Unicode string to a buffer allocated from pool. CHAR16 * PoolPrint (     IN CHAR16           *fmt,     ...     ); Parameters A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  Storage for the formatted Unicode string is allocated from pool.  A pointer to the formatted Unicode string is returned.  It is the caller s responsibility to free the allocated buffer. CatPrint Function The CatPrint() function concatenates a formatted Unicode string to a Unicode string allocated from pool. typedef struct {     CHAR16      *str;     UINTN       len;     UINTN       maxlen; } POOL_PRINT; CHAR16 * CatPrint (     IN OUT POOL_PRINT   *Str,     IN CHAR16           *fmt,     ...     ); Parameters A pointer to POOL_PRINT data structure containing a Unicode string. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  Str is grown to accommodate the formatted Unicode string, and the formatted Unicode string is appended to the end of Str.  A pointer to the concatenated Unicode string is returned. DumpHex Function The DumpHex() function prints the contents of a buffer in hexadecimal format. DumpHex (     IN UINTN        Indent,     IN UINTN        Offset,     IN UINTN        DataSize,     IN VOID         *UserData     ); Parameters Indent  Number of spaces to indent text output. Offset  Byte offset within UserData to start printing. DataSize  The number of bytes of data to print from UserData. UserData  A pointer to the buffer of data to print. Description This function prints the contents of UserData.  The format of each line of output is a 4 byte address printed in hexadecimal followed by 16 bytes of data printed in hexadecimal followed by 16 ASCII characters.  If the ASCII characters are not printable, then the are substituted with a period.   The entire output is indented by Indent spaces.  The output starts Offset bytes into UserData, and a total of DataSize bytes are printed.  The following is a sample output with an Indent of 0, Offset of 1, a DataSize of 100, and UserData pointing at the EFI SystemTable. Sample Output: 00000001: 49 42 49 20 53 59 53 54-00 00 01 00 60 00 00 00  *EFI SYST....`...* 00000011: EC 95 4A D3 00 00 00 00-88 D9 DA 01 64 DB DA 01  *..J.........d...* 00000021: 88 D9 DA 01 28 DB DA 01-08 D6 DA 01 28 D7 DA 01  *....(.......(...* 00000031: 00 D0 41 00 60 7B 41 00-00 00 00 00 00 00 00 00  *..A.`.A.........* 00000041: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 00000051: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 00000061: 00 00 00 00                                      *....* LibIsValidTextGraphics Function The LibIsValidTextGraphics() function returns TRUE if Graphic is a supported Unicode Box Drawing character. BOOLEAN LibIsValidTextGraphics (     IN  CHAR16   Graphic,        OUT CHAR8   *PcAnsi,    OPTIONAL     OUT CHAR8   *Ascii      OPTIONAL     ); Parameters Graphic  Unicode character to test. PcAnsi  Optional pointer to return PCANSI equivalent of Graphic. Ascii  Optional pointer to return ASCII equivalent of Graphic. Description This function returns a TRUE if the character Graphic adheres to the range of legal Unicode box drawing characters.  The criteria is that the upper byte contains a 0x25 or 0x21.  If the value is TRUE and the character has also a mapping for either the PcAnsi or Ascii character set, these mappings will be returned.  Otherwise, the function is not deemed to be a box drawing character and FALSE is returned. Status Codes Returned  The character is a Unicode box drawing character. FALSE The character is not a Unicode box drawing character. IsValidAscii Function The IsValidAscii() function determines if the argument is a legal ASCII character. BOOLEAN IsValidAscii (     IN  CHAR16   Ascii     ); Parameters Ascii  Number of spaces to indent text output. Description This function returns TRUE if Ascii lies within the legal range of ASCII elements, namely 0x20 and 0x7F, respectively.  Otherwise, the function returns FALSE. Status Codes Returned  The character is a legal ASCII element. FALSE The character is not a legal ASCII element. IsValidEfiCntlChar Function The IsValidEfiCntlChar() function determines if the character is one of the four EFI control characters. BOOLEAN IsValidEfiCntlChar (     IN  CHAR16   c    Parameters Character to decide if is also a control character. Description This function returns TRUE if the input character c is a legal EFI control character.  The control characters included in Table 4-13. Table 4-13. EFI Control Characters Value CHAR_NULL 0x0000 CHAR_BACKSPACE 0x0008 CHAR_TAB 0x0009 CHAR_LINEFEED 0x000A CHAR_CARRIAGE_RETURN 0x000D Otherwise, the value FALSE is returned. Status Codes Returned  The character is an EFI control character. FALSE The character is not an EFI control character. Math Functions The EFI Library provides a few math functions to operate on 64 bit operands.  These include shift operations, multiplication and division.  Table 4-14 lists the set of 64 bit math functions that are described in the following sections.  Table 4-14. Math Functions Description LshiftU64 Shift a 64 bit integer left between 0 and 63 bits. RshiftU64 Shift a 64 bit integer right between 0 and 63 bits. MultiU64x32 Multiply a 64 bit unsigned integer by a 32 bit unsigned integer and generate a 64 bit unsigned result. DivU64x32 Divide a 64 bit unsigned integer by a 32 bit unsigned integer and generate a 64 bit unsigned result with an optional 32 bit unsigned remainder. LshiftU64 Function The LshiftU64() function shifts a 64 bit integer left between 0 and 63 bits. UINT64 LShiftU64 (     IN UINT64   Operand,     IN UINTN    Count     ); Parameters Operand  The 64 bit operand to shift left. Count  The number of bits to shift left. Description This function shifts the 64 bit value Operand to the left by Count bits.  The shifted value is returned. RshiftU64 Function The LshiftU64() function shifts a 64 bit integer right between 0 and 63 bits. UINT64 RShiftU64 (     IN UINT64   Operand,     IN UINTN    Count     ); Parameters Operand  The 64 bit operand to shift right. Count  The number of bits to shift right. Description This function shifts the 64 bit value Operand to the right by Count bits.  The shifted value is returned. MultU64x32 Function The MultU64x32() function multiples a 64 bit unsigned integer by a 32 bit unsigned integer and generates a 64 bit unsigned result. UINT64 MultU64x32 (     IN UINT64   Multiplicand,     IN UINTN    Multiplier     ); Parameters Multiplicand  A 64 bit unsigned value. Multiplier  A 32 bit unsigned value. Description This function multiples the 64 bit unsigned value Multiplcand by the 32 bit unsigned value Multiplier and generates a 64 bit unsigned result.  This 64 bit unsigned result is returned. DivU64x32 Function The DivU64x32() function divides a 64 bit unsigned integer by a 32 bit unsigned integer and generates a 64 bit unsigned result and a 32 bit unsigned remainder. UINT64 DivU64x32 (     IN UINT64   Dividend,     IN UINTN    Divisor,     OUT UINTN   *Remainder OPTIONAL     ); Parameters Dividend  A 64 bit unsigned value. Divisor  A 32 bit unsigned value. Remainder  A pointer to a 32 bit value. Description This function divides the 64 bit unsigned value Dividend by the 32 bit unsigned value Divisor and generates a 32 bit unsigned quotient.  If Remainder is not NULL, then the 32 bit unsigned remainder is returned in Remainder.  This function returns the 32 bit unsigned quotient. Spin Lock Functions Spin locks are used to protect data structures that may be updated by more than one processor at a time, or a single processor that may update the same data structure while running a several different priority levels.  A spin lock is stored in an FLOCK data structure.  typedef struct _FLOCK {     EFI_TPL     Tpl;     EFI_TPL     OwnerTpl;     UINTN       Lock; } FLOCK; Table 4-15 lists the support functions for creating and maintaining spin locks.  These functions are described in the following sections. Table 4-15. Spin Lock Functions Description InitializeLock Initialize a spin lock. AcquireLock Acquire a spin lock. ReleaseLock Release a spin lock. InitializeLock Function The InitializeLock() function initializes a basic mutual exclusion lock. InitializeLock (     IN OUT FLOCK    *Lock,     IN EFI_TPL      Priority     ); Parameters Lock  A pointer to the lock data structure to initialize. Priority  The task priority level of the lock. Description This function initializes a basic mutual exclusion lock.   Each lock provides mutual exclusion access at its task priority level.  Since there is no preemption or multiprocessor support in EFI, acquiring the lock only consists of raising to the locks TPL. AcquireLock Function The AcquireLock() function acquires ownership of a lock AcquireLock (     IN FLOCK    *Lock     ); Parameters Lock  A pointer to the lock to acquire. Description This function raises the system s current task priority level to the task priority level of the mutual exclusion lock.  Then, it acquires ownership of the lock. ReleaseLock Function The ReleaseLock() function releases ownership of a lock ReleaseLock (     IN FLOCK    *Lock     ); Parameters Lock  A pointer to the lock to release. Description This function releases ownership of the mutual exclusion lock, and restores the system s task priority level to its previous level. Handle and Protocol Support Functions The EFI Library contains a set of functions that help drivers maintain the protocol interfaces in the boot services environment.  Table 4-16 lists the set of helper functions that are described in the following sections. Table 4-16. Handle and Protocol Support Functions Description LibLocateHandle Finds all device handles that match the specified search criteria. LibLocateHandleByDiskSignature Finds all device handles that support the Block I/O protocol and have a disk with a matching disk signature. LibLocateProtocol Finds the first protocol instance that matches a given protocol. LibInstallProtocolInterfaces Installs one or more protocol interfaces into the boot services environment.. LibUninstallProtocolInterfaces Removes one or more protocol interfaces from the boot services environment. LinReinstallProtocolInterfaces Reinstalls one or more protocol interfaces into the boot services environment. LibLocateHandle Function The LibLocateHandle() function returns an array of handles that support the requested protocol in a buffer allocated from pool. EFI_STATUS LibLocateHandle (     IN EFI_LOCATE_SEARCH_TYPE   SearchType,     IN EFI_GUID                 *Protocol OPTIONAL,     IN VOID                     *SearchKey OPTIONAL,     IN OUT UINTN                *NoHandles,     OUT EFI_HANDLE              **Buffer     ); Parameters SearchType Specifies which handle(s) are to be returned. Protocol Provides the protocol to search by.   This parameter is only valid for SearchType ByProtocol. SearchKey Supplies the search key depending on the SearchType. NoHandles The number of handles returned in Buffer. Buffer A pointer to the buffer to return the requested array of handles that support Protocol.  Description The LibLocateHandle() function returns one or more handles that match the SearchType request.  Buffer is allocated from pool, and the number of entries in Buffer is returned in NoHandles.  Each SearchType is described below: AllHandles  Protocol and SearchKey are ignored and the function returns an array of every handle in the system. ByRegisterNotify SearchKey supplies the Registration returned by RegisterProtocolNotify().  The function returns the next handle that is new for the Registration.  Only one handle is returned at a time, and the caller must loop until no more handles are returned.  Protocol is ignored for this search type. ByProtocol All handles that support Protocol are returned.  SearchKey is ignored for this search type.  Status Codes Returned EFI_SUCCESS The result array of handles was returned. EFI_NOT_FOUND No handles match the search.  EFI_OUT_OF_RESOURCES There is not enough pool memory to store the matching results. LibLocateHandleByDiskSignature Function The LibLocateHandleByDiskSignature() function returns an array of handles that support the requested protocol in a buffer allocated from pool. EFI_STATUS LibLocateHandle (     IN UINT8 MBRType,     IN UINT8 SignatureType,     IN VOID *Signature,     IN OUT UINTN *NoHandles,     OUT EFI_HANDLE **Buffer     ); Parameters MBRType Specifies the type of MBR to search for.  This can either be the PC AT compatible MBR or an EFI Partition Table Header. SignatureType Specifies the type of signature to look for in the MBR.  This can either be a 32 bit signature, or a GUID signature. Signature A pointer to a 32 bit disk signature or a pointer to a GUID disk signature.  The type depends on SignatureType. NoHandles The number of handles returned in Buffer. Buffer A pointer to the buffer to return the requested array of handles that support Protocol.  Description The LibLocateHandleByDiskSignature() function returns one or more handles to disk devices that match the specified MBRType, SignatureType, and Signature.  Buffer is allocated from pool, and the number of entries in Buffer is returned in NoHandles.  The following are definitions for the valid values for MBRType and SignatureType. #define MBR_TYPE_PCAT                       0x01 #define MBR_TYPE_EFI_PARTITION_TABLE_HEADER 0x02 #define SIGNATURE_TYPE_MBR                  0x01 #define SIGNATURE_TYPE_GUID                 0x02 Status Codes Returned EFI_SUCCESS The result array of handles was returned. EFI_NOT_FOUND No handles match the search.  EFI_OUT_OF_RESOURCES There is not enough pool memory to store the matching results.  LibLocateProtocol Function The LibLocateProtocol() function returns the first protocol instance that matches the given protocol. EFI_STATUS LibLocateProtocol (     IN EFI_GUID                 *Protocol,     OUT VOID                    **Interface     ); Parameters Protocol Provides the protocol to search for.  Interface On return, a pointer to the first interface that matches Protocol. Description The LibLocateProtocol() function finds all the device handles that support Protocol, and returns a pointer to the the protocol instance from the first handle in Interface.  If no protocol instances are found, then Instance is set to NULL. Status Codes Returned EFI_SUCCESS A protocol instance matching Protocol was found. EFI_NOT_FOUND No protocol instances were found that match Protocol.  LibInstallProtocolInterfaces Function The LibInstallProtocolInterfaces() function installs one or more protocol interfaces into the boot services environment. EFI_STATUS LibInstallProtocolInterfaces (     IN OUT EFI_HANDLE       *Handle,     ...     ); Parameters Handle  The handle to install the new protocol interfaces on, or NULL if a new handle is to be allocated. A variable argument list containing pairs of protocol GUIDs and protocol interfaces. Description This function installs a set of protocol interfaces into the boot services environment.  It removes arguments from the variable argument list in pairs.  The first item is always a pointer to the protocol s GUID, and the second item is always a pointer to the protocol s interface.  These pairs are used to call the boot services routine InstallProtoclInterface() to add one protocol interface to Handle.  If Handle is NULL on entry, then a new handle will be allocated.  The pairs of arguments are removed from the variable argument list until a NULL protocol GUID value is found.  If any errors are generated while the protocol interfaces are being installed, then all the protocols added in this call will be removed. Status Codes Returned EFI_SUCCESS All the protocol interfaces were installed. EFI_OUT_OF_RESOURCES There was not enough memory in pool to install all the protocols. LibUninstallProtocolInterfaces Function The LibInstallProtocolInterfaces() function removes one or more protocol interfaces into the boot services environment. LibUninstallProtocolInterfaces (     IN EFI_HANDLE           Handle,     ...     ); Parameters Handle  The handle to remove the protocol interfaces from. A variable argument list containing pairs of protocol GUIDs and protocol interfaces. Description This function removes a set of protocol interfaces from the boot services environment.  It removes arguments from the variable argument list in pairs.  The first item is always a pointer to the protocol s GUID, and the second item is always a pointer to the protocol s interface.  These pairs are used to call the boot services routine UninstallProtoclInterface() to remove one protocol interface from Handle.  The pairs of arguments are removed from the variable argument list until a NULL protocol GUID value is found. Status Codes Returned EFI_SUCCESS All the protocol interfaces were removed. EFI_NOT_FOUND One of the protocol interfaces could not be found. LibReinstallProtocolInterfaces Function The LibReinstallProtocolInterfaces() function replaces one or more protocol interfaces into the boot services environment. EFI_STATUS LibReinstallProtocolInterfaces (     IN OUT EFI_HANDLE           Handle,     ...     ); Parameters Handle  The handle to remove the protocol interfaces from. A variable argument list containing triplets of protocol GUIDs, old protocol interfaces, and new protocol interfaces. Description This function replaces a set of protocol interfaces in the boot services environment.  It removes arguments from the variable argument list in triplets.  The first item is always a pointer to the protocol s GUID, and the second item is always a pointer to the current protocol interface, and the third item is always a pointer to the new protocol interface.  These triplets are used to call the boot services routine ReinstallProtoclInterface() to replace one protocol interface in Handle.  The triplets of arguments are removed from the variable argument list until a NULL protocol GUID value is found.  If there are any errors in this process, then the boot services environment is restored to the state it had just before the call to this function was made. Status Codes Returned EFI_SUCCESS All the protocol interfaces were replaced. EFI_NOT_FOUND One of the protocol interfaces could not be found. File I/O Support Functions Table 4-17 lists some helper function related to Files and a set of functions and macros that facilitate the manipulate of Files. typedef VOID        *SIMPLE_READ_FILE; Table 4-17. File I/O Support Functions Description LibOpenRoot Opens and returns a file handle to a root directory of a volume. LibFileInfo Retrieves the file information on an open file handle. LibFileSystemInfo Retrieves the file system information on an open file handle. LibFileSystemVolumeLabelInfo Retrieves the file system information on an open file handle. ValidMBR Determines if a hard drive s Master Boot Record is valid. OpenSimpleReadFile Opens a file from several possible sources and returns a file handle. ReadSimpleReadFile Read from a file opened with OpenSimpleReadFile. CloseSimpleReadFile Close a file opened with OpenSimpleReadFile. LibOpenRoot Function The LibOpenRoot() function opens and returns a file handle to the root directory of a volume. EFI_FILE_HANDLE LibOpenRoot (     IN EFI_HANDLE           DeviceHandle     ); Parameters DeviceHandle  A handle for a device. Description This function looks for a FileSystemProtocol attached to DeviceHandle.  If one is found, then an attempt is made to open a volume on that device.  If this succeeds, then a valid file handle is returned.  Otherwise, NULL is returned. LibFileInfo Function The LibFileInfo() function gets the file information from an open file descriptor, and stores it in a buffer allocated from pool. EFI_FILE_INFO * LibFileInfo (     IN EFI_FILE_HANDLE      FHand     ); Parameters FHand  A file handle. Description This function retrieves the EFI_FILE_INFO data structure for the file handle Fhand, and stores it in a buffer allocated from pool.  A pointer to this buffer is returned.  If the file information can not be retrieved, or there is not enough memory in pool to store the data structure, NULL will be returned. LibFileSystemInfo Function The LibFileSystemInfo() function gets the file system information from an open file descriptor, and stores it in a buffer allocated from pool. EFI_FILE_SYSTEM_INFO * LibFileSystemInfo (     IN EFI_FILE_HANDLE      FHand     ); Parameters FHand  A file handle. Description This function retrieves the EFI_FILE_SYSTEM_INFO data structure for the file handle Fhand, and stores it in a buffer allocated from pool.  A pointer to this buffer is returned.  If the file information can not be retrieved, or there is not enough memory in pool to store the data structure, NULL will be returned. LibFileSystemVolumeLabelInfo Function The LibFileSystemVolumeLabelInfo() function gets the file system information from an open file descriptor, and stores it in a buffer allocated from pool. EFI_FILE_SYSTEM_VOLUME_LABEL_INFO * LibFileSystemVolumeLabelInfo (     IN EFI_FILE_HANDLE      FHand     ); Parameters FHand  A file handle. Description This function retrieves the eleven-byte EFI_FILE_SYSTEM_LABEL_INFO data structure for the file handle Fhand, and stores it in a buffer allocated from pool.  A pointer to this buffer is returned.  If the file information can not be retrieved, or there is not enough memory in pool to store the data structure, NULL will be returned. ValidMBR Function The ValidMBR() function determines if a hard drive s Master Boot Record is valid. BOOLEAN ValidMBR(     IN  MASTER_BOOT_RECORD  *Mbr,     IN  EFI_BLOCK_IO        *BlkIo     ); Parameters A pointer to a hard drive s Master Boot Record. BlkIo  A pointer to a BLOCK_IO Protocol handle. Description This function verifies that the layout of partitions described in the master boot record are valid.  The master boot record is in the buffer pointed to by Mbr.  Additional information about the physical disk is contained in BlkIo.  The size of the partitions are compared to the size of the physical drive, and checks are also made for overlapping partitions.  If the MBR is valid, then TRUE is returned.  Otherwise, FALSE is returned. Status Codes Returned The Master Boot Record is valid. FALSE The Master Boot Record is not valid. OpenSimpleReadFile Function The OpenSimpleReadFile() function opens a file from several possible sources and returns a file handle. EFI_STATUS OpenSimpleReadFile (     IN BOOLEAN                  BootPolicy,     IN VOID                     *SourceBuffer   OPTIONAL,     IN UINTN                    SourceSize,     IN EFI_DEVICE_PATH          **FilePath,     IN EFI_HANDLE               *DeviceHandle,         OUT SIMPLE_READ_FILE        *SimpleReadHandle     ); Parameters BootPolicy  If TRUE, indicates that the request originates from the boot manager, and that the boot manager is attempting to load FilePath as a boot selection. SourceBuffer  A pointer to a buffer containing the file. SourceSize  The size of the buffer containing the file to access. FilePath  Pointer to the device specific path of the file to load. DeviceHandle  Pointer to the device handle of the device to open. SimpleReadHandle  A pointer to the file handle to return. Description This function opens a file from one of three possible sources and returns a file handle.  The first source is a file on a device through the file system interface.  The second source is through a file on a device through the load file interface, and the third source is from a buffer in memory.  If the optional parameter SourceBuffer is not NULL, then it is assumed that the file is in a buffer in memory and a file handle for this file is returned in SimpleReadHandle.  If the root of the device specified by DeviceHandle can be opened, and FilePath is a valid file path on the device, then the file specified by the combination of DeviceHandle and FilePath is opened and a file handle is returned in SimpleReadHandle.  If access to the file is not allowed through the file system interface, then an attempt is made to open the file through the load file interface.  If this succeeds, then a copy of the file is loaded into memory, and a file handle is returned in SimpleReadHandle. Status Codes Returned EFI_SUCCESS The file was opened and a valid file handle was returned. EFI_OUT_OF_RESOURCES The file handle could not be allocated from memory. EFI_UNSUPPORTED The LOAD_FILE protocol is not supported form this file. EFI_BUFFER_TOO_SMALL A buffer for the file could not be allocated. EFI_NO_MEDIA No media was present to load the file. EFI_DEVICE_ERROR The file was not loaded due to a device error. EFI_NO_RESPONSE The remote system did not respond. EFI_NOT_FOUND The file was not found. ReadSimpleReadFile Function The ReadSimpleReadFile() reads data from a file opened with OpenSimpleReadFile() EFI_STATUS ReadSimpleReadFile (     IN SIMPLE_READ_FILE     SimpleReadHandle,     IN UINTN                Offset,     IN OUT UINTN            *ReadSize,     OUT VOID                *Buffer     ); Parameters SimpleReadHandle  A file handle. Offset  Offset in bytes within the file to begin the read operation. ReadSize  A pointer to the number of bytes to read from the file. Buffer  A pointer to the buffer to store the read data. Description This function reads data from the file specified by the file handle SimpleReadHandle.  If the file handle describes a file image in memory, then a memory copy is performed to copy the read data into Buffer.  Otherwise, a file system read call is made to read the data from a device into Buffer.  If Offset is beyond the end of the file, then ReadSize is set to zero, and an error is returned.  Otherwise, ReadSize will be set to the number of bytes actually read from the device. Status Codes Returned EFI_SUCCESS The data was read. EFI_NO_MEDIA No media was present to load the file. EFI_DEVICE_ERROR The device reported an error. EFI_VOLUME_CORRUPTED The file system structures are corrupted. EFI_BUFFER_TOO_SMALL The ReadSize is too small to read the current file.  ReadSize had been updated with the size needed to complete the request. CloseSimpleReadFile Function The CloseSimpleReadFile() closes a file opened with OpenSimpleReadFile(). CloseSimpleReadFile (     IN SIMPLE_READ_FILE     SimpleReadHandle     ); Parameters SimpleReadHandle  A file handle. Description This function closes the file specified by SimpleReadHandle and frees the memory used by SimpleReadHandle.  If any data buffers were allocated when SimpleReadHandle was opened, then those buffers are also freed. Device Path Support Functions Table 4-18 lists the support functions for creating and maintaining device path data structures.  These functions are described in the following sections. Table 4-18. Device Path Support Functions Description DevicePathFromHandle Retrieves the device path from a specified handle. DevicePathInstance Retrieves the next device path instance from a device path. DevicePathInstanceCount Returns the number of device path instances in a device path. AppendDevicePath Appends a device path to all the instances of another device path. AppendDevicePathNode Appends a device path node to all the instances of a device path.  AppendDevicePathInstance Appends a device path instance to a device path.  FileDevicePath Appends a file path to a device path. DevicePathSize Returns the size of a device path in bytes. DuplicateDevicePath Creates a new copy of a device path. LibDevicePathToInterface Retrieves a protocol interface for a device. UnpackDevicePath Naturally aligns all the nodes in a device path. LibMatchDevicePaths Reports membership of a single-instance device path in a possible multi-instance device path. LibDuplicateDevicePathInstance Creates a second corresponding instance of a given device path. DevicePathFromHandle Function The DevicePathFromHandle() function retrieves the device path for the specified handle. EFI_DEVICE_PATH * DevicePathFromHandle (     IN EFI_HANDLE           Handle     ); Parameters Handle  A handle. Description This function retrieves the device path for a handle specified by Handle.  If Handle is valid, then a pointer to the device path is returned.  If Handle is not valid, then NULL is returned. DevicePathInstance Function The DevicePathInstance() function retrieves the next device path instance from a device path data structure. EFI_DEVICE_PATH * DevicePathInstance (     IN OUT EFI_DEVICE_PATH  **DevicePath,     OUT UINTN               *Size     ); Parameters DevicePath  A pointer to a device path data structure. Size  A pointer to the size of a device path instance in bytes. Description This function is used to parse device path instances from the device path DevicePath. This function returns a pointer to the current device path instance.  In addition, it returns the size in bytes of the current device path instance in Size, and a pointer to the next device path instance in DevicePath.  If there are no more device path instances in DevicePath, then DevicePath will be set to NULL. DevicePathInstanceCount Function The DevicePathInstanceCount() function is used to determine the number of device path instances that exist in a device path. UINTN DevicePathInstanceCount (     IN EFI_DEVICE_PATH      *DevicePath     ); Parameters DevicePath  A pointer to a device path data structure. Description This function counts and returns the number of device path instances in DevicePath. AppendDevicePath Function The AppendDevicePath() function is used to append a device path to all the instances in another device path. EFI_DEVICE_PATH * AppendDevicePath (     IN EFI_DEVICE_PATH      *Src1,     IN EFI_DEVICE_PATH      *Src2     ); Parameters A pointer to a device path data structure. A pointer to a device path data structure. Description This function appends the device path Src2 to every device path instance in Src1.  A pointer to the new device path is returned.  NULL is returned if space for the new device path could not be allocated from pool. It is up to the caller to free the memory used by Src1 and Src2 if they are no longer needed. AppendDevicePathNode Function The AppendDevicePathNode() function is used to append a device path node to all the instances in another device path. EFI_DEVICE_PATH * AppendDevicePathNode (     IN EFI_DEVICE_PATH      *Src1,     IN EFI_DEVICE_PATH      *Src2     ); Parameters A pointer to a device path data structure. A pointer to a single device path node. Description This function appends the device path node Src2 to every device path instance in Src1.  This function returns a pointer to the new device path.  If there is not enough temporary pool memory available to complete this function, then NULL is returned. It is up to the caller to free the memory used by Src1 and Src2 if they are no longer needed. AppendDevicePathInstance Function The AppendDevicePathInstance() function is used to add a device path instance to a device path. EFI_DEVICE_PATH * AppendDevicePathInstance (     IN EFI_DEVICE_PATH      *Src,     IN EFI_DEVICE_PATH      *Instance     ); Parameters A pointer to a device path data structure. Instance A pointer to a device path instance. Description This function appends the device path instance Instance to the device path Src.  If Src is NULL, then a new device path with one instance is created.  This function returns a pointer to the new device path.. If there is not enough temporary pool memory available to complete this function, then NULL is returned. It is up to the caller to free the memory used by Src and Instance if they are no longer needed.  FileDevicePath Function The FileDevicePath() allocates a device path for a file and appends it to an existing device path.  EFI_DEVICE_PATH * FileDevicePath (     IN EFI_HANDLE           Device  OPTIONAL,     IN CHAR16               *FileName     ); Parameters Device  A pointer to a device handle. FileName  A pointer to a Null-terminated Unicode string. Description If Device is a valid device handle, then a device path for the file specified by FileName   is allocated and appended to the device path associated with the handle Device.  If Device is not a valid device handle, then a device path for the file specified by FileName is allocated and returned. DevicePathSize Function The DevicePathSize() function returns the size of a device path in bytes. UINTN DevicePathSize (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function determines the size of a data path data structure in bytes.  This size is returned. DuplicateDevicePath Function The DuplicateDevicePath() function creates a duplicate copy of an existing device path. EFI_DEVICE_PATH * DuplicateDevicePath (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function allocates space for a new copy of the device path DevPath.  If the memory is successfully allocated, then the contents of DevPath are copied to the newly allocated buffer, and a pointer to that buffer is returned.  Otherwise, NULL is returned. LibDevicePathToInterface Function The LibDevicePathToInterface() function retrieves a protocol interface for a device. EFI_STATUS LibDevicePathToInterface (     IN EFI_GUID             *Protocol,     IN EFI_DEVICE_PATH      *FilePath,     OUT VOID                **Interface     ); Parameters Protocol  The published unique identifier of the protocol. FilePath  A pointer to a device path data structure. Interface  Supplies and address where a pointer to the requested Protocol interface is returned. Description This function finds all the devices that support the interface protocol specified by Protocol.  It then searches that list of devices for the one that best matches the device path specified by FilePath.  If a match is found, then the protocol interface of that device is returned in Interface.  Otherwise, Interface is set to NULL. Status Codes Returned EFI_SUCCESS A matching protocol interface was found. EFI_NOT_FOUND A matching protocol interface was not found. EFI_UNSUPPORTED The device does not support the requested protocol. EFI_INVALID_PARAMETER FilePath contains more than one device path instance. UnpackDevicePath Function The UnpackDevicePath() function unpacks a device path data structure so that all the nodes of a device path are naturally aligned. EFI_DEVICE_PATH * UnpackDevicePath (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function allocates space for a new copy of the device path DevPath.  The new copy of DevPath is modified so that every node of the device path is naturally aligned.  If the memory for the device path is successfully allocated, then a pointer to the new device path is returned.  Otherwise, NULL is returned. LibMatchDevicePaths Function The LibMatchDevicePaths() function compares a device path data structure to that of all the nodes of a second device path instance. BOOLEAN LibMatchDevicePaths (     IN EFI_DEVICE_PATH      *Multi,     IN EFI_DEVICE_PATH      *Single     ); Parameters Multi  A pointer to a multi-instance device path data structure. Single  A pointer to a single-instance device path data structure. Description This function compares the Single instance device path against the various device path instances in Multi. The function returns TRUE if the Single is contained within Multi.  Otherwise, FALSE is returned. Status Codes Returned Single was found in Multi FALSE Single was not found in Multi LibDuplicateDevicePathInstance Function The LibDuplicateDevicePathInstance() function creates a device path data structure that identically matches the device path passed in. EFI_DEVICE_PATH * LibDuplicateDevicePathInstance (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function allocates space for a new copy of the device path DevPath.  The new copy of DevPath is created to identically match the input.  Otherwise, NULL is returned. PCI Functions and Macros Table 4-19 lists some helper function related to PCI devices and a set of functions and macros that are used to access PCI I/O and PCI Configuration Space. Table 4-19. PCI Functions and Macros Description PCIFindDeviceClass Finds a PCI device that matches the PCI BaseClass and SubClass. PCIFindDevice Finds a PCI device that matches the PCI Device ID and Vendor ID. InitializeGlobalIoDevice Retrieves the DEVICE_IO protocol instance for a given device. ReadPort Reads an I/O port. WritePort Writes to an I/O port. ReadPciConfig Reads an I/O port. WritePciConfig Writes to an I/O port. Read an 8 bit value from an I/O port. Write an 8 bit value to an I/O port. Read a 16 bit value from an I/O port. Outpw Write a 16 bit value to an I/O port. Read a 32 bit value from an I/O port. Outpd Write a 32 bit value to an I/O port. Readpci8 Read an 8 bit value from PCI Configuration Space. Writepci8 Write an 8 bit value to PCI Configuration Space. readpci16 Read a 16 bit value from PCI Configuration Space. writepci16 Write a 16 bit value to PCI Configuration Space. readpci32 Read a 32 bit value from PCI Configuration Space. writepci32 Write a 32 bit value to PCI Configuration Space. PciFindDeviceClass Function The PciFindDeviceClass() function finds the first PCI device with the specified class. typedef struct {     UINT8   Register;     UINT8   Function;     UINT8   Device;     UINT8   Bus;     UINT32  Reserved; } EFI_ADDRESS; typedef union {     UINT64          Address;     EFI_ADDRESS     EfiAddress; } EFI_PCI_ADDRESS_UNION; EFI_STATUS PciFindDeviceClass (     IN  OUT EFI_PCI_ADDRESS_UNION   *Address,     IN      UINT8                   BaseClass,     IN      UINT8                   SubClass     ); Parameters Address  A pointer to the data structure containing the Bus, Device, and Function of the PCI device that matches the specified class. BaseClass  The PCI base class of the device to search for. SubClass  The PCI sub class of the device to search for. Description This function search all the PCI busses for a device with a matching BaseClass and SubClass in the device s standard PCI header.  If a matching device is found, the device s PCI bus number, PCI device number, and PCI function number are returned in Address. EFI_SUCCESS A corresponding PCI device was found. EFI_NOT_FOUND A corresponding PCI device was not found. PciFindDevice Function The PicFindDevice() function finds the first PCI device with the specified Device ID and Vendor ID. typedef struct {     UINT16      VendorId;     UINT16      DeviceId;     UINT16      Command;     UINT16      Status;     UINT8       RevisionID;     UINT8       ClassCode[3];     UINT8       CacheLineSize;     UINT8       LaytencyTimer;     UINT8       HeaderType;     UINT8       BIST; } PCI_DEVICE_INDEPENDENT_REGION; typedef struct {     UINT32      Bar[6];     UINT32      CISPtr;     UINT16      SubsystemVendorID;     UINT16      SubsystemID;     UINT32      ExpansionRomBar;     UINT32      Reserved[2];     UINT8       InterruptLine;     UINT8       InterruptPin;     UINT8       MinGnt;     UINT8       MaxLat;      } PCI_DEVICE_HEADER_TYPE_REGION; typedef struct {     PCI_DEVICE_INDEPENDENT_REGION   Hdr;     PCI_DEVICE_HEADER_TYPE_REGION   Device; } PCI_TYPE00; EFI_STATUS PciFindDevice (     IN  OUT EFI_PCI_ADDRESS_UNION   *DeviceAddress,     IN      UINT16                  VendorId,     IN      UINT16                  DeviceId,     IN OUT  PCI_TYPE00              *Pci     ) Parameters DeviceAddress  A pointer to the data structure containing the Bus, Device, and Function of the PCI device that matches the specified class. VendorId  The PCI base class of the device to search for. DeviceId  The PCI sub class of the device to search for. A pointer to the configuration space header of the device. Description This function search all the PCI busses for a device with a matching VendorId and DeviceId in the device s standard PCI header.  If a matching device is found, the device s PCI bus number, PCI device number, and PCI function number are returned in Address, as is the Type 0 configuration space returned in Pci.  If the device cannot be discovered, EFI_NOT_FOUND is returned. EFI_SUCCESS A corresponding PCI device was found. EFI_NOT_FOUND A corresponding PCI device was not found. InitializeGlobalIoDevice Function The InitializeGlobalIoDevice() function returns a DEVICE_IO protocol instance that is supported by the given device. EFI_STATUS InitializeGlobalIoDevice (     IN EFI_DEVICE_PATH             *DevicePath,     IN EFI_GUID                    *Protocol,     IN UINT8                       *ErrorStr,     OUT EFI_DEVICE_IO_INTERFACE    **GlobalIoFncs      ); Parameters DevicePath A pointer to a device path. Protocol The protocol that a device driver is attempting to register for this device. ErrorStr Error message to display if the device specified by DevicePath already supports Protocol. GlobalIoFuncs A pointer to the DEVICE_IO protocol instance that is supported by the device specified by DevicePath. Description This function check to see if device specified by DevicePath already supports Protocol.  If it does, then an error message is displayed using ErrorStr.  If the device specified by DevicePath does not support Protocol, then a check is made to see if the device specified by DevicePath supports the DEVICE_IO protocol.  If it does, then the DEVICE_IO protocol instance is returned in GlobalIoFncs.   Status Codes Returned EFI_SUCCESS A DEVICE_IO protocol instance was returned.. EFI_LOAD_ERROR The device already supports Protocol. EFI_NOT_FOUND A DEVICE_IO protocol instance was not found. ReadPort Function The ReadPort() function reads an I/O port using a DEVICE_IO protocol instance. UINT32 ReadPort (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port     ); Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the I/O read. Width The width of the I/O read operation. The address of the I/O read operation. Description This function reads the I/O port specified by Port and Width using the protocol interface functions in GlobalIoFncs.  The data returned by the I/O read operation is returned. WritePort Function The WritePort() function writes to an I/O port using a DEVICE_IO protocol instance. UINT32 WritePort (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port,     IN UINTN                      Data Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the I/O write. Width The width of the I/O write operation. The address of the I/O write operation. The data to use for the I/O write operation. Description This function writes Data to the I/O port specified by Port and Width using the protocol interface functions in GlobalIoFncs.   Data is returned. ReadPciConfig Function The ReadPciConfig() function reads from PCI Configuration Space using a DEVICE_IO protocol instance. UINT32 ReadPciConfig (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port     ); Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the PCI Configuration read. Width The width of the PCI Configuration read operation. The address of the PCI Configuration read operation. Description This function reads from PCI Configuration Space at the address specified by Port and Width using the protocol interface functions in GlobalIoFncs.  The data returned by the PCI Configuration read operation is returned. WritePciConfig Function The WritePciConfig() function writes to PCI Configuration Space using a DEVICE_IO protocol instance. UINT32 WritePciConfig (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port,     IN UINTN                      Data Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the I/O write. Width The width of the PCI Configuration write operation. The address of the PCI Configuration write operation. The data to use for the PCI Configuration write operation. Description This function writes Data to PCI Configuration Space at the address specified by Port and Width using the protocol interface functions in GlobalIoFncs.   Data is returned. inp Macro The inp() macro reads an 8 bit value from an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 inp (     IN UINTN    Port Parameters The address of the I/O read operation. Description This function reads an 8 bit value from the I/O port specified by Port. outp Macro The outp() macro writes an 8 bit value to an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. outp (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the I/O write operation. The 8 bit value to write. Description This function writes the 8 bit value Data to the I/O port specified by Port.   inpw Macro The inpw() macro reads a 16 bit value from an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. UINT16 inpw (     IN UINTN    Port Parameters The address of the I/O read operation. Description This function reads a 16 bit value from the I/O port specified by Port. outpw Macro The outpw() macro writes a 16 bit value to an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. outpw (     IN UINTN    Port,     IN UINT16   Data Parameters The address of the I/O write operation. The 16 bit value to write. Description This function writes the 16 bit value Data to the I/O port specified by Port.   inpd Macro The inpd() macro reads a 32 bit value from an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. UINT32 inpd (     IN UINTN    Port Parameters The address of the I/O read operation. Description This function reads a 32 bit value from the I/O port specified by Port. outpd Macro The outpd() macro writes a 32 bit value to an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. outpd (     IN UINTN    Port,     IN UINT32   Data Parameters The address of the I/O write operation. The 32 bit value to write. Description This function writes 32 bit value Data to the I/O port specified by Port.   readpci8 Macro The readpci8() macro reads an 8 bit value from PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 readpci8 (     IN UINTN    Port Parameters The address of the PCI Configuration read operation. Description This function reads an 8 bit value from PCI Configuration Space at the address specified by Port. writepci8 Macro The writepci8() macro writes an 8 bit value to PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. writepci8 (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the PCI Configuration write operation. The 8 bit value to write. Description This function writes the 8 bit value Data to PCI Configuration Space at the address specified by Port.   readpci16 Macro The readpci16() macro reads a 16 bit value from PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 readpci16 (     IN UINTN    Port Parameters The address of the PCI Configuration read operation. Description This function reads a 16 bit value from PCI Configuration Space at the address specified by Port. writepci16 Macro The writepci16() macro writes a 16 bit value to PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. writepci16 (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the PCI Configuration write operation. The 16 bit value to write. Description This function writes the 16 bit value Data to PCI Configuration Space at the address specified by Port.   readpci32 Macro The readpci32() macro reads a 32 bit value from PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 readpci32 (     IN UINTN    Port Parameters The address of the PCI Configuration read operation. Description This function reads a 32 bit value from PCI Configuration Space at the address specified by Port. writepci32 Macro The writepci32() macro writes a 32 bit value to PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. writepci32 (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the PCI Configuration write operation. The 32 bit value to write. Description This function writes the 32 bit value Data to PCI Configuration Space at the address specified by Port.   Miscellaneous Functions and Macros Table 4-20 lists some miscellaneous helper functions that are described in the following sections. Table 4-20. Miscellaneous Functions and Macros Description LibGetVariable Retrieves and environment variable's value. LibGetVariableAndSIze Retrieves and environment variable's value and its size in bytes. CompareGuid Compares two 128 bit GUIDs. Returns a pointer to a element's containing record. DecimaltoBCD Converts a decimal value to a BCD value. BCDtoDecimal Converts a BCD value to a decimal value. LibCreateProtocolNotifyEvent Creates a notification event that fires every time a protocol instance is created. WaitForSingleEvent Waits for an event to fire or a timeout to expire. WaitForEventWithTimeout Waits for either a SIMPLE_INPUT event or a timeout to occur. RtLibEnableVirtualMappings Converts internal library pointers to virtual runtime pointers. RtConvertList Converts pointers in a linked list to virtual runtime pointers. LibGetSystemConfigurationTable Retrieves a system configuration table from the EFI System Table. LibGetVariable Function The LibGetVariable() function returns the value of the specified variable. VOID * LibGetVariable (     IN CHAR16               *Name,     IN EFI_GUID             *VendorGuid     ); Parameters Name  A Null-terminated Unicode string that is the name of the vendor s variable. VendorGuid  A unique identifier for the vendor. Description This function retrieves the value of the variable specified by Name and VendorGuid.  If the variable exists, space for storing the variable s value is allocated from pool, and a pointer to the variable s value is returned.  Otherwise, NULL is returned. LibGetVariableAndSize Function The LibGetVariableAndSize() function returns the value of the specified variable and its size in bytes. VOID * LibGetVariableAndSize (     IN CHAR16               *Name,     IN EFI_GUID             *VendorGuid,     OUT UINTN               *VarSize     ); Parameters Name  A Null-terminated Unicode string that is the name of the vendor s variable. VendorGuid  A unique identifier for the vendor. VarSize The size of the returned environment variable in bytes. Description This function retrieves the value of the variable specified by Name and VendorGuid.  If the variable exists, space for storing the variable s value is allocated from pool, and a pointer to the variable s value is returned.  Otherwise, NULL is returned.  The size of the variable s value is returned in VarSize. CompareGuid Function The CompareGuid() function compares two GUIDs. CompareGuid(     IN EFI_GUID     *Guid1,     IN EFI_GUID     *Guid2     ); Parameters Guid1 A pointer to a 128 bit GUID. Guid2 A pointer to a 128 bit GUID. Description This function compares two128 bit GUIDs.  If the GUIDs are identical then 0 is returned.  If there are any bit differences in the two GUIDs, a non zero value is returned. Status Codes Returned The two GUIDs are identical. The two GUIDs are not identical CR Macro The CR() macro returns a pointer to an elements containing record . TYPE *     VOID    *Record,             TYPE,             Field,     UINTN   Signature     ); Parameters Record  A pointer to a field within the containing record. TYPE  The name of the containing record s data structure type. record. Field  The name of the field from the containing record to which Record points. Signature  The signature for the containing record s data structure. Description This macro returns a pointer to a data structure from one of the data structure s elements. DecimaltoBCD Function The DecimaltoBcd() function converts a decimal value to a BCD value.. UINT8 DecimaltoBCD(     IN  UINT8 DecValue     ); Parameters DecValue An 8 bit decimal value. Description This function converts an 8 bit decimal value to an 8 bit BCD value and returns the BCD value.  BCDtoDecimal Function The BCDtoDecimal() function converts a BCD value to a decimal value. UINT8 BCDtoDecimal(     IN  UINT8 BcdValue     ); Parameters BcdValue An 8 bit BCD value. Description This function converts an 8 bit BCD value to an 8 bit decimal value and returns the decimal value. LibCreateProtocolNotifyEvent Function The LibCreateProtocolNotifyEvent() function creates a notification event and registers that event with all the protocol instances specified by ProtocolGuid.  EFI_EVENT LibCreateProtocolNotifyEvent(     IN EFI_GUID             *ProtocolGuid,     IN EFI_TPL               NotifyTpl,     IN EFI_EVENT_NOTIFY      NotifyFunction,     IN VOID                 *NotifyContext,     OUT VOID                *Registration     ); Parameters ProtocolGuid Supplies GUID of the protocol upon whose installation the event is fired. NotifyTpl Supplies the task priority level of the event notifications. NotifyFunction Supplies the function to notify when the event is signaled. NotifyContext The context parameter to pass to NotifyFunction.  Registration A pointer to a memory location to receive the registration value.  This value is passed to LocateHandle() to obtain new handles that have been added that support the ProtocolGuid-specified protocol.  Description This function causes the notification function to be executed for every protocol of type ProtocolGuid instance that exists in the system when this function is invoked.  In addition, every time a protocol of type ProtocolGuid instance is added, the notification function is also executed.  This function returns the notification event that was created. WaitForSingleEvent Function The WaitForSingleEvent() function waits for a given event to fire, or for an optional timeout to expire. EFI_STATUS WaitForSingleEvent(     IN EFI_EVENT            Event,     IN UINT64               Timeout OPTIONAL     ); Parameters Event The event to wait for. Timeout An optional timeout value in 100 ns units. Description This function waits for Event to fire.  If Event does fire, then EFI_SUCCESS is returned.  If Timeout is zero, then this function will wait indefinitely for Event to fire.  If Timeout is not zero, then this function will wait for both Event and the Timeout period.  If the Timeout expires, then EFI_TIME_OUT will be returned. Status Codes Returned EFI_SUCCESS Event fired before Timeout expired. EFI_TIME_OUT Timout expired before Event fired.. WaitForEventWithTimeout Function The WaitForEventWithTimeout() function prints a string for the given number of seconds until either the timeout expires, or the user presses a key. WaitForEventWithTimeout (     IN  EFI_EVENT       Event,     IN  UINTN           Timeout,     IN  UINTN           Row,     IN  UINTN           Column,     IN  CHAR16          *String,     IN  EFI_INPUT_KEY   TimeoutKey,     OUT EFI_INPUT_KEY   *Key     ) Parameters Event The SIMPLE_TEXT_INPUT event to wait for. Timeout Timeout value in 1 second units The row to print String. Column The column to print String. String The string to display on the standard output device. TimeoutKey The key to return in Key if a timeout occurs. Either the key the user pressed or TimeoutKey if the Timeout expired. Description This function waits for Event to fire or Timeout to expire.  If Event does fire, then a keystroke is read from the standard input device a returned in Key.  If the Timeout in seconds does expire, then TimeoutKey is returned in Key.  For each second the passes while this function is waiting, String is displayed on the standard output device at (Row, Column).    RtLibEnableVirtualMappings Function The RtLibEnableVirtualMappings() function converts runtime pointers internal to the EFI Library to a new virtual base address. RtLibEnableVirtualMappings (     VOID     ); Parameters Description This function converts any runtime pointers that are internal to the EFI Library to a new virtual address base.  This function should only be called once as an OS transitions the EFI firmware from a flat physical memory model to a virtual runtime memory model. RtConvertList Function The RtConvertList() function converts all the pointers in a doubly linked list to a new virtual base address. #define EFI_OPTIONAL_PTR            0x00000001 #define EFI_INTERNAL_FNC            0x00000002  #define EFI_INTERNAL_PTR            0x00000004  RtConvertList (     IN UINTN             DebugDisposition,     IN OUT LIST_ENTRY    *ListHead     ); Parameters DebugDisposition A bitmask that describes the pointer types in the linked list. ListHead A pointer to a doubly linked list. Description This function converts all the Flink and Blink fields of the doubly linked list ListHead to a new virtual base address. LibGetSystemConfigurationTable Function The LibGetSystemConfigurationTable() function returns a system configuration table that is stored in the EFI System Table based on the provided GUID. EFI_STATUS LibGetSystemConfigurationTable (     IN EFI_GUID          *TableGuid,     IN OUT VOID          **Table     ); Parameters TableGuid A pointer to the table's GUID type. Table On exit, a pointer to a system configuration table. Description This function searches the list of configuration tables stored in the EFI System Table for a table with a GUID that matches TableGuid.  If one is found, then a pointer to the configuration table is returned in Table., and EFI_SUCCESS is returned.  If a matching GUID can not be found, then EFI_NOT_FOUND is returned. Status Codes Returned EFI_SUCCESS A configuration table matching TableGuid was found. EFI_NOT_FOUND A configuration table matching TableGuid could not be found. EFI LibraryIntel Boot Initiative Specification DRAFT PAGE   07/14/99 Version 0.70.2 PAGE   Version 0.70.99   04/24/00 Version 0.70.99   04/24/00  PAGE  DRAFT Contents  PAGE  Intel Confidential  DATE \@ "MM/dd/yy"  04/24/00 Version 0.70.9 Version 0.70.9  DATE \@ "MM/dd/yy"  04/24/00 Intel Confidential  PAGE  Version 0.70.99   04/24/00  PAGE  EFI LibraryIntel Boot Initiative Specification DRAFT DRAFT Contents  PAGE  04/24/00 Version 0.70.99 Version 0.70.99 04/24/00  PAGE  Version 0.70.99   04/24/00  PAGE  EFI LibraryIntel Boot Initiative Specification DRAFT DRAFT Introduction  PAGE  04/24/00 Version .70.99 Version 0.70.99   04/24/00  PAGE  Version 0.70.99   04/24/00  PAGE  Intel Boot InitiativeExtensible Firmware Interface Specification DRAFT DRAFT Introduction  PAGE  Intel Confidential  DATE \@ "MM/dd/yy"  04/24/00 Version 0.70.9 Version 0.70.9    DATE \@ "MM/dd/yy"  04/24/00 Intel Confidential  PAGE  Version 0.70.99   04/24/00  PAGE  Intel Boot InitiativeExtensible Firmware Interface Specification DRAFT DRAFT Introduction  PAGE   DATE \@ "MM/dd/yy"  04/24/00 Version .70.99 Version 0.70.9    DATE \@ "MM/dd/yy"  04/24/00 Intel Confidential  PAGE  Version 0.70.99   04/24/00  PAGE  EFI LibraryIntel Boot Initiative Specification DRAFT DRAFT Functions and Macros  PAGE   DATE \@ "MM/dd/yy"  04/24/00 Version 0.7.99 Version 0.70.99    DATE \@ "MM/dd/yy"  04/24/00  PAGE  Version 0.70.99   04/24/00  PAGE  S3fgH {3&gH ~ytojc yrng`YRN }xsnid_Z ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~zslhaZV ~{vqnkhcUROLI xupkfa\Y ~|wrmhc^Y {skcY xusnkkfa\YTO ~wsleaZ }vokd]YR {wpie^WS {tpib^ |yvsp ~wple^Z {tpib^WP }vokd]YR yungc\U }xqjf_XTM {wpie^WS }vokd]YR }vrkd`YRN yungc\UQ yvqjc_ ~wsleaZS }vokd]YR {wrole^ZS {wpie^WS |wrm|j\Y |wrmh rkg`YU zwurooje`]XS] |uqeb`]ZZU zupmjgda^m[ zslhaZV }qnlgdd_ZWR }xsni ~zslhZWUR zsoa^\Y yrng`\U {wkhfa^^YT |uqjc_X {wpie^WS |wrmhc`[VQ ~ytoje`[ {vqlid_Z |xqjf_ }vokd]YRK }olif S3fgH S3fgH S3fgH S3fgH S3fgH S3fgH
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\eventlog\readme.txt ===
This is a description of the contents of each file in the eventlog
project.
Ignore the test and enumsvc directories. They contain test programs.


eventlog
--------
dirs	    The directories to build.

elf.acf     The ACF file for RPC.

elf.h	    Generated by MIDL using elf.idl.

elf.idl     The IDL descriptions of the APIs and the data structures.

elfcommn.h  Common defines/declarations used by the server and the client
	    sides.

event.h     Data structures that should be placed in a common location in the
	    nt source tree.

imports.h
imports.idl Import files used by MIDL.

makefil0    Makefile to make the RPC client and server side files.


elfclnt
-------

apistub.c   The stubs for the ELF APIs.

elf_c.c     Generated by MIDL.
elf_x.c

elfapi.def  The APIs that are exported in the DLL.

elfclntp.h  Private header file.

rpcbind.c   Bind routines that are called by the RPC run times.

makefile
sources


server
------

config.c    Routines that deal with the registry and configuration for the
	    service. Contains the main registry monitor thread.

control.c   Routines that deal with control calls from the service controller.

elf_s.c     Generated by MIDL.
elf_y.c

elfapi.c    The server side of the APIs.

elfcfg.h    Header file for configuration related data.

elfdata.c   Global data.

elfdebug.c  DEBUG routines. These should go away in the final version.

elfdef.h    Data structure definitions and #defines used in the service.

elfextrn.h  Extern declarations of the global data.

elflpc.c    Routines that deal with the LPC port and with fielding packets
	    from the device driver.

elflpc.h    Header file for elflpc.c.

elfproto.h  Procedure prototypes.

elfrpc.c    RPC-related routines to clean up the context handle.

elfutil.c   Various low-level utility routines.

eventlog.c  Main entry point for service. All the initialization code.

eventp.h    Private header file for server end.

file.c	    Routines to manage the log files.

memory.c    Alloc/Free.

operate.c   All the low-level routines to perform the API requests.

terminat.c  Routines for terminating the service, and cleaning up.

makefile
sources


winbase - these changes will go into \nt\private\windows\base\client
-------

base.def    Define the Win32 event logging APIs.

eventapi.c  Entry points for the APIs.

sources
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\extensions.doc ===
Microsoft Word Document MSWordDoc Word.Document.8msoft Useful File System Debugger extensions: TitleUseful File System Debugger extensions: Normal benjamin leis Microsoft Word 9.0;foKK extensions /o=Microsoft/ou=APPS-WGA/cn=Recipients/cn=danlo Daniel Lovinger (Exchange) /o=Microsoft/ou=APPS-WGA/cn=Recipients/cn=danlo EX:/O=MICROSOFT/OU=APPS-WGA/CN=RECIPIENTS/CN=DANLO Daniel Lovinger (Exchange) danlo Daniel Lovinger (Exchange) /o=Microsoft/ou=APPS-WGA/cn=Recipients/cn=danlobjbjU Useful File System Debugger extensions: Author: Benjamin Leis [benl] Date: 11/24/99 In kdext*.dll Cxr / Kb   dumps a context record and then produces the stack for it. Exqueue   this dumps the executive work queues and gives a little diagnosis on what might be stalled Defwrites   dumps the cache manager delayed write queue and also does some diagnosis Findata [fileobject] [offset] dumps the cache manager view of the data for a file at the given offset. Irpfind [Flags] [RestartAddress] [Field] [Match]  Searches pool for irps. The flags are the same as for poolfind. Note: irps only exist in non-paged or special pool. RestartAddress lets you pickup a search from a given point. The field and match parameters let you filter for only the IRPs with a matching event, device, thread, process in its MDL, file object or argument. Locks   dumps a resource. Note: ed nt!expresourcetimeoutcount to increase the timeout value. Lpc [message] traces from an LPC message to the server thread handling it Pcr [processor #] dumps the processor info per processor. This includes the DPC list remaining to be delivered. PoolUsed [flags]   dumps pool usage if pool tagging is on. The flags determine sort order flags = 2 is sort by nonpaged pool flags = 4 sort by paged pool.  Flags = 1 puts it in verbose mode. Poolfind [Tag] [Flag]  searches pool for a given tag the flag determines which type of pool to look in.    0 = NonPagedPool 1= PagedPool 2=SpecialPool Thread / Process dump the process or thread  !process 8 f  will dump the complete system process threads  dumps the virtual memory situation. Pay special attention to pool usage counts. In ntfskd.dll Extents [attribute address]   given the address of an attribute dumps the extent pairs. Cachedrecords   dumps all the threads with cached mft records.  dump syscache data. This is only useful when building syscache privates and dumps the logging info attached to an SCB in a readable form. Filerecord [fcb] given an fcb dumps the on disk record if cached. Ntfsdata   dumps the top level ntfsdata including all the VCBs Overflow [vcb] dumps the overflow queue for a given VCB Notes:  Critical Section timeouts To trace get the stack at the point of fault using !cxr/!kb. Then dump the critical section it s the 1st parameter to RtlpWaitForCriticalSection.    The owner thread id is the 4th DWORD in the critical section.  Alternatively the possible timeouts printouts also show the critical section location and owner. This is a good shortcut and if they re missing just press   and let another timeout occur. RTL: Re-Waiting RTL: Enter Critical Section Timeout (2 minutes) 0 RTL: Pid.Tid e0.100, owner tid 344 Critical Section 77FC5060 - ContentionCount = Then do a !process to find the thread with the TID. Do a !thread and then usually the thread is waiting for a mutant or on a LPC message. If its waiting for a mutant the owner thread will be printed out in the header by !thread and if its in an lpc wait use the !lpc extension. Hung IRPs Once you ve found a stack waiting in NtfsWaitSync find the original irp. It s the 2nd parameter to NtfsNonCachedIo. If the IRP is in storage stack great o.w it s been subdivided into multiple sub-irps. To find the sub-IRPS  you could do a !irpfind but its much quicker to disassemble NtfsNonCachedIo , find the IORUNS parameter passed into NtfsMultipeAsyncIo and dump the IORUNS using !irp on each subirp.  At this point, check the other processors to see if someone is blocking DPC delivery.  If so you re done see what the current thread on that processor is doing. If not, put a breakpoint on the ntfs completion routine, press   and confirm that we re not being called. If the irp is still hung  you can then forward to ntmsd.  Note: if its in scsiport it may be useful to do a !scsikd.scsiext [scsi deviceobject from the IRP]  Pending IRPS  If an IRP has been pending by us, it must then be in one of several queues including: the overflow queue in the vcb (!overflow) the deferred write queue (!defwrites) or the system work queues (!exqueue) Hung PageIns: The 5th parameter to MiWaitForInPageComplete is a PMMINPAGE_SUPPORT structure. First check the thread parameter to see which thread is doing the i/o.  Also the information  field in the iosb should contain the actual read irp.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\clfs\readme.txt ===
This is the location for the new Common Log Service.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\dfs\placefil.txt ===
dfs.sys          dfs
dfsadmin.exe     dfs
dfsadmin.hlp     dfs
dfsadmin.cnt     dfs
dfscmd.exe       dfs
dfsinit.exe      dfs
dfssetup.dll     dfs
dfssvc.exe       dfs
oemsetup.inf     dfs
dfsdoc.htm       dfs
dfs.gif          dfs
dfsbvt.cmd       dump
dfsbvt1.exe      dump
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\dfs\setup\bom.txt ===
name	source	path	grouping	comment	product	dbg file?	platform	cdpath	inf file	inf section	inf line	size	csize	nocomp	priority	lmacl	ntacl	aclpath	medianame	disk
40291730.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"40291730 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
40293930.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"40293930 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
4MMDAT.SYS	@bins	\		"archive 4x20, wangdat, hp 35470a, 35480a, compaq"		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"4mmdat = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
8514A.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"8514a = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
8514A.SYS	x86bins	\		VGA class driver		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"8514a = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
A_PNT518.PPD	@bins	\		See printer.inf - LaserWriterPersonalNTv51.8			@	\@	@\printer.inf	[Files-PrinterData]	"a_pnt518 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
AC500503.PPD	@bins	\		See printer.inf - AgfaTabScriptC500PostScriptPrinterv50.3			@	\@	@\printer.inf	[Files-PrinterData]	"ac500503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
ADP.BIN	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-DATAFIREU-firmware]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ADP.BIN	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-DATAFIREST-firmware]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ADP.BIN	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-DATAFIRE4ST-firmware]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
AGFAP400.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"agfap400 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
AHA154X.SYS	@bins	\		"BOTH, SCSI: Adaptec 154x driver"		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"aha154x = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
AHA174X.SYS	@bins	\		"BOTH, SCSI: Adaptec 174x driver"		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"aha174x = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
AIC78XX.SYS	@bins	\		scsi miniport driver		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"aic78xx = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
ALJII523.PPD	@bins	\		See printer.inf - AdobeLaserJetIICartridgev52.3			@	\@	@\printer.inf	[Files-PrinterData]	"aljii523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
AM1500T.SYS	x86bins	\		NET NDIS driver: AM1500T card		x	x86	\i386	i386\oemnadam.inf	[Files-AM1500T]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
AMCHR518.PPD	@bins	\		See printer.inf - AgfaMatrixChromaScriptv51.8			@	\@	@\printer.inf	[Files-PrinterData]	"amchr518 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
AMDDLG.DLL	@bins	\		AMD PCI DLL		x	@	\@	@\oemnadap.inf	[Files-Dll]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
AMDNCDET.DLL	x86bins	\		NET detection dll: AM1500T card		x	x86	\i386	i386\oemnadam.inf	[Files-AMDNCDET]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
AMDPCN.SYS	@bins	\		NET NDIS driver: AMD PCI card		x	@	\@	@\oemnadap.inf	[Files-AMDPCI]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
AMI0NT.SYS	@bins	\				x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"ami0nt = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
AMSINT.SYS	@bins	\		AMD PCI scsi/net		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"amsint = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
AP_NTXJ1.PPD	@bins	\		See printer.inf - AppleLaserWriterIINTX-Jv50.5			@	\@	@\printer.inf	[Files-PrinterData]	"ap_ntxj1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APLW8101.PPD	@bins	\		Apple LaserWriter Pro 810			@	\@	@\printer.inf	[Files-PrinterData]	"aplw8101 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
APLWGRI.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"APLWGRI = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APLWIIF1.PPD	@bins	\		See printer.inf - AppleLaserWriterIIfv2010.113			@	\@	@\printer.inf	[Files-PrinterData]	"aplwiif1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
APLWIIG1.PPD	@bins	\		See printer.inf - AppleLaserWriterIIgv2010.113			@	\@	@\printer.inf	[Files-PrinterData]	"aplwiig1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
APLWNTR1.PPD	@bins	\		See printer.inf - ApplePersonalLaserWriterNTRv2010.129			@	\@	@\printer.inf	[Files-PrinterData]	"aplwntr1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
APLWSEL.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"APLWSEL = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APPLE230.PPD	@bins	\		See printer.inf - AppleLaserWriterv23.0			@	\@	@\printer.inf	[Files-PrinterData]	"apple230 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APPLE380.PPD	@bins	\		See printer.inf - AppleLaserWriterPlusv38.0			@	\@	@\printer.inf	[Files-PrinterData]	"apple380 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APPLE422.PPD	@bins	\		See printer.inf - AppleLaserWriterPlusv42.2			@	\@	@\printer.inf	[Files-PrinterData]	"apple422 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APS08522.PPD	@bins	\		See printer.inf - APS-PSPIPwithAPS-6-108v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"aps08522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APS12522.PPD	@bins	\		See printer.inf - APS-PSPIPwithLZR1200v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"aps12522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APS26522.PPD	@bins	\		See printer.inf - APS-PSPIPwithLZR2600v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"aps26522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APS80522.PPD	@bins	\		See printer.inf - APS-PSPIPwithAPS-6-80v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"aps80522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
APTOLLD1.PPD	@bins	\		Apple LaserWriter Pro 600			@	\@	@\printer.inf	[Files-PrinterData]	"aptolld1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
APTOLLW1.PPD	@bins	\		Apple LaserWriter Pro 630			@	\@	@\printer.inf	[Files-PrinterData]	"aptollw1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
ARCHQIC.SYS	@bins	\		"archive 2150s, 2525s, 2750"		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"archqic = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ARP.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
ARPA-127.REV	@bins	\		dns samples	as		@	\@	@\oemnsvdn.inf	[Files-DNS-SAMPLE]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dns\samples		0
ARPA-192.REV	@bins	\		dns samples	as		@	\@	@\oemnsvdn.inf	[Files-DNS-SAMPLE]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dns\samples		0
ARROW.SYS	@bins	\		arrow SCSI miniport		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"arrow = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
AST__470.PPD	@bins	\		See printer.inf - ASTTurboLaser-PSv47.0			@	\@	@\printer.inf	[Files-PrinterData]	"ast__470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
ASYNCMAC.SYS	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Drivers]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
ATAPI.SYS	@bins	\				x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"atapi = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
ATI.DLL	alphabins	\		video driver		x	alpha	\alpha	alpha\video.inf	[Files-DisplayDLLs]	"ati = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
ATI.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"ati = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
ATI.DLL	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayDLLs]	"ati = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
ATI.SYS	alphabins	\		video driver		x	alpha	\alpha	alpha\video.inf	[Files-DisplayMiniportDrivers]	"ati = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
ATI.SYS	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"ati = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
ATI.SYS	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayMiniportDrivers]	"ati = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
ATKCTRS.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ATALK]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
ATKCTRS.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
BHCTRL.CPL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
BHMON.DLL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
BHNETB.DLL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
BHNT.SYS	@bins	\		Bloodhound driver			@	\@	@\oemnsvbh.inf	[Files-DRIVERS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
BHP001.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=ATALK.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP001.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=ATALK.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP002.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=BONE.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP003.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=BROWSER.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP004.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=FRAME.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP005.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=IPX.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP005.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=IPX.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP006.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=LLC.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP006.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=LLC.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP007.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=MAC.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP007.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=MAC.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP008.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=MSRPC.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP008.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=MSRPC.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP009.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=NCP.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP010.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=NETBIOS.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP011.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=NETLOGON.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP012.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=PPP.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP012.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=PPP.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP013.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=SMB.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP013.HLP	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=SMB.HLP"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP014.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=SNMP.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP015.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=TCPIP.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP015.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=TCPIP.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP016.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=TRAIL.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP016.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=TRAIL.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP017.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=VINES.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP017.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=VINES.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP018.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=XNS.DLL"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHP018.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-PARSERS]	"[d],[n] , SIZE=[s], RENAME=XNS.INI"				999	2*15*10*17	2*15*17	.\system32\netmon\parsers		0
BHSUPP.DLL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
BOOT	@bins	\		dns samples	as		@	\@	@\oemnsvdn.inf	[Files-DNS-SAMPLE]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dns\samples		0
BRHJ770.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"brhj770 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
BROTHER9.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"brother9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
BROTHR24.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"brothr24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
BROWSER.DLL	@bins	\		browser service		x	@	\@	@\oemnsvwk.inf	[Files-WKSTA]	"[d], [n], SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
BUSLOGIC.SYS	@bins	\		buslogic scsi miniport driver		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"buslogic = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
BUSMOUSE.SYS	x86bins	\				x	x86	\i386	i386\pointer.inf	[Files-MousePortDrivers]	"busmouse = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
CACHE	@bins	\		dns samples	as		@	\@	@\oemnsvdn.inf	[Files-DNS-SAMPLE]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dns\samples		0
CANON330.DLL	@bins	\		Canon Bubble-Jet BJ-300		x	@	\@	@\printer.inf	[Files-PrinterData]	"canon330 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CANON800.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"canon800 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CANONLBP.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"canonlbp = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CG94_493.PPD	@bins	\		See printer.inf - Agfa-Compugraphic9400Pv49.3			@	\@	@\printer.inf	[Files-PrinterData]	"cg94_493 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CIRRUS.DLL	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayDLLs]	"cirrus = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
CIRRUS.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"cirrus = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
CIRRUS.SYS	mipsbins	\		nec duo built-in video		x	mips	\mips	mips\video.inf	[Files-DisplayMiniportDrivers]	"cirrus = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
CIRRUS.SYS	ppcbins	\		super vga		x	ppc	\ppc	ppc\video.inf	[Files-DisplayMiniportDrivers]	"cirrus = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
CIRRUS.SYS	x86bins	\		super vga		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"cirrus = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
CIT24US.DLL	@bins	\		Citizen GSX-130		x	@	\@	@\printer.inf	[Files-PrinterData]	"cit24us = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CIT9US.DLL	@bins	\		Citizen 120D		x	@	\@	@\printer.inf	[Files-PrinterData]	"cit9us = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CITOH.DLL	@bins	\		AT&T 470/475		x	@	\@	@\printer.inf	[Files-PrinterData]	"citoh = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CN_500_1.PPD	@bins	\		See printer.inf - CanonPS-IPUColorLaserCopierv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"cn_500_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CN_500J1.PPD	@bins	\		See printer.inf - CanonPS-IPUKanjiColorLaserCopierv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"cn_500j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CNLBP4_1.PPD	@bins	\		See printer.inf - CanonLBP-4PS-2v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"cnlbp4_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CNLBP8_1.PPD	@bins	\		See printer.inf - CanonLBP-8IIIPS-1v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"cnlbp8_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CNLBP8R1.PPD	@bins	\		See printer.inf - CanonLBP-8IIIRPS-1v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"cnlbp8r1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CNLBP8T1.PPD	@bins	\		See printer.inf - CanonLBP-8IIITPS-1v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"cnlbp8t1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
COLORQ.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"colorq = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
CPPMQ151.PPD	@bins	\		See printer.inf - COMPAQPAGEMARQ15v2012.015			@	\@	@\printer.inf	[Files-PrinterData]	"cppmq151 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CPPMQ201.PPD	@bins	\		See printer.inf - COMPAQPAGEMARQ20v2012.015			@	\@	@\printer.inf	[Files-PrinterData]	"cppmq201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
CPQARRAY.SYS	@bins	\		ida controller driver		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"cpqarray = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
CS4231.DLL	ppcbins	\		Crystal Semiconductor Sound Chip driver		x	ppc	\ppc	ppc\mmdriver.inf	[Installable.Drivers]	"CS4231 = [d]:[n], ""wave,aux,mixer"", ""IBM Power Series Business Audio"",,,"				999	2*15*10*17	2*15*17	.\system32		0
CS4231.SYS	ppcbins	\		Crystal Semiconductor Sound Chip driver		x	ppc	\ppc	ppc\mmdriver.inf	[CS4231]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
CTL3D32.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-SYSTOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
CXBIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoardCX-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
CXBIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-StarGateClusStar-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
CXFEP.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoardCX-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
CXFEP.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-StarGateClusStar-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DAC960NT.SYS	@bins	\		mylex array miniport		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"dac960nt = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
DATAP462.PPD	@bins	\		See printer.inf - DataproductsLZR-2665v46.2			@	\@	@\printer.inf	[Files-PrinterData]	"datap462 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DC1152_1.PPD	@bins	\		See printer.inf - DigitalDEClaser1152(17fonts)v2011.113			@	\@	@\printer.inf	[Files-PrinterData]	"dc1152_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DC1152F1.PPD	@bins	\		See printer.inf - DigitalDEClaser1152(43fonts)v2011.113			@	\@	@\printer.inf	[Files-PrinterData]	"dc1152f1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DC2150P1.PPD	@bins	\		See printer.inf - DigitalDEClaser2150plusv51.4			@	\@	@\printer.inf	[Files-PrinterData]	"dc2150p1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DC21X4.HLP	@bins	\		DC21x4 hlp file			@	\@	@\oemnaddt.inf	[Files-Hlp]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DC21040]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DC21041]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DC21140]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DE434]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DE435]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DE436]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-MULTIA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC21X4.SYS	@bins	\		dec pci driver		x	@	\@	@\oemnaddt.inf	[Files-DE425]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DC2250P1.PPD	@bins	\		See printer.inf - DigitalDEClaser2250plusv51.4			@	\@	@\printer.inf	[Files-PrinterData]	"dc2250p1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DC3500_1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"dc3500_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DC5100N1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"dc5100n1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCD11501.PPD	@bins	\		See printer.inf - DigitalDEClaser1150v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"dcd11501 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCD21501.PPD	@bins	\		See printer.inf - DigitalDEClaser2150v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"dcd21501 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCD22501.PPD	@bins	\		See printer.inf - DigitalDEClaser2250v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"dcd22501 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCKPS201.PPD	@bins	\		See printer.inf - DEC Kanji Printer			@	\@	@\printer.inf	[Files-PrinterData]	"dckps201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCKPS321.PPD	@bins	\		See printer.inf - DEC Kanji Printer			@	\@	@\printer.inf	[Files-PrinterData]	"dckps321 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCKPS401.PPD	@bins	\		See printer.inf - DEC Kanji Printer			@	\@	@\printer.inf	[Files-PrinterData]	"dckps401 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCLF02_1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"dclf02_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
DCLF02F1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"dclf02f1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
DCLN03R1.PPD	@bins	\		See printer.inf - DigitalLN03RScriptPrinterv47.2			@	\@	@\printer.inf	[Files-PrinterData]	"dcln03r1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCLPS171.PPD	@bins	\		See printer.inf - DigitalPrintServer17v48.3			@	\@	@\printer.inf	[Files-PrinterData]	"dclps171 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCLPS201.PPD	@bins	\		See printer.inf - DigitalPrintServer20v48.3			@	\@	@\printer.inf	[Files-PrinterData]	"dclps201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCLPS321.PPD	@bins	\		See printer.inf - DigitalPrintServer32v48.3			@	\@	@\printer.inf	[Files-PrinterData]	"dclps321 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCLPS401.PPD	@bins	\		See printer.inf - DigitalPrintServer40Plusv48.3			@	\@	@\printer.inf	[Files-PrinterData]	"dclps401 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCPS1721.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"dcps1721 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCPS1761.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"dcps1761 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DCTPS201.PPD	@bins	\		See printer.inf - DigitalturboPrintServer20v48.3			@	\@	@\printer.inf	[Files-PrinterData]	"dctps201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DEC24PIN.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"dec24pin = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DEC3200.DLL	@bins	\		"Digital DEClaser 1100, 2100, 2200, 3200"		x	@	\@	@\printer.inf	[Files-PrinterData]	"dec3200 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DEC3250.PPD	@bins	\		See printer.inf - DigitalDEClaser3250v47.0			@	\@	@\printer.inf	[Files-PrinterData]	"dec3250 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DEC9PIN.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"dec9pin = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DECCOLOR.PPD	@bins	\		See printer.inf - DigitalColormatePSv51.9			@	\@	@\printer.inf	[Files-PrinterData]	"deccolor = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DECPSMON.DLL	@bins	\		decpsmon		x	@	\@	@\monitor.inf	[Files-PrinterMonitor]	"decpsmon = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
DECPSMON.HLP	@bins	\		decpsmon			@	\@	@\monitor.inf	[Files-PrinterMonitorHelp]	"decpsmon = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
DEFAULT.ADR	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
DEFAULT.CF	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-CAPTURES]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon\captures		0
DEFAULT.DF	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-CAPTURES]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon\captures		0
DEFEA.SYS	@bins	\		NET NDIS driver: DEC EISA 300		x	@	\@	@\oemnadd3.inf	[Files-DEC300]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DEFPA.SYS	@bins	\		NET NDIS driver: DEC PCI 300		x	@	\@	@\oemnaddf.inf	[Files-DEFPA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DELL_DGX.SYS	x86bins	\		"Dell ""jaws"" video driver, DGX"		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"dell_dgx = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
DELLDSA.SYS	@bins	\		dell drive array driver		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"delldsa = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
DFS.SYS	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFSDRV]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
RDR.SYS	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFSDRV]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SRV.SYS	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFSDRV]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DFSINIT.EXE	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DFSSVC.EXE	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
SRVSVC.DLL	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DFSADMIN.DLL	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DFSPROV.DLL	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DFSSETUP.DLL	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DFSADMIN.EXE	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DFSUI.DLL	@bins	\		Distributed File System Driver		x	@	\@	@\oemnsvdf.inf	[Files-DFS]	"[d],[n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DGCONFIG.CNT	@bins	\		NET NDIS driver: Digiboard serial driver help file			@	\@	@\oemnadds.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
DGCONFIG.DLL	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
DGCONFIG.HLP	@bins	\		NET NDIS driver: Digiboard serial driver help file			@	\@	@\oemnadds.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
DHCPADMN.CNT	@bins	\		DHCP Admin UI	as		@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DHCPADMN.EXE	@bins	\		DHCP Admin UI	as	x	@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DHCPADMN.HLP	@bins	\		DHCP Admin UI	as		@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DHCPCSVC.DLL	@bins	\		part of DHCP		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DHCPMIB.DLL	@bins	\		part of DHCP	as	x	@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DHCPSAPI.DLL	@bins	\		part of DHCP		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DHCPSSVC.DLL	@bins	\		part of DHCP	as	x	@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DICONIX.DLL	@bins	\		Diconix 150 Plus		x	@	\@	@\printer.inf	[Files-PrinterData]	"diconix = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DIGIFEP5.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiFEP5]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DIGIINST.DLL	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-Dll]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DLC.SYS	@bins	\		DLC driver		x	@	\@	@\oemnxpdl.inf	[Files-DLC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DLCAPI.DLL	@bins	\		DLC interface		x	@	\@	@\oemnxpdl.inf	[Files-DLCAPI]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		15
DLTTAPE.SYS	@bins	\		degitial TZ86 and DLT2000		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"dlttape = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
DNSREAD.TXT	@bins	\		dns samples	as		@	\@	@\oemnsvdn.inf	[Files-DNS-SAMPLE]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dns\samples		0
DNSSVC.DLL	@bins	\		DNS 	as		@	\@	@\oemnsvdn.inf	[Files-DNS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
DP_US470.PPD	@bins	\		See printer.inf - DataproductsLZR1260v47.0			@	\@	@\printer.inf	[Files-PrinterData]	"dp_us470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DP4TY161.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"DP4TY161 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DP4TY201.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"DP4TY201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DP4TYP81.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"DP4TYP81 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DPL15601.PPD	@bins	\		See printer.inf - DataproductsLZR1560v2010.127			@	\@	@\printer.inf	[Files-PrinterData]	"dpl15601 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DPL15804.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"DPL15804 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DPL20804.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"DPL20804 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DPLZ9601.PPD	@bins	\		See printer.inf - DataproductsLZR960v2010.106			@	\@	@\printer.inf	[Files-PrinterData]	"dplz9601 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
DPTSCSI.SYS	@bins	\		"BOTH, DISK: EISA ""DPT"" controller"		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"dptscsi = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
EE16.SYS	@bins	\		NET NDIS driver: Etherlink-II card		x	@	\@	@\oemnadin.inf	[Files-EE16]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
EE16.SYS	x86bins	\		intel ee 16 mca		x	x86	\i386	i386\oemnadim.inf	[Files-EE16MC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK16.SYS	mipsbins	\		NET NDIS driver: Etherlink-16 card		x	mips	\mips	mips\oemnade1.inf	[Files-Elnk16]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK16.SYS	ppcbins	\		NET NDIS driver: Etherlink-16 card		x	ppc	\ppc	ppc\oemnade1.inf	[Files-Elnk16]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK16.SYS	x86bins	\		NET NDIS driver: Etherlink-16 card		x	x86	\i386	i386\oemnade1.inf	[Files-Elnk16]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK3.SYS	@bins	\		NET NDIS driver: Etherlink-III card		x	@	\@	@\oemnade3.inf	[Files-ELNK3PCMCIA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK3.SYS	@bins	\		NET NDIS driver: Etherlink-III card		x	@	\@	@\oemnade3.inf	[Files-ELNK3ISA509]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK3.SYS	@bins	\		NET NDIS driver: Etherlink-III card		x	@	\@	@\oemnadee.inf	[Files-ELNK3EISA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNK3.SYS	x86bins	\		NET NDIS driver: Etherlink-III card		x	x86	\i386	i386\oemnaden.inf	[Files-ELNK3MCA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNKII.SYS	@bins	\		NET NDIS driver: Etherlink-II card		x	@	\@	@\oemnade2.inf	[Files-ElnkII]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ELNKMC.SYS	x86bins	\		"NET NDIS driver: Etherlink-MC card, Etherlink MCA driver"		x	x86	\i386	i386\oemnadem.inf	[Files-ElnkMC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
EP826051.PPD	@bins	\		See printer.inf - EPSONPostScriptCARDv52.5			@	\@	@\printer.inf	[Files-PrinterData]	"ep826051 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
EPL3KF21.PPD	@bins	\		See printer.inf - EPSONLP-3000PSF2v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"epl3kf21 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
EPL3KF51.PPD	@bins	\		See printer.inf - EPSONLP-3000PSF5v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"epl3kf51 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
EPL75523.PPD	@bins	\		See printer.inf - EPSONEPL-7500v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"epl75523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
EPSON24.DLL	@bins	\		Epson L-1000		x	@	\@	@\printer.inf	[Files-PrinterData]	"epson24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
EPSON9.DLL	@bins	\		Epson DFX-5000		x	@	\@	@\printer.inf	[Files-PrinterData]	"epson9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
ESCP2E.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"escp2e = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
ESCP2MS.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"escp2ms = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
ET4000.SYS	x86bins	\		super vga		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"et4000 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
EXABYTE1.SYS	@bins	\		8200 series (SCSI-1)		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"exabyte1 = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
EXABYTE2.SYS	@bins	\		8500 series (SCSI-2)		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"exabyte2 = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
F71RX503.PPD	@bins	\		See printer.inf - FujitsuRX7100PSv50.3			@	\@	@\printer.inf	[Files-PrinterData]	"f71rx503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
FD16_700.SYS	@bins	\		"BOTH, SCSI miniport driver for the Future Domain 16-bit series cards.  May be required for boot."		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"fd16_700 = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
FILTER.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
FINGER.EXE	@bins	\				x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		15
FRAMEBUF.DLL	@bins	\		jazz display		x	@	\@	@\video.inf	[Files-DisplayDLLs]	"framebuf = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
FRIENDLY.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
FTP.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPCTRS.DLL	@bins	\		ftp perfmon stuff		x	@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPMGR.CPL	@bins	\		ftp server		x	@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPSMX.CNT	@bins	\		ftp server help	as		@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPSMX.DLL	@bins	\		ftp server	as	x	@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPSMX.HLP	@bins	\		ftp server help	as		@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPSVAPI.DLL	@bins	\		ftp server		x	@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FTPSVC.DLL	@bins	\		ftp perfmon stuff		x	@	\@	@\oemnsvft.inf	[Files-FTPD]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
FUJI24.DLL	@bins	\		Fujitsu DL 2400		x	@	\@	@\printer.inf	[Files-PrinterData]	"fuji24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
FUJI9.DLL	@bins	\		Fujitsu DX 2100		x	@	\@	@\printer.inf	[Files-PrinterData]	"fuji9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
FXBIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoardEPC-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
FXFEP.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoardEPC-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
GCBL4921.PPD	@bins	\		See printer.inf - GCCBusinessLaserPrinterv49.2			@	\@	@\printer.inf	[Files-PrinterData]	"gcbl4921 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCBL5141.PPD	@bins	\		See printer.inf - GCCBusinessLaserPrinterv51.4			@	\@	@\printer.inf	[Files-PrinterData]	"gcbl5141 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCBLP2_1.PPD	@bins	\		See printer.inf - GCCBLPIIv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"gcblp2_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCBLP2S1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"gcblp2s1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCBLPEL1.PPD	@bins	\		See printer.inf - GCCBLPElitev52.3			@	\@	@\printer.inf	[Files-PrinterData]	"gcblpel1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCCTONE2.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"GCCTONE2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCELT6_2.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"GCELT6_2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCSP12_3.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"GCSP12_3 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GCSP6_3.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"GCSP6_3 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
GDGL8001.PPD	@bins	\		See printer.inf - GestetnerGLP800-Scoutv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"gdgl8001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HERMES_1.PPD	@bins	\		See printer.inf - HermesH606PS(13Fonts)			@	\@	@\printer.inf	[Files-PrinterData]	"hermes_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HERMES_2.PPD	@bins	\		See printer.inf - HermesH606PS(35fonts)			@	\@	@\printer.inf	[Files-PrinterData]	"hermes_2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HEXEDIT.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
HOSTNAME.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		15
HOSTS.SHP	@bins	\		"Sockets database file, should ship template"			@	\@	@\oemnxptc.inf	[Files-ETC]	"[d],[n] , SIZE=[s]"			xfloppy	120	2*15*10*17	2*15*17	.\system32\drivers\etc	HOSTS	0
HOSTS.SHP	@bins	\		"Sockets database file, should ship template"			@	\@	@\oemnxptc.inf	[Files-ETC-Upgrade]	"[d],[n] , SIZE=[s], RENAME=HOSTS.SAM"			xfloppy	120	2*15*10*17	2*15*17	.\system32\drivers\etc	HOSTS	0
HP__CLJ1.PPD	@bins	\		HP Color LaserJet PS			@	\@	@\printer.inf	[Files-PrinterData]	"hp__clj1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP_3D522.PPD	@bins	\		See printer.inf - HPLaserJetIIIDPostScriptCartridgev52.2			@	\@	@\printer.inf	[Files-PrinterData]	"hp_3d522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP_3P522.PPD	@bins	\		See printer.inf - HPLaserJetIIIPPostScriptCartridgev52.2			@	\@	@\printer.inf	[Files-PrinterData]	"hp_3p522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP_650C1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"hp_650c1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
HP1200C1.PPD	@bins	\		HP DeskJet 1200C/PS			@	\@	@\printer.inf	[Files-PrinterData]	"hp1200c1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP20022.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp20022 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP20036.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp20036 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP3SI523.PPD	@bins	\		See printer.inf - HPLaserJetIIISiPostScriptv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"hp3si523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP4M3_V1.PPD	@bins	\		HP LaserJet 4/4M PS 300 dpi			@	\@	@\printer.inf	[Files-PrinterData]	"hp4m3_v1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP4M6_V1.PPD	@bins	\		HP LaserJet 4/4M PS 600 dpi			@	\@	@\printer.inf	[Files-PrinterData]	"hp4m6_v1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		5
HP4ML_V1.PPD	@bins	\		HP LaserJet 4L/4ML PostScript			@	\@	@\printer.inf	[Files-PrinterData]	"hp4ml_v1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP4MP3_1.PPD	@bins	\		HP LaserJet 4P/4MP PS 300 dpi			@	\@	@\printer.inf	[Files-PrinterData]	"hp4mp3_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP4MP6_1.PPD	@bins	\		HP LaserJet 4P/4MP PS 600 dpi			@	\@	@\printer.inf	[Files-PrinterData]	"hp4mp6_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP4PLUS3.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"HP4PLUS3 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP4PLUS6.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"HP4PLUS6 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP4SI3_1.PPD	@bins	\		HP LaserJet 4Si/4SiMX PS 300dpi			@	\@	@\printer.inf	[Files-PrinterData]	"hp4si3_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP4SI6_1.PPD	@bins	\		HP LaserJet 4Si/4SiMX PS 600dpi			@	\@	@\printer.inf	[Files-PrinterData]	"hp4si6_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP60022.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp60022 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP60036.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp60036 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP650C22.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp650c22 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP650C36.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp650c36 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HP7550PL.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hp7550pl = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPDESIGN.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hpdesign = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPDMRXMX.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hpdmrxmx = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPDMSX.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hpdmsx = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPDPP22.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hpdpp22 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPDPP36.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hpdpp36 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPDSKJET.DLL	@bins	\		HP DeskJet 500		x	@	\@	@\printer.inf	[Files-PrinterData]	"hpdskjet = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPELI522.PPD	@bins	\		See printer.inf - HPLaserJetELIPostScriptv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"hpeli522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPGL2PEN.PCD	@bins	\		HP			@	\@	@\printer.inf	[Files-PrinterData]	"hpgl2pen = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPIID522.PPD	@bins	\		See printer.inf - HPLaserJetIIDPostScriptCartridgev52.2			@	\@	@\printer.inf	[Files-PrinterData]	"hpiid522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPIII522.PPD	@bins	\		See printer.inf - HPLaserJetIIIPostScriptCartridgev52.2			@	\@	@\printer.inf	[Files-PrinterData]	"hpiii522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPIIP522.PPD	@bins	\		See printer.inf - HPLaserJetIIPPostScriptCartridgev52.2			@	\@	@\printer.inf	[Files-PrinterData]	"hpiip522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPLJ_31.PPD	@bins	\		See printer.inf - HPLaserJetIIIPostScriptPlusv2010.118			@	\@	@\printer.inf	[Files-PrinterData]	"hplj_31 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPLJ_3D1.PPD	@bins	\		See printer.inf - HPLaserJetIIIDPostScriptPlusv2010.118			@	\@	@\printer.inf	[Files-PrinterData]	"hplj_3d1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPLJ_3P1.PPD	@bins	\		See printer.inf - HPLaserJetIIIPPostScriptPlusv2010.118			@	\@	@\printer.inf	[Files-PrinterData]	"hplj_3p1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPLJ4MV1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"hplj4mv1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPLJ5P_1.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"HPLJ5P_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPMON.DLL	@bins	\		hpmon		x	@	\@	@\monitor.inf	[Files-PrinterMonitor]	"hpmon = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
HPMON.DLL	@bins	\		HP LaserJet IIIsi support.  probably not in Beta 1 but in Beta 2.		x	@	\@	@\oemnxpdl.inf	[Files-DLCAPI]	"[d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
HPMON.HLP	@bins	\		hpmon			@	\@	@\monitor.inf	[Files-PrinterMonitorHelp]	"hpmon = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
HPMON.HLP	@bins	\					@	\@	@\oemnxpdl.inf	[Files-DLCAPI]	"[d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
HPPCL.DLL	@bins	\		Agfa Compugraphic Genics		x	@	\@	@\printer.inf	[Files-PrinterData]	"hppcl = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPPCL5MS.DLL	@bins	\		HP LaserJet 4		x	@	\@	@\printer.inf	[Files-PrinterData]	"hppcl5ms = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
HPPJXL31.PPD	@bins	\		See printer.inf - HPPaintJetXL300v2011.112			@	\@	@\printer.inf	[Files-PrinterData]	"hppjxl31 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
I8042PRT.SYS	@bins	\		Keyboard and PS/2 mouse port driver		x	@	\@	@\keyboard.inf	[Files-KeyboardPortDrivers]	"i8042prt = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
I8042PRT.SYS	@bins	\		Keyboard and PS/2 mouse port driver		x	@	\@	@\pointer.inf	[Files-MousePortDrivers]	"i8042prt = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
IBM17523.PPD	@bins	\		See printer.inf - IBM401917fontsv52.3or52.1			@	\@	@\printer.inf	[Files-PrinterData]	"ibm17523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM20470.PPD	@bins	\		See printer.inf - IBM4216-020v47.0			@	\@	@\printer.inf	[Files-PrinterData]	"ibm20470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM238X.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"ibm238x = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM239X.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"ibm239x = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM30505.PPD	@bins	\		See printer.inf - IBM4216-030v50.5			@	\@	@\printer.inf	[Files-PrinterData]	"ibm30505 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM31514.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"ibm31514 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM39523.PPD	@bins	\		See printer.inf - IBM401939fontsv52.3or52.1			@	\@	@\printer.inf	[Files-PrinterData]	"ibm39523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM4039.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"ibm4039 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM4039P.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"ibm4039p = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
IBM4079.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"ibm4079 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBM5204.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"ibm5204 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBMPORT.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"ibmport = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBMPPDSL.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"ibmppdsl = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
IBMTOK.SYS	@bins	\		NET NDIS driver: IBM Token-Ring card		x	@	\@	@\oemnadtk.inf	[Files-IBMTok]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
IBMTOK.SYS	x86bins	\		NET NDIS driver: IBM Token-Ring card		x	x86	\i386	i386\oemnadtm.inf	[Files-IBMTOKMC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
IBMTOK2I.SYS	@bins	\		NET NDIS driver: IBM Token-Ring card		x	@	\@	@\oemnadt2.inf	[Files-IBMTOK2ISA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
ICCVID.DLL	@bins	\		multimedia			@	\@	@\mmdriver.inf	[Installable.Drivers]	"VIDC.CVID = [d]:[n], ""VIDC.CVID"", ""Cinepak Codec by Radius Inc."",,"				999	2*15*10*17	2*15*17	.\system32		0
ICMP.DLL	@bins	\		icmp		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
IDP_XFS.BIN	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-PCIMAC4-firmware]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
IDP_XFS.BIN	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-PCIMACISA-firmware]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
IDP_XFS.BIN	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-PCIMACMC-firmware]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
IEEPRO.SYS	@bins	\		NET NDIS driver: Etherlink-III card		x	@	\@	@\oemnadep.inf	[Files-IEEPRO]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
IMAADP32.ACM	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"imaadpcm = [d]:[n],""MSACM.imaadpcm"", ""IMA ADPCM  Audio CODEC"",,"				999	2*15*10*17	2*15*17	.\system32		0
INETMIB1.DLL	@bins	\		part of snmp component		x	@	\@	@\oemnxps1.inf	[Files-SNMP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
INETMIB1.DLL	@bins	\		part of snmp component		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
INPORT.SYS	x86bins	\		In-Port mouse port driver		x	x86	\i386	i386\pointer.inf	[Files-MousePortDrivers]	"inport = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
IPADRDLL.DLL	@bins	\		DHCP Admin UI	as	x	@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
IPADRDLL.DLL	@bins	\		wins	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
IPCONFIG.EXE	@bins	\		ipconfig.exe		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
IPINFOR.INF	@bins	\		Default IP address			@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"			xfloppy	120	2*15*10*17	2*15*17	.\system32	IPINFO.INF	0
IPRIP.DLL	@bins	\		IPRIP	as	x	@	\@	@\oemnsvir.inf	[Files-IPRIP]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
IPRIP.DLL	@bins	\		IPRIP	as	x	@	\@	@\oemnsvbr.inf	[Files-RelayAgent]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
IPXROUTE.EXE	@bins	\		IPX		x	@	\@	@\oemnxpip.inf	[Files-NWLNKEXE]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
IR32_32.DLL	@bins	\		indeo codec			@	\@	@\mmdriver.inf	[Installable.Drivers]	"Indeo = [d]:[n], ""VIDC.IV32, VIDC.IV31"", ""Indeo codec by Intel"",,"				999	2*15*10*17	2*15*17	.\system32		0
ISDNHELP.CNT	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-common-system32]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
ISDNHELP.HLP	@bins	\		NET NDIS driver: DIGIBoard ISDN			@	\@	@\oemnaddi.inf	[Files-common-system32]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
JAZZG300.SYS	mipsbins	\		jazz display		x	mips	\mips	mips\video.inf	[Files-DisplayMiniportDrivers]	"jazzg300 = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
JAZZG364.SYS	mipsbins	\		jazz display		x	mips	\mips	mips\video.inf	[Files-DisplayMiniportDrivers]	"jazzg364 = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
JETPACK.EXE	@bins	\		DHCP Admin UI	as	x	@	\@	@\oemnsvdh.inf	[Files-DHCP]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
JETPACK.EXE	@bins	\		wins	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32		0
JP350.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"jp350 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
JX9460PS.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"jx9460ps = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
JX9500PS.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"jx9500ps = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
JX9600PS.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"jx9600ps = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
JX9660PS.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"jx9660ps = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
JX9700PS.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"jx9700ps = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
JZVXL484.DLL	mipsbins	\		video driver		x	mips	\mips	mips\video.inf	[Files-DisplayDLLs]	"jzvxl484 = [d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		2
JZVXL484.SYS	mipsbins	\		video driver		x	mips	\mips	mips\video.inf	[Files-DisplayMiniportDrivers]	"jzvxl484 = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
KBDCLASS.SYS	@bins	\		Keyboard class driver		x	@	\@	@\keyboard.inf	[Files-KeyboardClassDrivers]	"kbdclass = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
KD8600P1.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"KD8600P1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
KDCOLOR1.PPD	@bins	\		Kodak ColorEase PS Printer			@	\@	@\printer.inf	[Files-PrinterData]	"kdcolor1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
KYOCERA.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"kyocera = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L100_425.PPD	@bins	\		See printer.inf - Linotronic100v42.5			@	\@	@\printer.inf	[Files-PrinterData]	"l100_425 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L200_471.PPD	@bins	\		See printer.inf - Linotronic200v47.1			@	\@	@\printer.inf	[Files-PrinterData]	"l200_471 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L200_493.PPD	@bins	\		See printer.inf - Linotronic200v49.3			@	\@	@\printer.inf	[Files-PrinterData]	"l200_493 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L200230.PPD	@bins	\		See printer.inf - Linotronic200/230			@	\@	@\printer.inf	[Files-PrinterData]	"l200230 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L300_471.PPD	@bins	\		See printer.inf - Linotronic300v47.1			@	\@	@\printer.inf	[Files-PrinterData]	"l300_471 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L300_493.PPD	@bins	\		See printer.inf - Linotronic300v49.3			@	\@	@\printer.inf	[Files-PrinterData]	"l300_493 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L330_523.PPD	@bins	\		See printer.inf - Linotronic330v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"l330_523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L3330523.PPD	@bins	\		See printer.inf - Linotronic330-RIP30v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"l3330523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L500_493.PPD	@bins	\		See printer.inf - Linotronic500v49.3			@	\@	@\printer.inf	[Files-PrinterData]	"l500_493 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L530_523.PPD	@bins	\		See printer.inf - Linotronic530v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"l530_523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
L5330523.PPD	@bins	\		See printer.inf - Linotronic530-RIP30v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"l5330523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
LANCE.SYS	@bins	\		"NET NDIS driver: DEC 1/21 card, Lance driver for all lance chips"		x	@	\@	@\oemnadd1.inf	[Files-DEC100]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
LANCE.SYS	@bins	\		"NET NDIS driver: DEC 1/21 card, Lance driver for all lance chips"		x	@	\@	@\oemnadd1.inf	[Files-DEC101]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
LANCE.SYS	@bins	\		"NET NDIS driver: DEC 1/21 card, Lance driver for all lance chips"		x	@	\@	@\oemnadd2.inf	[Files-DECETHERWORKSTURBO]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
LANCE.SYS	@bins	\		"NET NDIS driver: DEC 1/21 card, Lance driver for all lance chips"		x	@	\@	@\oemnadd4.inf	[Files-DEC422]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
LANCE.SYS	@bins	\		"NET NDIS driver: DEC 1/21 card, Lance driver for all lance chips"		x	@	\@	@\oemnadde.inf	[Files-DECSTAT]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
LEX4039P.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"lex4039p = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
LEXOPTRA.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"lexoptra = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
LH_630_1.PPD	@bins	\		See printer.inf - LaserWriterPersonalNTv51.8			@	\@	@\printer.inf	[Files-PrinterData]	"lh_630_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
LH830__1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"lh830__1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
LH930__1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"lh930__1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
LHPR60_1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"lhpr60_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
LMHOSTS.SAM	@bins	\		"Sockets database file, should ship template"			@	\@	@\oemnxptc.inf	[Files-LMHOST]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
LMHOSTS.SAM	x86bins	\		"Sockets database file, should ship template"			x86	\i386	i386\oemnxptc.inf	[Files-LMHOSTOTHER]	"99,[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
LMHSVC.DLL	@bins	\		part of LmHost service		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
LMMIB2.DLL	@bins	\		"part of snmp component, lanman mib"		x	@	\@	@\oemnxps1.inf	[Files-SNMP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LMMIB2.DLL	@bins	\		"part of snmp component, lanman mib"		x	@	\@	@\oemnsvsn.inf	[Files-SNMP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LMREPL.EXE	@bins	\		replicator service		x	@	\@	@\oemnsvwk.inf	[Files-WKSTA]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
LOCALMON.DLL	@bins	\		localmon		x	@	\@	@\monitor.inf	[Files-PrinterMonitor]	"localmon = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32		0
LOCATOR.EXE	@bins	\		rpc		x	@	\@	@\oemnsvrp.inf	[Files-RPCLOCATE]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LOOP.SYS	@bins	\		NET NDIS driver: MS Loop Back		x	@	\@	@\oemnadlb.inf	[Files-LOOP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
LPDSVC.DLL	@bins	\		TCPIP Printing		x	@	\@	@\oemnsvtp.inf	[Files-TCPPRINT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LPQ.EXE	@bins	\		TCPIP Printing		x	@	\@	@\oemnsvtp.inf	[Files-TCPPRINT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LPR.EXE	@bins	\		TCPIP Printing		x	@	\@	@\oemnsvtp.inf	[Files-TCPPRINT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LPRHELP.DLL	@bins	\		TCPIP Printing		x	@	\@	@\oemnsvtp.inf	[Files-TCPPRINT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LPRMON.DLL	@bins	\		TCPIP Printing		x	@	\@	@\oemnsvtp.inf	[Files-TCPPRINT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
LT200.SYS	@bins	\		mac services		x	@	\@	@\oemnadlm.inf	[Files-LT200]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32\drivers		0
LT200.SYS	@bins	\		mac services		x	@	\@	@\oemnadlt.inf	[Files-LT200]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32\drivers		0
LWNT_470.PPD	@bins	\		See printer.inf - AppleLaserWriterIINTv47.0			@	\@	@\printer.inf	[Files-PrinterData]	"lwnt_470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
LWNTX470.PPD	@bins	\		See printer.inf - AppleLaserWriterIINTXv47.0			@	\@	@\printer.inf	[Files-PrinterData]	"lwntx470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
LWNTX518.PPD	@bins	\		See printer.inf - AppleLaserWriterIINTXv51.8			@	\@	@\printer.inf	[Files-PrinterData]	"lwntx518 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MACFILE.EXE	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
MANTAL24.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"mantal24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MANTAL90.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"mantal90 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MCIAVI32.DLL	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"mciavi = [d]:[n], ""AVIVideo"", ""(MCI) Microsoft Video for Windows"",,,msvidc"				999	2*15*10*17	2*15*17	.\system32		0
MCICDA.DLL	@bins	\				x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"cdaudio = [d]:[n], ""CDAudio"", ""(MCI) CD Audio"",,"				999	2*15*10*17	2*15*17	.\system32		0
MCISEQ.DLL	@bins	\				x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"sequencer = [d]:[n], ""Sequencer"", ""(MCI) Midi Sequencer"",,"				999	2*15*10*17	2*15*17	.\system32		0
MCIWAVE.DLL	@bins	\				x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"wave = [d]:[n], ""WaveAudio"", ""(MCI) Sound"",, ""4"""				999	2*15*10*17	2*15*17	.\system32		0
MGA.DLL	alphabins	\		MGA video DLL for alpha		x	alpha	\alpha	alpha\video.inf	[Files-DisplayDLLs]	"mga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
MGA.DLL	x86bins	\		MGA video DLL for x86		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"mga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
MGA.DLL	ppcbins	\		MGA video DLL for ppc		x	ppc	\ppc	ppc\video.inf	[Files-DisplayDLLs]	"mga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
MGA.SYS	alphabins	\		MGA video miniport		x	alpha	\alpha	alpha\video.inf	[Files-DisplayMiniportDrivers]	"mga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
MGA.SYS	x86bins	\		MGA video miniport		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"mga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
MGA.SYS	ppcbins	\		MGA video miniport		x	ppc	\ppc	ppc\video.inf	[Files-DisplayMiniportDrivers]	"mga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
MGMTAPI.DLL	@bins	\		"part of snmp component, manager api dll"		x	@	\@	@\oemnsvsn.inf	[Files-SNMP]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
MIB.BIN	@bins	\		"part of snmp component, snmp service"			@	\@	@\oemnsvsn.inf	[Files-SNMP]	"[d], [n], SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
MIDIMAP.CFG	@bins	\		midi control panel applet			@	\@	@\mmdriver.inf	[midimapper]	[d]:[n]				999	2*13*10*17	2*13*17	.\system32		0
MIDIMAP.DLL	@bins	\		midi control panel		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"midimapper = [d]:[n], ""MidiMapper"", ""MIDI Mapper"",,"				999	2*15*10*17	2*15*17	.\system32		0
MINIQIC.SYS	@bins	\		exabyte 2501		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"miniqic = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
MIPSSND.SYS	mipsbins	\		MIPS ARCSystem 100/150 sound		x	mips	\mips	mips\mmdriver.inf	[Installable.Drivers]	"MIPS = [d]:[n], ""KERNEL"", ""MIPS ARCSystem 100/150 sound"" , , ,"				0	2*15*10*17	2*15*17	.\system32\drivers		2
MMDRV.DLL	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"mmdrv = [d]:[n], ""Wave,MIDI,Aux"", ""Low level Wave, MIDI and AUX support"""				0	2*15*10*17	2*15*17	.\system32		15
MODEM.INF	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Inf]	"modem = [d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32\ras		0
MOIM1201.PPD	@bins	\		See printer.inf - MonotypeImageMaster1200v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"moim1201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MONO_522.PPD	@bins	\		See printer.inf - MonotypeImagesetterv52.2			@	\@	@\printer.inf	[Files-PrinterData]	"mono_522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MOUCLASS.SYS	@bins	\				x	@	\@	@\pointer.inf	[Files-MouseClassDrivers]	"mouclass = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
MSACM.DLL	@bins	\		multimedia			@	\@	@\mmdriver.inf	[WaveMapper]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32		0
MSACM32.DLL	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[WaveMapper]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32		0
MSACM32.DRV	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"wavemapper = [d]:[n], ""WaveMapper"", ""Microsoft Audio Compression Manager"",,"				999	2*15*10*17	2*15*17	.\system32		0
MSADP32.ACM	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"msadpcm = [d]:[n],""MSACM.msadpcm"", ""Microsoft ADPCM Audio CODEC"",,"				999	2*15*10*17	2*15*17	.\system32		0
MSGSM32.ACM	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"msgsm610 = [d]:[n],""MSACM.msgsm610"", ""Microsoft GSM 6.10  Audio CODEC"",,"				999	2*15*10*17	2*15*17	.\system32		0
MSNCDET.DLL	@bins	\		network detection		x	@	\@	@\netdtect.inf	[Files-DLL-NCDETECT]	"[d], [n], SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
MSRLE32.DLL	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"VIDC.MRLE = [d]:[n], ""VIDC.MRLE"", ""Microsoft RLE Codec"",,"				999	2*15*10*17	2*15*17	.\system32		0
MSVFW32.DLL	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[mciavi]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32		0
MSVIDC32.DLL	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"msvidc = [d]:[n], ""VIDC.MSVC"", ""Microsoft Video 1"",,,"				999	2*15*10*17	2*15*17	.\system32		0
MT_TI101.PPD	@bins	\		See printer.inf - MicrotekTrueLaser			@	\@	@\printer.inf	[Files-PrinterData]	"mt_ti101 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MT735.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"mt735 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
MVAUDIO.DLL	@bins	\				x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"mvaudio = [d]:[n], ""wave,MIDI,aux,mixer"",""Media Vision ProAudio Spectrum 16"",,,"				999	2*15*10*17	2*15*17	.\system32		0
MVAUDIO.SYS	@bins	\				x	@	\@	@\mmdriver.inf	[mvaudio]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
N2090522.PPD	@bins	\		"See printer.inf - NECSilentwriter290v52.2,Silentwriter2Model90v52.2"			@	\@	@\printer.inf	[Files-PrinterData]	"n2090522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
N2290520.PPD	@bins	\		"See printer.inf - NECSilentwriter2290v52.0,Silentwriter2290v52.0"			@	\@	@\printer.inf	[Files-PrinterData]	"n2290520 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
N890_470.PPD	@bins	\		"See printer.inf - NECSilentwriterLC890v47.0,SilentwriterLC890v47.0"			@	\@	@\printer.inf	[Files-PrinterData]	"n890_470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
N890X505.PPD	@bins	\		"See printer.inf - NECSilentwriterLC890XLv50.5,SilentwriterLC890XLv50.5"			@	\@	@\printer.inf	[Files-PrinterData]	"n890x505 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NAL.DLL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NBF.SYS	@bins	\		NET Transport: Netbeui		x	@	\@	@\oemnxpnb.inf	[Files-NBF]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NBTSTAT.EXE	@bins	\		replace old nbtstat.exe		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NC95FAX1.PPD	@bins	\		See printer.inf - NECSilentwriter95v2011.111			@	\@	@\printer.inf	[Files-PrinterData]	"nc95fax1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NC97FAX1.PPD	@bins	\		See printer.inf - NECSilentwriter97v2011.111			@	\@	@\printer.inf	[Files-PrinterData]	"nc97fax1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NCCPS401.PPD	@bins	\		See printer.inf - NECColormatePS/40v51.9			@	\@	@\printer.inf	[Files-PrinterData]	"nccps401 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NCCPS801.PPD	@bins	\		See printer.inf - NECColormatePS/80v51.9			@	\@	@\printer.inf	[Files-PrinterData]	"nccps801 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NCOL_519.PPD	@bins	\		See printer.inf - ColormatePSv51.9			@	\@	@\printer.inf	[Files-PrinterData]	"ncol_519 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NCR53C9X.SYS	mipsbins	\		"MIPSONLY, SCSI: NCR disk driver"		x	mips	\mips	mips\scsi.inf	[Files-ScsiMiniportDrivers]	"ncr53c9x = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
NCR53C9X.SYS	x86bins	\		"BOTH, SCSI: NCR disk driver"		x	x86	\i386	i386\scsi.inf	[Files-ScsiMiniportDrivers]	"ncr53c9x = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
NCR77C22.SYS	x86bins	\				x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"ncr77c22 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
NCRC700.SYS	mipsbins	\				x	mips	\mips	mips\scsi.inf	[Files-ScsiMiniportDrivers]	"ncrc700 = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
NCRC700.SYS	x86bins	\				x	x86	\i386	i386\scsi.inf	[Files-ScsiMiniportDrivers]	"ncrc700 = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
NCRC710.SYS	mipsbins	\				x	mips	\mips	mips\scsi.inf	[Files-ScsiMiniportDrivers]	"ncrc710 = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
NCRC710.SYS	x86bins	\				x	x86	\i386	i386\scsi.inf	[Files-ScsiMiniportDrivers]	"ncrc710 = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
NCRC810.SYS	@bins	\				x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"ncrc810 = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
NCS29901.PPD	@bins	\		See printer.inf - NECSilentwriter2990v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"ncs29901 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NCSW_951.PPD	@bins	\		See printer.inf - NECSilentWriter95v2010.119			@	\@	@\printer.inf	[Files-PrinterData]	"ncsw_951 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NDIS30.DLL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NDISTAPI.SYS	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Drivers]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
NDISWAN.SYS	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Drivers]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
NE1000.SYS	alphabins	\		NET NDIS driver: NE1000 card		x	alpha	\alpha	alpha\oemnadn1.inf	[Files-NE1000]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32\drivers		2
NE1000.SYS	x86bins	\		NET NDIS driver: NE1000 card		x	x86	\i386	i386\oemnadn1.inf	[Files-NE1000]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE2000.SYS	@bins	\		net card driver for Novell NE2000.		x	@	\@	@\oemnadn2.inf	[Files-NE2000PCMCIA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE2000.SYS	@bins	\		net card driver for Novell NE2000.		x	@	\@	@\oemnadn2.inf	[Files-NE2000]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE2000.SYS	@bins	\		net card driver for Novell NE2000.		x	@	\@	@\oemnadn2.inf	[Files-NE2000SOCKETEA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE2000.SYS	@bins	\		net card driver for Novell NE2000.		x	@	\@	@\oemnadni.inf	[Files-NE2000IBMCOMPAT]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE2000.SYS	@bins	\		net card driver for Novell NE2000.		x	@	\@	@\oemnadnm.inf	[Files-NE2000MCA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE3200.BIN	@bins	\		"NDIS driver: NE32 card, Novell 32 Ethernet, possibly intel only"			@	\@	@\oemnadne.inf	[Files-NE3200]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NE3200.SYS	@bins	\		"NDIS driver: NE32 card, Novell 32 Ethernet, possibly intel only"		x	@	\@	@\oemnadne.inf	[Files-NE3200]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NEC24PIN.DLL	@bins	\		NEC Pinwriter CP6		x	@	\@	@\printer.inf	[Files-PrinterData]	"nec24pin = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
NETBIOS.SYS	@bins	\		"NET WkSta: NetBIOS 3. API driver, netbios kernel component"		x	@	\@	@\oemnsvnb.inf	[Files-NETBIOS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETBT.SYS	@bins	\		Netbt Driver		x	@	\@	@\oemnxptc.inf	[Files-TC]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers		0
NETDTECT.DLL	@bins	\		network detection		x	@	\@	@\netdtect.inf	[Files-DLL-NCDETECT]	"[d], [n], SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
NETDTECT.SYS	@bins	\		network detection		x	@	\@	@\netdtect.inf	[Files-NCDETECT]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.BIN	@bins	\		NET NDIS driver: COMPAQ			@	\@	@\oemnadnf.inf	[Files-DURANGO]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.BIN	@bins	\		NET NDIS driver: COMPAQ			@	\@	@\oemnadnf.inf	[Files-RODAN]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.BIN	@bins	\		NET NDIS driver: COMPAQ			@	\@	@\oemnadnf.inf	[Files-BONSAI]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.BIN	@bins	\		NET NDIS driver: COMPAQ			@	\@	@\oemnadnf.inf	[Files-CPQTOK]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.BIN	@bins	\		NET NDIS driver: COMPAQ			@	\@	@\oemnadnf.inf	[Files-NETFLX]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.DLL	@bins	\		NET NDIS driver: COMPAQ detection dll		x	@	\@	@\oemnadnf.inf	[Files-DLL]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
NETFLX.SYS	@bins	\		NET NDIS driver: COMPAQ		x	@	\@	@\oemnadnf.inf	[Files-DURANGO]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.SYS	@bins	\		NET NDIS driver: COMPAQ		x	@	\@	@\oemnadnf.inf	[Files-RODAN]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.SYS	@bins	\		NET NDIS driver: COMPAQ		x	@	\@	@\oemnadnf.inf	[Files-BONSAI]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.SYS	@bins	\		NET NDIS driver: COMPAQ		x	@	\@	@\oemnadnf.inf	[Files-CPQTOK]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETFLX.SYS	@bins	\		NET NDIS driver: COMPAQ		x	@	\@	@\oemnadnf.inf	[Files-NETFLX]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NETMON.EXE	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
NETMON.HLP	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
NETMON.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
NETSTAT.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NETWARE.DRV	@bins	\		netware			@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
NETWORKS	@bins	\		"Sockets database file, should ship template"			@	\@	@\oemnxptc.inf	[Files-ETC]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
NMAGENT.EXE	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NMAPI.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
NMGLOSS.HLP	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
NOBROAD.CF	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-CAPTURES]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon\captures		0
NOBROAD.DF	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-CAPTURES]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon\captures		0
NPEISA.SYS	@bins	\		NP driver		x	@	\@	@\oemnadnp.inf	[Files-NPEISA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NPMCA.SYS	x86bins	\		NP driver		x	x86	\i386	i386\oemnadfd.inf	[Files-NPMCA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTCX.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoardCX]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTCX.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-StarGateClusStar]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTEPC.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoardEPC]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard16e]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard16i]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard2Port]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard4e]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard4i]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard4Port]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard8e]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard8i]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXALL.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard8Port]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXEM.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoardXem]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXEM.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-DigiBoard8r]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NTXEM.SYS	@bins	\		NET NDIS driver: Digiboard serial driver		x	@	\@	@\oemnadds.inf	[Files-IBM8r]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NW16.EXE	@bins	\		NWCS File			@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWAPI16.DLL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWAPI32.DLL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-nwcfgdll]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWC.CPL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWDOC.CNT	@bins	\		NWCS File	nt		@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWDOC.HLP	@bins	\		NWCS File	nt		@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWDOCGW.CNT	@bins	\		NWCS File	as		@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s], RENAME=nwdoc.cnt"				999	2*15*10*17	2*15*17	.\system32		0
NWDOCGW.HLP	@bins	\		NWCS File	as		@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s], RENAME=nwdoc.hlp"				999	2*15*10*17	2*15*17	.\system32		0
NWEVENT.DLL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWLNKIPX.SYS	@bins	\		IPX		x	@	\@	@\oemnxpip.inf	[Files-NWLNKIPX]	"[d],[n] , SIZE=[s]"				137	2*15*10*17	2*15*17	.\system32\drivers		0
NWLNKNB.SYS	@bins	\		IPX		x	@	\@	@\oemnxpip.inf	[Files-NWLNKIPX]	"[d],[n] , SIZE=[s]"				137	2*15*10*17	2*15*17	.\system32\drivers		0
NWLNKRIP.SYS	@bins	\		NWLNKRIP		x	@	\@	@\oemnsvrr.inf	[Files-NWLNKRIP]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
NWLNKSPX.SYS	@bins	\		IPX		x	@	\@	@\oemnxpip.inf	[Files-NWLNKIPX]	"[d],[n] , SIZE=[s]"				137	2*15*10*17	2*15*17	.\system32\drivers		0
NWPROVAU.DLL	@bins	\		NWCS File		x	@	\@	@\oemnxpip.inf	[Files-NWLNKEXE]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWRDR.SYS	@bins	\		NWCS driver		x	@	\@	@\oemnsvnw.inf	[Files-Drivers]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
NWSAP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvsa.inf	[Files-SAP]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
NWSCRIPT.EXE	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
NWWKS.DLL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
O5241503.PPD	@bins	\		See printer.inf - OceColorG5241PS			@	\@	@\printer.inf	[Files-PrinterData]	"o5241503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
O5242503.PPD	@bins	\		See printer.inf - OceColorG5242PostScriptPrinterv50.3			@	\@	@\printer.inf	[Files-PrinterData]	"o5242503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OK_410E1.PPD	@bins	\		Oki 410 EL			@	\@	@\printer.inf	[Files-PrinterData]	"ok_410e1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
OK801PF1.PPD	@bins	\		See printer.inf - OKIMICROLINE801PS+Fv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"ok801pf1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OKI24.DLL	@bins	\		Okidata ML 380		x	@	\@	@\printer.inf	[Files-PrinterData]	"oki24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OKI9.DLL	@bins	\		Okidata ML 192 Plus		x	@	\@	@\printer.inf	[Files-PrinterData]	"oki9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OKI9IBM.DLL	@bins	\		ATT 473/478		x	@	\@	@\printer.inf	[Files-PrinterData]	"oki9ibm = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OKOL8501.PPD	@bins	\		Oki OL850-PS v52.5			@	\@	@\printer.inf	[Files-PrinterData]	"okol8501 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
OKOL8701.PPD	@bins	\		Oki OL870-PS v2013.108			@	\@	@\printer.inf	[Files-PrinterData]	"okol8701 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
OL830525.PPD	@bins	\		See printer.inf - OkiOL830-PSv52.5			@	\@	@\printer.inf	[Files-PrinterData]	"ol830525 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OL840518.PPD	@bins	\		See printer.inf - OkiOL840-PSv51.8			@	\@	@\printer.inf	[Files-PrinterData]	"ol840518 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OLIDM24.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"olidm24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OLIDM9.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"olidm9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OLISCSI.SYS	mipsbins	\		SCSI: Olivetti		x	mips	\mips	mips\scsi.inf	[Files-ScsiMiniportDrivers]	"oliscsi = [d],[n] , SIZE=[s]"			x	0	2*15*10*17	2*15*17	.\system32\drivers		2
OLISCSI.SYS	x86bins	\		SCSI: Olivetti disk driver		x	x86	\i386	i386\scsi.inf	[Files-ScsiMiniportDrivers]	"oliscsi = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
OLIV5000.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"oliv5000 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
OLIVETI1.PPD	@bins	\		See printer.inf - OlivettiPG306PS(13Fonts)			@	\@	@\printer.inf	[Files-PrinterData]	"oliveti1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
OLIVETI2.PPD	@bins	\		See printer.inf - OlivettiPG306PS(35Fonts)			@	\@	@\printer.inf	[Files-PrinterData]	"oliveti2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
P4455514.PPD	@bins	\		See printer.inf - PanasonicKX-P4455v51.4			@	\@	@\printer.inf	[Files-PrinterData]	"p4455514 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PAD.INF	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Inf]	"pad = [d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32\ras		0
PAINTJET.DLL	@bins	\		HP PaintJet XL		x	@	\@	@\printer.inf	[Files-PrinterData]	"paintjet = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PANSON24.DLL	@bins	\		Panasonic KX-P1123		x	@	\@	@\printer.inf	[Files-PrinterData]	"panson24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PANSON9.DLL	@bins	\		Panasonic KX-P1180		x	@	\@	@\printer.inf	[Files-PrinterData]	"panson9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PAP54001.PPD	@bins	\		Panasonic KX-P5400 v2013.112			@	\@	@\printer.inf	[Files-PrinterData]	"pap54001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
PAP54101.PPD	@bins	\		Panasonic KX-P5410 v2013.110			@	\@	@\printer.inf	[Files-PrinterData]	"pap54101 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
PARSER.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
PARSER.INI	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
PCIMAC.SYS	@bins	\		NET NDIS driver: DIGIBoard ISDN		x	@	\@	@\oemnaddi.inf	[Files-PCIMAC4]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PCIMAC.SYS	@bins	\		NET NDIS driver: DIGIBoard ISDN		x	@	\@	@\oemnaddi.inf	[Files-PCIMACISA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PCIMAC.SYS	@bins	\		NET NDIS driver: DIGIBoard ISDN		x	@	\@	@\oemnaddi.inf	[Files-PCIMACMC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PCIMAC.SYS	@bins	\		NET NDIS driver: DIGIBoard ISDN		x	@	\@	@\oemnaddi.inf	[Files-DATAFIREU]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PCIMAC.SYS	@bins	\		NET NDIS driver: DIGIBoard ISDN		x	@	\@	@\oemnaddi.inf	[Files-DATAFIREST]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PCIMAC.SYS	@bins	\		NET NDIS driver: DIGIBoard ISDN		x	@	\@	@\oemnaddi.inf	[Files-DATAFIRE4ST]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PCL1200.DLL	@bins	\		PCL 1200		x	@	\@	@\printer.inf	[Files-PrinterData]	"pcl1200 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
PCNET.HLP	@bins	\		PCNET Help			@	\@	@\oemnadap.inf	[Files-hlp]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
PERFNW.DLL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
PHIIPX.PPD	@bins	\		See printer.inf - TektronixPhaserIIPX			@	\@	@\printer.inf	[Files-PrinterData]	"phiipx = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PING.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
PLACE.DOM	@bins	\		dns samples	as		@	\@	@\oemnsvdn.inf	[Files-DNS-SAMPLE]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dns\samples		0
PLOTTER.DLL	@bins	\		plotter		x	@	\@	@\printer.inf	[Files-PrinterDriver]	"plotter = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		0
PLOTUI.CNT	@bins	\					@	\@	@\printer.inf	[Files-PrinterDriverCnt]	"plotter = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\spool\drivers\@		0
PLOTUI.DLL	@bins	\		plotter		x	@	\@	@\printer.inf	[Files-PrinterConfig]	"plotui = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		0
PLOTUI.HLP	@bins	\					@	\@	@\printer.inf	[Files-PrinterDriverHelp]	"plotter = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\spool\drivers\@		0
PRINTMAN.CNT	@bins	\		localmon			@	\@	@\monitor.inf	[Files-PrinterMonitorCnt]	"localmon = [d],[n] , SIZE=[s]"				1	2*15*9*6*17	2*15*17*18	.\system32		0
PRINTMAN.FTS	@bins	\		localmon			@	\@	@\monitor.inf	[Files-PrinterMonitorFts]	"localmon = [d],[n] , SIZE=[s]"				1	2*12*9*6*17	2*12*17*18	.\system32		0
PRINTMAN.HLP	@bins	\		localmon			@	\@	@\monitor.inf	[Files-PrinterMonitorHelp]	"localmon = [d],[n] , SIZE=[s]"				1	2*15*9*6*17	2*15*17*18	.\system32		0
PRONET16.SYS	@bins	\		Proteon Token Ring card driver		x	@	\@	@\oemnadp3.inf	[Files-P1390]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PRONET16.SYS	@bins	\		Proteon Token Ring card driver		x	@	\@	@\oemnadp9.inf	[Files-P1990]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PRONET16.SYS	x86bins	\		Proteon Token Ring card driver		x	x86	\i386	i386\oemnadpm.inf	[Files-P189X]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PROPRINT.DLL	@bins	\		IBM Proprinter II		x	@	\@	@\printer.inf	[Files-PrinterData]	"proprint = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PROPRN24.DLL	@bins	\		IBM Proprinter X24		x	@	\@	@\printer.inf	[Files-PrinterData]	"proprn24 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PRORAPM.DWN	@bins	\		Proteon Token Ring card driver			@	\@	@\oemnadp3.inf	[Files-P1390]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PRORAPM.DWN	@bins	\		Proteon Token Ring card driver			@	\@	@\oemnadp9.inf	[Files-P1990]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PRORAPM.DWN	x86bins	\		Proteon Token Ring card driver			x86	\i386	i386\oemnadpm.inf	[Files-P189X]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
PROTOCOL	@bins	\		"Sockets database file, should ship"			@	\@	@\oemnxptc.inf	[Files-ETC]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
PS1.DLL	@bins	\		IBM PS/1		x	@	\@	@\printer.inf	[Files-PrinterData]	"ps1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
PSCRIPT.CNT	@bins	\					@	\@	@\printer.inf	[Files-PrinterDriverCnt]	"pscript = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\spool\drivers\@		0
PSCRIPT.DLL	@bins	\		printer		x	@	\@	@\printer.inf	[Files-PrinterDriver]	"pscript = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		0
PSCRIPT.HLP	@bins	\					@	\@	@\printer.inf	[Files-PrinterDriverHelp]	"pscript = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\spool\drivers\@		0
PSCRPTUI.DLL	@bins	\		printer		x	@	\@	@\printer.inf	[Files-PrinterConfig]	"pscrptui = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		0
PSIDISP.DLL	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayDLLs]	"psidisp = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
PSIDISP.SYS	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayMiniportDrivers]	"psidisp = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
PX.PPD	@bins	\		See printer.inf - TektronixPhaserPX			@	\@	@\printer.inf	[Files-PrinterData]	"px = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q2200523.PPD	@bins	\		See printer.inf - QMS-PS2200v51.0or52.3			@	\@	@\printer.inf	[Files-PrinterData]	"q2200523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q2210523.PPD	@bins	\		See printer.inf - QMS-PS2210v51.0or52.3			@	\@	@\printer.inf	[Files-PrinterData]	"q2210523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q2220523.PPD	@bins	\		See printer.inf - QMS-PS2220v51.0or52.3			@	\@	@\printer.inf	[Files-PrinterData]	"q2220523 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q30SI503.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"q30si503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
Q810T517.PPD	@bins	\		See printer.inf - QMS-PS810Turbov.51.7			@	\@	@\printer.inf	[Files-PrinterData]	"q810t517 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q820_517.PPD	@bins	\		See printer.inf - QMS-PS820v51.7			@	\@	@\printer.inf	[Files-PrinterData]	"q820_517 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q820T517.PPD	@bins	\		See printer.inf - QMS-PS820Turbov51.7			@	\@	@\printer.inf	[Files-PrinterData]	"q820t517 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
Q860PLS2.PPD	@bins	\		QMS 860+ Level 2			@	\@	@\printer.inf	[Files-PrinterData]	"q860pls2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QCS10001.PPD	@bins	\		QMS ColorScript 1000 Level 1			@	\@	@\printer.inf	[Files-PrinterData]	"qcs10001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QCS10002.PPD	@bins	\		QMS ColorScript 1000 Level 2			@	\@	@\printer.inf	[Files-PrinterData]	"qcs10002 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QCS10503.PPD	@bins	\		See printer.inf - QMSColorScript100Model10v50.3			@	\@	@\printer.inf	[Files-PrinterData]	"qcs10503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QCS20503.PPD	@bins	\		See printer.inf - QMSColorScript100Model20v50.3			@	\@	@\printer.inf	[Files-PrinterData]	"qcs20503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QCS30503.PPD	@bins	\		See printer.inf - QMSColorScript100Model30v50.3			@	\@	@\printer.inf	[Files-PrinterData]	"qcs30503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QIC117.SYS	x86bins	\		tape driver		x	x86	\i386	i386\tape.inf	[Files-TapeClassDrivers]	"qic117 = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
QL10WNT.SYS	@bins	\		QLogic PCI SCSI adapters		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"ql10wnt = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
QM1700_1.PPD	@bins	\		See printer.inf - QMS-PS1700v52.4			@	\@	@\printer.inf	[Files-PrinterData]	"qm1700_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QM2000_1.PPD	@bins	\		See printer.inf - QMS-PS2000v52.4			@	\@	@\printer.inf	[Files-PrinterData]	"qm2000_1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QM815MR1.PPD	@bins	\		See printer.inf - QMS-PS815MRv52.4			@	\@	@\printer.inf	[Files-PrinterData]	"qm815mr1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QM825MR1.PPD	@bins	\		See printer.inf - QMS-PS825MRv52.4			@	\@	@\printer.inf	[Files-PrinterData]	"qm825mr1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMPS4104.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qmps4104 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMPS8151.PPD	@bins	\		See printer.inf - QMS-PS815v52.4			@	\@	@\printer.inf	[Files-PrinterData]	"qmps8151 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMPS8251.PPD	@bins	\		See printer.inf - QMS-PS825v52.4			@	\@	@\printer.inf	[Files-PrinterData]	"qmps8251 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMS10602.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"qms10602 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS16602.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"qms16602 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS1725.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qms1725 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS2025.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qms2025 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS3225.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qms3225 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS420.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qms420 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS4525.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qms4525 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS45252.PPD	@bins	\		QMS 4525 Level 2			@	\@	@\printer.inf	[Files-PrinterData]	"qms45252 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS8_461.PPD	@bins	\		See printer.inf - QMS-PS800v46.1			@	\@	@\printer.inf	[Files-PrinterData]	"qms8_461 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMS81470.PPD	@bins	\		See printer.inf - QMS-PS810v47.0			@	\@	@\printer.inf	[Files-PrinterData]	"qms81470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMS860.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qms860 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMS8P461.PPD	@bins	\		See printer.inf - QMS-PS800Plusv46.1			@	\@	@\printer.inf	[Files-PrinterData]	"qms8p461 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMSCS210.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qmscs210 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMSCS230.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"qmscs230 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
QMSCS494.PPD	@bins	\		See printer.inf - QMSColorScript100v49.4			@	\@	@\printer.inf	[Files-PrinterData]	"qmscs494 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMSJ_461.PPD	@bins	\		See printer.inf - QMSPSJetv46.1			@	\@	@\printer.inf	[Files-PrinterData]	"qmsj_461 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QMSJP461.PPD	@bins	\		See printer.inf - QMSPSJetPlusv46.1			@	\@	@\printer.inf	[Files-PrinterData]	"qmsjp461 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QUIETJET.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"quietjet = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QUME_470.PPD	@bins	\		See printer.inf - QumeScripTENv47.0			@	\@	@\printer.inf	[Files-PrinterData]	"qume_470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
QUOTES	@bins	\		Quotes files for simple tcp/ip			@	\@	@\oemnsvsp.inf	[Files-ETC]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
QV.DLL	alphabins	\		QVision video DLL for Alpha		x	alpha	\alpha	alpha\video.inf	[Files-DisplayDLLs]	"qv = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
QV.DLL	x86bins	\		QVision video DLL for x86		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"qv = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
QV.SYS	alphabins	\		QVision video miniport for Alpha		x	alpha	\alpha	alpha\video.inf	[Files-DisplayMiniportDrivers]	"qv = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
QV.SYS	x86bins	\		qvision video miniport		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"qv = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
QWIII.DLL	@bins	\		IBM QuietWriter III		x	@	\@	@\printer.inf	[Files-PrinterData]	"qwiii = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
R6000505.PPD	@bins	\		See printer.inf - RicohPCLaser6000-PSv50.5			@	\@	@\printer.inf	[Files-PrinterData]	"r6000505 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
RAS.ICO	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Inf]	"rasico = [d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32\ras		0
RASACD.SYS	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Drivers]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
RASADMIN.CNT	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Admin]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASADMIN.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASADMIN.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Admin]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASADMIN.HLP	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Admin]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASAPI16.DLL	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASAPI32.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASARP.SYS	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Drivers]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
RASAUTO.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASDLG.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASAUTOU.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASCAUTH.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASCBCP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASCCP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASCFG.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASCHAP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASCTRS.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASDD.DLL	@bins	\		printer		x	@	\@	@\printer.inf	[Files-PrinterDriver]	"rasdd = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		0
RASDDUI.CNT	@bins	\					@	\@	@\printer.inf	[Files-PrinterDriverCnt]	"rasdd = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\spool\drivers\@		0
RASDDUI.DLL	@bins	\		printer		x	@	\@	@\printer.inf	[Files-PrinterConfig]	"rasddui = [d],[n] , SIZE=[s]"				999	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		0
RASDDUI.HLP	@bins	\					@	\@	@\printer.inf	[Files-PrinterDriverHelp]	"rasdd = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\spool\drivers\@		0
RASDIAL.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASFIL32.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASGLOSS.CNT	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASGLOSS.HLP	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASGPRXY.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASGTWY.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASIPCP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASIPHLP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASIPXCP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASMAN.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASMAN.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASMON.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
RASMSG.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASMXS.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASNBFCP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASNBIPC.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASPAP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASPHONE.CNT	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
RASPHONE.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASPHONE.HLP	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Client]	"[d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
RASPPP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASPPPEN.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASREAD.TXT	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Inf]	"rasread = [d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32\ras		0
RASRES.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASSAUTH.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASSER.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASSETUP.CNT	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASSETUP.HLP	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Resource]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32		0
RASSPAP.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASSPRXY.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASSRV.EXE	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Server]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RASTAPI.DLL	@bins	\		RAS		x	@	\@	@\oemnsvra.inf	[Files-Ras-Common]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
RCP.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
RDR.SYS	@bins	\		NET WkSta: Replicator file system		x	@	\@	@\oemnsvwk.inf	[Files-Drivers]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers		0
RELAY.DLL	@bins	\		Relay Agent	as	x	@	\@	@\oemnsvbr.inf	[Files-RelayAgent]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
REXEC.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
RNAL.DLL	@bins	\		Bloodhound			@	\@	@\oemnsvbh.inf	[Files-NETMON]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
ROUTE.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
ROUTER.EXE	@bins	\		Relay Agent	as	x	@	\@	@\oemnsvbr.inf	[Files-RelayAgent]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
ROUTER.EXE	@bins	\		Relay Agent	as	x	@	\@	@\oemnsvir.inf	[Files-IPRIP]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
ROUTETAB.DLL	@bins	\		IPRIP	as	x	@	\@	@\oemnsvir.inf	[Files-IPRIP]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
RPCLTC8.DLL	@bins	\		RPC banyan transport		x	@	\@	@\oemnsvrp.inf	[Files-RPCBANYAN]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPCLTS8.DLL	@bins	\		RPC banyan transport		x	@	\@	@\oemnsvrp.inf	[Files-RPCBANYAN]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPLCMD.EXE	@bins	\		RemoteBoot Service	as	x	@	\@	@\oemnsvri.inf	[Files-REMOTEBOOT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPLCNV.EXE	@bins	\		RemoteBoot Service	as	x	@	\@	@\oemnsvri.inf	[Files-REMOTEBOOT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPLMGR.CNT	@bins	\		RemoteBoot Service	as		@	\@	@\oemnsvri.inf	[Files-REMOTEBOOT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPLMGR.EXE	@bins	\		RemoteBoot Service	as	x	@	\@	@\oemnsvri.inf	[Files-REMOTEBOOT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPLMGR.HLP	@bins	\		RemoteBoot Service	as		@	\@	@\oemnsvri.inf	[Files-REMOTEBOOT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RPLSVC.EXE	@bins	\		RemoteBoot Service	as	x	@	\@	@\oemnsvri.inf	[Files-REMOTEBOOT]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
RSH.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
S3.DLL	@bins	\		video driver		x	@	\@	@\video.inf	[Files-DisplayDLLs]	"s3 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
S3.SYS	@bins	\		video driver		x	@	\@	@\video.inf	[Files-DisplayMiniportDrivers]	"s3 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
S5232503.PPD	@bins	\		See printer.inf - Schlumberger5232ColorPostScriptPrinterv50.3			@	\@	@\printer.inf	[Files-PrinterData]	"s5232503 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
S746J522.PPD	@bins	\		See printer.inf - ShinkoColorCHC-746PSJPostScriptPrinterv52.2			@	\@	@\printer.inf	[Files-PrinterData]	"s746j522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SCG20522.PPD	@bins	\		See printer.inf - Scantext2030-51v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"scg20522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SEIKO.DLL	@bins	\		Seiko 8BPP		x	@	\@	@\printer.inf	[Files-PrinterData]	"seiko = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SEIKO_04.PPD	@bins	\		See printer.inf - SeikoColorPointPSModel04			@	\@	@\printer.inf	[Files-PrinterData]	"seiko_04 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SEIKO_14.PPD	@bins	\		See printer.inf - SeikoColorPointPSModel14			@	\@	@\printer.inf	[Files-PrinterData]	"seiko_14 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SEIKO24E.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"seiko24e = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SEIKOSH9.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"seikosh9 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
SERMOUSE.SYS	@bins	\		Serial mouse driver		x	@	\@	@\pointer.inf	[Files-MousePortDrivers]	"sermouse = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
SERVICES	@bins	\		"Sockets database file, should ship"			@	\@	@\oemnxptc.inf	[Files-ETC]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
SERVICES	@bins	\		"Sockets database file, should ship"			@	\@	@\oemnxptc.inf	[Files-ETC-Upgrade]	"[d],[n] , SIZE=[s], RENAME=SERVICES.SAM"				120	2*15*10*17	2*15*17	.\system32\drivers\etc		0
SFMAPI.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ADMTOOLS]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMAPI.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMATALK.SYS	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ATALKDRIVER]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32\drivers		0
SFMATALK.SYS	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFMDrivers]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32\drivers		0
SFMATCFG.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ATALK]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMATCFG.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMATMSG.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ATALK]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMATMSG.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMCTRS.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMICON.VOL	@bins	\		mac services	as		@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMICONS.INF	infs	\@		mac services	as		@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMMAP.INF	infs	\@		mac services	as		@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMMGR.CNT	@bins	\		mac services	nt		@	\@	@\oemnxpsm.inf	[Files-ADMTOOLS]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMMGR.CPL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ADMTOOLS]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMMGR.CPL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMMGR.HLP	@bins	\		mac services	nt		@	\@	@\oemnxpsm.inf	[Files-ADMTOOLS]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMMGR.HLP	@bins	\		mac services	nt		@	\@	@\oemnxpsm.inf	[Files-ATALK]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMMGR.HLP	@bins	\		mac services	as		@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMMON.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ATALK]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMMON.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMMSG.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMPRINT.EXE	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMPSDIB.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMPSEXE.EXE	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMPSFNT.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMPSPRT.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-PRINTPROC]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32\spool\prtprocs\w32x86		0
SFMPSPRT.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMRES.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMSRV.SYS	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFMDrivers]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32\drivers		0
SFMSVC.EXE	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMUAM.IFO	@bins	\		mac services	as		@	\@	@\oemnsvsm.inf	[Files-UAM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMUAM.RSC	@bins	\		mac services	as		@	\@	@\oemnsvsm.inf	[Files-UAM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMUAM.TXT	@bins	\		mac services	as		@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMUTIL.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-MISC]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMUTIL.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SFMWSHAT.DLL	@bins	\		mac services	nt	x	@	\@	@\oemnxpsm.inf	[Files-ATALK]	"[d],[n] , SIZE=[s]"				90	2*15*10*17	2*15*17	.\system32		0
SFMWSHAT.DLL	@bins	\		mac services	as	x	@	\@	@\oemnsvsm.inf	[Files-SFM]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
SIMPTCP.DLL	@bins	\		Simple TCPIP		x	@	\@	@\oemnsvsp.inf	[Files-STCPIP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
SKPSFCD1.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"SKPSFCD1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
SLBS.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
SMCISA.SYS	@bins	\		NDIS driver for SMC/WD net cards		x	@	\@	@\oemnadwd.inf	[Files-SMCISA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-BISTOR003EA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-BISTOR013EA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-BISTOR013WA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-WD8003EA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-WD8003SA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-WD8003WA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-WD8013EPA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-WD8013WPA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SMCISA.SYS	x86bins	\		NDIS driver for SMC/WD net cards		x	x86	\i386	i386\oemnadwm.inf	[Files-WD8115TRA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SNDBLST.DLL	@bins	\		driver for sound blaster		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"soundblaster = [d]:[n], ""wave,MIDI,aux,mixer"", ""Creative Labs Sound Blaster 1.X, Pro, 16"",,,"				999	2*15*10*17	2*15*17	.\system32		0
SNDBLST.DLL	@bins	\		driver for sound blaster		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"thunder = [d]:[n], ""wave,MIDI,aux,mixer"", ""Media Vision Thunder Board"",,,"				999	2*15*10*17	2*15*17	.\system32		0
SNDBLST.SYS	@bins	\		Sound Blaster driver		x	@	\@	@\mmdriver.inf	[soundblaster]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
SNDBLST.SYS	@bins	\		Sound Blaster driver		x	@	\@	@\mmdriver.inf	[thunder]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
SNDSYS.SYS	@bins	\		"Kernel driver, multimedia"		x	@	\@	@\mmdriver.inf	[soundsys]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
SNDSYS.SYS	x86bins	\		Sound Blaster driver		x	x86	\i386	i386\mmdriver.inf	[compaqba]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
SNDSYS32.DLL	@bins	\		Config and Midi patch code		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"soundsys = [d]:[n], ""wave,MIDI,aux,mixer"", ""Windows Sound System"" , , ,"				999	2*15*10*17	2*15*17	.\system32		0
SNDSYS32.DLL	x86bins	\		"Kernel driver, multimedia"		x	x86	\i386	i386\mmdriver.inf	[Installable.Drivers]	"compaqba = [d]:[n],""wave,MIDI,aux,mixer"", ""Compaq Business Audio"" , , ,"				999	2*15*10*17	2*15*17	.\system32		0
SNMP.EXE	@bins	\		"part of snmp component, snmp service"		x	@	\@	@\oemnxps1.inf	[Files-SNMP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
SNMP.EXE	@bins	\		"part of snmp component, snmp service"		x	@	\@	@\oemnsvsn.inf	[Files-SNMP]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
SNMPTRAP.EXE	@bins	\		part of snmp component		x	@	\@	@\oemnsvsn.inf	[Files-SNMP]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
SONIC.SYS	mipsbins	\		NET NDIS driver: MIPS (built-in on Jazz)		x	mips	\mips	mips\oemnadso.inf	[Files-SONIC]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32\drivers		2
SPARROW.SYS	@bins	\		adaptec 151x/152x scsi miniport driver		x	@	\@	@\scsi.inf	[Files-ScsiMiniportDrivers]	"sparrow = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
SPOCK.SYS	x86bins	\		SCSI: MCA SCSI driver		x	x86	\i386	i386\scsi.inf	[Files-ScsiMiniportDrivers]	"spock = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
SRV.SYS	@bins	\		NET Server: Server		x	@	\@	@\oemnsvsv.inf	[Files-SRV]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
STAR24E.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"star24e = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
STAR9E.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"star9e = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
STARJET.DLL	@bins	\				x	@	\@	@\printer.inf	[Files-PrinterData]	"starjet = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
STREAMS.SYS	@bins	\				x	@	\@	@\oemnxpst.inf	[Files-STREAMS]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SWITCH.INF	@bins	\		RAS			@	\@	@\oemnsvra.inf	[Files-Ras-Inf]	"switch = [d],[n] , SIZE=[s] , NODELETESOURCE"				1	2*15*10*17	2*15*17	.\system32\ras		0
SXBIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoardXem-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SXBIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8r-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SXBIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-IBM8r-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SXFEP.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoardXem-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SXFEP.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8r-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SXFEP.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-IBM8r-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
SYNTH.DLL	@bins	\				x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"synth = [d]:[n], ""MIDI"", ""MIDI Synthesizer"" , , ,"				999	2*15*10*17	2*15*17	.\system32		0
SYNTH.PAT	@bins	\		multimedia			@	\@	@\mmdriver.inf	[synth]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32		0
SYNTH.SYS	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[synth]	[d]:[n]				999	2*15*10*17	2*15*17	.\system32\drivers		0
SYSTEM.MDB	@bins	\		dhcp mdb			@	\@	@\oemnsvdh.inf	[Files-DHCP-MDB]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\dhcp		0
SYSTEM.MDB	@bins	\		wins			@	\@	@\oemnsvwi.inf	[Files-WINS-MDB]	"[d], [n], SIZE=[s], NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\wins		0
T1513470.PPD	@bins	\		See printer.inf - TI211513fontsv47.0			@	\@	@\printer.inf	[Files-PrinterData]	"t1513470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
T1535470.PPD	@bins	\		See printer.inf - TI211535fontsv47.0			@	\@	@\printer.inf	[Files-PrinterData]	"t1535470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TANDQIC.SYS	@bins	\		"tandberg 3660, 3820, 4120, 4220"		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"tandqic = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
TASKLIST.HLP	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
TCARC.SYS	@bins	\		NET NDIS driver: ARCNET		x	@	\@	@\oemnadar.inf	[Files-Driver]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
TCPIP.SYS	@bins	\		IP Driver		x	@	\@	@\oemnxptc.inf	[Files-TC]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32\drivers		0
TCPSVCS.EXE	@bins	\		TCP Services		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
TELNET.CNT	@bins	\					@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
TELNET.EXE	@bins	\				x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
TELNET.HLP	@bins	\					@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
TFTP.EXE	@bins	\		"TCP/IP utility, ships"		x	@	\@	@\oemnsvcu.inf	[Files-TCPIPEXE]	"[d],[n] , SIZE=[s]"				0	2*15*10*17	2*15*17	.\system32		16
TGA.DLL	alphabins	\		video driver		x	alpha	\alpha	alpha\video.inf	[Files-DisplayDLLs]	"tga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
TGA.SYS	alphabins	\		video driver		x	alpha	\alpha	alpha\video.inf	[Files-DisplayMiniportDrivers]	"tga = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
THINKJET.DLL	@bins	\		HP ThinkJet (2225 C-D)		x	@	\@	@\printer.inf	[Files-PrinterData]	"thinkjet = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TI08_450.PPD	@bins	\		See printer.inf - TIOmniLaser2108v45.0			@	\@	@\printer.inf	[Files-PrinterData]	"ti08_450 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TI15_470.PPD	@bins	\		See printer.inf - TIOmnilaser2115v47.0			@	\@	@\printer.inf	[Files-PrinterData]	"ti15_470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TI850.DLL	@bins	\		TI 850/855		x	@	\@	@\printer.inf	[Files-PrinterData]	"ti850 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIM17521.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"tim17521 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIM35521.PPD	@bins	\		See printer.inf - TImicroLaserPS35v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"tim35521 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIML6231.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timl6231 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP231.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp231 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP232.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp232 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP233.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp233 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP651.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp651 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP652.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp652 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP671.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp671 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMLP672.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timlp672 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMP3231.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timp3231 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIMPE231.PPD	@bins	\		See printer.inf - TImicroLaserPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"timpe231 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TITRB161.PPD	@bins	\		See printer.inf - TImicroLaser16Turbov2010.119			@	\@	@\printer.inf	[Files-PrinterData]	"titrb161 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TITRBO61.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"titrbo61 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TITRBO91.PPD	@bins	\		See printer.inf - TImicroLaser9Turbov2010.119			@	\@	@\printer.inf	[Files-PrinterData]	"titrbo91 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIX17521.PPD	@bins	\		See printer.inf - TImicroLaserXLPS17v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"tix17521 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TIX35521.PPD	@bins	\		See printer.inf - TImicroLaserXLPS35v.52.1			@	\@	@\printer.inf	[Files-PrinterData]	"tix35521 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TK200172.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"tk200172 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TK200392.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"tk200392 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TK220171.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tk220171 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TK220391.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tk220391 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TK340171.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"TK340171 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TK340691.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"TK340691 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TKP200I2.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"tkp200i2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TKP200J1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp200j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP220I1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp220i1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP220J1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp220j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP2SDJ1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp2sdj1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP2SDX1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp2sdx1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP300I1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp300i1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP300J1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp300j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKP480J1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkp480j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPH1401.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"TKPH1401 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TKPH2SD1.PPD	@bins	\		See printer.inf - TektronixPhaserIISDv2011.108			@	\@	@\printer.inf	[Files-PrinterData]	"tkph2sd1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPH4401.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"TKPH4401 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TKPH4801.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkph4801 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPH5401.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"TKPH5401 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
TKPHPXI1.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"tkphpxi1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPHZ2J1.PPD	@bins	\		See printer.inf - TektronixPhaserIIPXiJv2011.108			@	\@	@\printer.inf	[Files-PrinterData]	"tkphz2j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPHZ3J1.PPD	@bins	\		See printer.inf - TektronixPhaserIIIPXiJv2011.108			@	\@	@\printer.inf	[Files-PrinterData]	"tkphz3j1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPHZR21.PPD	@bins	\		See printer.inf - TektronixPhaserIIPXiv2010.116			@	\@	@\printer.inf	[Files-PrinterData]	"tkphzr21 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPHZR22.PPD	@bins	\		See printer.inf - TektronixPhaserIIPXiv2011.108			@	\@	@\printer.inf	[Files-PrinterData]	"tkphzr22 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPHZR31.PPD	@bins	\		See printer.inf - TektronixPhaserIIIPXiv2010.116			@	\@	@\printer.inf	[Files-PrinterData]	"tkphzr31 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPHZR32.PPD	@bins	\		See printer.inf - TektronixPhaserIIIPXiv2011.108			@	\@	@\printer.inf	[Files-PrinterData]	"tkphzr32 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPXE171.PPD	@bins	\		See printer.inf - TektronixPhaserIIPXev2010.128with17fonts			@	\@	@\printer.inf	[Files-PrinterData]	"tkpxe171 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TKPXE391.PPD	@bins	\		See printer.inf - TektronixPhaserIIPXev2010.128with39fonts			@	\@	@\printer.inf	[Files-PrinterData]	"tkpxe391 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TOOLBAR.DLL	@bins	\		Bloodhound	as		@	\@	@\oemnsvbh.inf	[Files-TOOLS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\netmon		0
TRACE.DLL	@bins	\		Relay Agent	as	x	@	\@	@\oemnsvir.inf	[Files-IPRIP]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
TRACE.DLL	@bins	\		Relay Agent	as	x	@	\@	@\oemnsvbr.inf	[Files-RelayAgent]	"[d],[n] , SIZE=[s]"				145	2*15*10*17	2*15*17	.\system32		0
TRACERT.EXE	@bins	\		icmp		x	@	\@	@\oemnxptc.inf	[Files-TCPIPEXE]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
TRIDENT.SYS	x86bins	\		super vga		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"trident = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
TRIUMPH1.PPD	@bins	\		See printer.inf - TriumphAdlerSDR7706PS13			@	\@	@\printer.inf	[Files-PrinterData]	"triumph1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TRIUMPH2.PPD	@bins	\		See printer.inf - TriumphAdlerSDR7706PS35			@	\@	@\printer.inf	[Files-PrinterData]	"triumph2 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
TSSOFT32.ACM	@bins	\		multimedia		x	@	\@	@\mmdriver.inf	[Installable.Drivers]	"trspch = [d]:[n],""MSACM.trspch"", ""DSP Group TrueSpeech(TM) Audio CODEC"",,"				999	2*15*10*17	2*15*17	.\system32		0
TXTONLY.DLL	@bins	\		Generic Text Driver		x	@	\@	@\printer.inf	[Files-PrinterData]	"txtonly = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
U1200XL4.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"U1200XL4 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
U1800PMR.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"U1800PMR = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
U1800XL.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"U1800XL = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
U1800XLO.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"U1800XLO = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
U9415470.PPD	@bins	\		See printer.inf - UnisysAP9415v47.0			@	\@	@\printer.inf	[Files-PrinterData]	"u9415470 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
UBNEI.BIN	@bins	\		NET Transport: XNS (required for WzMail)			@	\@	@\oemnadub.inf	[Files-UBPC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.BIN	@bins	\		NET Transport: XNS (required for WzMail)			@	\@	@\oemnadub.inf	[Files-UBPCEOTP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.BIN	@bins	\		NET Transport: XNS (required for WzMail)			@	\@	@\oemnadub.inf	[Files-UBPS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.BIN	x86bins	\		NET Transport: XNS (required for WzMail)			x86	\i386	i386\oemnadum.inf	[Files-UBPC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.BIN	x86bins	\		NET Transport: XNS (required for WzMail)			x86	\i386	i386\oemnadum.inf	[Files-UBPCEOTP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.BIN	x86bins	\		NET Transport: XNS (required for WzMail)			x86	\i386	i386\oemnadum.inf	[Files-UBPS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.SYS	@bins	\		NET Transport: XNS (required for WzMail)		x	@	\@	@\oemnadub.inf	[Files-UBPC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.SYS	@bins	\		NET Transport: XNS (required for WzMail)		x	@	\@	@\oemnadub.inf	[Files-UBPCEOTP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.SYS	@bins	\		NET Transport: XNS (required for WzMail)		x	@	\@	@\oemnadub.inf	[Files-UBPS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.SYS	x86bins	\		NET Transport: XNS (required for WzMail)		x	x86	\i386	i386\oemnadum.inf	[Files-UBPC]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.SYS	x86bins	\		NET Transport: XNS (required for WzMail)		x	x86	\i386	i386\oemnadum.inf	[Files-UBPCEOTP]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UBNEI.SYS	x86bins	\		NET Transport: XNS (required for WzMail)		x	x86	\i386	i386\oemnadum.inf	[Files-UBPS]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
UNI17521.PPD	@bins	\		See printer.inf - UNISYSAP921017Fontsv52.1			@	\@	@\printer.inf	[Files-PrinterData]	"uni17521 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
UNI39521.PPD	@bins	\		See printer.inf - UNISYSAP921039Fontsv52.1			@	\@	@\printer.inf	[Files-PrinterData]	"uni39521 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
V5334522.PPD	@bins	\		See printer.inf - VarityperSeries4000-5330v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"v5334522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
V7VRAM.SYS	x86bins	\		video 7 VRAM		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"v7vram = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
VGA.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"vga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
VGA.SYS	@bins	\		VGA class driver		x	@	\@	@\video.inf	[Files-DisplayMiniportDrivers]	"vga = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
VGA256.DLL	x86bins	\				x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"vga256 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
VGA64K.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"vga64k = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
VIDEOSIM.SYS	@bins	\		video driver			@	\@	@\video.inf	[Files-DisplayMiniportDrivers]	"videosim = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
VT42P522.PPD	@bins	\		See printer.inf - Varityper4200B-Pv49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"vt42p522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT43P522.PPD	@bins	\		See printer.inf - Varityper4300Pv49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"vt43p522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4510A1.PPD	@bins	\		See printer.inf - VarityperVT4_510Av52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4510a1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4530A1.PPD	@bins	\		See printer.inf - VT4_530Av52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4530a1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4530B1.PPD	@bins	\		See printer.inf - VT4_530Bv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4530b1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4530C1.PPD	@bins	\		See printer.inf - VT4_530Cv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4530c1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4533B1.PPD	@bins	\		See printer.inf - VT4_533Bv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4533b1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4533C1.PPD	@bins	\		See printer.inf - VT4_533Cv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4533c1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT453EA1.PPD	@bins	\		See printer.inf - VT4_53EAv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt453ea1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT453EB1.PPD	@bins	\		See printer.inf - VT4_53EBv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt453eb1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4550A1.PPD	@bins	\		See printer.inf - VT4_550Av52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4550a1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4550B1.PPD	@bins	\		See printer.inf - VT4_550Bv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4550b1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4550C1.PPD	@bins	\		See printer.inf - VT4_550Cv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4550c1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4551A1.PPD	@bins	\		See printer.inf - VT4_551Av52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4551a1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4563A1.PPD	@bins	\		See printer.inf - VT4_563Av52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4563a1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4563B1.PPD	@bins	\		See printer.inf - VT4_563Bv52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4563b1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT49901.PPD	@bins	\		See printer.inf - VarityperVT4990v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt49901 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4L3001.PPD	@bins	\		See printer.inf - Varityper4000-L300v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4l3001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4L3301.PPD	@bins	\		See printer.inf - Varityper4000-L330v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4l3301 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4L5001.PPD	@bins	\		See printer.inf - Varityper4000-L500v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4l5001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT4L5301.PPD	@bins	\		See printer.inf - Varityper4000-L530v52.3			@	\@	@\printer.inf	[Files-PrinterData]	"vt4l5301 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT530522.PPD	@bins	\		See printer.inf - VarityperSeries4000-5300v49.3or52.2			@	\@	@\printer.inf	[Files-PrinterData]	"vt530522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT550522.PPD	@bins	\		See printer.inf - VarityperSeries4000-5500v52.2			@	\@	@\printer.inf	[Files-PrinterData]	"vt550522 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT600P1.PPD	@bins	\		See printer.inf - VarityperVT-600P			@	\@	@\printer.inf	[Files-PrinterData]	"vt600p1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT600W1.PPD	@bins	\		See printer.inf - VarityperVT-600Wv48.0			@	\@	@\printer.inf	[Files-PrinterData]	"vt600w1 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VT60P480.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"vt60p480 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
VWIPXSPX.DLL	@bins	\		NWCS File		x	@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
VWIPXSPX.EXE	@bins	\		NWCS File			@	\@	@\oemnsvnw.inf	[Files-NWWKSTA]	"[d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
W32.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"w32 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
WANG15.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"wang15 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
WANG15FP.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"wang15fp = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
WANGQIC.SYS	@bins	\		"wangtek 525, 250 drives"		x	@	\@	@\tape.inf	[Files-TapeClassDrivers]	"wangqic = [d],[n] , SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32\drivers		0
WD90C24A.DLL	ppcbins	\		Western Digital LCD screen driver for PPC laptop (DLL)		x	ppc	\ppc	ppc\video.inf	[Files-DisplayDLLs]	"wd90c24a = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
WD90C24A.SYS	ppcbins	\		Western Digital LCD screen driver for PPC laptop (SYS)		x	ppc	\ppc	ppc\video.inf	[Files-DisplayMiniportDrivers]	"wd90c24a = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
WDVGA.SYS	x86bins	\		super vga		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"wdvga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
WEITEKP9.DLL	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayDLLs]	"weitekp9 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
WEITEKP9.DLL	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"weitekp9 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
WEITEKP9.SYS	ppcbins	\		video driver		x	ppc	\ppc	ppc\video.inf	[Files-DisplayMiniportDrivers]	"weitekp9 = [d],[n] , SIZE=[s]"			x	1	2*15*10*17	2*15*17	.\system32\drivers		0
WEITEKP9.SYS	x86bins	\		video driver		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"weitekp9 = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
WINS.EXE	@bins	\		wins	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WINSADMN.CNT	@bins	\		wins Admin UI	as		@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WINSADMN.EXE	@bins	\		wins Admin UI	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WINSADMN.HLP	@bins	\		wins Admin UI	as		@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WINSCTRS.DLL	@bins	\		wins	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WINSEVNT.DLL	@bins	\		wins	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WINSMIB.DLL	@bins	\		wins	as	x	@	\@	@\oemnsvwi.inf	[Files-WINS]	"[d], [n], SIZE=[s]"				999	2*15*10*17	2*15*17	.\system32		0
WKSSVC.DLL	@bins	\		"workstation service, breakout of LMSVCS"		x	@	\@	@\oemnsvwk.inf	[Files-WKSTA]	"[d],[n] , SIZE=[s]"				120	2*15*10*17	2*15*17	.\system32		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard16e-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard16i-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard2Port-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard4e-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard4i-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard4Port-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8e-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8i-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XABIOS.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8Port-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard16e-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard16i-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard2Port-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard4e-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard4i-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard4Port-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8e-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8i-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XACOOK.BIN	@bins	\		NET NDIS driver: Digiboard serial driver			@	\@	@\oemnadds.inf	[Files-DigiBoard8Port-images]	"[d],[n] , SIZE=[s] , NODELETESOURCE"				999	2*15*10*17	2*15*17	.\system32\drivers		0
XGA.DLL	x86bins	\		XGA video support		x	x86	\i386	i386\video.inf	[Files-DisplayDLLs]	"xga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32		0
XGA.SYS	x86bins	\		XGA video support		x	x86	\i386	i386\video.inf	[Files-DisplayMiniportDrivers]	"xga = [d],[n] , SIZE=[s]"				1	2*15*10*17	2*15*17	.\system32\drivers		0
XR_45051.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"XR_45051 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
XR_45201.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"XR_45201 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
XR_49001.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"XR_49001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
XRDT0851.PPD	@bins	\		See printer.inf - XeroxDocuTech85v2010.130			@	\@	@\printer.inf	[Files-PrinterData]	"xrdt0851 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
XRDT0901.PPD	@bins	\		See printer.inf - XeroxDocuTech90v2010.130			@	\@	@\printer.inf	[Files-PrinterData]	"xrdt0901 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
XRDT1351.PPD	@bins	\		See printer.inf			@	\@	@\printer.inf	[Files-PrinterData]	"xrdt1351 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		14
XT_82001.PPD	@bins	\					@	\@	@\printer.inf	[Files-PrinterData]	"XT_82001 = [d],[n] , SIZE=[s]"				0	2*15*9*6*17	2*15*17*18	.\system32\spool\drivers\@\1		13
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\dfs\ui\depend.txt ===
The UI for DFS administration depends on these projects/directories/files:

    -p net -s \\orville\razzle, \nt\private\net\inc

    -p windows -s \\rastaman\ntwin, \nt\private\windows\inc16
            -- For shsemip.h.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\dfs\ui\dfsutil\dfsutil instructions 2.0.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. 2000 File I/O Group Windows Title _PID_HLINKS2000 File I/O Group Windows Uday Hegde Normal Drew Samnick Microsoft Word 9.0K^W>4 |teEZ2` Eavdh 0nBh, r Z4PC:\Documents and Settings\drewsam.NTDEV\My Documents\MyDfsbjbjU  TITLE  \* MERGEFORMAT  DFS Utility Functionality Specification. Windows 2000 Base Group Authors:  Drew Samnick. Version 1.0,   TIME \@ "M/d/yy h:mm am/pm"  4/26/00 12:58 PM  TOC \o "1-2" \h \z   HYPERLINK \l "_Toc481388577"  DFS Utility  PAGEREF _Toc481388577 \h   HYPERLINK \l "_Toc481388578"  Functionality Specification.  PAGEREF _Toc481388578 \h   HYPERLINK \l "_Toc481388579"  Introduction  PAGEREF _Toc481388579 \h   HYPERLINK \l "_Toc481388580"  DFS Utility commands.  PAGEREF _Toc481388580 \h   HYPERLINK \l "_Toc481388581"  ADDROOT  PAGEREF _Toc481388581 \h   HYPERLINK \l "_Toc481388582"  REMROOT  PAGEREF _Toc481388582 \h   HYPERLINK \l "_Toc481388583"   PAGEREF _Toc481388583 \h   HYPERLINK \l "_Toc481388584"  IMPORT  PAGEREF _Toc481388584 \h   HYPERLINK \l "_Toc481388585"  REINIT  PAGEREF _Toc481388585 \h   HYPERLINK \l "_Toc481388586"  UNMAP  PAGEREF _Toc481388586 \h   HYPERLINK \l "_Toc481388587"  CLEAN  PAGEREF _Toc481388587 \h   HYPERLINK \l "_Toc481388588"  PKTFLUSH  PAGEREF _Toc481388588 \h   HYPERLINK \l "_Toc481388589"  SPCFLUSH  PAGEREF _Toc481388589 \h   HYPERLINK \l "_Toc481388590"  PKTINFO  PAGEREF _Toc481388590 \h   HYPERLINK \l "_Toc481388591"  SPCINFO  PAGEREF _Toc481388591 \h   HYPERLINK \l "_Toc481388592"  Usage.  PAGEREF _Toc481388592 \h   HYPERLINK \l "_Toc481388593"  How do I get help without this document?  PAGEREF _Toc481388593 \h   HYPERLINK \l "_Toc481388594"  How do I use dfsutil to add a DFS root?  PAGEREF _Toc481388594 \h   HYPERLINK \l "_Toc481388595"  How do I use dfsutil to remove an existing DFS root?  PAGEREF _Toc481388595 \h   HYPERLINK \l "_Toc481388596"  How do I use dfsutil to view the configuration data of a DFS?  PAGEREF _Toc481388596 \h   HYPERLINK \l "_Toc481388597"  How do I use dfsutil to save and restore a DFS namespace?  PAGEREF _Toc481388597 \h   HYPERLINK \l "_Toc481388598"  What are the dfsutil scripting commands and how are they used?  PAGEREF _Toc481388598 \h   HYPERLINK \l "_Toc481388599"  How do I get a root server to pick up changes that were made directly to the DS?  PAGEREF _Toc481388599 \h   HYPERLINK \l "_Toc481388600"  I reinstalled Windows 2000 on a server that was a root and the server no longer thinks it is a root.  PAGEREF _Toc481388600 \h   HYPERLINK \l "_Toc481388601"  My machine is no longer a root, but the information in the DS indicates the machine is a root.  PAGEREF _Toc481388601 \h  Introduction Dfsutil.exe is a command line utility for administering the Distributed File System (DFS). This document describes the functionality of dfsutil and gives some examples of how to use it. It is assumed that the reader has a basic knowledge of DFS and related terminology. It is useful to note that the terms Standalone DFS and Machine based DFS both refer to the same type of DFS setup. Similarly, Domain based DFS and Fault Tolerant DFS are two terms to describe the same setup. DFS Utility commands. ADDROOT The ADDROOT command allows you to create a new DFS root or add a machine as a root replica of an existing DFS namespace. To use it, you must specify three things: the name of the DFS to which the root will belong (only for Domain based DFS), the name of the server on which to create the root, and the name of the share that will back the root. You may also specify a comment along with the other information. If you do include a comment, be sure to enclose it in quotes. The overall syntax is: Dfsutil /addroot:<DomDfsName> /server:<ServerName> /share:<ShareName> /comment:<Comment>  For example, let us say that you have a domain based DFS named \\DomainName\MyDfs. You want to add   HYPERLINK "\\\\MyServer\\MyShare"  \\MyServer\MyShare  as a root of that DFS. You could execute the following command: Dfsutil /addroot:MyDfs /server:MyServer /share:MyShare /comment: A root of my dfs. To add a root to a standalone DFS, leave the DomDfsName blank. For example: Dfsutil /addroot: /server:MyServer /share:MyShare /comment: A machine based DFS root REMROOT The REMROOT command allows you to remove a root replica from an existing DFS root. Removing the last replica of a DFS namespace causes the namespace to be wiped out. To use it, you must specify three things: the name of the DFS to which the root belongs, the name of the server on which the root exists, and the name of the share that backs the root. The overall syntax is: Dfsutil /remroot:<DomDfsName> /server:<ServerName> /share:<ShareName> So, to remove a root replica of   HYPERLINK "MyDfs"  MyDfs  that is backed by   HYPERLINK "\\\\MyServer\\MyShare"  \\MyServer\MyShare , you would execute: Dfsutil /remroot:MyDfs /server:MyServer /share:MyShare To remove a root from a machine based DFS, leave the DomDfsName blank. For example: Dfsutil /remroot: /server:MyServer /share:MyShare  The VIEW command lets you dump the configuration data of a DFS from the command line. Included in the configuration data is the type of DFS (StdDfs for Standalone DFS or DomDfs for Domain Based DFS), a list of the roots of the DFS, a list of all of the links of the DFS, and site information for the DFS.  To view the configuration data, use this syntax: Dfsutil /view:<\\dfsname\dfsshare>  /level:<Level> LEVEL The LEVEL is an optional parameter that controls the level of detail of the information displayed. It may have a value of either 0 (Low detail)  or 1 (High Detail.) EXPORT EXPORT is a special option used in conjunction with the VIEW command. It converts the configuration data into a usable script file. You specify the DFS namespace to export and a file in which to save the exported configuration data.  Dfsutil /view:<  HYPERLINK "\\\\dfsname\\dfsshare"  \\dfsname\dfsshare > /export:<filename> WARNING: if the file you specify to export already exists it will be overwritten without any warning. You will lose any data in the original file. IMPORT To IMPORT a DFS, simply specify the script file name. Dfsutil /import:<filename>  WARNING: If you try to import a DFS without creating a root your import will fail. Be sure to either create the root before importing or include an ADDROOT command at the beginning of your script file. If your script file was created with the EXPORT command, the necessary ADDROOT command will exist as a comment at the start of the file. Remove the // to cause the script to create the root when it is imported.   REINIT Dfsutil /reinit:<servername> After modifying the DFS configuration data with import you will need to reinitialize the DFS service on each of the root servers. A REINIT operation will cause the server to reread the DFS configuration data form the Active Directory. Until the configuration data is read by the server it does not know about any of the modification that were made. The server will occasionally read the DFS configuration data on its own. UNMAP Dfsutil /unmap:<\\dfsname\dfsshare> /root:<\\server\share> UNMAP removes a root server from the DFS configuration data. WARNING: UNMAP will not notify the server that it has been removed as a root. To notify the root of the change you will need to use the CLEAN command. Performing an UNMAP and a CLEAN together is the equivalent of REMROOT. You should always use REMROOT to remove a root. UNMAP and CLEAN are to be used to repair DFS configuration data corruption. CLEAN Dfsutil /clean:<server> Each DFS root server keeps local information regarding the DFS root. The CLEAN command removes this information. It will not, however, make any modifications to the DFS configuration data stored in the Active Directory. WARNING: Using the CLEAN command can cause unexpected behavior. To remove the root replica from the DFS configuration data you will need to use the UNMAP command. Performing an UNMAP and a CLEAN together is the equivalent of REMROOT. You should always use REMROOT to remove a root. UNMAP and CLEAN are to be used to repair DFS configuration data corruption. PKTFLUSH Dfsutil /pktflush This command flushes out the local partition knowledge table (pkt). The pkt is where the DFS client caches some information about referrals and servers. Flushing the pkt will clear out existing information and force the DFS client to fetch new information for the next accesses. Some of the entries in the PKT may not get flushed, especially if DFS is in the process of using the referrals.  SPCFLUSH Dfsutil /spcflush The special table contains special internal data known to DFS. Flushing this table will cause the information to be reloaded when it is needed next. PKTINFO Dfsutil /pktinfo /level:<level> This will display the information currently in the pkt.  PKTINFO will give you a list of pkt entries such as: Entry: \ntdev\release ShortEntry: \ntdev\release Expires in 900 seconds UseCount: 0 Type:0x81 ( REFERRAL_SVC DFS )    0:[\WINBUILDS2\release][0x19]    1:[\WINBUILDS3\release][0x9]    2:[\WINBUILDS\release][0x9] Each entry will report a name, both full and short. Below that will be the remaining time to live for the referral and information contained in the referral. The referral information can tell you which alternate is active for your DFS client. The number after the alternate name indicates its state. A state of 0x19 is active. In the above example, alternate 0 (  HYPERLINK "\\\\WINBUILDS2\\release"  \\WINBUILDS2\release ) is the active alternate. Accesses to   HYPERLINK "\\\\ntdev\\release"  \\ntdev\release  will be sent to   HYPERLINK "\\\\winbuilds2\\release"  \\winbuilds2\release LEVEL The LEVEL is an optional argument that can take a value of either 0 (Low detail)  or 1 (High Detail.)  SPCINFO Dfsutil /spcinfo The special table contains special internal data known to DFS.  SPCINFO displays the information in the spc table. Usage. How do I get help without this document? To get a brief summary of the commands available with dfsutil simply enter   dfsutil /help dfsutil /?  at the command prompt.  Help regarding the dfsutil scripting commands can be found by typing  dfsutil /scripthelp. How do I use dfsutil to add a DFS root? To add a DFS root, use the ADDROOT command. (  REF _Ref480713761 \r \h  How do I use dfsutil to remove an existing DFS root? To remove an existing DFS root, use the REMROOT command. (  REF _Ref480714755 \r \h  How do I use dfsutil to view the configuration data of a DFS? To view DFS configuration data, use the VIEW command. (  REF _Ref480714860 \r \h  How do I use dfsutil to save and restore a DFS namespace? One of the most useful applications of dfsutil is saving and restoring a DFS namespace. Saving is accomplished by exporting the DFS configuration data to a script file. Restoration is done by importing a script file. Script files need not be generated by exporting an existing DFS. They can be useful in building a new DFS as well. For more information on exporting a DFS to a script file see   REF _Ref480715255 \r \h  2.3.2 For more information on importing script files see   REF _Ref480714962 \r \h  For more information on creating your own script files see   REF _Ref480715085 \w \h  What are the dfsutil scripting commands and how are they used? ADDROOT:<DomDfsName> SERVER:<ServerName> SHARE:<ShareName> COMMENT:<Comment> ADDROOT creates a Standalone or Domain DFS root. For a standalone root, leave the DomDfsName blank. The servername and sharename tell dfsutil where to create the root. The comment parameter is optional. If included, the comment should be enclosed in quotes. REMROOT:<DomDfsName> SERVER:<ServerName> SHARE:<ShareName> REMROOT removes a Standalone or Domain DFS root. For a standalone root, leave the DomDfsName blank. The servername and sharename tell dfsutil which root to remove LOAD:  HYPERLINK "\\\\DfsName\\DfsShare"  \\DfsName\DfsShare LOAD will cause dfsutil to load the DFS configuration data for a DFS into memory. If you want to modify a DFS you need to load the configuration data before modifying it. WARNING: If you do not load the configuration data before modifying it, you may overwrite previously existing data. The overwritten data cannot be recovered. SAVE: SAVE will store the configuration data for a DFS. This should be called at the end of your script file. You may wish to simply test that your script file is correctly formed without actually making any changes to the actual DFS. In this case, do not include a SAVE command. The configuration data will be created and any relevant errors will be generated, but the DFS will not be modified. After you have modified and saved DFS configuration data you will need to reinitialize the DFS service on the roots of the DFS. LINK:<Linkname> /MAP ADD:<Alternate> GUID:<Guid> SHORTPREFIX:<pref>              COMMENT:<Comment> STATE:<state>   LINK will create or modify the DFS link called Linkname. To create a link, specify the /MAP option. Use the ADD option to create alternates for the link. (note: ADD: must appear on a separate line.) SHORTPREFIX allows you to specify the short (8.3) name for the link. COMMENT specifies a comment to associate with the link. The comment should be enclosed in quotes. The GUID is a globally unique identifier for the link. You will probably only use this in scripts generated with the export command. If you do not specify a guid, one will be generated for you. When you create new link information with dfsutil, site information is not automatically generated and added to the DFS configuration data. The site information must be explicitly added using the SITE command (  REF _Ref481385574 \r \h   \* MERGEFORMAT  3.6.6 SITE:<machine> /MAP ADD:<sitename>   or  SITE:<machine> /UNMAP  SITE lets you specify sites to which a machine belongs. Use /MAP to create a site mapping and /UNMAP to remove it. This command will only affect the DFS configuration data. It will not affect other site information. COMMENTS Any line of a script file that begins with // will be treated as a comment and ignored. Example Script: stdalone.dfs Stdalone.dfs // this file creates a standalone DFS on the machine RootServer. // create the root at \\RootServer\software // because this is a standalone DFS we leave the DomDfsName blank ADDROOT: SERVER:RootServer SHARE:software COMMENT: Software distribution point // before we add to the configuration data we load in the existing data LOAD:\\RootServer\software // now create some new links // note that the add commands are on separate lines LINK:ms-word /MAP COMMENT: MS Word ADD:\\office\word  LINK:Encarta /MAP COMMENT: Encarta ADD:\\products\Encarta // now that we have added the new data, save it back. // without this command, none of the above changes would show up in the DFS // note the colon after the word save. This is crucial. SAVE: Example Script: update.dfs Update.dfs // this file adds new links and root replicas to an existing domain DFS // first we load the existing DFS configuration data LOAD:\\MyDomain\MyDfs // add a new root replica ADDROOT:MyDfs SERVER:MyServer Share:RootShare COMMENT: Domain DFS root alternate // add some new links // note that the add commands are on separate lines // note that we add two alternates for the link  LINK:instructions /MAP  ADD:\\documents\instructions LINK:foo /MAP  ADD:\\bar\foo  ADD:\\baz\foo // now we update a link which already exists // add a new link alternate LINK:old  ADD:\\oldserv2\share // save our changes // note the colon after the word save. This is crucial. SAVE: How do I get a root server to pick up changes that were made directly to the DS? To get a server to pick up changes made to the DS, you should reinitialize the DFS service on that server. To reinitialize the DFS service use the REINIT command. (  REF _Ref480716407 \r \h  I reinstalled Windows 2000 on a server that was a root and the server no longer thinks it is a root. To repair this problem, first use the UNMAP command (  REF _Ref481231462 \r \h  ) to remove the root replica from the DS data. Once this is done, you will be able to add the server as a root replica with ADDROOT (  REF _Ref480713761 \r \h  My machine is no longer a root, but the information in the DS indicates the machine is a root. To remove the root information from the DS, use the UNMAP command. (  REF _Ref481231179 \r \h  PAGE   PAGE   PAGE   Microsoft Corp. Company Confidential
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\lfnmedia-ext.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Long Filenames Design TitleLong Filenames Design billkru Normal.dot Dan Lovinger Microsoft Word 9.0@\\red-prn-13\CORP0129 Ne03: winspool HP LaserJet 8100 Series PS \\red-prn-13\CORP0129 Letter \\red-prn-13\CORP0129 Lettermf43E $:I4g I~v:c sFT["i NUN`eKC ~h,j. _C<P@Wj HO2Vd M36|,+ ?DW{. g[Xgw W_h[U 2h`xD <?0u29p ]IohUjBohC MrA]rI aa~xd Oz{6mvMicrosoft Word Picture MSWordDoc Word.Picture.8Microsoft TitleDan Lovinger Normal.dot Dan Lovinger Microsoft Word 9.0FstClusHi Access Modified Creation Modified FstClusLo File Size Creation Time h/m/sWindows FAT: Long Name On-Media Format Specification Revision: Revision Date: November 21, 2000 Send comments to:  Microsoft Corporation Table of Contents toc \o Overview  PAGEREF _Toc499450111 \h  Design Goals For the Addition of Long Names to the FAT File System  PAGEREF _Toc499450112 \h  Structure of a Short Directory Entry  PAGEREF _Toc499450113 \h  Identifying a Long Directory Entry  PAGEREF _Toc499450114 \h  Structure of a Long Directory Entry  PAGEREF _Toc499450115 \h  Organization and Association of Short & Long Directory Entries  PAGEREF _Toc499450116 \h  Storage of a Long-Name Within Long Directory Entries  PAGEREF _Toc499450117 \h  Name Limits and Character Sets  PAGEREF _Toc499450118 \h  Short Directory Entries  PAGEREF _Toc499450119 \h  Long Directory Entries  PAGEREF _Toc499450120 \h  Name Matching In Short & Long Names  PAGEREF _Toc499450121 \h  Naming Conventions and Long Names  PAGEREF _Toc499450122 \h  10.1. The Basis-Name Generation Algorithm  PAGEREF _Toc499450123 \h  10.2. The Numeric-Tail Generation Algorithm  PAGEREF _Toc499450124 \h  10.3. Generating Long Names From 8.3 Names on-Media  PAGEREF _Toc499450125 \h  Effect of Long Directory Entries on Previous Versions of MS-DOS/Windows  PAGEREF _Toc499450126 \h  Validating The Contents of a Directory  PAGEREF _Toc499450127 \h  autonumlgl  Overview Throughout this document a distinction is made between "short" and "long" directory entries.  A "short" directory entry is the current 32-byte directory entry recognized by anyone who is familiar with the on-media format of the FAT file system..  A "long" directory entry is a new type of directory entry that is associated with a "short" directory entry.  A long directory entry contains additional information associated with the file or directory named by the "short" directory entry.  This document describes the on-media format of both short and long directory entries, their organization, their association with one another, and other related information. The principal reason for defining another type of directory entry is to add support for files and directories with names that exceed today's 8.3 naming restrictions. autonumlgl  Design Goals For the Addition of Long Names to the FAT File System In adding long directory entries to the FAT file system it was crucial that their addition to the FAT file system's existing design: symbol 183 \f "Symbol" \s 10 \h Be essentially transparent on earlier versions of MS-DOS.  The primary goal being that existing MS-DOS APIs on previous versions of MS-DOS/Windows do not easily "find" long directory entries.  The only MS-DOS APIs that can "find" long directory entries are the FCB-based-find APIs when used with a full meta-character matching pattern (i.e. *.*) and full attribute matching bits (i.e. matching attributes are FFh).  On post-Windows 95 versions of MS-DOS/Windows, no MS-DOS API can accidentally "find" a single long directory entry. symbol 183 \f "Symbol" \s 10 \h Be located in close physical proximity, on the media, to the short directory entries they are associated with.  As will be evident, long directory entries are immediately contiguous to the short directory entry they are associated with and their existence imposes an unnoticeable performance impact on the file system. symbol 183 \f "Symbol" \s 10 \h If detected by disk maintenance utilities, they do not jeopardize the integrity of existing file data.  Disk maintenance utilities typically do not use MS-DOS APIs to access on-media file-system-specific data structures.  Rather they read physical or logical sector information from the disk and judge for themselves what the directory entries contain.  Based on the heuristics employed in the utilities, the utility may take various steps to "repair" what it perceives to be "damaged" file-system-specific data structures.  Long directory entries were added to the FAT file system in such a way as to not cause the loss of file data if a disk containing long directory entries was "repaired" by a pre-Windows 95-compatible disk utility on a previous version of MS-DOS/Windows. autonumlgl  Structure of a Short Directory Entry For purposes of differentiating them from "long" directory entries, the familiar conventional MS-DOS directory entry is referred to as a "short" directory entry.  The structure of a FAT file system directory entry follows.  EMBED Word.Document.8   Fig. 1 DIR_ENTRY STRUC dir_name db 11 DUP ; 8.3-style name stored in OEM character set dir_attr ; Attributes dir_OS ; Reserved for OS specific use dir_CreateMsec ; Creation millisec - # of 10 millisec intervals in 2 sec create time dir_CreateTime ; Creation time (DOS time format hrs/min/sec - 2 sec granularity) dir_CreateDate ; Creation date (DOS date format) dir_LastAccessDate ; Last accessed date dir_FstClusHi ; High word of this entry s first cluster number (always 0 for a FAT12 or FAT16 volume) dir_ModifyTime ; Last modified time dir_ModifyDate ; Last modified date dir_FstClusLo ; Low word of this entry s first cluster number dir_size ; Size of file in bytes DIR_ENTRY Note that the addition of a "last access date" and "creation date/time" field is new with Windows 95.  The "OS field" is reserved. Currently NT uses a couple of bits in the first directory entry in the root as volume dirty bits.  It also uses a couple of other bits for flagging an optimized directory entry.  Usage of these bits by an OS should cause no functional difference between OSes. All short directory entries, whether they designate volume labels, directories, or files, have an identical structure.  Volume-labels, directories, and files are differentiated from one another by the attribute field within this structure.  Bits 4-3 within the attribute field contain bit flags that are used for differentiating directory entries from one another.  The following values for bits 4-3 indicate the type of file system object that the directory entry designates. ;            Bit 4       Bit 3 A_VOL A_DIR A_FILE Note that a combination resulting in an attribute value of 18h is missing.  This combination would specify an entry that was both a volume-label and a directory, which would be contradictory.  Suppose one were to set these bits in an existing directory entry "manually" via a disk editor, since there is no way to do this with a MS-DOS API, and subsequently use a MS-DOS disk utility on a disk so modified.  What would occur?  Depending on the disk utility, file-system-specific information, like a cluster chain, or file data is usually destroyed by the utility.  This is because such an object is not "valid" as far as some disk utilities are concerned and they will take steps to "fix" the problem. The following values for bits 5 and 2-0 indicate miscellaneous attributes that a directory entry may also possess.  The MS-DOS APIs: Get/SetAttribute allow any or all of these attributes to be changed. A_RD_ONLY ; Read-only file/directory flag. A_HID ; Hidden flag A_SYS ; System flag A_ARC ; Archive flag There is an exception to this rule: a volume-label cannot have system, hidden, and read-only attributes associated with it.  There is no MS-DOS API that allows an application to create or modify the attributes of a volume-label, such that the system, hidden, and read-only attribute bits are set.  When searching for a volume label, any short directory entry that has a volume label attribute and appears anywhere other than the root directory, is ignored by MS-DOS.  These properties are used in conjunction with long directory entries. Depending on the file system object, some of the fields in a directory entry are not relevant.  For example, a volume-label has neither a "first cluster" nor "file size" (i.e. the dir_first_cluster and dir_file_size fields are set to zero).  A directory has no "file size" (i.e. the dir_file_size field is set to zero) but does have a "first cluster". autonumlgl  Identifying a Long Directory Entry In order to meet the goals of locality-of-access and transparency, the long directory entry is defined as a short directory entry with a special attribute.  A long directory entry is a directory entry in which the attribute field has a value of: A_LONG ; Same as (A_RD_ONLY | A_HID | A_SYS | A_VOL) A mask for determining whether an entry is a long-name sub-component should also be defined: A_LONG_MASK ; Same as (A_RD_ONLY | A_HID | A_SYS | A_VOL | A_DIR | A_ARC) When such a directory entry is encountered it is given special treatment by the file system.  It is treated as part of a set of directory entries that are associated with a single short directory entry. autonumlgl  Structure of a Long Directory Entry A directory entry which has an attribute of A_LONG has a structure which differs substantially from a conventional short directory entry. The structure of a long directory entry containing components of a long-name follows. Fig. 2 LONGNAME_ENTRY STRUC ldir_ord ; The order of this entry in the sequence of long dir entries  ; associated with the short dir entry at the end of the long dir set. ldir_name1 db 10 dup ; Characters 1-5 of the long-name sub-component in this dir entry. ldir_attr ; Attributes - must be A_LONG. ldir_type ; If zero, indicates a directory entry which is a sub-component of a ; long name.  NOTE: Other values reserved for future extensions. ; Non-zero implies other dirent types. ldir_chksum ; Checksum of name in the short dir entry at the end of the long dir set. ldir_name2 db 12 dup ; Characters 6-11 of the long-name sub-component in this dir entry. ldir_first_clust ; Must be ZERO. This is an artifact of the FAT "first cluster" and must be  ; zero for compatibility with existing disk utilities.  It's meaningless in the  ; context of a long dir entry. ldir_name3 db 4  dup (?) ; Characters 12-13 of the long-name sub-component in this dir entry. LONGNAME_ENTRY Flags used in the ldir_ord field: LAST_LONG_ENTRY equ   01000000b ; Indicates the last long dir entry in a set of long dir entries.  Used to  ; determine if a set of long dir entries has been truncated by a disk utility. autonumlgl  Organization and Association of Short & Long Directory Entries A set of long entries is always associated with a short entry which they always immediately precede.  Long entries are paired with short entries for one reason: only short directory entries are visible to previous versions of MS-DOS/Windows.  Without a short entry to accompany it, a long directory entry would be completely invisible on previous versions of MS-DOS/Windows.  A long entry never legally exists all by itself.  If long entries are found without being paired with a valid short entry, they are termed orphans.  Figure 4 depicts a set of n long directory entries associated with it's single short entry. Long entries always immediately precede and are physically contiguous with,  the short entry they are associated with.  The file system makes a few other checks to ensure that a set of long entries are actually associated with a short entry. Fig. 4 First, every member of a set of long entries is uniquely numbered and the last member of the set is or'd with a flag indicating that it is, in fact, the last member of the set.  The ldir_ord field is used to make this determination.  The first member of a set has an ldir_ord value of one.  The nth long member of the set has a value of (n OR LAST_LONG_ENTRY).  Note that the ldir_ord field cannot have values of 0xE5 or 0x00.  These values have always been used by the file system to indicate a "free" directory entry, or the "last" directory entry in a cluster.  Values for ldir_ord do not take on these two values over their range.  Values for ldir_ord must run from  1 to (n OR LAST_LONG_ENTRY).  If they do not, the long entries are assumed to be "damaged" and are treated as orphans by the file system. Second, an 8-bit checksum is computed on the name contained in the short directory entry at the time the short and long directory entries are created.  All 11 characters of the name in the short entry are used in the checksum calculation.  The check sum is placed in every long entry.  If any of the check sums in the set of long entries do not agree with the computed checksum of the name contained in the short entry, then the long entries are treated as orphans.  This can occur if a disk containing long and short entries is taken to a previous version of MS-DOS/Windows and only the short name of a file or directory with a long entries is renamed. The algorithm, implemented in C, for computing the checksum is: //----------------------------------------------------------------------------------- ChkSum() Returns an unsigned byte checksum computed on an unsigned byte array.  The array must be 11 bytes long and is assumed to contain a name stored in the format of a MS-DOS directory entry. Passed: pFcbName Pointer to an unsigned byte array assumed to be 11 bytes long. Returns: An 8-bit unsigned checksum of the array pointed to by pFcbName. //----------------------------------------------------------------------------------- unsigned char ChkSum (unsigned char *pFcbName) short FcbNameLen; unsigned char Sum; Sum = 0; for (FcbNameLen=11; FcbNameLen!=0; FcbNameLen--) { // NOTE: The _rotr should be an unsigned char rotate right Sum = _rotr(Sum, 1) + *pFcbName++; return (Sum); As a consequence of this pairing, the short directory entry serves as the structure which contains fields like: last access date, creation time, creation date, first cluster, and size.  It also holds a name which is visible on previous versions of MS-DOS/Windows.  The long directory entries are free to contain new information and need not replicate information already available in the short entry.  Principally, the long entries contain the long name of a file.  The name contained in a short entry which is associated with a set of long entries is termed the alias name, or simply alias, of the file. autonumlgl  Storage of a Long-Name Within Long Directory Entries A long-name can consist of more characters than can fit in a single long directory entry.  When this occurs the name is stored in more than one long entry.  In any event, the name fields themselves within the long entries are disjoint.  The following example is provided to illustrate how a long-name is stored across several long directory entries.  Names are also NUL terminated and padded with 0xFFFF characters in order to detect corruption of long name fields by errant disk utilities.  A name that fits exactly in a n long directory entries (i.e. is an integer multiple of 13) is not NUL terminated and not padded with 0xFFFFs. Suppose a file is created with the name: "The quick brown.fox".  The following example illustrates how the name is packed into long and short directory entries.  Most fields in the directory entries are also filled in as well. The heuristics used to "auto-generate" a short name from a long name are explained in a later section. autonumlgl  Name Limits and Character Sets autonumlgl  Short Directory Entries Short names are limited to 8 characters followed by an optional period (.) and extension of up to 3 characters.  The total path length of a short name cannot exceed 80 characters (64 char path + 3 drive letter + 12 for 8.3 name + NUL) including the trailing NUL.  The characters may be any combination of letters, digits, or characters with code point values greater than 127.  The following special characters are also allowed: $   %   '   -   _   @   ~    `   !   (    )   {   }  ^  #  & Names are stored in a short directory entry in the OEM code page that the system is configured for at the time the directory entry is created.  Short directory entries remain in OEM for compatibility with previous versions of MS-DOS/Windows.  OEM characters are single 8-bit characters or can be DBCS character pairs for certain code pages. Short names passed to the file system are always converted to upper case and their original case value is lost.  One problem that is generally true of most OEM code pages is that they map lower to upper case extended characters in a non-unique fashion.  That is, they map multiple extended characters to a single upper case character.  This creates problems because it does not preserve the information that the extended character provides.  This mapping also prevents the creation of some file names that would normally differ, but because of the mapping to upper case they become the same file name.   autonumlgl  Long Directory Entries Long names are limited to 255 characters, not including the trailing NUL.  The total path length of a long name cannot exceed 260 characters, including the trailing NUL.  The characters may be any combination of those defined for short names with the addition of the period (.) character used multiple times within the long name.  A space is also a valid character in a long name as it always has been for a short name.  However, in short names it typically is not used.  The following six special characters are now allowed in a long name.  They are not legal in a short name. +   ,   ;   =   [   ] Embedded spaces within a long name are allowed.  Leading and trailing spaces in a long name are ignored.  Leading and embedded periods are allowed in a name and are stored in the long name.  Trailing periods are ignored. Long names are stored in long directory entries in UNICODE.  UNICODE characters are 16-bit characters.  It is not be possible to store UNICODE in short directory entries since the names stored there are 8-bit characters or DBCS characters. Long names passed to the file system are not converted to upper case and their original case value is preserved.  UNICODE solves the case mapping problem prevalent in some OEM code pages by always providing a translation for lower case characters to a single, unique upper case character.   autonumlgl  Name Matching In Short & Long Names The names contained in the set of all short directory entries is termed the "short name space".  The names contained in the set of all long directory entries is termed the "long name space".  Together, they form a single unified name space in which no duplicate names can exist.  That is: any name within a specific directory, whether it is a short name or a long name, can occur only once in the name space.  Furthermore, although the case of a name is preserved in a long name, no two names can have the same name although the names on the media actually differ by case.  That is names like "foobar" cannot be created if there is already a short entry with a name of "FOOBAR" or a long name with a name of "FooBar".  Again, this behavior follows the Win32 specification. All types of search operations within the file system (i.e. find, open, create, delete, rename) are case-insensitive.  An open of "FOOBAR" will open either "FooBar" or "foobar" if one or the other exists.  A find using "FOOBAR" as a pattern will find the same files mentioned.  The same rules are also true for extended characters which are accented.  Internally, the file system converts all names passed to it into UNICODE, converts names on media to UNICODE, and compares the names in UNICODE during search operations.  Again, all comparisons performed during any file system search operation are case-insensitive. A short name search operation checks only the names of the short directory entries for a match.  A long name search operation checks both the long and short directory entries.  As the file system traverses a directory, it caches the long-name sub-components contained in long directory entries.  As soon as a short directory entry is encountered that is associated with the cached long name, the long name search operation will check the cached long name first and then the short name for a match. If the long name search operation is the long name find API, it will return both the long and short name in the WIN32 find buffer.  The long and short names will be returned in ANSI by default for a WIN32 app unless it specified OEM.    The long and short names will be returned in OEM for WIN16 and MS-DOS apps.  When a character on the media, whether it is stored in the OEM character set or in UNICODE,  cannot be translated into the appropriate character in the OEM or ANSI code page, it is always "translated" to the "_" (underscore) character.  This character is the same in all OEM code pages and ANSI.  This is also the same "translation" behavior that Windows NT exhibits. autonumlgl  Naming Conventions and Long Names The long name APIs allow the caller to specify the long name to be assigned to a file or directory.  They do not allow the caller to independently specify the short name.  The reason for this prohibition is that the short and long names are considered to be a single unified name space.  As should be obvious the file system's name space does not support duplicate names.  In other words, a long name for a file may not contain the same name, ignoring case, as the short name in a different file.  This restriction is intended to prevent confusion among users, and applications, regarding the proper name of a file or directory.  To make this restriction transparent, whenever a long name is created and the no matching long name exists,  the short name is automatically generated from the long name in such a way that it does not collide with an existing short name.   The technique chosen to auto-generate short names from long names is modeled after Windows NT.  Auto-generated short names are composed of the basis-name and an optional numeric-tail. autonumlgl  The Basis-Name Generation Algorithm The basis-name generation algorithm is outlined below.  This is not the actual algorithm but merely serves to illustrate how short names are auto-generated from long names. The UNICODE name passed to the file system is converted to upper case. The upper cased UNICODE name is converted to OEM. (the uppercased UNICODE glyph does not exist as an OEM glyph in the OEM code page) (the OEM glyph is invalid in an 8.3 name) Replace the glyph to an OEM '_' (underscore) character. Set a "lossy conversion" flag. Strip all leading and embedded spaces from the long name. Strip all leading periods from the long name. While (not at end of the long name) (char is not a period) (total chars copied < 8) Copy characters into primary portion of the basis name Insert a dot at the end of the primary components of the basis-name iff the basis name has an extension after the last period in the name. Scan for the last embedded period in the long name. (the last embedded period was found) While (not at end of the long name) (total chars copied < 3) Copy characters into extension portion of the basis name Proceed to numeric-tail generation. autonumlgl  The Numeric-Tail Generation Algorithm (a "lossy conversion" was not flagged) (the long name fits within the 8.3 naming conventions) (the basis-name does not collide with any existing short name) The short name is only the basis-name without the numeric tail. Insert a numeric-tail "~n" to the end of the primary name such that the value of the "~n" is chosen so that the  name thus formed does not collide with any existing short name and that the primary name does not exceed eight  characters in length. The "~n" string can range from "~1" to "~9999999".  The number "n" is chosen so that it is the next number in a sequence of files with similar basis-names.  For example, assume the following short names existed: LETTER~1.DOC and LETTER~2.DOC.  As expected the next auto-generated name of name of this type would be LETTER~3.DOC.  Assume the following short names existed: LETTER~1.DOC,  LETTER~3.DOC.  Again, the next auto-generated name of name of this type would be  LETTER~2.DOC.  However, one absolutely cannot count on this behavior.  In a directory with a very large mix of names of this type, the selection algorithm is optimized for speed and may select another "n" based on the characteristics of short names that end in "~n" and have similar leading name patterns. autonumlgl  Generating Long Names From 8.3 Names on-Media When an 8.3 name API creates a file the long name is, by definition, the same as the 8.3 name even though there are actually no long name directory entries associated with the short name.  When the long-name find API is called and a short directory entry is found that has no associated long directory entries, the find buffer has a primary name that contains the short name from the short directory entry and an alternate name that is NULL. When the long-name find API is called and a short directory entry is found has associated long directory entries, the find buffer has a primary name that contains the long name from the long directory entries and an alternate name that contains the short name from the short directory entry. In either case, any long-name API can use the primary name to access the file or directory thus found.  An application can use this property of the long-name find API to determine whether or not a file or directory has a long name. autonumlgl  Effect of Long Directory Entries on Previous Versions of MS-DOS/Windows The support of long names is most important on the hard disk, however it will be supported on removable media as well.  The implementation provides support for long names without breaking compatibility with the existing FAT format.  A disk can be read by a down level system without any compatibility problems.  An existing disk does not go through a conversion process before it can start using long names.  All of the current files remain unmodified.  The long name directory entries are added when a long name is created.  The addition of a long name to an existing file may require the 8.3 directory entry to be moved if the required adjacent directory entries are not available. The long name entries are as hidden as hidden or system files are on a down level system.  This is enough to keep the casual user from causing problems.  The user can copy the files off using the 8.3 name, and put new files on without any side effects.   The interesting part of this is what happens when the disk is taken to a down level MS-DOS system and the directory is changed.  This can affect the long name entries since the down level system ignores these long names and will not ensure they are properly associated with the 8.3 name. A down level system will only see the long name entries when searching for a label.  On a down level system, the volume label will be incorrectly reported if the true volume label does not come before all of the long name entries in the root directory.  This is because the long name entries also have the volume label bit set.  This is unfortunate, but is not a critical problem. If an attempt is made to remove the volume label, one of the long name directory entries may be deleted.  This would be a rare occurrence.  It is easily detected on a Windows 95 system.  The long name entry will no longer be a valid file entry, since one or more of the long entries is marked as deleted.  If the deleted entry is reused, then the attribute byte will not have the proper value for a long name entry.   If a file is renamed on a down level system, then only the short name will be renamed.  The long name will not be effected.  Since the long and short names must be kept consistent across the name space, it is desirable to have the long name become invalid as a result of this rename.  The checksum of the 8.3 name that is kept in the long name directory provides the ability to detect this type of change.  This checksum will be checked to validate the long name before it is used.  Rename will cause problems only if the renamed 8.3 file name happens to have the same checksum.  The checksum algorithm chosen has a relatively flat distribution across the short name space. This rename of the 8.3 name must also not conflict with any of the long names.  Otherwise a down level system could create a short name in one file that matches a long name, when case is ignored, in a different file.  To prevent this, the automatic creation of an 8.3 name from a long name, that has an 8.3 format, will directly map the long name to the 8.3 name by converting the characters to upper case. If the file is deleted, then the long name is simply orphaned.  If a new file is created, the long name may be incorrectly associated with the new file name.  As in the case of a rename the checksum of the 8.3 name will help prevent this incorrect association. autonumlgl  Validating The Contents of a Directory These guidelines are provided so that disk maintenance utilities can verify individual directory entries for 'correctness' while maintaining compatibility with future enhancements to the directory structure. DO NOT look at the content of directory entry fields marked 'reserved' and assume that, if they are any value other than zero, that they are 'bad'. DO NOT reset the content of directory entry fields marked reserved to zero when they contain non-zero values (under the assumption that they are "bad").  Directory entry fields are designated reserved, rather than must-be-zero.  They should be ignored by your application..  These fields are intended for future extensions of the file system.  By ignoring them an utility can continue to run on future versions of the operating system. DO use the A_LONG attribute first when determining whether a directory entry is a long directory entry or a short directory entry.  The following algorithm is the correct algorithm for making this determinaton: if  (((ldir_attr & A_LONG_MASK) == A_LONG) && (ldir_ord != 0xE5)) /*   Found an active long name sub-component.   */ DO use bits 4 and 3 of a short entry together when determining what type of short directory entry is being inspected.    The following algorithm is the correct algorithm for making this determinaton: if  (((ldir_attr & A_LONG_MASK) != A_LONG) && (ldir_ord != 0xE5)) if        ((dir_attr & (A_DIR | A_VOL)) == 0x00) /*   Found a file.   */ else if ((dir_attr & (A_DIR | A_VOL)) == A_DIR) /*   Found a directory.   */ else if ((dir_attr & (A_DIR | A_VOL)) == A_VOL) /*   Found a volume label.   */ /*   Found an invalid directory entry.   */ DO NOT assume that a non-zero value in the "type" field indicates a bad directory entry.  Do not force the "type" field to zero. Use the "checksum" field as a value to validate the directory entry.  The "first cluster" field is currently being set to zero, though this might change in future. Serial No: 00000000 Russ Arun Microsoft Corporation date  03/01/94 Microsoft Corporation Company Confidential - DO NOT COPY Page  page
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\lfnmedia.doc ===
ۥ-   	                 l                    U                                                         " %          %    %    %   5  
 ?  
       I  L   J  ( r    r    r    r    r    r                                              r  4   /                             c g                                                             




Chicago
FAT: Long Name On-Media Format Specification


Revision:		0.92
Revision Date:		July 19, 1994


Send comments to: 	Microsoft Corporation (Bill Krueger or Russ Arun)
Table of Contents
 toc \o
1.	Overview	2
2.	Design Goals For the Addition of Long Names to the FAT File System	2
3.	Structure of a Short Directory Entry	3
4.	Identifying a Long Directory Entry	4
5.	Structure of a Long Directory Entry	4
6.	Organization and Association of Short & Long Directory Entries	6
7.	Storage of a Long-Name Within Long Directory Entries	7
8.	Name Limits and Character Sets	7
8.1.	Short Directory Entries	7
8.2.	Long Directory Entries	8
9.	Name Matching In Short & Long Names	8
10.	Naming Conventions and Long Names	8
10.1.	The Basis-Name Generation Algorithm	9
10.2.	The Numeric-Tail Generation Algorithm	10
10.3.	Generating Long Names From 8.3 Names on-Media	10
10.4.	WIN32, WIN16, and MS-DOS Application Use of Long-Name APIs	10
11.	Other File System Support of Long Names	11
12.	Effect of Long Directory Entries on Previous Versions of MS-DOS/Windows	11
13.	Validating The Contents of a Directory	13
autonumlgl 	Overview
Throughout this document a distinction is made between "short" and "long" directory entries.  A "short" directory entry is the current 32-byte directory entry recognized by anyone who is familiar with the on-media format of the FAT file system..  A "long" directory entry is a new type of directory entry that is associated with a "short" directory entry.  A long directory entry contains additional information associated with the file or directory named by the "short" directory entry.  This document describes the on-media format of both short and long directory entries, their organization, their association with one another, and other related information.
The principal reason for defining another type of directory entry is to add support for files and directories with names that exceed today's 8.3 naming restrictions.
autonumlgl 	Design Goals For the Addition of Long Names to the FAT File System
In adding long directory entries to the FAT file system it was crucial that their addition to the FAT file system's existing design:
symbol 183 \f "Symbol" \s 10 \h	Be essentially transparent on earlier versions of MS-DOS.  The primary goal being that existing MS-DOS APIs on previous versions of MS-DOS/Windows do not easily "find" long directory entries.  The only MS-DOS APIs that can "find" long directory entries are the FCB-based-find APIs when used with a full meta-character matching pattern (i.e. *.*) and full attribute matching bits (i.e. matching attributes are FFh).  On post-Chicago versions of MS-DOS/Windows, no MS-DOS API can accidentally "find" a single long directory entry.
symbol 183 \f "Symbol" \s 10 \h	Be located in close physical proximity, on the media, to the short directory entries they are associated with.  As will be evident, long directory entries are immediately contiguous to the short directory entry they are associated with and their existence imposes an unnoticeable performance impact on the file system.
symbol 183 \f "Symbol" \s 10 \h	If detected by disk maintenance utilities, they do not jeopardize the integrity of existing file data.  Disk maintenance utilities typically do not use MS-DOS APIs to access on-media file-system-specific data structures.  Rather they read physical or logical sector information from the disk and judge for themselves what the directory entries contain.  Based on the heuristics employed in the utilities, the utility may take various steps to "repair" what it perceives to be "damaged" file-system-specific data structures.  Long directory entries were added to the FAT file system in such a way as to not cause the loss of file data if a disk containing long directory entries was "repaired" by a pre-Chicago-compatible disk utility on a previous version of MS-DOS/Windows.
autonumlgl 	Structure of a Short Directory Entry
For purposes of differentiating them from "long" directory entries, the familiar conventional MS-DOS directory entry is referred to as a "short" directory entry.  The structure of a FAT file system directory entry follows.
embed MSDraw \* mergeformat 
Fig. 1
DIR_ENTRY	STRUC
	dir_name	db 11 DUP	(?)	; 8.3-style name stored in OEM character set
	dir_attr	db	?	; Attributes
	dir_OS	db	?	; Reserved for OS specific use
	dir_CreateMsec	db	?	; Creation millisec - # of 10 millisec intervals in 2 sec create time
	dir_CreateTime	dw	?	; Creation time (DOS time format hrs/min/sec - 2 sec granularity)
	dir_CreateDate	dw	?	; Creation date (DOS date format)
	dir_LastAccessDate	dw	?	; Last accessed date
	dir_EAhandle	dw	?	; Extended Attribute handle (zero for MS-DOS/Windows)
	dir_ModifyTime	dw	?	; Last modified time
	dir_ModifyDate	dw	?	; Last modified date
	dir_first_cluster	dw	?	; First cluster in file's cluster chain
	dir_size	dd	?	; Size of file in bytes
DIR_ENTRY	ENDS

Note that the addition of a "last access date" and "creation date/time" field is new with Chicago.  The "OS field" is reserved. Currently NT uses a couple of bits in the first directory entry in the root as volume dirty bits.  It also uses a couple of other bits for flagging an optimized directory entry.  Usage of these bits by an OS should cause no functional difference between OSes. The EAhandle field is not used by MS-DOS or Windows, but is an artifact of additions that were made to the FAT file system to support other operating systems.
All short directory entries, whether they designate volume labels, directories, or files, have an identical structure.  Volume-labels, directories, and files are differentiated from one another by the attribute field within this structure.  Bits 4-3 within the attribute field contain bit flags that are used for differentiating directory entries from one another.  The following values for bits 4-3 indicate the type of file system object that the directory entry designates.
					;            Bit 4       Bit 3
A_VOL	EQU	08h		; 	0	1
A_DIR	EQU	10h		;	1	0
A_FILE	EQU	00h		;	0	0

Note that a combination resulting in an attribute value of 18h is missing.  This combination would specify an entry that was both a volume-label and a directory, which would be contradictory.  Suppose one were to set these bits in an existing directory entry "manually" via a disk editor, since there is no way to do this with a MS-DOS API, and subsequently use a MS-DOS disk utility on a disk so modified.  What would occur?  Depending on the disk utility, file-system-specific information, like a cluster chain, or file data is usually destroyed by the utility.  This is because such an object is not "valid" as far as some disk utilities are concerned and they will take steps to "fix" the problem.
The following values for bits 5 and 2-0 indicate miscellaneous attributes that a directory entry may also possess.  The MS-DOS APIs: Get/SetAttribute allow any or all of these attributes to be changed.
A_RD_ONLY	EQU	01h		; Read-only file/directory flag.
A_HID	EQU	02h		; Hidden flag
A_SYS	EQU	04h		; System flag
A_ARC	EQU	20h		; Archive flag

There is an exception to this rule: a volume-label cannot have system, hidden, and read-only attributes associated with it.  There is no MS-DOS API that allows an application to create or modify the attributes of a volume-label, such that the system, hidden, and read-only attribute bits are set.  When searching for a volume label, any short directory entry that has a volume label attribute and appears anywhere other than the root directory, is ignored by MS-DOS.  These properties are used in conjunction with long directory entries.
Depending on the file system object, some of the fields in a directory entry are not relevant.  For example, a volume-label has neither a "first cluster" nor "file size" (i.e. the dir_first_cluster and dir_file_size fields are set to zero).  A directory has no "file size" (i.e. the dir_file_size field is set to zero) but does have a "first cluster".
autonumlgl 	Identifying a Long Directory Entry
In order to meet the goals of locality-of-access and transparency, the long directory entry is defined as a short directory entry with a special attribute.  A long directory entry is a directory entry in which the attribute field has a value of:
A_LONG		EQU	0Fh	; Same as (A_RD_ONLY | A_HID | A_SYS | A_VOL)
A mask for determining whether an entry is a long-name sub-component should also be defined:
A_LONG_MASK	EQU	3Fh 	; Same as (A_RD_ONLY | A_HID | A_SYS | A_VOL | A_DIR | A_ARC)
When such a directory entry is encountered it is given special treatment by the file system.  It is treated as part of a set of directory entries that are associated with a single short directory entry.
autonumlgl 	Structure of a Long Directory Entry
A directory entry which has an attribute of A_LONG has a structure which differs substantially from a conventional short directory entry.
The structure of a long directory entry containing components of a long-name follows.

Fig. 2
LONGNAME_ENTRY	STRUC
	ldir_ord	db	?	; The order of this entry in the sequence of long dir entries 				; associated with the short dir entry at the end of the long dir set.
	ldir_name1	db 10 dup	(?)	; Characters 1-5 of the long-name sub-component in this dir entry.
	ldir_attr	db	?	; Attributes - must be A_LONG.
	ldir_type	db	?	; If zero, indicates a directory entry which is a sub-component of a
				; long name.  NOTE: Other values reserved for future extensions.
				; Non-zero implies other dirent types.	ldir_chksum	db	?	; Checksum of name in the short dir entry at the end of the long dir set.
	ldir_name2	db 12 dup	(?)	; Characters 6-11 of the long-name sub-component in this dir entry.
	ldir_first_clust	dw	?	; Must be ZERO. This is an artifact of the FAT "first cluster" and must be 				; zero for compatibility with existing disk utilities.  It's meaningless in the 				; context of a long dir entry.
	ldir_name3	db 4  dup (?)	; Characters 12-13 of the long-name sub-component in this dir entry.
LONGNAME_ENTRY	ENDS
Flags used in the ldir_ord field:
LAST_LONG_ENTRY	equ   01000000b	; Indicates the last long dir entry in a set of long dir entries.  Used to 				; determine if a set of long dir entries has been truncated by a disk utility.
autonumlgl 	Organization and Association of Short & Long Directory Entries
A set of long entries is always associated with a short entry which they always immediately precede.  Long entries are paired with short entries for one reason: only short directory entries are visible to previous versions of MS-DOS/Windows.  Without a short entry to accompany it, a long directory entry would be completely invisible on previous versions of MS-DOS/Windows.  A long entry never legally exists all by itself.  If long entries are found without being paired with a valid short entry, they are termed orphans.  Figure 4 depicts a set of n long directory entries associated with it's single short entry.
Long entries always immediately precede and are physically contiguous with,  the short entry they are associated with.  The file system makes a few other checks to ensure that a set of long entries are actually associated with a short entry.

Fig. 4
First, every member of a set of long entries is uniquely numbered and the last member of the set is or'd with a flag indicating that it is, in fact, the last member of the set.  The ldir_ord field is used to make this determination.  The first member of a set has an ldir_ord value of one.  The nth long member of the set has a value of (n OR LAST_LONG_ENTRY).  Note that the ldir_ord field cannot have values of 0xE5 or 0x00.  These values have always been used by the file system to indicate a "free" directory entry, or the "last" directory entry in a cluster.  Values for ldir_ord do not take on these two values over their range.  Values for ldir_ord must run from  1 to (n OR LAST_LONG_ENTRY).  If they do not, the long entries are assumed to be "damaged" and are treated as orphans by the file system.
Second, an 8-bit checksum is computed on the name contained in the short directory entry at the time the short and long directory entries are created.  All 11 characters of the name in the short entry are used in the checksum calculation.  The check sum is placed in every long entry.  If any of the check sums in the set of long entries do not agree with the computed checksum of the name contained in the short entry, then the long entries are treated as orphans.  This can occur if a disk containing long and short entries is taken to a previous version of MS-DOS/Windows and only the short name of a file or directory with a long entries is renamed.
An example algorithm, implemented in C, for computing the checksum is:
	//-----------------------------------------------------------------------------------	//	ChkSum()	//			Returns an unsigned byte checksum computed on an unsigned byte	//			array.  The array must be 11 bytes long and is assumed to contain	//			a name stored in the format of a MS-DOS directory entry.	//	Passed:	pFcbName	Pointer to an unsigned byte array assumed to be 11 bytes long.	//	Returns:	Sum		An 8-bit unsigned checksum of the array pointed to by pFcbName.	//-----------------------------------------------------------------------------------	unsigned char ChkSum (unsigned char *pFcbName)	{		short FcbNameLen;		unsigned char Sum;		Sum = 0;		for (FcbNameLen=11; FcbNameLen!=0; FcbNameLen--) {			// NOTE: The _rotr should be an unsigned char rotate right			Sum = _rotr(Sum, 1) + *pFcbName++;		}		return (Sum);	}
As a consequence of this pairing, the short directory entry serves as the structure which contains fields like: last access date, creation time, creation date, first cluster, and size.  It also holds a name which is visible on previous versions of MS-DOS/Windows.  The long directory entries are free to contain new information and need not replicate information already available in the short entry.  Principally, the long entries contain the long name of a file.  The name contained in a short entry which is associated with a set of long entries is termed the alias name, or simply alias, of the file.
autonumlgl 	Storage of a Long-Name Within Long Directory Entries
A long-name can consist of more characters than can fit in a single long directory entry.  When this occurs the name is stored in more than one long entry.  In any event, the name fields themselves within the long entries are disjoint.  The following example is provided to illustrate how a long-name is stored across several long directory entries.  Names are also NUL terminated and padded with 0xFFFF characters in order to detect corruption of long name fields by errant disk utilities.  A name that fits exactly in a n long directory entries (i.e. is an integer multiple of 13) is not NUL terminated and not padded with 0xFFFFs.
Suppose a file is created with the name: "The quick brown.fox".  The following example illustrates how the name is packed into long and short directory entries.  Most fields in the directory entries are also filled in as well.

The heuristics used to "auto-generate" a short name from a long name are explained in a later section.
autonumlgl 	Name Limits and Character Sets
autonumlgl 	Short Directory Entries
Short names are limited to 8 characters followed by an optional period (.) and extension of up to 3 characters.  The total path length of a short name cannot exceed 80 characters (64 char path + 3 drive letter + 12 for 8.3 name + NUL) including the trailing NUL.  The characters may be any combination of letters, digits, or characters with code point values greater than 127.  The following special characters are also allowed:
$   %   '   -   _   @   ~    `   !   (    )   {   }  ^  #  &
Names are stored in a short directory entry in the OEM code page that the system is configured for at the time the directory entry is created.  Short directory entries remain in OEM for compatibility with previous versions of MS-DOS/Windows.  OEM characters are single 8-bit characters or can be DBCS character pairs for certain code pages.
Short names passed to the file system are always converted to upper case and their original case value is lost.  One problem that is generally true of most OEM code pages is that they map lower to upper case extended characters in a non-unique fashion.  That is, they map multiple extended characters to a single upper case character.  This creates problems because it does not preserve the information that the extended character provides.  This mapping also prevents the creation of some file names that would normally differ, but because of the mapping to upper case they become the same file name.  
autonumlgl 	Long Directory Entries
Long names are limited to 255 characters, not including the trailing NUL.  The total path length of a long name cannot exceed 260 characters, including the trailing NUL.  The characters may be any combination of those defined for short names with the addition of the period (.) character used multiple times within the long name.  A space is also a valid character in a long name as it always has been for a short name.  However, in short names it typically is not used.  The following six special characters are now allowed in a long name.  They are not legal in a short name.
+   ,   ;   =   [   ]
Embedded spaces within a long name are allowed.  Leading and trailing spaces in a long name are ignored. 
Leading and embedded periods are allowed in a name and are stored in the long name.  Trailing periods are ignored.
Long names are stored in long directory entries in UNICODE.  UNICODE characters are 16-bit characters.  It is not be possible to store UNICODE in short directory entries since the names stored there are 8-bit characters or DBCS characters.
Long names passed to the file system are not converted to upper case and their original case value is preserved.  UNICODE solves the case mapping problem prevalent in some OEM code pages by always providing a translation for lower case characters to a single, unique upper case character.  
autonumlgl 	Name Matching In Short & Long Names
The names contained in the set of all short directory entries is termed the "short name space".  The names contained in the set of all long directory entries is termed the "long name space".  Together, they form a single unified name space in which no duplicate names can exist.  That is: any name within a specific directory, whether it is a short name or a long name, can occur only once in the name space.  Furthermore, although the case of a name is preserved in a long name, no two names can have the same name although the names on the media actually differ by case.  That is names like "foobar" cannot be created if there is already a short entry with a name of "FOOBAR" or a long name with a name of "FooBar".  Again, this behavior follows the Win32 specification.
All types of search operations within the file system (i.e. find, open, create, delete, rename) are case-insensitive.  An open of "FOOBAR" will open either "FooBar" or "foobar" if one or the other exists.  A find using "FOOBAR" as a pattern will find the same files mentioned.  The same rules are also true for extended characters which are accented.  Internally, the file system converts all names passed to it into UNICODE, converts names on media to UNICODE, and compares the names in UNICODE during search operations.  Again, all comparisons performed during any file system search operation are case-insensitive.
A short name search operation checks only the names of the short directory entries for a match.  A long name search operation checks both the long and short directory entries.  As the file system traverses a directory, it caches the long-name sub-components contained in long directory entries.  As soon as a short directory entry is encountered that is associated with the cached long name, the long name search operation will check the cached long name first and then the short name for a match.
If the long name search operation is the long name find API, it will return both the long and short name in the WIN32 find buffer.  The long and short names will be returned in ANSI by default for a WIN32 app unless it specified OEM.    The long and short names will be returned in OEM for WIN16 and MS-DOS apps.  When a character on the media, whether it is stored in the OEM character set or in UNICODE,  cannot be translated into the appropriate character in the OEM or ANSI code page, it is always "translated" to the "_" (underscore) character.  This character is the same in all OEM code pages and ANSI.  This is also the same "translation" behavior that Windows NT exhibits.
autonumlgl 	Naming Conventions and Long Names
The long name APIs allow the caller to specify the long name to be assigned to a file or directory.  They do not allow the caller to independently specify the short name.  The reason for this prohibition is that the short and long names are considered to be a single unified name space.  As should be obvious the file system's name space does not support duplicate names.  In other words, a long name for a file may not contain the same name, ignoring case, as the short name in a different file.  This restriction is intended to prevent confusion among users, and applications, regarding the proper name of a file or directory.  To make this restriction transparent, whenever a long name is created and the no matching long name exists,  the short name is automatically generated from the long name in such a way that it does not collide with an existing short name.  
The technique chosen to auto-generate short names from long names is modeled after Windows NT.  Auto-generated short names are composed of the basis-name and an optional numeric-tail.
autonumlgl 	The Basis-Name Generation Algorithm
The basis-name generation algorithm is outlined below.  This is not the actual algorithm but merely serves to illustrate how short names are auto-generated from long names.
1.	The UNICODE name passed to the file system is converted to upper case.
2.	The upper cased UNICODE name is converted to OEM.if		(the uppercased UNICODE glyph does not exist as an OEM glyph in the OEM code page)	or	(the OEM glyph is invalid in an 8.3 name){	Replace the glyph to an OEM '_' (underscore) character.	Set a "lossy conversion" flag.}
3.	Strip all leading and embedded spaces from the long name.
4.	Strip all leading periods from the long name.
5.	While		(not at end of the long name)	and	(char is not a period)	and	(total chars copied < 8){	Copy characters into primary portion of the basis name}
6.	Insert a dot at the end of the primary components of the basis-name iff the basis name has an extension after the last period in the name.
7.	Scan for the last embedded period in the long name.If	(the last embedded period was found){	While		(not at end of the long name)		and	(total chars copied < 3)	{		Copy characters into extension portion of the basis name	}}
Proceed to numeric-tail generation.
autonumlgl 	The Numeric-Tail Generation Algorithm
	If			(a "lossy conversion" was not flagged)	and	(the long name fits within the 8.3 naming conventions)	and	(the basis-name does not collide with any existing short name){	The short name is only the basis-name without the numeric tail.}else{	Insert a numeric-tail "~n" to the end of the primary name such that the value of the "~n" is chosen so that the 	name thus formed does not collide with any existing short name and that the primary name does not exceed eight 	characters in length.}
The "~n" string can range from "~1" to "~9999999".  The number "n" is chosen so that it is the next number in a sequence of files with similar basis-names.  For example, assume the following short names existed: LETTER~1.DOC and LETTER~2.DOC.  As expected the next auto-generated name of name of this type would be LETTER~3.DOC.  Assume the following short names existed: LETTER~1.DOC,  LETTER~3.DOC.  Again, the next auto-generated name of name of this type would be  LETTER~2.DOC.  However, one absolutely cannot count on this behavior.  In a directory with a very large mix of names of this type, the selection algorithm is optimized for speed and may select another "n" based on the characteristics of short names that end in "~n" and have similar leading name patterns.
autonumlgl 	Generating Long Names From 8.3 Names on-Media
When an 8.3 name API creates a file the long name is, by definition, the same as the 8.3 name even though there are actually no long name directory entries associated with the short name.  When the long-name find API is called and a short directory entry is found that has no associated long directory entries, the find buffer has a primary name that contains the short name from the short directory entry and an alternate name that is NULL.
When the long-name find API is called and a short directory entry is found has associated long directory entries, the find buffer has a primary name that contains the long name from the long directory entries and an alternate name that contains the short name from the short directory entry.
In either case, any long-name API can use the primary name to access the file or directory thus found.  An application can use this property of the long-name find API to determine whether or not a file or directory has a long name.
autonumlgl 	WIN32, WIN16, and MS-DOS Application Use of Long-Name APIs
WIN16 and MS-DOS applications can use the long-name int 21 APIs.  When a WIN16 or a MS-DOS app passes a name to, or receives a name from,  the long-name APIs, it passes and receives the name in the character set of the OEM code page that is active for the WIN16 or MS-DOS application.  
The WIN32 file I/O APIs pass and receive names from the file system in ANSI by default.  However, the WIN32 file I/O APIs provide a mechanism for specifying OEM as the character through the use of the SetFileAPIsToOem call.  Once this call is made the WIN32 API for the thread making the SetFileAPIsToOem will use the OEM character set from that point forward.  There is no WIN32 API to set the file I/O character set back to ANSI.
Note that a WIN16 or MS-DOS application may not be able to properly display a long-name created by a WIN32 application in all cases.  This occurs when a WIN32 application creates a long-name using a glyph available in the ANSI character set but not in the OEM character set.  It is generally not possible to display all ANSI characters in all OEM code pages.  Most notably, the ANSI character set used by Windows contains full upper and lower case equivalents of "accented" European characters.  Not all OEM code pages do this.  Further, the ANSI character set contains certain special glyphs, for example the copyright glyph, that simply don't exist in most OEM code pages.  The converse is also true.   A WIN32 application may not be able to properly display a long-name in all cases.  This occurs when a WIN16 or MS-DOS application creates a long-name using a glyph available in the OEM character set but not in the ANSI character set.  For example, a name created by a WIN16 or MS-DOS application containing "line drawing" characters which do not exist as ANSI characters could not be displayed by a WIN32 application if it were using the ANSI character set in its file I/O APIs.  Again, when such a character is encountered, it is replaced with the "_" (underscore) character in the ANSI char set.
autonumlgl 	Other File System Support of Long Names
Although long file names will be supported in the protected mode FAT file systems in Chicago, other file systems may be accessed by Chicago that may not support long file names.  The most common cases will be Microsoft's Flash File System, and Microsoft's real-mode MSCDEX File System.  Microsoft's 32-bit CDFS File System does support both long and short names provided the CD-ROM mounted in a drive being serviced by CDFS contains long names.  Some non-Microsoft networks do support long names and these will be supported in Chicago.
There are three cases of interest:
1.	File systems which store and retrieve 8.3 names only.A file system that only supports 8.3 names, such as MS-Flash, handles the 8.3 name APIs as expected.  When a long-name API is used to access a file, the API is mapped into its corresponding 8.3 API if and only if the name passed is a valid 8.3 name.  If the name is longer than 8.3, an error is returned to the caller.  The long name will not be passed to this file system since it would likely truncate the name in unpredictable ways and not return an error.  Lower case characters may be passed in the name.  However, they are converted to uppercase by the IFS manager before being passed to the to the relevant file system.  
2.	File systems which store and retrieve long names only.The HPFS file system is an example of a file system that only supports long names (i.e. does not support a dual short & long name for a file).  The results of an 8.3 name API request to a long name only file system will depend on the particular file system.  For HPFS all valid 8.3 file names will be handled as expected.  These APIs will be able to access all of the files that have a valid 8.3 file name.  The long names, those that do not fit in the 8.3 format, will not be visible through these APIs.  The long name APIs will be able to access all files on the file system.  The one difference will be in the handling of the long name find API.  The WIN32 find API returns both the long and 8.3 name for a file.  On a long name only file system the 8.3 file name is not defined, therefore the WIN32 find API must allow the returned short name to be undefined.  This is not a change in the WIN32 find API return structure, it simply means that a NULL string may be returned for the short name.
3.	File systems which store and retrieve both long and 8.3 names.The 32-bit FAT and CDFS file systems, which are an integral part of Chicago, are examples of this type of file system.  They accept mixed long and short names through long name APIs and short names only through short name APIs.
An application should determine whether a file system supports long and short name storage and retrieval on a specific drive.  The GetVolInfo API is intended for this purpose.  It provides other useful information about a volume mounted in a drive as well.
autonumlgl 	Effect of Long Directory Entries on Previous Versions of MS-DOS/Windows
The support of long names is most important on the hard disk, however it will be supported on removable media as well.  The implementation provides support for long names without breaking compatibility with the existing FAT format.  A disk can be read by a down level system without any compatibility problems.  An existing disk does not go through a conversion process before it can start using long names.  All of the current files remain unmodified.  The long name directory entries are added when a long name is created.  The addition of a long name to an existing file may require the 8.3 directory entry to be moved if the required adjacent directory entries are not available.
The long name entries are as hidden as hidden or system files are on a down level system.  This is enough to keep the casual user from causing problems.  The user can copy the files off using the 8.3 name, and put new files on without any side effects.  
The interesting part of this is what happens when the disk is taken to a down level MS-DOS system and the directory is changed.  This can affect the long name entries since the down level system ignores these long names and will not ensure they are properly associated with the 8.3 name.
A down level system will only see the long name entries when searching for a label.  On a down level system, the volume label will be incorrectly reported if the true volume label does not come before all of the long name entries in the root directory.  This is because the long name entries also have the volume label bit set.  This is unfortunate, but is not a critical problem.
If an attempt is made to remove the volume label, one of the long name directory entries may be deleted.  This would be a rare occurrence.  It is easily detected on a Chicago system.  The long name entry will no longer be a valid file entry, since one or more of the long entries is marked as deleted.  If the deleted entry is reused, then the attribute byte will not have the proper value for a long name entry.  
If a file is renamed on a down level system, then only the short name will be renamed.  The long name will not be effected.  Since the long and short names must be kept consistent across the name space, it is desirable to have the long name become invalid as a result of this rename.  The checksum of the 8.3 name that is kept in the long name directory provides the ability to detect this type of change.  This checksum will be checked to validate the long name before it is used.  Rename will cause problems only if the renamed 8.3 file name happens to have the same checksum.  The checksum algorithm chosen has a relatively flat distribution across the short name space.
This rename of the 8.3 name must also not conflict with any of the long names.  Otherwise a down level system could create a short name in one file that matches a long name, when case is ignored, in a different file.  To prevent this, the automatic creation of an 8.3 name from a long name, that has an 8.3 format, will directly map the long name to the 8.3 name by converting the characters to upper case.
If the file is deleted, then the long name is simply orphaned.  If a new file is created, the long name may be incorrectly associated with the new file name.  As in the case of a rename the checksum of the 8.3 name will help prevent this incorrect association.
autonumlgl 	Validating The Contents of a Directory
These guidelines are provided so that disk maintenance utilities can verify individual directory entries for 'correctness' while maintaining compatibility with future enhancements to the directory structure.
1.	DO NOT look at the content of directory entry fields marked 'reserved' and assume that, if they are any value other than zero, that they are 'bad'.
2.	DO NOT reset the content of directory entry fields marked reserved to zero when they contain non-zero values (under the assumption that they are "bad").  Directory entry fields are designated reserved, rather than must-be-zero.  They should be ignored by your application..  These fields are intended for future extensions of the file system.  By ignoring them an utility can continue to run on future versions of the operating system.
3.	DO use the A_LONG attribute first when determining whether a directory entry is a long directory entry or a short directory entry.  The following algorithm is the correct algorithm for making this determinaton:
	if  (((ldir_attr & A_LONG_MASK) == A_LONG) && (ldir_ord != 0xE5)){	/*   Found an active long name sub-component.   */}
4.	DO use bits 4 and 3 of a short entry together when determining what type of short directory entry is being inspected.    The following algorithm is the correct algorithm for making this determinaton:
	if  (((ldir_attr & A_LONG_MASK) != A_LONG) && (ldir_ord != 0xE5)){	if        ((dir_attr & (A_DIR | A_VOL)) == 0x00)		/*   Found a file.   */	else if ((dir_attr & (A_DIR | A_VOL)) == A_DIR)		/*   Found a directory.   */	else if ((dir_attr & (A_DIR | A_VOL)) == A_VOL)		/*   Found a volume label.   */	else		/*   Found an invalid directory entry.   */}
5.	DO NOT assume that a non-zero value in the "type" field indicates a bad directory entry.  Do not force the "type" field to zero.
6.	Use the "checksum" field as a value to validate the directory entry.  The "first cluster" field is currently being set to zero, though this might change in future.
Serial No: 00000000	Russ Arun	Microsoft Corporation

date 03/01/94	Microsoft Corporation Company Confidential - DO NOT COPY	Page page i



z}
@ z}@ s t }@ 8888
  :  Ec                '8RR    3              	     Z        &      MrEd Microsoft Draw  Z   &  MrEd                                        Times New Roman _                                              &  MrEd    A   A                  	                           &  MrEd    I          -  	         "    -     I   &  MrEd    x3 	 	          "    -                  -          	. s   &  MrEd         % W 3    &  MrEd         % W 3    &  MrEd         % (W (3    &  MrEd         % W 3    &  MrEd         % HW H3    &  MrEd         % W 3    &  MrEd         % hW h3    &  MrEd         % W 3    &  MrEd         % W 3    &  MrEd         % 	W 	3    &  MrEd         %      &  MrEd         %      &  MrEd         % ( (    &  MrEd         %      &  MrEd         % H H    &  MrEd         %      &  MrEd         % h h    &  MrEd         %      &  MrEd         %      &  MrEd         % 	 	    &  MrEd    	3 7
     <
. 	   .                     TIMES NEW ROMAN x   -     2
s   EAhandle   &  MrEd          &  MrEd    	   	   &  MrEd    	7
   <
	   &  MrEd          &  MrEd    8
w   |3
   &  MrEd       	   2
?   Last
   2
s   Access	   2
   Date	   2
>R   Last   2
s   Modified	   2
G   Date   2
V   Creation	   2
   Date   &  MrEd    7
3 v     {. 2
   &  MrEd    w   r   &  MrEd         % 
 
9    2
s   Modified	   2
>3   Last	   2
'   Time
   2
Vo	   First    2
O	   Cluster    2
t
	   File Size 	   2
 	   Attr	   2
 F   Name                Times New Roman x   -         2
 
   Creation Time 
   2
    h/m/s 	          "    -         &  MrEd         % S S    &  MrEd         % SH S3    2
 
   ms   2
 O
   OS    	         "System    -     	         "    -         '   '       :  Erc                y'c8zz    P3              	  &                  !              )   %               -            -    %         
         -                   -       8   -    -      (    -    -       (   -    -          -    -            -    -      8     -       % x. x    % h. h    % X. X    % H. H    % x x    % h h    % X X    % H H    -      Z    -    %        %  < Z   %      % <Z   %      % <Z   %  Z   %      % <Z   % Z    %      % <Z       @          TIMES NEW ROMAN 8   -    .    	      ! ord k )    . 	   ! name1 k    .    ! attrk O   .    ! chk-M 2   .    ! sum  2   . 	   ! name2 i    . 	   ! name2 !   . 	   ! first    . 	   ! clust B   . 	   ! name3 !X   .    ! typej                                          :  Erc                y'c8zz  Pp,              	  *                  !              )   %               -            -    %   Q          TIMES NEW ROMAN      -    .    	      ! nth   Long Entryx    .    ! 1st   Long Entryx          
         -                   -     m$    -    -     $    -    -     /$    -    -     /$    -        .    !2 Short Entry Associated With Preceding Long Entriesx    .    ! ...   Additional Long Entries Y      n  :  Erc                y'c8     
 -              	                    !              )   %               -            -    %   Q          TIMES NEW ROMAN      -    .    	      ! Short entry Z    .    ! 1st long entry    .    ! 2nd long entryj     .    !
 (and last)               -                    -         $    %      
         -         %                -         $    %      
         -         %                -         $ J Z j Z J    % J Z j Z J      
         -         % Z Z                  -         -    -     	I   -    -    I   -    -    	u   -    -    v	   -    -    	   -    -      D   -    -     4    -    -      4   -    -     	    -    -     D    -       % ;     % t; t    % d; d    % T; T    %      % t t    % d d    % T T        @          TIMES NEW ROMAN      -        .    ! chk-Z >   .    ! sum  >   %      % +I   %      % +I   %      % +I   %  I   %      % +I   % I    %      % +I       -    ID   -    -    I4   -    -    I4   -    -    I	   -    -    ID   -    % gI   % tgtI   % dgdI   % TgTI   %    % tt   % dd   % TT       .    ! chk->   .    ! sum >   %    % Wu   %    % Wu   %    % Wu   % u   %    % Wu   % u   %    % Wu   .    ! T    .    ! h    .    ! e    .    ! q    .    ! u  	   .    ! i 5   .    ! c 5~   .    ! k 5n   .    ! b 5N   .    ! r 5.   .    ! o 5 	   .    ! w s    .    ! n s    .    ! f s    .    ! o s    .    ! x s 	   .    ! .     % v   %    % v   % v   % v   % ttv   % v   % ddv   % v   % TTv   % v   % v   %    %    %    % tt   %    % dd   %    % TT   %    % DvD   %    %    %    %    %    %    .    ! T F   .    ! Q    .    ! H    .    ! E 7   .    ! U #   .    ! I    .    ! F 	   .    ! X    .    ! ~    .    ! 1    .    ! O }   .    ! 42h y 1   .    ! 01h 1   .    ! 00h y    .    ! 00h    . 	   ! 0000h    . 	   ! 0000h <   . 	   ! 0000h g2   . 	   ! 0000h Q   . 	   ! FFFFh >   . 	   ! FFFFh -   . 	   ! FFFFh    . 	   ! FFFFh    . 	   ! FFFFh    . 	   ! FFFFh    .    ! 0Fh y X   .    ! 0Fh W   .    ! 20h X   % v   % 4v4   .    ! Rsvd9   .    ! Last8X   . 	   ! Accessg<   .    ! DateR   .    ! Last63   .    ! Time/   . 	   ! First J   . 
   ! Cluster    .    !	 File Size eT   .    ! NT   .    ! Date$   . 
   ! Modifiedg   .    ! Datea   .    ! Time   . 
   ! Modifiedg   .    ! Last7)   . 
   ! Created KG   . 
   ! Created                                                  4            MSDraw          
   Ec 	     Z        &      MrEd Microsoft Draw  Z   &  MrEd                                        Times New Roman _                                              &  MrEd    A   A                  	                           &  MrEd    I          -  	         "    -     I   &  MrEd    x3 	 	          "    -                  -          	. s   &  MrEd         % W 3    &  MrEd         % W 3    &  MrEd         % (W (3    &  MrEd         % W 3    &  MrEd         % HW H3    &  MrEd         % W 3    &  MrEd         % hW h3    &  MrEd         % W 3    &  MrEd         % W 3    &  MrEd         % 	W 	3    &  MrEd         %      &  MrEd         %      &  MrEd         % ( (    &  MrEd         %      &  MrEd         % H H    &  MrEd         %      &  MrEd         % h h    &  MrEd         %      &  MrEd         %      &  MrEd         % 	 	    &  MrEd    	3 7
     <
. 	   .                     TIMES NEW ROMAN x   -     2
s   EAhandle   &  MrEd          &  MrEd    	   	   &  MrEd    	7
   <
	   &  MrEd          &  MrEd    8
w   |3
   &  MrEd       	   2
?   Last
   2
s   Access	   2
   Date	   2
>R   Last   2
s   Modified	   2
G   Date   2
V   Creation	   2
   Date   &  MrEd    7
3 v     {. 2
   &  MrEd    w   r   &  MrEd         % 
 
9    2
s   Modified	   2
>3   Last	   2
'   Time
   2
Vo	   First    2
O	   Cluster    2
t
	   File Size 	   2
 	   Attr	   2
 F   Name                Times New Roman x   -         2
 
   Creation Time 
   2
    h/m/s 	          "    -         &  MrEd         % S S    &  MrEd         % SH S3    2
 
   ms   2
 O
   OS    	         "System    -     	         "    -         '   '             METAFILEPICT E  M	   Ec   	     Z        &      MrEd Microsoft Draw  Z   &  MrEd                                        Times New Roman _                                              &  MrEd    A   A                  	                           &  MrEd    I          -  	         "    -     I   &  MrEd    x3 	 	          "    -                  -          	. s   &  MrEd         % W 3    &  MrEd         % W 3    &  MrEd         % (W (3    &  MrEd         % W 3    &  MrEd         % HW H3    &  MrEd         % W 3    &  MrEd         % hW h3    &  MrEd         % W 3    &  MrEd         % W 3    &  MrEd         % 	W 	3    &  MrEd         %      &  MrEd         %      &  MrEd         % ( (    &  MrEd         %      &  MrEd         % H H    &  MrEd         %      &  MrEd         % h h    &  MrEd         %      &  MrEd         %      &  MrEd         % 	 	    &  MrEd    	3 7
     <
. 	   .                     TIMES NEW ROMAN x   -     2
s   EAhandle   &  MrEd          &  MrEd    	   	   &  MrEd    	7
   <
	   &  MrEd          &  MrEd    8
w   |3
   &  MrEd       	   2
?   Last
   2
s   Access	   2
   Date	   2
>R   Last   2
s   Modified	   2
G   Date   2
V   Creation	   2
   Date   &  MrEd    7
3 v     {. 2
   &  MrEd    w   r   &  MrEd         % 
 
9    2
s   Modified	   2
>3   Last	   2
'   Time
   2
Vo	   First    2
O	   Cluster    2
t
	   File Size 	   2
 	   Attr	   2
 F   Name                Times New Roman x   -         2
 
   Creation Time 
   2
    h/m/s 	          "    -         &  MrEd         % S S    &  MrEd         % SH S3    2
 
   ms   2
 O
   OS    	         "System    -     	         "    -         '   '                                                                              @  A  T  U  V  \  ]  _      l  F                N	  O	  Z	  \	  	  '
  (
  G
  I
  \  ]  |  ~                                     "  *      n      !  !  !  !  9!  #  #  #  #  !$  %                                                                                               
                                                G%  %  %  %   )  C)  *  *  *  *  *  S*  V,  ],  -  -  -  -  3  4  4  4  4  D5  L5  7  59  ?9  K9  P9  `9  a9  l9  n9  9  =  =  o=  p=  {=  }=  =  =  =  =  =  eC  fC  qC  sC  C  H  H  H  H  I  S  S  )S  +S  OS  S  S  EW  OW  `W  lW                                                                         !                                      s                    ř  BlW  oW  pW  {W  }W  W  W  W  W  W  QX  Z  	[  <\  G\  T\  a\  b\  c\  n\  p\  \  ^  ~`  `  ua  |a  a  a  a  a  a  	b  b  e  e  e  e  e  e  e  m  m  m  m  n  @y  Ay  Ly  Ny  y  ņ  Ɔ  ǆ  ҆  Ԇ    ч  ׇ  i  o      )  3  ?  M  !  #  =  B  t  v          Վ                                                                            @               Q      [  \  a  b  c  d  h  j  l                                                                                                                                                                                                                                                                                                                                                                                                                                                           B                                   @  A  T  _  n        5  z          C  l        F  v            N	  	  '
  \            "  *  ;        '            ƾ      "                                h                                  \                  \                                                    0 1                 7      0  [            %    (  ?  U  l  n  -    -  K  i        !  9!  0"  o"  "  !#  #  !$  $  %  %  %  $%  %  &  K&  &  &  o'  '  (  
)   )  C)  *  S*  ,  -  -  -  0  t3  3  7  `9  9   <  =  =  o=                    ĭ                             `p 
        &)')()))         h                   "        "                                 "        "        "       @o=  =  =  t?  ?  A  eC  C  E  E  QF  F  G  H  I  L  N  rP  S  OS  V  oW  W  QX  X  Y  Y  $Z  Z  R[  <\  a\  \  ^  a  a  c  d  e  e  g  h  m  n  !p  Ep  r  w  >x  @y  y  E|  E}  f~      '    ņ    ·                 Ŀ                                                      h                          #                         #                                                                         <·  f      q  =    -  Վ  
    f  h  j  l                                                                                                                                                                                                                                                                                                                                                                           h                     %$       %$        h                 L1L2P3p4S1S2P5P6P7P8N1N2NLL3L4T5PKPUPHFNPPPLP2PVT6RHRFTNTATRPTPCPDStructCode                         F       	  
           
         
              
                                  F       	  B        	  +       !       !`       !@       !        %       %                              	      
                     h       ` 
            
      
      
             	
	       	
      @      @@      @               0 0                !	      	            
             @           
      
      @       !       &	                  
              @4       #  	@ @            @ !       "       ` 
      ,#       ` 	 
@        @  ?                                              	 
                       !" #        w      l              7           l  c   l  g L 
 Tms Rmn 	` Symbol   Helv 
0 Courier  Times New Roman 0 LinePrinter        u  w                  
  
  
  ?  _  `  k  w  x              m"  y"  z"  (  (  (  7  7  7  ;  ;  ;  <  *<  +<  A  A  A  ZG  fG  gG  Q  Q  Q  U  U  U  Z  Z  Z  `  !`  "`  d  (d  )d  Pl  \l  ]l  w  w  w  F  R  S    559995: 55555555555555557   =   F              ! "              SB N        E    /   Long Filenames Design   billkru	Russ Arun                                           
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\fat32.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Windows File System OverviewWindows File System Overview Scott Quinn Normal Brian Emanuels Microsoft Word for Windows 95FAT32 On-Disk Format Version 0.80  SAVEDATE \@ "MMMM d, yyyy" \* MERGEFORMAT  April 5, 1996 NOTE: This document is preliminary and subject to change without notice (1995-96  Microsoft Corporation Contents  TOC \o "1-3"  1. Introduction  GOTOBUTTON _Toc342391185    PAGEREF _Toc342391185  2. A new partition type  GOTOBUTTON _Toc342391186    PAGEREF _Toc342391186  3. Default Master Boot Record  GOTOBUTTON _Toc342391187    PAGEREF _Toc342391187  4. FAT32 Layout  GOTOBUTTON _Toc342391188    PAGEREF _Toc342391188  5. File system region notes  GOTOBUTTON _Toc342391189    PAGEREF _Toc342391189  5.1 The Boot Sector and BPB  GOTOBUTTON _Toc342391190    PAGEREF _Toc342391190  5.2 File Allocation Table (FAT)  GOTOBUTTON _Toc342391191    PAGEREF _Toc342391191  5.3 Directory Structure  GOTOBUTTON _Toc342391192    PAGEREF _Toc342391192  6. File system limits  GOTOBUTTON _Toc342391193    PAGEREF _Toc342391193  Introduction This document provides an overview of the layout of FAT32 for Windows 9x.  This new file system supports drives nearly two terabytes in size, while maintaining most of the features of the MS-DOS and Windows 95 file systems. FAT32 is very similar to the Windows 95 file system.  The primary difference is the change from 16 bit File Allocation Table (FAT) entries to 32-bit entries, allowing more entries and therefore more data clusters.   Other features include the definition of an active fat which allows the operating system to switch between copies of the file allocation table atomically, and a relocatable, growable root directory which removes  the limit for number of files in the root directory.  In addition, the reserved area has been expanded to include a redundant copy of the boot record. A new partition type The definition of a new file system which is not supported by older versions of the operating system causes the need for a new partition type because the older operating system might try to make sense of the new on-disk data structures and causes unexpected results.   The old OS will identify a new partition type as unrecognized and not attempt to operate with the data.  This document defines two new partition types: indicates this partition is FAT32 indicates this partition is FAT32, and requires extended int 13h support for large disk drives (greater than 1024 cylinders). Default Master Boot Record The Master Boot Record boot code has been modified to attempt to load a backup copy of the partition boot record from sector six if there was a disk error, or signature validation error, loading sector zero.  It checks the ending signature to validate that it is indeed a boot sector.  This functionality is not required by FAT32, and will not be installed by FDISK if valid Master Boot Record bootstrap code already exists. The (undocumented) /MBR and/or /CMBR switches to the FDISK utility can be used to force FDISK to write out a copy of this new MBR code. Note that this attempt to look for the backup boot record at sector six is only done if the active (bootable) partition type is one of the two new types defined above. FAT32 Layout A FAT32 volume has the following layout. Offset (sector) Size (sectors) Description Boot Sector and BIOS Parameter Block (BPB) This sector contains code for boot-strapping from this partition, and fundamental file system parameters describing the type and size of the file system in this partition.  The code for this sector is loaded and executed by code in the Master Boot Record.  Last 4 bytes must be 0xAA550000. Extended Boot Sector 1 These sectors hold additional code for boot-strapping from the partition, and an FSINFO structure at offset 0x1E4:     DWORD  0x61417272 -- signature of FSinfo     DWORD  Free_Cluster_Count -- cache of free clusters in FAT     DWORD  Next_Free_Cluster -- cache of next cluster to allocate     DWORD  Reserved[3] -- reserved Cluster values assumed to be valid if less than or equal to the number of clusters on the volume. Last 4 bytes must be 0xAA550000 for BOTH sectors. Second sector s first 4 bytes must be 0x41615252 Reserved1 zeros BackupBoot Exact copy of sectors 0,1,2.  Reserved2 NumReserved-9 Reserved sectors. The number of reserved sectors is defined in the BPB. This area is reserved for future operating system use, and should not be used or modified.   NumReserved is usually 32 sectors, but it will NOT always be 32. File Allocation Table (FAT) NumReserved varies A table of 32-bit entries which define file and directory allocations.  Each entry either represents an allocated cluster, an unallocated cluster, or an unusable cluster.  When defining an allocated cluster, the value for this entry indicates the FAT entry for the next cluster in the file directory, or the end of the allocation chain. Cluster Heap varies The rest of the partition is file data, divided into cluster size allocations as defined in the BPB. File system region notes The following sections provide a notes on the regions defined by FAT32. IMPORTANT:  All  reserved  fields below are currently defined to be zero.  However, these fields should not be assumed to contain this or any other value.  Disk utilities and other programs should not look at nor modify reserved fields.  It is the responsibility of the utility to preserve whatever value is contained in these fields. The Boot Sector and BPB Offset (byte) Size (bytes) Description jmpBoot jmp instruction to   code OEMName MSWIN4.1 bytes per sector Count of bytes per sector.  sectors per cluster Number of sectors per allocation unit. reserved sectors Number of reserved sectors after the extended boot record plus the size of the boot record and extended boot record.  Usually 32, but NOT always. number of FATs Reserved Entries Reserved (this field used to contain the number of root directory entries). Must be zero (this is the old bsSectors field).  media descriptor 0xF8  sectors per FAT Must be zero to indicate the BPB represents a FAT32 BPB . System will not boot if this field is zero and the count of clusters is < 65527. sectors per Track Sectors per track for interrupt 13h count of heads Number of heads for interrupt 13h count of hidden sectors Hidden sectors in partition so boot loader can do int 13h. count of sectors  Total number of sectors for all data structures and data for this drive. Big sectors per FAT DWORD count of sectors in a single file allocation table (FAT). Extended flags Bits 0-3               -- zero based number of active FAT,     only valid if mirroring is disabled Bits 4-6 -- reserved. Bit      7 -- zero means the FAT is mirrored     at runtime into all FATs. -- one means only one FAT is active,     it is the one referenced in bits 0-3. Bits 8-15  -- reserved. FS version High byte is major revision number. Low byte is minor revision number.  This document defines the version to 0:0.  If this field is non-zero, back-level Windows versions will not mount the volume. Note:  Disk Utilities should respect this field and not operate on volumes with a higher major or minor version number than that for which they were designed. First Cluster of Root Cluster number of the first cluster of the root directory, usually 2.  Note:  Disk Utilities that change the location of the root directory should make every effort to place the first cluster of the root directory in the first non-bad cluster on the drive (i.e. in cluster 2, unless it s marked bad).   FS info sector number Sector number of FS info structure. Usually 1.  Note that there will be a copy of the FSINFO structure in BackupBoot, but only the copy pointed to by this field will be kept up to date - i.e. both the primary and backup boot record will point to the same FSINFO sector. Backup Boot Record sector number. If non zero, indicates the sector number of a copy of the boot record. Usually 6. Reserved Reserved for future expansion. Drive Number Int 13h drive number (e.g. 80h). Reserved1 Reserved (used by Windows NT). Boot signature Extended boot signature (29h). Volume ID Volume serial number Volume label Volume label File System type FAT32    File Allocation Table (FAT) The File Allocation Table is a packed list of 32-bit entries which have a one-for-one mapping with the data clusters.   Each entry is defined as : Bit Offset  Size (bits) Description cluster value 0x00000000 unallocated cluster 0x00000001 invalid value  0x00000002 - 0x0FFFFFF7 allocated cluster in chain 0x0FFFFFF7 bad cluster mark (but only if not part of a cluster chain or not a legal cluster number.  NOTE:  this means this can be a valid cluster number in a cluster chain!) 0x0FFFFFF8 - 0x0FFFFFFF end of File Reserved Reserved for future use. PLEASE TAKE SPECIAL NOTE: It is critically important that disk utilities treat the 4 reserved bits in the high nibble of 32-bit cluster entries properly. These bits must always be masked off when fetching the cluster value out of one of these entries, and must always be PRESERVED (that is NOT MODIFIED) when a new cluster value is set. Do not make the mistake of assuming that these 4 bits are in some way associated either with the cluster value stored in the entry or the data to which it refers, and thus that they need to be changed depending on what the cluster value is. At the current time there is no association between these 4 bits and the cluster value stored in the low 28 bits of the entry or the data it references. The one currently known exception to this rule is FORMAT. When a FAT32 volume has FORMAT run on it, all of the cluster entries will have their high 4 bits reset to 0. Directory Structure The directory structure for FAT32 is used in the same way Windows 95 implements both long and short file names.  The only difference is the addition of the  Cluster High Word  field in directory entries that access cluster numbers. Short file name DirEnts Offset (byte) Size (bytes) Description Directory Name Short name. Attributes File attributes: ATTR_READ_ONLY    ATTR_HIDDEN  ATTR_SYSTEM  ATTR_VOLUME_ID  ATTR_DIRECTORY ATTR_ARCHIVE   ATTR_LONG_NAME  ATTR_READ_ONLY | ATTR_HIDDEN | ATTR_SYSTEM | ATTR_VOLUME_ID The upper two bits of the attribute byte are reserved. NT reserved Reserved for use by Windows NT Create time milliseconds Millisecond stamp at file creation time. Create time Time file was created. Create date Date file was created. Last Access Date Last access date. Cluster High Word High word of this entry s cluster Time of last write. Date of last write. Cluster Low Word Low word of this entry s cluster Size Low Word Low word of DWORD holding this file s size. Size High Word High word of DWORD holding this file s size. Long file name DirEnts Long file name entries on FAT32 volumes are identical to those on FAT12/16 volumes. IMPORTANT NOTE:   Additional LFN types will be defined in the future.  Disk Utilities MUST examine the type field (the low-order 13th byte of the LFN DirEnt) of any DirEnt with an LFN attribute and IGNORE those with a non-zero type value.  (Note the this applies to FAT12/16 volumes as well.)  File system limits The maximum size of a FAT32 volume is limited by the maximum number of FAT entries and the number of sectors per cluster.  Also, it is limited by the 32 bit count of sectors in the partition record.  512 byte sectors is assumed. The maximum number of FAT entries is 0x0FFFFFF6.  Also, there are two entries at the beginning of the FAT reserved for the FAT signature (typical values: [0x0FFFFFF8,0x0FFFFFFF]).  Since there are 4 bytes per entry , the maximum size of the FAT is (0xFFFFFF6+2) * 4 =  1073741784 bytes =  2097152 sectors of 512 bytes = 1GB. The maximum supportable volume size with 512 byte sectors is 2048GB, based on the 32-bit sector limit in the partition record.    Since the FAT has a maximum size of the FAT is 1GB, the maximum data area is 2047GB. Since the data is partitioned into clusters, the effective maximum volume size is determined by the cluster size. Cluster Size Maximum volume size 512 bytes 127.9 GB 255.9 GB 511.9 GB 1023.9 GB 2047 GB 16 kB 2047 GB 32 kB 2047 GB  REF Title \* MERGEFORMAT  FAT32 On-Disk FormatFAT32 On-Disk Format  SAVEDATE \@ "MMMM d, yyyy" \* MERGEFORMAT  April 5, 1996February 3, 1996 Page   PAGE  Microsoft Confidential Microsoft Confidential  REF Title \* MERGEFORMAT  FAT32 On-Disk FormatFAT32 On-Disk Format  SAVEDATE \@ "MMMM d, yyyy" \* MERGEFORMAT  April 5, 1996February 3, 1996 Page   PAGE  Microsoft Confidential Normal Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Heading 7 Heading 8 Heading 9 Default Paragraph Font Annotation Reference Annotation Text Endnote Reference TOC 2 TOC 1 Footer Header Footnote Reference Footnote Text MDBPB NormalStd Index 1 Index 2 Index 3 Index 4 Index 5 Index 6 Index 7 Index 8 Index 9 Index Heading TOC 3 TOC 4 TOC 5 TOC 6 TOC 7 TOC 8 TOC 9 Page Number Unknown Brian Emanuels Title _Toc292186102 _Toc342391185 _Toc342391186 _Toc342391187 _Toc342391188 _Toc342391189 _Toc342391190 _Toc342391191 _Toc342391192 _Toc342391193 Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Aaron Reynolds D:\SRC\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels S:\TRANGO\dos\spec\fat32.doc Brian Emanuels J:\trango\DOS\spec\fat32.doc @HP LaserJet 5Si/5Si MX \\msprint9\corpb HP5SI HP LaserJet 5Si/5Si MX HP LaserJet 5Si/5Si MX WINWORD Courier New \\msprint9\corpb HP5SI HP LaserJet 5Si/5Si MX WINWORD Courier New \\msprint9\corpb HP5SI Times New Roman Symbol Arial MS Sans Serif Windows File System Overview Scott Quinn Brian Emanuels
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\lfnmed_2.doc ===
ۥ- 1@	    -             %                    s      0                                                      .                  
 !  
     +  B m  .                                                         4   %                         
                                                              




Chicago
FAT: Long Name On-Media Format Specification
Appendix: Internal MS only


Revision:		0.8
Revision Date:		TIME \@ "MMMM d, yyyy"February 25, 1994


Send comments to: 	Microsoft Corporation (Bill Krueger or Russ Arun)
NOTE
This specification will be revised through out the Chicago development schedule.  Please keep the following in mind when using it.
1.	The meta matching algorithm description needs to be beefed up.


AUTONUMLGL	Appendix
AUTONUMLGL	Effect of Existing Disk Utilities on Volumes With Long Directory Entries
CHKDSK on a down level system does not complain about these long names on a disks and finds nothing wrong with them.
The UNDELETE utility that is shipped with the system has to be fixed to include the long file names in the undelete operation (if possible).  The utilities that will be shipped with Astro also need to be evaluated, and updated to handle long file names.  By doing a good job of providing these utilities ourselves, that are shipped with the system, the need for the user to run existing utilities will decrease.  We should evaluate the ability to detect when one of these old utilities is run and warning the user of the effect they may have on his system.
The following are some evaluations that have been done using PC-TOOLS and NORTON to understand the effect they have on a disk containing long file names.
SPEEDDISK sorts directories without paying any attention to the "extra volume labels".  The fact that this moves the LFN entries is the only problem with this.  This is the reason for the signature bytes in the extensions to identify the extension order so that the directory can be automatically fixed by CHICAGO CHKDSK in all cases where there are not checksum collisions in the directory.  Without the ordering of the signatures, the USER will have to be asked to group the extensions in the proper order for all files with more than one LFN extension.
COMPRESS directory sort seems to be totally disabled by this.  It compresses the disk and leaves the directories completely alone.  Thus running COMPRESS on an LFN disk seems to have no side effects.
NDD does not like the file size field being non-0 when the first cluster pointer is 0 and wants to overwrite the file size field with 0.  To handle this the unused bytes of the extension entries are non-zero padded, this allows this mod to be detected by the Chicago CHKDSK and the user asked to help fix it. This is the only thing that NDD seems to be upset about.
DISKFIX has the same behavior as NDD regarding the file size field, plus it gets very upset when certain of the 10 reserved bytes are non zero.  In the case where one of the 10 reserved bytes it cares about has something non-zero in it, it COMPLETELY erases the entry.  It writes E5 in the first byte, and 0 in all other bytes.  For this reason, the check sum byte is placed in this reserved area.  This way the behavior of DISKFIX will become more predictable, it will totally erase all LFN extension entries.  This is bad, but its going to do something bad no matter how this is handled.  It is preferable to have a  predictable bad behavior than an unpredictable one.
CPS MS-DOS Anti-Virus and McAfee SCAN do not think these disks are infected.
None of these apps seems to care about the extensions having MS-DOS 5.00 illegal file name characters in them. The invalid characters are totally ignored.  UNDELETE may have a different opinion.
OTHER INTERESTING INFORMATION COLLECTED:
Setting the directory bit is bad.  Downlevel CHKDSK reports all the extensions as invalid sub directories.  NDD is upset and turns off some of the DIR attribute bits (not all of them interestingly?!?!?!?!?).  DISKFIX will erase all of the LFN extensions regardless of whether the 10 reserved bytes are non-zero.  COMPRESS bails: Insufficient memory.  SPEEDDISK unaffected.  Not setting the VOLUME LABEL bit is bad.  Downlevel CHKDSK will find the extension files and complain about the fact that the file size field is wrong and want to 0 it.
Non zero values in First Cluster is very bad.  If what is in there happens to look like a cross link, very evil things start happening.  NDD got very upset and changed one of the 8.3 entries to 0 size (because it was cross linked), the data became "lost" and was assigned to an NDD "lost data" file.  SPEEDDISK and COMPRESS hung, or reported disk trashed and bailed.  CHKDSK and DISKFIX were unaffected.


Microsoft Corporation Company Confidential



 }@@8888s t m-'S(MM#.׍ҫ+UڙG $AGm
XFiCJOݭPis
GlMvlZ*	<z~by@(wv1/F(	Q%9Վ`8@Y=C	k@n`ivՎnmЁl          +  ,  .  2  y    G  H  L  M  W  X  c  d  n  o    #  %  L                                                                                                                                                                                                                                                                                                                                                                                                                              .  0  2  x  y      G  J  L  c    0  ^    &	  	  ^    L    :  Z          !  #  %  ؿؿ                                                                                              $    `'     `'     `'     `'     `'    `'   `'    `'     `'     `'K    `'K                     $ 1 0   $    $    ${    $  )                L1L2P3p4S1S2P5P6P7P8N1N2NLL3L4T5PKPUPHFNPPPLP2PVT6RHRFTNTATRPTPCPDStructCode                        F        	  
           
         
              
                                  F       	  B        	           !      `   !      @   !          !         %         %                                                   h           `                                                	  	       	  
      @        @@        @               0   0                     !                                        @                         @           !         &                        
             @  4       @ #  	@ @            !       "        ` 
,#      @  ` 	 
@        ?                                         	 
                       !" #           %   6                                .   4     L  
   %   B  Times New Roman 	Symbol & Arial 1 LinePrinter 
1 Courier                      55   [   [      [       ܝ  "       h                          %       	Russ Arun	Russ Arun         
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\fatgen102-efi.doc ===
Microsoft Word Document MSWordDocMicrosoft FAT: General Overview of On-Disk Format Title _PID_HLINKSFAT: General Overview of On-Disk Format FAT on disk format Microsoft Normal.dot Mark Kieffer Microsoft Word 9.0B2a"< Z,LFZ,LF$( n" 4g#]N MsdX~y F(+i4e' JHyFB $M7B# r.CW" ^F_Lm>j+ #z=s[ S5pwk iTQtql )b~Al3 )oCwZHardware White Paper  Designing Hardware for Microsoft  Operating Systems Microsoft Extensible Firmware Initiative FAT32 File System Specification  FAT: General Overview of On-Disk Format Version 1.02, May 5, 1999 Microsoft Corporation The FAT (File Allocation Table) file system has its origins in the late 1970s and early1980s and was the file system supported by the Microsoft  MS-DOS  operating system. It was originally developed as a simple file system suitable for floppy disk drives less than 500K in size. Over time it has been enhanced to support larger and larger media. Currently there are three FAT file system types: FAT12, FAT16 and FAT32. The basic difference in these FAT sub types, and the reason for the names, is the size, in bits, of the entries in the actual FAT structure on the disk. There are 12 bits in a FAT12 FAT entry, 16 bits in a FAT16 FAT entry and 32 bits in a FAT32 FAT entry. Contents  TOC \o "1-1" \h \z   HYPERLINK \l "_Toc457578063"  Notational Conventions in this Document  PAGEREF _Toc457578063 \h   HYPERLINK \l "_Toc457578064"  General Comments (Applicable to FAT File System All Types)  PAGEREF _Toc457578064 \h   HYPERLINK \l "_Toc457578065"  Boot Sector and BPB  PAGEREF _Toc457578065 \h   HYPERLINK \l "_Toc457578066"  FAT Data Structure  PAGEREF _Toc457578066 \h   HYPERLINK \l "_Toc457578067"  FAT Type Determination  PAGEREF _Toc457578067 \h   HYPERLINK \l "_Toc457578068"  FAT Volume Initialization  PAGEREF _Toc457578068 \h   HYPERLINK \l "_Toc457578069"  FAT32 FSInfo Sector Structure and Backup Boot Sector  PAGEREF _Toc457578069 \h   HYPERLINK \l "_Toc457578070"  FAT Directory Structure  PAGEREF _Toc457578070 \h   HYPERLINK \l "_Toc457578071"  Other Notes Relating to FAT Directories  PAGEREF _Toc457578071 \h  Microsoft, MS_DOS, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. Microsoft Extensible Firmware Initiative FAT32 File System Specification IMPORTANT-READ CAREFULLY: This Microsoft Agreement ( Agreement ) is a legal agreement between you (either an individual or a single entity) and Microsoft Corporation ( Microsoft ) for the version of the Microsoft specification identified above which you are about to download ( Specification ). BY DOWNLOADING, COPYING OR OTHERWISE USING THE SPECIFICATION, YOU AGREE TO BE BOUND BY THE TERMS OF THIS AGREEMENT. IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, DO NOT DOWNLOAD, COPY, OR USE THE SPECIFICATION. The Specification is owned by Microsoft or its suppliers and is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties.  LIMITED LICENSE AND COVENANT NOT TO SUE.  Provided that you comply with all terms and conditions of this Agreement and subject to the limitations in Sections 1(c) - (f) below, Microsoft grants to you the following non-exclusive, worldwide, royalty-free, non-transferable, non-sublicenseable license under any copyrights owned or licensable by Microsoft without payment of consideration to unaffiliated third parties, to reproduce the Specification solely for the purposes of creating portions of products which comply with the Specification in unmodified form. Provided that you comply with all terms and conditions of this Agreement and subject to the limitations in Sections 1(c) - (f) below, Microsoft grants to you the following non-exclusive, worldwide, royalty-free, non-transferable, non-sublicenseable, reciprocal limited covenant not to sue under its Necessary Claims solely to make, have made, use, import, and directly and indirectly, offer to sell, sell and otherwise distribute and dispose of portions of products which comply with the Specification in unmodified form. For purposes of sections (a) and (b) above, the Specification is  unmodified  if there are no changes, additions or extensions to the Specification, and  Necessary Claims  means claims of a patent or patent application which are (1) owned or licenseable by Microsoft without payment of consideration to an unaffiliated third party; and (2) have an effective filing date on or before December 31, 2010, that must be infringed in order to make a portion(s) of a product that complies with the Specification.  Necessary Claims does not include claims relating to semiconductor manufacturing technology or microprocessor circuits or claims not required to be infringed in complying with the Specification (even if in the same patent as Necessary Claims). The foregoing covenant not to sue shall not extend to any part or function of a product  which (i) is not required to comply with the Specification in unmodified form, or (ii) to which there was a commercially reasonable alternative to infringing a Necessary Claim.  Each of the license and the covenant not to sue described above shall be unavailable to you and shall terminate immediately if you or any of your Affiliates (collectively  Covenantee Party Initiates  any action for patent infringement against:  (x) Microsoft or any of its Affiliates (collectively  Granting Party ), (y) any customers or distributors of the Granting Party, or other recipients of a covenant not to sue with respect to the Specification from the Granting Party ( Covenantees ); or (z) any customers or distributors of Covenantees (all parties identified in (y) and (z) collectively referred to as  Customers ), which action is based on a conformant implementation of the Specification.  As used herein,  Affiliate  means any entity which directly or indirectly controls, is controlled by, or is under common control with a party; and control shall mean the power, whether direct or indirect, to direct or cause the direction of the management or policies of any entity whether through the ownership of voting securities, by contract or otherwise.  Initiates  means that a Covenantee Party is the first (as between the Granting Party and the Covenantee Party) to file or institute any legal or administrative claim or action for patent infringement against the Granting Party or any of the Customers.  Initiates  includes any situation in which a Covenantee Party files or initiates a legal or administrative claim or action for patent infringement solely as a counterclaim or equivalent in response to a Granting Party first filing or instituting a legal or administrative patent infringement claim against such Covenantee Party. Each of the license and the covenant not to sue described above shall not extend to your use of any portion of the Specification for any purpose other than (a) to create portions of an operating system (i) only as necessary to adapt such operating system so that it can directly interact with a firmware implementation of the Extensible Firmware Initiative Specification v. 1.0 ( EFI Specification ); (ii) only as necessary to emulate an implementation of the EFI Specification; and (b) to create firmware, applications, utilities and/or drivers that will be used and/or licensed for only the following purposes:  (i) to install, repair and maintain hardware, firmware and portions of operating system software which are utilized in the boot process; (ii) to provide to an operating system runtime services that are specified in the EFI Specification; (iii) to diagnose and correct failures in the hardware, firmware or operating system software; (iv) to query for identification of a computer system (whether by serial numbers, asset tags, user or otherwise); (v) to perform inventory of a computer system; and (vi) to manufacture, install and setup any hardware, firmware or operating system software.  Microsoft reserves all other rights it may have in the Specification and any intellectual property therein.  The furnishing of this document does not give you any license or covenant not to sue with respect to any other Microsoft patents, trademarks, copyrights or other intellectual property rights.   2. ADDITIONAL LIMITATIONS AND OBLIGATIONS.  (a)The foregoing license and covenant not to sue is applicable only to the version of the Specification which you are about to download.  It does not apply to any additional versions of or extensions to the Specification. (b)Without prejudice to any other rights, Microsoft may terminate this Agreement if you fail to comply with the terms and conditions of this Agreement.  In such event you must destroy all copies of the Specification. INTELLECTUAL PROPERTY RIGHTS. All ownership, title and intellectual property rights in and to the Specification are owned by Microsoft or its suppliers.  4. U.S. GOVERNMENT RIGHTS.  Any Specification provided to the U.S. Government pursuant to solicitations issued on or after December 1, 1995 is provided with the commercial rights and restrictions described elsewhere herein.  Any Specification provided to the U.S. Government pursuant to solicitations issued prior to December 1, 1995 is provided with RESTRICTED RIGHTS as provided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable.  EXPORT RESTRICTIONS. Export of the Specification, any part thereof, or any process or service that is the direct product of the Specification (the foregoing collectively referred to as the  Restricted Components ) from the United States is regulated by the Export Administration Regulations (EAR, 15 CFR 730-744) of the U.S. Commerce Department, Bureau of Export Administration ( ).  You agree to comply with the EAR in the export or re-export of the Restricted Components (i) to any country to which the U.S. has embargoed or restricted the export of goods or services, which currently include, but are not necessarily limited to Cuba, Iran, Iraq, Libya, North Korea, Sudan, Syria and the Federal Republic of Yugoslavia (including Serbia, but not Montenegro), or to any national of any such country, wherever located, who intends to transmit or transport the Restricted Components back to such country; (ii) to any person or entity who you know or have reason to know will utilize the Restricted Components in the design, development or production of nuclear, chemical or biological weapons; or (iii) to any person or entity who has been prohibited from participating in U.S. export transactions by any federal agency of the U.S. government.  You warrant and represent that neither the BXA nor any other U.S. federal agency has suspended, revoked or denied your export privileges.  For additional information see http://www.microsoft.com/exporting. DISCLAIMER OF  WARRANTIES.  To the maximum extent permitted by applicable law, Microsoft and its suppliers provide the Specification (and all intellectual property therein) and any (if any) support services related to the Specification ( Support Services ) AS IS AND WITH ALL FAULTS, and hereby disclaim all warranties and conditions, either express, implied or statutory, including, but not limited to, any (if any) implied warranties or conditions of merchantability, of fitness for a particular purpose, of lack of viruses, of accuracy or completeness of responses, of results, and of lack of negligence or lack of workmanlike effort, all with regard to the Specification, any intellectual property therein and the provision of or failure to provide Support Services.  ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT, WITH REGARD TO THE SPECIFICATION AND ANY INTELLECTUAL PROPERTY THEREIN.  THE ENTIRE RISK AS TO THE QUALITY OF OR ARISING OUT OF USE OR PERFORMANCE OF THE SPECIFICATION, ANY INTELLECTUAL PROPERTY THEREIN, AND SUPPORT SERVICES, IF ANY, REMAINS WITH YOU. EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.  To the maximum extent permitted by applicable law, in no event shall Microsoft or its suppliers be liable for any special, incidental, indirect, or consequential damages whatsoever (including, but not limited to, damages for loss of profits or confidential or other information, for business interruption, for personal injury, for loss of privacy, for failure to meet any duty including of good faith or of reasonable care, for negligence, and for any other pecuniary or other loss whatsoever) arising out of or in any way related to the use of or inability to use the SPECIFICATION, ANY INTELLECTUAL PROPERTY THEREIN, the provision of or failure to provide Support Services, or otherwise under or in connection with any provision of this AGREEMENT, even in the event of the fault, tort (including negligence), strict liability, breach of contract or breach of warranty of Microsoft or any supplier, and even if Microsoft or any supplier has been advised of the possibility of such damages.  LIMITATION OF LIABILITY AND REMEDIES. Notwithstanding any damages that you might incur for any reason whatsoever (including, without limitation, all damages referenced above and all direct or general damages), the entire liability of Microsoft and any of its suppliers under any provision of this Agreement and your exclusive remedy for all of the foregoing shall be limited to the greater of the amount actually paid by you for the Specification or U.S.$5.00.  The foregoing limitations, exclusions and disclaimers shall apply to the maximum extent permitted by applicable law, even if any remedy fails its essential purpose. APPLICABLE LAW. If you acquired this Specification in the United States, this Agreement is governed by the laws of the State of Washington. If you acquired this Specification in Canada, unless expressly prohibited by local law, this Agreement is governed by the laws in force in the Province of Ontario, Canada; and, in respect of any dispute which may arise hereunder, you consent to the jurisdiction of the federal and provincial courts sitting in Toronto, Ontario. If this Specification was acquired outside the United States, then local law may apply. 10.QUESTIONS. Should you have any questions concerning this Agreement, or if you desire to contact Microsoft for any reason, please contact the Microsoft subsidiary serving your country, or write: Microsoft Sales Information Center/One Microsoft Way/Redmond, WA 98052-6399.  11.ENTIRE AGREEMENT.  This Agreement  is the entire agreement between you and Microsoft relating to the Specification and the Support Services (if any) and they supersede all prior or contemporaneous oral or written communications,  proposals and representations with respect to the Specification or any other subject matter covered by this Agreement.  To the extent the terms of any Microsoft policies or programs for Support Services conflict with the terms of this Agreement, the terms of this Agreement shall control. Si vous avez acquis votre produit Microsoft au CANADA, la garantie limit e suivante vous concerne : RENONCIATION AUX GARANTIES. Dans toute la mesure permise par la l gislation en vigueur, Microsoft et ses fournisseurs fournissent la Specification (et   toute propri  intellectuelle dans celle-ci)  et tous (selon le cas) les services d assistance li  la Specification ( Services d assistance ) TELS QUELS ET AVEC TOUS LEURS D FAUTS, et par les pr sentes excluent toute garantie ou condition, expresse ou implicite, l gale ou conventionnelle,  crite ou verbale, y compris, mais sans limitation, toute (selon le cas) garantie ou condition implicite ou l gale de qualit  marchande, de conformit  un usage particulier, d absence de virus, d exactitude et d gralit  des r ponses, de r sultats, d efforts techniques et professionnels et d absence de n gligence, le tout relativement   la Specification,   toute propri  intellectuelle dans celle-ci et   la prestation ou   la non-prestation des Services d assistance.  DE PLUS, IL N Y A AUCUNE GARANTIE ET CONDITION DE TITRE, DE JOUISSANCE PAISIBLE, DE POSSESSION PAISIBLE, DE SIMILARIT  LA DESCRIPTION ET D ABSENCE DE CONTREFA ON RELATIVEMENT   LA SP CIFICATION ET   TOUTE PROPRI  INTELLECTUELLE DANS CELLE-CI.  VOUS SUPPORTEZ TOUS LES RISQUES D COULANT DE L UTILISATION ET DE LA PERFORMANCE DE LA SP CIFICATION ET DE TOUTE PROPRI  INTELLECTUELLE DANS CELLE-CI  ET CEUX D COULANT DES SERVICES D ASSISTANCE (S IL Y A LIEU). EXCLUSION DES DOMMAGES INDIRECTS, ACCESSOIRES ET AUTRES.  Dans toute la mesure permise par la l gislation en vigueur, Microsoft et ses fournisseurs ne sont en aucun cas responsables de tout dommage sp cial, indirect, accessoire, moral ou exemplaire quel qu il soit (y compris, mais sans limitation, les dommages entra s par la perte de b fices ou la perte d information confidentielle ou autre, l interruption des affaires, les pr judices corporels, la perte de confidentialit , le d faut de remplir toute obligation y compris les obligations de bonne foi et de diligence raisonnable, la n gligence et toute autre perte p cuniaire ou autre perte de quelque nature que ce soit) d coulant de, ou de toute autre mani re li utilisation ou l impossibilit utiliser la Sp cification, toute propri  intellectuelle dans celle-ci, la prestation ou la non-prestation des Services d assistance ou autrement en vertu de ou relativement   toute disposition de cette convention, que ce soit en cas de faute, de d lit (y compris la n gligence), de responsabilit  stricte, de manquement   un contrat ou de manquement   une garantie de Microsoft ou de l un de ses fournisseurs, et ce, m me si Microsoft ou l un de ses fournisseurs a   avis  de la possibilit  de tels dommages. LIMITATION DE RESPONSABILIT  ET RECOURS.  Malgr  tout dommage que vous pourriez encourir pour quelque raison que ce soit (y compris, mais sans limitation, tous les dommages mentionn s ci-dessus et tous les dommages directs et g raux), la seule responsabilit  de Microsoft et de ses fournisseurs en vertu de toute disposition de cette convention et votre unique recours en regard de tout ce qui pr de sont limit s au plus   des montants suivants:  soit (a) le montant que vous avez pay  pour la Sp cification, soit (b) un montant  quivalant   cinq dollars U.S. (5,00 $ U.S.).  Les limitations, exclusions et renonciations ci-dessus s appliquent dans toute la mesure permise par la l gislation en vigueur, et ce m me si leur application a pour effet de priver un recours de son essence. DROITS LIMIT S DU GOUVERNEMENT AM RICAIN Tout Produit Logiciel fourni au gouvernement am ricain conform ment   des demandes  mises le ou apr s le 1er d cembre 1995 est offert avec les restrictions et droits commerciaux d crits ailleurs dans la pr sente convention.  Tout Produit Logiciel fourni au gouvernement am ricain conform ment   des demandes  mises avant le 1er d cembre 1995 est offert avec des DROITS LIMIT S tels que pr vus dans le FAR, 48CFR 52.227-14 (juin 1987) ou dans le FAR, 48CFR 252.227-7013 (octobre 1988), tels qu applicables. Sauf lorsqu express ment prohib  par la l gislation locale, la pr sente  convention est r gie par les lois en vigueur dans la province d Ontario, Canada.  Pour tout diff rend qui pourrait d couler des pr sentes, vous acceptez la comp tence des tribunaux f raux et provinciaux si geant   Toronto, Ontario. Si vous avez des questions concernant cette convention ou si vous d sirez communiquer avec Microsoft pour quelque raison que ce soit, veuillez contacter la succursale Microsoft desservant votre pays, ou  crire  : Microsoft Sales Information Center, One Microsoft Way, Redmond, Washington 98052-6399.          Notational Conventions in this Document Numbers that have the characters   at the beginning of them are hexadecimal (base 16) numbers. Any numbers that do not have the characters   at the beginning are decimal (base 10) numbers. The code fragments in this document are written in the   programming language. Strict typing and syntax are not adhered to. There are several code fragments in this document that freely mix 32-bit and 16-bit data elements. It is assumed that you are a programmer who understands how to properly type such operations so that data is not lost due to truncation of 32-bit values to 16-bit values. Also take note that all data types are UNSIGNED. Do not do FAT computations with signed integer types, because the computations will be wrong on some FAT volumes. General Comments (Applicable to FAT File System All Types) All of the FAT file systems were originally developed for the IBM PC machine architecture. The importance of this is that FAT file system on disk data structure is all  little endian.  If we look at one 32-bit FAT entry stored on disk as a series of four 8-bit bytes the first being byte[0] and the last being byte[4] here is where the 32 bits numbered 00 through 31 are (00 being the least significant bit): byte[3] 3 3 2 2 2 2 2 2 1 0 9 8 7 6 5 4 byte[2] 2 2 2 2 1 1 1 1 3 2 1 0 9 8 7 6 byte[1] 1 1 1 1 1 1 0 0 5 4 3 2 1 0 9 8 byte[0] 0 0 0 0 0 0 0 0 7 6 5 4 3 2 1 0 This is important if your machine is a  big endian  machine, because you will have to translate between big and little endian as you move data to and from the disk. A FAT file system volume is composed of four basic regions, which are laid out in this order on the volume:  Reserved Region  FAT Region  Root Directory Region (doesn t exist on FAT32 volumes)  File and Directory Data Region Boot Sector and BPB The first important data structure on a FAT volume is called the BPB (BIOS Parameter Block), which is located in the first sector of the volume in the Reserved Region. This sector is sometimes called the  boot sector  or the  reserved sector  or the  0th sector,  but the important fact is simply that it is the first sector of the volume.  This is the first thing about the FAT file system that sometimes causes confusion. In MS-DOS version 1.x, there was not a BPB in the boot sector. In this first version of the FAT file system, there were only two different formats, the one for single-sided and the one for double-sided 360K 5.25-inch floppy disks. The determination of which type was on the disk was done by looking at the first byte of the FAT (the low 8 bits of FAT[0]).  This type of media determination was superseded in MS-DOS version 2.x by putting a BPB in the boot sector, and the old style of media determination (done by looking at the first byte of the FAT) was no longer supported. All FAT volumes must have a BPB in the boot sector.  This brings us to the second point of confusion relating to FAT volume determination: What exactly does a BPB look like? The BPB in the boot sector defined for MS-DOS 2.x only allowed for a FAT volume with strictly less than 65,536 sectors (32 MB worth of 512-byte sectors). This limitation was due to the fact that the  total sectors  field was only a 16-bit field. This limitation was addressed by MS-DOS 3.x, where the BPB was modified to include a new 32-bit field for the total sectors value.  The next BPB change occurred with the Microsoft Windows 95 operating system, where the FAT32 type was introduced. FAT16 was limited by the maximum size of the FAT and the maximum valid cluster size to no more than a 2 GB volume if the disk had 512-byte sectors. FAT32 addressed this limitation on the amount of disk space that one FAT volume could occupy so that disks larger than 2 GB only had to have one partition defined.  The FAT32 BPB exactly matches the FAT12/FAT16 BPB up to and including the BPB_TotSec32 field. They differ starting at offset 36, depending on whether the media type is FAT12/FAT16 or FAT32 (see discussion below for determining FAT type). The relevant point here is that the BPB in the boot sector of a FAT volume should always be one that has all of the new BPB fields for either the FAT12/FAT16 or FAT32 BPB type. Doing it this way ensures the maximum compatibility of the FAT volume and ensures that all FAT file system drivers will understand and support the volume properly, because it always contains all of the currently defined fields.  NOTE: In the following description, all the fields whose names start with BPB_ are part of the BPB. All the fields whose names start with BS_ are part of the boot sector and not really part of the BPB. The following shows the start of sector 0 of a FAT volume, which contains the BPB:  Boot Sector and BPB Structure Offset (byte) Size (bytes) Description BS_jmpBoot Jump instruction to boot code. This field has two allowed forms: jmpBoot[0] = 0xEB, jmpBoot[1] = 0x??, jmpBoot[2] = 0x90  jmpBoot[0] = 0xE9, jmpBoot[1] = 0x??, jmpBoot[2] = 0x?? 0x?? indicates that any 8-bit value is allowed in that byte. What this forms is a three-byte Intel x86 unconditional branch (jump) instruction that jumps to the start of the operating system bootstrap code. This code typically occupies the rest of sector 0 of the volume following the BPB and possibly other sectors. Either of these forms is acceptable. JmpBoot[0] = 0xEB is the more frequently used format. BS_OEMName MSWIN4.1  There are many misconceptions about this field. It is only a name string. Microsoft operating systems don t pay any attention to this field. Some FAT drivers do. This is the reason that the indicated string,  MSWIN4.1 , is the recommended setting, because it is the setting least likely to cause compatibility problems. If you want to put something else in here, that is your option, but the result may be that some FAT drivers might not recognize the volume. Typically this is some indication of what system formatted the volume. BPB_BytsPerSec Count of bytes per sector. This value may take on only the following values: 512, 1024, 2048 or 4096. If maximum compatibility is desired, only the value 512 should be used. There is a lot of FAT code in the world that is basically  hard wired  to 512 bytes per sector and doesn t bother to check this field to make sure it is 512. Microsoft operating systems will properly support 1024, 2048, and 4096, but these values are not recommended.  BPB_SecPerClus Number of sectors per allocation unit. This value must be a power of 2 that is greater than 0. The legal values are 1, 2, 4, 8, 16, 32, 64, and 128. Note however, that a value should never be used that results in a  bytes per cluster  value (BPB_BytsPerSec * BPB_SecPerClus) greater than 32K (32 * 1024). There is a misconception that values greater than this are OK. Values that cause a cluster size greater than 32K bytes do not work properly; do not try to define one. Some versions of some systems allow 64K bytes per cluster value. Many application setup programs will not work correctly on such a FAT volume. BPB_RsvdSecCnt Number of reserved sectors in the Reserved region of the volume starting at the first sector of the volume. This field must not be 0. For FAT12 and FAT16 volumes, this value should never be anything other than 1. For FAT32 volumes, this value is typically 32. There is a lot of FAT code in the world  hard wired  to 1 reserved sector for FAT12 and FAT16 volumes and that doesn t bother to check this field to make sure it is 1. Microsoft operating systems will properly support any non-zero value in this field. BPB_NumFATs The count of FAT data structures on the volume. This field should always contain the value 2 for any FAT volume of any type. Although any value greater than or equal to 1 is perfectly valid, many software programs and a few operating systems  FAT file system drivers may not function properly if the value is something other than 2. All Microsoft file system drivers will support a value other than 2, but it is still highly recommended that no value other than 2 be used in this field.  The reason the standard value for this field is 2 is to provide redun dancy for the FAT data structure so that if a sector goes bad in one of the FATs, that data is not lost because it is duplicated in the other FAT. On non-disk-based media, such as FLASH memory cards, where such redundancy is a useless feature, a value of 1 may be used to save the space that a second copy of the FAT uses, but some FAT file system drivers might not recognize such a volume properly. BPB_RootEntCnt For FAT12 and FAT16 volumes, this field contains the count of 32-byte directory entries in the root directory. For FAT32 volumes, this field must be set to 0. For FAT12 and FAT16 volumes, this value should always specify a count that when multiplied by 32 results in an even multiple of BPB_BytsPerSec. For maximum compatibility, FAT16 volumes should use the value 512. BPB_TotSec16 This field is the old 16-bit total count of sectors on the volume. This count includes the count of all sectors in all four regions of the volume. This field can be 0; if it is 0, then BPB_TotSec32 must be non-zero. For FAT32 volumes, this field must be 0. For FAT12 and FAT16 volumes, this field contains the sector count, and BPB_TotSec32 is 0 if the total sector count   (is less than 0x10000). BPB_Media 0xF8 is the standard value for  fixed  (non-removable) media. For removable media, 0xF0 is frequently used. The legal values for this field are 0xF0, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, and 0xFF. The only other important point is that whatever value is put in here must also be put in the low byte of the FAT[0] entry. This dates back to the old MS-DOS 1.x media determination noted earlier and is no longer usually used for anything. BPB_FATSz16 This field is the FAT12/FAT16 16-bit count of sectors occupied by ONE FAT. On FAT32 volumes this field must be 0, and BPB_FATSz32 contains the FAT size count. BPB_SecPerTrk Sectors per track for interrupt 0x13. This field is only relevant for media that have a geometry (volume is broken down into tracks by multiple heads and cylinders) and are visible on interrupt 0x13. This field contains the  sectors per track  geometry value.  BPB_NumHeads Number of heads for interrupt 0x13. This field is relevant as discussed earlier for BPB_SecPerTrk. This field contains the one based  count of heads . For example, on a 1.44 MB 3.5-inch floppy drive this value is 2. BPB_HiddSec Count of hidden sectors preceding the partition that contains this FAT volume. This field is generally only relevant for media visible on interrupt 0x13. This field should always be zero on media that are not partitioned. Exactly what value is appropriate is operating system specific. BPB_TotSec32  This field is the new 32-bit total count of sectors on the volume. This count includes the count of all sectors in all four regions of the volume. This field can be 0; if it is 0, then BPB_TotSec16 must be non-zero. For FAT32 volumes, this field must be non-zero. For FAT12/FAT16 volumes, this field contains the sector count if BPB_TotSec16 is 0 (count is greater than or equal to 0x10000). At this point, the BPB/boot sector for FAT12 and FAT16 differs from the BPB/boot sector for FAT32. The first table shows the structure for FAT12 and FAT16 starting at offset 36 of the boot sector. Fat12 and Fat16 Structure Starting at Offset 36 Offset (byte) Size (bytes) Description BS_DrvNum Int 0x13 drive number (e.g. 0x80). This field supports MS-DOS bootstrap and is set to the INT 0x13 drive number of the media (0x00 for floppy disks, 0x80 for hard disks).  NOTE: This field is actually operating system specific. BS_Reserved1 Reserved (used by Windows NT). Code that formats FAT volumes should always set this byte to 0. BS_BootSig Extended boot signature (0x29). This is a signature byte that indicates that the following three fields in the boot sector are present. BS_VolID Volume serial number. This field, together with BS_VolLab, supports volume tracking on removable media. These values allow FAT file system drivers to detect that the wrong disk is inserted in a removable drive. This ID is usually generated by simply combining the current date and time into a 32-bit value. BS_VolLab Volume label. This field matches the 11-byte volume label recorded in the root directory.  NOTE: FAT file system drivers should make sure that they update this field when the volume label file in the root directory has its name changed or created. The setting for this field when there is no volume label is the string  NO NAME     BS_FilSysType One of the strings  FAT12    FAT16    , or  FAT      .  NOTE: Many people think that the string in this field has something to do with the determination of what type of FAT FAT12, FAT16, or FAT32 that the volume has. This is not true. You will note from its name that this field is not actually part of the BPB. This string is informational only and is not used by Microsoft file system drivers to determine FAT typ,e because it is frequently not set correctly or is not present. See the FAT Type Determination section of this document. This string should be set based on the FAT type though, because some non-Microsoft FAT file system drivers do look at it. Here is the structure for FAT32 starting at offset 36 of the boot sector. FAT32 Structure Starting at Offset 36 Offset (byte) Size (bytes) Description BPB_FATSz32 This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. This field is the FAT32 32-bit count of sectors occupied by ONE FAT. BPB_FATSz16 must be 0.  BPB_ExtFlags This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. Bits 0-3 -- Zero-based number of active FAT. Only valid if mirroring is disabled. Bits 4-6 -- Reserved. Bit      7 -- 0 means the FAT is mirrored at runtime into all FATs. -- 1 means only one FAT is active; it is the one referenced in bits 0-3. Bits 8-15  -- Reserved. BPB_FSVer This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. High byte is major revision number. Low byte is minor revision number. This is the version number of the FAT32 volume. This supports the ability to extend the FAT32 media type in the future without worrying about old FAT32 drivers mounting the volume. This document defines the version to 0:0.  If this field is non-zero, back-level Windows versions will not mount the volume.  NOTE:  Disk utilities should respect this field and not operate on volumes with a higher major or minor version number than that for which they were designed. FAT32 file system drivers must check this field and not mount the volume if it does not contain a version number that was defined at the time the driver was written. BPB_RootClus This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. This is set to the cluster number of the first cluster of the root directory, usually 2 but not required to be 2.  NOTE:  Disk utilities that change the location of the root directory should make every effort to place the first cluster of the root directory in the first non-bad cluster on the drive (i.e., in cluster 2, unless it s marked bad). This is specified so that disk repair utilities can easily find the root directory if this field accidentally gets zeroed.  BPB_FSInfo This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. Sector number of FSINFO structure in the reserved area of the FAT32 volume. Usually 1.   NOTE: There will be a copy of the FSINFO structure in BackupBoot, but only the copy pointed to by this field will be kept up to date (i.e., both the primary and backup boot record will point to the same FSINFO sector). BPB_BkBootSec This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. If non-zero, indicates the sector number in the reserved area of the volume of a copy of the boot record. Usually 6. No value other than 6 is recommended. BPB_Reserved This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. Reserved for future expansion. Code that formats FAT32 volumes should always set all of the bytes of this field to 0. BS_DrvNum This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_Reserved1 This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_BootSig This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_VolID This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_VolLab This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_FilSysType Always set to the string  FAT32    .  Please see the note for this field in the FAT12/FAT16 section earlier. This field has nothing to do with FAT type determination. There is one other important note about Sector 0 of a FAT volume. If we consider the contents of the sector as a byte array, it must be true that sector[510] equals 0x55, and sector[511] equals 0xAA.  NOTE: Many FAT documents mistakenly say that this 0xAA55 signature occupies the  last 2 bytes of the boot sector . This statement is correct if   and only if   BPB_BytsPerSec is 512. If BPB_BytsPerSec is greater than 512, the offsets of these signature bytes do not change (although it is perfectly OK for the last two bytes at the end of the boot sector to also contain this signature). Check your assumptions about the value in the BPB_TotSec16/32 field. Assume we have a disk or partition of size in sectors DskSz. If the BPB TotSec field (either BPB_TotSec16 or BPB_TotSec32   whichever is non-zero) is less than or equal to DskSz, there is nothing whatsoever wrong with the FAT volume. In fact, it is not at all unusual to have a BPB_TotSec16/32 value that is slightly smaller than DskSz. It is also perfectly OK for the BPB_TotSec16/32 value to be considerably smaller than DskSz.  All this means is that disk space is being wasted. It does not by itself mean that the FAT volume is damaged in some way. However, if BPB_TotSec16/32 is larger than DskSz, the volume is seriously damaged or malformed because it extends past the end of the media or overlaps data that follows it on the disk. Treating a volume for which the BPB_TotSec16/32 value is  too large  for the media or partition as valid can lead to catastrophic data loss. FAT Data Structure The next data structure that is important is the FAT itself. What this data structure does is define a singly linked list of the  extents  (clusters) of a file. Note at this point that a FAT directory or file container is nothing but a regular file that has a special attribute indicating it is a directory. The only other special thing about a directory is that the data or contents of the   is a series of 32=byte FAT directory entries (see discussion below). In all other respects, a directory is just like a file. The FAT maps the data region of the volume by cluster number. The first data cluster is cluster 2.  The first sector of cluster 2 (the data region of the disk) is computed using the BPB fields for the volume as follows. First, we determine the count of sectors occupied by the root directory: RootDirSectors = ((BPB_RootEntCnt * 32) + (BPB_BytsPerSec   1)) / BPB_BytsPerSec; Note that on a FAT32 volume the BPB_RootEntCnt value is always 0, so on a FAT32 volume RootDirSectors is always 0. The 32 in the above is the size of one FAT directory entry in bytes. Note also that this computation rounds up. The start of the data region, the first sector of cluster 2, is computed as follows: If(BPB_FATSz16 != 0)     FATSz = BPB_FATSz16;     FATSz = BPB_FATSz32;  FirstDataSector = BPB_ResvdSecCnt + (BPB_NumFATs * FATSz) + RootDirSectors; NOTE: This sector number is relative to the first sector of the volume that contains the BPB (the sector that contains the BPB is sector number 0). This does not necessarily map directly onto the drive, because sector 0 of the volume is not necessarily sector 0 of the drive due to partitioning. Given any valid data cluster number N, the sector number of the first sector of that cluster (again relative to sector 0 of the FAT volume) is computed as follows: FirstSectorofCluster = ((N   2) * BPB_SecPerClus) + FirstDataSector; NOTE: Because BPB_SecPerClus is restricted to powers of 2 (1,2,4,8,16,32 .), this means that division and multiplication by BPB_SecPerClus can actually be performed via SHIFT operations on 2s complement architectures that are usually faster instructions than MULT and DIV instructions. On current Intel X86 processors, this is largely irrelevant though because the MULT and DIV machine instructions are heavily optimized for multiplication and division by powers of 2. FAT Type Determination There is considerable confusion over exactly how this works, which leads to many  off by 1 off by 2 off by 10 , and  massively off  errors. It is really quite simple how this works. The FAT type one of FAT12, FAT16, or FAT32 is determined by the count of clusters on the volume and nothing else.  Please read everything in this section carefully, all of the words are important. For example, note that the statement was  count of clusters.  This is not the same thing as  maximum valid cluster number,  because the first data cluster is 2 and not 0 or 1.  To begin, let s discuss exactly how the  count of clusters  value is determined. This is all done using the BPB fields for the volume. First, we determine the count of sectors occupied by the root directory as noted earlier. RootDirSectors = ((BPB_RootEntCnt * 32) + (BPB_BytsPerSec   1)) / BPB_BytsPerSec; Note that on a FAT32 volume, the BPB_RootEntCnt value is always 0; so on a FAT32 volume, RootDirSectors is always 0.  Next, we determine the count of sectors in the data region of the volume: If(BPB_FATSz16 != 0)     FATSz = BPB_FATSz16;     FATSz = BPB_FATSz32;   If(BPB_TotSec16 != 0)     TotSec = BPB_TotSec16;     TotSec = BPB_TotSec32; DataSec = TotSec   (BPB_ResvdSecCnt + (BPB_NumFATs * FATSz) + RootDirSectors); Now we determine the count of clusters: CountofClusters = DataSec / BPB_SecPerClus; Please note that this computation rounds down. Now we can determine the FAT type. Please note carefully or you will commit an off-by-one error!  In the following example, when it says <, it does not mean <=. Note also that the numbers are correct. The first number for FAT12 is 4085; the second number for FAT16 is 65525. These numbers and the   signs are not wrong. If(CountofClusters < 4085) { /* Volume is FAT12 */ } else if(CountofClusters < 65525) {     /* Volume is FAT16 */ } else {     /* Volume is FAT32 */ This is the one and only way that FAT type is determined. There is no such thing as a FAT12 volume that has more than 4084 clusters. There is no such thing as a FAT16 volume that has less than 4085 clusters or more than 65,524 clusters. There is no such thing as a FAT32 volume that has less than 65,525 clusters. If you try to make a FAT volume that violates this rule, Microsoft operating systems will not handle them correctly because they will think the volume has a different type of FAT than what you think it does. NOTE: As is noted numerous times earlier, the world is full of FAT code that is wrong. There is a lot of FAT type code that is off by 1 or 2 or 8 or 10 or 16. For this reason, it is highly recommended that if you are formatting a FAT volume which has maximum compatibility with all existing FAT code, then you should you avoid making volumes of any type that have close to 4,085 or 65,525 clusters. Stay at least 16 clusters on each side away from these cut-over cluster counts. Note also that the CountofClusters value is exactly that the count of data clusters starting at cluster 2. The maximum valid cluster number for the volume is CountofClusters + 1, and the  count of clusters including the two reserved clusters  is CountofClusters + 2. There is one more important computation related to the FAT. Given any valid cluster number N, where in the FAT(s) is the entry for that cluster number? The only FAT type for which this is complex is FAT12. For FAT16 and FAT32, the computation is simple: If(BPB_FATSz16 != 0)      FATSz = BPB_FATSz16;  Else     FATSz = BPB_FATSz32;   If(FATType == FAT16)     FATOffset = N * 2; Else if (FATType == FAT32)     FATOffset = N * 4; ThisFATSecNum = BPB_ResvdSecCnt + (FATOffset / BPB_BytsPerSec); ThisFATEntOffset = REM(FATOffset / BPB_BytsPerSec); ) is the remainder operator. That means the remainder after division of FATOffset by BPB_BytsPerSec. ThisFATSecNum is the sector number of the FAT sector that contains the entry for cluster N in the first FAT. If you want the sector number in the second FAT, you add FATSz to ThisFATSecNum; for the third FAT, you add 2*FATSz, and so on.  You now read sector number ThisFATSecNum (remember this is a sector number relative to sector 0 of the FAT volume). Assume this is read into an 8-bit byte array named SecBuff. Also assume that the type WORD is a 16-bit unsigned and that the type DWORD is a 32-bit unsigned. If(FATType == FAT16)     FAT16ClusEntryVal = *((WORD *) &SecBuff[ThisFATEntOffset]);     FAT32ClusEntryVal = (*((DWORD *) &SecBuff[ThisFATEntOffset])) & 0x0FFFFFFF; Fetches the contents of that cluster. To set the contents of this same cluster you do the following: If(FATType == FAT16)     *((WORD *) &SecBuff[ThisFATEntOffset]) = FAT16ClusEntryVal; Else {      FAT32ClusEntryVal = FAT32ClusEntryVal & 0x0FFFFFFF;     *((DWORD *) &SecBuff[ThisFATEntOffset]) =         (*((DWORD *) &SecBuff[ThisFATEntOffset])) & 0xF0000000;     *((DWORD *) &SecBuff[ThisFATEntOffset]) =          (*((DWORD *) &SecBuff[ThisFATEntOffset])) | FAT32ClusEntryVal; Note how the FAT32 code above works. A FAT32 FAT entry is actually only a 28-bit entry. The high 4 bits of a FAT32 FAT entry are reserved. The only time that the high 4 bits of FAT32 FAT entries should ever be changed is when the volume is formatted, at which time the whole 32-bit FAT entry should be zeroed, including the high 4 bits.  A bit more explanation is in order here, because this point about FAT32 FAT entries seems to cause a great deal of confusion. Basically 32-bit FAT entries are not really 32-bit values; they are only 28-bit values. For example, all of these 32-bit cluster entry values: 0x10000000, 0xF0000000, and 0x00000000 all indicate that the cluster is FREE, because you ignore the high 4 bits when you read the cluster entry value. If the 32-bit free cluster value is currently 0x30000000 and you want to mark this cluster as bad by storing the value 0x0FFFFFF7 in it. Then the 32-bit entry will contain the value 0x3FFFFFF7 when you are done, because you must preserve the high 4 bits when you write in the 0x0FFFFFF7 bad cluster mark. Take note that because the BPB_BytsPerSec value is always divisible by 2 and 4, you never have to worry about a FAT16 or FAT32 FAT entry spanning over a sector boundary (this is not true of FAT12). The code for FAT12 is more complicated because there are 1.5 bytes (12-bits) per FAT entry.     if (FATType == FAT12)         FATOffset = N + (N / 2);     /* Multiply by 1.5 without using floating point, the divide by 2 rounds DOWN */     ThisFATSecNum = BPB_ResvdSecCnt + (FATOffset / BPB_BytsPerSec);     ThisFATEntOffset = REM(FATOffset / BPB_BytsPerSec); We now have to check for the sector boundary case: If(ThisFATEntOffset == (BPB_BytsPerSec   1)) {     /* This cluster access spans a sector boundary in the FAT      */     /* There are a number of strategies to handling this. The      */     /* easiest is to always load FAT sectors into memory           */     /* in pairs if the volume is FAT12 (if you want to load        */     /* FAT sector N, you also load FAT sector N+1 immediately      */     /* following it in memory unless sector N is the last FAT      */     /* sector). It is assumed that this is the strategy used here  */     /* which makes this if test for a sector boundary span         */     /* unnecessary.                                                */ We now access the FAT entry as a WORD just as we do for FAT16, but if the cluster number is EVEN, we only want the low 12-bits of the 16-bits we fetch; and if the cluster number is ODD, we only want the high 12-bits of the 16-bits we fetch.  FAT12ClusEntryVal = *((WORD *) &SecBuff[ThisFATEntOffset]);  If(N & 0x0001)       FAT12ClusEntryVal = FAT12ClusEntryVal >> 4; /* Cluster number is ODD */  Else      FAT12ClusEntryVal = FAT12ClusEntryVal & 0x0FFF; /* Cluster number is EVEN */ Fetches the contents of that cluster. To set the contents of this same cluster you do the following: If(N & 0x0001) {     FAT12ClusEntryVal = FAT12ClusEntryVal << 4; /* Cluster number is ODD */     *((WORD *) &SecBuff[ThisFATEntOffset]) =          (*((WORD *) &SecBuff[ThisFATEntOffset])) & 0x000F; } Else {     FAT12ClusEntryVal = FAT12ClusEntryVal & 0x0FFF; /* Cluster number is EVEN */     *((WORD *) &SecBuff[ThisFATEntOffset]) =          (*((WORD *) &SecBuff[ThisFATEntOffset])) & 0xF000; *((WORD *) &SecBuff[ThisFATEntOffset]) =      (*((WORD *) &SecBuff[ThisFATEntOffset])) | FAT12ClusEntryVal; NOTE: It is assumed that the >> operator shifts a bit value of 0 into the high 4 bits and that the << operator shifts a bit value of 0 into the low 4 bits. The way the data of a file is associated with the file is as follows. In the directory entry, the cluster number of the first cluster of the file is recorded. The first cluster (extent) of the file is the data associated with this first cluster number, and the location of that data on the volume is computed from the cluster number as described earlier (computation of FirstSectorofCluster).  Note that a zero-length file a file that has no data allocated to it has a first cluster number of 0 placed in its directory entry. This cluster location in the FAT (see earlier computation of ThisFATSecNum and ThisFATEntOffset) contains either an EOC mark (End Of Clusterchain) or the cluster number of the next cluster of the file. The EOC value is FAT type dependant (assume FATContent is the contents of the cluster entry in the FAT being checked to see whether it is an EOC mark): IsEOF = FALSE; If(FATType == FAT12) {     If(FATContent >= 0x0FF8)         IsEOF = TRUE; } else if(FATType == FAT16) {     If(FATContent >= 0xFFF8)         IsEOF = TRUE; } else if (FATType == FAT32) {     If(FATContent >= 0x0FFFFFF8)         IsEOF = TRUE; Note that the cluster number whose cluster entry in the FAT contains the EOC mark is allocated to the file and is also the last cluster allocated to the file. Microsoft operating system FAT drivers use the EOC value 0x0FFF for FAT12, 0xFFFF for FAT16, and 0x0FFFFFFF for FAT32 when they set the contents of a cluster to the EOC mark. There are various disk utilities for Microsoft operating systems that use a different value, however. There is also a special  BAD CLUSTER  mark. Any cluster that contains the  BAD CLUSTER  value in its FAT entry is a cluster that should not be placed on the free list because it is prone to disk errors. The  BAD CLUSTER  value is 0x0FF7 for FAT12, 0xFFF7 for FAT16, and 0x0FFFFFF7 for FAT32. The other relevant note here is that these bad clusters are also lost clusters clusters that appear to be allocated because they contain a non-zero value but which are not part of any files allocation chain. Disk repair utilities must recognize lost clusters that contain this special value as bad clusters and not change the content of the cluster entry.  NOTE: It is not possible for the bad cluster mark to be an allocatable cluster number on FAT12 and FAT16 volumes, but it is feasible for 0x0FFFFFF7 to be an allocatable cluster number on FAT32 volumes. To avoid possible confusion by disk utilities, no FAT32 volume should ever be configured such that 0x0FFFFFF7 is an allocatable cluster number.  The list of free clusters in the FAT is nothing more than the list of all clusters that contain the value 0 in their FAT cluster entry. Note that this value must be fetched as described earlier as for any other FAT entry that is not free. This list of free clusters is not stored anywhere on the volume; it must be computed when the volume is mounted by scanning the FAT for entries that contain the value 0. On FAT32 volumes, the BPB_FSInfo sector may contain a valid count of free clusters on the volume. See the documentation of the FAT32 FSInfo sector. What are the two reserved clusters at the start of the FAT for? The first reserved cluster, FAT[0], contains the BPB_Media byte value in its low 8 bits, and all other bits are set to 1. For example, if the BPB_Media value is 0xF8, for FAT12 FAT[0] = 0x0FF8, for FAT16 FAT[0] = 0xFFF8, and for FAT32 FAT[0] = 0x0FFFFFF8. The second reserved cluster, FAT[1], is set by FORMAT to the EOC mark. On FAT12 volumes, it is not used and is simply always contains an EOC mark. For FAT16 and FAT32, the file system driver may use the high two bits of the FAT[1] entry for dirty volume flags (all other bits, are always left set to 1). Note that the bit location is different for FAT16 and FAT32, because they are the high 2 bits of the entry.  For FAT16:     ClnShutBitMask  = 0x8000;     HrdErrBitMask   = 0x4000; For FAT32:     ClnShutBitMask  = 0x08000000;     HrdErrBitMask   = 0x04000000; Bit ClnShutBitMask  If bit is 1, volume is  clean If bit is 0, volume is  dirty . This indicates that the file system driver did not Dismount the volume properly the last time it had the volume mounted. It would be a good idea to run a Chkdsk/Scandisk disk repair utility on it, because it may be damaged. Bit HrdErrBitMask  If this bit is 1, no disk read/write errors were encountered. If this bit is 0, the file system driver encountered a disk I/O error on the Volume the last time it was mounted, which is an indicator that some sectors may have gone bad on the volume. It would be a good idea to run a Chkdsk/Scandisk disk repair utility that does surface analysis on it to look for new bad sectors. Here are two more important notes about the FAT region of a FAT volume: The last sector of the FAT is not necessarily all part of the FAT. The FAT stops at the cluster number in the last FAT sector that corresponds to the entry for cluster number CountofClusters + 1 (see the CountofClusters computation earlier), and this entry is not necessarily at the end of the last FAT sector. FAT code should not make any assumptions about what the contents of the last FAT sector are after the CountofClusters + 1 entry. FAT format code should zero the bytes after this entry though. The BPB_FATSz16 (BPB_FATSz32 for FAT32 volumes) value may be bigger than it needs to be. In other words, there may be totally unused FAT sectors at the end of each FAT in the FAT region of the volume. For this reason, the last sector of the FAT is always computed using the CountofClusters + 1 value, never from the BPB_FATSz16/32 value. FAT code should not make any assumptions about what the contents of these  extra  FAT sectors are. FAT format code should zero the contents of these extra FAT sectors though. FAT Volume Initialization At this point, the careful reader should have one very interesting question. Given that the FAT type (FAT12, FAT16, or FAT32) is dependant on the number of clusters and that the sectors available in the data area of a FAT volume is dependant on the size of the FAT when handed an unformatted volume that does not yet have a BPB, how do you determine all this and compute the proper values to put in BPB_SecPerClus and either BPB_FATSz16 or BPB_FATSz32? The way Microsoft operating systems do this is with a fixed value, several tables, and a clever piece of arithmetic.  Microsoft operating systems only do FAT12 on floppy disks. Because there is a limited number of floppy formats that all have a fixed size, this is done with a simple table: If it is a floppy of this type, then the BPB looks like this. There is no dynamic computation for FAT12. For the FAT12 formats, all the computation for BPB_SecPerClus and BPB_FATSz16 was worked out by hand on a piece of paper and recorded in the table (being careful of course that the resultant cluster count was always less than 4085). If your media is larger than 4 MB, do not bother with FAT12. Use smaller BPB_SecPerClus values so that the volume will be FAT16.  The rest of this section is totally specific to drives that have 512 bytes per sector. You cannot use these tables, or the clever arithmetic, with drives that have a different sector size. The  fixed value  is simply a volume size that is the  FAT16 to FAT32 cutover value . Any volume size smaller than this is FAT16 and any volume of this size or larger is FAT32. For Windows, this value is 512 MB. Any FAT volume smaller than 512 MB is FAT16, and any FAT volume of 512 MB or larger is FAT32.  Please don t draw an incorrect conclusion here.  There are many FAT16 volumes out there that are larger than 512 MB. There are various ways to force the format to be FAT16 rather than the default of FAT32, and there is a great deal of code that implements different limits. All we are talking about here is the default cutover value for MS-DOS and Windows on volumes that have not yet been formatted. There are two tables one is for FAT16 and the other is for FAT32. An entry in these tables is selected based on the size of the volume in 512 byte sectors (the value that will go in BPB_TotSec16 or BPB_TotSec32), and the value that this table sets is the BPB_SecPerClus value.      struct DSKSZTOSECPERCLUS { DWORD DiskSize; SecPerClusVal;     }; *This is the table for FAT16 drives. NOTE that this table includes * entries for disk sizes larger than 512 MB even though typically * only the entries for disks < 512 MB in size are used. * The way this table is accessed is to look for the first entry * in the table for which the disk size is less than or equal * to the DiskSize field in that table entry.  For this table to * work properly BPB_RsvdSecCnt must be 1, BPB_NumFATs * must be 2, and BPB_RootEntCnt must be 512. Any of these values * being different may require the first table entries DiskSize value * to be changed otherwise the cluster count may be to low for FAT16.    */     DSKSZTOSECPERCLUS DskTableFAT16 [] = {         {        8400,   0}, /* disks up to  4.1 MB, the 0 value for SecPerClusVal trips an error */         {      32680,   2},  /* disks up to   16 MB,  1k cluster */         {    262144,   4},   /* disks up to 128 MB,  2k cluster */         {   524288,    8},   /* disks up to 256 MB,  4k cluster */         { 1048576,  16},     /* disks up to 512 MB,  8k cluster */         /* The entries after this point are not used unless FAT16 is forced */         { 2097152,  32},     /* disks up to     1 GB, 16k cluster */         { 4194304,  64},     /* disks up to     2 GB, 32k cluster */         { 0xFFFFFFFF, 0} /* any disk greater than 2GB, 0 value for SecPerClusVal trips an error */     }; * This is the table for FAT32 drives. NOTE that this table includes * entries for disk sizes smaller than 512 MB even though typically * only the entries for disks >= 512 MB in size are used. * The way this table is accessed is to look for the first entry * in the table for which the disk size is less than or equal * to the DiskSize field in that table entry. For this table to * work properly BPB_RsvdSecCnt must be 32, and BPB_NumFATs * must be 2. Any of these values being different may require the first  * table entries DiskSize value to be changed otherwise the cluster count  * may be to low for FAT32.     DSKSZTOSECPERCLUS DskTableFAT32 [] = {         {       66600,   0},  /* disks up to 32.5 MB, the 0 value for SecPerClusVal trips an error */         {     532480,   1},   /* disks up to 260 MB,  .5k cluster */         { 16777216,   8},     /* disks up to     8 GB,    4k cluster */         { 33554432, 16},      /* disks up to   16 GB,    8k cluster */         { 67108864, 32},      /* disks up to   32 GB,  16k cluster */         { 0xFFFFFFFF, 64}/* disks greater than 32GB, 32k cluster */     }; So given a disk size and a FAT type of FAT16 or FAT32, we now have a BPB_SecPerClus value. The only thing we have left is do is to compute how many sectors the FAT takes up so that we can set BPB_FATSz16 or BPB_FATSz32. Note that at this point we assume that BPB_RootEntCnt, BPB_RsvdSecCnt, and BPB_NumFATs are appropriately set. We also assume that DskSize is the size of the volume that we are either going to put in BPB_TotSec32 or BPB_TotSec16. RootDirSectors = ((BPB_RootEntCnt * 32) + (BPB_BytsPerSec   1)) / BPB_BytsPerSec; TmpVal1 = DskSize   (BPB_ResvdSecCnt + RootDirSectors); TmpVal2 = (256 * BPB_SecPerClus) + BPB_NumFATs; If(FATType == FAT32)     TmpVal2 = TmpVal2 / 2; FATSz = (TMPVal1 + (TmpVal2   1)) / TmpVal2; If(FATType == FAT32) {     BPB_FATSz16 = 0;     BPB_FATSz32 = FATSz; } else {     BPB_FATSz16 = LOWORD(FATSz);     /* there is no BPB_FATSz32 in a FAT16 BPB */ Do not spend too much time trying to figure out why this math works. The basis for the computation is complicated; the important point is that this is how Microsoft operating systems do it, and it works. Note, however, that this math does not work perfectly. It will occasionally set a FATSz that is up to 2 sectors too large for FAT16, and occasionally up to 8 sectors too large for FAT32. It will never compute a FATSz value that is too small, however. Because it is OK to have a FATSz that is too large, at the expense of wasting a few sectors, the fact that this computation is surprisingly simple more than makes up for it being off in a safe way in some cases. FAT32 FSInfo Sector Structure and Backup Boot Sector On a FAT32 volume, the FAT can be a large data structure, unlike on FAT16 where it is limited to a maximum of 128K worth of sectors and FAT12 where it is limited to a maximum of 6K worth of sectors. For this reason, a provision is made to store the  last known  free cluster count on the FAT32 volume so that it does not have to be computed as soon as an API call is made to ask how much free space there is on the volume (like at the end of a directory listing). The FSInfo sector number is the value in the BPB_FSInfo field; for Microsoft operating systems it is always set to 1. Here is the structure of the FSInfo sector: FAT32 FSInfo Sector Structure and Backup Boot Sector Offset (byte) Size (bytes) Description FSI_LeadSig Value 0x41615252. This lead signature is used to validate that this is in fact an FSInfo sector. FSI_Reserved1 This field is currently reserved for future expansion. FAT32 format code should always initialize all bytes of this field to 0. Bytes in this field must currently never be used. FSI_StrucSig Value 0x61417272. Another signature that is more localized in the sector to the location of the fields that are used. FSI_Free_Count Contains the last known free cluster count on the volume. If the value is 0xFFFFFFFF, then the free count is unknown and must be computed. Any other value can be used, but is not necessarily correct. It should be range checked at least to make sure it is <= volume cluster count. FSI_Nxt_Free This is a hint for the FAT driver. It indicates the cluster number at which the driver should start looking for free clusters. Because a FAT32 FAT is large, it can be rather time consuming if there are a lot of allocated clusters at the start of the FAT and the driver starts looking for a free cluster starting at cluster 2. Typically this value is set to the last cluster number that the driver allocated. If the value is 0xFFFFFFFF, then there is no hint and the driver should start looking at cluster 2. Any other value can be used, but should be checked first to make sure it is a valid cluster number for the volume. FSI_Reserved2 This field is currently reserved for future expansion. FAT32 format code should always initialize all bytes of this field to 0. Bytes in this field must currently never be used.  FSI_TrailSig Value 0xAA550000. This trail signature is used to validate that this is in fact an FSInfo sector. Note that the high 2 bytes of this value which go into the bytes at offsets 510 and 511 match the signature bytes used at the same offsets in sector 0. Another feature on FAT32 volumes that is not present on FAT16/FAT12 is the BPB_BkBootSec field. FAT16/FAT12 volumes can be totally lost if the contents of sector 0 of the volume are overwritten or sector 0 goes bad and cannot be read. This is a  single point of failure  for FAT16 and FAT12 volumes. The BPB_BkBootSec field reduces the severity of this problem for FAT32 volumes, because starting at that sector number on the volume there is a backup copy of the boot sector information including the volume s BPB.  In the case where the sector 0 information has been accidentally overwritten, all a disk repair utility has to do is restore the boot sector(s) from the backup copy. In the case where sector 0 goes bad, this allows the volume to be mounted so that the user can access data before replacing the disk.  This second case sector 0 goes bad is the reason why no value other than 6 should ever be placed in the BPB_BkBootSec field. If sector 0 is unreadable, various operating systems are  hard wired  to check for backup boot sector(s) starting at sector 6 of the FAT32 volume. Note that starting at the BPB_BkBootSec sector is a complete boot record. The Microsoft FAT32  boot sector  is actually three 512-byte sectors long. There is a copy of all three of these sectors starting at the BPB_BkBootSec sector. A copy of the FSInfo sector is also there, even though the BPB_FSInfo field in this backup boot sector is set to the same value as is stored in the sector 0 BPB.  NOTE: All 3 of these sectors have the 0xAA55 signature in sector offsets 510 and 511, just like the first boot sector does (see the earlier discussion at the end of the BPB structure description). FAT Directory Structure This is the most simple explanation of FAT directory entries. This document totally ignores the Long File Name architecture and only talks about short directory entries. For a more complete description of FAT directory structure, see the document  FAT: Long Name On-Media Format Specification A FAT directory is nothing but a   composed of a linear list of 32-byte structures. The only special directory, which must always be present, is the root directory. For FAT12 and FAT16 media, the root directory is located in a fixed location on the disk immediately following the last FAT and is of a fixed size in sectors computed from the BPB_RootEntCnt value (see computations for RootDirSectors earlier in this document). For FAT12 and FAT16 media, the first sector of the root directory is sector number relative to the first sector of the FAT volume: FirstRootDirSecNum = BPB_ResvdSecCnt + (BPB_NumFATs * BPB_FATSz16); For FAT32, the root directory can be of variable size and is a cluster chain, just like any other directory is. The first cluster of the root directory on a FAT32 volume is stored in BPB_RootClus. Unlike other directories, the root directory itself on any FAT type does not have any date or time stamps, does not have a file name (other than the implied file name  ), and does not contain   and   files as the first two directory entries in the directory. The only other special aspect of the root directory is that it is the only directory on the FAT volume for which it is valid to have a file that has only the ATTR_VOLUME_ID attribute bit set (see below). FAT 32 Byte Directory Entry Structure Offset (byte) Size (bytes) Description DIR_Name Short name. DIR_Attr File attributes: ATTR_READ_ONLY    ATTR_HIDDEN  ATTR_SYSTEM  ATTR_VOLUME_ID  ATTR_DIRECTORY ATTR_ARCHIVE   ATTR_LONG_NAME  ATTR_READ_ONLY | ATTR_HIDDEN | ATTR_SYSTEM | ATTR_VOLUME_ID The upper two bits of the attribute byte are reserved and should always be set to 0 when a file is created and never modified or looked at after that. DIR_NTRes Reserved for use by Windows NT. Set value to 0 when a file is created and never modify or look at it after that. DIR_CrtTimeTenth Millisecond stamp at file creation time. This field actually contains a count of tenths of a second. The granularity of the seconds part of DIR_CrtTime is 2 seconds so this field is a count of tenths of a second and its valid value range is 0-199 inclusive. DIR_CrtTime Time file was created. DIR_CrtDate Date file was created. DIR_LstAccDate Last access date. Note that there is no last access time, only a date. This is the date of last read or write. In the case of a write, this should be set to the same date as DIR_WrtDate. DIR_FstClusHI High word of this entry s first cluster number (always 0 for a FAT12 or FAT16 volume). DIR_WrtTime Time of last write. Note that file creation is considered a write. DIR_WrtDate Date of last write. Note that file creation is considered a write. DIR_FstClusLO Low word of this entry s first cluster number. DIR_FileSize 32-bit DWORD holding this file s size in bytes. DIR_Name[0] Special notes about the first byte (DIR_Name[0]) of a FAT directory entry: If DIR_Name[0] == 0xE5, then the directory entry is free (there is no file or directory name in this entry).  If DIR_Name[0] == 0x00, then the directory entry is free (same as for 0xE5), and there are no allocated directory entries after this one (all of the DIR_Name[0] bytes in all of the entries after this one are also set to 0).  The special 0 value, rather than the 0xE5 value, indicates to FAT file system driver code that the rest of the entries in this directory do not need to be examined because they are all free.  If DIR_Name[0] == 0x05, then the actual file name character for this byte is 0xE5. 0xE5 is actually a valid KANJI lead byte value for the character set used in Japan. The special 0x05 value is used so that this special file name case for Japan can be handled properly and not cause FAT file system code to think that the entry is free.  The DIR_Name field is actually broken into two parts+ the 8-character main part of the name, and the 3-character extension. These two parts are  trailing space padded  with bytes of 0x20.  DIR_Name[0] may not equal 0x20. There is an implied   character between the main part of the name and the extension part of the name that is not present in DIR_Name. Lower case characters are not allowed in DIR_Name (what these characters are is country specific).  The following characters are not legal in any bytes of DIR_Name:  Values less than 0x20 except for the special case of 0x05 in DIR_Name[0] described above. 0x22, 0x2A, 0x2B, 0x2C, 0x2E, 0x2F, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x5B, 0x5C, 0x5D, and 0x7C.  Here are some examples of how a user-entered name maps into DIR_Name: foo.bar             ->  FOO     BAR FOO.BAR             ->  FOO     BAR Foo.Bar             ->  FOO     BAR                 ->  FOO                        ->  FOO         PICKLE.A            ->  PICKLE  A   prettybg.big        ->  PRETTYBGBIG                -> illegal, DIR_Name[0] cannot be 0x20 In FAT directories all names are unique. Look at the first three examples earlier. Those different names all refer to the same file, and there can only be one file with DIR_Name set to  FOO     BAR  in any directory. DIR_Attr specifies attributes of the file: ATTR_READ_ONLY  Indicates that writes to the file should fail. ATTR_HIDDEN  Indicates that normal directory listings should not show this file.  ATTR_SYSTEM  Indicates that this is an operating system file. ATTR_VOLUME_ID  There should only be one   on the volume that has this attribute set, and that file must be in the root directory. This name of this file is actually the label for the volume. DIR_FstClusHI and DIR_FstClusLO must always be 0 for the volume label (no data clusters are allocated to the volume label file).  ATTR_DIRECTORY Indicates that this file is actually a container for other files. ATTR_ARCHIVE   This attribute supports backup utilities. This bit is set by the FAT file system driver when a file is created, renamed, or written to. Backup utilities may use this attribute to indicate which files on the volume have been modified since the last time that a backup was performed. Note that the ATTR_LONG_NAME attribute bit combination indicates that the   is actually part of the long name entry for some other file. See the FAT Long Filename specification for more information on this attribute combination. When a directory is created, a file with the ATTR_DIRECTORY bit set in its DIR_Attr field, you set its DIR_FileSize to 0. DIR_FileSize is not used and is always 0 on a file with the ATTR_DIRECTORY attribute (directories are sized by simply following their cluster chains to the EOC mark). One cluster is allocated to the directory (unless it is the root directory on a FAT16/FAT12 volume), and you set DIR_FstClusLO and DIR_FstClusHI to that cluster number and place an EOC mark in that clusters entry in the FAT. Next, you initialize all bytes of that cluster to 0. If the directory is the root directory, you are done (there are no dot or dotdot entries in the root directory). If the directory is not the root directory, you need to create two special entries in the first two 32-byte directory entries of the directory (the first two 32 byte entries in the data region of the cluster you just allocated).  The first directory entry has DIR_Name set to:  .           The second has DIR_Name set to:  ..          These are called the dot and dotdot entries. The DIR_FileSize field on both entries is set to 0, and all of the date and time fields in both of these entries are set to the same values as they were in the directory entry for the directory that you just created. You now set DIR_FstClusLO and DIR_FstClusHI for the dot entry (the first entry) to the same values you put in those fields for the directories directory entry (the cluster number of the cluster that contains the dot and dotdot entries).  Finally, you set DIR_FstClusLO and DIR_FstClusHI for the dotdot entry (the second entry) to the first cluster number of the directory in which you just created the directory (value is 0 if this directory is the root directory even for FAT32 volumes).  Here is the summary for the dot and dotdot entries:  The dot entry is a directory that points to itself.  The dotdot entry points to the starting cluster of the parent of this directory (which is 0 if this directories parent is the root directory). Date and Time Formats Many FAT file systems do not support Date/Time other than DIR_WrtTime and DIR_WrtDate. For this reason, DIR_CrtTimeMil, DIR_CrtTime, DIR_CrtDate, and DIR_LstAccDate are actually optional fields. DIR_WrtTime and DIR_WrtDate must be supported, however. If the other date and time fields are not supported, they should be set to 0 on file create and ignored on other file operations. Date Format. A FAT directory entry date stamp is a 16-bit field that is basically a date relative to the MS-DOS epoch of 01/01/1980. Here is the format (bit 0 is the LSB of the 16-bit word, bit 15 is the MSB of the 16-bit word): Bits 0 4: Day of month, valid value range 1-31 inclusive. Bits 5 8: Month of year, 1 = January, valid value range 1 12 inclusive. Bits 9 15: Count of years from 1980, valid value range 0 127 inclusive (1980 2107). Time Format. A FAT directory entry time stamp is a 16-bit field that has a granularity of 2 seconds. Here is the format (bit 0 is the LSB of the 16-bit word, bit 15 is the MSB of the 16-bit word). Bits 0 4: 2-second count, valid value range 0 29 inclusive (0   58 seconds). Bits 5 10: Minutes, valid value range 0 59 inclusive. Bits 11 15: Hours, valid value range 0 23 inclusive. The valid time range is from Midnight 00:00:00 to 23:59:58. Other Notes Relating to FAT Directories Long File Name directory entries are identical on all FAT types. See the FAT Long File Name Specification for details.  DIR_FileSize is a 32-bit field. For FAT32 volumes, your FAT file system driver must not allow a cluster chain to be created that is longer than 0x100000000 bytes, and the last byte of the last cluster in a chain that long cannot be allocated to the file. This must be done so that no file has a file size > 0xFFFFFFFF bytes. This is a fundamental limit of all FAT file systems. The maximum allowed file size on a FAT volume is 0xFFFFFFFF (4,294,967,295) bytes. Similarly, a FAT file system driver must not allow a directory (a file that is actually a container for other files) to be larger than 65,536 * 32 (2,097,152) bytes.  NOTE: This limit does not apply to the number of files in the directory. This limit is on the size of the directory itself and has nothing to do with the content of the directory. There are two reasons for this limit: Because FAT directories are not sorted or indexed, it is a bad idea to create huge directories; otherwise, operations like creating a new entry (which requires every allocated directory entry to be checked to verify that the name doesn t already exist in the directory) become very slow.  There are many FAT file system drivers and disk utilities, including Microsoft s, that expect to be able to count the entries in a directory using a 16-bit WORD variable. For this reason, directories cannot have more than 16-bits worth of entries. FAT: General Overview of On-Disk Format Page   PAGE  PAGE   PAGE   Microsoft Corporation. All rights reserved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\fatgen103-efi.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft FAT: General Overview of On-Disk Format Title _PID_HLINKSFAT: General Overview of On-Disk Format FAT on disk format Microsoft Normal.dot Dan Lovinger Microsoft Word 9.0B2a"<$( n" 4g#]N MsdX~y F(+i4e' JHyFB $M7B# r.CW" ^F_Lm>j+ #z=s[ S5pwk iTQtql )b~Al3 )oCwZ W_h[U 2h`xD <?0u29p ]IohUjBohC MrA]rI aa~xd Oz{6mvHardware White Paper  Designing Hardware for Microsoft  Operating Systems Microsoft Extensible Firmware Initiative FAT32 File System Specification  FAT: General Overview of On-Disk Format Version 1.03, December 6, 2000 Microsoft Corporation The FAT (File Allocation Table) file system has its origins in the late 1970s and early1980s and was the file system supported by the Microsoft  MS-DOS  operating system. It was originally developed as a simple file system suitable for floppy disk drives less than 500K in size. Over time it has been enhanced to support larger and larger media. Currently there are three FAT file system types: FAT12, FAT16 and FAT32. The basic difference in these FAT sub types, and the reason for the names, is the size, in bits, of the entries in the actual FAT structure on the disk. There are 12 bits in a FAT12 FAT entry, 16 bits in a FAT16 FAT entry and 32 bits in a FAT32 FAT entry. Contents  TOC \o "1-1" \h \z   HYPERLINK \l "_Toc500755519"  Notational Conventions in this Document  PAGEREF _Toc500755519 \h   HYPERLINK \l "_Toc500755520"  General Comments (Applicable to FAT File System All Types)  PAGEREF _Toc500755520 \h   HYPERLINK \l "_Toc500755521"  Boot Sector and BPB  PAGEREF _Toc500755521 \h   HYPERLINK \l "_Toc500755522"  FAT Data Structure  PAGEREF _Toc500755522 \h   HYPERLINK \l "_Toc500755523"  FAT Type Determination  PAGEREF _Toc500755523 \h   HYPERLINK \l "_Toc500755524"  FAT Volume Initialization  PAGEREF _Toc500755524 \h   HYPERLINK \l "_Toc500755525"  FAT32 FSInfo Sector Structure and Backup Boot Sector  PAGEREF _Toc500755525 \h   HYPERLINK \l "_Toc500755526"  FAT Directory Structure  PAGEREF _Toc500755526 \h   HYPERLINK \l "_Toc500755527"  FAT Long Directory Entries  PAGEREF _Toc500755527 \h   HYPERLINK \l "_Toc500755528"  Name Limits and Character Sets  PAGEREF _Toc500755528 \h   HYPERLINK \l "_Toc500755529"  Name Matching In Short & Long Names  PAGEREF _Toc500755529 \h   HYPERLINK \l "_Toc500755530"  Naming Conventions and Long Names  PAGEREF _Toc500755530 \h   HYPERLINK \l "_Toc500755531"  Effect of Long Directory Entries on Down Level Versions of FAT  PAGEREF _Toc500755531 \h   HYPERLINK \l "_Toc500755532"  Validating The Contents of a Directory  PAGEREF _Toc500755532 \h   HYPERLINK \l "_Toc500755533"  Other Notes Relating to FAT Directories  PAGEREF _Toc500755533 \h  Microsoft, MS_DOS, Windows, and Windows NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners. Microsoft Corporation. All rights reserved. Microsoft Extensible Firmware Initiative FAT32 File System Specification IMPORTANT-READ CAREFULLY: This Microsoft Agreement ( Agreement ) is a legal agreement between you (either an individual or a single entity) and Microsoft Corporation ( Microsoft ) for the version of the Microsoft specification identified above which you are about to download ( Specification ). BY DOWNLOADING, COPYING OR OTHERWISE USING THE SPECIFICATION, YOU AGREE TO BE BOUND BY THE TERMS OF THIS AGREEMENT. IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, DO NOT DOWNLOAD, COPY, OR USE THE SPECIFICATION. The Specification is owned by Microsoft or its suppliers and is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties.  LIMITED LICENSE AND COVENANT NOT TO SUE.  Provided that you comply with all terms and conditions of this Agreement and subject to the limitations in Sections 1(c) - (f) below, Microsoft grants to you the following non-exclusive, worldwide, royalty-free, non-transferable, non-sublicenseable license under any copyrights owned or licensable by Microsoft without payment of consideration to unaffiliated third parties, to reproduce the Specification solely for the purposes of creating portions of products which comply with the Specification in unmodified form. Provided that you comply with all terms and conditions of this Agreement and subject to the limitations in Sections 1(c) - (f) below, Microsoft grants to you the following non-exclusive, worldwide, royalty-free, non-transferable, non-sublicenseable, reciprocal limited covenant not to sue under its Necessary Claims solely to make, have made, use, import, and directly and indirectly, offer to sell, sell and otherwise distribute and dispose of portions of products which comply with the Specification in unmodified form. For purposes of sections (a) and (b) above, the Specification is  unmodified  if there are no changes, additions or extensions to the Specification, and  Necessary Claims  means claims of a patent or patent application which are (1) owned or licenseable by Microsoft without payment of consideration to an unaffiliated third party; and (2) have an effective filing date on or before December 31, 2010, that must be infringed in order to make a portion(s) of a product that complies with the Specification.  Necessary Claims does not include claims relating to semiconductor manufacturing technology or microprocessor circuits or claims not required to be infringed in complying with the Specification (even if in the same patent as Necessary Claims). The foregoing covenant not to sue shall not extend to any part or function of a product  which (i) is not required to comply with the Specification in unmodified form, or (ii) to which there was a commercially reasonable alternative to infringing a Necessary Claim.  Each of the license and the covenant not to sue described above shall be unavailable to you and shall terminate immediately if you or any of your Affiliates (collectively  Covenantee Party Initiates  any action for patent infringement against:  (x) Microsoft or any of its Affiliates (collectively  Granting Party ), (y) any customers or distributors of the Granting Party, or other recipients of a covenant not to sue with respect to the Specification from the Granting Party ( Covenantees ); or (z) any customers or distributors of Covenantees (all parties identified in (y) and (z) collectively referred to as  Customers ), which action is based on a conformant implementation of the Specification.  As used herein,  Affiliate  means any entity which directly or indirectly controls, is controlled by, or is under common control with a party; and control shall mean the power, whether direct or indirect, to direct or cause the direction of the management or policies of any entity whether through the ownership of voting securities, by contract or otherwise.  Initiates  means that a Covenantee Party is the first (as between the Granting Party and the Covenantee Party) to file or institute any legal or administrative claim or action for patent infringement against the Granting Party or any of the Customers.  Initiates  includes any situation in which a Covenantee Party files or initiates a legal or administrative claim or action for patent infringement solely as a counterclaim or equivalent in response to a Granting Party first filing or instituting a legal or administrative patent infringement claim against such Covenantee Party. Each of the license and the covenant not to sue described above shall not extend to your use of any portion of the Specification for any purpose other than (a) to create portions of an operating system (i) only as necessary to adapt such operating system so that it can directly interact with a firmware implementation of the Extensible Firmware Initiative Specification v. 1.0 ( EFI Specification ); (ii) only as necessary to emulate an implementation of the EFI Specification; and (b) to create firmware, applications, utilities and/or drivers that will be used and/or licensed for only the following purposes:  (i) to install, repair and maintain hardware, firmware and portions of operating system software which are utilized in the boot process; (ii) to provide to an operating system runtime services that are specified in the EFI Specification; (iii) to diagnose and correct failures in the hardware, firmware or operating system software; (iv) to query for identification of a computer system (whether by serial numbers, asset tags, user or otherwise); (v) to perform inventory of a computer system; and (vi) to manufacture, install and setup any hardware, firmware or operating system software.  Microsoft reserves all other rights it may have in the Specification and any intellectual property therein.  The furnishing of this document does not give you any license or covenant not to sue with respect to any other Microsoft patents, trademarks, copyrights or other intellectual property rights.   2. ADDITIONAL LIMITATIONS AND OBLIGATIONS.  (a)The foregoing license and covenant not to sue is applicable only to the version of the Specification which you are about to download.  It does not apply to any additional versions of or extensions to the Specification. (b)Without prejudice to any other rights, Microsoft may terminate this Agreement if you fail to comply with the terms and conditions of this Agreement.  In such event you must destroy all copies of the Specification. INTELLECTUAL PROPERTY RIGHTS. All ownership, title and intellectual property rights in and to the Specification are owned by Microsoft or its suppliers.  4. U.S. GOVERNMENT RIGHTS.  Any Specification provided to the U.S. Government pursuant to solicitations issued on or after December 1, 1995 is provided with the commercial rights and restrictions described elsewhere herein.  Any Specification provided to the U.S. Government pursuant to solicitations issued prior to December 1, 1995 is provided with RESTRICTED RIGHTS as provided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable.  EXPORT RESTRICTIONS. Export of the Specification, any part thereof, or any process or service that is the direct product of the Specification (the foregoing collectively referred to as the  Restricted Components ) from the United States is regulated by the Export Administration Regulations (EAR, 15 CFR 730-744) of the U.S. Commerce Department, Bureau of Export Administration ( ).  You agree to comply with the EAR in the export or re-export of the Restricted Components (i) to any country to which the U.S. has embargoed or restricted the export of goods or services, which currently include, but are not necessarily limited to Cuba, Iran, Iraq, Libya, North Korea, Sudan, Syria and the Federal Republic of Yugoslavia (including Serbia, but not Montenegro), or to any national of any such country, wherever located, who intends to transmit or transport the Restricted Components back to such country; (ii) to any person or entity who you know or have reason to know will utilize the Restricted Components in the design, development or production of nuclear, chemical or biological weapons; or (iii) to any person or entity who has been prohibited from participating in U.S. export transactions by any federal agency of the U.S. government.  You warrant and represent that neither the BXA nor any other U.S. federal agency has suspended, revoked or denied your export privileges.  For additional information see http://www.microsoft.com/exporting. DISCLAIMER OF  WARRANTIES.  To the maximum extent permitted by applicable law, Microsoft and its suppliers provide the Specification (and all intellectual property therein) and any (if any) support services related to the Specification ( Support Services ) AS IS AND WITH ALL FAULTS, and hereby disclaim all warranties and conditions, either express, implied or statutory, including, but not limited to, any (if any) implied warranties or conditions of merchantability, of fitness for a particular purpose, of lack of viruses, of accuracy or completeness of responses, of results, and of lack of negligence or lack of workmanlike effort, all with regard to the Specification, any intellectual property therein and the provision of or failure to provide Support Services.  ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT, WITH REGARD TO THE SPECIFICATION AND ANY INTELLECTUAL PROPERTY THEREIN.  THE ENTIRE RISK AS TO THE QUALITY OF OR ARISING OUT OF USE OR PERFORMANCE OF THE SPECIFICATION, ANY INTELLECTUAL PROPERTY THEREIN, AND SUPPORT SERVICES, IF ANY, REMAINS WITH YOU. EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.  To the maximum extent permitted by applicable law, in no event shall Microsoft or its suppliers be liable for any special, incidental, indirect, or consequential damages whatsoever (including, but not limited to, damages for loss of profits or confidential or other information, for business interruption, for personal injury, for loss of privacy, for failure to meet any duty including of good faith or of reasonable care, for negligence, and for any other pecuniary or other loss whatsoever) arising out of or in any way related to the use of or inability to use the SPECIFICATION, ANY INTELLECTUAL PROPERTY THEREIN, the provision of or failure to provide Support Services, or otherwise under or in connection with any provision of this AGREEMENT, even in the event of the fault, tort (including negligence), strict liability, breach of contract or breach of warranty of Microsoft or any supplier, and even if Microsoft or any supplier has been advised of the possibility of such damages.  LIMITATION OF LIABILITY AND REMEDIES. Notwithstanding any damages that you might incur for any reason whatsoever (including, without limitation, all damages referenced above and all direct or general damages), the entire liability of Microsoft and any of its suppliers under any provision of this Agreement and your exclusive remedy for all of the foregoing shall be limited to the greater of the amount actually paid by you for the Specification or U.S.$5.00.  The foregoing limitations, exclusions and disclaimers shall apply to the maximum extent permitted by applicable law, even if any remedy fails its essential purpose. APPLICABLE LAW. If you acquired this Specification in the United States, this Agreement is governed by the laws of the State of Washington. If you acquired this Specification in Canada, unless expressly prohibited by local law, this Agreement is governed by the laws in force in the Province of Ontario, Canada; and, in respect of any dispute which may arise hereunder, you consent to the jurisdiction of the federal and provincial courts sitting in Toronto, Ontario. If this Specification was acquired outside the United States, then local law may apply. 10.QUESTIONS. Should you have any questions concerning this Agreement, or if you desire to contact Microsoft for any reason, please contact the Microsoft subsidiary serving your country, or write: Microsoft Sales Information Center/One Microsoft Way/Redmond, WA 98052-6399.  11.ENTIRE AGREEMENT.  This Agreement  is the entire agreement between you and Microsoft relating to the Specification and the Support Services (if any) and they supersede all prior or contemporaneous oral or written communications,  proposals and representations with respect to the Specification or any other subject matter covered by this Agreement.  To the extent the terms of any Microsoft policies or programs for Support Services conflict with the terms of this Agreement, the terms of this Agreement shall control. Si vous avez acquis votre produit Microsoft au CANADA, la garantie limit e suivante vous concerne : RENONCIATION AUX GARANTIES. Dans toute la mesure permise par la l gislation en vigueur, Microsoft et ses fournisseurs fournissent la Specification (et   toute propri  intellectuelle dans celle-ci)  et tous (selon le cas) les services d assistance li  la Specification ( Services d assistance ) TELS QUELS ET AVEC TOUS LEURS D FAUTS, et par les pr sentes excluent toute garantie ou condition, expresse ou implicite, l gale ou conventionnelle,  crite ou verbale, y compris, mais sans limitation, toute (selon le cas) garantie ou condition implicite ou l gale de qualit  marchande, de conformit  un usage particulier, d absence de virus, d exactitude et d gralit  des r ponses, de r sultats, d efforts techniques et professionnels et d absence de n gligence, le tout relativement   la Specification,   toute propri  intellectuelle dans celle-ci et   la prestation ou   la non-prestation des Services d assistance.  DE PLUS, IL N Y A AUCUNE GARANTIE ET CONDITION DE TITRE, DE JOUISSANCE PAISIBLE, DE POSSESSION PAISIBLE, DE SIMILARIT  LA DESCRIPTION ET D ABSENCE DE CONTREFA ON RELATIVEMENT   LA SP CIFICATION ET   TOUTE PROPRI  INTELLECTUELLE DANS CELLE-CI.  VOUS SUPPORTEZ TOUS LES RISQUES D COULANT DE L UTILISATION ET DE LA PERFORMANCE DE LA SP CIFICATION ET DE TOUTE PROPRI  INTELLECTUELLE DANS CELLE-CI  ET CEUX D COULANT DES SERVICES D ASSISTANCE (S IL Y A LIEU). EXCLUSION DES DOMMAGES INDIRECTS, ACCESSOIRES ET AUTRES.  Dans toute la mesure permise par la l gislation en vigueur, Microsoft et ses fournisseurs ne sont en aucun cas responsables de tout dommage sp cial, indirect, accessoire, moral ou exemplaire quel qu il soit (y compris, mais sans limitation, les dommages entra s par la perte de b fices ou la perte d information confidentielle ou autre, l interruption des affaires, les pr judices corporels, la perte de confidentialit , le d faut de remplir toute obligation y compris les obligations de bonne foi et de diligence raisonnable, la n gligence et toute autre perte p cuniaire ou autre perte de quelque nature que ce soit) d coulant de, ou de toute autre mani re li utilisation ou l impossibilit utiliser la Sp cification, toute propri  intellectuelle dans celle-ci, la prestation ou la non-prestation des Services d assistance ou autrement en vertu de ou relativement   toute disposition de cette convention, que ce soit en cas de faute, de d lit (y compris la n gligence), de responsabilit  stricte, de manquement   un contrat ou de manquement   une garantie de Microsoft ou de l un de ses fournisseurs, et ce, m me si Microsoft ou l un de ses fournisseurs a   avis  de la possibilit  de tels dommages. LIMITATION DE RESPONSABILIT  ET RECOURS.  Malgr  tout dommage que vous pourriez encourir pour quelque raison que ce soit (y compris, mais sans limitation, tous les dommages mentionn s ci-dessus et tous les dommages directs et g raux), la seule responsabilit  de Microsoft et de ses fournisseurs en vertu de toute disposition de cette convention et votre unique recours en regard de tout ce qui pr de sont limit s au plus   des montants suivants:  soit (a) le montant que vous avez pay  pour la Sp cification, soit (b) un montant  quivalant   cinq dollars U.S. (5,00 $ U.S.).  Les limitations, exclusions et renonciations ci-dessus s appliquent dans toute la mesure permise par la l gislation en vigueur, et ce m me si leur application a pour effet de priver un recours de son essence. DROITS LIMIT S DU GOUVERNEMENT AM RICAIN Tout Produit Logiciel fourni au gouvernement am ricain conform ment   des demandes  mises le ou apr s le 1er d cembre 1995 est offert avec les restrictions et droits commerciaux d crits ailleurs dans la pr sente convention.  Tout Produit Logiciel fourni au gouvernement am ricain conform ment   des demandes  mises avant le 1er d cembre 1995 est offert avec des DROITS LIMIT S tels que pr vus dans le FAR, 48CFR 52.227-14 (juin 1987) ou dans le FAR, 48CFR 252.227-7013 (octobre 1988), tels qu applicables. Sauf lorsqu express ment prohib  par la l gislation locale, la pr sente  convention est r gie par les lois en vigueur dans la province d Ontario, Canada.  Pour tout diff rend qui pourrait d couler des pr sentes, vous acceptez la comp tence des tribunaux f raux et provinciaux si geant   Toronto, Ontario. Si vous avez des questions concernant cette convention ou si vous d sirez communiquer avec Microsoft pour quelque raison que ce soit, veuillez contacter la succursale Microsoft desservant votre pays, ou  crire  : Microsoft Sales Information Center, One Microsoft Way, Redmond, Washington 98052-6399.          Notational Conventions in this Document Numbers that have the characters   at the beginning of them are hexadecimal (base 16) numbers. Any numbers that do not have the characters   at the beginning are decimal (base 10) numbers. The code fragments in this document are written in the   programming language. Strict typing and syntax are not adhered to. There are several code fragments in this document that freely mix 32-bit and 16-bit data elements. It is assumed that you are a programmer who understands how to properly type such operations so that data is not lost due to truncation of 32-bit values to 16-bit values. Also take note that all data types are UNSIGNED. Do not do FAT computations with signed integer types, because the computations will be wrong on some FAT volumes. General Comments (Applicable to FAT File System All Types) All of the FAT file systems were originally developed for the IBM PC machine architecture. The importance of this is that FAT file system on disk data structure is all  little endian.  If we look at one 32-bit FAT entry stored on disk as a series of four 8-bit bytes the first being byte[0] and the last being byte[4] here is where the 32 bits numbered 00 through 31 are (00 being the least significant bit): byte[3] 3 3 2 2 2 2 2 2 1 0 9 8 7 6 5 4 byte[2] 2 2 2 2 1 1 1 1 3 2 1 0 9 8 7 6 byte[1] 1 1 1 1 1 1 0 0 5 4 3 2 1 0 9 8 byte[0] 0 0 0 0 0 0 0 0 7 6 5 4 3 2 1 0 This is important if your machine is a  big endian  machine, because you will have to translate between big and little endian as you move data to and from the disk. A FAT file system volume is composed of four basic regions, which are laid out in this order on the volume:  Reserved Region  FAT Region  Root Directory Region (doesn t exist on FAT32 volumes)  File and Directory Data Region Boot Sector and BPB The first important data structure on a FAT volume is called the BPB (BIOS Parameter Block), which is located in the first sector of the volume in the Reserved Region. This sector is sometimes called the  boot sector  or the  reserved sector  or the  0th sector,  but the important fact is simply that it is the first sector of the volume.  This is the first thing about the FAT file system that sometimes causes confusion. In MS-DOS version 1.x, there was not a BPB in the boot sector. In this first version of the FAT file system, there were only two different formats, the one for single-sided and the one for double-sided 360K 5.25-inch floppy disks. The determination of which type was on the disk was done by looking at the first byte of the FAT (the low 8 bits of FAT[0]).  This type of media determination was superseded in MS-DOS version 2.x by putting a BPB in the boot sector, and the old style of media determination (done by looking at the first byte of the FAT) was no longer supported. All FAT volumes must have a BPB in the boot sector.  This brings us to the second point of confusion relating to FAT volume determination: What exactly does a BPB look like? The BPB in the boot sector defined for MS-DOS 2.x only allowed for a FAT volume with strictly less than 65,536 sectors (32 MB worth of 512-byte sectors). This limitation was due to the fact that the  total sectors  field was only a 16-bit field. This limitation was addressed by MS-DOS 3.x, where the BPB was modified to include a new 32-bit field for the total sectors value.  The next BPB change occurred with the Microsoft Windows 95 operating system, specifically OEM Service Release 2 (OSR2), where the FAT32 type was introduced. FAT16 was limited by the maximum size of the FAT and the maximum valid cluster size to no more than a 2 GB volume if the disk had 512-byte sectors. FAT32 addressed this limitation on the amount of disk space that one FAT volume could occupy so that disks larger than 2 GB only had to have one partition defined.  The FAT32 BPB exactly matches the FAT12/FAT16 BPB up to and including the BPB_TotSec32 field. They differ starting at offset 36, depending on whether the media type is FAT12/FAT16 or FAT32 (see discussion below for determining FAT type). The relevant point here is that the BPB in the boot sector of a FAT volume should always be one that has all of the new BPB fields for either the FAT12/FAT16 or FAT32 BPB type. Doing it this way ensures the maximum compatibility of the FAT volume and ensures that all FAT file system drivers will understand and support the volume properly, because it always contains all of the currently defined fields.  NOTE: In the following description, all the fields whose names start with BPB_ are part of the BPB. All the fields whose names start with BS_ are part of the boot sector and not really part of the BPB. The following shows the start of sector 0 of a FAT volume, which contains the BPB:  Boot Sector and BPB Structure Offset (byte) Size (bytes) Description BS_jmpBoot Jump instruction to boot code. This field has two allowed forms: jmpBoot[0] = 0xEB, jmpBoot[1] = 0x??, jmpBoot[2] = 0x90  jmpBoot[0] = 0xE9, jmpBoot[1] = 0x??, jmpBoot[2] = 0x?? 0x?? indicates that any 8-bit value is allowed in that byte. What this forms is a three-byte Intel x86 unconditional branch (jump) instruction that jumps to the start of the operating system bootstrap code. This code typically occupies the rest of sector 0 of the volume following the BPB and possibly other sectors. Either of these forms is acceptable. JmpBoot[0] = 0xEB is the more frequently used format. BS_OEMName MSWIN4.1  There are many misconceptions about this field. It is only a name string. Microsoft operating systems don t pay any attention to this field. Some FAT drivers do. This is the reason that the indicated string,  MSWIN4.1 , is the recommended setting, because it is the setting least likely to cause compatibility problems. If you want to put something else in here, that is your option, but the result may be that some FAT drivers might not recognize the volume. Typically this is some indication of what system formatted the volume. BPB_BytsPerSec Count of bytes per sector. This value may take on only the following values: 512, 1024, 2048 or 4096. If maximum compatibility with old implementations is desired, only the value 512 should be used. There is a lot of FAT code in the world that is basically  hard wired  to 512 bytes per sector and doesn t bother to check this field to make sure it is 512. Microsoft operating systems will properly support 1024, 2048, and 4096. Note: Do not misinterpret these statements about maximum compatibility. If the media being recorded has a physical sector size N, you must use N and this must still be less than or equal to 4096. Maximum compatibility is achieved by only using media with specific sector sizes. BPB_SecPerClus Number of sectors per allocation unit. This value must be a power of 2 that is greater than 0. The legal values are 1, 2, 4, 8, 16, 32, 64, and 128. Note however, that a value should never be used that results in a  bytes per cluster  value (BPB_BytsPerSec * BPB_SecPerClus) greater than 32K (32 * 1024). There is a misconception that values greater than this are OK. Values that cause a cluster size greater than 32K bytes do not work properly; do not try to define one. Some versions of some systems allow 64K bytes per cluster value. Many application setup programs will not work correctly on such a FAT volume. BPB_RsvdSecCnt Number of reserved sectors in the Reserved region of the volume starting at the first sector of the volume. This field must not be 0. For FAT12 and FAT16 volumes, this value should never be anything other than 1. For FAT32 volumes, this value is typically 32. There is a lot of FAT code in the world  hard wired  to 1 reserved sector for FAT12 and FAT16 volumes and that doesn t bother to check this field to make sure it is 1. Microsoft operating systems will properly support any non-zero value in this field. BPB_NumFATs The count of FAT data structures on the volume. This field should always contain the value 2 for any FAT volume of any type. Although any value greater than or equal to 1 is perfectly valid, many software programs and a few operating systems  FAT file system drivers may not function properly if the value is something other than 2. All Microsoft file system drivers will support a value other than 2, but it is still highly recommended that no value other than 2 be used in this field.  The reason the standard value for this field is 2 is to provide redun dancy for the FAT data structure so that if a sector goes bad in one of the FATs, that data is not lost because it is duplicated in the other FAT. On non-disk-based media, such as FLASH memory cards, where such redundancy is a useless feature, a value of 1 may be used to save the space that a second copy of the FAT uses, but some FAT file system drivers might not recognize such a volume properly. BPB_RootEntCnt For FAT12 and FAT16 volumes, this field contains the count of 32-byte directory entries in the root directory. For FAT32 volumes, this field must be set to 0. For FAT12 and FAT16 volumes, this value should always specify a count that when multiplied by 32 results in an even multiple of BPB_BytsPerSec. For maximum compatibility, FAT16 volumes should use the value 512. BPB_TotSec16 This field is the old 16-bit total count of sectors on the volume. This count includes the count of all sectors in all four regions of the volume. This field can be 0; if it is 0, then BPB_TotSec32 must be non-zero. For FAT32 volumes, this field must be 0. For FAT12 and FAT16 volumes, this field contains the sector count, and BPB_TotSec32 is 0 if the total sector count   (is less than 0x10000). BPB_Media 0xF8 is the standard value for  fixed  (non-removable) media. For removable media, 0xF0 is frequently used. The legal values for this field are 0xF0, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, and 0xFF. The only other important point is that whatever value is put in here must also be put in the low byte of the FAT[0] entry. This dates back to the old MS-DOS 1.x media determination noted earlier and is no longer usually used for anything. BPB_FATSz16 This field is the FAT12/FAT16 16-bit count of sectors occupied by ONE FAT. On FAT32 volumes this field must be 0, and BPB_FATSz32 contains the FAT size count. BPB_SecPerTrk Sectors per track for interrupt 0x13. This field is only relevant for media that have a geometry (volume is broken down into tracks by multiple heads and cylinders) and are visible on interrupt 0x13. This field contains the  sectors per track  geometry value.  BPB_NumHeads Number of heads for interrupt 0x13. This field is relevant as discussed earlier for BPB_SecPerTrk. This field contains the one based  count of heads . For example, on a 1.44 MB 3.5-inch floppy drive this value is 2. BPB_HiddSec Count of hidden sectors preceding the partition that contains this FAT volume. This field is generally only relevant for media visible on interrupt 0x13. This field should always be zero on media that are not partitioned. Exactly what value is appropriate is operating system specific. BPB_TotSec32  This field is the new 32-bit total count of sectors on the volume. This count includes the count of all sectors in all four regions of the volume. This field can be 0; if it is 0, then BPB_TotSec16 must be non-zero. For FAT32 volumes, this field must be non-zero. For FAT12/FAT16 volumes, this field contains the sector count if BPB_TotSec16 is 0 (count is greater than or equal to 0x10000). At this point, the BPB/boot sector for FAT12 and FAT16 differs from the BPB/boot sector for FAT32. The first table shows the structure for FAT12 and FAT16 starting at offset 36 of the boot sector. Fat12 and Fat16 Structure Starting at Offset 36 Offset (byte) Size (bytes) Description BS_DrvNum Int 0x13 drive number (e.g. 0x80). This field supports MS-DOS bootstrap and is set to the INT 0x13 drive number of the media (0x00 for floppy disks, 0x80 for hard disks).  NOTE: This field is actually operating system specific. BS_Reserved1 Reserved (used by Windows NT). Code that formats FAT volumes should always set this byte to 0. BS_BootSig Extended boot signature (0x29). This is a signature byte that indicates that the following three fields in the boot sector are present. BS_VolID Volume serial number. This field, together with BS_VolLab, supports volume tracking on removable media. These values allow FAT file system drivers to detect that the wrong disk is inserted in a removable drive. This ID is usually generated by simply combining the current date and time into a 32-bit value. BS_VolLab Volume label. This field matches the 11-byte volume label recorded in the root directory.  NOTE: FAT file system drivers should make sure that they update this field when the volume label file in the root directory has its name changed or created. The setting for this field when there is no volume label is the string  NO NAME     BS_FilSysType One of the strings  FAT12    FAT16    , or  FAT      .  NOTE: Many people think that the string in this field has something to do with the determination of what type of FAT FAT12, FAT16, or FAT32 that the volume has. This is not true. You will note from its name that this field is not actually part of the BPB. This string is informational only and is not used by Microsoft file system drivers to determine FAT typ,e because it is frequently not set correctly or is not present. See the FAT Type Determination section of this document. This string should be set based on the FAT type though, because some non-Microsoft FAT file system drivers do look at it. Here is the structure for FAT32 starting at offset 36 of the boot sector. FAT32 Structure Starting at Offset 36 Offset (byte) Size (bytes) Description BPB_FATSz32 This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. This field is the FAT32 32-bit count of sectors occupied by ONE FAT. BPB_FATSz16 must be 0.  BPB_ExtFlags This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. Bits 0-3 -- Zero-based number of active FAT. Only valid if mirroring is disabled. Bits 4-6 -- Reserved. Bit      7 -- 0 means the FAT is mirrored at runtime into all FATs. -- 1 means only one FAT is active; it is the one referenced in bits 0-3. Bits 8-15  -- Reserved. BPB_FSVer This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. High byte is major revision number. Low byte is minor revision number. This is the version number of the FAT32 volume. This supports the ability to extend the FAT32 media type in the future without worrying about old FAT32 drivers mounting the volume. This document defines the version to 0:0.  If this field is non-zero, back-level Windows versions will not mount the volume.  NOTE:  Disk utilities should respect this field and not operate on volumes with a higher major or minor version number than that for which they were designed. FAT32 file system drivers must check this field and not mount the volume if it does not contain a version number that was defined at the time the driver was written. BPB_RootClus This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. This is set to the cluster number of the first cluster of the root directory, usually 2 but not required to be 2.  NOTE:  Disk utilities that change the location of the root directory should make every effort to place the first cluster of the root directory in the first non-bad cluster on the drive (i.e., in cluster 2, unless it s marked bad). This is specified so that disk repair utilities can easily find the root directory if this field accidentally gets zeroed.  BPB_FSInfo This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. Sector number of FSINFO structure in the reserved area of the FAT32 volume. Usually 1.   NOTE: There will be a copy of the FSINFO structure in BackupBoot, but only the copy pointed to by this field will be kept up to date (i.e., both the primary and backup boot record will point to the same FSINFO sector). BPB_BkBootSec This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. If non-zero, indicates the sector number in the reserved area of the volume of a copy of the boot record. Usually 6. No value other than 6 is recommended. BPB_Reserved This field is only defined for FAT32 media and does not exist on FAT12 and FAT16 media. Reserved for future expansion. Code that formats FAT32 volumes should always set all of the bytes of this field to 0. BS_DrvNum This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_Reserved1 This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_BootSig This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_VolID This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_VolLab This field has the same definition as it does for FAT12 and FAT16 media. The only difference for FAT32 media is that the field is at a different offset in the boot sector. BS_FilSysType Always set to the string  FAT32    .  Please see the note for this field in the FAT12/FAT16 section earlier. This field has nothing to do with FAT type determination. There is one other important note about Sector 0 of a FAT volume. If we consider the contents of the sector as a byte array, it must be true that sector[510] equals 0x55, and sector[511] equals 0xAA.  NOTE: Many FAT documents mistakenly say that this 0xAA55 signature occupies the  last 2 bytes of the boot sector . This statement is correct if   and only if   BPB_BytsPerSec is 512. If BPB_BytsPerSec is greater than 512, the offsets of these signature bytes do not change (although it is perfectly OK for the last two bytes at the end of the boot sector to also contain this signature). Check your assumptions about the value in the BPB_TotSec16/32 field. Assume we have a disk or partition of size in sectors DskSz. If the BPB TotSec field (either BPB_TotSec16 or BPB_TotSec32   whichever is non-zero) is less than or equal to DskSz, there is nothing whatsoever wrong with the FAT volume. In fact, it is not at all unusual to have a BPB_TotSec16/32 value that is slightly smaller than DskSz. It is also perfectly OK for the BPB_TotSec16/32 value to be considerably smaller than DskSz.  All this means is that disk space is being wasted. It does not by itself mean that the FAT volume is damaged in some way. However, if BPB_TotSec16/32 is larger than DskSz, the volume is seriously damaged or malformed because it extends past the end of the media or overlaps data that follows it on the disk. Treating a volume for which the BPB_TotSec16/32 value is  too large  for the media or partition as valid can lead to catastrophic data loss. FAT Data Structure The next data structure that is important is the FAT itself. What this data structure does is define a singly linked list of the  extents  (clusters) of a file. Note at this point that a FAT directory or file container is nothing but a regular file that has a special attribute indicating it is a directory. The only other special thing about a directory is that the data or contents of the   is a series of 32=byte FAT directory entries (see discussion below). In all other respects, a directory is just like a file. The FAT maps the data region of the volume by cluster number. The first data cluster is cluster 2.  The first sector of cluster 2 (the data region of the disk) is computed using the BPB fields for the volume as follows. First, we determine the count of sectors occupied by the root directory: RootDirSectors = ((BPB_RootEntCnt * 32) + (BPB_BytsPerSec   1)) / BPB_BytsPerSec; Note that on a FAT32 volume the BPB_RootEntCnt value is always 0, so on a FAT32 volume RootDirSectors is always 0. The 32 in the above is the size of one FAT directory entry in bytes. Note also that this computation rounds up. The start of the data region, the first sector of cluster 2, is computed as follows: If(BPB_FATSz16 != 0)     FATSz = BPB_FATSz16;     FATSz = BPB_FATSz32;  FirstDataSector = BPB_ResvdSecCnt + (BPB_NumFATs * FATSz) + RootDirSectors; NOTE: This sector number is relative to the first sector of the volume that contains the BPB (the sector that contains the BPB is sector number 0). This does not necessarily map directly onto the drive, because sector 0 of the volume is not necessarily sector 0 of the drive due to partitioning. Given any valid data cluster number N, the sector number of the first sector of that cluster (again relative to sector 0 of the FAT volume) is computed as follows: FirstSectorofCluster = ((N   2) * BPB_SecPerClus) + FirstDataSector; NOTE: Because BPB_SecPerClus is restricted to powers of 2 (1,2,4,8,16,32 .), this means that division and multiplication by BPB_SecPerClus can actually be performed via SHIFT operations on 2s complement architectures that are usually faster instructions than MULT and DIV instructions. On current Intel X86 processors, this is largely irrelevant though because the MULT and DIV machine instructions are heavily optimized for multiplication and division by powers of 2. FAT Type Determination There is considerable confusion over exactly how this works, which leads to many  off by 1 off by 2 off by 10 , and  massively off  errors. It is really quite simple how this works. The FAT type one of FAT12, FAT16, or FAT32 is determined by the count of clusters on the volume and nothing else.  Please read everything in this section carefully, all of the words are important. For example, note that the statement was  count of clusters.  This is not the same thing as  maximum valid cluster number,  because the first data cluster is 2 and not 0 or 1.  To begin, let s discuss exactly how the  count of clusters  value is determined. This is all done using the BPB fields for the volume. First, we determine the count of sectors occupied by the root directory as noted earlier. RootDirSectors = ((BPB_RootEntCnt * 32) + (BPB_BytsPerSec   1)) / BPB_BytsPerSec; Note that on a FAT32 volume, the BPB_RootEntCnt value is always 0; so on a FAT32 volume, RootDirSectors is always 0.  Next, we determine the count of sectors in the data region of the volume: If(BPB_FATSz16 != 0)     FATSz = BPB_FATSz16;     FATSz = BPB_FATSz32;   If(BPB_TotSec16 != 0)     TotSec = BPB_TotSec16;     TotSec = BPB_TotSec32; DataSec = TotSec   (BPB_ResvdSecCnt + (BPB_NumFATs * FATSz) + RootDirSectors); Now we determine the count of clusters: CountofClusters = DataSec / BPB_SecPerClus; Please note that this computation rounds down. Now we can determine the FAT type. Please note carefully or you will commit an off-by-one error!  In the following example, when it says <, it does not mean <=. Note also that the numbers are correct. The first number for FAT12 is 4085; the second number for FAT16 is 65525. These numbers and the   signs are not wrong. If(CountofClusters < 4085) { /* Volume is FAT12 */ } else if(CountofClusters < 65525) {     /* Volume is FAT16 */ } else {     /* Volume is FAT32 */ This is the one and only way that FAT type is determined. There is no such thing as a FAT12 volume that has more than 4084 clusters. There is no such thing as a FAT16 volume that has less than 4085 clusters or more than 65,524 clusters. There is no such thing as a FAT32 volume that has less than 65,525 clusters. If you try to make a FAT volume that violates this rule, Microsoft operating systems will not handle them correctly because they will think the volume has a different type of FAT than what you think it does. NOTE: As is noted numerous times earlier, the world is full of FAT code that is wrong. There is a lot of FAT type code that is off by 1 or 2 or 8 or 10 or 16. For this reason, it is highly recommended that if you are formatting a FAT volume which has maximum compatibility with all existing FAT code, then you should you avoid making volumes of any type that have close to 4,085 or 65,525 clusters. Stay at least 16 clusters on each side away from these cut-over cluster counts. Note also that the CountofClusters value is exactly that the count of data clusters starting at cluster 2. The maximum valid cluster number for the volume is CountofClusters + 1, and the  count of clusters including the two reserved clusters  is CountofClusters + 2. There is one more important computation related to the FAT. Given any valid cluster number N, where in the FAT(s) is the entry for that cluster number? The only FAT type for which this is complex is FAT12. For FAT16 and FAT32, the computation is simple: If(BPB_FATSz16 != 0)      FATSz = BPB_FATSz16;  Else     FATSz = BPB_FATSz32;   If(FATType == FAT16)     FATOffset = N * 2; Else if (FATType == FAT32)     FATOffset = N * 4; ThisFATSecNum = BPB_ResvdSecCnt + (FATOffset / BPB_BytsPerSec); ThisFATEntOffset = REM(FATOffset / BPB_BytsPerSec); ) is the remainder operator. That means the remainder after division of FATOffset by BPB_BytsPerSec. ThisFATSecNum is the sector number of the FAT sector that contains the entry for cluster N in the first FAT. If you want the sector number in the second FAT, you add FATSz to ThisFATSecNum; for the third FAT, you add 2*FATSz, and so on.  You now read sector number ThisFATSecNum (remember this is a sector number relative to sector 0 of the FAT volume). Assume this is read into an 8-bit byte array named SecBuff. Also assume that the type WORD is a 16-bit unsigned and that the type DWORD is a 32-bit unsigned. If(FATType == FAT16)     FAT16ClusEntryVal = *((WORD *) &SecBuff[ThisFATEntOffset]);     FAT32ClusEntryVal = (*((DWORD *) &SecBuff[ThisFATEntOffset])) & 0x0FFFFFFF; Fetches the contents of that cluster. To set the contents of this same cluster you do the following: If(FATType == FAT16)     *((WORD *) &SecBuff[ThisFATEntOffset]) = FAT16ClusEntryVal; Else {      FAT32ClusEntryVal = FAT32ClusEntryVal & 0x0FFFFFFF;     *((DWORD *) &SecBuff[ThisFATEntOffset]) =         (*((DWORD *) &SecBuff[ThisFATEntOffset])) & 0xF0000000;     *((DWORD *) &SecBuff[ThisFATEntOffset]) =          (*((DWORD *) &SecBuff[ThisFATEntOffset])) | FAT32ClusEntryVal; Note how the FAT32 code above works. A FAT32 FAT entry is actually only a 28-bit entry. The high 4 bits of a FAT32 FAT entry are reserved. The only time that the high 4 bits of FAT32 FAT entries should ever be changed is when the volume is formatted, at which time the whole 32-bit FAT entry should be zeroed, including the high 4 bits.  A bit more explanation is in order here, because this point about FAT32 FAT entries seems to cause a great deal of confusion. Basically 32-bit FAT entries are not really 32-bit values; they are only 28-bit values. For example, all of these 32-bit cluster entry values: 0x10000000, 0xF0000000, and 0x00000000 all indicate that the cluster is FREE, because you ignore the high 4 bits when you read the cluster entry value. If the 32-bit free cluster value is currently 0x30000000 and you want to mark this cluster as bad by storing the value 0x0FFFFFF7 in it. Then the 32-bit entry will contain the value 0x3FFFFFF7 when you are done, because you must preserve the high 4 bits when you write in the 0x0FFFFFF7 bad cluster mark. Take note that because the BPB_BytsPerSec value is always divisible by 2 and 4, you never have to worry about a FAT16 or FAT32 FAT entry spanning over a sector boundary (this is not true of FAT12). The code for FAT12 is more complicated because there are 1.5 bytes (12-bits) per FAT entry.     if (FATType == FAT12)         FATOffset = N + (N / 2);     /* Multiply by 1.5 without using floating point, the divide by 2 rounds DOWN */     ThisFATSecNum = BPB_ResvdSecCnt + (FATOffset / BPB_BytsPerSec);     ThisFATEntOffset = REM(FATOffset / BPB_BytsPerSec); We now have to check for the sector boundary case: If(ThisFATEntOffset == (BPB_BytsPerSec   1)) {     /* This cluster access spans a sector boundary in the FAT      */     /* There are a number of strategies to handling this. The      */     /* easiest is to always load FAT sectors into memory           */     /* in pairs if the volume is FAT12 (if you want to load        */     /* FAT sector N, you also load FAT sector N+1 immediately      */     /* following it in memory unless sector N is the last FAT      */     /* sector). It is assumed that this is the strategy used here  */     /* which makes this if test for a sector boundary span         */     /* unnecessary.                                                */ We now access the FAT entry as a WORD just as we do for FAT16, but if the cluster number is EVEN, we only want the low 12-bits of the 16-bits we fetch; and if the cluster number is ODD, we only want the high 12-bits of the 16-bits we fetch.  FAT12ClusEntryVal = *((WORD *) &SecBuff[ThisFATEntOffset]);  If(N & 0x0001)       FAT12ClusEntryVal = FAT12ClusEntryVal >> 4; /* Cluster number is ODD */  Else      FAT12ClusEntryVal = FAT12ClusEntryVal & 0x0FFF; /* Cluster number is EVEN */ Fetches the contents of that cluster. To set the contents of this same cluster you do the following: If(N & 0x0001) {     FAT12ClusEntryVal = FAT12ClusEntryVal << 4; /* Cluster number is ODD */     *((WORD *) &SecBuff[ThisFATEntOffset]) =          (*((WORD *) &SecBuff[ThisFATEntOffset])) & 0x000F; } Else {     FAT12ClusEntryVal = FAT12ClusEntryVal & 0x0FFF; /* Cluster number is EVEN */     *((WORD *) &SecBuff[ThisFATEntOffset]) =          (*((WORD *) &SecBuff[ThisFATEntOffset])) & 0xF000; *((WORD *) &SecBuff[ThisFATEntOffset]) =      (*((WORD *) &SecBuff[ThisFATEntOffset])) | FAT12ClusEntryVal; NOTE: It is assumed that the >> operator shifts a bit value of 0 into the high 4 bits and that the << operator shifts a bit value of 0 into the low 4 bits. The way the data of a file is associated with the file is as follows. In the directory entry, the cluster number of the first cluster of the file is recorded. The first cluster (extent) of the file is the data associated with this first cluster number, and the location of that data on the volume is computed from the cluster number as described earlier (computation of FirstSectorofCluster).  Note that a zero-length file a file that has no data allocated to it has a first cluster number of 0 placed in its directory entry. This cluster location in the FAT (see earlier computation of ThisFATSecNum and ThisFATEntOffset) contains either an EOC mark (End Of Clusterchain) or the cluster number of the next cluster of the file. The EOC value is FAT type dependant (assume FATContent is the contents of the cluster entry in the FAT being checked to see whether it is an EOC mark): IsEOF = FALSE; If(FATType == FAT12) {     If(FATContent >= 0x0FF8)         IsEOF = TRUE; } else if(FATType == FAT16) {     If(FATContent >= 0xFFF8)         IsEOF = TRUE; } else if (FATType == FAT32) {     If(FATContent >= 0x0FFFFFF8)         IsEOF = TRUE; Note that the cluster number whose cluster entry in the FAT contains the EOC mark is allocated to the file and is also the last cluster allocated to the file. Microsoft operating system FAT drivers use the EOC value 0x0FFF for FAT12, 0xFFFF for FAT16, and 0x0FFFFFFF for FAT32 when they set the contents of a cluster to the EOC mark. There are various disk utilities for Microsoft operating systems that use a different value, however. There is also a special  BAD CLUSTER  mark. Any cluster that contains the  BAD CLUSTER  value in its FAT entry is a cluster that should not be placed on the free list because it is prone to disk errors. The  BAD CLUSTER  value is 0x0FF7 for FAT12, 0xFFF7 for FAT16, and 0x0FFFFFF7 for FAT32. The other relevant note here is that these bad clusters are also lost clusters clusters that appear to be allocated because they contain a non-zero value but which are not part of any files allocation chain. Disk repair utilities must recognize lost clusters that contain this special value as bad clusters and not change the content of the cluster entry.  NOTE: It is not possible for the bad cluster mark to be an allocatable cluster number on FAT12 and FAT16 volumes, but it is feasible for 0x0FFFFFF7 to be an allocatable cluster number on FAT32 volumes. To avoid possible confusion by disk utilities, no FAT32 volume should ever be configured such that 0x0FFFFFF7 is an allocatable cluster number.  The list of free clusters in the FAT is nothing more than the list of all clusters that contain the value 0 in their FAT cluster entry. Note that this value must be fetched as described earlier as for any other FAT entry that is not free. This list of free clusters is not stored anywhere on the volume; it must be computed when the volume is mounted by scanning the FAT for entries that contain the value 0. On FAT32 volumes, the BPB_FSInfo sector may contain a valid count of free clusters on the volume. See the documentation of the FAT32 FSInfo sector. What are the two reserved clusters at the start of the FAT for? The first reserved cluster, FAT[0], contains the BPB_Media byte value in its low 8 bits, and all other bits are set to 1. For example, if the BPB_Media value is 0xF8, for FAT12 FAT[0] = 0x0FF8, for FAT16 FAT[0] = 0xFFF8, and for FAT32 FAT[0] = 0x0FFFFFF8. The second reserved cluster, FAT[1], is set by FORMAT to the EOC mark. On FAT12 volumes, it is not used and is simply always contains an EOC mark. For FAT16 and FAT32, the file system driver may use the high two bits of the FAT[1] entry for dirty volume flags (all other bits, are always left set to 1). Note that the bit location is different for FAT16 and FAT32, because they are the high 2 bits of the entry.  For FAT16:     ClnShutBitMask  = 0x8000;     HrdErrBitMask   = 0x4000; For FAT32:     ClnShutBitMask  = 0x08000000;     HrdErrBitMask   = 0x04000000; Bit ClnShutBitMask  If bit is 1, volume is  clean If bit is 0, volume is  dirty . This indicates that the file system driver did not Dismount the volume properly the last time it had the volume mounted. It would be a good idea to run a Chkdsk/Scandisk disk repair utility on it, because it may be damaged. Bit HrdErrBitMask  If this bit is 1, no disk read/write errors were encountered. If this bit is 0, the file system driver encountered a disk I/O error on the Volume the last time it was mounted, which is an indicator that some sectors may have gone bad on the volume. It would be a good idea to run a Chkdsk/Scandisk disk repair utility that does surface analysis on it to look for new bad sectors. Here are two more important notes about the FAT region of a FAT volume: The last sector of the FAT is not necessarily all part of the FAT. The FAT stops at the cluster number in the last FAT sector that corresponds to the entry for cluster number CountofClusters + 1 (see the CountofClusters computation earlier), and this entry is not necessarily at the end of the last FAT sector. FAT code should not make any assumptions about what the contents of the last FAT sector are after the CountofClusters + 1 entry. FAT format code should zero the bytes after this entry though. The BPB_FATSz16 (BPB_FATSz32 for FAT32 volumes) value may be bigger than it needs to be. In other words, there may be totally unused FAT sectors at the end of each FAT in the FAT region of the volume. For this reason, the last sector of the FAT is always computed using the CountofClusters + 1 value, never from the BPB_FATSz16/32 value. FAT code should not make any assumptions about what the contents of these  extra  FAT sectors are. FAT format code should zero the contents of these extra FAT sectors though. FAT Volume Initialization At this point, the careful reader should have one very interesting question. Given that the FAT type (FAT12, FAT16, or FAT32) is dependant on the number of clusters and that the sectors available in the data area of a FAT volume is dependant on the size of the FAT when handed an unformatted volume that does not yet have a BPB, how do you determine all this and compute the proper values to put in BPB_SecPerClus and either BPB_FATSz16 or BPB_FATSz32? The way Microsoft operating systems do this is with a fixed value, several tables, and a clever piece of arithmetic.  Microsoft operating systems only do FAT12 on floppy disks. Because there is a limited number of floppy formats that all have a fixed size, this is done with a simple table: If it is a floppy of this type, then the BPB looks like this. There is no dynamic computation for FAT12. For the FAT12 formats, all the computation for BPB_SecPerClus and BPB_FATSz16 was worked out by hand on a piece of paper and recorded in the table (being careful of course that the resultant cluster count was always less than 4085). If your media is larger than 4 MB, do not bother with FAT12. Use smaller BPB_SecPerClus values so that the volume will be FAT16.  The rest of this section is totally specific to drives that have 512 bytes per sector. You cannot use these tables, or the clever arithmetic, with drives that have a different sector size. The  fixed value  is simply a volume size that is the  FAT16 to FAT32 cutover value . Any volume size smaller than this is FAT16 and any volume of this size or larger is FAT32. For Windows, this value is 512 MB. Any FAT volume smaller than 512 MB is FAT16, and any FAT volume of 512 MB or larger is FAT32.  Please don t draw an incorrect conclusion here.  There are many FAT16 volumes out there that are larger than 512 MB. There are various ways to force the format to be FAT16 rather than the default of FAT32, and there is a great deal of code that implements different limits. All we are talking about here is the default cutover value for MS-DOS and Windows on volumes that have not yet been formatted. There are two tables one is for FAT16 and the other is for FAT32. An entry in these tables is selected based on the size of the volume in 512 byte sectors (the value that will go in BPB_TotSec16 or BPB_TotSec32), and the value that this table sets is the BPB_SecPerClus value.      struct DSKSZTOSECPERCLUS { DWORD DiskSize; SecPerClusVal;     }; *This is the table for FAT16 drives. NOTE that this table includes * entries for disk sizes larger than 512 MB even though typically * only the entries for disks < 512 MB in size are used. * The way this table is accessed is to look for the first entry * in the table for which the disk size is less than or equal * to the DiskSize field in that table entry.  For this table to * work properly BPB_RsvdSecCnt must be 1, BPB_NumFATs * must be 2, and BPB_RootEntCnt must be 512. Any of these values * being different may require the first table entries DiskSize value * to be changed otherwise the cluster count may be to low for FAT16.    */     DSKSZTOSECPERCLUS DskTableFAT16 [] = {         {        8400,   0}, /* disks up to  4.1 MB, the 0 value for SecPerClusVal trips an error */         {      32680,   2},  /* disks up to   16 MB,  1k cluster */         {    262144,   4},   /* disks up to 128 MB,  2k cluster */         {   524288,    8},   /* disks up to 256 MB,  4k cluster */         { 1048576,  16},     /* disks up to 512 MB,  8k cluster */         /* The entries after this point are not used unless FAT16 is forced */         { 2097152,  32},     /* disks up to     1 GB, 16k cluster */         { 4194304,  64},     /* disks up to     2 GB, 32k cluster */         { 0xFFFFFFFF, 0} /* any disk greater than 2GB, 0 value for SecPerClusVal trips an error */     }; * This is the table for FAT32 drives. NOTE that this table includes * entries for disk sizes smaller than 512 MB even though typically * only the entries for disks >= 512 MB in size are used. * The way this table is accessed is to look for the first entry * in the table for which the disk size is less than or equal * to the DiskSize field in that table entry. For this table to * work properly BPB_RsvdSecCnt must be 32, and BPB_NumFATs * must be 2. Any of these values being different may require the first  * table entries DiskSize value to be changed otherwise the cluster count  * may be to low for FAT32.     DSKSZTOSECPERCLUS DskTableFAT32 [] = {         {       66600,   0},  /* disks up to 32.5 MB, the 0 value for SecPerClusVal trips an error */         {     532480,   1},   /* disks up to 260 MB,  .5k cluster */         { 16777216,   8},     /* disks up to     8 GB,    4k cluster */         { 33554432, 16},      /* disks up to   16 GB,    8k cluster */         { 67108864, 32},      /* disks up to   32 GB,  16k cluster */         { 0xFFFFFFFF, 64}/* disks greater than 32GB, 32k cluster */     }; So given a disk size and a FAT type of FAT16 or FAT32, we now have a BPB_SecPerClus value. The only thing we have left is do is to compute how many sectors the FAT takes up so that we can set BPB_FATSz16 or BPB_FATSz32. Note that at this point we assume that BPB_RootEntCnt, BPB_RsvdSecCnt, and BPB_NumFATs are appropriately set. We also assume that DskSize is the size of the volume that we are either going to put in BPB_TotSec32 or BPB_TotSec16. RootDirSectors = ((BPB_RootEntCnt * 32) + (BPB_BytsPerSec   1)) / BPB_BytsPerSec; TmpVal1 = DskSize   (BPB_ResvdSecCnt + RootDirSectors); TmpVal2 = (256 * BPB_SecPerClus) + BPB_NumFATs; If(FATType == FAT32)     TmpVal2 = TmpVal2 / 2; FATSz = (TMPVal1 + (TmpVal2   1)) / TmpVal2; If(FATType == FAT32) {     BPB_FATSz16 = 0;     BPB_FATSz32 = FATSz; } else {     BPB_FATSz16 = LOWORD(FATSz);     /* there is no BPB_FATSz32 in a FAT16 BPB */ Do not spend too much time trying to figure out why this math works. The basis for the computation is complicated; the important point is that this is how Microsoft operating systems do it, and it works. Note, however, that this math does not work perfectly. It will occasionally set a FATSz that is up to 2 sectors too large for FAT16, and occasionally up to 8 sectors too large for FAT32. It will never compute a FATSz value that is too small, however. Because it is OK to have a FATSz that is too large, at the expense of wasting a few sectors, the fact that this computation is surprisingly simple more than makes up for it being off in a safe way in some cases. FAT32 FSInfo Sector Structure and Backup Boot Sector On a FAT32 volume, the FAT can be a large data structure, unlike on FAT16 where it is limited to a maximum of 128K worth of sectors and FAT12 where it is limited to a maximum of 6K worth of sectors. For this reason, a provision is made to store the  last known  free cluster count on the FAT32 volume so that it does not have to be computed as soon as an API call is made to ask how much free space there is on the volume (like at the end of a directory listing). The FSInfo sector number is the value in the BPB_FSInfo field; for Microsoft operating systems it is always set to 1. Here is the structure of the FSInfo sector: FAT32 FSInfo Sector Structure and Backup Boot Sector Offset (byte) Size (bytes) Description FSI_LeadSig Value 0x41615252. This lead signature is used to validate that this is in fact an FSInfo sector. FSI_Reserved1 This field is currently reserved for future expansion. FAT32 format code should always initialize all bytes of this field to 0. Bytes in this field must currently never be used. FSI_StrucSig Value 0x61417272. Another signature that is more localized in the sector to the location of the fields that are used. FSI_Free_Count Contains the last known free cluster count on the volume. If the value is 0xFFFFFFFF, then the free count is unknown and must be computed. Any other value can be used, but is not necessarily correct. It should be range checked at least to make sure it is <= volume cluster count. FSI_Nxt_Free This is a hint for the FAT driver. It indicates the cluster number at which the driver should start looking for free clusters. Because a FAT32 FAT is large, it can be rather time consuming if there are a lot of allocated clusters at the start of the FAT and the driver starts looking for a free cluster starting at cluster 2. Typically this value is set to the last cluster number that the driver allocated. If the value is 0xFFFFFFFF, then there is no hint and the driver should start looking at cluster 2. Any other value can be used, but should be checked first to make sure it is a valid cluster number for the volume. FSI_Reserved2 This field is currently reserved for future expansion. FAT32 format code should always initialize all bytes of this field to 0. Bytes in this field must currently never be used.  FSI_TrailSig Value 0xAA550000. This trail signature is used to validate that this is in fact an FSInfo sector. Note that the high 2 bytes of this value which go into the bytes at offsets 510 and 511 match the signature bytes used at the same offsets in sector 0. Another feature on FAT32 volumes that is not present on FAT16/FAT12 is the BPB_BkBootSec field. FAT16/FAT12 volumes can be totally lost if the contents of sector 0 of the volume are overwritten or sector 0 goes bad and cannot be read. This is a  single point of failure  for FAT16 and FAT12 volumes. The BPB_BkBootSec field reduces the severity of this problem for FAT32 volumes, because starting at that sector number on the volume there is a backup copy of the boot sector information including the volume s BPB.  In the case where the sector 0 information has been accidentally overwritten, all a disk repair utility has to do is restore the boot sector(s) from the backup copy. In the case where sector 0 goes bad, this allows the volume to be mounted so that the user can access data before replacing the disk.  This second case sector 0 goes bad is the reason why no value other than 6 should ever be placed in the BPB_BkBootSec field. If sector 0 is unreadable, various operating systems are  hard wired  to check for backup boot sector(s) starting at sector 6 of the FAT32 volume. Note that starting at the BPB_BkBootSec sector is a complete boot record. The Microsoft FAT32  boot sector  is actually three 512-byte sectors long. There is a copy of all three of these sectors starting at the BPB_BkBootSec sector. A copy of the FSInfo sector is also there, even though the BPB_FSInfo field in this backup boot sector is set to the same value as is stored in the sector 0 BPB.  NOTE: All 3 of these sectors have the 0xAA55 signature in sector offsets 510 and 511, just like the first boot sector does (see the earlier discussion at the end of the BPB structure description). FAT Directory Structure We will first talk about short directory entries and ignore long directory entries for the moment. A FAT directory is nothing but a   composed of a linear list of 32-byte structures. The only special directory, which must always be present, is the root directory. For FAT12 and FAT16 media, the root directory is located in a fixed location on the disk immediately following the last FAT and is of a fixed size in sectors computed from the BPB_RootEntCnt value (see computations for RootDirSectors earlier in this document). For FAT12 and FAT16 media, the first sector of the root directory is sector number relative to the first sector of the FAT volume: FirstRootDirSecNum = BPB_ResvdSecCnt + (BPB_NumFATs * BPB_FATSz16); For FAT32, the root directory can be of variable size and is a cluster chain, just like any other directory is. The first cluster of the root directory on a FAT32 volume is stored in BPB_RootClus. Unlike other directories, the root directory itself on any FAT type does not have any date or time stamps, does not have a file name (other than the implied file name  ), and does not contain   and   files as the first two directory entries in the directory. The only other special aspect of the root directory is that it is the only directory on the FAT volume for which it is valid to have a file that has only the ATTR_VOLUME_ID attribute bit set (see below). FAT 32 Byte Directory Entry Structure Offset (byte) Size (bytes) Description DIR_Name Short name. DIR_Attr File attributes: ATTR_READ_ONLY    ATTR_HIDDEN  ATTR_SYSTEM  ATTR_VOLUME_ID  ATTR_DIRECTORY ATTR_ARCHIVE   ATTR_LONG_NAME  ATTR_READ_ONLY | ATTR_HIDDEN | ATTR_SYSTEM | ATTR_VOLUME_ID The upper two bits of the attribute byte are reserved and should always be set to 0 when a file is created and never modified or looked at after that. DIR_NTRes Reserved for use by Windows NT. Set value to 0 when a file is created and never modify or look at it after that. DIR_CrtTimeTenth Millisecond stamp at file creation time. This field actually contains a count of tenths of a second. The granularity of the seconds part of DIR_CrtTime is 2 seconds so this field is a count of tenths of a second and its valid value range is 0-199 inclusive. DIR_CrtTime Time file was created. DIR_CrtDate Date file was created. DIR_LstAccDate Last access date. Note that there is no last access time, only a date. This is the date of last read or write. In the case of a write, this should be set to the same date as DIR_WrtDate. DIR_FstClusHI High word of this entry s first cluster number (always 0 for a FAT12 or FAT16 volume). DIR_WrtTime Time of last write. Note that file creation is considered a write. DIR_WrtDate Date of last write. Note that file creation is considered a write. DIR_FstClusLO Low word of this entry s first cluster number. DIR_FileSize 32-bit DWORD holding this file s size in bytes. DIR_Name[0] Special notes about the first byte (DIR_Name[0]) of a FAT directory entry: If DIR_Name[0] == 0xE5, then the directory entry is free (there is no file or directory name in this entry).  If DIR_Name[0] == 0x00, then the directory entry is free (same as for 0xE5), and there are no allocated directory entries after this one (all of the DIR_Name[0] bytes in all of the entries after this one are also set to 0).  The special 0 value, rather than the 0xE5 value, indicates to FAT file system driver code that the rest of the entries in this directory do not need to be examined because they are all free.  If DIR_Name[0] == 0x05, then the actual file name character for this byte is 0xE5. 0xE5 is actually a valid KANJI lead byte value for the character set used in Japan. The special 0x05 value is used so that this special file name case for Japan can be handled properly and not cause FAT file system code to think that the entry is free.  The DIR_Name field is actually broken into two parts+ the 8-character main part of the name, and the 3-character extension. These two parts are  trailing space padded  with bytes of 0x20.  DIR_Name[0] may not equal 0x20. There is an implied   character between the main part of the name and the extension part of the name that is not present in DIR_Name. Lower case characters are not allowed in DIR_Name (what these characters are is country specific).  The following characters are not legal in any bytes of DIR_Name:  Values less than 0x20 except for the special case of 0x05 in DIR_Name[0] described above. 0x22, 0x2A, 0x2B, 0x2C, 0x2E, 0x2F, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x5B, 0x5C, 0x5D, and 0x7C.  Here are some examples of how a user-entered name maps into DIR_Name: foo.bar             ->  FOO     BAR FOO.BAR             ->  FOO     BAR Foo.Bar             ->  FOO     BAR                 ->  FOO                        ->  FOO         PICKLE.A            ->  PICKLE  A   prettybg.big        ->  PRETTYBGBIG                -> illegal, DIR_Name[0] cannot be 0x20 In FAT directories all names are unique. Look at the first three examples earlier. Those different names all refer to the same file, and there can only be one file with DIR_Name set to  FOO     BAR  in any directory. DIR_Attr specifies attributes of the file: ATTR_READ_ONLY  Indicates that writes to the file should fail. ATTR_HIDDEN  Indicates that normal directory listings should not show this file.  ATTR_SYSTEM  Indicates that this is an operating system file. ATTR_VOLUME_ID  There should only be one   on the volume that has this attribute set, and that file must be in the root directory. This name of this file is actually the label for the volume. DIR_FstClusHI and DIR_FstClusLO must always be 0 for the volume label (no data clusters are allocated to the volume label file).  ATTR_DIRECTORY Indicates that this file is actually a container for other files. ATTR_ARCHIVE   This attribute supports backup utilities. This bit is set by the FAT file system driver when a file is created, renamed, or written to. Backup utilities may use this attribute to indicate which files on the volume have been modified since the last time that a backup was performed. Note that the ATTR_LONG_NAME attribute bit combination indicates that the   is actually part of the long name entry for some other file. See the next section for more information on this attribute combination. When a directory is created, a file with the ATTR_DIRECTORY bit set in its DIR_Attr field, you set its DIR_FileSize to 0. DIR_FileSize is not used and is always 0 on a file with the ATTR_DIRECTORY attribute (directories are sized by simply following their cluster chains to the EOC mark). One cluster is allocated to the directory (unless it is the root directory on a FAT16/FAT12 volume), and you set DIR_FstClusLO and DIR_FstClusHI to that cluster number and place an EOC mark in that clusters entry in the FAT. Next, you initialize all bytes of that cluster to 0. If the directory is the root directory, you are done (there are no dot or dotdot entries in the root directory). If the directory is not the root directory, you need to create two special entries in the first two 32-byte directory entries of the directory (the first two 32 byte entries in the data region of the cluster you just allocated).  The first directory entry has DIR_Name set to:  .           The second has DIR_Name set to:  ..          These are called the dot and dotdot entries. The DIR_FileSize field on both entries is set to 0, and all of the date and time fields in both of these entries are set to the same values as they were in the directory entry for the directory that you just created. You now set DIR_FstClusLO and DIR_FstClusHI for the dot entry (the first entry) to the same values you put in those fields for the directories directory entry (the cluster number of the cluster that contains the dot and dotdot entries).  Finally, you set DIR_FstClusLO and DIR_FstClusHI for the dotdot entry (the second entry) to the first cluster number of the directory in which you just created the directory (value is 0 if this directory is the root directory even for FAT32 volumes).  Here is the summary for the dot and dotdot entries:  The dot entry is a directory that points to itself.  The dotdot entry points to the starting cluster of the parent of this directory (which is 0 if this directories parent is the root directory). Date and Time Formats Many FAT file systems do not support Date/Time other than DIR_WrtTime and DIR_WrtDate. For this reason, DIR_CrtTimeMil, DIR_CrtTime, DIR_CrtDate, and DIR_LstAccDate are actually optional fields. DIR_WrtTime and DIR_WrtDate must be supported, however. If the other date and time fields are not supported, they should be set to 0 on file create and ignored on other file operations. Date Format. A FAT directory entry date stamp is a 16-bit field that is basically a date relative to the MS-DOS epoch of 01/01/1980. Here is the format (bit 0 is the LSB of the 16-bit word, bit 15 is the MSB of the 16-bit word): Bits 0 4: Day of month, valid value range 1-31 inclusive. Bits 5 8: Month of year, 1 = January, valid value range 1 12 inclusive. Bits 9 15: Count of years from 1980, valid value range 0 127 inclusive (1980 2107). Time Format. A FAT directory entry time stamp is a 16-bit field that has a granularity of 2 seconds. Here is the format (bit 0 is the LSB of the 16-bit word, bit 15 is the MSB of the 16-bit word). Bits 0 4: 2-second count, valid value range 0 29 inclusive (0   58 seconds). Bits 5 10: Minutes, valid value range 0 59 inclusive. Bits 11 15: Hours, valid value range 0 23 inclusive. The valid time range is from Midnight 00:00:00 to 23:59:58. FAT Long Directory Entries In adding long directory entries to the FAT file system it was crucial that their addition to the FAT file system's existing design: symbol 183 \f "Symbol" \s 10 \h Be essentially transparent on earlier versions of MS-DOS.  The primary goal being that existing MS-DOS APIs on previous versions of MS-DOS/Windows do not easily "find" long directory entries.  The only MS-DOS APIs that can "find" long directory entries are the FCB-based-find APIs when used with a full meta-character matching pattern (i.e. *.*) and full attribute matching bits (i.e. matching attributes are FFh).  On post-Windows 95 versions of MS-DOS/Windows, no MS-DOS API can accidentally "find" a single long directory entry. symbol 183 \f "Symbol" \s 10 \h Be located in close physical proximity, on the media, to the short directory entries they are associated with.  As will be evident, long directory entries are immediately contiguous to the short directory entry they are associated with and their existence imposes an unnoticeable performance impact on the file system. symbol 183 \f "Symbol" \s 10 \h If detected by disk maintenance utilities, they do not jeopardize the integrity of existing file data.  Disk maintenance utilities typically do not use MS-DOS APIs to access on-media file-system-specific data structures.  Rather they read physical or logical sector information from the disk and judge for themselves what the directory entries contain.  Based on the heuristics employed in the utilities, the utility may take various steps to "repair" what it perceives to be "damaged" file-system-specific data structures.  Long directory entries were added to the FAT file system in such a way as to not cause the loss of file data if a disk containing long directory entries was "repaired" by a pre-Windows 95-compatible disk utility on a previous version of MS-DOS/Windows. In order to meet the goals of locality-of-access and transparency, the long directory entry is defined as a short directory entry with a special attribute.  As described previously, a long directory entry is just a regular directory entry in which the attribute field has a value of: ATTR_LONG_NAME ATTR_READ_ONLY | ATTR_HIDDEN | ATTR_SYSTEM | ATTR_VOLUME_ID A mask for determining whether an entry is a long-name sub-component should also be defined: ATTR_LONG_NAME_MASK ATTR_READ_ONLY | ATTR_HIDDEN | ATTR_SYSTEM | ATTR_VOLUME_ID | ATTR_DIRECTORY | ATTR_ARCHIVE When such a directory entry is encountered it is given special treatment by the file system.  It is treated as part of a set of directory entries that are associated with a single short directory entry. Each long directory entry has the following structure: FAT Long Directory Entry Structure Offset  (byte) Size  (bytes) Description LDIR_Ord The order of this entry in the sequence of long dir entries associated with the short dir entry at the end of the long dir set. If masked with 0x40 (LAST_LONG_ENTRY), this indicates the entry is the last long dir entry in a set of long dir entries. All valid sets of long dir entries must begin with an entry having this mask. LDIR_Name1 Characters 1-5 of the long-name sub-component in this dir entry. LDIR_Attr Attributes - must be ATTR_LONG_NAME LDIR_Type If zero, indicates a directory entry that is a sub-component of a long name.  NOTE: Other values reserved for future extensions. Non-zero implies other dirent types. LDIR_Chksum Checksum of name in the short dir entry at the end of the long dir set. LDIR_Name2 Characters 6-11 of the long-name sub-component in this dir entry. LDIR_FstClusLO Must be ZERO. This is an artifact of the FAT "first cluster" and must be zero for compatibility with existing disk utilities.  It's meaningless in the context of a long dir entry. LDIR_Name3 Characters 12-13 of the long-name sub-component in this dir entry. Organization and Association of Short & Long Directory Entries A set of long entries is always associated with a short entry that they always immediately precede.  Long entries are paired with short entries for one reason: only short directory entries are visible to previous versions of MS-DOS/Windows.  Without a short entry to accompany it, a long directory entry would be completely invisible on previous versions of MS-DOS/Windows.  A long entry never legally exists all by itself.  If long entries are found without being paired with a valid short entry, they are termed orphans.  The following figure depicts a set of n long directory entries associated with it's single short entry. Long entries always immediately precede and are physically contiguous with, the short entry they are associated with.  The file system makes a few other checks to ensure that a set of long entries is actually associated with a short entry. Sequence Of Long Directory Entries Entry Ordinal Nth Long entry LAST_LONG_ENTRY (0x40) | N  Additional Long Entries 1st Long entry Short Entry Associated With Preceding Long Entries (not applicable) First, every member of a set of long entries is uniquely numbered and the last member of the set is or'd with a flag indicating that it is, in fact, the last member of the set.  The LDIR_Ord field is used to make this determination.  The first member of a set has an LDIR_Ord value of one.  The nth long member of the set has a value of (n OR LAST_LONG_ENTRY).  Note that the LDIR_Ord field cannot have values of 0xE5 or 0x00.  These values have always been used by the file system to indicate a "free" directory entry, or the "last" directory entry in a cluster.  Values for LDIR_Ord do not take on these two values over their range.  Values for LDIR_Ord must run from 1 to (n OR LAST_LONG_ENTRY).  If they do not, the long entries are "damaged" and are treated as orphans by the file system. Second, an 8-bit checksum is computed on the name contained in the short directory entry at the time the short and long directory entries are created.  All 11 characters of the name in the short entry are used in the checksum calculation.  The check sum is placed in every long entry.  If any of the check sums in the set of long entries do not agree with the computed checksum of the name contained in the short entry, then the long entries are treated as orphans.  This can occur if a disk containing long and short entries is taken to a previous version of MS-DOS/Windows and only the short name of a file or directory with a long entries is renamed. The algorithm, implemented in C, for computing the checksum is: //----------------------------------------------------------------------------- ChkSum() Returns an unsigned byte checksum computed on an unsigned byte array.  The array must be 11 bytes long and is assumed to contain a name stored in the format of a MS-DOS directory entry. Passed:  pFcbName    Pointer to an unsigned byte array assumed to be //                          11 bytes long. Returns: Sum         An 8-bit unsigned checksum of the array pointed //                           to by pFcbName. //------------------------------------------------------------------------------ unsigned char ChkSum (unsigned char *pFcbName) short FcbNameLen; unsigned char Sum; Sum = 0; for (FcbNameLen=11; FcbNameLen!=0; FcbNameLen--) { // NOTE: The operation is an unsigned char rotate right Sum = ((Sum & 1) ? 0x80 : 0) + (Sum >> 1) + *pFcbName++; return (Sum); As a consequence of this pairing, the short directory entry serves as the structure that contains fields like: last access date, creation time, creation date, first cluster, and size.  It also holds a name that is visible on previous versions of MS-DOS/Windows.  The long directory entries are free to contain new information and need not replicate information already available in the short entry.  Principally, the long entries contain the long name of a file.  The name contained in a short entry which is associated with a set of long entries is termed the alias name, or simply alias, of the file. Storage of a Long-Name Within Long Directory Entries A long name can consist of more characters than can fit in a single long directory entry.  When this occurs the name is stored in more than one long entry.  In any event, the name fields themselves within the long entries are disjoint.  The following example is provided to illustrate how a long name is stored across several long directory entries.  Names are also NUL terminated and padded with 0xFFFF characters in order to detect corruption of long name fields by errant disk utilities.  A name that fits exactly in a n long directory entries (i.e. is an integer multiple of 13) is not NUL terminated and not padded with 0xFFFFs. Suppose a file is created with the name: "The quick brown.fox".  The following example illustrates how the name is packed into long and short directory entries.  Most fields in the directory entries are also filled in as well. The heuristics used to "auto-generate" a short name from a long name are explained in a later section. Name Limits and Character Sets Short Directory Entries Short names are limited to 8 characters followed by an optional period (.) and extension of up to 3 characters.  The total path length of a short name cannot exceed 80 characters (64 char path + 3 drive letter + 12 for 8.3 name + NUL) including the trailing NUL.  The characters may be any combination of letters, digits, or characters with code point values greater than 127.  The following special characters are also allowed: $   %   '   -   _   @   ~    `   !   (    )   {   }  ^  #  & Names are stored in a short directory entry in the OEM code page that the system is configured for at the time the directory entry is created.  Short directory entries remain in OEM for compatibility with previous versions of MS-DOS/Windows.  OEM characters are single 8-bit characters or can be DBCS character pairs for certain code pages. Short names passed to the file system are always converted to upper case and their original case value is lost.  One problem that is generally true of most OEM code pages is that they map lower to upper case extended characters in a non-unique fashion.  That is, they map multiple extended characters to a single upper case character.  This creates problems because it does not preserve the information that the extended character provides.  This mapping also prevents the creation of some file names that would normally differ, but because of the mapping to upper case they become the same file name. Long Directory Entries Long names are limited to 255 characters, not including the trailing NUL.  The total path length of a long name cannot exceed 260 characters, including the trailing NUL.  The characters may be any combination of those defined for short names with the addition of the period (.) character used multiple times within the long name.  A space is also a valid character in a long name as it always has been for a short name.  However, in short names it typically is not used.  The following six special characters are now allowed in a long name.  They are not legal in a short name. +   ,   ;   =   [   ] Embedded spaces within a long name are allowed.  Leading and trailing spaces in a long name are ignored.  Leading and embedded periods are allowed in a name and are stored in the long name.  Trailing periods are ignored. Long names are stored in long directory entries in UNICODE.  UNICODE characters are 16-bit characters.  It is not be possible to store UNICODE in short directory entries since the names stored there are 8-bit characters or DBCS characters. Long names passed to the file system are not converted to upper case and their original case value is preserved.  UNICODE solves the case mapping problem prevalent in some OEM code pages by always providing a translation for lower case characters to a single, unique upper case character. Name Matching In Short & Long Names The names contained in the set of all short directory entries are termed the "short name space".  The names contained in the set of all long directory entries are termed the "long name space".  Together, they form a single unified name space in which no duplicate names can exist.  That is: any name within a specific directory, whether it is a short name or a long name, can occur only once in the name space.  Furthermore, although the case of a name is preserved in a long name, no two names can have the same name although the names on the media actually differ by case.  That is names like "foobar" cannot be created if there is already a short entry with a name of "FOOBAR" or a long name with a name of "FooBar". All types of search operations within the file system (i.e. find, open, create, delete, rename) are case-insensitive.  An open of "FOOBAR" will open either "FooBar" or "foobar" if one or the other exists.  A find using "FOOBAR" as a pattern will find the same files mentioned.  The same rules are also true for extended characters that are accented. A short name search operation checks only the names of the short directory entries for a match.  A long name search operation checks both the long and short directory entries.  As the file system traverses a directory, it caches the long-name sub-components contained in long directory entries.  As soon as a short directory entry is encountered that is associated with the cached long name, the long name search operation will check the cached long name first and then the short name for a match. When a character on the media, whether it is stored in the OEM character set or in UNICODE, cannot be translated into the appropriate character in the OEM or ANSI code page, it is always "translated" to the "_" (underscore) character as it is returned to the user   it is NOT modified on the disk.  This character is the same in all OEM code pages and ANSI. Naming Conventions and Long Names An API allows the caller to specify the long name to be assigned to a file or directory.  They do not allow the caller to independently specify the short name.  The reason for this prohibition is that the short and long names are considered to be a single unified name space.  As should be obvious the file system's name space does not support duplicate names.  In other words, a long name for a file may not contain the same name, ignoring case, as the short name in a different file.  This restriction is intended to prevent confusion among users, and applications, regarding the proper name of a file or directory.  To make this restriction transparent, whenever a long name is created and the no matching long name exists, the short name is automatically generated from the long name in such a way that it does not collide with an existing short name. The technique chosen to auto-generate short names from long names is modeled after Windows NT.  Auto-generated short names are composed of the basis-name and an optional numeric-tail. The Basis-Name Generation Algorithm The basis-name generation algorithm is outlined below.  This is a sample algorithm and serves to illustrate how short names can be auto-generated from long names. An implementation should follow this basic sequence of steps. The UNICODE name passed to the file system is converted to upper case. The upper cased UNICODE name is converted to OEM. (the uppercased UNICODE glyph does not exist as an OEM glyph in the OEM code page) (the OEM glyph is invalid in an 8.3 name) Replace the glyph to an OEM '_' (underscore) character. Set a "lossy conversion" flag. Strip all leading and embedded spaces from the long name. Strip all leading periods from the long name. While (not at end of the long name) (char is not a period) (total chars copied < 8) Copy characters into primary portion of the basis name Insert a dot at the end of the primary components of the basis-name iff the basis name has an extension after the last period in the name. Scan for the last embedded period in the long name. (the last embedded period was found) While (not at end of the long name) (total chars copied < 3) Copy characters into extension portion of the basis name Proceed to numeric-tail generation. The Numeric-Tail Generation Algorithm (a "lossy conversion" was not flagged) (the long name fits within the 8.3 naming conventions) (the basis-name does not collide with any existing short name) The short name is only the basis-name without the numeric tail. Insert a numeric-tail "~n" to the end of the primary name such that the value of the "~n" is chosen so that the  name thus formed does not collide with any existing short name and that the primary name does not exceed eight  characters in length. The "~n" string can range from "~1" to "~999999".  The number "n" is chosen so that it is the next number in a sequence of files with similar basis-names.  For example, assume the following short names existed: LETTER~1.DOC and LETTER~2.DOC.  As expected, the next auto-generated name of name of this type would be LETTER~3.DOC.  Assume the following short names existed: LETTER~1.DOC, LETTER~3.DOC.  Again, the next auto-generated name of name of this type would be LETTER~2.DOC.  However, one absolutely cannot count on this behavior.  In a directory with a very large mix of names of this type, the selection algorithm is optimized for speed and may select another "n" based on the characteristics of short names that end in "~n" and have similar leading name patterns. Effect of Long Directory Entries on Down Level Versions of FAT The support of long names is most important on the hard disk, however it will be supported on removable media as well.  The implementation provides support for long names without breaking compatibility with the existing FAT format.  A disk can be read by a down level system without any compatibility problems.  An existing disk does not go through a conversion process before it can start using long names.  All of the current files remain unmodified.  The long name directory entries are added when a long name is created.  The addition of a long name to an existing file may require the 8.3 directory entry to be moved if the required adjacent directory entries are not available. The long name entries are as hidden as hidden or system files are on a down level system.  This is enough to keep the casual user from causing problems.  The user can copy the files off using the 8.3 name, and put new files on without any side effects The interesting part of this is what happens when the disk is taken to a down level FAT system and the directory is changed.  This can affect the long name entries since the down level system ignores these long names and will not ensure they are properly associated with the 8.3 names. A down level system will only see the long name entries when searching for a label.  On a down level system, the volume label will be incorrectly reported if the true volume label does not come before all of the long name entries in the root directory.  This is because the long name entries also have the volume label bit set.  This is unfortunate, but is not a critical problem. If an attempt is made to remove the volume label, one of the long name directory entries may be deleted.  This would be a rare occurrence.  It is easily detected on an aware system.  The long name entry will no longer be a valid file entry, since one or more of the long entries is marked as deleted.  If the deleted entry is reused, then the attribute byte will not have the proper value for a long name entry.   If a file is renamed on a down level system, then only the short name will be renamed.  The long name will not be affected.  Since the long and short names must be kept consistent across the name space, it is desirable to have the long name become invalid as a result of this rename.  The checksum of the 8.3 name that is kept in the long name directory provides the ability to detect this type of change.  This checksum will be checked to validate the long name before it is used.  Rename will cause problems only if the renamed 8.3 file name happens to have the same checksum.  The checksum algorithm chosen has a relatively flat distribution across the short name space. This rename of the 8.3 name must also not conflict with any of the long names.  Otherwise a down level system could create a short name in one file that matches a long name, when case is ignored, in a different file.  To prevent this, the automatic creation of an 8.3 name from a long name, that has an 8.3 format, will directly map the long name to the 8.3 name by converting the characters to upper case. If the file is deleted, then the long name is simply orphaned.  If a new file is created, the long name may be incorrectly associated with the new file name.  As in the case of a rename the checksum of the 8.3 name will help prevent this incorrect association. Validating The Contents of a Directory These guidelines are provided so that disk maintenance utilities can verify individual directory entries for 'correctness' while maintaining compatibility with future enhancements to the directory structure. DO NOT look at the content of directory entry fields marked 'reserved' and assume that, if they are any value other than zero, that they are 'bad'. DO NOT reset the content of directory entry fields marked reserved to zero when they contain non-zero values (under the assumption that they are "bad").  Directory entry fields are designated reserved, rather than must-be-zero.  They should be ignored by your application..  These fields are intended for future extensions of the file system.  By ignoring them an utility can continue to run on future versions of the operating system. DO use the A_LONG attribute first when determining whether a directory entry is a long directory entry or a short directory entry.  The following algorithm is the correct algorithm for making this determination: if  (((LDIR_attr & ATTR_LONG_NAME_MASK) == ATTR_LONG_NAME) && (LDIR_Ord != 0xE5)) /*   Found an active long name sub-component.   */ DO use bits 4 and 3 of a short entry together when determining what type of short directory entry is being inspected.    The following algorithm is the correct algorithm for making this determination: if  (((LDIR_attr & ATTR_LONG_NAME_MASK) != ATTR_LONG_NAME) && (LDIR_Ord != 0xE5)) if        ((DIR_Attr & (ATTR_DIRECTORY | ATTR_VOLUME_ID)) == 0x00) /*   Found a file.   */ else if ((DIR_Attr & (ATTR_DIRECTORY | ATTR_VOLUME_ID)) == ATTR_DIRECTORY) /*   Found a directory.   */ else if ((DIR_Attr & (ATTR_DIRECTORY | ATTR_VOLUME_ID)) == ATTR_VOLUME_ID) /*   Found a volume label.   */ /*   Found an invalid directory entry.   */ DO NOT assume that a non-zero value in the "type" field indicates a bad directory entry.  Do not force the "type" field to zero. Use the "checksum" field as a value to validate the directory entry.  The "first cluster" field is currently being set to zero, though this might change in future. Other Notes Relating to FAT Directories Long File Name directory entries are identical on all FAT types. See the preceeding sections for details.  DIR_FileSize is a 32-bit field. For FAT32 volumes, your FAT file system driver must not allow a cluster chain to be created that is longer than 0x100000000 bytes, and the last byte of the last cluster in a chain that long cannot be allocated to the file. This must be done so that no file has a file size > 0xFFFFFFFF bytes. This is a fundamental limit of all FAT file systems. The maximum allowed file size on a FAT volume is 0xFFFFFFFF (4,294,967,295) bytes. Similarly, a FAT file system driver must not allow a directory (a file that is actually a container for other files) to be larger than 65,536 * 32 (2,097,152) bytes.  NOTE: This limit does not apply to the number of files in the directory. This limit is on the size of the directory itself and has nothing to do with the content of the directory. There are two reasons for this limit: Because FAT directories are not sorted or indexed, it is a bad idea to create huge directories; otherwise, operations like creating a new entry (which requires every allocated directory entry to be checked to verify that the name doesn t already exist in the directory) become very slow.  There are many FAT file system drivers and disk utilities, including Microsoft s, that expect to be able to count the entries in a directory using a 16-bit WORD variable. For this reason, directories cannot have more than 16-bits worth of entries. FAT: General Overview of On-Disk Format Page   PAGE  PAGE   PAGE   Microsoft Corporation. All rights reserved. nha\h
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\shortname.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft For simplicities sake I m going to omit the rules dealing with international character sets, and only handle the Windows 2000  TitleFor simplicities sake I m going to omit the rules dealing with international character sets, and only handle the Windows 2000  Dan Lovinger Normal Dan Lovinger Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags MinuteThis draft omits the rules dealing with international character sets, and only discusses the Windows 2000 algorithm in detail. The Windows 95/98/Millenium algorithm is substantially similar but differs when it comes to names which only violate 8.3 rules due to case. A short name is broken into three elements: the basis, uniquifier, and extension, all characters of which are uppercase The basis is determined by scanning the original, long (non 8.3) name for the rightmost period; however, if the first character of the name is a period, it is excluded from the search and a subsequent period, if present, will be the first period considered in this scan. From the start of the name up to this period, characters form the starting basis for the short name. There are three cases: racters: the available characters are used, then a 16bit (two byte) checksum function on the long name is performed, and the four character hexadecimal representation of the checksum is appended to them (example: t.extension -> basis T9D60) (note 1) The extension is formed from the characters to the right of the rightmost period already determined. There are three cases: (example: thisisalongname -> no extension) In forming these two elements, the following characters, if encountered, are translated to underscores ( : + , ; = [ ] Example: if we had a long name of THIS[IS]ALONGNAME.[EXT] the basis would be THIS_I and the extension would be _EX. Generating the name is by trial and error. The uniquifier is formed from a separator, tilde ( ), and an integer counter which starts at one. Each trial increments the counter, and the uniquifier is formed by concatenating the separator and the decimal representation of the counter. Each generated name is formed by appending the basis, uniquifier, and, if an extension exists, a period and the extension. Example: the first generated name for thisisalongname.extension would be THISIS~1.EXT. If the first generated name is already the name of a file in the directory, short or long, we continue to ~2, ~3, ~4, and so forth. Example: if both thisisthefirst.extension and thisisthesecond.extension exist in the same directory, one will have a short name of THISIS~1.EXT and one will use THISIS~2.EXT, depending on the order in which they were created. At a counter value of 5, if the basis in use was not generated by appending the four character hexadecimal representation of the long name s checksum (see note 1) or by application of the following logic, that operation is performed now on the basis. The basis is truncated to two characters and the four character hexadecimal representation of the checksum is appended. Example: thisis6longname.extension, with an original basis of THISIS now has a basis of THFC50. This is done to reduce collisions and the number of times the algorithm must execute the trial and error loop. With a new basis is generated, the counter is reset to one and the generation of short names continues with the counter incrementing as before. Since this logic has now been executed once, if the counter hits 5 we will not execute this logic again. If the counter reaches a value which, when incremented by one, will require an additional character in its decimal representation (example: 9 to 10, 999 to 1000), the basis is truncated by one character. Example: at a counter value of 9, a basis of THFC50 would be changed, for the next attempt at a counter value of 10 (if required), to THFC5. Note that as a practical matter the basis will always be six characters at the 9 to 10 transition since we will have used the logic in the previous paragraph at some point to add the checksum to the basis; therefore, simply shortening the basis is correct. The algorithm terminates when a unique short name is generated for the long name. This name is unique in the directory between both long/primary names of files and short/secondary names of files. Windows 2000 FAT has an optimization if the primary name of a file is 8.3 except for the character case, and the case of the name and extension are monocased: either all uppercase or all lowercase characters. If both are uppercase, the name is simply 8.3; however, if one or both are lowercase, Windows 2000 FAT simply notes if they are lowercase in the directory entry in two bits at byte offset 12 (decimal) of the primary directory entry, and no physically recorded short name need be generated since Windows 2000 FAT can reconstruct it from this information The checksum algorithm referenced above is as follows in C code, using UNICODE (16bit) characters: typedef unsigned short WCHAR; typedef unsigned short USHORT; typedef unsigned long ULONG; typedef struct _UNICODE_STRING {     USHORT Length;      USHORT MaximumLength;     PWCHAR Buffer; } UNICODE_STRING, *PUNICODE_STRING; USHORT RtlComputeLfnChecksum (     PUNICODE_STRING Name     )     ULONG i;     USHORT Checksum;     if (Name->Length == sizeof(WCHAR)) {         return Name->Buffer[0];     }     Checksum = ((Name->Buffer[0] << 8) + Name->Buffer[1]) & 0xffff;     for (i=2; i < Name->Length / sizeof(WCHAR); i+=2) {         Checksum = (Checksum & 1 ? 0x8000 : 0) +                    (Checksum >> 1) +                    (Name->Buffer[i] << 8);         if (i+1 < Name->Length / sizeof(WCHAR)) {             Checksum += Name->Buffer[i+1] & 0xffff;         }     }     return Checksum;
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\readme.txt ===
This directory archives historical documentation from the Windows 9x team
that was retrieved before the group disbanded.  Thanks to BillKru, PeteS
and AaronR.

As new stuff is created it should be archived here too, but the originals
should remain visible.

fat32.doc		A brief overview of FAT32 changes from 1996.
fatgen102-efi.doc	AaronR's original treatise on FAT as he wrote up
			  for the EFI initiative.  This is a near
			  specification of FAT up to FAT32 minus long names.
fatgen103-efi.doc	DanLo's update to include LFN, again for EFI.  This
			  will probably serve as the basis for a future
			  non-EFI encumbered spec.  The LFN material is
			  lifted off of lfnmedia-ext.doc with minor edits.
lfnmedia-ext.doc	An edited version of lfnmedia.doc, removing DOS
			  API specific sections and removing codenames.  It
			  is a standalone LFN specification (for externals).
lfnmedia.doc		BillKru and Russ Arun's LFN specification from 1994.
lfnmed_2.doc		An addendeum to lfnmedia.doc that talks about some
			  specific utility issues LFNs created.
lfnpaper.doc		Talks about Win95 filesystem changes, primarily but
			  not exclusively about LFNs. 
shortname.doc		A description of the RtlGenerate8dot3 algorithim for
			  those inevitable questions.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fastfat\spec\lfnpaper.doc ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f17\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f18\froman\fcharset238\fprq2 Times New Roman CE;}{\f19\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f21\froman\fcharset161\fprq2 Times New Roman Greek;}{\f22\froman\fcharset162\fprq2 Times New Roman Tur;}{\f23\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f24\fswiss\fcharset238\fprq2 Arial CE;}{\f25\fswiss\fcharset204\fprq2 Arial Cyr;}{\f27\fswiss\fcharset161\fprq2 Arial Greek;}{\f28\fswiss\fcharset162\fprq2 Arial Tur;}{\f29\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\qj\fi-720\li720\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid \sbasedon0 \snext0 heading 1;}{\s2\qj\fi-720\li1440\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 2;}{\s3\qj\fi-720\li2160\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\adjustright \i\f1\cgrid \sbasedon0 \snext0 heading 3;}{\s4\qj\fi-720\li2880\sb240\sa60\keepn\nowidctlpar\widctlpar\ls1\ilvl3\outlinelevel3\adjustright \b\i\cgrid \sbasedon0 \snext0 heading 4;}{\s5\qj\fi-720\li3600\sb240\sa60\nowidctlpar\widctlpar\ls1\ilvl4\outlinelevel4\adjustright \f1\fs22\cgrid \sbasedon0 \snext0 heading 5;}{\s6\qj\fi-720\li4320\sb240\sa60\nowidctlpar\widctlpar\ls1\ilvl5\outlinelevel5\adjustright \i\f1\fs22\cgrid \sbasedon0 \snext0 heading 6;}{\s7\qj\fi-720\li5040\sb240\sa60\nowidctlpar\widctlpar\ls1\ilvl6\outlinelevel6\adjustright \f1\fs20\cgrid \sbasedon0 \snext0 heading 7;}{\s8\qj\fi-720\li5760\sb240\sa60\nowidctlpar\widctlpar\ls1\ilvl7\outlinelevel7\adjustright \i\f1\fs20\cgrid \sbasedon0 \snext0 heading 8;}{\s9\qj\fi-720\li6480\sb240\sa60\nowidctlpar\widctlpar\ls1\ilvl8\outlinelevel8\adjustright \i\f1\fs18\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\li200\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 3;}{\s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \b\fs22\cgrid \sbasedon0 \snext0 toc 2;}{\s17\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \b\i\cgrid \sbasedon0 \snext0 toc 1;}{\s18\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext18 footer;}{\s19\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext19 header;}{\s20\qj\li720\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext20 Normal Indent;}{\s21\qc\nowidctlpar\widctlpar\adjustright \b\fs28\cgrid \sbasedon0 \snext1 Title;}{\s22\fi-360\li360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext22 L1;}{\s23\li400\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 4;}{\s24\li600\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 5;}{\s25\li800\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 6;}{\s26\li1000\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 7;}{\s27\li1200\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 8;}{\s28\li1400\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 9;}}{\*\listtable{\list\listtemplateid-1{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'02\'00.;}{\levelnumbers\'01;}\s1\fi-720\li720 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'04\'00.\'01.;}{\levelnumbers\'01\'03;}\s2\fi-720\li1440 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'06\'00.\'01.\'02.;}{\levelnumbers\'01\'03\'05;}\s3\fi-720\li2160 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'08\'00.\'01.\'02.\'03.;}{\levelnumbers\'01\'03\'05\'07;}\s4\fi-720\li2880 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'0a\'00.\'01.\'02.\'03.\'04.;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5\fi-720\li3600 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext
\'0c\'00.\'01.\'02.\'03.\'04.\'05.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6\fi-720\li4320 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'0e\'00.\'01.\'02.\'03.\'04.\'05.\'06.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7\fi-720\li5040 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext\'10\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8\fi-720\li5760 }{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent720{\leveltext
\'12\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9\fi-720\li6480 }{\listname ;}\listid-5}{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-5\listoverridecount0\ls1}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1080 }}\ls2}}{\info{\title Chicago File System Features - Tips & Issues}{\author Russ Arun}{\operator Dan Lovinger}{\creatim\yr1997\mo4\dy4\hr15\min37}{\revtim\yr1997\mo4\dy4\hr15\min38}{\printim\yr1994\mo3\dy18\hr12\min36}{\version2}{\edmins1}{\nofpages13}{\nofwords6083}{\nofchars34677}{\*\company MSFT}{\nofcharsws42585}{\vern71}}\widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\lytprtmet\hyphcaps0\fracwidth\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \pgnrestart\linex0\sectdefaultcl {\footer \pard\plain \s18\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid {\b \tab }{\b\i Microsoft Corporation Company Confidential}{\b  \tab 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s21\qc\nowidctlpar\widctlpar\adjustright \b\fs28\cgrid {
\par Chicago File System Features - Tips & Issues
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }\pard\plain \s21\qc\nowidctlpar\widctlpar\adjustright \b\fs28\cgrid {\fs24 Attention:  Requires Chicago NDA
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par 
\par 
\par 
\par 
\par 
\par 
\par Revision:\tab 0.98
\par Date:\tab \tab April 22, 1994
\par Author:\tab \tab Russ Arun
\par {\*\bkmkstart _Toc291078650}{\*\bkmkstart _Toc291687435}{\*\bkmkend _Toc291078650}{\*\bkmkend _Toc291687435}{\listtext\pard\plain\s1 \b\f1\ul\cgrid \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard\plain \s1\qj\fi-720\li720\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid {\sect }\sectd \pgnrestart\pgnlcrm\linex0\sectdefaultcl {\header \pard\plain \s19\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid {File System - Tips & Issues\tab \tab Page }{\field{\*\fldinst {PAGE}}{\fldrslt {\lang1024 i}}}{
\par }}\pard\plain \s17\sb120\nowidctlpar\widctlpar\tx360\tqr\tlul\tx8640\adjustright \b\i\cgrid {\i0 Table of Contents
\par }\pard \s17\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright {\field\fldedit{\*\fldinst {\caps  TOC \\o }}{\fldrslt {
\par }\pard \s17\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright {1. Overview\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687437  }{\field{\*\fldinst { PAGEREF _Toc291687437 }}{\fldrslt {1}}}}}{
\par 2. File System Details\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687438  }{\field{\*\fldinst { PAGEREF _Toc291687438 }}{\fldrslt {1}}}}}{
\par 3. End User Issues\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687439  }{\field{\*\fldinst { PAGEREF _Toc291687439 }}{\fldrslt {2}}}}}{
\par }\pard\plain \s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \b\fs22\cgrid {3.1. Auto-generation of 8.3 names\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687440  }{\field{\*\fldinst { PAGEREF _Toc291687440 }}{\fldrslt {2}}}}}{
\par }\pard \s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright {3.2. Searches\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687441  }{\field{\*\fldinst { PAGEREF _Toc291687441 }}{\fldrslt {3}}}}}{
\par 3.3. Down Level Systems\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687442  }{\field{\*\fldinst { PAGEREF _Toc291687442 }}{\fldrslt {3}}}}}{
\par 3.4. Disk Utilities & Exclusive Volume Lock\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687443  }{\field{\*\fldinst { PAGEREF _Toc291687443 }}{\fldrslt {4}}}}}{
\par 3.5. Long File Name Format\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687444  }{\field{\*\fldinst { PAGEREF _Toc291687444 }}{\fldrslt {5}}}}}{
\par 3.6. Long File Names in the Root\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687445  }{\field{\*\fldinst { PAGEREF _Toc291687445 }}{\fldrslt {5}}}}}{
\par }\pard\plain \s17\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \b\i\cgrid {4. ISV Issues\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687446  }{\field{\*\fldinst { PAGEREF _Toc291687446 }}{\fldrslt {5}}}}}{
\par }\pard\plain \s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \b\fs22\cgrid {4.1. Limits in the Name\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687447  }{\field{\*\fldinst { PAGEREF _Toc291687447 }}{\fldrslt {5}}}}}{
\par }\pard \s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright {4.2. Auto-generation scheme\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687448  }{\field{\*\fldinst { PAGEREF _Toc291687448 }}{\fldrslt {5}}}}}{
\par 4.3. 32-bit Apps on Windows\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687449  }{\field{\*\fldinst { PAGEREF _Toc291687449 }}{\fldrslt {6}}}}}{
\par 4.4. 16-bit Apps on Chicago\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687450  }{\field{\*\fldinst { PAGEREF _Toc291687450 }}{\fldrslt {6}}}}}{
\par 4.5. 16-bit Apps & Down Level Systems\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687451  }{\field{\*\fldinst { PAGEREF _Toc291687451 }}{\fldrslt {6}}}}}{
\par 4.6. Character sets: APIs & on-disk names\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687452  }{\field{\*\fldinst { PAGEREF _Toc291687452 }}{\fldrslt {7}}}}}{
\par }\pard\plain \s15\li200\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \fs20\cgrid {4.6.1. 16 bit file APIs\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687453  }{\field{\*\fldinst { PAGEREF _Toc291687453 }}{\fldrslt {7}}}}}{
\par }\pard \s15\li200\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright {4.6.2. 32 bit file APIs\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687454  }{\field{\*\fldinst { PAGEREF _Toc291687454 }}{\fldrslt {7}}}}}{
\par 4.6.3. On-Disk names\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687455  }{\field{\*\fldinst { PAGEREF _Toc291687455 }}{\fldrslt {7}}}}}{
\par }\pard\plain \s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright \b\fs22\cgrid {4.7. CreateProcess, WinExec & $exec functions and LFNs\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687456  }{\field{\*\fldinst { PAGEREF _Toc291687456 }}{\fldrslt {7}}}}}{
\par }\pard \s16\sb120\nowidctlpar\widctlpar\tqr\tlul\tx8640\adjustright {4.8. Canonical API\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687457  }{\field{\*\fldinst { PAGEREF _Toc291687457 }}{\fldrslt {8}}}}}{
\par 4.9. Exclusive Volume API (specific to Chicago)\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687458  }{\field{\*\fldinst { PAGEREF _Toc291687458 }}{\fldrslt {8}}}}}{
\par 4.10. Keying off file names\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687459  }{\field{\*\fldinst { PAGEREF _Toc291687459 }}{\fldrslt {8}}}}}{
\par 4.11. Checking Directory Entries\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687460  }{\field{\*\fldinst { PAGEREF _Toc291687460 }}{\fldrslt {8}}}}}{
\par 4.12. Win32 & New INT 21 FindFirst/Next and FindClose\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687461  }{\field{\*\fldinst { PAGEREF _Toc291687461 }}{\fldrslt {9}}}}}{
\par 4.13. Time APIs\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687462  }{\field{\*\fldinst { PAGEREF _Toc291687462 }}{\fldrslt {9}}}}}{
\par 4.14. TSR and Apps that monitor INT 21 calls (INT 21 hookers)\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687463  }{\field{\*\fldinst { PAGEREF _Toc291687463 }}{\fldrslt {10}}}}}{
\par 4.15. File System "Compatibility" switch\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687464  }{\field{\*\fldinst { PAGEREF _Toc291687464 }}{\fldrslt {10}}}}}{
\par 4.16. "for" command in COMMAND.COM\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687465  }{\field{\*\fldinst { PAGEREF _Toc291687465 }}{\fldrslt {11}}}}}{
\par 4.17. Down level system idiosyncrasies\tab }{\field\flddirty{\*\fldinst { GOTOBUTTON _Toc291687466  }{\field{\*\fldinst { PAGEREF _Toc291687466 }}{\fldrslt {11}}}}}{
\par 4.18. Long command lines\tab }{\field{\*\fldinst { GOTOBUTTON _Toc291687467  }{\field{\*\fldinst { PAGEREF _Toc291687467 }}{\fldrslt {11}}}}}{
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid }}\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {\b\fs24 
\par {\*\bkmkstart _Toc291078651}{\*\bkmkstart _Toc291687436}{\*\bkmkend _Toc291078651}{\*\bkmkend _Toc291687436}{\listtext\pard\plain\s1 \b\f1\ul\cgrid \hich\af1\dbch\af0\loch\f1 1.\tab}}\pard\plain \s1\qj\fi-720\li720\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid {\sect }\sectd \pgnrestart\linex0\sectdefaultcl {\header \pard\plain \s19\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid {File System - Tips & Issues\tab \tab Page }{\field{\*\fldinst {PAGE}}{\fldrslt {\lang1024 11}}}{
\par }}{\footer \pard\plain \s18\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid {\b \tab }{\b\i Microsoft Corporation Company Confidential}{\b \tab 
\par }\pard \s18\qj\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright {
\par }}{\*\bkmkstart _Toc287753064}{\*\bkmkstart _Toc287900660}{\*\bkmkstart _Toc288048223}{\*\bkmkstart _Toc288498088}{\*\bkmkstart _Toc291078299}{\*\bkmkstart _Toc291078652}{\*\bkmkstart _Toc291687437}{\listtext\pard\plain\s1 \b\f1\ul\cgrid \hich\af1\dbch\af0\loch\f1 1.\tab}\pard\plain \s1\qj\fi-360\li360\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid {Overview{\*\bkmkend _Toc287753064}{\*\bkmkend _Toc287900660}{\*\bkmkend _Toc288048223}{\*\bkmkend _Toc288498088}{\*\bkmkend _Toc291078299}{\*\bkmkend _Toc291078652}{\*\bkmkend _Toc291687437}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The FAT file system was the original file system that was part of MS-DOS.  This file system has hardly been modified since MS-DOS 2.0, but for the introduction of 16 bit FAT in MS-DOS 3.0.  Hence the enhancement of the FAT file system to support long file names will be the first major extension of this file system in quite a while.  Long file names are being introduced in the FAT file system in a backward compatible manner in the next version of Windows.
\par 
\par Any physical file on this extended FAT file system will logically be associated with two names: namely the }{\i (primary)}{ }{\i file name}{ and its }{\i (alternate name or)}{ }{\i alias}{.  The alias will be in the standard MS-DOS 8.3 name format.  The alias will be generated automatically, if necessary.  Valid characters, as defined by MS-DOS for the 8.3 names, have been any combination of letters, digits or characters with ASCII codes greater than 127, blank (ASCII 20H), plus any of the following special characters:
\par \tab $ % ' - _ @   ~ ` ! ( ) \{ \} ^ # &
\par This is the same set of characters that is valid for the alias too.  The (long) file name can be up to 255 characters long.  Also the following additional characters, which are invalid in the alias (8.3 name), are valid in the (long) file name:
\par \tab + , ; = [ ]
\par 
\par {\*\bkmkstart _Toc287753065}{\*\bkmkstart _Toc287900661}{\*\bkmkstart _Toc288048224}{\*\bkmkstart _Toc288498089}{\*\bkmkstart _Toc291078300}{\*\bkmkstart _Toc291078653}{\*\bkmkstart _Toc291687438}{\listtext\pard\plain\s1 \b\f1\ul\cgrid \hich\af1\dbch\af0\loch\f1 2.\tab}}\pard\plain \s1\qj\fi-360\li360\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid {File System Details{\*\bkmkend _Toc287753065}{\*\bkmkend _Toc287900661}{\*\bkmkend _Toc288048224}{\*\bkmkend _Toc288498089}{\*\bkmkend _Toc291078300}{\*\bkmkend _Toc291078653}{\*\bkmkend _Toc291687438}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {In Chicago, the Long File name FAT, will be supported only when running Windows.  The regular MS-DOS real mode FAT file system (and not the Long File name FAT file system) will be the one that is supported in Single MS-DOS application mode (real mode).  This means that long names that are created in a Windows environment will }{\i not}{ be visible when the user exits to Single MS-DOS application mode, though the names themselves are physically present on the media.  Only the alias (8.3 name) will be visible.  The same applies to any down level FAT file system, when a floppy media with long file names is transported to them.  On systems like MS-DOS 6.0, Win 3.1, Windows NT 3.1 and OS/2 2.11 only the alias (8.3 name) will be visible on the floppy, even if it contains long file names created on Chicago.
\par 
\par Chicago will be able to see the long file names on Windows NT\rquote s NTFS, OS/2\rquote s HPFS or Novell Netware\rquote s file system, if there are long file names on the server.
\par 
\par As mentioned before, when a file is created, it logically has both a file name and an alias.  If the file name is 8.3 compliant then the file name and the alias are the same.  For the file name to be 8.3 compliant it has to use only the characters that are valid for an alias }{\i and}{ it has to be all }{\i upper case}{.  This implies that a name that uses only characters that are valid for an alias and is 8.3 compliant as far as its format goes, is still not the same as the alias, if it contains lower case characters.  However in this case, the alias will just be the upper case version of the file name.  For example, if the file name of a file is }{\b Examples.Txt}{, then its corresponding alias will be }{\b EXAMPLES.TXT}{.  The case of the name is preserved in the file name.  Note that searches in the file system are case insensitive, so a search of the form }{\b examples.txt}{ will find this file.
\par 
\par If the file name is not compliant with an 8.3 name either in format or in the characters it uses, then an alias will be auto-generated.   The user or an application cannot control the name created by the auto-generation process.  For example, a (long) file name of the form }{\b ThisIsALongFileName}{ will be associated with an auto-generated alias of the form }{\b THISISAL}{.  In the case of alias (8.3) name collisions, this alias could easily be of the form }{\b THISIS~1}{ or }{\b THISI~19}{. 
\par 
\par The requests to extend the FAT file system to support long file names have poured in over time.  It is a difficult balancing act extending a widely used file system, such as the FAT file system, in a backward compatible manner.  Further the long file name scheme that is being introduced is compatible with the Win32 file naming scheme.  The accrued benefits due to the existence of long file names should be obvious.  Its popularity and acceptance will be determined by how fast and how well applications support this feature, and how many of such applications find their way on to the user's machine.  A user who chooses to use the older 8.3 names, will not see much of a difference in the system, due to the long file names.    To be sure there are some issues and subtleties introduced by this feature and they are discussed below.  
\par 
\par The rest of this paper dwells on issues that end users will see while using the long file name extensions in the FAT file system, and on tips for ISVs who develop applications and utilities.
\par 
\par {\*\bkmkstart _Toc287753066}{\*\bkmkstart _Toc287900662}{\*\bkmkstart _Toc288048225}{\*\bkmkstart _Toc288498090}{\*\bkmkstart _Toc291078301}{\*\bkmkstart _Toc291078654}{\*\bkmkstart _Toc291687439}{\listtext\pard\plain\s1 \b\f1\ul\cgrid \hich\af1\dbch\af0\loch\f1 3.\tab}}\pard\plain \s1\qj\fi-360\li360\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid {End User Issues{\*\bkmkend _Toc287753066}{\*\bkmkend _Toc287900662}{\*\bkmkend _Toc288048225}{\*\bkmkend _Toc288498090}{\*\bkmkend _Toc291078301}{\*\bkmkend _Toc291078654}{\*\bkmkend _Toc291687439}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par {\*\bkmkstart _Toc287753067}{\*\bkmkstart _Toc287900663}{\*\bkmkstart _Toc288048226}{\*\bkmkstart _Toc288498091}{\*\bkmkstart _Toc291078302}{\*\bkmkstart _Toc291078655}{\*\bkmkstart _Toc291687440}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 3.1.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Auto-generation of 8.3 names{\*\bkmkend _Toc287753067}{\*\bkmkend _Toc287900663}{\*\bkmkend _Toc288048226}{\*\bkmkend _Toc288498091}{\*\bkmkend _Toc291078302}{\*\bkmkend _Toc291078655}{\*\bkmkend _Toc291687440}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The auto-generation of the alias has some side effects. Since the system auto-generates the alias name on }{\i every create}{, the following idiosyncrasies will be observed by users.
\par 
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{\tab }{\i Operations on a long file name, can potentially change the alias name}{.  In particular operations such as copy, edit, backup & restore might change the 8.3 name associated with the file.  For example, if a file with the name }{\b LongFileName}{ is associated with an alias }{\b LONGFI~2}{, and this file is copied to a different directory using:
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\tab \tab }{\b copy LongFileName  \\TMP\\LongFileName}{
\par \tab then the alias associated with this file can become }{\b LONGFILE}{, if such an alias (8.3 name) is not present in the target directory.  The (long) file name is of course preserved in this case.
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {
\par }{\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{\tab }{\i Operations on the alias (the 8.3 name) will destroy the long file name}{.  In particular operations such as copy, with older versions of utilities that have not been updated to support long file names, can destroy the long file name associated with the file that is operated upon.  For example, if a file with a file name }{\b LongFileName.Txt}{ is associated with an alias }{\b LONGFI~1.TXT}{, and this file is copied to a different directory using an older version of copy that is not aware of long file names then: 
\par \tab \tab }{\b oldcopy LONGFI~1.TXT \\TMP\\LONGFI~1.TXT
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\tab will cause the destination file in the target directory to be associated only with the file name and alias of }{\b LONGFI~1.TXT}{.  In other words the destination file will }{\i not}{ have the file name }{\b LongFileName.Txt}{.   Of course Chicago's COMMAND.COM has been updated to support long file names as part of all of its commands, including COPY.
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {
\par \tab A similar problem can occur on older versions of backup and restore.  If one backs up the entire system, using an old version of a backup utility that does not support long file names, and then restores the entire system at some point later, then all the long file names in the system will be lost.  Note that the alias (which will also be the newer file name) and the data of the file will be preserved.
\par 
\par \tab A utility called LFNBK has been posted on Compuserve.  The user can preserve the (long) file names in this case by doing the following:
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \qj\fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls2\adjustright {Preserve the (long) file name to (8.3) alias name association}{\b ,}{ by running}{\b  LFNBK /b <drive letter>}{, where <drive letter> is the drive the user plans to backup
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \qj\fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls2\adjustright {Backup this drive (specified as the drive letter in the previous line) using an old backup program that will not be aware of long file names.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \qj\fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls2\adjustright {Restore the backed up files to a drive, when necessary at some point later, using the old restore program that will not be aware of long file names
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \qj\fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls2\adjustright {Restore the long file names on this drive, by running }{\b LFNBK /r <drive letter>}{, where drive letter is the drive where the files were restored to.
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {\tab Note that the (8.3) alias name might be different from what was backed up in some cases, but the (long) file name will match what was backed up.
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\adjustright {
\par \tab Chicago will provide a feature, called }{\i tunneling}{, to preserve the (long) file names when using older editors.  These older editors will only operate on the (alias) 8.3 name because they are not aware of (long) file names.  Tunneling will be turned on by default in Chicago, but the user can choose to turn it off.  Tunneling aims to preserve the (long) file name on editors that use the following scheme:
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \qj\fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls2\adjustright {Normal file open and editing \ldblquote creates\rdblquote  a temporary file
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \qj\fi-360\li1080\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls2\adjustright {A \ldblquote save and/or close\rdblquote  operation, saves the temporary file, deletes or renames the original file, renames the temporary file just edited to be the original file
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\tab Most editors use the above scheme.
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {A user who chooses to use only 8.3 compliant names (ignoring case) or sets the file system in Win 3.1 compatible mode will not see these idiosyncrasies.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par }\pard \qj\fi-720\li720\nowidctlpar\widctlpar\adjustright {\f17\fs24 \'2a}{\tab LFNBK productizing decisions have not been made yet.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par {\*\bkmkstart _Toc287753068}{\*\bkmkstart _Toc287900664}{\*\bkmkstart _Toc288048227}{\*\bkmkstart _Toc288498092}{\*\bkmkstart _Toc291078303}{\*\bkmkstart _Toc291078656}{\*\bkmkstart _Toc291687441}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 3.2.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Searches{\*\bkmkend _Toc287753068}{\*\bkmkend _Toc287900664}{\*\bkmkend _Toc288048227}{\*\bkmkend _Toc288498092}{\*\bkmkend _Toc291078303}{\*\bkmkend _Toc291078656}{\*\bkmkend _Toc291687441}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Searches of file names apply to both the file name and its alias.  The system presents a }{\i single unified name space}{.  This is done so that the single physical view of the file is preserved.  However if the result of the search shows only the file name, it could be confusing to the user.  Consider a set of files in a directory, where the file names and aliases are as follows:
\par }{\b \tab LongFileName\tab \tab \tab LONGFI~1
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {\b \tab MyFile\tab \tab \tab \tab MYFILE
\par \tab Problems.Txt\tab \tab \tab PROBLEMS.TXT
\par \tab AnotherFile\tab \tab \tab ANOTHERF
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {\b \tab File-1\tab \tab \tab \tab FILE-1
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {A search of the form }{\b DIR *1}{ will display:
\par }{\b \tab LONGFI~1\tab \tab 123\tab 08-11-93\tab 15:26\tab LongFileName
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {\b \tab FILE-1\tab \tab \tab 352\tab 08-11-93\tab 16:01\tab File-1
\par 
\par }{Note that DIR displays the alias first for compatibility with the older }{\b DIR}{ format.  However another utility, that is aware of long file names and displays only the file name, will display both the files }{\b LongFileName}{ and }{\b File-1}{.  This could be confusing at first glance because the file }{\b LongFileName}{ does not have the number }{\b 1}{ as part of the name (which was specified in the search criteria).  The file was matched by the search pattern because its alias contains the number }{\b 1}{.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par The wildcard searches have been made more flexible in Chicago (if the file system is not in Win 3.1 compatible mode - see below for a definition of this file system mode).  Note that in the above search }{\b *1}{ was a valid specification.  It is acceptable to search for all files contain the words }{\b mid}{ somewhere in the file name with a specification such as }{\b *mid*}{.  In the old search semantics, the first }{\b * }{encountered ignored all other character specifications.
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {
\par {\*\bkmkstart _Toc287753069}{\*\bkmkstart _Toc287900665}{\*\bkmkstart _Toc288048228}{\*\bkmkstart _Toc288498093}{\*\bkmkstart _Toc291078304}{\*\bkmkstart _Toc291078657}{\*\bkmkstart _Toc291687442}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 3.3.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Down Level Systems{\*\bkmkend _Toc287753069}{\*\bkmkend _Toc287900665}{\*\bkmkend _Toc288048228}{\*\bkmkend _Toc288498093}{\*\bkmkend _Toc291078304}{\*\bkmkend _Toc291078657}{\*\bkmkend _Toc291687442}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Down Level Systems are systems that support the old MS-DOS FAT file system.  Examples of such systems include MS-DOS 6.0, Windows 3.1, OS/2 2.11, Windows NT 1.0, etc.  These systems are not aware of the long file name extensions to the FAT file system.  If you were to take a floppy containing files that sport a long file name to the down level system, only the alias (8.3 name) will be visible on the down level system.  You can view the file using the alias name on the down level system.  If you take  the floppy back to the newer Windows release or to the newer Windows NT release, the long file name will be visible.
\par 
\par If you copy the file from the floppy to the hard disk on the down level system, the long file name associated with the file is not copied over.  This is not problematic because the down level system cannot see the long file name anyway.  However if you edit the file on the floppy using the alias, and then save a new copy back on the floppy on the down level system, the long file name associated with the file will be lost (if the editor uses the save, delete, rename cycle mentioned before).  If you take this floppy back to the newer Windows system, only the alias name will be associated with the file.   This is due to the fact that the down level system is not aware of the long file name and hence will not preserve it.
\par 
\par {\*\bkmkstart _Toc287753070}{\*\bkmkstart _Toc287900666}{\*\bkmkstart _Toc288048229}{\*\bkmkstart _Toc288498094}{\*\bkmkstart _Toc291078305}{\*\bkmkstart _Toc291078658}{\*\bkmkstart _Toc291687443}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 3.4.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Disk Utilities & Exclusive Volume Lock{\*\bkmkend _Toc287753070}{\*\bkmkend _Toc287900666}{\*\bkmkend _Toc288048229}{\*\bkmkend _Toc288498094}{\*\bkmkend _Toc291078305}{\*\bkmkend _Toc291078658}{\*\bkmkend _Toc291687443}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Previously reserved fields in the file system directory entry are used for storing Last Access Date and Creation Date/Time.  A file with a long file name, which is longer than 5 characters,  will also cause the system to use previously reserved fields in the directory entry.   In previous versions of MS-DOS and Windows, these reserved entries were zero. Some Disk Utilities, especially disk repair and checking utilities, might display errors about the disk because of the usage of these reserved entries, though there are no real errors on the disk.  In the pathological case, a disk repair utility could destroy all these entries since it mistakenly thinks they are corrupted entries.  The end result of destroying these entries is different between the long file name case and last access date  & creation date/time case.  In the long file name case, the long file name is lost, but the alias (8.3 name) and the data in the file are still present.  It will just be difficult to find the file, without the associated long file name.  In the last access date & creation date/time case, the alias and the data will also be lost, because crucial information about the file (apart from the name) is also lost!  
\par 
\par For this reason, Windows is setup to fail such utilities on default.  This feature is called }{\b\i Exclusive Volume Lock}{.  A newer version of the utility that will understand the newer on-disk file system structures, will take an exclusive volume lock and do the right thing.  Older versions of the utilities, that do not understand the newer disk structures, will not take the exclusive volume lock and will be failed when the utility tries to do direct disk writes.  The user will have to run some sort of wrapper utility that will take the Exclusive Volume lock on behalf of the app and execute the app.  COMMAND.COM will provide a switch, of the form }{\b lock <volume>:}{, that takes the Exclusive Volume lock on behalf of the app, if the file system is in Win 3.1 compatible mode (see below).  This COMMAND.COM switch will }{\i not}{ be functional when the file system is in the default Chicago mode (that is the file system is }{\i not}{ in Win 3.1 compatible mode).  If a user does use a third party wrapper for this purpose when the file system is in Chicago mode it can be risky, because an older version of a utility might }{\i potentially}{ destroy long file names and in the worst case destroy data, while trying to repair what it thinks is a corrupted disk.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par The user can set the file system in }{\b\i Windows 3.1 compatible mode}{, through the system folder in the Control Panel.  This is a setting in which none of the new file system features, such as long file names, last access date and creation date/time will be available.  The user will have to pass through a set of dialog boxes warning the user about the dire consequences of setting the file system in Win 3.1 compatible mode, if it was not previously set.  Once the file system is in Win 3.1 compatible mode, any existing long file names, last access date and creation date/time in the system will be deleted.  This forces the on-disk structures in the file system to match the ones on older versions of DOS and Windows.  When in this mode, older versions of the utilities can be safely run because there is no new information on the file system that the utility will interpret incorrectly.  However the system will still enforce the Exclusive Volume Lock to preserve internal system data consistency.  The user can safely use a COMMAND.COM switch or a third party wrapper, that would take the exclusive volume lock on behalf of the utility,  to run a utility in this case.   
\par 
\par Even in Single MS-DOS application mode, the direct disk writes (specifically INT 26H) will be failed if the file system is in Chicago mode.  These direct disk writes will not be failed in Single MS-DOS app mode, if the file system is in Win 3.1 compatible mode.  The COMMAND.COM switch described above can be used in Single MS-DOS application mode too.
\par 
\par }\pard \qj\fi-720\li720\nowidctlpar\widctlpar\adjustright {\f17\fs24 {\*\bkmkstart _Toc287753071}{\*\bkmkstart _Toc287900667}{\*\bkmkstart _Toc288048230}\'2a}{\tab The decision about the form of the wrapper has not been finalized yet.  It might become a switch elsewhere in the system.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par {\*\bkmkstart _Toc288498095}{\*\bkmkstart _Toc291078306}{\*\bkmkstart _Toc291078659}{\*\bkmkstart _Toc291687444}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 3.5.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\tx1440\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Long File Name Format{\*\bkmkend _Toc287753071}{\*\bkmkend _Toc287900667}{\*\bkmkend _Toc288048230}{\*\bkmkend _Toc288498095}{\*\bkmkend _Toc291078306}{\*\bkmkend _Toc291078659}{\*\bkmkend _Toc291687444}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {As mentioned before, long file names preserve the case of the name.  Hence a user who creates a directory by typing }{\b mkdir examples}{ is actually creating a directory name of }{\b examples}{ and an alias of }{\b EXAMPLES}{.  However searches are case insensitive.
\par 
\par Period (the character }{\b .}{) is just another character in a (long) file name. Leading periods are allowed in a (long) file name, but trailing periods are stripped.  A file can have multiple periods as part of its name.  For example, }{\b MyFile.081293.Document}{ is a valid file name, though its alias will probably be }{\b MYFILE08.DOC}{.  The first three characters after the last period in the file name are used as the extension for the alias, as long as the last period is not a leading period.  A file name of }{\b .login}{ is also valid, though its alias will probably be }{\b LOGIN}{.
\par 
\par {\*\bkmkstart _Toc287753072}{\*\bkmkstart _Toc287900668}{\*\bkmkstart _Toc288048231}{\*\bkmkstart _Toc288498096}{\*\bkmkstart _Toc291078307}{\*\bkmkstart _Toc291078660}{\*\bkmkstart _Toc291687445}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 3.6.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Long File Names in the Root{\*\bkmkend _Toc287753072}{\*\bkmkend _Toc287900668}{\*\bkmkend _Toc288048231}{\*\bkmkend _Toc288498096}{\*\bkmkend _Toc291078307}{\*\bkmkend _Toc291078660}{\*\bkmkend _Toc291687445}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Any file is best stored in a directory below the root in general.  This is especially true for files with long file names.  Files with long file names use up more directory entries than files with just an 8.3 name.  Since the number of entries in the root is limited, the root directory will be "filled up" with fewer files that have long file names.  In the above example, a long directory name of }{\b examples}{ and an alias of }{\b EXAMPLES}{ will be created.  In essence two entries will be used up and this causes the root directory to fill up faster.
\par {\*\bkmkstart _Toc287753073}{\*\bkmkstart _Toc287900669}{\*\bkmkstart _Toc288048232}{\*\bkmkstart _Toc288498097}{\*\bkmkstart _Toc291078308}{\*\bkmkstart _Toc291078661}{\*\bkmkstart _Toc291687446}{\listtext\pard\plain\s1 \b\f1\ul\cgrid \hich\af1\dbch\af0\loch\f1 4.\tab}}\pard\plain \s1\qj\fi-360\li360\sb240\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\f1\ul\cgrid {ISV Issues{\*\bkmkend _Toc287753073}{\*\bkmkend _Toc287900669}{\*\bkmkend _Toc288048232}{\*\bkmkend _Toc288498097}{\*\bkmkend _Toc291078308}{\*\bkmkend _Toc291078661}{\*\bkmkend _Toc291687446}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par {\*\bkmkstart _Toc287753074}{\*\bkmkstart _Toc287900670}{\*\bkmkstart _Toc288048233}{\*\bkmkstart _Toc288498098}{\*\bkmkstart _Toc291078309}{\*\bkmkstart _Toc291078662}{\*\bkmkstart _Toc291687447}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.1.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Limits in the Name{\*\bkmkend _Toc287753074}{\*\bkmkend _Toc287900670}{\*\bkmkend _Toc288048233}{\*\bkmkend _Toc288498098}{\*\bkmkend _Toc291078309}{\*\bkmkend _Toc291078662}{\*\bkmkend _Toc291687447}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The maximum size of the file name component on Long File name FAT file systems is 255 characters (or 256 characters including the NULL).  The maximum path length is 260 characters (including the NULL).  These limits are the same as the ones in Win32.  The API }{\i GetVolumeInformation}{ returns this information.  This API is supported both as a Win32 (32 bit) and an INT 21 (16 bit) API.  This API returns other useful information, such as the name of the file system.  Using the GetVolumeInformation API to determine these limits and allocate buffers, is the preferred way to deal with these limits for a logical volume.  If static buffers need to be allocated then the maximum buffer sizes defined by the Win32 API should be used.  The Win32 API defines 256 characters (including the NULL) as the maximum file name component length and 260 characters (including the NULL) as the maximum path length.  The maximum path length is 260 characters (including the NULL) even if the path is an UNC path name.
\par 
\par {\*\bkmkstart _Toc291687448}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.2.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Auto-generation scheme{\*\bkmkend _Toc291687448}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The (alias) 8.3 name is auto-generated for a file name, if necessary.  No assumption should be made about the auto-generation scheme itself.  This auto-generation scheme could change  between different revisions of the operating system.
\par 
\par {\*\bkmkstart _Toc287753075}{\*\bkmkstart _Toc287900671}{\*\bkmkstart _Toc288048234}{\*\bkmkstart _Toc288498099}{\*\bkmkstart _Toc291078310}{\*\bkmkstart _Toc291078663}{\*\bkmkstart _Toc291687449}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.3.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {32-bit Apps on Windows{\*\bkmkend _Toc287753075}{\*\bkmkend _Toc287900671}{\*\bkmkend _Toc288048234}{\*\bkmkend _Toc288498099}{\*\bkmkend _Toc291078310}{\*\bkmkend _Toc291078663}{\*\bkmkend _Toc291687449}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Using the Win32 API is the preferred way of developing new applications.  The Win32 API allows portability of the application across multiple Windows systems.  Further more any of the idiosyncrasies of the underlying system or new features in the system, such as long file names, are taken care off by the Win32 API.  Lastly Win32 apps run in separate address spaces and are preemptible.
\par 
\par {\*\bkmkstart _Toc287753076}{\*\bkmkstart _Toc287900672}{\*\bkmkstart _Toc288048235}{\*\bkmkstart _Toc288498100}{\*\bkmkstart _Toc291078311}{\*\bkmkstart _Toc291078664}{\*\bkmkstart _Toc291687450}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.4.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {16-bit Apps on Chicago{\*\bkmkend _Toc287753076}{\*\bkmkend _Toc287900672}{\*\bkmkend _Toc288048235}{\*\bkmkend _Toc288498100}{\*\bkmkend _Toc291078311}{\*\bkmkend _Toc291078664}{\*\bkmkend _Toc291687450}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Most of the Win16 APIs that require the application to pass in a file name have been updated to support long file names being passed in.  These include LoadLibrary(), WinExec(), Profile APIs, _lopen() and _lcreate().  However APIs that return file names will return only 8.3 names to older versions of Windows apps for compatibility reasons.  OpenFile is an exception to these general statements about Win16 APIs.  The Win16 OpenFile API will only take an 8.3 format file name as its parameter and will return the fully enumerated path in 8.3 name format.
\par 
\par DOS applications generally use the INT 21 API.  The older INT 21 APIs have not changed.  All long file name INT 21 APIs have been introduced as INT 21, Function 71XX.  Any DOS application that is interested in using long file names will have to be revved to use the newer INT 21s.
\par 
\par The new INT 21H calls will be supported on all file systems, to the extent possible, on Chicago.  Some file systems might not support long file names.  Examples of such file systems include MSCDEX, Flash, real mode network redirectors etc.  In these cases the system will translate the newer INT 21 calls to the older INT 21 calls automatically, as long as the parameters are valid.  For example, in the FileOpen (INT 21, Func 716C) system call, the file name has to be a valid 8.3 name, for file systems that do not support long file names.  The file system will take care of the relevant translation to the older FileOpen (INT 21, Func 6C).  The GetVolumeInformation API gives information on the capabilities of the underlying file system that supports the volume in question.
\par 
\par }{\f17\fs24 \'2a}{ The OpenFile() support might change before ship.
\par 
\par {\*\bkmkstart _Toc287753077}{\*\bkmkstart _Toc287900673}{\*\bkmkstart _Toc288048236}{\*\bkmkstart _Toc288498101}{\*\bkmkstart _Toc291078312}{\*\bkmkstart _Toc291078665}{\*\bkmkstart _Toc291687451}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.5.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {16-bit Apps & Down Level Systems{\*\bkmkend _Toc287753077}{\*\bkmkend _Toc287900673}{\*\bkmkend _Toc288048236}{\*\bkmkend _Toc288498101}{\*\bkmkend _Toc291078312}{\*\bkmkend _Toc291078665}{\*\bkmkend _Toc291687451}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {It might be necessary to develop a 16-bit application that works both on Windows releases that support long file names and on Windows or MS-DOS releases that do not support long file names.  The main code fragment of interest to deal with can be characterized as:
\par 
\par \tab STC\tab \tab \tab \tab \tab ; Set Carry for error flag
\par \tab <new INT 21H call, Func 71H>\tab \tab ; Perform the newer INT 21H equivalent
\par \tab JNC\tab SUCCESS\tab \tab \tab ; Call succeeded, continue processing
\par \tab CMP \tab AX, 7100H\tab \tab \tab ; See if the call is really not 
\par \tab \tab \tab \tab \tab \tab ; supported.  When the call is not
\par \tab \tab \tab \tab \tab \tab ; supported then:  AL is set to 0; 
\par \tab \tab \tab \tab \tab \tab ; AH & Carry are preserved. This is 
\par \tab \tab \tab \tab \tab \tab ; true even in down level MS-DOS versions.
\par \tab JNE\tab Call_Failed\tab \tab \tab ; The call is supported, but something 
\par \tab \tab \tab \tab \tab \tab ; about this call failed
\par \tab <old INT 21H call>\tab \tab \tab ; Perform the older INT 21 call
\par 
\par Invariably the newer INT 21H calls will succeed on newer releases of Windows.  
\par 
\par An alternative would be to use the GetVolumeInformation API as the trigger to figure out which version of the INT 21H call to use.  If the API succeeds, then use the newer INT 21H long file name calls (that are all sub-functions of Func 71H).  Otherwise use the older INT 21H calls.  As mentioned above, the GetVolumeInformation API will succeed on newer Windows releases even on file systems that do not support long file names or if the file system is in Windows 3.1 compatibility mode.  Please be sure to pass in a name that is valid for the logical volume you are operating on.  Even when calling the GetVolumeInformation API, please remember to use a code fragment such as the one above. There is no equivalent "old INT 21H call" for the GetVolumeInformation API.  It is important for you to Set the Carry flag on the newer calls, so that you can check the error return correctly on down level MS-DOS systems. The GetVolumeInformation API does not access the disk.
\par 
\par Note that Chicago\rquote s Single MS-DOS Application mode behaves like a down level MS-DOS system for the case of the newer INT 21, 71xx APIs.  In this case, the Single MS-DOS application mode returns AX=7100H, without affecting the carry flag passed into the API.  So the above code fragment needs to be used for apps that need to run in Chicago\rquote s Single MS-DOS application mode too.
\par 
\par {\*\bkmkstart _Toc287753078}{\*\bkmkstart _Toc287900674}{\*\bkmkstart _Toc288048237}{\*\bkmkstart _Toc288498102}{\*\bkmkstart _Toc291078313}{\*\bkmkstart _Toc291078666}{\*\bkmkstart _Toc291687452}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.6.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Character sets: APIs & on-disk names{\*\bkmkend _Toc287753078}{\*\bkmkend _Toc287900674}{\*\bkmkend _Toc288048237}{\*\bkmkend _Toc288498102}{\*\bkmkend _Toc291078313}{\*\bkmkend _Toc291078666}{\*\bkmkend _Toc291687452}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par {\*\bkmkstart _Toc287753079}{\*\bkmkstart _Toc287900675}{\*\bkmkstart _Toc288048238}{\*\bkmkstart _Toc288498103}{\*\bkmkstart _Toc291078314}{\*\bkmkstart _Toc291078667}{\*\bkmkstart _Toc291687453}{\listtext\pard\plain\s3 \i\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.6.1.\tab}}\pard\plain \s3\qj\fi-360\li360\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\adjustright \i\f1\cgrid {16 bit file APIs{\*\bkmkend _Toc287753079}{\*\bkmkend _Toc287900675}{\*\bkmkend _Toc288048238}{\*\bkmkend _Toc288498103}{\*\bkmkend _Toc291078314}{\*\bkmkend _Toc291078667}{\*\bkmkend _Toc291687453}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {All 16 bit }{\i file}{ APIs, namely new and old INT 21 file APIs and Win 16 file APIs, will still present the OEM character set to 16 bit apps.  Since this has not changed, the 16 bit apps will continue to deal with file APIs in the same manner from a character set point of view.  
\par 
\par {\*\bkmkstart _Toc287753080}{\*\bkmkstart _Toc287900676}{\*\bkmkstart _Toc288048239}{\*\bkmkstart _Toc288498104}{\*\bkmkstart _Toc291078315}{\*\bkmkstart _Toc291078668}{\*\bkmkstart _Toc291687454}{\listtext\pard\plain\s3 \i\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.6.2.\tab}}\pard\plain \s3\qj\fi-360\li360\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\adjustright \i\f1\cgrid {32 bit file APIs{\*\bkmkend _Toc287753080}{\*\bkmkend _Toc287900676}{\*\bkmkend _Toc288048239}{\*\bkmkend _Toc288498104}{\*\bkmkend _Toc291078315}{\*\bkmkend _Toc291078668}{\*\bkmkend _Toc291687454}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The Win32 API supports both the ANSI and Unicode form of the API.  In Windows NT, both of these API forms are supported.  In Chicago, only the ANSI form of  the Win32 API is supported.  Hence Win32 apps using the file system APIs need to pass characters in the ANSI code page under Chicago.  The Win32 }{\i SetFileApisToOEM}{ API will }{\i not}{ be supported in Chicago.
\par 
\par {\*\bkmkstart _Toc287753081}{\*\bkmkstart _Toc287900677}{\*\bkmkstart _Toc288048240}{\*\bkmkstart _Toc288498105}{\*\bkmkstart _Toc291078316}{\*\bkmkstart _Toc291078669}{\*\bkmkstart _Toc291687455}{\listtext\pard\plain\s3 \i\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.6.3.\tab}}\pard\plain \s3\qj\fi-360\li360\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\adjustright \i\f1\cgrid {On-Disk names{\*\bkmkend _Toc287753081}{\*\bkmkend _Toc287900677}{\*\bkmkend _Toc288048240}{\*\bkmkend _Toc288498105}{\*\bkmkend _Toc291078316}{\*\bkmkend _Toc291078669}{\*\bkmkend _Toc291687455}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Any application using the regular file system APIs, need not worry about the character set of the names on the disk.  The APIs do the right translation on behalf of the application.  However disk utilities that directly read the disk will have to contend with the character set on the disk.  The alias (8.3 names) are stored using characters from the OEM code page for compatibility reasons.  The (long) file names are stored in Unicode on the disk.
\par 
\par {\*\bkmkstart _Toc287753082}{\*\bkmkstart _Toc287900678}{\*\bkmkstart _Toc288048241}{\*\bkmkstart _Toc288498106}{\*\bkmkstart _Toc291078317}{\*\bkmkstart _Toc291078670}{\*\bkmkstart _Toc291687456}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.7.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {CreateProcess, WinExec & $exec functions and LFNs{\*\bkmkend _Toc287753082}{\*\bkmkend _Toc287900678}{\*\bkmkend _Toc288048241}{\*\bkmkend _Toc288498106}{\*\bkmkend _Toc291078317}{\*\bkmkend _Toc291078670}{\*\bkmkend _Toc291687456}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The Win32 CreateProcess & WinExec and the Win16 WinExec functions will all support long file name arguments. A DOS app using the $exec function (INT 21H, 4BH) will be restricted to the execution of 8.3 names for compatibility.  Any newer DOS app using the 16-bit $exec function (INT 21H, 4BH) and dealing with long file name executables, should translate the executable names to the equivalent 8.3 names using the Canonical API.  COMMAND.COM and the Shell VxD would support long file name execution by doing the necessary translations on behalf of the user.  
\par 
\par {\*\bkmkstart _Toc287753083}{\*\bkmkstart _Toc287900679}{\*\bkmkstart _Toc288048242}{\*\bkmkstart _Toc288498107}{\*\bkmkstart _Toc291078318}{\*\bkmkstart _Toc291078671}{\*\bkmkstart _Toc291687457}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.8.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Canonical API{\*\bkmkend _Toc287753083}{\*\bkmkend _Toc287900679}{\*\bkmkend _Toc288048242}{\*\bkmkend _Toc288498107}{\*\bkmkend _Toc291078318}{\*\bkmkend _Toc291078671}{\*\bkmkend _Toc291687457}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The Win32 GetFullPathName can be used to get a fully enumerated path name, where traversals such as "." and ".." are expanded.  A parallel 16-bit GetFullPathName function (INT 21H, 7160H, CX=0) will provide a similar facility for 16 bit apps.  In addition this 16 bit API will also expand SUBST-ed drives.  Another subfunction of this 16-bit API (INT 21H, 7160H, CX=1) will provide support for a GetShortPathName (16 bit only) API, which will allow an application to get a pure 8.3 name.  Setup applications need to use this API if they have to load files from CONFIG.SYS or AUTOEXEC.BAT.  Note that long file names are not present at boot up time and in Single MS-DOS application mode.
\par  
\par {\*\bkmkstart _Toc287753084}{\*\bkmkstart _Toc287900680}{\*\bkmkstart _Toc288048243}{\*\bkmkstart _Toc288498108}{\*\bkmkstart _Toc291078319}{\*\bkmkstart _Toc291078672}{\*\bkmkstart _Toc291687458}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.9.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Exclusive Volume API (specific to Chicago){\*\bkmkend _Toc287753084}{\*\bkmkend _Toc287900680}{\*\bkmkend _Toc288048243}{\*\bkmkend _Toc288498108}{\*\bkmkend _Toc291078319}{\*\bkmkend _Toc291078672}{\*\bkmkend _Toc291687458}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {New 16-bit volume locking IOCTLs (MS-DOS IOCTL: INT 21, Func 440D, Major Code 08, Minor Code 4A, 4B, 6A, 6B etc.) will be supported in the next release of Windows.  Any utility that needs exclusive volume access to perform direct disk writes (INT 26H or INT 13H), should use these 16 bit Exclusive Volume IOCTLs, before performing direct disk writes.  Please refer to the Exclusive Volume API specification for more information on the locking levels that are relevant to this API.  This API will be documented in the SDK.
\par 
\par A Win32 app can use the DeviceIoControl function to communicate with the VWIN32 VxD and perform drive letter based (INT 21, 44OD) IOCTLs.  The same mechanism can also be used to perform direct disk reads and writes (INT 25, INT 26 & INT 13) from a Win32 app.  These DeviceIoControls will }{\i not}{ be supported on Windows NT at this time.  Please refer to the documentation on DeviceIoControl in the SDK for more information.
\par 
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\f17\fs24 \'2a}{ }{\f17\fs24 \tab }{The above mentioned Win32 DeviceIoControls will }{\i not}{ be supported on Windows NT.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par {\*\bkmkstart _Toc287753085}{\*\bkmkstart _Toc287900681}{\*\bkmkstart _Toc288048244}{\*\bkmkstart _Toc288498109}{\*\bkmkstart _Toc291078320}{\*\bkmkstart _Toc291078673}{\*\bkmkstart _Toc291687459}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.10.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Keying off file names{\*\bkmkend _Toc287753085}{\*\bkmkend _Toc287900681}{\*\bkmkend _Toc288048244}{\*\bkmkend _Toc288498109}{\*\bkmkend _Toc291078320}{\*\bkmkend _Toc291078673}{\*\bkmkend _Toc291687459}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {When an application keys off file names, it should be aware of the following:
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{\tab Using the alias (8.3 name) instead of the file name could break the association with the file because operations such as editing the file could potentially change the alias.  For example, consider the server side of the network which uses the file name to store information related to the file (like access permissions).  If the server side uses the alias (8.3 name) as opposed to the long name of the client file to store such information, it will be more susceptible to lose the association of permissions with the file.  If the user edits the file on the client side, the alias (8.3 name) could potentially change, and when it changes the server side will lose the associated information. 
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{\tab When an app caches the absolute path to the file name, the path itself could be a mixture of file names and aliases.  If there are }{\i n}{ such name components in the path, then there are possibly }{\i 2**n}{ such combinations.  Hence apps should store a canonical form of the absolute path, if the path needs to be stored at all.  The API provided to canonicalize the path should be used for this purpose.  The same is true for apps that use full path names to see if two files are the same.  Alternatively such apps can use the \ldblquote index\rdblquote  field in GetFileInfoByHandle to verify whether it is the same file.  The \ldblquote index\rdblquote  field of the GetFileInfoByHandle API might not be supported on real mode file systems, such as MSCDEX or real mode networks.
\par }{\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{\tab A setup program that needs to enter information into configuration files, such as CONFIG.SYS, should make sure it uses paths qualified with aliases (8.3 name components), since the long file names will not be visible at boot up time when files such as CONFIG.SYS and AUTOEXEC.BAT are processed.  The GetShortPathName API should be used for this purpose.
\par 
\par {\*\bkmkstart _Toc287753086}{\*\bkmkstart _Toc287900682}{\*\bkmkstart _Toc288048245}{\*\bkmkstart _Toc288498110}{\*\bkmkstart _Toc291078321}{\*\bkmkstart _Toc291078674}{\*\bkmkstart _Toc291687460}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.11.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Checking Directory Entries{\*\bkmkend _Toc287753086}{\*\bkmkend _Toc287900682}{\*\bkmkend _Toc288048245}{\*\bkmkend _Toc288498110}{\*\bkmkend _Toc291078321}{\*\bkmkend _Toc291078674}{\*\bkmkend _Toc291687460}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {A disk utility that is checking for directory entry coherence, should }{\i only}{ check the }{\i valid}{ entries.  Specifically reserved locations should either be }{\i not}{ checked against zero values or such checks should be combined with MS-DOS version checks.  Otherwise the utility will malfunction when the entries are extended by using the reserved locations.
\par 
\par Values in bit fields should be checked by masking the bits of interest and then comparing it against a desired value.  Direct comparisons against a value, without masking the bits of interest, will cause the utility to break if reserved bits in the field are used in future revs of the operating system.
\par 
\par {\*\bkmkstart _Toc287753087}{\*\bkmkstart _Toc287900683}{\*\bkmkstart _Toc288048246}{\*\bkmkstart _Toc288498111}{\*\bkmkstart _Toc291078322}{\*\bkmkstart _Toc291078675}{\*\bkmkstart _Toc291687461}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.12.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Win32 & New INT 21 FindFirst/Next and FindClose{\*\bkmkend _Toc287753087}{\*\bkmkend _Toc287900683}{\*\bkmkend _Toc288048246}{\*\bkmkend _Toc288498111}{\*\bkmkend _Toc291078322}{\*\bkmkend _Toc291078675}{\*\bkmkend _Toc291687461}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The Win32 and new INT 21 FindFirst return a handle.  The user is expected to use this handle in subsequent FindNext calls.  It is necessary that an app return this handle to the system by calling }{\i FindClose}{, when the app no longer needs the handle.  This is different from the 16-bit old INT 21 FindFirst and FindNext calls.  The older 16 bit INT 21 equivalents of these APIs did not require such a close operation.
\par 
\par The new FindFirst/Next calls return time in Coordinated Universal Time (UTC or FileTime) defined by Windows NT.  Please see the Time APIs section in this document and other relevant API specification documents for more information.
\par 
\par File systems, such as HPFS, may support only one name space.  If there is only one name associated with the file, it is returned as the (primary) FileName in the FindFirst/Next structure irrespective of whether the only visible name is a long file name or an 8.3 name.  In this case, the AlternateFileName is NULL.  Applications should be coded to handle this case.  The same is true for a file that has a name in 8.3 format.
\par 
\par As noted above, multiple periods and leading periods are allowed in a (long) file name.  Consider some parsing code running on Chicago that ends up using the updated FindFirst and FindNext calls.  If this parsing code ignores all files that start with a }{\b .}{ character, with the intent of filtering out }{\b .}{ and }{\b ..}{ directories, it will end up ignoring file names such as }{\b .login}{.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par {\*\bkmkstart _Toc287753088}{\*\bkmkstart _Toc287900684}{\*\bkmkstart _Toc288048247}{\*\bkmkstart _Toc288498112}{\*\bkmkstart _Toc291078323}{\*\bkmkstart _Toc291078676}{\*\bkmkstart _Toc291687462}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.13.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Time APIs{\*\bkmkend _Toc287753088}{\*\bkmkend _Toc287900684}{\*\bkmkend _Toc288048247}{\*\bkmkend _Toc288498112}{\*\bkmkend _Toc291078323}{\*\bkmkend _Toc291078676}{\*\bkmkend _Toc291687462}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {Coordinated Universal Time (UTC or FileTime) is supported across the network.  The FAT file system stamps local time in the directory entry for compatibility reasons.  At this point a bias is }{\i not}{ stamped to allow translation of this time across different time zones. The new Win32 FindFirst/Next APIs return time in UTC (or FileTime) format.  The equivalent 16 bit (INT 21, 714E and 714F) FindFirst/Next APIs return time either in DOS date/time format or in UTC (or FileTime) format, depending on a parameter passed in by the app, as part of the API.
\par 
\par FileTimeToDosDateTime and DosDateTimeToFileTime will be supported both as Win32 and 16-bit APIs.  Please use the relevant functions if you need to convert the FileTime returned by the new FindFirst/Next functions to MS-DOS date/time format.  The rest of the Time APIs will be supported only as Win32 APIs.
\par 
\par The FAT file system now sports Creation date/time and Last Access date, in addition to the existing Last Modified date/time.  The new Creation time for a file is a more precise time than the existing Last Modified time in the FAT file system. The Creation time includes the "number of ten milliseconds in the 2 second interval\rdblquote .  Hence the accuracy of the Creation time is ten milliseconds.  The new Last Access date/time is actually only a date.  There is no Last Access time.  Hence the proper assumption is that the Last Access time is always 0 (and that is what is returned in the Win32 APIs).
\par 
\par {\*\bkmkstart _Toc287753089}{\*\bkmkstart _Toc287900685}{\*\bkmkstart _Toc288048248}{\*\bkmkstart _Toc288498113}{\*\bkmkstart _Toc291078324}{\*\bkmkstart _Toc291078677}{\*\bkmkstart _Toc291687463}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.14.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {TSR and Apps that monitor INT 21 calls (INT 21 hookers{\*\bkmkend _Toc287753089}{\*\bkmkend _Toc287900685}){\*\bkmkend _Toc288048248}{\*\bkmkend _Toc288498113}{\*\bkmkend _Toc291078324}{\*\bkmkend _Toc291078677}{\*\bkmkend _Toc291687463}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {On default all INT 21 interrupts, except file API INT 21s, are passed down to any hooker present in the system.  The file API INT 21s are just passed to VM (local) hookers, but not to global (AUTOEXEC.BAT) type hookers.  This is done because there are new file APIs (new INT 21s) that support long file names for delete, rename and so on that an older hooker won't understand anyway.   Further more not all file API calls are INT 21 calls.  Specifically server calls and swapper calls to the file system are not INT 21 calls.  
\par 
\par If the user forces the file system into }{\i Win 3.1 compatible mode}{, then none of the new features in the file system are turned on.  In the Win 3.1 compatible mode the file system will }{\i not}{ support long file names, last access date and creation date/time.  In this case all the INT 21s, including the file API INT 21s, are passed to any hooker (whether they are global or local).   Before a }{\i relevant}{ file API INT 21 is passed to a global or local hooker, the newer file API INT 21 is mapped to the equivalent older file API INT 21.  For name based new file API INT 21s, the name has to be 8.3 format conformant. If the name is not 8.3 format conformant the newer name or path based file API INT 21 call is failed.  
\par 
\par Good citizens of Chicago will use the FileHook API to monitor file activity.  This entails writing a Ring 0 VxD.  Doing this will avoid unnecessary Ring 3 transitions which is a performance win and will allow the software to see all file I/O.  Please refer to the IFS Manager specification for information on the FileHook API.
\par 
\par As with Windows 3.1, software interrupts are first passed through the Ring 0 protect mode components (VxDs), then through the Ring 3 protect mode components and lastly through any relevant Virtual 8086 components (TSRs and the like).  If any of the earlier components consume the interrupt then the subsequent components do not see the interrupt.  This is very similar to the behavior seen by existing software interrupt hookers.
\par 
\par Any VxD that uses the FileHook API should use the FSD_Init_Order field defined in VMM.H.  This will ensure that this VxD loads in the right order.
\par 
\par {\*\bkmkstart _Toc287753090}{\*\bkmkstart _Toc287900686}{\*\bkmkstart _Toc288048249}{\*\bkmkstart _Toc288498114}{\*\bkmkstart _Toc291078325}{\*\bkmkstart _Toc291078678}{\*\bkmkstart _Toc291687464}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.15.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {File System "Compatibility" switch{\*\bkmkend _Toc287753090}{\*\bkmkend _Toc287900686}{\*\bkmkend _Toc288048249}{\*\bkmkend _Toc288498114}{\*\bkmkend _Toc291078325}{\*\bkmkend _Toc291078678}{\*\bkmkend _Toc291687464}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {On default the file system in Chicago sports a whole set of new features in the file system.  The relevant ones here are long file names, last access date and creation date/time.  The user can force the file system into }{\i Win 3.1 compatible mode}{ through a check box in the System Folder of the Control Panel.  When the user sets the file system in this mode, the disk is purged of all long file names, last access date and creation date/time, thus ensuring that the disk structure is compatible with Win 3.1.  Long file names, last access date and creation date/time are not supported while the file system is in Win 3.1 compatible mode.  Further all INT 21s are passed down to any hookers, thus ensuring that the system in this compatible mode will support existing TSRs.  When the file system is in Win 3.1 compatible mode the registry is stamped with the following setting:
\par 
\par Key: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem
\par Win31FileSystem=1
\par 
\par On default Win31FileSystem=0.
\par 
\par Note that direct disk writes are still failed in Chicago, even if the file system is in Win 3.1 compatible mode.  This is needed to protect cached data in the file system.   A COMMAND.COM switch needs to be set to run older versions of utilities that perform direct disk writes.  These direct disk writes are }{\i not}{ failed in Single MS-DOS application mode, if the file system is in Win 3.1 compatible mode.
\par 
\par Lastly the Shell uses the Creation Date/time for link tracking purposes.  When the file system is in Win 3.1 compatibility mode, the shell link tracking won\rquote t function optimally.
\par 
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\f17\fs24 \'2a}{ }{\f17\fs24 \tab }{The Win31FileSystem key might become a volume based bitmap before ship.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par {\*\bkmkstart _Toc287753091}{\*\bkmkstart _Toc287900687}{\*\bkmkstart _Toc288048250}{\*\bkmkstart _Toc288498115}{\*\bkmkstart _Toc291078326}{\*\bkmkstart _Toc291078679}{\*\bkmkstart _Toc291687465}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.16.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {"for" command in COMMAND.COM{\*\bkmkend _Toc287753091}{\*\bkmkend _Toc287900687}{\*\bkmkend _Toc288048250}{\*\bkmkend _Toc288498115}{\*\bkmkend _Toc291078326}{\*\bkmkend _Toc291078679}{\*\bkmkend _Toc291687465}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The }{\b for}{ command in COMMAND.COM is modal.  The default will be }{\b LFNFOR=OFF}{. This will cause the }{\b for}{ command to use the old INT 21s.  This implies that only aliases (8.3 names) can be used in the }{\b for}{ command.  If }{\b LFNFOR=ON}{ is set, then the }{\b for}{ command uses the new INT 21s, and (long) file names can be used as part of the }{\b for}{ command.  The default was chosen for compatibility with existing batch files.
\par 
\par {\*\bkmkstart _Toc291078327}{\*\bkmkstart _Toc291078680}{\*\bkmkstart _Toc291687466}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.17.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Down level system idiosyncrasies{\*\bkmkend _Toc291078327}{\*\bkmkend _Toc291078680}{\*\bkmkend _Toc291687466}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {The source of a copy can be from a file system that supports long file names, while the target of the copy can be to a file system that supports only the old 8.3 name.  An application that supports a \ldblquote copy\rdblquote  type feature has to make a conscious choice about the semantics of the copy command in this case.  For example consider a copy of the form:
\par 
\par }{\b \tab copy c:ThisIsALongFileName d:
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {\b 
\par }{One possibility is to emulate COMMAND.COM copy semantics.  In this case, COMMAND.COM uses the alias (8.3) name of the source as the primary name for the target.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par Single MS-DOS application mode behaves like a down level MS-DOS system for all APIs, except for direct disk writes (INT 26H).  Direct disk writes are failed in Single MS-DOS application mode unless the application takes an exclusive volume lock (see above).
\par 
\par {\*\bkmkstart _Toc291078328}{\*\bkmkstart _Toc291078681}{\*\bkmkstart _Toc291687467}{\listtext\pard\plain\s2 \b\f1\cgrid \hich\af1\dbch\af0\loch\f1 4.18.\tab}}\pard\plain \s2\qj\fi-360\li360\sb120\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\f1\cgrid {Long command lines{\*\bkmkend _Toc291078328}{\*\bkmkend _Toc291078681}{\*\bkmkend _Toc291687467}
\par }\pard\plain \qj\nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {COMMAND.COM now sports a 1024 character limit for environment variables and batch file lines.    This is the default in Chicago, which can be overridden by the user.  However the keyboard buffer is still limited to 128 characters on default.  This can also be overridden by the user.
\par 
\par Command lines passed to Windows applications (both Win32 and Win16 applications) had no inherent limit.  If these applications are invoked from the MS-DOS box, which is also the Win32 console, through batch files or through environment variables that expand to command lines longer than 128 characters, the applications will still see and be able to work with these long command lines without revving.
\par 
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {However MS-DOS applications will have to rev to see the longer command lines.  MS-DOS applications invariably pick up the command line from the PSP.  The command tail in the PSP is limited to 128 characters, including the leading length field and the trailing Carriage Return.  If a command tail passed to a DOS program is less than 126 actual characters, the command tail is still set in the PSP as before.  This is done for the sake of compatibility.  If a command tail passed to a DOS program is greater than 126 actual characters, then the entire command line is actually set in the environment variable }{\b CMDLINE}{.  The PSP itself will just contain a Carriage Return, which is a null command tail.   Note that language vendors that provide compiler run time routines have to update their MS-DOS tools to pick up the command line from the correct location.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par }\pard \qj\fi-360\li360\nowidctlpar\widctlpar\adjustright {\f17\fs24 \'2a}{ }{\f17\fs24 \tab }{With the current scheme, users of INT 21, 4B ($exec call) will have to set the CMDLINE environment variable appropriately.  This will mostly be DOS apps.  Win16 and Win32 apps will be taken care of by the appropriate APIs.  This onus on INT 21, 4B will almost definitely change before ship time.  Either an API will be provided to get a command line or the INT 21, 4B call will be enhanced and/or an INT 21, 714B call will be added that will handle long command lines.  So any users of INT 21, 4B should watch for the final solution and use that.
\par }\pard \qj\nowidctlpar\widctlpar\adjustright {
\par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fltsamples\filespy\params.txt ===
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\FileSpy [17 1]
    MaxRecords = REG_DWORD 0x00003E8
    MaxNames = REG_DWORD 0x000003E8
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fltsamples\filespy\placefil.txt ===
filespy.sys             reskit\bin
filespy.exe             reskit\bin
filespy.inf             reskit\bin
filespyInstall.cmd      reskit\bin
filespyUninstall.cmd    reskit\bin
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fltsamples\filespy\docs\usrguide.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation FileSpy Documentation TitleFileSpy Documentation Molly Brown Normal.dot Molly Brown Microsoft Word 10.01X<>YFileSpy Project User Guide Last updated:   TIME \@ "MMMM d, yyyy"  April 6, 2001 Overview FileSpy is a tool that aids Installable File System (IFS) filter driver writers in understanding the I/O that is occurring in the system.  It allows the user to monitor both local and network drives to see what types of IRP and Fast I/O operation are executing in the system. FileSpy was also developed as a useful example of how to write an IFS filter driver.  This driver sits in the I/O stack and records the relevant information for the I/O operations that are happening, such as the starting time, the completion time, return status, etc.  The filter driver was developed using the sfilter example code as a base, so you should see some similarity in their structure.  The main differences between these two example filters are: The sfilter example consists of only a kernel mode driver.  FileSpy has both user mode and kernel mode components.  The kernel mode driver watches and records the meaningful I/O activity and then passes up to the user mode application when data is requests.  The user mode application then displays this data to the user through the screen or by writing the log data to a file. Sfilter connects to all devices in the system as soon as the device is created and stay connected for as long as the system is running.  FileSpy connects to a device only when directed to by the user application or through a parameter in the registry.  It disconnects from the device when told to do so by the I/O Manager.  Do to the design of the I/O architecture, the user cannot directly tell the FileSpy driver to detach from the device.  When the kernel driver receives the command to disconnect, it just stops logging information for that device.  FileSpy can only truly detach from a device when commanded to do so by the I/O Manager. Sfilter doesn t actually do anything   it just shows a driver writer how to hook into all the possible places to watch IRP and Fast I/O communication.  FileSpy logs the I/O communication traffic in the system while trying to minimize its affect on the performance of the system.  The user application works with the kernel mode driver to display the I/O traffic to the user. Code Structure Overview The FileSpy project can be broken down into four components: Kernel-mode filter driver, FileSpy.sys User-mode application, FileSpy.exe Install method, FileSpy.inf Kernel-mode Filter Driver The kernel-mode filter driver is responsible for monitoring all the activity in the I/O subsystem and recording information on the activity along the IRP and Fast I/O paths for specified devices.  The filter driver maintains a list of log records for each of the I/O operations it sees and then, at the request of the user application, passes the log data up to the user application. The filter driver consists of the following files: FileSpy.h Contains all the structures, types and constant definitions that are shared between the kernel mode driver, FileSpy.sys, and the user mode executable, FileSpy.exe. FspyKern.h Contains all the structures, types, constants, global variables, and function prototypes that are only visible within the kernel mode driver. FileSpy.c Contains the implementation for the driver entry point and all the callback routines this driver registers so that it is notified of I/O activity while the system is running. FSpyLib.c Contains the implementation for the FileSpy helper routines.  The routines provide the functionality of: Attaching to a device Detaching from a device Listing all the devices we are currently monitoring Manage the cache of filenames we keep while the system is monitoring I/O activity. Create, pass up and delete log records containing relevant information on the I/O activity seen. makefile, sources Files used to tell the build tool how to create FileSpy.sys. params.txt Input file for regini.exe to set the registry settings appropriately for communicating application parameters to the kernel mode driver. User-mode Application The user-mode application is responsible for controlling the kernel-mode filter driver and translating the log records that are returned by the driver to the user in a human-readable way (either to the screen or to a file).  The user application uses a simple command shell to allow the user to communicate he/her directions to the driver. The user application consists of the following files: fSpyLog.h Contains the structures, prototypes and constant definitions that are visible only to the user application. fSpyLog.c Contains the implementation for retrieving the log records from the kernel driver and displaying the log records to the user either through the screen or through a file. FSpyUser.c Contains the implementation for the main function of the user application that opens the FileSpy device, starts up the thread that continually queries the kernel mode driver for new log records, and interprets the user s commands to the application. makefile, sources Files used to tell the build tool how to create FileSpy.exe. Running the user-mode application To run the user application: Build the user application s executable, FileSpy.exe. The application has to modes, running mode and command mode.  In running mode, the application prints any log output that it has collected to the screen if it is supposed to be outputting information to the screen.  In command mode, the user is able to direct the behavior of the kernel driver through a series of command switches defined below.  When the application begins, it is in running mode.  To change to command mode when currently in running mode, hit Enter.  A > prompt should appear to signify the application is in command mode. The following commands are available at the command line or in command mode. /a <drive> Attaches monitor to <drive>, where <drive> is a valid drive letter in the system (e.g., C:). /d <drive> Detaches monitor to <drive>, where <drive> is a valid drive letter in the system (e.g., C:) that the monitor has previously attached to. Note:  The monitor may not truly detach from the device when it receives the /d command because a filter driver can only detach from a device when it can guarantee that it is on the top of the I/O stack.  This is only going to occur when the filter driver receives the detach command from the I/O Manager.  When the user application tells the kernel driver to detach from a device, the kernel monitor stops logging the data for that device. Also note:  Shutting down the user application does not cause the kernel monitor to detach from all the drives.  The kernel driver will stop logging the I/O operations that it is seeing, but if the user restarts the user application, the kernel monitor will continue logging to the devices that it was attached to when the user application last stopped.  The kernel driver will only reset these attachments to system devices when the system is rebooted. Lists statistics on hash table used to store file names. Lists all the drives that the kernel driver is monitoring. Toggles on and off showing the logging output to the screen.  When the application is started, the default behavior is to show logging output to the screen. /f [<filename>] Toggles on and off writing the logging output to a file.  If issuing the /f command will toggle on writing output to a file, the required <filename> specifies the output file name.  If the /f command will toggle off the writing output to a file, the <filename> is ignored and not required.  By default, the logging output is not stored to a file. Exits the user from command mode and will allow the user application to show logging output on the screen again if the program is set to do so. Shuts down the user application. Logging Output Format The logging information that is output either to the screen and/or to a file (as specified by the user commands) is the same.  (Note:  We do log different information for I/O operations along the Irp path versus I/O operations along the Fast I/O path.)  The only difference is that the fields are tab-delimited when writing to file to make the data easier to analyze.  The data written to the screen has been compacted to make it easier to read (although you still want your Command Window to be extra wide). If the memory limit is hit when logging I/O operations, a message saying that the system is out of memory will appear in the log.  The user can see how many I/O operations were not logged by looking at the sequence numbers of the log records once the memory pressure has been relieved. The exact format of the data output in each case is described below: Output Format for Irp Operations These fields appear from left to right, across the screen. Designates that this is an I/O operation along the Irp path. Sequence Number The sequence number for this operation. Originating Time The time this I/O operation began. Completion Time The time this I/O operation ended. Processes Id and Thread Id The process and thread id for the thread that originated this I/O operation.  These values are in processId.threaded format. Irp Major Code and Irp Minor Code Names The name of the Irp major code for this operation.  The name of the Irp minor code for this operation, if there is one (the screen display has this on a separate line). DeviceObject The pointer value representing the Device Object for this operation. FileObject The pointer value representing the File Object for this operation. Return Status and Information The numeric values for both the return status and return Information fields (look in ntstatus.h to see the description for the return value).  These values are in the status:information format. Irp Flags The numeric value for the Irp flags Interpretation of Common Irp flags Four columns with either a letter or a   to designate different Irp flags being set;  NoCache flag was set  Paging IO flag was set  Synchronous Api flag was set  Synchronous Paging IO flag was set If available, the name of the file. Output Format for Fast I/O Operations These fields appear from left to right, across the screen. Designates that this is an I/O operation along the FastIO path. Sequence Number The sequence number for this operation. Originating Time The time this I/O operation began. Completion Time The time this I/O operation ended. Processes Id and Thread Id The process and thread id for the thread that originated this I/O operation.  These values are shown in the format processId.threadId. Fast I/O Operation Name The name type of Fast I/O operation. DeviceObject If available, the pointer value representing the Device Object for this operation. FileObject If available, the pointer value representing the File Object for this operation. Return Status The numeric value for the return status for this operation (look in ntstatus.h to see the description for the return value). If available,   if this Fast I/O operation was called with the Wait parameter set to TRUE, and   if the wait parameter was set to FALSE. Length If available, the number of bytes in the operation. File Offset If available, the offset into the file for this operation. If available, the name of the file. Output Format for FsFilter Operations These fields appear from left to right, across the screen. Designates that this is an operation along the FsFilter Operation path. Sequence Number The sequence number for this operation. Originating Time The time this I/O operation began. Completion Time The time this I/O operation ended. Processes Id and Thread Id The process and thread id for the thread that originated this I/O operation.  These values are shown in the format processId.threadId. FsFilter Operation Name The name type of FsFilter operation. DeviceObject If available, the pointer value representing the Device Object for this operation. FileObject If available, the pointer value representing the File Object for this operation. Return Status The numeric value for the return status for this operation (look in ntstatus.h to see the description for the return value). If available, the name of the file. Filter Driver Install Program FileSpy now comes with an INF that will install the filter driver and the user mode control program.  To install, do the following: Make sure that filespy.exe, filespy.sys and filespy.inf are all in the same directory. Right-click on the filespy.inf through Explorer. Select the Install option. This will make the necessary registry updates to register the FileSpy service, place filespy.sys in the %SystemRoot%\system32\drivers directory, place filespy.exe in %SystemRoot%\filespy directory and add the following registry entries: [HKEY_LOCAL_MACHINE]\System\CurrentControlSet\Services\FileSpy MaxRecords DWORD The maximum number of log records to have outstanding at any one time.  Default=500. MaxNames DWORD The maximum number of name buffers to have outstanding at any one time.  Default=500. AttachMode DWORD Specify how you want FileSpy to attach to volumes. Attach on demand. Attach to ALL volumes when the filter loads.  This does not mean that volumes are being logged, that happens when a user explicitly requests it.  This is used to control attachment order with other filters. Default=2 Filter Driver Uninstall To uninstall the kernel-mode driver for FileSpy, you need to run  sc delete filespy .  This will remove the service from the system.  After running this program, you will need to reboot the machine to complete the removal of FileSpy.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fltsamples\iotest\placefil.txt ===
iotest.sys     filter
iotest.exe     filter
iotest.inf     filter
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\fltsamples\filespy\usergui\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : FileSpy
========================================================================


AppWizard has created this FileSpy application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your FileSpy application.

FileSpy.dsp
    This file (the project file) contains information at the project level and
    is used to build a single project or subproject. Other users can share the
    project (.dsp) file, but they should export the makefiles locally.

FileSpy.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CFileSpyApp application class.

FileSpy.cpp
    This is the main application source file that contains the application
    class CFileSpyApp.

FileSpy.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Visual C++.

FileSpy.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

res\FileSpy.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file FileSpy.rc.

res\FileSpy.rc2
    This file contains resources that are not edited by Microsoft 
	Visual C++.  You should place all resources not editable by
	the resource editor in this file.



/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CFrameWnd and controls all SDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the CMainFrame
    class. Edit this toolbar bitmap using the resource editor, and
    update the IDR_MAINFRAME TOOLBAR array in FileSpy.rc to add
    toolbar buttons.
/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

FileSpyDoc.h, FileSpyDoc.cpp - the document
    These files contain your CFileSpyDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CFileSpyDoc::Serialize).

FileSpyView.h, FileSpyView.cpp - the view of the document
    These files contain your CFileSpyView class.
    CFileSpyView objects are used to view CFileSpyDoc objects.


/////////////////////////////////////////////////////////////////////////////

Help Support:

hlp\FileSpy.hpj
    This file is the Help Project file used by the Help compiler to create
    your application's Help file.

hlp\*.bmp
    These are bitmap files required by the standard Help file topics for
    Microsoft Foundation Class Library standard commands.

hlp\*.rtf
    This file contains the standard help topics for standard MFC
    commands and screen objects.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named FileSpy.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Visual C++ reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC42XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC42DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\hsm\infs\rsoptcom.txt ===
; User-visible strings
[Strings]
RSTORAGETop_DESC        = "Remote Storage"
RSTORAGETop_TIP         = "A set of services and administrative tools that you can use to store data from infrequently used files on magnetic tape."
RSTORAGEFilter_DESC     = "Remote Storage Recall Support"

SERVICE_FILE_SYSTEM_DRIVER = 2
SERVICE_BOOT_START = 0
SERVICE_ERROR_NORMAL = 1

SPSVCINST_TAGTOFRONT = 1
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\hsm\infs\filelst1.txt ===
8.3 filename    long filename   directory to install to         workstation/server      alpha/x86       always/optional
-------------   -------------   -----------------------         ------------------      ---------       ---------------
rsadmin.dll     none            %systemroot%\system32           BOTH                    both            optional
rsadmin.msc     none            %systemroot%\system32           BOTH                    both            optional
rscommon.dll    none            %systemroot%\system32           BOTH                    both            optional
rsconn.dll      none            %systemroot%\system32           BOTH                    both            optional
rseng.exe       none            %systemroot%\system32           server only             both            optional
rsengps.dll     none            %systemroot%\system32           BOTH                    both            optional
rsfilter.sys    none            %systemroot%\system32\drivers   server only             both            optional
rsfsa.exe       none            %systemroot%\system32           server only             both            optional
rsfsaps.dll     none            %systemroot%\system32           BOTH                    both            ALWAYS
rsidb.dll       none            %systemroot%\system32           server only             both            optional
rsjob.dll       none            %systemroot%\system32           BOTH                    both            optional
rslaunch.exe    none            %systemroot%\system32           server only             both            optional
rsmover.dll     none            %systemroot%\system32           server only             both            optional
rsnotify.exe    none            %systemroot%\system32           BOTH                    both            ALWAYS
rsoptcom.dll    none            %systemroot%\system32           BOTH                    both            ALWAYS
rsoptcom.inf    none            %systemroot%\system32           server only             both            ALWAYS
rsoptwks.inf    none            %systemroot%\system32           worksatation only       both            ALWAYS
rsshell.dll     none            %systemroot%\system32           server only             both            optional
rssub.exe       none            %systemroot%\system32           server only             both            optional
rssubps.dll     none            %systemroot%\system32           BOTH                    both            optional
rstask.dll      none            %systemroot%\system32           server only             both            optional
rstorage.inf    none            %systemroot%\inf                BOTH                    both            ALWAYS
rstore.exe      none            %systemroot%\system32           server only             both            optional
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\hsm\infs\rstorage.txt ===
; User-visible strings
[Strings]
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\lfs\lfsques.txt ===
What is the structure of a transaction ID.  This is generated by the client
(or transaction manager) and is passed through to the disk by Lfs.

Can't store the next Lsn in a log record header because its exact location
may not be known when a log record is being written (in-memory) or a
page block is being written to disk.  This is because the write to disk
may occur before the next log record is received and there is no way to
know if it will fit in the remaining part of the file or will wrap and
be written to the beginning of the file.

Log records that require multi-page allocation blocks will begin at the
beginning of a page block.  Then the fields which describe the data shift
can be in a page header record and not a log record header.

We restrict the data size of a log record to 32 bits.

Log record types:  We have an enumerated type for all log record, not
a main type and subtypes.  i.e. all commit protocol records are defined
at the top level.

Multi-page blocks:  Page headers indicate whether they are the first
or last page.  During Lfs restart these pages may be walked through.
As far as the analysis algorithm goes, these can be thought of as a
single unit.  All page(s) must be found or this will be considered
a bad page(s), the next page then must be read to discover if this is
a fatal error or the point where the system crashed.

Looking up multipage via Lsn:  Given Lsn pin appropriate page and look
at log record.  If single page then done.  Otherwise, unpin page and
pin multiple pages.

For what operations do we need to check the update sequence array in
the page headers.

Log file header prior to restart areas.  This will be a single system page
and contain the log file base values which will allow both copies of the
restart area to be found.  This information will be duplicated in the restart
areas so that if the sector containing the file header goes bad, an
intelligent choice can be made for where to search for the first Lfs
restart area.  (Or we could duplicate it in the first x sectors).

Should we checksum the log file header.

Added client Id to the log record header.

Is it reasonable to use a USHORT to index into the client array and a USHORT
for the client sequence number.

Do we even need a sequence number.  Will the index number be sufficient to
walk forward through the log records.  When will the index be reused, only
when a client closes his loghandle.  In that case it will be impossible to
start searching from an out of date Lsn.

Change InitializeReadContext to LfsContextReadFirst and return the first Lsn.
Read Next is LfsContextReadNext.

May not need the LfsPreviousLsn in the log record header.

Log record enumeration.  Walking forwards, client will probably run
out unexpectedly.

Log record enumeration.  Walking backwards, take Lsn, determine Log page
boundary.  Pin log page, if multiple pages unpin and repin multiple pages.

Walking backwards, how likely are we to want to stay in the same log
page for several records.

Enumerating.  It is possible we are pinning pages for read and may be trying
to write them at the same time.

If we have a page pinned multiple times, will that prevent it from being
flushed with a ccflush call.

Will a client want to look at several log records at once, or only one
at a time.  The current interface supports only one at a time.

LOG CONTEXT BLOCK

        No synchronization of access to the log context block.  Client
        shares the block at his own risk.

        How to resolve that enumeration may pin (for a while) a block of
        pages that are trying to be flushed.

        Enumeration (in the forward direction) may be trying to read a lsn
        as it is being written.  Solution, write the log record before updating
        the last Lsn in the page header.

        This may make the LastLsn number in the context block obsolete as it
        may be outdated.  However, any later Lsn's wouldn't have existed when
        the client started this call.  Should we hide all new log records
        from him.

Log file.  How big may it be (ULONG, LARGE_INT)

Log buffer control block.  Access via global spinlock.  Sets up frame for
next write and then releases it.  Count is kept in block of active writers,
can't be flushed until active count is zero.  Does this make sense, how
do we wait until active count is zero.

Lsn should be 96 bits.  64 bit file offset and 32 bit sequence value.
The interface with the Lfs provides that the address of this structure
be passed.

Is it expensive to allocate and deallocate an event each time a new buffer
is used.

Can the restart areas offset safely be a ULONG.

How can log service initiate a sector revectoring.

Start log file sequence number at 1, then 0 indicates we have just wrapped.

Since write operations to the log file must be serialized, there is no
reason not to let the worker thread perform all the writes.

Operations:

    Given an Lsn:

        Find the next Lsn
        Find the previous client Lsn
        Find the client undo next lsn.

    Given a log record.

        Find the client owner of the record
        Find the transaction ID for the record

    Log context blocks

        Allocate and deallocate
        Write into the fields.
        Determine if the next/prev Lsn resides in the same block of pages.
        Pin and unpin pages in the log file.
        Allocate and deallocate the user's buffer.
        Synchronize access to the context block (is this needed)

    Log client area

        Allocate and deallocate
        Verify the client as valid.

    Log buffer control blocks

        Allocate and deallocate
        Link into control block list for a particular log file.
        Allocate and deallocate buffer associated with control block.
        Determine the size required for the buffer.
        Determine where buffer fits in log file.
        Determine where the next log record should be in the buffer.
        Determine when all the authorized writes to the file have completed.
        Syncronize access to the fields of the contol block.
        Find the last Lsn for the page block.
        Determine when the flush operation to the log file has completed.
        Determine if the flush operation to the file was successful.
        Determine if the next log record fits in this buffer.
        Determine if user thread can be used to write log pages to the log file


    Log file control block.

        Allocate/Deallocate structure.
        Link log file control blocks to global record
        Know whether the sequence number has wrapped.
        Modify the fields of the structure.
        Write a restart area to the disk.
        Change the current restart area.

    Log data area

        Allocate and Deallocate structure
        Sychronize access to the fields.
        Add and remove fields from the workque.

We need a structure to use for a log file information block.

July 1,

How do we store the update sequence stride on disk to read on a different
system??

What do we do when there is an I/O error writing to the disk??  How does
an operation know that a previous I/O error has occurred??

Do multiple clients open the same log file with the same file object or
the same file??  (We could always check if the context pointers match)

How do we disable the update sequence mechanics in order to originally
recognize the log file.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\mup\wml\readme.txt ===
WMI LOGGING
-----------

I. To start logging 
 a. for Mup.sys and Dfs.sys
     use the tracelog program.
     for example:     
	tracelog -start <SessionName> -f <logFile> -guid <control guid file> -level <level> -flags <flags>
     the flags need to be given in decimal form, not hex.
     You can start multiple logger session at one time or you can log multiple components at once by including 
     multiple contols guids in the control guid file.
 b. for dfssvc.exe
     dfssvc logging is contoled by registry settings
     To enable logging in this component set the following keys under
     HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Tracing\DFS Service\
     Active=1
     Level = <level>
     ControlFlags = <flags> 
     LogFileName = <logFile>
II. Stop logging
     Before looking at the logs, you should stop the log session.
	tracelog -stop <SessionName>
III. Dumping the logs
     use tracedmp (soemtimes found as tracefmt)
	tracedmp -f <logFile> -guid <mof file> -o <outputfile>
IV. Finding the files for logging
 a. The logging utilities (tracedmp, tracelog, etc) are part of idw or can be found 
    in \\scratch\scratch\drewsam\Logging (copy all files from this directory for logging.)
 b. The control guid and mof files can be found in the mup, dfs\driver, dfssvc, and dfsm\server diectories.
    They are mupwpp.mof, dfswpp.mof, svcwpp.mof, dfsmwpp.mof, mupctrl.guid, dfsctrl.guid, svcctrl.guid
    Dfsm and Dfssvc are controled by one guid. These files are also updated in \\scratch\scratch\drewsam\Logging
    from time to time. Make sure you have the most up to date files.
V. Flags
   The flags used in mup, dfs, and dfssvc are:
   DEFAULT 	0x0001
   TRACE_IRP	0x0004 (not used in dfsvc)
   ALL_ERROR	0x2000
   ERROR	0x4000

   TRACE_IRP - logs that will help track the path of an IRP.
   ERROR - logs of errors that occured. These are only actually logged if there was an error.
   ALL_ERROR - all error logs, regardless of whether there was an error or not
VI. Level
  HIGH 0x1  - only the most important logs
  NORM 0x2
  LOW  0x4  - all logs 
VII. Troubleshooting
 a. Problems with logging pointers on ia64. There were many iterations of problems with WMI logging
    on ia64. Check that in the mof file all pointers are type ItemPtr and that the format string
    uses %n!p! and not %n!08x!
 b. A good source to contact with problems is either  DrewSam (originally put logging in DFS and MUP) 
    or IanServ (the guy we got logging from).



ADDING NEW LOGS
---------------

I. Add logs to source files
   Simply add new logs using the logging macros (DFS_TRACE_HIGH, MUP_TRACE_HIGH, etc) to the source code.
II. Run wpp01.exe
   From the directory with the modified source run \nt\base\fs\mup\wml\wpp01.exe
   This will generate two files: XXXwpp.h, and newXXXwpp.mof
III. Append the mof files
   Append the contentes of newXXXwpp.mof to the end of XXXwpp.mof
IV. Copy the MSG_ID's
   Copy the lines from XXXwpp.h of the form "#define MSG_ID_*" into XXXwml.h
   remove the old MSG_ID defines form XXXwml.h
V. Copy the traceguid
   Replace the first trace guid in XXXwml.c with the new trace guid in XXXwpp.h
   NOTE: do not replace the control guid!!!
VI. Build
  The code should now build fine.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\ntfs\specnot2.txt ===
Here is a list of all NTFS design issues which have come up that effect the
structure, along with current resolution (if there is one) of the issue.  The
resolution of these issues affects the "NTFS Design Specification 1.1" issued
May 29, 1991.  This list will be the final qualification to the spec until
there is time to update it to a form which reflects the actual implementation.
Of course the most precise definition of NTFS will always be in the header
file which describes its structure: ntfs.h.

These issues have been collected primarily from our own internal review and
the feedback received from MarkZ.  They are listed here in no particular
order.

Issue 1:

    Support for nontagged attributes is a pain in the low-level attribute
    routines, as well as in Format and ChkDsk.  They are of very little
    value to the File System in terms of space or performance.

    Resolution:

    Nontagged attributes are being dropped for the purposes of NTFS's own
    use of attributes to implement the disk structure.  Nontagged attributes
    will be supported with the general table support.

Issue 2:

    The EXTERNAL_ATTRIBUTES attribute, should have a better name, and its
    definition should be changed to simplify various NTFS algorithms.

    Resolution:

    The attribute name has been changed to the ATTRIBUTE_LIST attribute.
    It is still only created when a file requires more than one file record
    segment.  At that time it is created to list all attributes (including
    those in the base file record) by type code and (optional) name.  it is
    ordered by Attribute Type Code and Attribute Name.

    One reason for this change is to facilitate the enumeration of all
    attributes for a file with multiple file record segments.  This
    slightly different definition also gives NTFS's attribute placement
    policy more freedom to shuffle attributes around within the file
    record segments.

Issue 3:

    Attribute ordering rules within the file, within each file record segment,
    and within the ATTRIBUTE_LIST were not completely specified.

    Resolution:

    The only rule for the ordering of attributes within each file, if there
    are multiple file record segments, is that STANDARD_INFORMATION must be
    in the base file record segment, and (at least the first part of) the
    ATTRIBUTE_LIST attribute must also be in the base file record segment.
    In general, the system should try to keep the other system-defined
    attributes with the lowest Attribute Type Codes present in the base file
    record segment when possible, for performance reasons.

    Within each file record segment, attributes will be ordered by type code,
    name, and then value.  (If an attribute is not unique in type code and
    name, then it must be indexed and the value must be referenced.)

    The entries of the ATTRIBUTE_LIST will be ordered by attribute code and
    name.

    Reliance on these ordering rules may be used to speed up attribute lookup
    algorithms.

Issue 4:

    NTFS is NOT secure on removeable media without data encryption.

    Resolution:

    Functionality for the encryption of communications and physical media
    is already planned for Product 2 of NT, at which time we will decide
    what the best mechanism will be for integrating this support with
    removeable NTFS volumes.  We must insure now that this can be implemented
    in a upward-compatible manner.

Issue 5:

    It would be very desirable for WINX to have the ability to uniquely
    identify and open files by a small number.

    Resolution:

    Logically the ability to use this functionality must be controlled by
    some privilege, as it is expensive and nearly impossible to come up with a
    consistent strategy on how to do correct path traversal checking, in a
    system such as NTFS which supports multiple directory links to a single
    file.  Once the requirement for a special privilege is accepted, it is
    relatively easy for NTFS to support an API which would allow files to
    be opened by their (64-bit) File Reference number.  The File Reference
    is perfect for this purpose, as it includes a 16-bit cyclically-reused
    sequence number to detect the attempt to use a stale File Reference.
    I.e., the original file with the same 48-bit Base File Record address has
    been deleted, and a new file has been created at the same address.)

    THIS REQUIRES A NEW NT I/O API.

Issue 6:

    Enumeration of files in a directory in NT could be very slow, since
    to get more than just a file's name requires reading (at least) the
    base file record for the file.

    Resolution:

    The initial NT-based implementation of NTFS will come up with a
    strategy for clustering file record segments together in the MFT for
    files created in the same directory.  Current thinking is that this
    will be done *without* change to the NTFS structure definition.  So,
    for example, the first 128 files in a directory might be contiguous in
    the MFT, and then the second 128 will also be contiguous, etc.  This
    will allow the implementation to prefetch files up to 128 file record
    segments at a time with a large spiral read, then expect cache hits during
    the enumeration.

    Secondly, at some point the implementation will cache enumeration
    information, to make subsequent enumeration of the same directory
    extremely fast.

Issue 7:

    Is it an unnecessary complexity to NTFS to support multiple collating
    rules, as opposed to a simple byte-comparison collation?  Note that
    frequently the caller collates himself anyway.

    Resolution:

    This is not resolved yet pending further discussion.

    The current reason NTFS plans to support multiple collating rules,
    is that collating in the caller can have bad performance and response
    characteristics in large directories.  For example, consider a Windows
    App which requests the enumeration of a directory with 200 files (possibly
    over the network to a heavily loaded server), and it is going to
    display this enumeration in a List box with 10 or 20 lines.  If it
    does not have to collate the enumeration, it can start displaying
    as soon as it receives part of the enumeration.  Otherwise it has
    to wait to get the entire enumeration before it can collate and display
    anything.

Issue 8:

    Should there be a bit in STANDARD_INFORMATION to indicate whether a
    file record has an INDEX attribute or not?

    Resolution:

    There is no plan to do this, unless we find additional reasons
    to do so that we are missing.  Currently we see how this bit could
    speed the rejection of illegal path specifications, but it would
    not speed the acceptance of correct ones.  Note that from the structure
    of NTFS, it is legal for a file to have both an INDEX attribute *and*,
    for example, a DATA attribute.

Issue 9:

    The algorithms and consistency rules surrounding the 8.3 indices need to
    be clarified.

    Resolution:

    This will be done by 7/31.

Issue 10:

    Why not eliminate the VERSION attribute and move it to
    STANDARD_INFORMATION?

    Resolution:

    We will do this, and then define an additional file attribute
    and/or field which controls whether or not versioning is enabled and
    possibly how many versions are allowed for a file.

Issue 11:

    There should be a range of system-defined attribute codes which are
    not allowed to be duplicated, as this will speed up some of the
    lookup algorithms.

    Resolution:

    This will be done.

Issue 12:

    Is duplication of the log file the correct way to add redundancy to
    NTFS to allow mounting in the event of read errors.

    Resolution:

    Upon further analysis, it was determined that the needed redundancy
    was incorrectly placed.  It is more important to duplicate the first
    few entries of the MFT, than to duplicate the start of the log file.
    This change will be made.

Issue 13:

    The spec describes how access to individual attribute types may be
    controlled by special ACEs, which is incompatible with the current
    NT APIs and our security strategy.

    Resolution:

    This will be fixed.  Access to user-defined attributes will be controlled
    by the READ_ATTRIBUTES and WRITE_ATTRIBUTES access rights.

Issue 14:

    A file attribute should be added which supports more efficient handling
    of temporary files.

    Resolution:

    An attribute will be added for files, and possibly directories, which
    will enable NTFS to communicate "temporary file" handling to the Cache
    Manager.  Temporary files will never be set dirty in the Cache Manager
    or written to disk by the Lazy Writer, although the File Record will
    be correctly updated to keep the volume consistant.  If a temporary file
    is deleted, then all writes to its data are eliminated.  If MM discovers
    that memory is getting tight, it may choose to flush data to temporary
    files, so that it can free the pages.  In this case the
    correct data for the file will eventually be faulted back in.

    This makes the performance of I/O to temporary files approach the
    performance of putting them on a RAM disk.  An advantage over RAM disk,
    though, is that no one has to specify how much space should be used
    for this purpose.

Issue 15:

    It would be nice to have some flag in each file record segment to say
    if it is in use or not.  This would simplify chkdsk algorithms, although
    it would require the record to be written on deletion.

    Resolution:

    This will be done.  It is difficult to suppress the write of the file
    record on deletion anyway.
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\ntfs\specnote.txt ===
These are a collection of notes that should be updated in the NTFS Design
Specification.  These do not include many changes which will be obvious
from a pass through ntfs.h - which will be a necessary activity for the
next spec update.

    File Number changed to File Reference, to denote that its use can
    become invalid (sequence number incremented).

    The second copy of the log is not needed, but a second copy of the MFT
    is, which just has the same first three file records: MFT, MFT2 and LOG.

    Add a discussion of the Boot Sector / Boot file, and a figure to show
    dual boot records and dual MFTs.

    Forget the security on attributes, just use READ_ATTRIBUTE, WRITE_ATTRIBUTE
    privilege on the file.

    The boot file is strictly a matter between Format, bootstrap, and the Mount
    code.  Where it goes and what its contents are will be system-specific.
    For NT:

        There will be one boot record at sector 0, and one on the last
        sector of the volume.  Each boot record will contain the cluster size
        and the starting LCN for the Master File, and the Master File 2.
        As a suggestion, Format on NT should start the MFT at LCN = 1 on
        the disk, and MFT2 should start three file record segments before the
        other boot record.  MFT2 contains mirrored copies of the first file
        record segment for the MFT, MFT2, and the Log file.  The boot file
        on NT just contains these two boot records.

        DOS may choose to actually have a bootstrap following the first
        boot record in the boot file, and it could just be the first N
        clusters of the disk.

    "Ideas by Butzi":

        Disks should schedule reads ahead of writes

        Have some way to detect temporary files (file attribute
        and/or directory attribute), and never write their data
        (or update valid data length).  This would be like putting
        \temp on the RAM disk on OS/2.

        make writes on close a dynamic option?
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\ntfs\tests\bshell\bshell.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Internal  opens/creates a file Title opens/creates a file keithka Normal keithka Microsoft Word 9.0bjbjU  closes handle; ex:  cl   exits bshell fsct   sends an fsctrl; ex: fsct  -b buffer -e event -i handle index -l buffer lengths -o fsctrl a lock volume b unlock volume c dismount volume d mark volume dirty e is path name valid f query retrieval pointers g get compression h set compression i mark as system hive j get statistics k is volume dirty l get ntfs volume data m get volume bitmap  n get ntfs file record o move file p set dasd io q get retrieval pointers r set encryption s extend volume -y display parameters -z additional line  opens/creates a file; ex:  op  f\d:\foo  -a attributes z reset to zero a read-only b hidden c system d archive e normal f temporary g encrypted -d desired access z clear value a read data / list directory b write data / add file c append data / add subdirectory / create pipe d read ea e write ea f execute / traverse g  / delete child h read attributes i write attributes j file all access k synchronize l delete m read control n write dac o write owner p generic read q generic write r generic execute s generic all t maximum allowed -h share access z reset to zero a share read b share write c share delete -n create options z reset value a directory file b write through c sequential only d no intermediate buffering e synchronous io alert f synchronous io nonalert g non directory file h create tree connection i complete if oplocked j open by file id k no ea knowledge l delete on close m reserve oplock -p create disposition z reset value a supersede b open c create d open if e overwrite f overwrite if -s size (low 32 bits) -t size high (high 32 bits)  query directory  set file information; ex: sf  -a attributes z reset a normal b read-only c hidden d system e archive f temporary g directory -c info class a basic  b rename  c link  d disposition  e position  f mode  g allocation  h end of file
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\ntfs\tests\bshell\bshellguide.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corp. BSHELL Documentation Title _PID_HLINKSBSHELL Documentation Molly Brown Normal.dot Molly Brown Microsoft Word 9.0xtRf]zRBSHELL Documentation  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc506863616"  BSHELL Documentation  PAGEREF _Toc506863616 \h   HYPERLINK \l "_Toc506863617"  File System Operations  PAGEREF _Toc506863617 \h   HYPERLINK \l "_Toc506863618"  Open-Create (op)  PAGEREF _Toc506863618 \h   HYPERLINK \l "_Toc506863619"  1.1.1 Desired access (-d)  PAGEREF _Toc506863619 \h   HYPERLINK \l "_Toc506863620"  1.1.2 Root directory (-r)  PAGEREF _Toc506863620 \h   HYPERLINK \l "_Toc506863621"  1.1.3 Object attributes (-o)  PAGEREF _Toc506863621 \h   HYPERLINK \l "_Toc506863622"  1.1.4 File attributes (-a)  PAGEREF _Toc506863622 \h   HYPERLINK \l "_Toc506863623"  1.1.5 Share access (-h)  PAGEREF _Toc506863623 \h   HYPERLINK \l "_Toc506863624"  1.1.6 Create disposition (-p)  PAGEREF _Toc506863624 \h   HYPERLINK \l "_Toc506863625"  1.1.7 Create options (-n)  PAGEREF _Toc506863625 \h   HYPERLINK \l "_Toc506863626"  Set File Information (sf)  PAGEREF _Toc506863626 \h   HYPERLINK \l "_Toc506863627"  1.2.1 File information class (-c)  PAGEREF _Toc506863627 \h   HYPERLINK \l "_Toc506863628"  1.2.2 File Attributes (-a)  PAGEREF _Toc506863628 \h   HYPERLINK \l "_Toc506863629"  Oplock Operations (oplk)  PAGEREF _Toc506863629 \h   HYPERLINK \l "_Toc506863630"  1.3.1 Operations (-o)  PAGEREF _Toc506863630 \h   HYPERLINK \l "_Toc506863631"  Query File (qf)  PAGEREF _Toc506863631 \h   HYPERLINK \l "_Toc506863632"  1.4.1 File information classes (-c)  PAGEREF _Toc506863632 \h   HYPERLINK \l "_Toc506863633"  Notify Change Directory (ncd)  PAGEREF _Toc506863633 \h   HYPERLINK \l "_Toc506863634"  1.5.1 Completion filter (-f)  PAGEREF _Toc506863634 \h   HYPERLINK \l "_Toc506863635"  Read File (rd)  PAGEREF _Toc506863635 \h   HYPERLINK \l "_Toc506863636"  Query Directory (qd)  PAGEREF _Toc506863636 \h   HYPERLINK \l "_Toc506863637"  1.7.1 File information classes (-c)  PAGEREF _Toc506863637 \h   HYPERLINK \l "_Toc506863638"  Set Volume Information (sv)  PAGEREF _Toc506863638 \h   HYPERLINK \l "_Toc506863639"  1.8.1 File information class (-c)  PAGEREF _Toc506863639 \h   HYPERLINK \l "_Toc506863640"  Query Volume Information (qv)  PAGEREF _Toc506863640 \h   HYPERLINK \l "_Toc506863641"  1.9.1 File information class (-c)  PAGEREF _Toc506863641 \h   HYPERLINK \l "_Toc506863642"  Query EA (qea)  PAGEREF _Toc506863642 \h   HYPERLINK \l "_Toc506863643"  Set EA (sea)  PAGEREF _Toc506863643 \h   HYPERLINK \l "_Toc506863644"  FS Control (fsct)  PAGEREF _Toc506863644 \h   HYPERLINK \l "_Toc506863645"  1.12.1 FS control operations (-o)  PAGEREF _Toc506863645 \h   HYPERLINK \l "_Toc506863646"  IO Control (ioctrl)  PAGEREF _Toc506863646 \h   HYPERLINK \l "_Toc506863647"  1.13.1 IO control operations(-o)  PAGEREF _Toc506863647 \h   HYPERLINK \l "_Toc506863648"  Sparse FS Control (sparse)  PAGEREF _Toc506863648 \h   HYPERLINK \l "_Toc506863649"  1.14.1 Sparse control operations(-o)  PAGEREF _Toc506863649 \h   HYPERLINK \l "_Toc506863650"  USN FS Control (usn)  PAGEREF _Toc506863650 \h   HYPERLINK \l "_Toc506863651"  1.15.1 USN control operations(-o)  PAGEREF _Toc506863651 \h   HYPERLINK \l "_Toc506863652"  CLOSE (cl)  PAGEREF _Toc506863652 \h   HYPERLINK \l "_Toc506863653"  EXIT (die)  PAGEREF _Toc506863653 \h   HYPERLINK \l "_Toc506863654"  Extended Attribute Setup  PAGEREF _Toc506863654 \h   HYPERLINK \l "_Toc506863655"  Put EA Name (pea)  PAGEREF _Toc506863655 \h   HYPERLINK \l "_Toc506863656"  Fill EA Buffer (fea)  PAGEREF _Toc506863656 \h   HYPERLINK \l "_Toc506863657"  2.2.1 Flags field (-f)  PAGEREF _Toc506863657 \h   HYPERLINK \l "_Toc506863658"  Memory Operations  PAGEREF _Toc506863658 \h   HYPERLINK \l "_Toc506863659"  Allocate Memory (am)  PAGEREF _Toc506863659 \h   HYPERLINK \l "_Toc506863660"  Deallocate Memory (dm)  PAGEREF _Toc506863660 \h   HYPERLINK \l "_Toc506863661"  Copy Buffer (cb)  PAGEREF _Toc506863661 \h   HYPERLINK \l "_Toc506863662"  Display Buffer (db)  PAGEREF _Toc506863662 \h  File System Operations Open-Create (op) -f<chars> Filename -f\c:\myfile.txt -v[T|F] Verbose Continue input Display parameters -d<chars>  HYPERLINK  \l "_Desired_access_(/d)"  Desired access -r<index>  HYPERLINK  \l "_Root_directory_(/r)"  Root directory handle -o<chars>  HYPERLINK  \l "_Object_attributes_(/o)"  Object attributes -s<digits> Size   lower bound -t<digits> Size   upper bound -a<chars>  HYPERLINK  \l "_File_attributes_(/a)"  File attributes -h<chars>  HYPERLINK  \l "_Share_access_(/h)"  Share access -p<chars>  HYPERLINK  \l "_Create_disposition_(/p)"  Create disposition -n<chars>  HYPERLINK  \l "_Create_options_(/n)"  Create options -b<index>  HYPERLINK  \l "_Extended_Attribute_Setup"  EA buffer -l<digits> Stated length of EA buffer -x<chars> Exact name Use Unicode name Desired access (-d) Clear value File read data - File list directory 0x00000001 File write data - File add file 0x00000002 File append data - File add subdirectory - File create pipe 0x00000004 File read EA 0x00000008 File write EA 0x00000010 File execute - File traverse 0x00000020  - Delete child 0x00000040 Read attributes 0x00000080 Write attributes 0x00000100 File all access 0x001F01FF Synchronize 0x00100000 Delete 0x00010000 Read control 0x00020000 Write DAC 0x00040000 Write owner 0x00080000 Generic read 0x80000000 Generic write 0x40000000 Generic execute 0x20000000 Generic all 0x10000000 Maximum allowed 0x02000000 Root directory (-r) -r<index> Handle index Object attributes (-o) Clear value OBJ_INHERIT OBJ_PERMANENT OBJ_EXCLUSIVE OBJ_CASE_INSENSITIVE OBJ_OPEN_IF File attributes (-a) Clear value Read only 0x00000001 Hidden 0x00000002 System 0x00000004 0x00000008 Directory 0x00000010 Archive 0x00000020 Encrypted 0x00000040 Normal 0x00000080 Temporary 0x00000100 Sparse 0x00000200 Reparse point 0x00000400 Compressed 0x00000800 Offline 0x00001000 Content indexed 0x00002000 Share access (-h) Clear value File share read File share write File share delete Create disposition (-p) Clear value FILE_SUPERSEDE FILE_OPEN FILE_CREATE FILE_OPEN_IF FILE_OVERWRITE FILE_OVERWRITE_IF Create options (-n) Clear value DIRECTORY_FILE WRITE_THROUGH SEQUENTIAL_ONLY NO_INTERMEDIATE_BUFFERING SYNCHRONOUS_IO_ALERT SYNCHRONOUS_IO_NOALERT NON_DIRECTORY_FILE CREATE_PIPE_CONNECTION COMPLETE_IF_OPLOCKED OPEN_BY_FILE_ID NO_EA_KNOWLEDGE DELETE_ON_CLOSE REVERSE_OPLOCK OPEN_FOR_BACKUP_INTENT FILE_NO_COMPRESSION OPEN_REPARSE_POINT Set File Information (sf) -i<digits> File index -lb<digits> Buffer length -c<char>  HYPERLINK  \l "_File_information_class"  File information class File information class (-c) Basic information -tc<digits> Create time -ta<digits> Last access time -tw<digits> Last write time -tg<digits> Change time -a<chars>  HYPERLINK  \l "_File_Attributes_(/a)_1"  File attributes Rename information -p[T|F] Replace if exists -r<digits> Root directory index -lr<digits> Rename length -fr<name> Link information -ln<digits> Name length -fn<name> Disposition information -d[T|F] Delete Position information -o<digits> Offset low (default 0) -u<digits> Offset high (default 0) File mode information -m<char> Allocation information -nl<digits> Allocation low (default 0) -nh<digits> Allocation high (default 0) End of file information File Attributes (-a) Reset attributes Read only Hidden System Directory Archive Encrypted Normal Sparse Reparse Compressed Offline Content indexed Oplock Operations (oplk) -i<digits> File index -o<char>  HYPERLINK  \l "_Operations_(-o)"  Oplock operation -v[T|F] Verbose Display parameters Operations (-o) Request oplock I Request oplock II Request batch oplock Request filter oplock Acknowledge oplock break Acknowledge close pending Oplock break notify Acknowledge oplock level 2 Query File (qf) -b<index> Buffer -l<digits> Buffer length -i<index> File index -c<char>  HYPERLINK  \l "_File_information_classes"  File information class Verbose Display parameters Continue input File information classes (-c) Basic information Standard information Internal information EA information Access information Name information Position information Mode information Alignment information All information Streams information Alternate names information Fast network query Notify Change Directory (ncd) -i<index> File handle index -e[T|F] Use event -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index Buffer length -f<chars>  HYPERLINK  \l "_Completion_filter_(/f)"  Completion filter -w[T|F] Watch tree -v[T|F] Verbose Display parameters Completion filter (-f) Clear all bits Notify change   File name Notify change   Directory name Notify change   Attributes Notify change   Size Notify change   Last write Notify change   Last access Notify change   Creation Notify change  Notify change   Security Notify change   Stream name Notify change   Stream size Notify change   Stream data Read File (rd) -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index -h<index> Handle index -c<digits> Byte count -u<digits> Upper 16 of offset -i<digits> Lower 16 of offset -k<digits> -v[T|F] Verbose Display parameters Continue input Query Directory (qd) -h<index> Handle index -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index -c<char>  HYPERLINK  \l "_File_information_classes_1"  File information class -s[T|F] Single entry -r[T|F] Restart scan Restart filename Display all times Complete information Null name File information classes (-c) FileNamesInformation FileDirectoryInformation FileFullDirectoryInformation FileIdFullDirectoryInformation FileBothDirectoryInformation FileIdBothObjectIdInformation FileObjectIdInformation FileQuotaInformation FileReparsePointInformation Set Volume Information (sv) -i<index> File index -lb<digits>  HYPERLINK  \l "_Memory_Operations"  Buffer length -fl<chars> Volume label -ll<digits> Label length -c<char>  HYPERLINK  \l "_File_information_class_1"  File information class File information class (-c) File fs label information Query Volume Information (qv) -i<index> File index -b<digits>  HYPERLINK  \l "_Memory_Operations"  Buffer index -l<digits> Buffer length -c<char>  HYPERLINK  \l "_File_information_class_2"  File information class File information class (-c) File fs volume information File fs size information File fs device information File fs attribute information Query EA (qea) -h<index> File handle index -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index -l<digits> Buffer length -n<digits> EA name buffer index -g<digits> EA name buffer length -s[T|F] Return single entry -r[T|F] Restart scan -i<digits> EA index for first EA -v[T|F] Verbose Display parameters Set EA (sea) -h<index> File handle index -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index -l<digits> Stated buffer length FS Control (fsct) -i<index> File handle index -o<char>  HYPERLINK  \l "_FS_control_operations"  Operation -b[i|o]<index>  HYPERLINK  \l "_Memory_Operations"  IO buffer index -l[i|o] Buffer length -e[T|F] Use event -v[T|F] Verbose Display parameters Continue input FS control operations (-o) Lock volume Unlock volume Dismount volume Mark volume dirty Is path name valid Query retrieval pointers Get compression Set compression Mark as system hive Get statistics Is volume dirty Get NTFS volume data Get volume bitmap Get NTFS file record Move file Set DASD IO Get retrieval pointers Set encryption Extend volume IO Control (ioctrl) -i<index> File handle index -o<char>  HYPERLINK  \l "_IO_control_operations(/o)"  Operation -b[i|o]<index>  HYPERLINK  \l "_Memory_Operations"  IO buffer index -l[i|o] Buffer length -e[T|F] Use event -v[T|F] Verbose Display parameters Continue input IO control operations(-o) CDROM disk type CDROM read TOC Disk eject mode Storage eject now Sparse FS Control (sparse) -i<index> File handle index -o<char> HYPERLINK  \l "_Sparse_control_operations(-o)" Operation -b[i|o]<index>  HYPERLINK  \l "_Memory_Operations"  IO buffer index -l[i|o] Buffer length -e[T|F] Use event -v[T|F] Verbose Display parameters Continue input Sparse control operations(-o) Set sparse Zero range Query allocated ranges USN FS Control (usn) -i<index> File handle index -o<char> HYPERLINK  \l "_USN_control_operations(-o)" Operation -b[i|o]<index>  HYPERLINK  \l "_Memory_Operations"  IO buffer index -l[i|o] Buffer length -e[T|F] Use event -v[T|F] Verbose Display parameters Continue input USN control operations(-o) Enumerate USN data Read USN journal Create USN journal Read file USN data Write USN close record Query USN journal Delete USN journal CLOSE (cl) -h<index> File handle index Verbose EXIT (die) Extended Attribute Setup Put EA Name (pea) -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index -n<chars> EA name -o<digits> Buffer offset -x<digits> Next offset field -m[T|F] More EAs coming (Fills next offset field) -v[T|F] Verbose results Display parameters Additional input line Fill EA Buffer (fea) -b<index>  HYPERLINK  \l "_Memory_Operations"  Buffer index -f<char>  HYPERLINK  \l "_Flags_field_(/f)"  EA flags to store in buffer -n<char> EaName to store in buffer -l<chars> Ea value to store in buffer -m[T|F] More EAs coming (Fills next offset field) -o<digits> Offset -x<digits> Next offset field -v[T|F] Verbose results Display parameters Continue input Flags field (-f) Need EA Memory Operations Allocate Memory (am) -r<digits> Region size -b<digits> Zero bits -v[T|F] Verbose Display parameters Deallocate Memory (dm) -b<index> Buffer index -v[T|F] Verbose Display parameters Copy Buffer (cb) -s<index> Source index -f<digits> Source offset -d<index> Destination index -t<digits> Destination offset -l<digits> Transfer length Display Buffer (db) -b<index> Buffer index -l<digits> Display length -o<digits> Display starting offset
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\rdr2\csc\csc.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Classic Brochure Title _PID_GUID _PID_HLINKSClassic Brochure isaac j heizer BROCHUR1 shishirp Microsoft Word 8.0                                                                             bjbjt+t+  TOC  \* MERGEFORMAT  Introduction  PAGEREF _Toc399750156 \h  Scenarios  PAGEREF _Toc399750157 \h  Requirements  PAGEREF _Toc399750158 \h  Architecture  PAGEREF _Toc399750159 \h  CSC Client Components  PAGEREF _Toc399750160 \h  CSC Client APIs  PAGEREF _Toc399750161 \h  CSCIsCSCEnabled  PAGEREF _Toc399750162 \h  This API allows an application to find out whether CSC is enabled at this time.  PAGEREF _Toc399750163 \h  CSCPinFile  PAGEREF _Toc399750164 \h  CSCUnPinFile  PAGEREF _Toc399750165 \h  CSCFindFirstCachedFile  PAGEREF _Toc399750166 \h  CSCFindNextCachedFile  PAGEREF _Toc399750167 \h  CSCFindClose  PAGEREF _Toc399750168 \h  CSCSetMaximumCacheSize  PAGEREF _Toc399750169 \h  CSCDeleteCachedFile  PAGEREF _Toc399750170 \h  File/Folder Status Bit Definitions:  PAGEREF _Toc399750171 \h  UI Support APIs  PAGEREF _Toc399750172 \h  Change Propagation  PAGEREF _Toc399750173 \h  CSC Server Components  PAGEREF _Toc399750174 \h  CSC Server APIs  PAGEREF _Toc399750175 \h  NetShareSetInfo  PAGEREF _Toc399750176 \h  NetShareGetInfo  PAGEREF _Toc399750177 \h  SHARE_INFO_1007  PAGEREF _Toc399750178 \h  CSC SMB Protocol Modifications  PAGEREF _Toc399750179 \h  Win32 Considerations  PAGEREF _Toc399750180 \h  Link Speed Considerations  PAGEREF _Toc399750181 \h  Introduction Scenarios Requirements Architecture CSC Client Components CSC Client APIs CSCPinFile CSCUnPinFile CSCQueryFileState CSCFindFirstCachedFile CSCFindNextCachedFile CSCFindClose CSCForceOutwardPropagation CSCSetMaximumCacheSize CSCDeleteCachedFile UI Support APIs Change Propagation CSC Server Components CSC Server APIs NetShareSetInfo NetShareGetInfo SHARE_INFO_1007 CSC SMB Protocol Modifications Win32 Considerations Link Speed Considerations Open Issues, Questions, etc.. Introduction This note document describes the salient features of client side caching (CSC) for NT5 and Memphis.  I want to make it clear up front that. T this architecture is an evolution from current ourWindows networking  current code basetechnology and customer perception of our networking products; it does not propose a fundamental rethinking or reworking of sameWindows networking.  Furthermore, I am attempting just enough CSC to meet NT5 requirements, but not so much CSC that we get ourselves in trouble down the road.  The requirements I am most familiar with are the ZAW requirements. Client side caching gives off-line access to files when the network version of the file is otherwise unavailable, or when it is undesirable to load the server with file requests. A client accesses the cached copy of a file using the same filename as when the client is connected to the network. Scenarios CSC must address the following usage scenarios: A user wants to make sure that specific files are available to him when he disconnects his laptop computer from the network.  He should not need to learn any new file names or anything, and this action by the user should not cause any surprises to the user when he is connected to his corporate network. An administrator wants to configure a number of workstations to boot from a network share.  The administrator should be able to support 100 s of clients in this way using a Pentium class server.  The workstations should reasonably continue to function in the face of network problems. An administrator wants to configure a number of applications to be run from the network.  The administrator should be able to support 100 s of clients in this way using a Pentium class server.  The application should reasonably continue to function in the face of network problems. A user has one desktop computer and one portable computer.  This user brings the portable computer to work every morning and connects it to the network, but works on the desktop computer during the day.  The user expects to undock the portable and resume work on the files at home.  The user, through minimal UI, expects the desktop data to be present when the portable computer is taken home and used. A student in a lab at college roams from machine to machine, expecting his desktop data to be available on the current machine.  This desktop data must not be available to the next student that logs onto the machine. A user of Microsoft Office wants to edit a document that someone else has open.  This user wants to get all the normal Office verbiage regarding shared document editing. CSC is tied to the SMB redirector, and operates only with NT5.0 (& later) servers  (i.e. not W95 servers, Netware servers, HTTP, FTP servers, for instance.) The administrative granularity of caching is on a per-share basis   administrators may mark a share as cacheable or not.Requirements Following are the requirements for CSC An NT or W9x5  system hosting CSC must be at least as robust as the same system not hosting CSC. For both NT5 and W9x iIn the NT5 time frame, CSC can be tied exclusively to SMB file sharing, and can require 5.0 NTS SMB servers.  CSC caches files that are accessed using Win32. CSC should improve the robustness of network access.  If network problems break the connection from a client to a server then the local cache should be utilized where appropriate to  cover up  the network problems. CSC must give client side applications the ability to designate certain files that are to be available even if the computer is disconnected from the network (i.e. pinned for off-line access).  Applications will refer to these files when off-line with the same Win32 file name as when connected to the network.  Preservation of inter-client file sharing semantics is not required during off-line file access and update. Off-line means that the server is unreachable for any reason. CSC must give server administrators the ability to designate whether or not server files are automatically appropriate for off-line CSC access.  The granularity of administration is on a share basis. Files not specifically marked for off-line access are not available when off-line.  HYPERLINK   CSC must minimally perturb W32 file I/O performance and semantics.  CSC must not introduce undue pauses or latency during any file operation. Network aware applications must be able to enjoy the performance advantages of CSC even if these applications require strict adherence to inter-client file sharing rules when connected to the network and the server is available (i.e. opens flow). The previous requirement notwithstanding, it must be possible to indicate to CSC that inter-client file sharing rules are not required for a given server share even when connected to the network and the server is available  (i.e. opens do not flow). CSC need only support whole-file caching.  There must be a way to avoid accidentally filling the client side cache when applications such as the Windows Explorer scan all the files in a directory and extract icons. CSC must have a means to propagate a file inward from a server to replace an old version of the file in the client cache: Remote boot and aApplication maintenance requires that such inward propagation is automatic and involves no interaction with the user. Other instances of file pinning require explicit user intervention for inward propagation   there must be appropriate UI. CSC must have a means to propagate a file outward from the cache to replace an old version of the file on the server: Remote boot and legacy application support requires that such outward propagation is automatic and involves no interaction with the user. Other instances of file pinning require explicit user intervention for outward propagation   there must be appropriate UI. For both the inward and outward propagation cases, complete file replacement is the conflict resolution policy.  If further refinement is required, the time stamp of the file is used (latest wins) followed by file size (largest wins), followed by a coin toss. Asynchronous inward and outward propagation should generally occur only when a file is closed.  However there are files that are never closed on the client; a prime example is the system hive.  There must be a means to force such files to be outward propagated even while open. CSC must integrate sensibly with DFS.  CSC must be aware of DFS alternates, and rely on the fact that some (completely independent) agent is keeping DFS alternates in sync.  CSC can select any of the DFS alternates for file put-back and/or cache filling. Any UI introduced by CSC must be usable by a novice PC user.  Specifically, it must be very simple for the end user to designate files that should be available when the user is disconnected from the network, or when the server is unavailable.  The result of this designation should be simple, predictable, and intuitive to the end user whether connected or off-line. CSC must give the client a means to designate how much local disk space the client side cache can use. Architecture CSC Client Components The CSC implementation has 3 major client components CSC File System Component: On W95, this is in a vxd that is installed between the IFSMgr and the network file system drivers.  On NT, tThis component is part of the SMB redirector.  On either platform, this component  and has the following subparts: Disconnected File System Driver (DFSD): responsible for mimicking the behavior of remote file systems in the absence of a network connection.  The Record Manager (below) is used by the DFSD to mimic remote file systems while in the disconnected state. Record Manager (RM): A local persistent database of servers, file naming, descriptors and data is maintained in order to serve as a cache for network activity.  As an example, to cache   HYPERLINK \\\\penmktg\\public\\foo\\bar.doc  \\penmktg\public\foo\bar.doc , the name   HYPERLINK \\\\penmktg\\public  \\penmktg\public  is maintained in a servers database and points to a database entry corresponding to the root of the server.  The server database entry contains the information for directory foo and its attributes and has a reference to the database entry for bar.doc.  The database entry for bar.doc contains the name, attributes, timestamp, etc. for bar.doc and also contains a reference to the to the entry holding the contents of bar.doc. The record manager also maintains status information such as whether the file is stale, whether the file was created while off-line, whether the file has been modified while off-line, etc.  On NT, the RM holds ACL information for the entries, on Win95 the entire cache is per-user. Persistent Management Database: A priority queue and Record Manager recovery database.  All entries in the Record Manager are queued into the priority queue.  A combination of the hints on the file and the frequency of usage determine the priority of a file.  The priority queue is used as a measure of the importance of the files and hence used for maintaining coherency and managing space.  The Record Manager recovery database tracks deleted record manager entries, for later reuse. CSC Shadow Agent: On both W95 and NT, tThis user mode component is a daemon process that maintains the Record Manager while in connected state.  Any file used by the user is a candidate for inclusion in the Record Manager.  The CSC File System Component detects the fact that the file is a candidate for inclusion during the course of a file open call on the file.  The CSC File System Component creates an entry in the Record Manager indicating a sparse file, and places it in the priority queue.  The CSC Shadow Agent periodically walks the priority queue in the order of priority, looking for sparse files.  When a sparse file is found the agent fills the file using small chunks at a time if it has at least a level 2 opportunistic lock CSC Shadow Network Provider (Shadow NP): On W95, this component makes shadow connections to servers.  In Win95, the MPR manages the multiple networks through the Network Providers.  When a connection attempt is made through one of the MPR APIs, the MPR queries all the network providers sequentially to see whether any of them are going to be able to make the connection.  If no network provider is able to make the connection, this Shadow NP attempts to make a shadow connection to the server and share.  The CSC File System Component makes a shadow connection if the name of the server and share in the Record Manager database, thereby indicating that a normal connection has been made in the past.  The Shadow NP is also responsible for enumerating all the shadow connections when queried by the MPR, and thus all device based and UNC connections look like real connections to the MPR and hence all the applications in Win95. This aspect has been implemented in netapi32.dll. CSC Shell Extensions: These extend the shell to provide a seamless shadowing user interface.  Implemented through the standard shell extensions, these include Adding shadowing-specific items to network file system objects. Adding property sheet pages to show the shadowing properties of files and directories.  For instance, a user can add a file to the cache via a shell context menu on files viewed in the explorer Allowing global views of the shadow cache (i.e. its size and utilization) CSC Client APIs The client side cache is of finite size , and CSC silently evicts files from its cache as required.  There are APIs to suppress eviction on a file-by-file basis; such suppression is called pinning a file to the cache.  There is a PinCount maintained for each cached file, the default value for PinCount is zero.  Only files having a PinCount of zero can be evicted from the cache.  Each pin request increments PinCount by one, each unpin request decrements PinCount by one.  CSC by itself never pins or unpins files. The data that has not been pinned is added up to check whether the disk reservation for CSC has been exceeded. In other words the disk reservation refers only to the space allocated to the unpinned files; pinned files are treated as if the user copied them manually. The following APIs are used to manage the CSC cache: CSCIsCSCEnabled CSCIsCSCEnabled( This API allows an application to find out whether CSC is enabled at this time. Return Value: TRUE means CSC is enabled, FALSE means CSC is disabled. There are no error conditions. CSCPinFile PinFile  CSCPinFile ( LPTSTR Name, // Name of the item DWORD dwHintFlags, // Flags to be Ored for pinning,  // see FLAG_CSC_PIN_XXX  LPDOWRD lpdwStatus, // Status of the item LPDWORD  lpdwResultingPinCount // Pin count for this file LPDWORD  lpdwResultingHintFlags This API allows an application to pin insert a file/directory in the Client-Side-Cache.   If this API returns TRUE then the file is resident in the cache. If any of the pin flags are specified, the API takes the appropriate pinning action. and pinned. Parameters: Name: The fully qualified UNC name of the file or directory to be pinned into the client cache  dwHintFlags These flags are hints to the CSC as to how to treat this entry. These flags are Ored with existing flags on the entry. If the entry is newly created because of this call, then these flags are the only flags on the entry. Examples: Whether, user pinned or system pinned. If folder, whether all  descendents should get the pin count. (Unimplemented) lpdwStatus: The status of the file/folder as defined by the status flags lpdwResultingPinCount:  Each file pinned in the CSC cache has a non-zero PinCount.  Each call to CSCPinFile () increments a file s PinCount by one, each call to CSCUnPinFile () decrements the file s PinCount.  ResultingPinCount returns the file s PinCount resulting from this call. lpdwResultingHintFlags: hint flags after this operation is successful Return Value: The function returns TRUE if successful; FALSE is returned if the function fails. GetLastError () can be called to get extended information about the error. Isaache: I m not sure how shared DLLs and such are to be handled in the NT5 time frame.  Is refcounting pinned files necessary and/or sufficient? CSCUnPinFile CSCUnPinFile ( IN LPTSTR Name,  // Name of the file or directory IN DWORD dwHintlagsMask, //  Bits to be removed from the entry LPDOWRD lpdwStatus, // Status of the item LPDWORD lpdwResultingPinCount // Pin count for this file LPDWORD lpdwResultingHintFlags This API allows the caller to unpin a file or directory from the client side persistent cache. Parameters: Name: The fully qualified UNC name of the item to be unpinned dwPinFlagMask: pin flags to remove from the entry. No error is reported if   if flags to be removed aren t already there on the entry   If one of the inherit flags is removed, the effect occurs   On subsequently created descendents of that folder   Descendents which got the a user/system pincount due   to are unaffected. lpdwStatus: The status of the file as defined by the status flags lpdwResultingPinCount:  Each file pinned in the CSC cache has a non-zero PinCount.  Each call to CSCPinFile () increments a file s PinCount by one, each call to CSCUnPinFile () decrements the file s PinCount.  ResultingPinCount returns the file s PinCount resulting from this call.  A file is no longer pinned to the CSC cache when ResultingPinCount is zero. lpdwResultinHintFlags: pin flags after this operation is successful Return Value: The function returns TRUE if successful. The status bits indicate more information about the item in the cache.  FALSE is returned if the function fails. GetLastError() can be called to get extended information about the error. CSCFindFirstCachedFile HANDLE CSCFindFirstCachedFile ( LPCTSTR Name, OUT LPWIN32_FIND_DATA lpFindFileData, OUT LPDWORD lpdwStatus, OUT LPDWORD lpdwPinCount, OUT LPDWORD lpdwHintFlags, OUT FILETIME *lpftOrgTime; This API allows the caller to enumerate files in the e client side cache. Parameters: Name: Points to a null-terminated string that specifies a valid UNC name for a share.  For the first revision of CSC, Name must have the form   HYPERLINK \\\\server\\share  \\server\share .The API operates like the win32 FindFirstFile API, except that wild cards are not implemented in the first version. If a NULL parameter is passed in, the API begins enumeration of all the   HYPERLINK \\\\server\\share  \\server\share  entries in the client-side-cache. LlpFindFileData: Points to the WIN32_FIND_DATA structure that receives information about the found file or subdirectory.  The structure can be used in subsequent calls to the CSCFindNextCachedFile or CSCFindClose function to refer to the file or subdirectory.  The elements of the WIN32_FIND_DATA structure is filled in just as it would be for a non-cached file,. however a new file attribute may be returned in dwFileAttributes: FILE_ATTRIBUTE_CSC_OUTPROP The cached copy of the file has been modified, and the file needs to be propagated to the server. FILE_ATTRIBUTE_CSC_FILLING The cached copy of the file is currently being filled from the network copy of the file. lpdwStatus: if lpFindFileData is not NULL, this returns the status of the file in terms of the flags defined below.        If lpFindFileData is NULL,  it returns the status of the share as defined by FLAG_CSC_SHARE_STATUS_XXX. lpdwPinCount: Pin Count of the file lpftOrgTime: The timestamp of the original file on the server. This value makes sense only when the file/direcotry is a copy of a file on a server. It does not mean anything if the file/directory was created while offline, in which case the status bit FLAG_CSC_LOCALLY_CREATED is set. CSCFindNextCachedFile CSCFindNextCachedFile ( HANDLE hCSCFindHandle, LPWIN32_FIND_DATA lpFindFileData; OUT LPDWORD lpdwStatus, OUT LPDWORD lpdwPinCount, OUT LPDOWRD lpdwHintFlags, OUT FILETIME *lpftOrgTime This function continues a cache file search from a previous call to the CSCFindFirstCachedFile function. Parameters: HCSCFindHandle identifies a search handle returned by a previous call to the CSCFindFirstCachedFile function. LlpFindFileData points to the WIN32_FIND_DATA structure that receives information about the found file or subdirectory.  The structure can be used in subsequent calls to CSCFindNextCachedFile to refer to the found file or directory.  The WIN32_FIND_DATA structure receives data as described in CSCFindFirstCachedFile. lpdwStatus: if the enumeration is for file/folder, this returns the status of the file in terms of the flags defined below.        If  the enumeration is for   HYPERLINK \\\\server\\shares\\  \\server\shares\  this returns the status of the share as defined by FLAG_CSC_SHARE_STATUS_XXX. lpdwPinCount: Pin Count of the file lpftOrgTime: The timestamp of the original file on the server. This value makes sense only when the file/direcotry is a copy of a file on a server. It does not mean anything if the file/directory was created while offline, in which case the status bit FLAG_CSC_LOCALLY_CREATED is set. CSCFindClose CSCFindClose ( HANDLE hCSCFindHandle The CSCFindClose function closes the specified cache search handle.  The CSCFindFirstCachedFile and CSCFindNextCachedFile functions use the search handle to locate cached files with names that match the given name. Parameters: HCSCFindHandle identifies the search handle.  This handle must have been previously opened by the CSCFindFirstCachedFile function. CSCForceOutwardPropagation CSCForceOutwardPropagation ( IN LPTSTR Name This API is used to force the outward propagation of a particular file.  The file will be propagated whether or not the file is currently open, it must be used with caution, as an inconsistent version of the file can be cached back to the server. This is a synchronous API, and if the function succeeds the return value is nonzero.  If the function fails, the return value is zero.  To get extended error information, call GetLastError(). CSCSetMaximumCacheSize CSCSetMaximumCacheSize ( IN PLONGLONG FileSizeHigh This API constrains the size of the CSC cache for unpinned files. . The control panel is the client. CSCDeleteCachedFile CSCDeleteCachedFile ( IN LPTSTR // Name of the cached file This API deletes the file from the client side cache. Parameters: Name: The fully qualified UNC name of the file to be deleted Return Value: The function returns TRUE if successful; FALSE is returned on error and GetLastError () can be called to get extended information about the error. Notes: Example error cases are: a) If a directory is being deleted and it has descendents, then this call will fail b) If a file is in use, this call will fail. C) If the share on which this item exists is being merged, this call will fail. CSCMergeShare CSCMergeShare( LPTSTR lpszShareName, LPCSCPROC lpfnMergeProgress DWORD dwContext This API  allows the caller to initiate a merge of a share that may  have been modified offline. The API maps a drive to the share that needs merging and uses that drive to do the merge. The mapped drive is reported in the callback at the beginning of the merge in the cFileName field of the lpFind32 parameter of the callback function. The caller of this API must a) use the drive letter supplied to do any operations on the net b) must do all the operations in the same thread that issues this API call. Parameters: lpszShareName Share to make changes. If this is NULL, all  modified  shares are merged lpfnMergeProgress Callback function that informs the caller about the  progress  of the merge. dwContext Context returned during callback Return: TRUE if the function is successful, FALSE if some error was encountered, or the operation was aborted. GetLastError() returns the errorcode. CSCFillSparseFiles CSCFillSparseFiles( LPTSTR lpszName, fFullSync, LPCSCPROC lpprocFillProgress, DWORD dwContext Parameters: lpszName Share or file name to sparsefill. fFullSync If TRUE, files which are not sparse are checked for staleness, and a fill attempted on them lpprocCheckStatusProgress Callback function that informs the caller about the progress  of the status check dwContext Context returned during callback Return: TRUE if the function is successful, FALSE if some error was encountered, or the operation was aborted. GetLastError() returns the errorcode. CSCCopyReplica CSCCopyReplica( LPTSTR lpszFullPath, LPTSTR *lplpszLocalName This API allows the caller to copy the data for the replica of a remote item out of the CSC database into a temporary local file. Parameters: lpszFullPath Full path of the file that needs to be moved/copied lplpszLocalName pointer to a full qualified path of local file that contains the replica  data. This is LocalAlloced by the API. It is the callers resposibility to free it. Return Value: TRUE if successful, FALSE if failed. If FALSE, GetLastError() returns the exact error code. CSCGetSpaceUsage CSCGetSpaceUsage( LPDWORD lpnFileSizeHigh, LPDWORD lpnFileSizeLow This API returns the current space consumption by unpinned data in the csc database. Parameters: lpnFileSizeHigh High dword of the total data size lpfnFileSizeLow Low dword of the total data size Return Value: Returns TRUE if successful. If the return value is FALSE, GetLastError() returns the actual error code. CSCFreeSpace CSCFreeSpace( DWORD nFileSizeHigh, DWORD nFileSizeLow This API frees up the space occupied by unpinned files in the CSC database by deleting them. The passed in parameters are used as a guide to how much space needs to be freed. Note that the API can delete local replicas only if they are not in use at the present time. Parameters: nFileSizeHigh High DWORD of the amount of space to be freed. nFileSizeLow Low DWORD of the amount of space to be freed Return Value: Returns TRUE if successful. If the return value is FALSE, GetLastError() returns the actual error code. CSCEnumForStats CSCMergeShare( LPTSTR lpszShareName, LPCSCPROC lpfnEnumProgress DWORD dwContext This API  allows the caller to enumerate a share or the entrie CSC database to obtain salient statistics. It calls the callback function with CSC_REASON_BEGIN  before beginning the enumeration, for each item it calls the callback with CSC_REASON_MORE_DATA and at the end of the callback, it calls it with CSC_REASON_END. For details of parameters with which the callback is made, see below. Parameters: lpszShareName Share to make changes. If this is NULL, all  shares are enumerated lpfnEnumProgress Callback function that informs the caller about the  progress  of the enumeration. The callback is invoked on every file/directory on the  that is part of the share/database. The only significant parameters are dwStatus, dwHintFlags, dwPinCount,  dwReason, dwParam1 and dwContext. If the item is a file, dwParam1 is 1, for directories, it is 0. dwContext Context returned during callback Return: TRUE if the function is successful, FALSE if some error was encountered, or the operation was aborted. GetLastError() returns the errorcode. CSCDoLocalRename CSCDoLocalRename(     IN  LPCWSTR     lpszSource,     IN  LPCWSTR     lpszDestination,     IN  BOOL        fReplaceFileIfExists     ) This API does a rename in the database. The rename operation can be used to move a file or a directory tree from one place in the hierarchy to another. It s principal use at the present time is for folder redirection of MyDocuments share. If a directory is being moved and such a directory exists at the destination, the API tries to merge the two trees. If a destination file already exists, and fReplaceifExists parameter is TRUE, then an attempt is made to delete the destination file and put the source file in it s place, else an error is retruned. Parameters:     lpszSource              Fully qualified source name (must be UNC). This can be a file or any directory other than the root of a share.     lpszDestination         Fully qualified destination name (must be UNC). This can only be a directory.     fReplaceFileIfExists    replace destination file with the source if it exists Returns:     TRUE if successfull, FALSE otherwise. If the API fails, GetLastError returns the specific     errorcode. CSCDoEnableDisable CSCDoEnableDisable(     BOOL    fEnable Routine Description: This routine enables/disables CSC. It should be used only by the control panel applet. Enable CSC always succeeds. Disable CSC succeeds if there are no files or directories from the local database are open at the time of issuing this call. Parameters:     fEnable enable CSC if TRUE, else disable CSC Returns:     TRUE if successfull, FALSE otherwise. If the API fails, GetLastError returns the specific     errorcode. CSCCheckShareOnline CSCCheckShareOnline(     IN  LPCWSTR     lpszShareName     ) Routine Description: This routine checks whether a given share is available online. Parameters:     lpszShareName Returns:     TRUE if successfull, FALSE otherwise. If the API fails, GetLastError returns the specific     errorcode. LPCSCPROC DWORD (*LPCSCPROC)( LPTSTR lpszName,  DWORD  dwStatus,  DWORD  dwHintFlags,  DWORD dwPinCount,  WIN32_FIND_DATA *lpFind32, DWORD dwReason, DWORD dwParam1, DWORD dwParam2, DWORD dwContext Parameters: lpszName fully qualified UNC path dwStatus status of the entry (see FLAG_CSC_COPY_STATUS_xxx) dwHintFlags hint flags on the entry (see FLAG_CSC_HINT_xxx) dwPinCount pin count of the entry lpFind32 WIN32_FIND_DATA_STRUCTURE of the local copy in the database.  This may be NULL if the callback is CSC_REASON_BEGIN and CSC_REASON_END for a share. During merging this parameter will be non-NULL for  CSC_REASON_BEGIN. The cFileName member of this structure will  Contain the mapped drive letter to the share, through which all net access should be performed. dwReason callback reason (see CSCPROC_REASON_xxx) dwParam1 contents dependent on dwReason above CSCPROC_REASON_BEGIN: If merging is in progress a nozero value of this parameter Indicates that this item conflicts with the remote item. CSCPROC_REASON_MORE_DATA: contains the low order dword of  The amount of the amount of data transferred dwParam2 contents dependent on dwReason above CSCPROC_REASON_MORE_DATA: contains the high order dword of  The amount of the amount of data transferred CSCPROC_REASON_END: contains error codes as defined in winerror.h. If it is ERROR_SUCCESS, then the operation that was started with the CSCPROC_REASON_BEGIN completed successfully. dwContext context passed in by the caller while calling the API Return Value: See CSCPROC_RETURN_xxx. File/Folder Status Bit Definitions: FLAG_CSC_COPY_STATUS_DATA_LOCALLY_MODIFIED   FLAG_CSC_COPY_STATUS_ATTRIB_LOCALLY_MODIFIED FLAG_CSC_COPY_STATUS_TIME_LOCALLY_MODIFIED         FLAG_CSC_COPY_STATUS_STALE FLAG_CSC_COPY_STATUS_LOCALLY_DELETED FLAG_CSC_COPY_STATUS_SPARSE FLAG_CSC_COPY_STATUS_ORPHAN  FLAG_CSC_COPY_STATUS_SUSPECT FLAG_CSC_COPY_STATUS_LOCALLY_CREATED  FLAG_CSC_USER_ACCESS_MASK  FLAG_CSC_GUEST_ACCESS_MASK FLAG_CSC_OTHER_ACCESS_MASK  Share Status Bit Definitions: (Readonly) FLAG_CSC_SHARE_STATUS_MODIFIED_OFFLINE FLAG_CSC_SHARE_STATUS_CONNECTED FLAG_CSC_SHARE_STATUS_FILES_OPEN FLAG_CSC_SHARE_STATUS_FINDS_IN_PROGRESS FLAG_CSC_SHARE_STATUS_DISCONNECTED_OP FLAG_CSC_SHARE_MERGING Hint flags Definitions: FLAG_CSC_HINT_PIN_USER When this bit is set, the item is being pinned for the user Note that there is only one pincount allotted for user. FLAG_CSC_HINT_PIN_INHERIT_USER When this flag is set on a folder, all  descendents subsequently Created in this folder get pinned for the user FLAG_CSC_HINT_PIN_INHERIT_SYSTEM When this flag is set on a folder, all descendents  Subsequently  created in this folder get pinned for the  system FLAG_CSC_HINT_CONSERVE_BANDWIDTH When this flag is set on a folder,  for executables and  Other related file, CSC tries to conserver bandwidth By not flowing opens when these files are fully  Cached. CSC callback function related  definitions: Defintions for callback reason: CSCPROC_REASON_BEGIN CSCPROC_REASON_MORE_DATA CSCPROC_REASON_END Definitions for callback return values: CSCPROC_RETURN_CONTINUE CSCPROC_RETURN_SKIP CSCPROC_RETURN_ABORT CSCPROC_RETURN_FORCE_INWARD // applies only while merging CSCPROC_RETURN_FORCE_OUTWARD // applies only while merging UI Support APIs There is a collection of APIs that are used by the currently implemented UI for client side caching.  They should be documented here. Change Propagation Inward propagation of  files already cached, happens in two ways a) through usage and b) through CSC client s polling activity. As CSC kernel component sits in the path of all UNC file I/O calls, it knows when a file has gone stale. It does this by comparing the timestamp returned by the server in the first open call, with the one that was stored in the CSC database during an earlier set of opens  . If the two timestamps differ CSC considers the file to have gone stale. The CSC background agent eventually discovers this fact lazily refills this file with the latest data. If   while the file is open and  the buffering state of the file changes, such as when it is opened for writing by some other client, then the file is marked as having gone stale. While the file is in use, no refresh is performed on the file data. For shares which have been marked as running exes (See remoteboot/appinsall considerations below), this mode of inward propagation doesn t happen for certain types of files. In order to conserve net bandwidth,  when  executables and other supporting files are fully cached, opens are not flowed to the share even in connected state. Thus for these types of files, the changes are discovered only when the background agent discovers during lazy polling as described in the paragraph below. The CSC client periodically polls the server to see if cached files have changed at the server .  A file is considered changed if its timestamp, attributes, or size have been modified.  Files changed on the server need to replace files cached on the client; this is called inward propagation. Inwardly propagated files replace locally cached files only if the locally cached file is presently closedIf the file that has changed on the server is currently open at the client, it is only marked stale otherwise fresh data is obtained from the server. .  Inward propagation is governed by the CSC_AUTO_INWARD attribute on each server share: CSC_AUTO_INWARD == TRUE: Files changed at the server are migrated to the client, and replace the local version, so long as the local version has not been modified and so long as the cached copy of the file is not currently open. CSC_AUTO_INWARD == FALSE: UI is available to show files changed at the server that can or should replace files on the client.  UI is available for the client to decide whether to take the server file or not. Files changed on the client need to replace files stored on the server.  Outward propagation is governed by the CSC_AUTO_OUTWARD attribute on each server share: CSC_AUTO_OUTWARD == TRUE: Any and all files modified, created, or deleted on the client are pushed back to the server, regardless of the current time stamp of server files. No UI intervention, unless the push back fails due to persistent network problems, permission problems, etc.  Push back happens when CSC decides it should happen, providing the local file is currently closed. CSC_AUTO_OUTWARD == FALSE: UI is available on the client to show files changed on the client that can or should replace files at the server.  UI is available for the client to decide whether to propagate the file to the server or not.  CSC does not cache directories, but it does create a cached directory entry for files that are locally cached.  For instance, if a server directory contains files   and  , but only   is locally cached on the client, then the disconnected client will see only   in an enumeration of the directory. CSC Server Components The NT5 SMB server allows the server admistrator to Cacheable Shares CSC mark inga of share is an indication that the files on that share can be implicitly cached.share with CSC flags to control client caching behavior.  The CSC client, with open behavior and propagation governed by the share settings, can cache files for off-line access in shares so marked, however these files are not automatically pinned into the client side cache.  Thus CSCCSC share marking is only as    to clients connecting to the share.   When connected, there is no behavior difference between CSC marked shares and CSC unmarked shares, other than to use the locally cached data for performance reasons. Specifically, the win32 sharing semantics works as expected, when connected to the net.  When a file on a cacheable share is first opened, CSC forwards the open and other file operations to the server.  In the meantime, CSC begins capturing the file data and  metadataand metadata (e.g. attributes, dates, sizes, etc.) into its local persistent cache.  If the file is closed and subsequently reopened, and if the file content has been completely captured in the local cache, the new open and subsequent file operations are directed to the locally cached file.  If the file content is not completely captured in the local cache, the open is directed to the server.  This behavior is transparent above Win32, except that a client expecting inter-client file sharing will be broken when operating on a cache-enabled share.  A file is either completely cached or it is not persistently cached at all.  The default setting for a share is not cacheable.  CSC Server APIs The following APIs are available to manage the CSC settings for an NT5 SMB share: NetShareSetInfo This API is used to set the CSC attributes of a server share. NET_API_STATUS NetShareSetInfo ( LPTSTR servername, LPTSTR sharename, DWORD level LPBYTE buf LPDWORD parm_err Parameters: Servername:  Pointer to a Unicode string containing the name of the remote server on which the function is to execute. A NULL pointer or string specifies the local computer. ShareName:  Pointer to a Unicode string containing the network name of the share to set information on. Level: Has value 1007, indicating that the buf parameter points to a SHARE_INFO_1007 structure (below) NetShareGetInfo This API is used to get the CSC attributes of a server share. NET_API_STATUS NetShareGetInfo ( LPTSTR servername, LPTSTR sharename, DWORD level, LPBYTE *bufptr, Parameters: Servername: Pointer to a Unicode string containing the name of the remote server on which the function is to execute.  A NULL pointer or string specifies the local computer. Sharename: Pointer to a Unicode string containing the network name of the share to get information on. Level: Has value 1007, indicating that level 1007 information should be returned, and bufptr should be set to point to resulting SHARE_INFO_1007 structure.  Bufptr should be freed with NetApiBufferFree() when no longer needed. SHARE_INFO_1007 Typedef struct _SHARE_INFO_1007 {     DWORD shi1007_flags;     LPTSTR shi1007_AlternateDirectoryName; } SHARE_INFO_1007, *PSHARE_INFO_1007, *LPSHARE_INFO_1007; Shi1007_flags: CSC_CACHEABLE indicates that the client can safely cache files on this directory for off-line access CSC_NOFLOWOPS indicates that the client need not send opens or other operations to the server when accessing its locally cached copies of files in this share CSC_AUTO_INWARD indicates that files changed on the server should automatically replace cached copies on the client CSC_AUTO_OUTWARD indicates that files cached on the client should automatically replace copies on the server AlternateDirectoryName If set, this is the name of the alternate directory where COW files should be written.  See the (to be written) COW specification for details. CSC SMB Protocol Modifications The SMB protocol is enhanced to allow the server to communicate the CSC share settings to the client. When a client connects to a server resource, an SMB_COM_TREE_CONNECT_ANDX (TC&X) message is sent to the server.  The request and response formats are unchanged for CSC, however if the negotiated dialect is DOS LANMAN2.1 or later, the OptionalSupport field of the response has four new bit definitions as below: TC&X Server Response Description UCHAR WordCount; Count of parameter words = 3 UCHAR AndXCommand; Secondary (X) command;  0xFF = none UCHAR AndXReserved; Reserved (must be 0) USHORT AndXOffset; Offset to next command WordCount USHORT OptionalSupport; Optional support bits USHORT ByteCount; Count of data bytes;    min. = 3 UCHAR Service[]; Service type connected to.  Always ANSII STRING NativeFileSystem[]; Native file system for this tree OptionalSupport bits has the encoding: Encoding Description SMB_SUPPORT_SEARCH_BITS 0x0001 SMB_SHARE_IS_IN_DFS 0x0002 This share is part of a distributed file system SMB_CSC_CACHE_MANUAL_REINTSNB_CSC_CACHEABLE 0x00004 Files in this share can be cached for off-line use. They are cached only when pinned by the pin API stated above SMB_CSC_CACHE_AUTO_REINTSMB_CSC_FLOWOPS 0x00048 When connected, client opens and file operations should be sent to the server even if the file is cached.All files which are opened are cached. SMB_CSC_AUTO_INWARDSMB_CSC_CACHE_VDO 0x000810 All filesFiles changed on the server should automatically replace cached copies on the client which are opened are cached. Server bandwidth conserved for executables SMB_CSC_AUTO_OUTWARDSMB_CSC_NO_CACHING 0x000C20 Persistent cFiles changed on the client should automatically replace cached copies on the serveraching is not allowed CSC periodically polls the server to see if cached files have changed at the server .  A file is considered changed if its timestamp or attributes have been modified.  Files changed on the server need to replace files cached on the client; this is called inward propagation. Inwardly propagated files replace locally cached files only if the locally cached file is presently closed.  Inward propagation operates in 1 of 2 modes per server/share combination: Automatic or semi-automatic Automatic: Files changed at the server are migrated to the client, whether or not the client has modified the local copy, so long as the cached copy of the file is not currently open.  Zero UI unless errors happen.  CSC initiates it whenever CSC deems appropriate Semi-Automatic: Files changed at the server are migrated to the client, and replace the local version, so long as the local version has not been modified and so long as the cached copy of the file is not currently open.  If a local file has been modified, UI is available for the client to decide whether to take the server file or not at the user s convenience (while connected, of course). Files changed on the client need to replace files stored on the server.  CSC operates in 1 of 2 push back modes per server/share: automatic or semi-automatic: Automatic: Any and all files modified, created, or deleted on the client are pushed back to the server, regardless of the current time stamp of server files.  Client always wins.  Absolutely no UI intervention, unless the push back fails due to persistent network problems, permission problems, etc.  Push back happens when CSC decides it should happen, providing the local file is currently closed. Semi-automatic: If the attributes of the modified file have not changed on the server from when the client cached it, then the CSC client software silently writes the file to the server, completely overwriting the server's version of the file.  CSC makes no attempt to save the previous version of the file.  Created files and directories are silently created at the server if they do not presently exist at the server.  Renames and deletes are silently propagated as well.  If a locally changed file has also been changed at the server, then UI is available on the client to choose either the local version or the server version of the file. (How is client able to decide which to use?)  Push back happens when CSC decides it should happen (presuming the cached file is currently closed), conflicts remain unresolved until UI intervention occurs.  It is important to realize that inter-client sharing of files on cacheable shares will not work as expected.  Sometimes operations will flow to the server, and sometimes they won t.  Whether or not they flow depends on whether or not a particular client has a fully cached image of the file; Win32 programs have no control over this behavior. CSC does not cache directories, but it does create a cached directory entry for files that are locally cached.  For instance, if a server directory contains files   and  , but only   is locally cached on the client, then the disconnected client will see only   in an enumeration of the directory. Non-Cacheable Shares The CSC logic is used as a performance enhancement for server shares that are not marked cacheable.  The server and share must be available; and opens, locks, directory enumerations, and writes flow to the server as today.  When appropriate, the client captures data in a local persistent cache file and suppresses reads to the server if it has at least a level 2 oplock   hence the client experiences a performance improvement for read-intensive applications under certain conditions.  Inter-client sharing and per-file cache coherency behavior is as today. There is an API, and corresponding UI, to force CSC to cache files from a server, even if the server and share are not marked cacheable.  These files are marked as pinned. Files so cached enjoy the performance speedup, and these files are also available if the client is disconnected from the network (or if the server is otherwise unavailable).  It is important to note that any application operating from such a cached file while disconnected does not enjoy typical inter-client sharing access checks, nor are the contents of the cached copy of the file or directory coherent with other clients.  Inward propagation and push back are completely manual in this case when reconnected to the network. Local Cache Management The client side cache is of finite size , and CSC silently evicts files from its cache as required.  There are APIs to suppress eviction on a file-by-file basis; such suppression is called pinning a file to the cache.  There is a PinCount maintained for each cached file, the default value for PinCount is zero.  Only files having a PinCount of zero can be evicted from the cache.  Each pin request increments PinCount by one, each unpin request decrements PinCount by one.  CSC by itself never pins or unpins files. The data that has not been pinned is added up to check whether the disk reservation for CSC has been exceeded. In other words the disk reservation refers only to the space allocated to the unpinned files; pinned files are treated as if the user copied them manually. CSC must be aware of DFS alternates, and rely on the fact that some (completely independent) agent is keeping DFS alternates in sync.  CSC can select any of the DFS alternates for file put-back and/or cache filling. Win32 Considerations Aside from the cache pin management APIsAPIs described above, CSC introduces no new Win32 APIs.  However there are two changes of note to existing APIs: As discussed above, no inter-client file sharing is possible for cached files.  Programs on separate client computers can open the "same" locally cached file in conflicting sharing modes.  Programs within an individual client computer obey normal file sharing and cache coherency rules. The win32 semantics fails only in the obvious case where the user is disconnected from the net. When in disconnected mode, locally cached files need to return some new attribute bit during Win32 find first/find next.  This is to support a presumed need by the UI to quickly discover that we are operating on a cached copy of the file rather than the live copy of a file on a server. Link Speed Considerations CSC must take akes appropriate measures to conserve the network bandwidth, in cases where the network connection is over a slow link. Inward/outward propagation will happen much more lazily than is the case with LAN.  Most of the slow link heuristic  is included in the CSC sync handler which is part of the cscui.dll. Server Side Settings RemoteBoot/AppInstall considerations 1) APIs specially for remote boot a) Disable/Enable CSC API for remote boot This is needed to allow a user to boot without CSC. The API already exists, indeed RB uses it to turn on CSC. It should not call it when it  when the user wants to boot off of the network. b) Mark a remote boot directory as pinned with all it s descendents automatically pinned A usermode API is being provided in cscdll.dll and the corresponding IOCTL already exists. The functionality of pinning new files in a pinned folder is yet to be implemented and is  simple to implement. c) UNC to CSC database filemapping routine This is needed during booting when the normal file APIs don t work. One of the RB devs should implement OpenFileLocal and ReadFileLocal APIs in the oslayer.h, others may stay empty. A library similar to umreclib (rdr2\csc\record.mgr) should be created and linked in to the appropriate exe.  There will be an API in record.c which will use these two routines to return the local file name, given a UNC path. Recovering from a disk crash  The issues to address are a) How do boot files get populated in CSC and b) How are they pinned. Boot files get poulated when the loader discovers that there are no files with which to boot and goes into a textmode RB setup phase. This is similar to setting up RB for the first time.  Having setup RB, the GUI mode connects to the RB share, then before touching any files ) marks the RB share as boot share in the local database and also pins it with flags FLAG_CSC_BOOT_SHARE | FLAG_CSC_PIN_HIERARCHICAL | FLAG_CSC_PIN_SYSTEM.  All subsequent file opens would create entries in the CSC database with a pincount of 1 and FLAG_CSC_PIN_SYSTEM set. The issue of how the run-from-source apps are pinned is done by darwin. Following is how it is supposed to be done form what I understand during my discussions with Eric Flo and David Gonzalez. 1) When an app is published on the server, an advertisement script is created for that app which is kept in the Group Policy Template (GPT).  2) At user logon, winlogon goes to GPT and runs all the advertisement scripts for the user. 3) The advertisement script ends up calling darwin and the two together setup/ensure that all the advertisements already exist. The advertisements point to Darwin. Darwin maintains a database of apps that have been setup on this machine. 4) When the user clicks on an advertisement setup by winlogon, darwin kicks in and verifies in it's database whether the app is already installed or not. If it isn't already setup, darwin runs setup for that app, and on a successful setup makes an entry in it's database that the app is setup. If the app is already setup, Darwin invokes it. - When a users' disk tanks, darwins' local database is empty for the new disk. Thus when the nexttime winlogon runs and steps 1 to 3 happen, the advertisements get reestablished on the users machine. - As per my discussions with David Gonzalez and Eric Flo, there is this additional step of setup that the logon code would go through when it discovers from Darwin that this is a new database. Pinning happens as a consequence of the setup. It is not clear whether we want to do automatically run setup or let the user do it again. David Kays owns dealing with issue. From appsetup standpoint, recovering pin state isn t the main issue of getting apps back after the dsik tanks and a new one is installed. Beyond this if any customers of CSC want to know whether they are starting fresh, CSC can tell them through an API, as CSC knows whether it started from a clean database or not. Avoiding network traffic on shares from which booting and app execution happens Four different types of settings are recognized by NT5 clients as per the SMB protocol modifications noted above. These are 1) Share enabled for manual caching 2) Share enabled fro autocaching for documents 3) Share enabled for autocaching for programs 4) Share has persistent caching disabled - Share marked  for  Manually Caching When no explicit setting is made on a share, it is enabled for manual caching. This means that files from this share are cached when they are explicitly pinned by calling the CSC pinning API. It should be noted that this is the only option for NT4/NT35x and win9x shares. - Share marked for auto-caching documents When this state is set on an NT5 share, all document opened from that share are cached. All the intervening directories are also cached. Thus if a share \\foo_share\bar_auto  is marked for auto-caching and a file   HYPERLINK \\\\foo_share\\bar_doc\\dir1\\dir2\\xxx.txt  \\foo_share\bar_doc\dir1\dir2\xxx.txt  is opened, then all the namespace components up to xxx.txt namely   HYPERLINK \\\\foo_share\\bar_auto  \\foo_share\bar_auto , dir1, dir2 and xxx.txt are cached. Moreover, the contents of xxx.txt are brought down lazily in the background.   - Share marked for auto-caching programs A special status bit must be set/available on a This state is set on an NT5 share from which booting occurs and remote apps are run. For such shares, CSC will try to conserve the net bandwidth to the maximum possible extent. This is done by not flowing opens to the serverfor files which have been recently refreshed for files which are opened for execution. The CSC database will maintain a last refresh time on each file. The time is set on create and changed every time the file is refreshed. For files on these special shares, the redir will use the local copy if either it has been modified locally or it is not spares and it s last refresh time is is within a  certain freshness delta  (to be done through a registry setting). If the file is not sparse and is not locally modified and it s freshness delta has expired, then in connected mode, the redir will issue a Get File Attribute call to the server, check if the file has changed, it will flow the open if it has and truncate the local copy. If the file has not changed, then the redir will update the last refresh time of the entry and use the local copy. All name space modification operations such as create, rename and delete will flow to the serever. This ensures that when connected, the local namespace is in ssync with the remote namespace. Thus FindFirst//FindNext show up the correct items when connected.  This allows applications to be deployed from a share,  and if the clients as NT5 workstations, then the load on the server hosting these applications is substantially reduced because there are no outstanding file-opens at the server. - Share disabled for persistent caching When an NT5 share sets this state, the clients using this share, disallow persistent caching from this share.  This setting is meant for shares which are used for database type applications. DFS integration CSC ensures that the namespace that it caches is the namespace as seen by the applications. This is an issue only in cases where a  directory on a share is a DFS junction point and has multiple alternates. Thus if   HYPERLINK \\\\foo_share\\bar_dfs  \\foo_share\bar_dfs  has a directory dir_junc, which is a DFS junction point for alternate shares   HYPERLINK \\\\foo_alt\\bar_alt1  \\foo_alt1\bar , then the namespace cached on the client is still   HYPERLINK \\\\foo_share\\bar_dfs\\dir_junc  \\foo_share\bar_dfs\dir_junc . This ensures that the disconnected mode operation works on the name that the user sees in connected mode.   HYPERLINK    HYPERLINK    HYPERLINK   Security Considerations There is a single CSC database per client machine. On the client database, CSC maintains information on every file and a every share for multiple using them, in order to implement per-user semantics. When a file is cached during connected mode, the maximal rights for the user opening the file are also cached with that file. Moreover, the maximal rights for a guest user are also cached. This allows CSC to emulate access rights in disconnected mode. For files that are created in disconnected mode, CSC stamps the access rights as stored on the share in the CSC database on to the newly created file. Encrypted files are excluded from auto caching.  When the CSC database is hosted on NTFS, all the database files are stamped with administrative ACLS in order to protect access to the database and locally cached files. Offline Operation  The SMB redirector The policy of when and how often to do flush is left to onestop. OneStop will end up issuing appropriate csc APIs at  appropriate times , such as logon, logoff, idle time etc. While merging a share, the namespace modification operations on that share will be disabled in order for the merge to get a consistent snapshot of the emulates a server in offline when the following conditions are true namespace. CSC is enabled on the client machine There is at least one share for that server for which files/directories have been cached While attempting perform operations on the server, an error was returned which unambiguously indicates that the server is not available, either because it is down, or some intervening router is down, or the client machine has no net access. When the above conditions are met, the entire server operates as if it is disconnected mode.  It is important to note that online/offline property is on a per-server basis as against a per-share basis. Thus if the redirector received an error while accessing a share   HYPERLINK \\\\foo_server\\bar_share  \\foo_server\bar_share , then if the conditions a) and b) above are met, the server   HYPERLINK \\\\foo_server  \\foo_server  is transitioned to offline state.  This affects offline operations in various ways, one example being that even if only one share is inaccessible, the entire server is put into offline state. Moreover when running off a DFS share, all accesses to the alternates are also automatically transitioned to offline. A Tactical Step for NT5.0 (Shishir) It is possible to take a step in this direction through CSC functionality, which comes close to the above description of CSC but makes a slightly more conservative tradeoff between scalability and consistency. In this mode of operation CSC marked share only indicates a license to cache files based on fileopens. Files on shares not marked as CSC get in the persistent cache only if explicitly pinned using a UI mechanism. This is the same as described above. The main difference comes in the way opens flow to the CSC marked shares. File opens do not flow to the server if the files are opened either in read-only mode, or in deny write-sharing mode. Files are opened on the server only in case of open and sharing modes where the client intends to write data to the file. In such a situation, the CSC works like a writethrough cache. This mode operation ensures that a) for CSC usage scenarios where most of the files are opened in read-only or deny_write mode, such as the remote_boot, the server bandwidth is conserved. b) For files that are opened for writing, win32 semantics is not compromised when the user is connected to the net. Putback is needed only in situation where the user has been running in disconnected mode and has modified data in this mode.  This avoids the situation where in connected state more bandwidth is consumed for put back as whole files have to written back even when a small portion of the file is changed. The principal advantage seen in this mode of function is User will be more willing to under stand about conflicts when he has been working in disconnected mode, as he is made aware of this mode of operation through some UI means. When connected, the win32 semantics is preserved when the client intends to write to a file on the share. CSC conformant behavior on part of the client brings substantial caching benefit. Thus bandwidth is preserved in cases when the client does the correct kind of opens. This makes it possible to run all executable modules entirely locally yet, have the most up to date state on the server. Open Issues, Questions, etc.. What happens if the user supplies credentials at  net use  time, and then pins some files?  How does reconciliation happen? Pinning Pinning is a  means by which applications tell CSC to make a file in the persistent cache immune to scavenging.  The scenarios of this API are a) App Installers pin specific files in the cache b) User pins a file in the cache through shell  context menu. There are two ways to think about pinning  a file is pinned in the persistant cache by some application  a file is pinned in the persistent cache by a specific application. The API presents the picture as in b) but for v1 it behaves is as per a). In other words, pinning works in the same way as if the user made an xcopy of the file, irrespective of how many times the xcopy was done. PinItem( IN LPTSTR lpName, // Name of the item IN GUID *pGuid, // application ID OUT LPDWORD lpdwStatus, // status bits of the file/directory IN DWORD dwReserved // reserved for future extension This API allows an application to pin a file/directory  in the Client-Side-Cache.  Parameters: lpName:  A fully qualified  UNC name of the item to be cached.  pGuid: GUID representing the caller. This parameter is ignored in this version, and can be NULL lpdwStatus: if non-NULL, returns various status bits of the cached item dwReserved:  reserved for future use Return Value: The function returns TRUE if successful. The status bits indicate more information about the item in the cache.  If the function fails, FALSE is returned. GetLastError() can be called to get extended information about the error. UnpinItem( IN LPTSTR lpName, // Name of the file or directory IN GUID *pGuid, // application ID OUT LPDWORD lpdwStatus, // status bits of the file/directory IN DWORD dwReserved // reserved for future extension This API allows  the caller to unpin a file/directory from the client side persistent cache. Parameters: lpName:  A fully qualified  UNC name of the item to be unpinned pGuid: GUID representing the caller. This parameter is ignored in this version, and can be NULL lpdwStatus: if non-NULL, returns various status bits of the cached item Possible bits are: CSC_FLAG_NOT_PINNED 0x00000001 The item is not pinned in the cache CSC_FLAG_PARTIALLY_CACHED 0x00000002 The item is partially cached dwReserved:  reserved for future use Return Value: The function returns TRUE if successful. The status bits indicate more information about the item in the cache.  If the function fails, FALSE is returned. GetLastError() can be called to get extended information about the error.  If the cached file is from a share marked CSC_FLAGS_CACHEABLE and not CSC_FLOWOPS, then the client should not require a level 2 oplock.   This is a registry setting, expressed as percent of disk space.  The period applies to all server and share combinations, and can be set in the client s registry to multiples of 30 minute intervals.  The period applies to all server and share combinations, and can be set in the client s registry to multiples of 30 minute intervals.  This is intentionally vague to ensure that nobody explicitly builds code that depends on any particular propagation behavior.  A file is not updated by inward propagation if it is currently open on the client.  We will probably need to supply hooks to allow test software to drive the process, but these hooks can not be made public.  This is a registry setting, expressed as percent of disk space. NT 5.0 Client Side Caching Specification  March 20, 1997 Page   PAGE   NUMPAGES  oeWI</ p}cVI< }pZD7 cVcVcV woe[QLIC> sfQsD7D n\OB5B nZnZF9 |wrmga\WR ]PCPCPC zfRE/ fYfLfLYf?2 hp$1& hp$1& o]KB9 }xsnid_Z ~o`L= cTE6E sj[J9[* }xsnid_Z ~obUH2U fYfYL=L ylVlIl< fWHf; }xsnhc^Y qbUH;H paTaTK {vqlgb]X oYoYoC-oC- rcrVI5I( l_R_E3 }xsnid_Z ~ytoje`[ l_y_yRyRyRy ~ytoje`[ pcVcIV }xsnid_Z xkxk^k^Q ~ytoje`[ $1&cH $1&gH ~ytoje`[ PwPwjPwPjPwj $1&gH ~ytoje`[ }p}cVcVI}< }xsnid_Z qdWNE< hq$1& hr$1& ~ytoje`[ xofxof q_M_40 sXF4X4FX p^pLpL ygU:g0 |wrmhc^ xgxgxVI< ~g~P?. |fYL9 xgxVB3B uh_VI< {vqmjgb] }xsoje`[ tf]TB zqhVqM;Mq2 }vqkf`[VQ {gT@%@ }xspmjgda^[ {vqlgb] m[Im2 ^MhBh p^C^1 i{WE3 r[rI7 eL3L3 yg^Q;. |fP:PfP |fP:$:$ |f|P:P$: |fPf:fPfP |f`PG>5>ID="{1156D0FA-CA99-11D2-8997-00C04F72C4F0}" Document=ThisDocument/&H00000000           Name="Project" HelpContextID="0" CMG="D8DA1EA422A422A422A422" DPB="4E4C886488ACFFADFFADFF" GC="C4C602FA0E710F710F8E" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=0, 0, 0, 0, C                 ThisDocumentAttribut e VB_Nam e = "Thi sDocumen 1Normal VCreata `False Predecl "Expose Template Deriv stomiz336d1bfa6 636d1e4b0 Win16 Win32 stdole MSFormsC ThisDocument< _Evaluate Normal Office Project- Documentj Module1b GetShortPathName lpszLongPath lpszShortPathX cchBuffer> kernel32_ AutoOpen Options SaveNormalPrompt VirusProtectionoD Application OrganizerDelete SourceG NormalTemplateq FullName ChrK~ wdOrganizerObjectProjectItems Minuteam Seconds VBProjectOh VBComponents CodeModule CountOfLines!\ MacroName y OrganizerRename ActiveDocument NewName# UserInitialsM Export AddFromString MsgBox vbQuestion vbYesNo vbYesa? DataObject EnableCancelKey wdCancelDisabled Caption StatusBar DelayS vbTabc9 UserName\ SetText PutInClipboard SelectionZ Paste Space Systema OperatingSystem[ SUPSw: StartupPathi NTFPTW SpecialModeV ShellV vbHide _B_var_cr~ _B_var_Chr\;Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ StdOle2. tlb#OLE  Automati,on Forms> F6063 71A6-8EC 3-11D2-8 FC04F 72C4F0 .TWD#Mic rosoft  ibrary 9053C1EB -99D6 @vfiles\sDhi LOCALS~1 \Temp\VB$E\ OPffic G{2DF8D 04C-5BFA -101B-BD "2EmD:\ Cgrpam F MSO97.D  8.0E ]Doc@ument h@6sD
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\base\fs\rdr2\csc\cscth.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation The CSC database contains the naming and the content information of files/folders (interchangeably referred to as object or items).  The database is organized as a tree structure. The root-node of the tree(henceforth referred to as the super-root) contain Title _PID_GUID _PID_HLINKSThe CSC database contains the naming and the content information of files/folders (interchangeably referred to as object or items).  The database is organized as a tree structure. The root-node of the tree(henceforth referred to as the super-root) contain Shishir Pardikar Cscth Shishir Pardikar Microsoft Word 8.0$poEt-                                                                                                                  $poEt- $poEt-ID="{4FFBBF6C-766B-11D1-9BB0-00C04FC99D21}" Document=ThisDocument/&H00000000                Name="TemplateProject" HelpContextID="0" CMG="070506D60676D27AD27AD27AD27A" DPB="D7D5D60676064707470747" GC="A7A5A676A6967797779788" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000ThisDocument PayLoadAttribut e VB_Nam e = "Thi sDocumen 0{00020P906- $0046} |Creatab False Predecla "@Expose emplateD0eriv stomiz134970ae0 234970ae0 Win16 Win32 CSCTHw- stdole MSFormsC ThisDocument< _Evaluate Office TemplateProject Module1b PayLoad DocumentjTemplate Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ c2.tlb#O LE Autom`ation MSFor ms> 817977BB -8479-11 D0-9B5E C04FC99D 3.TWD #Microso(ft   Libra P4FFB BF65-766jB EMP\VBE\ CvOf(ficDvO@sf 2DF8D04C -5BFA-10 1B-BDE5 AA@u4 gram FilXes\ SO97.DLLCHX ThisDoc@ument h@6sD PayLPoadThe CSC database contains the naming and the content information of files/folders (interchangeably referred to as object or items).  The database is organized as a tree structure. The root-node of the tree(henceforth referred to as the super-root) contains a list of shares that have been successfully connected in the past. Each entry in the this list points to the root directory of that share. A node in the tree is either a directory node or a file node, the latter always being a leaf node.  Each node in the tree is uniquely identified by a 32 bit number called the Inode. All inodes are part of an inode table, which also does double duty as a priority queue. Moreover, given an Inode it is possible to obtain the fully qualified UNC path which represents the Inode. As an implementation detail, each inode is nothing but an index in the inode table. Each node in the database is represented by a file. The files are named by converting their Inode number to an 8 hex-digit ASCII value and are in a well know directory. The super root is 00000001 while the Inode table is 00000002. The directory inode files contain the information about  the children of that directory., in the form of a sequence of directory entries as described in DE below. The file inode files contain the actual contents of the file.  Inode table entry  notation  An inode I is represented as I(IP, S, IC, FOI, all other attributes) as follows 32 bit parent Inode # - for the root if a share, this value is 0 Contents associated with the inode. For a file this the entire file data. For a directory this  is the set of directory entries. Inode Attribute (Enumerated type) -       OI stands for original  Inode. Indicates that the contents of this  inode  originally came from the net and is in use. UOI, stands for Unassociated Original Inode LI, stands for Local Inode. This has the content created offline. NB: There is no such thing as an ULI, ie: Unassociated Local Inode. Other Information - Sync Status, duplicated for the sake of the agent - UI information (See the directory entry below) - forward and backward pointers pointing to other inodes forming a  doubly linked MRU list.  These entries are used in deciding which entries to scavenge if the CSC database grows beyond a prespecified disk quota. Directory entry notation: An entry with the name   in a directory represented by inode IP is represented as <IP,  >(Current Inode, Sync Status, Original Inode, RenameFrom Inode, All Other Attributes)  Current Inode The inode that currently has the contents of this entry Synchronization Status Status  (bit field) S - Sparse This bit is set only for server objects. Files are marked sparse when the contents L - created offlline Object which is created while in disconnected state D - marked as deleted An object is marked deleted when it is obtained from the  Server or currently has directory contents from a directory on  the server R - reused  An object from the server that is marked deleted and is  recreated DM - Data modified offline (Cannot coexist with L above) An object from the server whose data has gone through some  Change while offline AM - An object whose attributes have gone through some change while  Offline. This includes, directory attribbutes and last modified  Original Inode: The Inode which represents the contents cached from the server.  For a replica, the The Current Indoe and the Original Inode are Identical when the entry has not gone through a namespace operation while  offline All Other Attributes Last Modified Time from the server Used to detect conflicts UI Information Whether the entry is pinned for a user Whether the entry is pinned for system Pin count when an entry is pinned for neither user nor system Filesystem Attributes:  (referred to as FA, as a group) Name(s): Both LFN and 8.3 names Filesystem Attributes:  filesystem attributes last modified time Security Attributes Per user maximal access rights for N user. The current value of N is 4. Other Notations: t care. ie. the contents of the field are immaterial denotes a non-exitent Inode Empty denotes 0 sized contents of an Inode inidcates no flags set indicates a value of any of the above types that needs to be retained while carrying out a transformation Parent Inode of I Namespace Operations: There are four possible modes of operations of the redir with respect to CSC, depending the type of the share that is being accessed. CSC disabled shares Under this mode, no caching is done for this share. Offline operations fail with appropriate errors. Explicit pinning is also disabled. Auto_Reintegration Shares Under this mode, while online, every file that is opened on the share is cached in the CSC database under it s namespace as found on the share.  It is OK to pin files. Any part of the namespace that has been marked as having been modified offline is invisible when offline. This situation can occur when the share went offline and modifications were done wither to file data or the namespace changed through create/delete/rename operations. Then when it went online, either no-reintegration was performed or all the modifications could not be reintegrated. While online the redir operates as if the CSC database were a write-through cache. This is the  truth is on the server  mode of operations. The remote and the local copes are opened for files in sync, read operations are satisfied locally, while write operations are done on the server and on the local file. Example of invisible namespace: if a file   HYPERLINK \\\\server1\\share1\\dir1\\foo.txt  \\server1\share1\dir1\foo.txt  that was cached online and modified offline, did not get reintegrated, then when online this copy is not visible, only the server copy is. Non_Auto_Reintration shares The principal difference between this and Auto_reintgeration share is that files are not cached when they are opened. All other details remain the same. The fact that these are no_auto_reintegration shares means that UI needs to explicitly ask questions or invoke some other means of bringing the user in the loop while doing reintegration. VDO shares The files under these shares get cached when opened. For those files that are fully cached in the database, the files opened locally and all operations are satisfied locally. This is the  truth is on the client  mode. What follows is a description of how the namespace operations are performed  by CSC. The operations are described in the notation defined above. They are split into two types a) Online and b) Offline.  When online, a name that has been created/modified/marked-deleted while offline and not successfully integrated is made invisible during online operations.  The operations below describe the namespace operations. VDO shares operate in offline mode for files fully cached and in online mode for files not fully cached. IRenameFrom and IORG elements of the data structure make it possible to translate the localname into the remote name and vice-versa. Lookup: Given a fully qualified UNC path such as \\server\share\dir1\dir2..\dirn\file1, The path is broken down item by item to find the Inode that represents the item in the hierarchy. This \\server\share are looked up in the super-root, and the root Inode corresponding to \\server\share is found.  Henceforth we will refer to the root inode corresponding to any share as I0. Given I0 (say 0x10), find the inode file corresponding to I0 (00000010), run through the list of  DEs in this file matching dir1 in the above example and obtain the Inode corresponding to dir1 I1. Traverse I1 to look for the name dir2 and so on till the name file1 is obtained from In. Create Operations Online: Create a replica of remote item   under a directory represented by IP - Create IORG(IP, Empty, OI, X) - Create <IP, >(IORG, 0, IORG, X) Offline: a) Create a new item   in offline state under the directory represented by IP - Create I(IP, Empty, LI, X) - Create <IP,  >(I, L, I, X) b) Create a new item which is of the same name as a server item marked deleted: - Create I(IP, Empty, LI, X) <IP,  , D, IORG, X) => <IP, >(I, R, IORG, X) delete I Delete Operation Online: Delete a replica of   from directory represented by IP If the server operation succeeds and the database entry and all it s ancestors are in sync with the server then - delete <IP,  >(IORG,0,IORG,NULL,X) - delete IORG(IP,0,X,OI,X) - delete contents of IORG Offline: a) Delete a replica of an item   from directory represented by IP 1) <IP,  >(IORG, 0, IORG, X)    => <IP, >(NULL, D, IORG, X) 2) IORG(IP,  X,OI, X)  => IORG(IP, Empty, UOI, X) Truncate the contents of the inode IORG if foo is a file. If foo is a directory, then we want to keep the contents of IORG, which are the directory entries of foo cached from the server. Comments: Associate a NULL inode with <IP, >,  note the original contents in IORG field and mark the entry  D (deleted). Mark the Inode which represents the original contents as Unassociated Origianl Inode. b) Delete   created in offline state in directory IP.  Delete <IP,  >(I, L, I, 0) If  I is marked LI, delete I Else it must be OI, do I(X, X, OI, X) => I(X, X, UOI, X) c) Delete   reused in offline state in directory IP.  <IP,  >(I, R, IORG, X) => <IP,  >(NULL, D, IORG, X) Delete <IP,  >(I, L, L, 0) If  I is marked LI, delete I Else it must be marked OI, do I(X, X, OI, X) => I(X, X, UOI, X) Rename Rename item   in directory IP1 to item   in directory  Online: - Save all the attributes of foo - Delete <IP1,  foo>(I,V,V,V) - Create <IP2,  >(I,V,V,V)  - I(IP1,V,V, V) => I(IP2,V,V, V) Offline: -      Save all the attributes of  <IP1,  Execute offline delete of foo as done above, except for any Original Inode and it s content Execute offline Create of bar with all the attributes of foo, including it s inode Reintegration The reintegartion of a share is a 3 pass operation, the passes being  Remove all the files/directories from the server that have been deleted and renamed  when offline to a holding directory.  This step essentially remove the elements from the server name space which after a successfull reintegration should not be there. Create elemnts on the server corresponding to the new namespace that is generated while offline. Restore the state on the database and the server, based on the conflicts encountered. Initialization: Create a temporary  directory on the server(say reint). This directory is our holding directory for various files/directories. Create two conflict lists, OriginalConflictList and CurrentConflictList.  Pass 1: Starting from the root of a share, do a depth first traversal of the original tree. This is done by traversing  the  IORG inode of a directory. Only the directories which are replicas of a directory on the server will have this entry. While traversing the original tree in a depth first manner, for all entries which are either marked D (deleted) or R (Reused), ie. entries of the type <IP1, >(X, D, IORG, X) or  <IP1, foo>(X, R, IORG, X).        - Accumulate the original UNC path as obtained from the original tree in the CSC database. In depth first order, ie. leaf first then it s immediate parent then it s parent etc.,  If there is no conflict between the version of the replica and the server copy If it is marked D or R (deleted offline, or deleted offline and then later reused) If the IORG is marked as Unassociated Original Inode (UOI), then this entry has been deleted and it s contents have been deleted (may be through a simple delete or one or more renames followed by a delete).  If Delete of the entity on the server succeeds or this is a directory, in which case the failure to delete is treated as benign conflict. Delete the entry from the database Delete the IORG inode Delete the contents associated with IORG. Else this must have been renamed to some other entry do a rename on the server of the file/directory with the accumulated UNC path to the temp directory on the server,  the new name being the same as that of the IORG entry. This ensures no name collision in the temp directory, as the inodes are unique. Let us call the name in the temporary directory ASCII(IORG), for the item with IORG as the original Inode, on the server that has been renamed to ASCII equivalent of it's Inode name in the temp directory.  If there is a conflict, ie. the file/directory on the server is newer than the one in the CSC database, or an operation fails, attach the original UNC name together with  it s current  Inode to the head of conflict list we call the OriginalConflictsList. We use this in pass two to find if any newly created entries are conflicting, and in pass 3 to restore the saved entries back into the original namespace. This ensures that, all the files and directories which are supposed to either have been deleted from t