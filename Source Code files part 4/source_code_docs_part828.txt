00 n 0003896807 00000 n 0003896909 00000 n 0003897011 00000 n 0003897113 00000 n 0003897215 00000 n 0003897317 00000 n 0003897419 00000 n 0003897521 00000 n 0003897623 00000 n 0003897725 00000 n 0003897827 00000 n 0003897929 00000 n 0003898031 00000 n 0003898133 00000 n 0003898235 00000 n 0003898337 00000 n 0003898439 00000 n 0003898541 00000 n 0003898643 00000 n 0003898745 00000 n 0003898847 00000 n 0003898949 00000 n 0003899051 00000 n 0003899153 00000 n 0003899255 00000 n 0003899357 00000 n 0003899459 00000 n 0003899561 00000 n 0003899663 00000 n 0003899765 00000 n 0003899867 00000 n 0003899969 00000 n 0003900071 00000 n 0003900173 00000 n 0003900275 00000 n 0003900377 00000 n 0003900479 00000 n 0003900581 00000 n 0003900683 00000 n 0003900785 00000 n 0003900887 00000 n 0003900989 00000 n 0003901091 00000 n 0003901193 00000 n 0003901295 00000 n 0003901397 00000 n 0003901499 00000 n 0003901601 00000 n 0003901703 00000 n 0003901805 00000 n 0003901907 00000 n 0003902009 00000 n 0003902108 00000 n 0003902378 00000 n 0003903283 00000 n 0003904012 00000 n 0003915830 00000 n 0003916314 00000 n 0003924793 00000 n 0003925318 00000 n 0003934524 00000 n 0003934955 00000 n 0003941376 00000 n 0003942033 00000 n 0003947455 00000 n 0003947842 00000 n 0003952377 00000 n 0003952936 00000 n 0003957664 00000 n 0003957894 00000 n 0003965120 00000 n 0003965351 00000 n 0003972923 00000 n 0003973151 00000 n 0003983496 00000 n 0003983706 00000 n 0003988359 00000 n 0003988573 00000 n 0003988970 00000 n 0003989040 00000 n 0003989111 00000 n 0003991091 00000 n 0003991168 00000 n 0003991246 00000 n 0003991317 00000 n 0003991395 00000 n 0003991466 00000 n 0003991537 00000 n 0003991615 00000 n 0003991686 00000 n 0003991757 00000 n 0003991818 00000 n 0003991879 00000 n 0003991951 00000 n 0003992012 00000 n 0003992073 00000 n 0003992154 00000 n 0003992232 00000 n 0003992310 00000 n 0003992388 00000 n 0003992466 00000 n 0003992544 00000 n 0003992622 00000 n 0003992700 00000 n 0003992778 00000 n 0003992856 00000 n 0003992938 00000 n 0003993017 00000 n 0003993096 00000 n 0003993175 00000 n 0003993254 00000 n 0003993336 00000 n 0003993415 00000 n 0003993494 00000 n 0003993573 00000 n 0003993655 00000 n 0003993734 00000 n 0003993813 00000 n 0003993892 00000 n 0003993971 00000 n 0003994050 00000 n 0003994129 00000 n 0003994211 00000 n 0003994290 00000 n 0003994369 00000 n 0003994448 00000 n 0003994530 00000 n 0003994609 00000 n 0003994688 00000 n 0003994767 00000 n 0003994846 00000 n 0003994925 00000 n 0003995005 00000 n 0003995088 00000 n 0003995171 00000 n 0003995251 00000 n 0003995331 00000 n 0003995411 00000 n 0003995491 00000 n 0003995571 00000 n 0003995651 00000 n 0003995731 00000 n 0003995811 00000 n 0003995894 00000 n 0003995974 00000 n 0003996054 00000 n 0003996134 00000 n 0003996214 00000 n 0003996294 00000 n 0003996377 00000 n 0003996457 00000 n 0003996537 00000 n 0003996617 00000 n 0003996699 00000 n 0003996778 00000 n 0003996857 00000 n 0003996936 00000 n 0003997015 00000 n 0003997094 00000 n 0003997173 00000 n 0003997252 00000 n 0003997331 00000 n 0003997410 00000 n 0003997490 00000 n 0003997570 00000 n 0003997650 00000 n 0003997730 00000 n 0003997810 00000 n 0003997890 00000 n 0003997973 00000 n 0003998053 00000 n 0003998133 00000 n 0003998213 00000 n 0003998293 00000 n 0003998373 00000 n 0003998453 00000 n 0003998536 00000 n 0003998616 00000 n 0003998696 00000 n 0003998776 00000 n 0003998856 00000 n 0003998936 00000 n 0003999016 00000 n 0003999096 00000 n 0003999176 00000 n 0003999256 00000 n 0003999339 00000 n 0003999419 00000 n 0003999499 00000 n 0003999579 00000 n 0003999662 00000 n 0003999742 00000 n 0003999822 00000 n 0003999902 00000 n 0003999985 00000 n 0004000065 00000 n 0004000145 00000 n 0004000225 00000 n 0004000305 00000 n 0004000388 00000 n 0004000469 00000 n 0004000550 00000 n 0004000631 00000 n 0004000712 00000 n 0004000793 00000 n 0004000874 00000 n 0004000958 00000 n 0004001039 00000 n 0004001120 00000 n 0004001201 00000 n 0004001282 00000 n 0004001363 00000 n 0004001444 00000 n 0004001528 00000 n 0004001609 00000 n 0004001690 00000 n 0004001771 00000 n 0004001852 00000 n 0004001933 00000 n 0004002017 00000 n 0004002098 00000 n 0004002179 00000 n 0004002260 00000 n 0004002341 00000 n 0004002422 00000 n 0004002503 00000 n 0004002586 00000 n 0004002666 00000 n 0004002746 00000 n 0004002826 00000 n 0004002906 00000 n 0004002989 00000 n 0004003069 00000 n 0004003149 00000 n 0004003229 00000 n 0004003309 00000 n 0004003390 00000 n 0004003471 00000 n 0004003552 00000 n 0004003633 00000 n 0004003717 00000 n 0004003798 00000 n 0004003879 00000 n 0004003963 00000 n 0004004044 00000 n 0004004125 00000 n 0004004206 00000 n 0004004287 00000 n 0004004368 00000 n 0004004449 00000 n 0004004530 00000 n 0004004611 00000 n 0004004692 00000 n 0004004773 00000 n 0004004854 00000 n 0004004938 00000 n 0004005019 00000 n 0004005100 00000 n 0004005181 00000 n 0004005264 00000 n 0004005344 00000 n 0004005424 00000 n 0004005504 00000 n 0004005584 00000 n 0004005667 00000 n 0004005747 00000 n 0004005827 00000 n 0004005907 00000 n 0004005987 00000 n 0004006068 00000 n 0004006149 00000 n 0004006230 00000 n 0004006311 00000 n 0004006392 00000 n 0004006473 00000 n 0004006554 00000 n 0004006635 00000 n 0004006719 00000 n 0004006800 00000 n 0004006881 00000 n 0004006962 00000 n 0004007043 00000 n 0004007124 00000 n 0004007208 00000 n 0004007289 00000 n 0004007370 00000 n 0004007451 00000 n 0004007535 00000 n 0004007616 00000 n 0004007697 00000 n 0004007779 00000 n 0004007861 00000 n 0004007914 00000 n 0004007984 00000 n 0004008055 00000 n 0004008128 00000 n 0004008290 00000 n 0004008403 00000 n 0004008476 00000 n 0004008549 00000 n 0004008622 00000 n 0004008695 00000 n 0004008826 00000 n 0004008899 00000 n 0004009009 00000 n 0004009082 00000 n 0004009155 00000 n 0004009228 00000 n 0004009301 00000 n 0004009396 00000 n 0004009469 00000 n 0004009542 00000 n 0004009664 00000 n 0004009750 00000 n 0004009861 00000 n 0004009947 00000 n 0004010020 00000 n 0004010106 00000 n 0004010179 00000 n 0004010265 00000 n 0004010338 00000 n 0004010424 00000 n 0004010497 00000 n 0004010601 00000 n 0004010675 00000 n 0004010749 00000 n 0004010823 00000 n 0004010983 00000 n 0004011057 00000 n 0004011131 00000 n 0004011205 00000 n 0004011282 00000 n 0004011359 00000 n 0004011436 00000 n 0004011513 00000 n 0004011605 00000 n 0004011678 00000 n 0004011819 00000 n 0004011892 00000 n 0004011969 00000 n 0004012046 00000 n 0004012124 00000 n 0004012202 00000 n 0004012280 00000 n 0004012358 00000 n 0004012463 00000 n 0004012537 00000 n 0004012648 00000 n 0004012721 00000 n 0004012825 00000 n 0004012898 00000 n 0004012971 00000 n 0004013034 00000 n 0004013104 00000 n 0004013175 00000 n 0004013248 00000 n 0004013373 00000 n 0004013446 00000 n 0004013550 00000 n 0004013623 00000 n 0004013700 00000 n 0004013777 00000 n 0004013890 00000 n 0004013963 00000 n 0004014040 00000 n 0004014117 00000 n 0004014195 00000 n 0004014326 00000 n 0004014399 00000 n 0004014476 00000 n 0004014553 00000 n 0004014630 00000 n 0004014707 00000 n 0004014784 00000 n 0004014925 00000 n 0004014998 00000 n 0004015071 00000 n 0004015164 00000 n 0004015257 00000 n 0004015387 00000 n 0004015479 00000 n 0004015542 00000 n 0004015612 00000 n 0004015683 00000 n 0004015756 00000 n 0004015863 00000 n 0004016004 00000 n 0004016077 00000 n 0004016154 00000 n 0004016231 00000 n 0004016308 00000 n 0004016385 00000 n 0004016477 00000 n 0004016550 00000 n 0004016663 00000 n 0004016736 00000 n 0004016813 00000 n 0004016890 00000 n 0004016982 00000 n 0004017068 00000 n 0004017141 00000 n 0004017194 00000 n 0004017264 00000 n 0004017335 00000 n 0004017408 00000 n 0004017542 00000 n 0004017701 00000 n 0004017778 00000 n 0004017855 00000 n 0004017932 00000 n 0004018009 00000 n 0004018086 00000 n 0004018163 00000 n 0004018240 00000 n 0004018317 00000 n 0004018395 00000 n 0004018628 00000 n 0004018702 00000 n 0004018780 00000 n 0004018859 00000 n 0004018938 00000 n 0004019022 00000 n 0004019100 00000 n 0004019178 00000 n 0004019262 00000 n 0004019340 00000 n 0004019419 00000 n 0004019497 00000 n 0004019580 00000 n 0004019657 00000 n 0004019734 00000 n 0004019811 00000 n 0004019888 00000 n 0004019961 00000 n 0004020092 00000 n 0004020165 00000 n 0004020242 00000 n 0004020320 00000 n 0004020398 00000 n 0004020476 00000 n 0004020591 00000 n 0004020722 00000 n 0004020795 00000 n 0004020868 00000 n 0004020959 00000 n 0004021019 00000 n 0004021084 00000 n 0004021177 00000 n 0004021312 00000 n 0004021394 00000 n 0004021458 00000 n 0004021536 00000 n 0004021600 00000 n 0004021678 00000 n 0004021751 00000 n 0004021829 00000 n 0004021907 00000 n 0004021989 00000 n 0004022053 00000 n 0004022132 00000 n 0004022196 00000 n 0004022275 00000 n 0004022339 00000 n 0004022418 00000 n 0004022500 00000 n 0004022564 00000 n 0004022643 00000 n 0004022707 00000 n 0004022786 00000 n 0004022850 00000 n 0004022929 00000 n 0004023011 00000 n 0004023075 00000 n 0004023154 00000 n 0004023218 00000 n 0004023297 00000 n 0004023361 00000 n 0004023440 00000 n 0004023511 00000 n 0004023575 00000 n 0004023627 00000 n 0004023708 00000 n 0004023788 00000 n 0004023881 00000 n 0004023941 00000 n 0004024006 00000 n 0004024088 00000 n 0004024152 00000 n 0004024230 00000 n 0004024294 00000 n 0004024372 00000 n 0004024436 00000 n 0004024514 00000 n 0004024596 00000 n 0004024660 00000 n 0004024738 00000 n 0004024802 00000 n 0004024880 00000 n 0004024944 00000 n 0004025022 00000 n 0004025104 00000 n 0004025168 00000 n 0004025246 00000 n 0004025310 00000 n 0004025388 00000 n 0004025461 00000 n 0004025540 00000 n 0004025619 00000 n 0004025701 00000 n 0004025765 00000 n 0004025844 00000 n 0004025908 00000 n 0004025987 00000 n 0004026051 00000 n 0004026130 00000 n 0004026223 00000 n 0004026348 00000 n 0004026430 00000 n 0004026494 00000 n 0004026573 00000 n 0004026637 00000 n 0004026716 00000 n 0004026780 00000 n 0004026859 00000 n 0004026941 00000 n 0004027014 00000 n 0004027093 00000 n 0004027172 00000 n 0004027236 00000 n 0004027315 00000 n 0004027379 00000 n 0004027458 00000 n 0004027540 00000 n 0004027604 00000 n 0004027683 00000 n 0004027747 00000 n 0004027826 00000 n 0004027890 00000 n 0004027969 00000 n 0004028040 00000 n 0004028104 00000 n 0004028156 00000 n 0004028237 00000 n 0004028317 00000 n 0004028390 00000 n 0004028481 00000 n 0004028541 00000 n 0004028606 00000 n 0004028688 00000 n 0004028752 00000 n 0004028830 00000 n 0004028894 00000 n 0004028972 00000 n 0004029036 00000 n 0004029114 00000 n 0004029196 00000 n 0004029260 00000 n 0004029338 00000 n 0004029411 00000 n 0004029489 00000 n 0004029567 00000 n 0004029631 00000 n 0004029709 00000 n 0004029791 00000 n 0004029855 00000 n 0004029934 00000 n 0004030007 00000 n 0004030086 00000 n 0004030165 00000 n 0004030229 00000 n 0004030308 00000 n 0004030390 00000 n 0004030454 00000 n 0004030533 00000 n 0004030606 00000 n 0004030685 00000 n 0004030764 00000 n 0004030828 00000 n 0004030907 00000 n 0004031000 00000 n 0004031071 00000 n 0004031135 00000 n 0004031199 00000 n 0004031291 00000 n 0004031351 00000 n 0004031416 00000 n 0004031487 00000 n 0004031551 00000 n 0004031615 00000 n 0004031690 00000 n 0004031758 00000 n 0004031899 00000 n 0004031972 00000 n 0004032045 00000 n 0004032118 00000 n 0004032191 00000 n 0004032405 00000 n 0004032478 00000 n 0004032551 00000 n 0004032628 00000 n 0004032705 00000 n 0004032783 00000 n 0004032861 00000 n 0004032954 00000 n 0004033028 00000 n 0004033106 00000 n 0004033184 00000 n 0004033262 00000 n 0004033340 00000 n 0004033418 00000 n 0004033511 00000 n 0004033585 00000 n 0004033799 00000 n 0004033872 00000 n 0004033945 00000 n 0004034022 00000 n 0004034099 00000 n 0004034176 00000 n 0004034253 00000 n 0004034330 00000 n 0004034407 00000 n 0004034484 00000 n 0004034562 00000 n 0004034655 00000 n 0004034729 00000 n 0004034807 00000 n 0004034900 00000 n 0004034974 00000 n 0004035070 00000 n 0004035144 00000 n 0004035218 00000 n 0004035323 00000 n 0004035397 00000 n 0004035470 00000 n 0004035533 00000 n 0004035603 00000 n 0004035674 00000 n 0004035747 00000 n 0004035854 00000 n 0004035949 00000 n 0004036071 00000 n 0004036144 00000 n 0004036222 00000 n 0004036299 00000 n 0004036376 00000 n 0004036453 00000 n 0004036566 00000 n 0004036639 00000 n 0004036713 00000 n 0004036787 00000 n 0004036876 00000 n 0004036936 00000 n 0004037001 00000 n 0004037094 00000 n 0004037165 00000 n 0004037229 00000 n 0004037293 00000 n 0004037385 00000 n 0004037445 00000 n 0004037510 00000 n 0004037581 00000 n 0004037645 00000 n 0004037709 00000 n 0004037784 00000 n 0004037852 00000 n 0004038066 00000 n 0004038139 00000 n 0004038234 00000 n 0004038307 00000 n 0004038399 00000 n 0004038459 00000 n 0004038524 00000 n 0004038592 00000 n 0004038723 00000 n 0004038796 00000 n 0004038888 00000 n 0004038948 00000 n 0004039013 00000 n 0004039086 00000 n 0004039163 00000 n 0004039255 00000 n 0004039328 00000 n 0004039396 00000 n 0004039527 00000 n 0004039600 00000 n 0004039692 00000 n 0004039752 00000 n 0004039817 00000 n 0004039890 00000 n 0004039967 00000 n 0004040059 00000 n 0004040132 00000 n 0004040273 00000 n 0004040346 00000 n 0004040438 00000 n 0004040498 00000 n 0004040563 00000 n 0004040631 00000 n 0004040699 00000 n 0004040772 00000 n 0004040845 00000 n 0004040922 00000 n 0004041014 00000 n 0004041087 00000 n 0004041246 00000 n 0004041319 00000 n 0004041411 00000 n 0004041471 00000 n 0004041536 00000 n 0004041609 00000 n 0004041687 00000 n 0004041765 00000 n 0004041880 00000 n 0004041948 00000 n 0004042025 00000 n 0004042117 00000 n 0004042190 00000 n 0004042331 00000 n 0004042404 00000 n 0004042496 00000 n 0004042556 00000 n 0004042621 00000 n 0004042694 00000 n 0004042771 00000 n 0004042849 00000 n 0004042942 00000 n 0004043016 00000 n 0004043084 00000 n 0004043243 00000 n 0004043316 00000 n 0004043408 00000 n 0004043468 00000 n 0004043533 00000 n 0004043606 00000 n 0004043679 00000 n 0004043752 00000 n 0004043825 00000 n 0004043902 00000 n 0004043970 00000 n 0004044062 00000 n 0004044135 00000 n 0004044376 00000 n 0004044449 00000 n 0004044526 00000 n 0004044618 00000 n 0004044678 00000 n 0004044743 00000 n 0004044820 00000 n 0004044912 00000 n 0004044972 00000 n 0004045037 00000 n 0004045105 00000 n 0004045173 00000 n 0004045251 00000 n 0004045329 00000 n 0004045412 00000 n 0004045489 00000 n 0004045567 00000 n 0004045650 00000 n 0004045727 00000 n 0004045804 00000 n 0004045881 00000 n 0004045995 00000 n 0004046073 00000 n 0004046156 00000 n 0004046229 00000 n 0004046370 00000 n 0004046443 00000 n 0004046535 00000 n 0004046595 00000 n 0004046660 00000 n 0004046733 00000 n 0004046810 00000 n 0004046903 00000 n 0004046977 00000 n 0004047051 00000 n 0004047119 00000 n 0004047241 00000 n 0004047314 00000 n 0004047406 00000 n 0004047466 00000 n 0004047531 00000 n 0004047604 00000 n 0004047677 00000 n 0004047750 00000 n 0004047818 00000 n 0004047913 00000 n 0004047986 00000 n 0004048078 00000 n 0004048138 00000 n 0004048203 00000 n 0004048325 00000 n 0004048398 00000 n 0004048490 00000 n 0004048550 00000 n 0004048615 00000 n 0004048725 00000 n 0004048793 00000 n 0004048861 00000 n 0004048934 00000 n 0004049007 00000 n 0004049138 00000 n 0004049211 00000 n 0004049303 00000 n 0004049363 00000 n 0004049428 00000 n 0004049501 00000 n 0004049578 00000 n 0004049646 00000 n 0004049723 00000 n 0004049800 00000 n 0004049922 00000 n 0004049995 00000 n 0004050087 00000 n 0004050147 00000 n 0004050212 00000 n 0004050285 00000 n 0004050362 00000 n 0004050439 00000 n 0004050507 00000 n 0004050611 00000 n 0004050684 00000 n 0004050757 00000 n 0004050820 00000 n 0004050890 00000 n 0004050961 00000 n 0004051034 00000 n 0004051168 00000 n 0004051427 00000 n 0004051500 00000 n 0004051573 00000 n 0004051651 00000 n 0004051728 00000 n 0004051805 00000 n 0004051882 00000 n 0004051959 00000 n 0004052036 00000 n 0004052114 00000 n 0004052192 00000 n 0004052269 00000 n 0004052346 00000 n 0004052423 00000 n 0004052500 00000 n 0004052577 00000 n 0004052654 00000 n 0004052731 00000 n 0004052825 00000 n 0004052886 00000 n 0004052951 00000 n 0004053045 00000 n 0004053262 00000 n 0004053335 00000 n 0004053399 00000 n 0004053481 00000 n 0004053545 00000 n 0004053623 00000 n 0004053696 00000 n 0004053760 00000 n 0004053842 00000 n 0004053906 00000 n 0004053984 00000 n 0004054057 00000 n 0004054121 00000 n 0004054203 00000 n 0004054267 00000 n 0004054345 00000 n 0004054418 00000 n 0004054482 00000 n 0004054564 00000 n 0004054628 00000 n 0004054706 00000 n 0004054779 00000 n 0004054843 00000 n 0004054926 00000 n 0004054990 00000 n 0004055069 00000 n 0004055142 00000 n 0004055206 00000 n 0004055289 00000 n 0004055353 00000 n 0004055432 00000 n 0004055505 00000 n 0004055569 00000 n 0004055652 00000 n 0004055716 00000 n 0004055795 00000 n 0004055868 00000 n 0004055932 00000 n 0004056015 00000 n 0004056079 00000 n 0004056158 00000 n 0004056231 00000 n 0004056295 00000 n 0004056378 00000 n 0004056442 00000 n 0004056521 00000 n 0004056594 00000 n 0004056658 00000 n 0004056741 00000 n 0004056805 00000 n 0004056884 00000 n 0004056957 00000 n 0004057021 00000 n 0004057104 00000 n 0004057168 00000 n 0004057247 00000 n 0004057320 00000 n 0004057384 00000 n 0004057467 00000 n 0004057531 00000 n 0004057610 00000 n 0004057683 00000 n 0004057747 00000 n 0004057830 00000 n 0004057894 00000 n 0004057973 00000 n 0004058046 00000 n 0004058110 00000 n 0004058193 00000 n 0004058257 00000 n 0004058336 00000 n 0004058409 00000 n 0004058473 00000 n 0004058556 00000 n 0004058620 00000 n 0004058699 00000 n 0004058772 00000 n 0004058836 00000 n 0004058919 00000 n 0004058983 00000 n 0004059062 00000 n 0004059135 00000 n 0004059199 00000 n 0004059282 00000 n 0004059346 00000 n 0004059425 00000 n 0004059496 00000 n 0004059560 00000 n 0004059612 00000 n 0004059693 00000 n 0004059773 00000 n 0004059867 00000 n 0004059928 00000 n 0004059993 00000 n 0004060087 00000 n 0004060304 00000 n 0004060377 00000 n 0004060441 00000 n 0004060523 00000 n 0004060587 00000 n 0004060665 00000 n 0004060738 00000 n 0004060802 00000 n 0004060884 00000 n 0004060948 00000 n 0004061026 00000 n 0004061099 00000 n 0004061163 00000 n 0004061245 00000 n 0004061309 00000 n 0004061387 00000 n 0004061460 00000 n 0004061524 00000 n 0004061606 00000 n 0004061670 00000 n 0004061748 00000 n 0004061821 00000 n 0004061885 00000 n 0004061968 00000 n 0004062032 00000 n 0004062111 00000 n 0004062184 00000 n 0004062248 00000 n 0004062331 00000 n 0004062395 00000 n 0004062474 00000 n 0004062547 00000 n 0004062611 00000 n 0004062694 00000 n 0004062758 00000 n 0004062837 00000 n 0004062910 00000 n 0004062974 00000 n 0004063057 00000 n 0004063121 00000 n 0004063200 00000 n 0004063273 00000 n 0004063337 00000 n 0004063420 00000 n 0004063484 00000 n 0004063563 00000 n 0004063636 00000 n 0004063700 00000 n 0004063783 00000 n 0004063847 00000 n 0004063926 00000 n 0004063999 00000 n 0004064063 00000 n 0004064146 00000 n 0004064210 00000 n 0004064289 00000 n 0004064362 00000 n 0004064426 00000 n 0004064509 00000 n 0004064573 00000 n 0004064652 00000 n 0004064725 00000 n 0004064789 00000 n 0004064872 00000 n 0004064936 00000 n 0004065015 00000 n 0004065088 00000 n 0004065152 00000 n 0004065235 00000 n 0004065299 00000 n 0004065378 00000 n 0004065451 00000 n 0004065515 00000 n 0004065598 00000 n 0004065662 00000 n 0004065741 00000 n 0004065814 00000 n 0004065878 00000 n 0004065961 00000 n 0004066025 00000 n 0004066104 00000 n 0004066177 00000 n 0004066241 00000 n 0004066324 00000 n 0004066388 00000 n 0004066467 00000 n 0004066538 00000 n 0004066602 00000 n 0004066654 00000 n 0004066735 00000 n 0004066815 00000 n 0004066907 00000 n 0004066968 00000 n 0004067033 00000 n 0004067146 00000 n 0004067219 00000 n 0004067296 00000 n 0004067388 00000 n 0004067461 00000 n 0004067592 00000 n 0004067665 00000 n 0004067738 00000 n 0004067817 00000 n 0004067895 00000 n 0004067973 00000 n 0004068067 00000 n 0004068138 00000 n 0004068211 00000 n 0004068284 00000 n 0004068367 00000 n 0004068450 00000 n 0004068523 00000 n 0004068602 00000 n 0004068681 00000 n 0004068752 00000 n 0004068816 00000 n 0004068868 00000 n 0004068949 00000 n 0004069029 00000 n 0004069102 00000 n 0004069197 00000 n 0004069270 00000 n 0004069343 00000 n 0004069429 00000 n 0004069502 00000 n 0004069679 00000 n 0004069752 00000 n 0004069825 00000 n 0004069918 00000 n 0004069979 00000 n 0004070044 00000 n 0004070138 00000 n 0004070291 00000 n 0004070382 00000 n 0004070455 00000 n 0004070533 00000 n 0004070611 00000 n 0004070675 00000 n 0004070753 00000 n 0004070835 00000 n 0004070913 00000 n 0004070991 00000 n 0004071070 00000 n 0004071134 00000 n 0004071213 00000 n 0004071304 00000 n 0004071377 00000 n 0004071456 00000 n 0004071535 00000 n 0004071599 00000 n 0004071678 00000 n 0004071751 00000 n 0004071830 00000 n 0004071909 00000 n 0004071973 00000 n 0004072052 00000 n 0004072143 00000 n 0004072216 00000 n 0004072295 00000 n 0004072374 00000 n 0004072438 00000 n 0004072517 00000 n 0004072590 00000 n 0004072669 00000 n 0004072748 00000 n 0004072812 00000 n 0004072891 00000 n 0004072962 00000 n 0004073026 00000 n 0004073078 00000 n 0004073159 00000 n 0004073239 00000 n 0004073330 00000 n 0004073403 00000 n 0004073481 00000 n 0004073559 00000 n 0004073623 00000 n 0004073701 00000 n 0004073783 00000 n 0004073861 00000 n 0004073939 00000 n 0004074017 00000 n 0004074081 00000 n 0004074159 00000 n 0004074250 00000 n 0004074323 00000 n 0004074401 00000 n 0004074479 00000 n 0004074543 00000 n 0004074621 00000 n 0004074703 00000 n 0004074782 00000 n 0004074861 00000 n 0004074940 00000 n 0004075004 00000 n 0004075083 00000 n 0004075174 00000 n 0004075247 00000 n 0004075326 00000 n 0004075405 00000 n 0004075469 00000 n 0004075548 00000 n 0004075630 00000 n 0004075709 00000 n 0004075788 00000 n 0004075867 00000 n 0004075931 00000 n 0004076010 00000 n 0004076101 00000 n 0004076174 00000 n 0004076253 00000 n 0004076332 00000 n 0004076396 00000 n 0004076475 00000 n 0004076575 00000 n 0004076654 00000 n 0004076733 00000 n 0004076812 00000 n 0004076891 00000 n 0004076970 00000 n 0004077034 00000 n 0004077113 00000 n 0004077186 00000 n 0004077259 00000 n 0004077350 00000 n 0004077423 00000 n 0004077501 00000 n 0004077579 00000 n 0004077643 00000 n 0004077721 00000 n 0004077812 00000 n 0004077890 00000 n 0004077968 00000 n 0004078046 00000 n 0004078124 00000 n 0004078188 00000 n 0004078266 00000 n 0004078357 00000 n 0004078430 00000 n 0004078509 00000 n 0004078588 00000 n 0004078661 00000 n 0004078740 00000 n 0004078819 00000 n 0004078910 00000 n 0004078989 00000 n 0004079068 00000 n 0004079147 00000 n 0004079226 00000 n 0004079290 00000 n 0004079369 00000 n 0004079460 00000 n 0004079533 00000 n 0004079612 00000 n 0004079691 00000 n 0004079755 00000 n 0004079834 00000 n 0004079916 00000 n 0004079995 00000 n 0004080074 00000 n 0004080153 00000 n 0004080217 00000 n 0004080296 00000 n 0004080369 00000 n 0004080442 00000 n 0004080519 00000 n 0004080596 00000 n 0004080673 00000 n 0004080736 00000 n 0004080806 00000 n 0004080877 00000 n 0004080950 00000 n 0004081358 00000 n 0004081431 00000 n 0004081504 00000 n 0004081577 00000 n 0004081654 00000 n 0004081746 00000 n 0004081819 00000 n 0004081896 00000 n 0004081973 00000 n 0004082065 00000 n 0004082139 00000 n 0004082213 00000 n 0004082292 00000 n 0004082370 00000 n 0004082447 00000 n 0004082539 00000 n 0004082600 00000 n 0004082665 00000 n 0004082742 00000 n 0004082820 00000 n 0004082898 00000 n 0004082976 00000 n 0004083059 00000 n 0004083136 00000 n 0004083213 00000 n 0004083305 00000 n 0004083366 00000 n 0004083431 00000 n 0004083500 00000 n 0004083569 00000 n 0004083646 00000 n 0004083738 00000 n 0004083799 00000 n 0004083864 00000 n 0004083941 00000 n 0004084019 00000 n 0004084097 00000 n 0004084175 00000 n 0004084253 00000 n 0004084336 00000 n 0004084405 00000 n 0004084483 00000 n 0004084560 00000 n 0004084652 00000 n 0004084713 00000 n 0004084778 00000 n 0004084855 00000 n 0004084918 00000 n 0004084987 00000 n 0004085057 00000 n 0004085128 00000 n 0004085201 00000 n 0004085363 00000 n 0004085436 00000 n 0004085604 00000 n 0004085677 00000 n 0004085750 00000 n 0004085823 00000 n 0004085900 00000 n 0004085977 00000 n 0004086054 00000 n 0004086146 00000 n 0004086239 00000 n 0004086332 00000 n 0004086406 00000 n 0004086510 00000 n 0004086605 00000 n 0004086678 00000 n 0004086770 00000 n 0004086831 00000 n 0004086896 00000 n 0004087055 00000 n 0004087128 00000 n 0004087220 00000 n 0004087281 00000 n 0004087346 00000 n 0004087419 00000 n 0004087497 00000 n 0004087575 00000 n 0004087653 00000 n 0004087731 00000 n 0004087800 00000 n 0004087869 00000 n 0004087946 00000 n 0004088023 00000 n 0004088136 00000 n 0004088209 00000 n 0004088301 00000 n 0004088362 00000 n 0004088427 00000 n 0004088500 00000 n 0004088573 00000 n 0004088642 00000 n 0004088746 00000 n 0004088859 00000 n 0004088932 00000 n 0004089024 00000 n 0004089085 00000 n 0004089150 00000 n 0004089223 00000 n 0004089296 00000 n 0004089400 00000 n 0004089473 00000 n 0004089565 00000 n 0004089626 00000 n 0004089691 00000 n 0004089802 00000 n 0004089871 00000 n 0004089940 00000 n 0004090062 00000 n 0004090135 00000 n 0004090227 00000 n 0004090288 00000 n 0004090353 00000 n 0004090426 00000 n 0004090499 00000 n 0004090572 00000 n 0004090641 00000 n 0004090745 00000 n 0004090858 00000 n 0004090931 00000 n 0004091023 00000 n 0004091084 00000 n 0004091149 00000 n 0004091222 00000 n 0004091295 00000 n 0004091463 00000 n 0004091536 00000 n 0004091628 00000 n 0004091689 00000 n 0004091754 00000 n 0004091828 00000 n 0004091902 00000 n 0004091980 00000 n 0004092058 00000 n 0004092151 00000 n 0004092220 00000 n 0004092289 00000 n 0004092362 00000 n 0004092435 00000 n 0004092508 00000 n 0004092649 00000 n 0004092722 00000 n 0004092814 00000 n 0004092875 00000 n 0004092940 00000 n 0004093013 00000 n 0004093086 00000 n 0004093159 00000 n 0004093233 00000 n 0004093344 00000 n 0004093413 00000 n 0004093517 00000 n 0004093667 00000 n 0004093740 00000 n 0004093832 00000 n 0004093893 00000 n 0004093958 00000 n 0004094031 00000 n 0004094104 00000 n 0004094181 00000 n 0004094258 00000 n 0004094336 00000 n 0004094414 00000 n 0004094483 00000 n 0004094587 00000 n 0004094660 00000 n 0004094752 00000 n 0004094813 00000 n 0004094878 00000 n 0004094951 00000 n 0004095064 00000 n 0004095137 00000 n 0004095229 00000 n 0004095290 00000 n 0004095355 00000 n 0004095428 00000 n 0004095502 00000 n 0004095571 00000 n 0004095640 00000 n 0004095744 00000 n 0004095866 00000 n 0004095939 00000 n 0004096031 00000 n 0004096092 00000 n 0004096157 00000 n 0004096230 00000 n 0004096303 00000 n 0004096376 00000 n 0004096445 00000 n 0004096576 00000 n 0004096649 00000 n 0004096741 00000 n 0004096802 00000 n 0004096867 00000 n 0004096940 00000 n 0004097017 00000 n 0004097094 00000 n 0004097186 00000 n 0004097255 00000 n 0004097396 00000 n 0004097469 00000 n 0004097561 00000 n 0004097622 00000 n 0004097687 00000 n 0004097760 00000 n 0004097833 00000 n 0004097906 00000 n 0004097979 00000 n 0004098052 00000 n 0004098121 00000 n 0004098225 00000 n 0004098298 00000 n 0004098390 00000 n 0004098451 00000 n 0004098516 00000 n 0004098589 00000 n 0004098658 00000 n 0004098826 00000 n 0004098899 00000 n 0004098972 00000 n 0004099058 00000 n 0004099131 00000 n 0004099217 00000 n 0004099345 00000 n 0004099405 00000 n 0004099470 00000 n 0004099574 00000 n 0004099647 00000 n 0004099720 00000 n 0004099813 00000 n 0004099920 00000 n 0004100002 00000 n 0004100066 00000 n 0004100148 00000 n 0004100221 00000 n 0004100299 00000 n 0004100377 00000 n 0004100459 00000 n 0004100537 00000 n 0004100615 00000 n 0004100694 00000 n 0004100776 00000 n 0004100840 00000 n 0004100923 00000 n 0004100987 00000 n 0004101066 00000 n 0004101130 00000 n 0004101209 00000 n 0004101291 00000 n 0004101355 00000 n 0004101438 00000 n 0004101502 00000 n 0004101581 00000 n 0004101645 00000 n 0004101724 00000 n 0004101806 00000 n 0004101870 00000 n 0004101953 00000 n 0004102017 00000 n 0004102096 00000 n 0004102160 00000 n 0004102239 00000 n 0004102321 00000 n 0004102385 00000 n 0004102468 00000 n 0004102532 00000 n 0004102611 00000 n 0004102675 00000 n 0004102754 00000 n 0004102825 00000 n 0004102889 00000 n 0004102941 00000 n 0004103022 00000 n 0004103102 00000 n 0004103175 00000 n 0004103288 00000 n 0004103361 00000 n 0004103434 00000 n 0004103507 00000 n 0004103580 00000 n 0004103675 00000 n 0004103748 00000 n 0004103821 00000 n 0004103907 00000 n 0004104018 00000 n 0004104104 00000 n 0004104177 00000 n 0004104281 00000 n 0004104354 00000 n 0004104427 00000 n 0004104490 00000 n 0004104560 00000 n 0004104631 00000 n 0004104704 00000 n 0004104767 00000 n 0004104837 00000 n 0004104908 00000 n 0004104981 00000 n 0004105125 00000 n 0004105198 00000 n 0004105271 00000 n 0004105366 00000 n 0004105479 00000 n 0004105552 00000 n 0004105629 00000 n 0004105721 00000 n 0004105794 00000 n 0004105907 00000 n 0004105981 00000 n 0004106054 00000 n 0004106127 00000 n 0004106200 00000 n 0004106322 00000 n 0004106395 00000 n 0004106486 00000 n 0004106547 00000 n 0004106612 00000 n 0004106703 00000 n 0004106764 00000 n 0004106829 00000 n 0004106923 00000 n 0004106994 00000 n 0004107058 00000 n 0004107122 00000 n 0004107214 00000 n 0004107275 00000 n 0004107340 00000 n 0004107411 00000 n 0004107475 00000 n 0004107539 00000 n 0004107614 00000 n 0004107708 00000 n 0004107779 00000 n 0004107843 00000 n 0004107907 00000 n 0004107999 00000 n 0004108060 00000 n 0004108125 00000 n 0004108196 00000 n 0004108260 00000 n 0004108324 00000 n 0004108399 00000 n 0004108468 00000 n 0004108537 00000 n 0004108628 00000 n 0004108689 00000 n 0004108754 00000 n 0004108850 00000 n 0004108911 00000 n 0004108976 00000 n 0004109070 00000 n 0004109141 00000 n 0004109205 00000 n 0004109269 00000 n 0004109361 00000 n 0004109422 00000 n 0004109487 00000 n 0004109558 00000 n 0004109622 00000 n 0004109686 00000 n 0004109761 00000 n 0004109855 00000 n 0004109926 00000 n 0004109990 00000 n 0004110054 00000 n 0004110146 00000 n 0004110207 00000 n 0004110272 00000 n 0004110343 00000 n 0004110407 00000 n 0004110471 00000 n 0004110546 00000 n 0004110615 00000 n 0004110684 00000 n 0004110788 00000 n 0004110861 00000 n 0004110947 00000 n 0004111038 00000 n 0004111099 00000 n 0004111164 00000 n 0004111250 00000 n 0004111323 00000 n 0004111417 00000 n 0004111488 00000 n 0004111552 00000 n 0004111616 00000 n 0004111708 00000 n 0004111769 00000 n 0004111834 00000 n 0004111905 00000 n 0004111969 00000 n 0004112033 00000 n 0004112108 00000 n 0004112177 00000 n 0004112281 00000 n 0004112354 00000 n 0004112427 00000 n 0004112500 00000 n 0004112613 00000 n 0004112686 00000 n 0004112759 00000 n 0004112854 00000 n 0004112927 00000 n 0004113000 00000 n 0004113096 00000 n 0004113170 00000 n 0004113244 00000 n 0004113314 00000 n 0004113385 00000 n 0004113458 00000 n 0004113565 00000 n 0004113888 00000 n 0004113961 00000 n 0004114039 00000 n 0004114116 00000 n 0004114208 00000 n 0004114269 00000 n 0004114334 00000 n 0004114403 00000 n 0004114480 00000 n 0004114572 00000 n 0004114633 00000 n 0004114698 00000 n 0004114775 00000 n 0004114852 00000 n 0004114944 00000 n 0004115005 00000 n 0004115070 00000 n 0004115139 00000 n 0004115208 00000 n 0004115285 00000 n 0004115363 00000 n 0004115441 00000 n 0004115519 00000 n 0004115597 00000 n 0004115675 00000 n 0004115758 00000 n 0004115835 00000 n 0004115912 00000 n 0004116004 00000 n 0004116065 00000 n 0004116130 00000 n 0004116199 00000 n 0004116276 00000 n 0004116368 00000 n 0004116429 00000 n 0004116494 00000 n 0004116571 00000 n 0004116640 00000 n 0004116717 00000 n 0004116809 00000 n 0004116870 00000 n 0004116935 00000 n 0004117012 00000 n 0004117104 00000 n 0004117165 00000 n 0004117230 00000 n 0004117307 00000 n 0004117376 00000 n 0004117445 00000 n 0004117576 00000 n 0004117667 00000 n 0004117728 00000 n 0004117793 00000 n 0004117915 00000 n 0004117988 00000 n 0004118061 00000 n 0004118138 00000 n 0004118230 00000 n 0004118303 00000 n 0004118397 00000 n 0004118468 00000 n 0004118532 00000 n 0004118596 00000 n 0004118688 00000 n 0004118749 00000 n 0004118814 00000 n 0004118885 00000 n 0004118949 00000 n 0004119013 00000 n 0004119089 00000 n 0004119158 00000 n 0004119353 00000 n 0004119426 00000 n 0004119499 00000 n 0004119572 00000 n 0004119645 00000 n 0004119722 00000 n 0004119814 00000 n 0004119887 00000 n 0004119960 00000 n 0004120033 00000 n 0004120107 00000 n 0004120181 00000 n 0004120254 00000 n 0004120327 00000 n 0004120468 00000 n 0004120541 00000 n 0004120638 00000 n 0004120699 00000 n 0004120764 00000 n 0004120861 00000 n 0004120922 00000 n 0004120987 00000 n 0004121084 00000 n 0004121145 00000 n 0004121210 00000 n 0004121309 00000 n 0004121370 00000 n 0004121435 00000 n 0004121513 00000 n 0004121591 00000 n 0004121714 00000 n 0004121788 00000 n 0004121862 00000 n 0004121940 00000 n 0004122018 00000 n 0004122096 00000 n 0004122165 00000 n 0004122234 00000 n 0004122303 00000 n 0004122372 00000 n 0004122467 00000 n 0004122540 00000 n 0004122613 00000 n 0004122772 00000 n 0004122863 00000 n 0004122924 00000 n 0004122989 00000 n 0004123084 00000 n 0004123157 00000 n 0004123230 00000 n 0004123324 00000 n 0004123395 00000 n 0004123459 00000 n 0004123523 00000 n 0004123615 00000 n 0004123676 00000 n 0004123741 00000 n 0004123812 00000 n 0004123876 00000 n 0004123940 00000 n 0004124016 00000 n 0004124085 00000 n 0004124171 00000 n 0004124244 00000 n 0004124394 00000 n 0004124467 00000 n 0004124540 00000 n 0004124613 00000 n 0004124686 00000 n 0004124759 00000 n 0004124832 00000 n 0004124905 00000 n 0004124979 00000 n 0004125066 00000 n 0004125140 00000 n 0004125263 00000 n 0004125337 00000 n 0004125429 00000 n 0004125490 00000 n 0004125555 00000 n 0004125647 00000 n 0004125708 00000 n 0004125773 00000 n 0004125865 00000 n 0004125926 00000 n 0004125991 00000 n 0004126060 00000 n 0004126129 00000 n 0004126198 00000 n 0004126289 00000 n 0004126350 00000 n 0004126415 00000 n 0004126574 00000 n 0004126647 00000 n 0004126720 00000 n 0004126793 00000 n 0004126866 00000 n 0004126939 00000 n 0004127012 00000 n 0004127085 00000 n 0004127159 00000 n 0004127233 00000 n 0004127338 00000 n 0004127412 00000 n 0004127486 00000 n 0004127560 00000 n 0004127629 00000 n 0004127751 00000 n 0004127824 00000 n 0004127897 00000 n 0004127970 00000 n 0004128043 00000 n 0004128106 00000 n 0004128176 00000 n 0004128247 00000 n 0004128320 00000 n 0004128537 00000 n 0004128641 00000 n 0004128714 00000 n 0004128787 00000 n 0004128860 00000 n 0004128991 00000 n 0004129064 00000 n 0004129141 00000 n 0004129233 00000 n 0004129306 00000 n 0004129380 00000 n 0004129453 00000 n 0004129557 00000 n 0004129734 00000 n 0004129807 00000 n 0004129880 00000 n 0004129958 00000 n 0004130050 00000 n 0004130111 00000 n 0004130176 00000 n 0004130253 00000 n 0004130331 00000 n 0004130410 00000 n 0004130494 00000 n 0004130563 00000 n 0004130646 00000 n 0004130723 00000 n 0004130796 00000 n 0004130900 00000 n 0004130973 00000 n 0004131046 00000 n 0004131119 00000 n 0004131250 00000 n 0004131323 00000 n 0004131400 00000 n 0004131478 00000 n 0004131556 00000 n 0004131634 00000 n 0004131749 00000 n 0004131871 00000 n 0004131993 00000 n 0004132066 00000 n 0004132143 00000 n 0004132220 00000 n 0004132312 00000 n 0004132385 00000 n 0004132580 00000 n 0004132653 00000 n 0004132731 00000 n 0004132809 00000 n 0004132887 00000 n 0004132965 00000 n 0004133057 00000 n 0004133130 00000 n 0004133208 00000 n 0004133285 00000 n 0004133362 00000 n 0004133439 00000 n 0004133516 00000 n 0004133593 00000 n 0004133706 00000 n 0004133779 00000 n 0004133853 00000 n 0004133964 00000 n 0004134037 00000 n 0004134150 00000 n 0004134223 00000 n 0004134296 00000 n 0004134369 00000 n 0004134442 00000 n 0004134656 00000 n 0004134734 00000 n 0004134811 00000 n 0004134903 00000 n 0004134964 00000 n 0004135029 00000 n 0004135106 00000 n 0004135184 00000 n 0004135267 00000 n 0004135344 00000 n 0004135421 00000 n 0004135490 00000 n 0004135567 00000 n 0004135659 00000 n 0004135720 00000 n 0004135785 00000 n 0004135862 00000 n 0004135940 00000 n 0004136018 00000 n 0004136101 00000 n 0004136178 00000 n 0004136319 00000 n 0004136429 00000 n 0004136498 00000 n 0004136590 00000 n 0004136651 00000 n 0004136716 00000 n 0004136789 00000 n 0004136866 00000 n 0004136958 00000 n 0004137031 00000 n 0004137135 00000 n 0004137208 00000 n 0004137277 00000 n 0004137350 00000 n 0004137423 00000 n 0004137564 00000 n 0004137637 00000 n 0004137710 00000 n 0004137841 00000 n 0004137914 00000 n 0004137987 00000 n 0004138079 00000 n 0004138140 00000 n 0004138205 00000 n 0004138279 00000 n 0004138348 00000 n 0004138421 00000 n 0004138494 00000 n 0004138598 00000 n 0004138671 00000 n 0004138744 00000 n 0004138817 00000 n 0004138903 00000 n 0004139069 00000 n 0004139130 00000 n 0004139195 00000 n 0004139289 00000 n 0004139442 00000 n 0004139515 00000 n 0004139579 00000 n 0004139661 00000 n 0004139734 00000 n 0004139812 00000 n 0004139890 00000 n 0004139963 00000 n 0004140027 00000 n 0004140109 00000 n 0004140182 00000 n 0004140260 00000 n 0004140338 00000 n 0004140411 00000 n 0004140475 00000 n 0004140557 00000 n 0004140639 00000 n 0004140717 00000 n 0004140796 00000 n 0004140875 00000 n 0004140948 00000 n 0004141012 00000 n 0004141095 00000 n 0004141168 00000 n 0004141247 00000 n 0004141326 00000 n 0004141399 00000 n 0004141463 00000 n 0004141546 00000 n 0004141610 00000 n 0004141689 00000 n 0004141762 00000 n 0004141826 00000 n 0004141909 00000 n 0004141991 00000 n 0004142070 00000 n 0004142149 00000 n 0004142228 00000 n 0004142299 00000 n 0004142363 00000 n 0004142415 00000 n 0004142496 00000 n 0004142576 00000 n 0004142662 00000 n 0004142735 00000 n 0004142848 00000 n 0004142921 00000 n 0004142994 00000 n 0004143067 00000 n 0004143140 00000 n 0004143204 00000 n 0004143286 00000 n 0004143350 00000 n 0004143428 00000 n 0004143501 00000 n 0004143565 00000 n 0004143647 00000 n 0004143711 00000 n 0004143789 00000 n 0004143862 00000 n 0004143926 00000 n 0004144009 00000 n 0004144073 00000 n 0004144152 00000 n 0004144225 00000 n 0004144289 00000 n 0004144372 00000 n 0004144436 00000 n 0004144515 00000 n 0004144606 00000 n 0004144667 00000 n 0004144732 00000 n 0004144909 00000 n 0004144982 00000 n 0004145055 00000 n 0004145128 00000 n 0004145206 00000 n 0004145320 00000 n 0004145414 00000 n 0004145512 00000 n 0004145585 00000 n 0004145649 00000 n 0004145731 00000 n 0004145795 00000 n 0004145873 00000 n 0004145946 00000 n 0004146010 00000 n 0004146093 00000 n 0004146157 00000 n 0004146236 00000 n 0004146309 00000 n 0004146373 00000 n 0004146456 00000 n 0004146520 00000 n 0004146599 00000 n 0004146672 00000 n 0004146736 00000 n 0004146819 00000 n 0004146883 00000 n 0004146962 00000 n 0004147033 00000 n 0004147097 00000 n 0004147149 00000 n 0004147230 00000 n 0004147310 00000 n 0004147387 00000 n 0004147460 00000 n 0004147533 00000 n 0004147655 00000 n 0004147728 00000 n 0004147801 00000 n 0004147879 00000 n 0004147971 00000 n 0004148032 00000 n 0004148097 00000 n 0004148174 00000 n 0004148243 00000 n 0004148402 00000 n 0004148480 00000 n 0004148572 00000 n 0004148633 00000 n 0004148698 00000 n 0004148775 00000 n 0004148852 00000 n 0004148930 00000 n 0004149008 00000 n 0004149091 00000 n 0004149168 00000 n 0004149237 00000 n 0004149314 00000 n 0004149509 00000 n 0004149582 00000 n 0004149660 00000 n 0004149752 00000 n 0004149813 00000 n 0004149878 00000 n 0004149955 00000 n 0004150033 00000 n 0004150148 00000 n 0004150217 00000 n 0004150300 00000 n 0004150377 00000 n 0004150455 00000 n 0004150533 00000 n 0004150611 00000 n 0004150694 00000 n 0004150771 00000 n 0004150930 00000 n 0004151003 00000 n 0004151077 00000 n 0004151150 00000 n 0004151228 00000 n 0004151320 00000 n 0004151381 00000 n 0004151446 00000 n 0004151523 00000 n 0004151592 00000 n 0004151669 00000 n 0004151761 00000 n 0004151822 00000 n 0004151887 00000 n 0004151964 00000 n 0004152150 00000 n 0004152223 00000 n 0004152296 00000 n 0004152369 00000 n 0004152438 00000 n 0004152511 00000 n 0004152588 00000 n 0004152680 00000 n 0004152772 00000 n 0004152845 00000 n 0004152923 00000 n 0004153015 00000 n 0004153076 00000 n 0004153141 00000 n 0004153218 00000 n 0004153295 00000 n 0004153364 00000 n 0004153505 00000 n 0004153578 00000 n 0004153651 00000 n 0004153810 00000 n 0004153883 00000 n 0004153960 00000 n 0004154052 00000 n 0004154125 00000 n 0004154198 00000 n 0004154275 00000 n 0004154368 00000 n 0004154442 00000 n 0004154515 00000 n 0004154637 00000 n 0004154710 00000 n 0004154783 00000 n 0004154856 00000 n 0004154929 00000 n 0004155002 00000 n 0004155152 00000 n 0004155262 00000 n 0004155339 00000 n 0004155416 00000 n 0004155493 00000 n 0004155570 00000 n 0004155662 00000 n 0004155735 00000 n 0004155808 00000 n 0004155921 00000 n 0004155994 00000 n 0004156068 00000 n 0004156142 00000 n 0004156253 00000 n 0004156348 00000 n 0004156421 00000 n 0004156494 00000 n 0004156616 00000 n 0004156689 00000 n 0004156793 00000 n 0004156866 00000 n 0004156939 00000 n 0004157012 00000 n 0004157116 00000 n 0004157189 00000 n 0004157281 00000 n 0004157342 00000 n 0004157407 00000 n 0004157480 00000 n 0004157549 00000 n 0004157653 00000 n 0004157726 00000 n 0004157818 00000 n 0004157879 00000 n 0004157944 00000 n 0004158017 00000 n 0004158086 00000 n 0004158199 00000 n 0004158272 00000 n 0004158345 00000 n 0004158437 00000 n 0004158498 00000 n 0004158563 00000 n 0004158636 00000 n 0004158767 00000 n 0004158840 00000 n 0004158913 00000 n 0004158986 00000 n 0004159064 00000 n 0004159142 00000 n 0004159211 00000 n 0004159288 00000 n 0004159401 00000 n 0004159474 00000 n 0004159806 00000 n 0004159879 00000 n 0004159952 00000 n 0004160025 00000 n 0004160102 00000 n 0004160179 00000 n 0004160271 00000 n 0004160345 00000 n 0004160419 00000 n 0004160493 00000 n 0004160571 00000 n 0004160649 00000 n 0004160742 00000 n 0004160815 00000 n 0004160888 00000 n 0004160961 00000 n 0004161034 00000 n 0004161107 00000 n 0004161184 00000 n 0004161276 00000 n 0004161349 00000 n 0004161426 00000 n 0004161503 00000 n 0004161596 00000 n 0004161670 00000 n 0004161743 00000 n 0004161816 00000 n 0004161889 00000 n 0004161962 00000 n 0004162093 00000 n 0004162166 00000 n 0004162239 00000 n 0004162349 00000 n 0004162441 00000 n 0004162502 00000 n 0004162567 00000 n 0004162640 00000 n 0004162713 00000 n 0004162782 00000 n 0004163078 00000 n 0004163151 00000 n 0004163243 00000 n 0004163304 00000 n 0004163369 00000 n 0004163442 00000 n 0004163515 00000 n 0004163592 00000 n 0004163669 00000 n 0004163746 00000 n 0004163815 00000 n 0004163892 00000 n 0004163969 00000 n 0004164046 00000 n 0004164123 00000 n 0004164200 00000 n 0004164277 00000 n 0004164354 00000 n 0004164431 00000 n 0004164508 00000 n 0004164600 00000 n 0004164674 00000 n 0004164748 00000 n 0004164822 00000 n 0004164914 00000 n 0004164975 00000 n 0004165040 00000 n 0004165134 00000 n 0004165205 00000 n 0004165269 00000 n 0004165333 00000 n 0004165425 00000 n 0004165486 00000 n 0004165551 00000 n 0004165622 00000 n 0004165686 00000 n 0004165750 00000 n 0004165825 00000 n 0004165894 00000 n 0004165967 00000 n 0004166059 00000 n 0004166120 00000 n 0004166185 00000 n 0004166258 00000 n 0004166327 00000 n 0004166431 00000 n 0004166504 00000 n 0004166577 00000 n 0004166669 00000 n 0004166730 00000 n 0004166795 00000 n 0004166954 00000 n 0004167027 00000 n 0004167100 00000 n 0004167173 00000 n 0004167251 00000 n 0004167320 00000 n 0004167397 00000 n 0004167474 00000 n 0004167547 00000 n 0004167706 00000 n 0004167779 00000 n 0004167852 00000 n 0004167925 00000 n 0004167998 00000 n 0004168075 00000 n 0004168152 00000 n 0004168245 00000 n 0004168319 00000 n 0004168393 00000 n 0004168552 00000 n 0004168625 00000 n 0004168698 00000 n 0004168771 00000 n 0004168848 00000 n 0004168940 00000 n 0004169013 00000 n 0004169086 00000 n 0004169159 00000 n 0004169222 00000 n 0004169292 00000 n 0004169363 00000 n 0004169436 00000 n 0004169570 00000 n 0004169674 00000 n 0004169747 00000 n 0004169820 00000 n 0004169893 00000 n 0004169997 00000 n 0004170070 00000 n 0004170143 00000 n 0004170253 00000 n 0004170384 00000 n 0004170457 00000 n 0004170549 00000 n 0004170641 00000 n 0004170714 00000 n 0004170845 00000 n 0004170918 00000 n 0004170991 00000 n 0004171068 00000 n 0004171161 00000 n 0004171235 00000 n 0004171309 00000 n 0004171396 00000 n 0004171470 00000 n 0004171565 00000 n 0004171715 00000 n 0004171788 00000 n 0004171866 00000 n 0004171958 00000 n 0004172019 00000 n 0004172084 00000 n 0004172161 00000 n 0004172238 00000 n 0004172315 00000 n 0004172384 00000 n 0004172461 00000 n 0004172553 00000 n 0004172614 00000 n 0004172679 00000 n 0004172838 00000 n 0004172911 00000 n 0004172989 00000 n 0004173081 00000 n 0004173142 00000 n 0004173207 00000 n 0004173321 00000 n 0004173390 00000 n 0004173459 00000 n 0004173536 00000 n 0004173613 00000 n 0004173690 00000 n 0004173767 00000 n 0004173859 00000 n 0004173920 00000 n 0004173985 00000 n 0004174054 00000 n 0004174158 00000 n 0004174231 00000 n 0004174390 00000 n 0004174463 00000 n 0004174555 00000 n 0004174616 00000 n 0004174681 00000 n 0004174754 00000 n 0004174827 00000 n 0004174904 00000 n 0004174981 00000 n 0004175059 00000 n 0004175152 00000 n 0004175221 00000 n 0004175294 00000 n 0004175453 00000 n 0004175526 00000 n 0004175599 00000 n 0004175672 00000 n 0004175749 00000 n 0004175826 00000 n 0004175903 00000 n 0004175995 00000 n 0004176068 00000 n 0004176142 00000 n 0004176256 00000 n 0004176330 00000 n 0004176404 00000 n 0004176467 00000 n 0004176530 00000 n 0004176600 00000 n 0004176671 00000 n 0004176744 00000 n 0004176906 00000 n 0004177065 00000 n 0004177138 00000 n 0004177211 00000 n 0004177302 00000 n 0004177363 00000 n 0004177428 00000 n 0004177501 00000 n 0004177595 00000 n 0004177666 00000 n 0004177730 00000 n 0004177794 00000 n 0004177886 00000 n 0004177947 00000 n 0004178012 00000 n 0004178083 00000 n 0004178147 00000 n 0004178211 00000 n 0004178286 00000 n 0004178355 00000 n 0004178432 00000 n 0004178509 00000 n 0004178586 00000 n 0004178663 00000 n 0004178758 00000 n 0004178819 00000 n 0004178884 00000 n 0004179025 00000 n 0004179098 00000 n 0004179171 00000 n 0004179265 00000 n 0004179336 00000 n 0004179400 00000 n 0004179464 00000 n 0004179556 00000 n 0004179617 00000 n 0004179682 00000 n 0004179753 00000 n 0004179817 00000 n 0004179881 00000 n 0004179957 00000 n 0004180026 00000 n 0004180099 00000 n 0004180177 00000 n 0004180269 00000 n 0004180330 00000 n 0004180395 00000 n 0004180472 00000 n 0004180549 00000 n 0004180717 00000 n 0004180790 00000 n 0004180863 00000 n 0004180940 00000 n 0004181018 00000 n 0004181105 00000 n 0004181179 00000 n 0004181248 00000 n 0004181334 00000 n 0004181407 00000 n 0004181538 00000 n 0004181611 00000 n 0004181689 00000 n 0004181781 00000 n 0004181842 00000 n 0004181907 00000 n 0004181984 00000 n 0004182061 00000 n 0004182138 00000 n 0004182207 00000 n 0004182320 00000 n 0004182393 00000 n 0004182485 00000 n 0004182546 00000 n 0004182611 00000 n 0004182684 00000 n 0004182757 00000 n 0004182943 00000 n 0004183016 00000 n 0004183085 00000 n 0004183163 00000 n 0004183255 00000 n 0004183316 00000 n 0004183381 00000 n 0004183458 00000 n 0004183550 00000 n 0004183611 00000 n 0004183676 00000 n 0004183753 00000 n 0004183831 00000 n 0004183909 00000 n 0004183992 00000 n 0004184061 00000 n 0004184130 00000 n 0004184207 00000 n 0004184284 00000 n 0004184361 00000 n 0004184538 00000 n 0004184611 00000 n 0004184689 00000 n 0004184781 00000 n 0004184842 00000 n 0004184907 00000 n 0004184976 00000 n 0004185053 00000 n 0004185145 00000 n 0004185206 00000 n 0004185271 00000 n 0004185348 00000 n 0004185426 00000 n 0004185509 00000 n 0004185586 00000 n 0004185663 00000 n 0004185740 00000 n 0004185899 00000 n 0004185973 00000 n 0004186042 00000 n 0004186115 00000 n 0004186188 00000 n 0004186266 00000 n 0004186358 00000 n 0004186419 00000 n 0004186484 00000 n 0004186561 00000 n 0004186638 00000 n 0004186715 00000 n 0004186788 00000 n 0004186857 00000 n 0004187373 00000 n 0004187447 00000 n 0004187525 00000 n 0004187603 00000 n 0004187681 00000 n 0004187759 00000 n 0004187837 00000 n 0004187915 00000 n 0004187993 00000 n 0004188071 00000 n 0004188150 00000 n 0004188229 00000 n 0004188323 00000 n 0004188398 00000 n 0004188473 00000 n 0004188548 00000 n 0004188666 00000 n 0004188759 00000 n 0004188820 00000 n 0004188885 00000 n 0004188963 00000 n 0004189042 00000 n 0004189126 00000 n 0004189204 00000 n 0004189297 00000 n 0004189358 00000 n 0004189423 00000 n 0004189492 00000 n 0004189561 00000 n 0004189639 00000 n 0004189718 00000 n 0004189797 00000 n 0004189876 00000 n 0004189955 00000 n 0004190039 00000 n 0004190117 00000 n 0004190195 00000 n 0004190273 00000 n 0004190389 00000 n 0004190482 00000 n 0004190543 00000 n 0004190608 00000 n 0004190686 00000 n 0004190765 00000 n 0004190844 00000 n 0004190923 00000 n 0004191002 00000 n 0004191081 00000 n 0004191160 00000 n 0004191240 00000 n 0004191320 00000 n 0004191400 00000 n 0004191480 00000 n 0004191565 00000 n 0004191644 00000 n 0004191723 00000 n 0004191792 00000 n 0004191870 00000 n 0004192048 00000 n 0004192122 00000 n 0004192196 00000 n 0004192275 00000 n 0004192368 00000 n 0004192429 00000 n 0004192494 00000 n 0004192572 00000 n 0004192688 00000 n 0004192757 00000 n 0004192850 00000 n 0004192911 00000 n 0004192976 00000 n 0004193054 00000 n 0004193132 00000 n 0004193225 00000 n 0004193286 00000 n 0004193351 00000 n 0004193429 00000 n 0004193498 00000 n 0004193567 00000 n 0004193699 00000 n 0004193773 00000 n 0004193847 00000 n 0004193921 00000 n 0004194035 00000 n 0004194109 00000 n 0004194183 00000 n 0004194257 00000 n 0004194331 00000 n 0004194482 00000 n 0004194557 00000 n 0004194637 00000 n 0004194754 00000 n 0004194847 00000 n 0004194908 00000 n 0004194973 00000 n 0004195051 00000 n 0004195129 00000 n 0004195207 00000 n 0004195285 00000 n 0004195454 00000 n 0004195528 00000 n 0004195597 00000 n 0004195671 00000 n 0004195764 00000 n 0004195825 00000 n 0004195890 00000 n 0004195964 00000 n 0004196038 00000 n 0004196112 00000 n 0004196190 00000 n 0004196268 00000 n 0004196361 00000 n 0004196435 00000 n 0004196504 00000 n 0004196719 00000 n 0004196793 00000 n 0004196867 00000 n 0004196959 00000 n 0004197020 00000 n 0004197085 00000 n 0004197159 00000 n 0004197233 00000 n 0004197327 00000 n 0004197398 00000 n 0004197462 00000 n 0004197526 00000 n 0004197619 00000 n 0004197680 00000 n 0004197745 00000 n 0004197816 00000 n 0004197880 00000 n 0004197944 00000 n 0004198020 00000 n 0004198089 00000 n 0004198167 00000 n 0004198245 00000 n 0004198323 00000 n 0004198401 00000 n 0004198479 00000 n 0004198557 00000 n 0004198635 00000 n 0004198740 00000 n 0004198814 00000 n 0004198952 00000 n 0004199013 00000 n 0004199078 00000 n 0004199139 00000 n 0004199204 00000 n 0004199265 00000 n 0004199330 00000 n 0004199426 00000 n 0004199487 00000 n 0004199552 00000 n 0004199731 00000 n 0004199806 00000 n 0004199881 00000 n 0004199956 00000 n 0004200035 00000 n 0004200152 00000 n 0004200221 00000 n 0004200290 00000 n 0004200359 00000 n 0004200428 00000 n 0004200506 00000 n 0004200584 00000 n 0004200662 00000 n 0004200740 00000 n 0004200838 00000 n 0004200899 00000 n 0004200964 00000 n 0004201042 00000 n 0004201220 00000 n 0004201294 00000 n 0004201369 00000 n 0004201444 00000 n 0004201519 00000 n 0004201594 00000 n 0004201663 00000 n 0004201758 00000 n 0004201819 00000 n 0004201884 00000 n 0004201978 00000 n 0004202103 00000 n 0004202185 00000 n 0004202249 00000 n 0004202332 00000 n 0004202414 00000 n 0004202497 00000 n 0004202580 00000 n 0004202663 00000 n 0004202727 00000 n 0004202810 00000 n 0004202892 00000 n 0004202956 00000 n 0004203039 00000 n 0004203121 00000 n 0004203204 00000 n 0004203287 00000 n 0004203371 00000 n 0004203435 00000 n 0004203519 00000 n 0004203601 00000 n 0004203665 00000 n 0004203749 00000 n 0004203831 00000 n 0004203915 00000 n 0004203999 00000 n 0004204083 00000 n 0004204147 00000 n 0004204231 00000 n 0004204313 00000 n 0004204377 00000 n 0004204461 00000 n 0004204552 00000 n 0004204636 00000 n 0004204720 00000 n 0004204804 00000 n 0004204888 00000 n 0004204952 00000 n 0004205036 00000 n 0004205118 00000 n 0004205182 00000 n 0004205266 00000 n 0004205348 00000 n 0004205432 00000 n 0004205516 00000 n 0004205600 00000 n 0004205673 00000 n 0004205757 00000 n 0004205841 00000 n 0004205923 00000 n 0004205996 00000 n 0004206080 00000 n 0004206164 00000 n 0004206264 00000 n 0004206348 00000 n 0004206432 00000 n 0004206516 00000 n 0004206600 00000 n 0004206684 00000 n 0004206757 00000 n 0004206841 00000 n 0004206925 00000 n 0004207007 00000 n 0004207071 00000 n 0004207155 00000 n 0004207219 00000 n 0004207303 00000 n 0004207367 00000 n 0004207451 00000 n 0004207522 00000 n 0004207586 00000 n 0004207638 00000 n 0004207719 00000 n 0004207800 00000 n 0004207874 00000 n 0004207948 00000 n 0004208022 00000 n 0004208096 00000 n 0004208170 00000 n 0004208339 00000 n 0004208413 00000 n 0004208487 00000 n 0004208579 00000 n 0004208640 00000 n 0004208705 00000 n 0004208799 00000 n 0004208870 00000 n 0004208934 00000 n 0004208998 00000 n 0004209091 00000 n 0004209152 00000 n 0004209217 00000 n 0004209288 00000 n 0004209352 00000 n 0004209416 00000 n 0004209493 00000 n 0004209562 00000 n 0004209636 00000 n 0004209715 00000 n 0004209808 00000 n 0004209869 00000 n 0004209934 00000 n 0004210012 00000 n 0004210090 00000 n 0004210168 00000 n 0004210232 00000 n 0004210301 00000 n 0004210371 00000 n 0004210442 00000 n 0004210515 00000 n 0004210623 00000 n 0004210746 00000 n 0004210820 00000 n 0004210898 00000 n 0004210976 00000 n 0004211054 00000 n 0004211147 00000 n 0004211243 00000 n 0004211412 00000 n 0004211486 00000 n 0004211560 00000 n 0004211638 00000 n 0004211716 00000 n 0004211809 00000 n 0004211883 00000 n 0004211961 00000 n 0004212039 00000 n 0004212117 00000 n 0004212195 00000 n 0004212346 00000 n 0004212420 00000 n 0004212499 00000 n 0004212577 00000 n 0004212670 00000 n 0004212731 00000 n 0004212796 00000 n 0004212874 00000 n 0004212952 00000 n 0004213021 00000 n 0004213099 00000 n 0004213177 00000 n 0004213291 00000 n 0004213405 00000 n 0004213479 00000 n 0004213557 00000 n 0004213650 00000 n 0004213724 00000 n 0004213820 00000 n 0004213894 00000 n 0004213969 00000 n 0004214066 00000 n 0004214141 00000 n 0004214216 00000 n 0004214312 00000 n 0004214386 00000 n 0004214460 00000 n 0004214530 00000 n 0004214601 00000 n 0004214674 00000 n 0004214782 00000 n 0004214878 00000 n 0004214952 00000 n 0004215026 00000 n 0004215140 00000 n 0004215214 00000 n 0004215288 00000 n 0004215362 00000 n 0004215436 00000 n 0004215641 00000 n 0004215715 00000 n 0004215794 00000 n 0004215887 00000 n 0004215947 00000 n 0004216012 00000 n 0004216080 00000 n 0004216158 00000 n 0004216251 00000 n 0004216311 00000 n 0004216376 00000 n 0004216454 00000 n 0004216533 00000 n 0004216612 00000 n 0004216691 00000 n 0004216770 00000 n 0004216854 00000 n 0004216932 00000 n 0004216996 00000 n 0004217060 00000 n 0004217128 00000 n 0004217198 00000 n 0004217269 00000 n 0004217342 00000 n 0004217459 00000 n 0004217591 00000 n 0004217665 00000 n 0004217770 00000 n 0004217844 00000 n 0004217918 00000 n 0004217992 00000 n 0004218097 00000 n 0004218171 00000 n 0004218263 00000 n 0004218324 00000 n 0004218389 00000 n 0004218464 00000 n 0004218560 00000 n 0004218652 00000 n 0004218713 00000 n 0004218778 00000 n 0004218845 00000 n 0004218939 00000 n 0004219010 00000 n 0004219074 00000 n 0004219138 00000 n 0004219231 00000 n 0004219292 00000 n 0004219357 00000 n 0004219428 00000 n 0004219492 00000 n 0004219556 00000 n 0004219632 00000 n 0004219726 00000 n 0004219797 00000 n 0004219861 00000 n 0004219925 00000 n 0004220018 00000 n 0004220079 00000 n 0004220144 00000 n 0004220215 00000 n 0004220279 00000 n 0004220343 00000 n 0004220419 00000 n 0004220488 00000 n 0004220557 00000 n 0004220644 00000 n 0004220718 00000 n 0004220823 00000 n 0004220897 00000 n 0004220971 00000 n 0004221045 00000 n 0004221150 00000 n 0004221224 00000 n 0004221594 00000 n 0004221668 00000 n 0004221747 00000 n 0004221840 00000 n 0004221901 00000 n 0004221966 00000 n 0004222044 00000 n 0004222122 00000 n 0004222200 00000 n 0004222280 00000 n 0004222365 00000 n 0004222434 00000 n 0004222512 00000 n 0004222591 00000 n 0004222670 00000 n 0004222754 00000 n 0004222832 00000 n 0004222910 00000 n 0004222988 00000 n 0004223066 00000 n 0004223144 00000 n 0004223222 00000 n 0004223300 00000 n 0004223393 00000 n 0004223454 00000 n 0004223519 00000 n 0004223597 00000 n 0004223675 00000 n 0004223753 00000 n 0004223831 00000 n 0004223947 00000 n 0004224016 00000 n 0004224109 00000 n 0004224170 00000 n 0004224235 00000 n 0004224313 00000 n 0004224392 00000 n 0004224471 00000 n 0004224555 00000 n 0004224633 00000 n 0004224711 00000 n 0004224780 00000 n 0004224967 00000 n 0004225041 00000 n 0004225120 00000 n 0004225213 00000 n 0004225274 00000 n 0004225339 00000 n 0004225417 00000 n 0004225495 00000 n 0004225573 00000 n 0004225651 00000 n 0004225720 00000 n 0004225798 00000 n 0004225891 00000 n 0004225952 00000 n 0004226017 00000 n 0004226095 00000 n 0004226173 00000 n 0004226251 00000 n 0004226374 00000 n 0004226448 00000 n 0004226590 00000 n 0004226664 00000 n 0004226733 00000 n 0004226807 00000 n 0004226900 00000 n 0004226961 00000 n 0004227026 00000 n 0004227100 00000 n 0004227174 00000 n 0004227248 00000 n 0004227322 00000 n 0004227391 00000 n 0004227533 00000 n 0004227607 00000 n 0004227686 00000 n 0004227779 00000 n 0004227840 00000 n 0004227905 00000 n 0004227983 00000 n 0004228061 00000 n 0004228139 00000 n 0004228217 00000 n 0004228313 00000 n 0004228388 00000 n 0004228463 00000 n 0004228532 00000 n 0004228628 00000 n 0004228702 00000 n 0004228776 00000 n 0004228936 00000 n 0004229010 00000 n 0004229088 00000 n 0004229166 00000 n 0004229259 00000 n 0004229333 00000 n 0004229407 00000 n 0004229550 00000 n 0004229625 00000 n 0004229699 00000 n 0004229778 00000 n 0004229871 00000 n 0004229932 00000 n 0004229997 00000 n 0004230075 00000 n 0004230153 00000 n 0004230231 00000 n 0004230400 00000 n 0004230474 00000 n 0004230548 00000 n 0004230617 00000 n 0004230691 00000 n 0004230770 00000 n 0004230863 00000 n 0004230924 00000 n 0004230989 00000 n 0004231067 00000 n 0004231145 00000 n 0004231238 00000 n 0004231299 00000 n 0004231364 00000 n 0004231480 00000 n 0004231549 00000 n 0004231618 00000 n 0004231696 00000 n 0004231911 00000 n 0004231985 00000 n 0004232059 00000 n 0004232133 00000 n 0004232207 00000 n 0004232286 00000 n 0004232379 00000 n 0004232440 00000 n 0004232505 00000 n 0004232584 00000 n 0004232701 00000 n 0004232770 00000 n 0004232848 00000 n 0004232926 00000 n 0004233019 00000 n 0004233080 00000 n 0004233145 00000 n 0004233223 00000 n 0004233301 00000 n 0004233365 00000 n 0004233429 00000 n 0004233498 00000 n 0004233568 00000 n 0004233639 00000 n 0004233712 00000 n 0004233847 00000 n 0004233961 00000 n 0004234035 00000 n 0004234122 00000 n 0004234196 00000 n 0004234328 00000 n 0004234420 00000 n 0004234481 00000 n 0004234546 00000 n 0004234620 00000 n 0004234698 00000 n 0004234792 00000 n 0004234863 00000 n 0004234927 00000 n 0004234991 00000 n 0004235084 00000 n 0004235145 00000 n 0004235210 00000 n 0004235281 00000 n 0004235345 00000 n 0004235409 00000 n 0004235486 00000 n 0004235555 00000 n 0004235633 00000 n 0004235726 00000 n 0004235800 00000 n 0004235951 00000 n 0004236043 00000 n 0004236104 00000 n 0004236169 00000 n 0004236243 00000 n 0004236321 00000 n 0004236399 00000 n 0004236477 00000 n 0004236556 00000 n 0004236635 00000 n 0004236729 00000 n 0004236800 00000 n 0004236864 00000 n 0004236928 00000 n 0004237021 00000 n 0004237082 00000 n 0004237147 00000 n 0004237218 00000 n 0004237282 00000 n 0004237346 00000 n 0004237423 00000 n 0004237492 00000 n 0004237570 00000 n 0004237684 00000 n 0004237758 00000 n 0004237832 00000 n 0004237906 00000 n 0004237980 00000 n 0004238131 00000 n 0004238205 00000 n 0004238279 00000 n 0004238357 00000 n 0004238436 00000 n 0004238515 00000 n 0004238609 00000 n 0004238684 00000 n 0004238759 00000 n 0004238873 00000 n 0004238947 00000 n 0004239021 00000 n 0004239095 00000 n 0004239169 00000 n 0004239283 00000 n 0004239357 00000 n 0004239431 00000 n 0004239505 00000 n 0004239599 00000 n 0004239660 00000 n 0004239725 00000 n 0004239819 00000 n 0004239926 00000 n 0004239999 00000 n 0004240063 00000 n 0004240146 00000 n 0004240237 00000 n 0004240326 00000 n 0004240414 00000 n 0004240502 00000 n 0004240590 00000 n 0004240663 00000 n 0004240727 00000 n 0004240810 00000 n 0004240901 00000 n 0004240990 00000 n 0004241078 00000 n 0004241167 00000 n 0004241256 00000 n 0004241329 00000 n 0004241393 00000 n 0004241477 00000 n 0004241568 00000 n 0004241658 00000 n 0004241747 00000 n 0004241836 00000 n 0004241925 00000 n 0004241998 00000 n 0004242062 00000 n 0004242146 00000 n 0004242237 00000 n 0004242327 00000 n 0004242416 00000 n 0004242505 00000 n 0004242594 00000 n 0004242667 00000 n 0004242731 00000 n 0004242815 00000 n 0004242906 00000 n 0004242996 00000 n 0004243085 00000 n 0004243174 00000 n 0004243263 00000 n 0004243334 00000 n 0004243398 00000 n 0004243450 00000 n 0004243531 00000 n 0004243612 00000 n 0004243872 00000 n 0004243946 00000 n 0004244020 00000 n 0004244098 00000 n 0004244176 00000 n 0004244254 00000 n 0004244332 00000 n 0004244410 00000 n 0004244488 00000 n 0004244566 00000 n 0004244645 00000 n 0004244739 00000 n 0004244814 00000 n 0004244907 00000 n 0004244968 00000 n 0004245033 00000 n 0004245102 00000 n 0004245176 00000 n 0004245254 00000 n 0004245347 00000 n 0004245421 00000 n 0004245495 00000 n 0004245588 00000 n 0004245649 00000 n 0004245714 00000 n 0004245778 00000 n 0004245847 00000 n 0004245917 00000 n 0004245988 00000 n 0004246061 00000 n 0004246196 00000 n 0004246301 00000 n 0004246375 00000 n 0004246449 00000 n 0004246523 00000 n 0004246637 00000 n 0004246729 00000 n 0004246790 00000 n 0004246855 00000 n 0004246949 00000 n 0004247020 00000 n 0004247084 00000 n 0004247148 00000 n 0004247241 00000 n 0004247302 00000 n 0004247367 00000 n 0004247438 00000 n 0004247502 00000 n 0004247566 00000 n 0004247643 00000 n 0004247712 00000 n 0004247786 00000 n 0004247860 00000 n 0004247955 00000 n 0004248016 00000 n 0004248081 00000 n 0004248184 00000 n 0004248255 00000 n 0004248328 00000 n 0004248392 00000 n 0004248471 00000 n 0004248535 00000 n 0004248614 00000 n 0004248703 00000 n 0004248776 00000 n 0004248840 00000 n 0004248923 00000 n 0004249051 00000 n 0004249130 00000 n 0004249209 00000 n 0004249306 00000 n 0004249388 00000 n 0004249470 00000 n 0004249577 00000 n 0004249659 00000 n 0004249741 00000 n 0004249823 00000 n 0004249930 00000 n 0004250012 00000 n 0004250094 00000 n 0004250176 00000 n 0004250265 00000 n 0004250347 00000 n 0004250436 00000 n 0004250518 00000 n 0004250625 00000 n 0004250707 00000 n 0004250789 00000 n 0004250871 00000 n 0004250942 00000 n 0004251006 00000 n 0004251058 00000 n 0004251139 00000 n 0004251220 00000 n 0004251293 00000 n 0004251357 00000 n 0004251440 00000 n 0004251558 00000 n 0004251637 00000 n 0004251716 00000 n 0004251813 00000 n 0004251894 00000 n 0004251975 00000 n 0004252099 00000 n 0004252180 00000 n 0004252261 00000 n 0004252342 00000 n 0004252424 00000 n 0004252506 00000 n 0004252595 00000 n 0004252677 00000 n 0004252784 00000 n 0004252866 00000 n 0004252948 00000 n 0004253030 00000 n 0004253137 00000 n 0004253219 00000 n 0004253301 00000 n 0004253383 00000 n 0004253456 00000 n 0004253520 00000 n 0004253604 00000 n 0004253695 00000 n 0004253775 00000 n 0004253864 00000 n 0004253946 00000 n 0004254035 00000 n 0004254117 00000 n 0004254215 00000 n 0004254297 00000 n 0004254379 00000 n 0004254548 00000 n 0004254622 00000 n 0004254696 00000 n 0004254775 00000 n 0004254853 00000 n 0004254931 00000 n 0004255009 00000 n 0004255083 00000 n 0004255157 00000 n 0004255253 00000 n 0004255328 00000 n 0004255403 00000 n 0004255536 00000 n 0004255649 00000 n 0004255723 00000 n 0004255797 00000 n 0004255871 00000 n 0004255945 00000 n 0004256009 00000 n 0004256114 00000 n 0004256206 00000 n 0004256267 00000 n 0004256332 00000 n 0004256406 00000 n 0004256500 00000 n 0004256571 00000 n 0004256635 00000 n 0004256699 00000 n 0004256792 00000 n 0004256853 00000 n 0004256918 00000 n 0004256989 00000 n 0004257053 00000 n 0004257117 00000 n 0004257193 00000 n 0004257262 00000 n 0004257357 00000 n 0004257418 00000 n 0004257483 00000 n 0004257586 00000 n 0004257657 00000 n 0004257730 00000 n 0004257794 00000 n 0004257873 00000 n 0004257937 00000 n 0004258016 00000 n 0004258132 00000 n 0004258205 00000 n 0004258269 00000 n 0004258352 00000 n 0004258461 00000 n 0004258540 00000 n 0004258637 00000 n 0004258718 00000 n 0004258799 00000 n 0004258887 00000 n 0004258969 00000 n 0004259058 00000 n 0004259140 00000 n 0004259229 00000 n 0004259311 00000 n 0004259418 00000 n 0004259500 00000 n 0004259582 00000 n 0004259664 00000 n 0004259737 00000 n 0004259801 00000 n 0004259885 00000 n 0004259976 00000 n 0004260056 00000 n 0004260145 00000 n 0004260227 00000 n 0004260316 00000 n 0004260398 00000 n 0004260487 00000 n 0004260569 00000 n 0004260640 00000 n 0004260704 00000 n 0004260756 00000 n 0004260837 00000 n 0004260918 00000 n 0004260991 00000 n 0004261055 00000 n 0004261138 00000 n 0004261266 00000 n 0004261345 00000 n 0004261442 00000 n 0004261523 00000 n 0004261604 00000 n 0004261728 00000 n 0004261809 00000 n 0004261890 00000 n 0004261971 00000 n 0004262052 00000 n 0004262134 00000 n 0004262223 00000 n 0004262305 00000 n 0004262403 00000 n 0004262485 00000 n 0004262567 00000 n 0004262665 00000 n 0004262747 00000 n 0004262829 00000 n 0004262945 00000 n 0004263027 00000 n 0004263109 00000 n 0004263191 00000 n 0004263273 00000 n 0004263389 00000 n 0004263471 00000 n 0004263553 00000 n 0004263635 00000 n 0004263717 00000 n 0004263790 00000 n 0004263854 00000 n 0004263938 00000 n 0004264020 00000 n 0004264100 00000 n 0004264189 00000 n 0004264271 00000 n 0004264396 00000 n 0004264478 00000 n 0004264560 00000 n 0004264642 00000 n 0004264724 00000 n 0004264806 00000 n 0004264879 00000 n 0004264943 00000 n 0004265026 00000 n 0004265117 00000 n 0004265196 00000 n 0004265293 00000 n 0004265374 00000 n 0004265455 00000 n 0004265588 00000 n 0004265669 00000 n 0004265750 00000 n 0004265831 00000 n 0004265912 00000 n 0004265994 00000 n 0004266076 00000 n 0004266183 00000 n 0004266265 00000 n 0004266347 00000 n 0004266429 00000 n 0004266502 00000 n 0004266575 00000 n 0004266659 00000 n 0004266743 00000 n 0004266825 00000 n 0004266905 00000 n 0004266994 00000 n 0004267076 00000 n 0004267174 00000 n 0004267256 00000 n 0004267338 00000 n 0004267480 00000 n 0004267554 00000 n 0004267628 00000 n 0004267707 00000 n 0004267800 00000 n 0004267861 00000 n 0004267926 00000 n 0004268004 00000 n 0004268082 00000 n 0004268160 00000 n 0004268265 00000 n 0004268340 00000 n 0004268409 00000 n 0004268483 00000 n 0004268547 00000 n 0004268617 00000 n 0004268688 00000 n 0004268761 00000 n 0004268887 00000 n 0004269047 00000 n 0004269121 00000 n 0004269199 00000 n 0004269277 00000 n 0004269370 00000 n 0004269444 00000 n 0004269518 00000 n 0004269611 00000 n 0004269672 00000 n 0004269737 00000 n 0004269812 00000 n 0004269887 00000 n 0004269956 00000 n 0004270125 00000 n 0004270199 00000 n 0004270292 00000 n 0004270353 00000 n 0004270418 00000 n 0004270492 00000 n 0004270566 00000 n 0004270644 00000 n 0004270722 00000 n 0004270800 00000 n 0004270878 00000 n 0004270972 00000 n 0004271047 00000 n 0004271217 00000 n 0004271292 00000 n 0004271367 00000 n 0004271442 00000 n 0004271511 00000 n 0004271590 00000 n 0004271683 00000 n 0004271744 00000 n 0004271809 00000 n 0004271887 00000 n 0004271980 00000 n 0004272041 00000 n 0004272106 00000 n 0004272184 00000 n 0004272262 00000 n 0004272340 00000 n 0004272409 00000 n 0004272478 00000 n 0004272583 00000 n 0004272657 00000 n 0004272750 00000 n 0004272811 00000 n 0004272876 00000 n 0004272950 00000 n 0004273165 00000 n 0004273239 00000 n 0004273313 00000 n 0004273392 00000 n 0004273470 00000 n 0004273549 00000 n 0004273618 00000 n 0004273696 00000 n 0004273774 00000 n 0004273852 00000 n 0004273930 00000 n 0004274008 00000 n 0004274086 00000 n 0004274164 00000 n 0004274238 00000 n 0004274302 00000 n 0004274366 00000 n 0004274436 00000 n 0004274507 00000 n 0004274580 00000 n 0004274734 00000 n 0004274808 00000 n 0004274882 00000 n 0004275024 00000 n 0004275098 00000 n 0004275172 00000 n 0004275246 00000 n 0004275324 00000 n 0004275402 00000 n 0004275495 00000 n 0004275570 00000 n 0004275859 00000 n 0004275972 00000 n 0004276046 00000 n 0004276120 00000 n 0004276198 00000 n 0004276276 00000 n 0004276354 00000 n 0004276432 00000 n 0004276510 00000 n 0004276588 00000 n 0004276681 00000 n 0004276756 00000 n 0004276831 00000 n 0004277037 00000 n 0004277112 00000 n 0004277187 00000 n 0004277266 00000 n 0004277345 00000 n 0004277424 00000 n 0004277503 00000 n 0004277582 00000 n 0004277661 00000 n 0004277740 00000 n 0004277834 00000 n 0004277908 00000 n 0004277986 00000 n 0004278060 00000 n 0004278134 00000 n 0004278257 00000 n 0004278331 00000 n 0004278405 00000 n 0004278479 00000 n 0004278557 00000 n 0004278631 00000 n 0004278819 00000 n 0004278894 00000 n 0004278969 00000 n 0004279048 00000 n 0004279127 00000 n 0004279206 00000 n 0004279285 00000 n 0004279363 00000 n 0004279456 00000 n 0004279530 00000 n 0004279604 00000 n 0004279682 00000 n 0004279760 00000 n 0004279883 00000 n 0004279957 00000 n 0004280031 00000 n 0004280105 00000 n 0004280180 00000 n 0004280259 00000 n 0004280382 00000 n 0004280456 00000 n 0004280530 00000 n 0004280604 00000 n 0004280678 00000 n 0004280756 00000 n 0004280925 00000 n 0004280999 00000 n 0004281073 00000 n 0004281147 00000 n 0004281221 00000 n 0004281295 00000 n 0004281369 00000 n 0004281447 00000 n 0004281525 00000 n 0004281603 00000 n 0004281681 00000 n 0004281795 00000 n 0004281869 00000 n 0004281982 00000 n 0004282056 00000 n 0004282130 00000 n 0004282390 00000 n 0004282464 00000 n 0004282542 00000 n 0004282620 00000 n 0004282698 00000 n 0004282776 00000 n 0004282854 00000 n 0004282948 00000 n 0004283023 00000 n 0004283098 00000 n 0004283177 00000 n 0004283256 00000 n 0004283335 00000 n 0004283414 00000 n 0004283508 00000 n 0004283583 00000 n 0004283662 00000 n 0004283740 00000 n 0004283818 00000 n 0004283896 00000 n 0004283974 00000 n 0004284125 00000 n 0004284199 00000 n 0004284277 00000 n 0004284370 00000 n 0004284444 00000 n 0004284518 00000 n 0004284596 00000 n 0004284674 00000 n 0004284748 00000 n 0004284899 00000 n 0004284973 00000 n 0004285051 00000 n 0004285144 00000 n 0004285218 00000 n 0004285292 00000 n 0004285370 00000 n 0004285448 00000 n 0004285526 00000 n 0004285631 00000 n 0004285705 00000 n 0004285779 00000 n 0004285853 00000 n 0004285949 00000 n 0004286023 00000 n 0004286097 00000 n 0004286184 00000 n 0004286259 00000 n 0004286382 00000 n 0004286456 00000 n 0004286530 00000 n 0004286690 00000 n 0004286764 00000 n 0004286838 00000 n 0004286912 00000 n 0004286986 00000 n 0004287064 00000 n 0004287142 00000 n 0004287221 00000 n 0004287299 00000 n 0004287377 00000 n 0004287555 00000 n 0004287629 00000 n 0004287703 00000 n 0004287777 00000 n 0004287855 00000 n 0004287933 00000 n 0004288011 00000 n 0004288104 00000 n 0004288179 00000 n 0004288254 00000 n 0004288329 00000 n 0004288404 00000 n 0004288500 00000 n 0004288574 00000 n 0004288648 00000 n 0004288808 00000 n 0004288882 00000 n 0004288960 00000 n 0004289038 00000 n 0004289116 00000 n 0004289209 00000 n 0004289283 00000 n 0004289358 00000 n 0004289433 00000 n 0004289508 00000 n 0004289578 00000 n 0004289649 00000 n 0004289722 00000 n 0004289839 00000 n 0004289935 00000 n 0004290009 00000 n 0004290083 00000 n 0004290197 00000 n 0004290271 00000 n 0004290345 00000 n 0004290419 00000 n 0004290493 00000 n 0004290589 00000 n 0004290664 00000 n 0004290777 00000 n 0004290973 00000 n 0004291047 00000 n 0004291125 00000 n 0004291203 00000 n 0004291296 00000 n 0004291370 00000 n 0004291448 00000 n 0004291541 00000 n 0004291615 00000 n 0004291690 00000 n 0004291787 00000 n 0004291862 00000 n 0004291937 00000 n 0004292125 00000 n 0004292200 00000 n 0004292275 00000 n 0004292349 00000 n 0004292423 00000 n 0004292497 00000 n 0004292576 00000 n 0004292654 00000 n 0004292747 00000 n 0004292808 00000 n 0004292873 00000 n 0004292951 00000 n 0004293029 00000 n 0004293098 00000 n 0004293176 00000 n 0004293254 00000 n 0004293350 00000 n 0004293424 00000 n 0004293498 00000 n 0004293740 00000 n 0004293857 00000 n 0004293950 00000 n 0004294011 00000 n 0004294076 00000 n 0004294154 00000 n 0004294233 00000 n 0004294312 00000 n 0004294391 00000 n 0004294470 00000 n 0004294549 00000 n 0004294618 00000 n 0004294697 00000 n 0004294781 00000 n 0004294859 00000 n 0004294938 00000 n 0004295017 00000 n 0004295101 00000 n 0004295179 00000 n 0004295257 00000 n 0004295321 00000 n 0004295385 00000 n 0004295455 00000 n 0004295526 00000 n 0004295599 00000 n 0004295663 00000 n 0004295733 00000 n 0004295804 00000 n 0004295877 00000 n 0004296031 00000 n 0004296173 00000 n 0004296247 00000 n 0004296340 00000 n 0004296401 00000 n 0004296466 00000 n 0004296540 00000 n 0004296618 00000 n 0004296696 00000 n 0004296789 00000 n 0004296863 00000 n 0004296932 00000 n 0004297083 00000 n 0004297157 00000 n 0004297250 00000 n 0004297311 00000 n 0004297376 00000 n 0004297481 00000 n 0004297555 00000 n 0004297629 00000 n 0004297703 00000 n 0004297826 00000 n 0004297900 00000 n 0004297979 00000 n 0004298096 00000 n 0004298165 00000 n 0004298258 00000 n 0004298332 00000 n 0004298419 00000 n 0004298493 00000 n 0004298671 00000 n 0004298745 00000 n 0004298819 00000 n 0004298898 00000 n 0004298976 00000 n 0004299055 00000 n 0004299130 00000 n 0004299210 00000 n 0004299289 00000 n 0004299368 00000 n 0004299481 00000 n 0004299555 00000 n 0004299642 00000 n 0004299716 00000 n 0004299803 00000 n 0004299877 00000 n 0004300009 00000 n 0004300083 00000 n 0004300176 00000 n 0004300237 00000 n 0004300302 00000 n 0004300377 00000 n 0004300456 00000 n 0004300525 00000 n 0004300618 00000 n 0004300692 00000 n 0004300879 00000 n 0004300953 00000 n 0004301046 00000 n 0004301107 00000 n 0004301172 00000 n 0004301246 00000 n 0004301324 00000 n 0004301402 00000 n 0004301495 00000 n 0004301564 00000 n 0004301638 00000 n 0004301731 00000 n 0004301824 00000 n 0004301917 00000 n 0004301991 00000 n 0004302065 00000 n 0004302179 00000 n 0004302253 00000 n 0004302327 00000 n 0004302420 00000 n 0004302481 00000 n 0004302546 00000 n 0004302620 00000 n 0004302689 00000 n 0004302803 00000 n 0004302877 00000 n 0004302951 00000 n 0004303025 00000 n 0004303118 00000 n 0004303179 00000 n 0004303244 00000 n 0004303404 00000 n 0004303478 00000 n 0004303556 00000 n 0004303649 00000 n 0004303718 00000 n 0004303792 00000 n 0004303866 00000 n 0004303959 00000 n 0004304020 00000 n 0004304085 00000 n 0004304159 00000 n 0004304264 00000 n 0004304338 00000 n 0004304412 00000 n 0004304486 00000 n 0004304555 00000 n 0004304651 00000 n 0004304725 00000 n 0004304799 00000 n 0004304922 00000 n 0004304996 00000 n 0004305070 00000 n 0004305163 00000 n 0004305224 00000 n 0004305289 00000 n 0004305353 00000 n 0004305417 00000 n 0004305486 00000 n 0004305556 00000 n 0004305627 00000 n 0004305700 00000 n 0004305881 00000 n 0004305955 00000 n 0004306029 00000 n 0004306122 00000 n 0004306183 00000 n 0004306248 00000 n 0004306322 00000 n 0004306400 00000 n 0004306478 00000 n 0004306556 00000 n 0004306634 00000 n 0004306728 00000 n 0004306797 00000 n 0004307002 00000 n 0004307076 00000 n 0004307169 00000 n 0004307230 00000 n 0004307295 00000 n 0004307369 00000 n 0004307492 00000 n 0004307566 00000 n 0004307640 00000 n 0004307714 00000 n 0004307826 00000 n 0004307895 00000 n 0004307969 00000 n 0004308101 00000 n 0004308175 00000 n 0004308253 00000 n 0004308331 00000 n 0004308409 00000 n 0004308502 00000 n 0004308576 00000 n 0004308672 00000 n 0004308747 00000 n 0004308822 00000 n 0004308919 00000 n 0004309032 00000 n 0004309106 00000 n 0004309202 00000 n 0004309276 00000 n 0004309350 00000 n 0004309473 00000 n 0004309547 00000 n 0004309621 00000 n 0004309695 00000 n 0004309769 00000 n 0004309843 00000 n 0004309994 00000 n 0004310068 00000 n 0004310147 00000 n 0004310225 00000 n 0004310303 00000 n 0004310377 00000 n 0004310451 00000 n 0004310525 00000 n 0004310599 00000 n 0004310768 00000 n 0004310842 00000 n 0004310916 00000 n 0004310990 00000 n 0004311064 00000 n 0004311138 00000 n 0004311216 00000 n 0004311294 00000 n 0004311372 00000 n 0004311465 00000 n 0004311540 00000 n 0004311637 00000 n 0004311712 00000 n 0004311787 00000 n 0004311893 00000 n 0004311968 00000 n 0004312043 00000 n 0004312117 00000 n 0004312313 00000 n 0004312387 00000 n 0004312461 00000 n 0004312554 00000 n 0004312647 00000 n 0004312740 00000 n 0004312814 00000 n 0004312907 00000 n 0004312968 00000 n 0004313033 00000 n 0004313107 00000 n 0004313185 00000 n 0004313263 00000 n 0004313356 00000 n 0004313430 00000 n 0004313499 00000 n 0004313594 00000 n 0004313655 00000 n 0004313720 00000 n 0004313814 00000 n 0004314031 00000 n 0004314113 00000 n 0004314177 00000 n 0004314260 00000 n 0004314324 00000 n 0004314407 00000 n 0004314471 00000 n 0004314554 00000 n 0004314636 00000 n 0004314685 00000 n 0004314784 00000 n 0004314867 00000 n 0004314950 00000 n 0004315033 00000 n 0004315097 00000 n 0004315180 00000 n 0004315244 00000 n 0004315327 00000 n 0004315400 00000 n 0004315464 00000 n 0004315548 00000 n 0004315612 00000 n 0004315696 00000 n 0004315769 00000 n 0004315833 00000 n 0004315917 00000 n 0004315981 00000 n 0004316065 00000 n 0004316138 00000 n 0004316202 00000 n 0004316286 00000 n 0004316350 00000 n 0004316434 00000 n 0004316507 00000 n 0004316571 00000 n 0004316655 00000 n 0004316719 00000 n 0004316803 00000 n 0004316876 00000 n 0004316940 00000 n 0004317024 00000 n 0004317088 00000 n 0004317172 00000 n 0004317245 00000 n 0004317309 00000 n 0004317393 00000 n 0004317457 00000 n 0004317541 00000 n 0004317614 00000 n 0004317678 00000 n 0004317762 00000 n 0004317835 00000 n 0004317919 00000 n 0004318003 00000 n 0004318074 00000 n 0004318138 00000 n 0004318190 00000 n 0004318271 00000 n 0004318352 00000 n 0004318434 00000 n 0004318483 00000 n 0004318573 00000 n 0004318656 00000 n 0004318739 00000 n 0004318803 00000 n 0004318886 00000 n 0004318950 00000 n 0004319033 00000 n 0004319106 00000 n 0004319170 00000 n 0004319253 00000 n 0004319317 00000 n 0004319400 00000 n 0004319473 00000 n 0004319537 00000 n 0004319620 00000 n 0004319684 00000 n 0004319767 00000 n 0004319840 00000 n 0004319904 00000 n 0004319987 00000 n 0004320051 00000 n 0004320134 00000 n 0004320207 00000 n 0004320271 00000 n 0004320355 00000 n 0004320419 00000 n 0004320503 00000 n 0004320576 00000 n 0004320640 00000 n 0004320724 00000 n 0004320788 00000 n 0004320872 00000 n 0004320945 00000 n 0004321009 00000 n 0004321093 00000 n 0004321157 00000 n 0004321241 00000 n 0004321323 00000 n 0004321387 00000 n 0004321471 00000 n 0004321535 00000 n 0004321619 00000 n 0004321692 00000 n 0004321776 00000 n 0004321860 00000 n 0004322002 00000 n 0004322076 00000 n 0004322169 00000 n 0004322230 00000 n 0004322295 00000 n 0004322369 00000 n 0004322474 00000 n 0004322548 00000 n 0004322622 00000 n 0004322696 00000 n 0004322765 00000 n 0004322952 00000 n 0004323026 00000 n 0004323119 00000 n 0004323180 00000 n 0004323245 00000 n 0004323319 00000 n 0004323397 00000 n 0004323475 00000 n 0004323591 00000 n 0004323660 00000 n 0004323738 00000 n 0004323816 00000 n 0004323894 00000 n 0004323972 00000 n 0004324050 00000 n 0004324145 00000 n 0004324206 00000 n 0004324271 00000 n 0004324365 00000 n 0004324509 00000 n 0004324600 00000 n 0004324664 00000 n 0004324743 00000 n 0004324807 00000 n 0004324890 00000 n 0004324954 00000 n 0004325033 00000 n 0004325106 00000 n 0004325185 00000 n 0004325264 00000 n 0004325355 00000 n 0004325419 00000 n 0004325498 00000 n 0004325562 00000 n 0004325645 00000 n 0004325709 00000 n 0004325788 00000 n 0004325852 00000 n 0004325932 00000 n 0004326023 00000 n 0004326087 00000 n 0004326167 00000 n 0004326231 00000 n 0004326315 00000 n 0004326379 00000 n 0004326459 00000 n 0004326523 00000 n 0004326603 00000 n 0004326694 00000 n 0004326758 00000 n 0004326838 00000 n 0004326902 00000 n 0004326986 00000 n 0004327050 00000 n 0004327134 00000 n 0004327207 00000 n 0004327287 00000 n 0004327367 00000 n 0004327458 00000 n 0004327522 00000 n 0004327602 00000 n 0004327666 00000 n 0004327750 00000 n 0004327814 00000 n 0004327898 00000 n 0004327971 00000 n 0004328051 00000 n 0004328131 00000 n 0004328202 00000 n 0004328266 00000 n 0004328318 00000 n 0004328399 00000 n 0004328480 00000 n 0004328571 00000 n 0004328635 00000 n 0004328714 00000 n 0004328778 00000 n 0004328861 00000 n 0004328925 00000 n 0004329008 00000 n 0004329081 00000 n 0004329160 00000 n 0004329239 00000 n 0004329330 00000 n 0004329394 00000 n 0004329473 00000 n 0004329537 00000 n 0004329620 00000 n 0004329684 00000 n 0004329767 00000 n 0004329840 00000 n 0004329919 00000 n 0004329998 00000 n 0004330089 00000 n 0004330153 00000 n 0004330233 00000 n 0004330297 00000 n 0004330381 00000 n 0004330445 00000 n 0004330529 00000 n 0004330602 00000 n 0004330682 00000 n 0004330762 00000 n 0004330853 00000 n 0004330917 00000 n 0004330997 00000 n 0004331061 00000 n 0004331145 00000 n 0004331209 00000 n 0004331293 00000 n 0004331357 00000 n 0004331437 00000 n 0004331615 00000 n 0004331689 00000 n 0004331782 00000 n 0004331843 00000 n 0004331908 00000 n 0004331982 00000 n 0004332060 00000 n 0004332138 00000 n 0004332254 00000 n 0004332323 00000 n 0004332401 00000 n 0004332479 00000 n 0004332557 00000 n 0004332635 00000 n 0004332727 00000 n 0004332788 00000 n 0004332853 00000 n 0004332947 00000 n 0004333145 00000 n 0004333236 00000 n 0004333300 00000 n 0004333379 00000 n 0004333443 00000 n 0004333526 00000 n 0004333590 00000 n 0004333669 00000 n 0004333742 00000 n 0004333821 00000 n 0004333900 00000 n 0004333991 00000 n 0004334055 00000 n 0004334134 00000 n 0004334198 00000 n 0004334281 00000 n 0004334345 00000 n 0004334424 00000 n 0004334488 00000 n 0004334568 00000 n 0004334659 00000 n 0004334723 00000 n 0004334803 00000 n 0004334867 00000 n 0004334951 00000 n 0004335015 00000 n 0004335099 00000 n 0004335163 00000 n 0004335243 00000 n 0004335334 00000 n 0004335398 00000 n 0004335478 00000 n 0004335542 00000 n 0004335626 00000 n 0004335690 00000 n 0004335770 00000 n 0004335834 00000 n 0004335914 00000 n 0004336005 00000 n 0004336069 00000 n 0004336149 00000 n 0004336213 00000 n 0004336297 00000 n 0004336361 00000 n 0004336441 00000 n 0004336505 00000 n 0004336585 00000 n 0004336676 00000 n 0004336740 00000 n 0004336820 00000 n 0004336884 00000 n 0004336968 00000 n 0004337032 00000 n 0004337112 00000 n 0004337176 00000 n 0004337256 00000 n 0004337347 00000 n 0004337411 00000 n 0004337491 00000 n 0004337555 00000 n 0004337639 00000 n 0004337703 00000 n 0004337787 00000 n 0004337851 00000 n 0004337931 00000 n 0004338022 00000 n 0004338086 00000 n 0004338166 00000 n 0004338230 00000 n 0004338314 00000 n 0004338378 00000 n 0004338462 00000 n 0004338526 00000 n 0004338606 00000 n 0004338697 00000 n 0004338761 00000 n 0004338841 00000 n 0004338905 00000 n 0004338989 00000 n 0004339053 00000 n 0004339137 00000 n 0004339210 00000 n 0004339290 00000 n 0004339370 00000 n 0004339441 00000 n 0004339505 00000 n 0004339557 00000 n 0004339638 00000 n 0004339719 00000 n 0004339810 00000 n 0004339874 00000 n 0004339953 00000 n 0004340017 00000 n 0004340100 00000 n 0004340164 00000 n 0004340247 00000 n 0004340320 00000 n 0004340399 00000 n 0004340478 00000 n 0004340569 00000 n 0004340633 00000 n 0004340712 00000 n 0004340776 00000 n 0004340855 00000 n 0004340919 00000 n 0004340998 00000 n 0004341062 00000 n 0004341141 00000 n 0004341232 00000 n 0004341296 00000 n 0004341375 00000 n 0004341439 00000 n 0004341519 00000 n 0004341583 00000 n 0004341663 00000 n 0004341727 00000 n 0004341807 00000 n 0004341898 00000 n 0004341962 00000 n 0004342042 00000 n 0004342106 00000 n 0004342186 00000 n 0004342250 00000 n 0004342330 00000 n 0004342394 00000 n 0004342474 00000 n 0004342565 00000 n 0004342629 00000 n 0004342709 00000 n 0004342773 00000 n 0004342853 00000 n 0004342917 00000 n 0004342997 00000 n 0004343061 00000 n 0004343141 00000 n 0004343232 00000 n 0004343296 00000 n 0004343376 00000 n 0004343440 00000 n 0004343520 00000 n 0004343584 00000 n 0004343664 00000 n 0004343728 00000 n 0004343808 00000 n 0004343968 00000 n 0004344042 00000 n 0004344135 00000 n 0004344196 00000 n 0004344261 00000 n 0004344335 00000 n 0004344409 00000 n 0004344487 00000 n 0004344565 00000 n 0004344643 00000 n 0004344759 00000 n 0004344828 00000 n 0004344892 00000 n 0004344962 00000 n 0004345033 00000 n 0004345106 00000 n 0004345314 00000 n 0004345388 00000 n 0004345462 00000 n 0004345555 00000 n 0004345615 00000 n 0004345680 00000 n 0004345748 00000 n 0004345890 00000 n 0004345964 00000 n 0004346038 00000 n 0004346131 00000 n 0004346191 00000 n 0004346256 00000 n 0004346330 00000 n 0004346404 00000 n 0004346478 00000 n 0004346552 00000 n 0004346620 00000 n 0004346807 00000 n 0004346881 00000 n 0004346974 00000 n 0004347034 00000 n 0004347099 00000 n 0004347173 00000 n 0004347251 00000 n 0004347329 00000 n 0004347407 00000 n 0004347485 00000 n 0004347578 00000 n 0004347653 00000 n 0004347766 00000 n 0004347834 00000 n 0004347927 00000 n 0004347987 00000 n 0004348052 00000 n 0004348126 00000 n 0004348194 00000 n 0004348363 00000 n 0004348437 00000 n 0004348530 00000 n 0004348590 00000 n 0004348655 00000 n 0004348742 00000 n 0004348816 00000 n 0004348912 00000 n 0004348986 00000 n 0004349060 00000 n 0004349156 00000 n 0004349269 00000 n 0004349337 00000 n 0004349411 00000 n 0004349516 00000 n 0004349590 00000 n 0004349664 00000 n 0004349738 00000 n 0004349825 00000 n 0004349899 00000 n 0004349986 00000 n 0004350060 00000 n 0004350157 00000 n 0004350232 00000 n 0004350307 00000 n 0004350422 00000 n 0004350497 00000 n 0004350572 00000 n 0004350685 00000 n 0004350759 00000 n 0004350901 00000 n 0004350975 00000 n 0004351068 00000 n 0004351128 00000 n 0004351193 00000 n 0004351280 00000 n 0004351354 00000 n 0004351441 00000 n 0004351515 00000 n 0004351583 00000 n 0004351715 00000 n 0004351789 00000 n 0004351863 00000 n 0004351937 00000 n 0004352011 00000 n 0004352089 00000 n 0004352167 00000 n 0004352281 00000 n 0004352355 00000 n 0004352433 00000 n 0004352512 00000 n 0004352606 00000 n 0004352785 00000 n 0004352898 00000 n 0004352972 00000 n 0004353046 00000 n 0004353120 00000 n 0004353213 00000 n 0004353273 00000 n 0004353338 00000 n 0004353412 00000 n 0004353490 00000 n 0004353568 00000 n 0004353661 00000 n 0004353736 00000 n 0004353804 00000 n 0004353878 00000 n 0004354083 00000 n 0004354157 00000 n 0004354250 00000 n 0004354310 00000 n 0004354375 00000 n 0004354462 00000 n 0004354536 00000 n 0004354659 00000 n 0004354733 00000 n 0004354801 00000 n 0004354875 00000 n 0004354953 00000 n 0004355031 00000 n 0004355109 00000 n 0004355223 00000 n 0004355297 00000 n 0004355371 00000 n 0004355445 00000 n 0004355519 00000 n 0004355679 00000 n 0004355754 00000 n 0004355832 00000 n 0004355910 00000 n 0004356003 00000 n 0004356077 00000 n 0004356151 00000 n 0004356225 00000 n 0004356303 00000 n 0004356381 00000 n 0004356477 00000 n 0004356551 00000 n 0004356626 00000 n 0004356714 00000 n 0004356789 00000 n 0004356913 00000 n 0004357026 00000 n 0004357100 00000 n 0004357174 00000 n 0004357248 00000 n 0004357322 00000 n 0004357482 00000 n 0004357556 00000 n 0004357630 00000 n 0004357704 00000 n 0004357816 00000 n 0004357894 00000 n 0004357972 00000 n 0004358050 00000 n 0004358143 00000 n 0004358217 00000 n 0004358313 00000 n 0004358387 00000 n 0004358461 00000 n 0004358557 00000 n 0004358632 00000 n 0004358707 00000 n 0004358804 00000 n 0004358879 00000 n 0004358953 00000 n 0004359158 00000 n 0004359232 00000 n 0004359306 00000 n 0004359384 00000 n 0004359477 00000 n 0004359551 00000 n 0004359625 00000 n 0004359699 00000 n 0004359792 00000 n 0004359852 00000 n 0004359917 00000 n 0004359991 00000 n 0004360069 00000 n 0004360147 00000 n 0004360225 00000 n 0004360318 00000 n 0004360392 00000 n 0004360460 00000 n 0004360592 00000 n 0004360666 00000 n 0004360759 00000 n 0004360819 00000 n 0004360884 00000 n 0004360971 00000 n 0004361045 00000 n 0004361168 00000 n 0004361242 00000 n 0004361316 00000 n 0004361390 00000 n 0004361469 00000 n 0004361537 00000 n 0004361615 00000 n 0004361729 00000 n 0004361803 00000 n 0004361877 00000 n 0004361951 00000 n 0004362025 00000 n 0004362130 00000 n 0004362204 00000 n 0004362278 00000 n 0004362352 00000 n 0004362549 00000 n 0004362662 00000 n 0004362755 00000 n 0004362815 00000 n 0004362880 00000 n 0004362954 00000 n 0004363028 00000 n 0004363102 00000 n 0004363189 00000 n 0004363263 00000 n 0004363368 00000 n 0004363442 00000 n 0004363517 00000 n 0004363585 00000 n 0004363659 00000 n 0004363764 00000 n 0004363838 00000 n 0004363912 00000 n 0004363986 00000 n 0004364091 00000 n 0004364165 00000 n 0004364239 00000 n 0004364313 00000 n 0004364436 00000 n 0004364511 00000 n 0004364586 00000 n 0004364665 00000 n 0004364759 00000 n 0004364833 00000 n 0004365002 00000 n 0004365076 00000 n 0004365150 00000 n 0004365224 00000 n 0004365336 00000 n 0004365429 00000 n 0004365489 00000 n 0004365554 00000 n 0004365628 00000 n 0004365706 00000 n 0004365784 00000 n 0004365877 00000 n 0004365951 00000 n 0004366093 00000 n 0004366205 00000 n 0004366273 00000 n 0004366347 00000 n 0004366421 00000 n 0004366499 00000 n 0004366592 00000 n 0004366666 00000 n 0004366740 00000 n 0004366909 00000 n 0004366983 00000 n 0004367057 00000 n 0004367131 00000 n 0004367224 00000 n 0004367284 00000 n 0004367349 00000 n 0004367423 00000 n 0004367501 00000 n 0004367579 00000 n 0004367672 00000 n 0004367746 00000 n 0004367820 00000 n 0004367888 00000 n 0004368011 00000 n 0004368085 00000 n 0004368178 00000 n 0004368238 00000 n 0004368303 00000 n 0004368390 00000 n 0004368464 00000 n 0004368551 00000 n 0004368625 00000 n 0004368721 00000 n 0004368795 00000 n 0004368870 00000 n 0004368938 00000 n 0004369061 00000 n 0004369135 00000 n 0004369228 00000 n 0004369288 00000 n 0004369353 00000 n 0004369440 00000 n 0004369514 00000 n 0004369610 00000 n 0004369684 00000 n 0004369758 00000 n 0004369826 00000 n 0004369931 00000 n 0004370005 00000 n 0004370079 00000 n 0004370153 00000 n 0004370331 00000 n 0004370405 00000 n 0004370498 00000 n 0004370558 00000 n 0004370623 00000 n 0004370755 00000 n 0004370829 00000 n 0004370968 00000 n 0004371028 00000 n 0004371093 00000 n 0004371153 00000 n 0004371218 00000 n 0004371278 00000 n 0004371343 00000 n 0004371411 00000 n 0004371479 00000 n 0004371547 00000 n 0004371615 00000 n 0004371689 00000 n 0004371787 00000 n 0004371847 00000 n 0004371912 00000 n 0004372010 00000 n 0004372070 00000 n 0004372135 00000 n 0004372233 00000 n 0004372293 00000 n 0004372358 00000 n 0004372472 00000 n 0004372546 00000 n 0004372620 00000 n 0004372695 00000 n 0004372770 00000 n 0004372940 00000 n 0004373015 00000 n 0004373090 00000 n 0004373158 00000 n 0004373226 00000 n 0004373294 00000 n 0004373368 00000 n 0004373442 00000 n 0004373516 00000 n 0004373590 00000 n 0004373664 00000 n 0004373742 00000 n 0004373820 00000 n 0004373898 00000 n 0004374003 00000 n 0004374077 00000 n 0004374151 00000 n 0004374225 00000 n 0004374440 00000 n 0004374514 00000 n 0004374592 00000 n 0004374685 00000 n 0004374759 00000 n 0004374837 00000 n 0004374915 00000 n 0004374993 00000 n 0004375072 00000 n 0004375151 00000 n 0004375230 00000 n 0004375309 00000 n 0004375388 00000 n 0004375482 00000 n 0004375595 00000 n 0004375669 00000 n 0004375838 00000 n 0004375912 00000 n 0004375986 00000 n 0004376060 00000 n 0004376134 00000 n 0004376208 00000 n 0004376282 00000 n 0004376356 00000 n 0004376431 00000 n 0004376506 00000 n 0004376581 00000 n 0004376751 00000 n 0004376864 00000 n 0004376938 00000 n 0004377012 00000 n 0004377086 00000 n 0004377160 00000 n 0004377238 00000 n 0004377316 00000 n 0004377394 00000 n 0004377472 00000 n 0004377550 00000 n 0004377783 00000 n 0004377857 00000 n 0004377931 00000 n 0004378005 00000 n 0004378079 00000 n 0004378157 00000 n 0004378235 00000 n 0004378313 00000 n 0004378391 00000 n 0004378470 00000 n 0004378549 00000 n 0004378628 00000 n 0004378706 00000 n 0004378784 00000 n 0004378862 00000 n 0004378940 00000 n 0004379018 00000 n 0004379096 00000 n 0004379210 00000 n 0004379304 00000 n 0004379364 00000 n 0004379429 00000 n 0004379522 00000 n 0004379582 00000 n 0004379647 00000 n 0004379722 00000 n 0004379835 00000 n 0004379903 00000 n 0004379971 00000 n 0004380140 00000 n 0004380214 00000 n 0004380288 00000 n 0004380381 00000 n 0004380441 00000 n 0004380506 00000 n 0004380580 00000 n 0004380654 00000 n 0004380728 00000 n 0004380806 00000 n 0004380874 00000 n 0004380952 00000 n 0004381045 00000 n 0004381119 00000 n 0004381189 00000 n 0004381260 00000 n 0004381333 00000 n 0004381496 00000 n 0004381570 00000 n 0004381644 00000 n 0004381718 00000 n 0004381811 00000 n 0004381872 00000 n 0004381937 00000 n 0004382011 00000 n 0004382085 00000 n 0004382154 00000 n 0004382350 00000 n 0004382424 00000 n 0004382517 00000 n 0004382578 00000 n 0004382643 00000 n 0004382717 00000 n 0004382795 00000 n 0004382888 00000 n 0004382962 00000 n 0004383036 00000 n 0004383150 00000 n 0004383225 00000 n 0004383304 00000 n 0004383398 00000 n 0004383467 00000 n 0004383541 00000 n 0004383628 00000 n 0004383702 00000 n 0004383798 00000 n 0004383872 00000 n 0004383946 00000 n 0004384088 00000 n 0004384162 00000 n 0004384236 00000 n 0004384329 00000 n 0004384390 00000 n 0004384455 00000 n 0004384529 00000 n 0004384607 00000 n 0004384700 00000 n 0004384774 00000 n 0004384916 00000 n 0004384990 00000 n 0004385059 00000 n 0004385133 00000 n 0004385226 00000 n 0004385287 00000 n 0004385352 00000 n 0004385426 00000 n 0004385504 00000 n 0004385597 00000 n 0004385671 00000 n 0004385758 00000 n 0004385832 00000 n 0004385964 00000 n 0004386077 00000 n 0004386146 00000 n 0004386220 00000 n 0004386313 00000 n 0004386374 00000 n 0004386439 00000 n 0004386526 00000 n 0004386600 00000 n 0004386714 00000 n 0004386788 00000 n 0004386862 00000 n 0004386936 00000 n 0004387011 00000 n 0004387144 00000 n 0004387257 00000 n 0004387326 00000 n 0004387400 00000 n 0004387478 00000 n 0004387556 00000 n 0004387649 00000 n 0004387723 00000 n 0004387928 00000 n 0004388002 00000 n 0004388076 00000 n 0004388169 00000 n 0004388230 00000 n 0004388295 00000 n 0004388369 00000 n 0004388447 00000 n 0004388525 00000 n 0004388603 00000 n 0004388681 00000 n 0004388760 00000 n 0004388839 00000 n 0004388933 00000 n 0004389002 00000 n 0004389162 00000 n 0004389300 00000 n 0004389399 00000 n 0004389460 00000 n 0004389525 00000 n 0004389624 00000 n 0004389685 00000 n 0004389750 00000 n 0004389849 00000 n 0004389910 00000 n 0004389975 00000 n 0004390074 00000 n 0004390135 00000 n 0004390200 00000 n 0004390300 00000 n 0004390361 00000 n 0004390426 00000 n 0004390526 00000 n 0004390587 00000 n 0004390652 00000 n 0004390752 00000 n 0004390813 00000 n 0004390878 00000 n 0004390953 00000 n 0004391032 00000 n 0004391111 00000 n 0004391191 00000 n 0004391271 00000 n 0004391394 00000 n 0004391463 00000 n 0004391532 00000 n 0004391601 00000 n 0004391670 00000 n 0004391739 00000 n 0004391808 00000 n 0004391877 00000 n 0004391955 00000 n 0004392033 00000 n 0004392193 00000 n 0004392267 00000 n 0004392341 00000 n 0004392415 00000 n 0004392489 00000 n 0004392563 00000 n 0004392637 00000 n 0004392712 00000 n 0004392787 00000 n 0004392862 00000 n 0004392995 00000 n 0004393070 00000 n 0004393144 00000 n 0004393223 00000 n 0004393301 00000 n 0004393379 00000 n 0004393473 00000 n 0004393534 00000 n 0004393599 00000 n 0004393668 00000 n 0004393738 00000 n 0004393809 00000 n 0004393882 00000 n 0004394045 00000 n 0004394119 00000 n 0004394193 00000 n 0004394267 00000 n 0004394360 00000 n 0004394421 00000 n 0004394486 00000 n 0004394560 00000 n 0004394738 00000 n 0004394812 00000 n 0004394886 00000 n 0004394955 00000 n 0004395029 00000 n 0004395103 00000 n 0004395196 00000 n 0004395257 00000 n 0004395322 00000 n 0004395396 00000 n 0004395483 00000 n 0004395557 00000 n 0004395653 00000 n 0004395727 00000 n 0004395801 00000 n 0004395898 00000 n 0004396011 00000 n 0004396080 00000 n 0004396154 00000 n 0004396241 00000 n 0004396315 00000 n 0004396402 00000 n 0004396476 00000 n 0004396636 00000 n 0004396710 00000 n 0004396784 00000 n 0004396877 00000 n 0004396938 00000 n 0004397003 00000 n 0004397078 00000 n 0004397147 00000 n 0004397225 00000 n 0004397303 00000 n 0004397396 00000 n 0004397470 00000 n 0004397544 00000 n 0004397713 00000 n 0004397787 00000 n 0004397861 00000 n 0004397954 00000 n 0004398015 00000 n 0004398080 00000 n 0004398149 00000 n 0004398223 00000 n 0004398297 00000 n 0004398371 00000 n 0004398449 00000 n 0004398527 00000 n 0004398620 00000 n 0004398694 00000 n 0004398817 00000 n 0004398891 00000 n 0004398965 00000 n 0004399058 00000 n 0004399119 00000 n 0004399184 00000 n 0004399271 00000 n 0004399345 00000 n 0004399450 00000 n 0004399524 00000 n 0004399588 00000 n 0004399652 00000 n 0004399721 00000 n 0004399791 00000 n 0004399862 00000 n 0004399935 00000 n 0004400162 00000 n 0004400236 00000 n 0004400310 00000 n 0004400403 00000 n 0004400464 00000 n 0004400529 00000 n 0004400603 00000 n 0004400699 00000 n 0004400773 00000 n 0004400847 00000 n 0004400916 00000 n 0004401058 00000 n 0004401132 00000 n 0004401206 00000 n 0004401299 00000 n 0004401360 00000 n 0004401425 00000 n 0004401499 00000 n 0004401573 00000 n 0004401647 00000 n 0004401721 00000 n 0004401790 00000 n 0004401913 00000 n 0004401987 00000 n 0004402080 00000 n 0004402141 00000 n 0004402206 00000 n 0004402280 00000 n 0004402394 00000 n 0004402468 00000 n 0004402542 00000 n 0004402616 00000 n 0004402690 00000 n 0004402759 00000 n 0004402855 00000 n 0004402929 00000 n 0004403003 00000 n 0004403227 00000 n 0004403301 00000 n 0004403394 00000 n 0004403455 00000 n 0004403520 00000 n 0004403594 00000 n 0004403663 00000 n 0004403750 00000 n 0004403824 00000 n 0004403920 00000 n 0004403994 00000 n 0004404068 00000 n 0004404173 00000 n 0004404247 00000 n 0004404321 00000 n 0004404395 00000 n 0004404546 00000 n 0004404621 00000 n 0004404696 00000 n 0004404775 00000 n 0004404854 00000 n 0004404948 00000 n 0004405023 00000 n 0004405098 00000 n 0004405173 00000 n 0004405296 00000 n 0004405370 00000 n 0004405444 00000 n 0004405518 00000 n 0004405596 00000 n 0004405674 00000 n 0004405806 00000 n 0004405880 00000 n 0004405958 00000 n 0004406036 00000 n 0004406115 00000 n 0004406194 00000 n 0004406326 00000 n 0004406449 00000 n 0004406523 00000 n 0004406597 00000 n 0004406675 00000 n 0004406768 00000 n 0004406842 00000 n 0004406974 00000 n 0004407048 00000 n 0004407122 00000 n 0004407201 00000 n 0004407280 00000 n 0004407359 00000 n 0004407438 00000 n 0004407526 00000 n 0004407601 00000 n 0004407706 00000 n 0004407780 00000 n 0004407854 00000 n 0004407928 00000 n 0004408088 00000 n 0004408162 00000 n 0004408236 00000 n 0004408310 00000 n 0004408384 00000 n 0004408458 00000 n 0004408533 00000 n 0004408608 00000 n 0004408683 00000 n 0004408758 00000 n 0004408854 00000 n 0004408928 00000 n 0004409002 00000 n 0004409098 00000 n 0004409172 00000 n 0004409246 00000 n 0004409415 00000 n 0004409489 00000 n 0004409582 00000 n 0004409643 00000 n 0004409708 00000 n 0004409777 00000 n 0004409851 00000 n 0004409938 00000 n 0004410012 00000 n 0004410190 00000 n 0004410264 00000 n 0004410338 00000 n 0004410416 00000 n 0004410494 00000 n 0004410572 00000 n 0004410650 00000 n 0004410729 00000 n 0004410808 00000 n 0004410887 00000 n 0004410966 00000 n 0004411045 00000 n 0004411188 00000 n 0004411263 00000 n 0004411338 00000 n 0004411416 00000 n 0004411494 00000 n 0004411572 00000 n 0004411650 00000 n 0004411728 00000 n 0004411842 00000 n 0004411916 00000 n 0004411990 00000 n 0004412064 00000 n 0004412138 00000 n 0004412317 00000 n 0004412392 00000 n 0004412505 00000 n 0004412579 00000 n 0004412653 00000 n 0004412727 00000 n 0004412805 00000 n 0004412883 00000 n 0004412961 00000 n 0004413039 00000 n 0004413132 00000 n 0004413206 00000 n 0004413367 00000 n 0004413442 00000 n 0004413516 00000 n 0004413590 00000 n 0004413664 00000 n 0004413742 00000 n 0004413820 00000 n 0004413898 00000 n 0004413991 00000 n 0004414065 00000 n 0004414179 00000 n 0004414253 00000 n 0004414328 00000 n 0004414402 00000 n 0004414476 00000 n 0004414691 00000 n 0004414765 00000 n 0004414858 00000 n 0004414919 00000 n 0004414984 00000 n 0004415058 00000 n 0004415127 00000 n 0004415214 00000 n 0004415288 00000 n 0004415411 00000 n 0004415485 00000 n 0004415559 00000 n 0004415637 00000 n 0004415730 00000 n 0004415804 00000 n 0004415918 00000 n 0004415992 00000 n 0004416067 00000 n 0004416146 00000 n 0004416225 00000 n 0004416322 00000 n 0004416397 00000 n 0004416472 00000 n 0004416569 00000 n 0004416644 00000 n 0004416757 00000 n 0004416853 00000 n 0004416927 00000 n 0004417001 00000 n 0004417225 00000 n 0004417299 00000 n 0004417378 00000 n 0004417456 00000 n 0004417534 00000 n 0004417612 00000 n 0004417691 00000 n 0004417766 00000 n 0004417841 00000 n 0004417958 00000 n 0004418036 00000 n 0004418114 00000 n 0004418192 00000 n 0004418270 00000 n 0004418348 00000 n 0004418441 00000 n 0004418515 00000 n 0004418666 00000 n 0004418740 00000 n 0004418815 00000 n 0004418890 00000 n 0004418969 00000 n 0004419086 00000 n 0004419164 00000 n 0004419257 00000 n 0004419331 00000 n 0004419427 00000 n 0004419501 00000 n 0004419575 00000 n 0004419671 00000 n 0004419745 00000 n 0004419819 00000 n 0004419998 00000 n 0004420073 00000 n 0004420148 00000 n 0004420223 00000 n 0004420301 00000 n 0004420379 00000 n 0004420457 00000 n 0004420535 00000 n 0004420613 00000 n 0004420691 00000 n 0004420769 00000 n 0004420847 00000 n 0004420998 00000 n 0004421072 00000 n 0004421147 00000 n 0004421226 00000 n 0004421305 00000 n 0004421384 00000 n 0004421478 00000 n 0004421553 00000 n 0004421628 00000 n 0004421852 00000 n 0004421926 00000 n 0004422019 00000 n 0004422080 00000 n 0004422145 00000 n 0004422219 00000 n 0004422306 00000 n 0004422380 00000 n 0004422476 00000 n 0004422550 00000 n 0004422624 00000 n 0004422693 00000 n 0004422871 00000 n 0004422945 00000 n 0004423019 00000 n 0004423093 00000 n 0004423171 00000 n 0004423250 00000 n 0004423329 00000 n 0004423407 00000 n 0004423485 00000 n 0004423563 00000 n 0004423642 00000 n 0004423721 00000 n 0004423882 00000 n 0004423957 00000 n 0004424032 00000 n 0004424111 00000 n 0004424190 00000 n 0004424269 00000 n 0004424348 00000 n 0004424442 00000 n 0004424516 00000 n 0004424590 00000 n 0004424677 00000 n 0004424751 00000 n 0004424911 00000 n 0004424985 00000 n 0004425059 00000 n 0004425133 00000 n 0004425207 00000 n 0004425285 00000 n 0004425365 00000 n 0004425445 00000 n 0004425524 00000 n 0004425618 00000 n 0004425742 00000 n 0004425817 00000 n 0004425891 00000 n 0004425969 00000 n 0004426062 00000 n 0004426136 00000 n 0004426223 00000 n 0004426297 00000 n 0004426411 00000 n 0004426485 00000 n 0004426559 00000 n 0004426633 00000 n 0004426708 00000 n 0004426814 00000 n 0004426889 00000 n 0004426964 00000 n 0004427077 00000 n 0004427228 00000 n 0004427302 00000 n 0004427376 00000 n 0004427454 00000 n 0004427533 00000 n 0004427612 00000 n 0004427690 00000 n 0004427768 00000 n 0004427846 00000 n 0004427989 00000 n 0004428064 00000 n 0004428139 00000 n 0004428214 00000 n 0004428288 00000 n 0004428362 00000 n 0004428436 00000 n 0004428510 00000 n 0004428606 00000 n 0004428680 00000 n 0004428754 00000 n 0004428978 00000 n 0004429052 00000 n 0004429126 00000 n 0004429200 00000 n 0004429293 00000 n 0004429354 00000 n 0004429419 00000 n 0004429506 00000 n 0004429580 00000 n 0004429676 00000 n 0004429750 00000 n 0004429824 00000 n 0004430075 00000 n 0004430149 00000 n 0004430224 00000 n 0004430293 00000 n 0004430367 00000 n 0004430441 00000 n 0004430519 00000 n 0004430598 00000 n 0004430677 00000 n 0004430755 00000 n 0004430833 00000 n 0004430911 00000 n 0004430989 00000 n 0004431067 00000 n 0004431146 00000 n 0004431225 00000 n 0004431304 00000 n 0004431383 00000 n 0004431462 00000 n 0004431541 00000 n 0004431620 00000 n 0004431708 00000 n 0004431783 00000 n 0004431871 00000 n 0004431946 00000 n 0004432033 00000 n 0004432107 00000 n 0004432239 00000 n 0004432313 00000 n 0004432387 00000 n 0004432461 00000 n 0004432539 00000 n 0004432617 00000 n 0004432695 00000 n 0004432791 00000 n 0004432866 00000 n 0004432941 00000 n 0004433038 00000 n 0004433113 00000 n 0004433188 00000 n 0004433285 00000 n 0004433360 00000 n 0004433435 00000 n 0004433540 00000 n 0004433614 00000 n 0004433688 00000 n 0004433762 00000 n 0004433867 00000 n 0004433941 00000 n 0004434015 00000 n 0004434089 00000 n 0004434240 00000 n 0004434314 00000 n 0004434389 00000 n 0004434464 00000 n 0004434538 00000 n 0004434631 00000 n 0004434692 00000 n 0004434757 00000 n 0004434880 00000 n 0004434954 00000 n 0004435028 00000 n 0004435102 00000 n 0004435176 00000 n 0004435250 00000 n 0004435437 00000 n 0004435550 00000 n 0004435619 00000 n 0004435712 00000 n 0004435773 00000 n 0004435838 00000 n 0004435912 00000 n 0004435986 00000 n 0004436064 00000 n 0004436142 00000 n 0004436220 00000 n 0004436298 00000 n 0004436377 00000 n 0004436457 00000 n 0004436526 00000 n 0004436604 00000 n 0004436678 00000 n 0004436810 00000 n 0004436884 00000 n 0004436958 00000 n 0004437032 00000 n 0004437125 00000 n 0004437186 00000 n 0004437251 00000 n 0004437363 00000 n 0004437432 00000 n 0004437525 00000 n 0004437586 00000 n 0004437651 00000 n 0004437820 00000 n 0004437894 00000 n 0004437968 00000 n 0004438061 00000 n 0004438122 00000 n 0004438187 00000 n 0004438261 00000 n 0004438330 00000 n 0004438399 00000 n 0004438473 00000 n 0004438566 00000 n 0004438627 00000 n 0004438692 00000 n 0004438766 00000 n 0004438908 00000 n 0004438982 00000 n 0004439060 00000 n 0004439139 00000 n 0004439218 00000 n 0004439296 00000 n 0004439375 00000 n 0004439454 00000 n 0004439523 00000 n 0004439637 00000 n 0004439711 00000 n 0004439785 00000 n 0004439863 00000 n 0004439941 00000 n 0004440064 00000 n 0004440138 00000 n 0004440216 00000 n 0004440294 00000 n 0004440387 00000 n 0004440462 00000 n 0004440613 00000 n 0004440687 00000 n 0004440780 00000 n 0004440841 00000 n 0004440906 00000 n 0004440980 00000 n 0004441195 00000 n 0004441269 00000 n 0004441343 00000 n 0004441421 00000 n 0004441499 00000 n 0004441578 00000 n 0004441647 00000 n 0004441725 00000 n 0004441804 00000 n 0004441883 00000 n 0004441961 00000 n 0004442039 00000 n 0004442117 00000 n 0004442195 00000 n 0004442273 00000 n 0004442351 00000 n 0004442429 00000 n 0004442645 00000 n 0004442720 00000 n 0004442795 00000 n 0004442874 00000 n 0004442953 00000 n 0004443032 00000 n 0004443111 00000 n 0004443190 00000 n 0004443269 00000 n 0004443348 00000 n 0004443427 00000 n 0004443506 00000 n 0004443584 00000 n 0004443662 00000 n 0004443740 00000 n 0004443818 00000 n 0004443950 00000 n 0004444024 00000 n 0004444098 00000 n 0004444176 00000 n 0004444254 00000 n 0004444332 00000 n 0004444411 00000 n 0004444499 00000 n 0004444574 00000 n 0004444662 00000 n 0004444737 00000 n 0004444953 00000 n 0004445028 00000 n 0004445102 00000 n 0004445195 00000 n 0004445256 00000 n 0004445321 00000 n 0004445385 00000 n 0004445454 00000 n 0004445541 00000 n 0004445635 00000 n 0004445696 00000 n 0004445761 00000 n 0004445855 00000 n 0004446063 00000 n 0004446145 00000 n 0004446209 00000 n 0004446288 00000 n 0004446361 00000 n 0004446440 00000 n 0004446519 00000 n 0004446592 00000 n 0004446671 00000 n 0004446750 00000 n 0004446832 00000 n 0004446896 00000 n 0004446975 00000 n 0004447048 00000 n 0004447127 00000 n 0004447207 00000 n 0004447280 00000 n 0004447360 00000 n 0004447440 00000 n 0004447522 00000 n 0004447586 00000 n 0004447666 00000 n 0004447739 00000 n 0004447819 00000 n 0004447899 00000 n 0004447963 00000 n 0004448043 00000 n 0004448125 00000 n 0004448189 00000 n 0004448269 00000 n 0004448342 00000 n 0004448422 00000 n 0004448502 00000 n 0004448566 00000 n 0004448646 00000 n 0004448728 00000 n 0004448792 00000 n 0004448872 00000 n 0004448945 00000 n 0004449025 00000 n 0004449105 00000 n 0004449169 00000 n 0004449249 00000 n 0004449331 00000 n 0004449395 00000 n 0004449475 00000 n 0004449548 00000 n 0004449628 00000 n 0004449708 00000 n 0004449772 00000 n 0004449852 00000 n 0004449934 00000 n 0004449998 00000 n 0004450078 00000 n 0004450151 00000 n 0004450231 00000 n 0004450311 00000 n 0004450375 00000 n 0004450455 00000 n 0004450537 00000 n 0004450601 00000 n 0004450681 00000 n 0004450754 00000 n 0004450834 00000 n 0004450914 00000 n 0004450978 00000 n 0004451058 00000 n 0004451129 00000 n 0004451193 00000 n 0004451245 00000 n 0004451326 00000 n 0004451407 00000 n 0004451667 00000 n 0004451745 00000 n 0004451823 00000 n 0004451901 00000 n 0004451983 00000 n 0004452047 00000 n 0004452126 00000 n 0004452199 00000 n 0004452278 00000 n 0004452357 00000 n 0004452421 00000 n 0004452500 00000 n 0004452582 00000 n 0004452646 00000 n 0004452725 00000 n 0004452798 00000 n 0004452877 00000 n 0004452957 00000 n 0004453021 00000 n 0004453101 00000 n 0004453183 00000 n 0004453247 00000 n 0004453327 00000 n 0004453400 00000 n 0004453480 00000 n 0004453560 00000 n 0004453624 00000 n 0004453704 00000 n 0004453786 00000 n 0004453850 00000 n 0004453930 00000 n 0004454003 00000 n 0004454083 00000 n 0004454163 00000 n 0004454227 00000 n 0004454307 00000 n 0004454389 00000 n 0004454453 00000 n 0004454533 00000 n 0004454606 00000 n 0004454686 00000 n 0004454766 00000 n 0004454830 00000 n 0004454910 00000 n 0004454992 00000 n 0004455056 00000 n 0004455136 00000 n 0004455209 00000 n 0004455289 00000 n 0004455369 00000 n 0004455433 00000 n 0004455513 00000 n 0004455595 00000 n 0004455659 00000 n 0004455739 00000 n 0004455812 00000 n 0004455892 00000 n 0004455972 00000 n 0004456036 00000 n 0004456116 00000 n 0004456198 00000 n 0004456262 00000 n 0004456342 00000 n 0004456415 00000 n 0004456495 00000 n 0004456575 00000 n 0004456639 00000 n 0004456719 00000 n 0004456797 00000 n 0004456875 00000 n 0004456953 00000 n 0004457031 00000 n 0004457109 00000 n 0004457187 00000 n 0004457265 00000 n 0004457343 00000 n 0004457422 00000 n 0004457501 00000 n 0004457581 00000 n 0004457661 00000 n 0004457741 00000 n 0004457821 00000 n 0004457901 00000 n 0004457981 00000 n 0004458061 00000 n 0004458194 00000 n 0004458269 00000 n 0004458348 00000 n 0004458427 00000 n 0004458506 00000 n 0004458585 00000 n 0004458664 00000 n 0004458796 00000 n 0004458870 00000 n 0004458948 00000 n 0004459026 00000 n 0004459104 00000 n 0004459182 00000 n 0004459260 00000 n 0004459420 00000 n 0004459494 00000 n 0004459572 00000 n 0004459651 00000 n 0004459730 00000 n 0004459809 00000 n 0004459888 00000 n 0004459967 00000 n 0004460046 00000 n 0004460125 00000 n 0004460358 00000 n 0004460432 00000 n 0004460510 00000 n 0004460588 00000 n 0004460666 00000 n 0004460744 00000 n 0004460822 00000 n 0004460900 00000 n 0004460978 00000 n 0004461056 00000 n 0004461135 00000 n 0004461214 00000 n 0004461293 00000 n 0004461372 00000 n 0004461489 00000 n 0004461567 00000 n 0004461645 00000 n 0004461723 00000 n 0004461919 00000 n 0004461993 00000 n 0004462071 00000 n 0004462149 00000 n 0004462227 00000 n 0004462305 00000 n 0004462384 00000 n 0004462463 00000 n 0004462541 00000 n 0004462619 00000 n 0004462712 00000 n 0004462790 00000 n 0004462868 00000 n 0004462946 00000 n 0004463142 00000 n 0004463216 00000 n 0004463294 00000 n 0004463372 00000 n 0004463451 00000 n 0004463530 00000 n 0004463609 00000 n 0004463726 00000 n 0004463804 00000 n 0004463882 00000 n 0004463975 00000 n 0004464053 00000 n 0004464131 00000 n 0004464209 00000 n 0004464323 00000 n 0004464397 00000 n 0004464475 00000 n 0004464554 00000 n 0004464633 00000 n 0004464748 00000 n 0004464823 00000 n 0004464901 00000 n 0004464979 00000 n 0004465057 00000 n 0004465208 00000 n 0004465286 00000 n 0004465364 00000 n 0004465442 00000 n 0004465520 00000 n 0004465598 00000 n 0004465676 00000 n 0004465740 00000 n 0004465804 00000 n 0004465874 00000 n 0004465945 00000 n 0004466018 00000 n 0004466208 00000 n 0004466282 00000 n 0004466356 00000 n 0004466430 00000 n 0004466508 00000 n 0004466601 00000 n 0004466675 00000 n 0004466768 00000 n 0004466829 00000 n 0004466894 00000 n 0004466963 00000 n 0004467141 00000 n 0004467215 00000 n 0004467289 00000 n 0004467367 00000 n 0004467460 00000 n 0004467534 00000 n 0004467608 00000 n 0004467682 00000 n 0004467775 00000 n 0004467836 00000 n 0004467901 00000 n 0004468014 00000 n 0004468083 00000 n 0004468157 00000 n 0004468231 00000 n 0004468373 00000 n 0004468447 00000 n 0004468521 00000 n 0004468614 00000 n 0004468675 00000 n 0004468740 00000 n 0004468814 00000 n 0004468926 00000 n 0004468995 00000 n 0004469069 00000 n 0004469143 00000 n 0004469248 00000 n 0004469322 00000 n 0004469396 00000 n 0004469489 00000 n 0004469550 00000 n 0004469615 00000 n 0004469684 00000 n 0004469780 00000 n 0004469854 00000 n 0004469947 00000 n 0004470008 00000 n 0004470073 00000 n 0004470142 00000 n 0004470247 00000 n 0004470321 00000 n 0004470481 00000 n 0004470555 00000 n 0004470629 00000 n 0004470703 00000 n 0004470777 00000 n 0004470855 00000 n 0004470933 00000 n 0004471026 00000 n 0004471120 00000 n 0004471195 00000 n 0004471356 00000 n 0004471431 00000 n 0004471506 00000 n 0004471581 00000 n 0004471660 00000 n 0004471739 00000 n 0004471818 00000 n 0004471912 00000 n 0004471987 00000 n 0004472051 00000 n 0004472121 00000 n 0004472192 00000 n 0004472265 00000 n 0004472400 00000 n 0004472474 00000 n 0004472567 00000 n 0004472628 00000 n 0004472693 00000 n 0004472767 00000 n 0004472836 00000 n 0004473023 00000 n 0004473097 00000 n 0004473190 00000 n 0004473251 00000 n 0004473316 00000 n 0004473390 00000 n 0004473486 00000 n 0004473560 00000 n 0004473634 00000 n 0004473748 00000 n 0004473822 00000 n 0004473897 00000 n 0004473966 00000 n 0004474040 00000 n 0004474114 00000 n 0004474237 00000 n 0004474311 00000 n 0004474385 00000 n 0004474459 00000 n 0004474533 00000 n 0004474607 00000 n 0004474785 00000 n 0004474859 00000 n 0004474934 00000 n 0004475013 00000 n 0004475092 00000 n 0004475171 00000 n 0004475250 00000 n 0004475329 00000 n 0004475408 00000 n 0004475487 00000 n 0004475566 00000 n 0004475645 00000 n 0004475750 00000 n 0004475824 00000 n 0004475898 00000 n 0004475972 00000 n 0004476068 00000 n 0004476142 00000 n 0004476216 00000 n 0004476358 00000 n 0004476432 00000 n 0004476506 00000 n 0004476581 00000 n 0004476660 00000 n 0004476739 00000 n 0004476833 00000 n 0004476908 00000 n 0004477050 00000 n 0004477124 00000 n 0004477198 00000 n 0004477272 00000 n 0004477350 00000 n 0004477428 00000 n 0004477521 00000 n 0004477595 00000 n 0004477682 00000 n 0004477756 00000 n 0004477998 00000 n 0004478072 00000 n 0004478165 00000 n 0004478226 00000 n 0004478291 00000 n 0004478365 00000 n 0004478443 00000 n 0004478521 00000 n 0004478599 00000 n 0004478715 00000 n 0004478784 00000 n 0004478862 00000 n 0004478940 00000 n 0004479018 00000 n 0004479096 00000 n 0004479174 00000 n 0004479252 00000 n 0004479345 00000 n 0004479438 00000 n 0004479531 00000 n 0004479625 00000 n 0004479699 00000 n 0004479914 00000 n 0004479988 00000 n 0004480062 00000 n 0004480155 00000 n 0004480216 00000 n 0004480281 00000 n 0004480355 00000 n 0004480433 00000 n 0004480511 00000 n 0004480589 00000 n 0004480668 00000 n 0004480747 00000 n 0004480816 00000 n 0004480894 00000 n 0004480972 00000 n 0004481050 00000 n 0004481143 00000 n 0004481217 00000 n 0004481281 00000 n 0004481351 00000 n 0004481422 00000 n 0004481495 00000 n 0004481595 00000 n 0004481709 00000 n 0004481783 00000 n 0004481857 00000 n 0004481931 00000 n 0004482023 00000 n 0004482084 00000 n 0004482149 00000 n 0004482244 00000 n 0004482496 00000 n 0004482596 00000 n 0004482660 00000 n 0004482739 00000 n 0004482803 00000 n 0004482882 00000 n 0004482932 00000 n 0004483013 00000 n 0004483092 00000 n 0004483156 00000 n 0004483235 00000 n 0004483299 00000 n 0004483378 00000 n 0004483473 00000 n 0004483539 00000 n 0004483620 00000 n 0004483686 00000 n 0004483767 00000 n 0004483833 00000 n 0004483914 00000 n 0004483980 00000 n 0004484062 00000 n 0004484158 00000 n 0004484225 00000 n 0004484307 00000 n 0004484374 00000 n 0004484456 00000 n 0004484523 00000 n 0004484605 00000 n 0004484672 00000 n 0004484754 00000 n 0004484850 00000 n 0004484917 00000 n 0004484999 00000 n 0004485066 00000 n 0004485148 00000 n 0004485215 00000 n 0004485297 00000 n 0004485364 00000 n 0004485446 00000 n 0004485542 00000 n 0004485609 00000 n 0004485691 00000 n 0004485758 00000 n 0004485840 00000 n 0004485907 00000 n 0004485989 00000 n 0004486056 00000 n 0004486138 00000 n 0004486234 00000 n 0004486301 00000 n 0004486383 00000 n 0004486450 00000 n 0004486532 00000 n 0004486599 00000 n 0004486681 00000 n 0004486748 00000 n 0004486830 00000 n 0004486926 00000 n 0004486993 00000 n 0004487075 00000 n 0004487142 00000 n 0004487224 00000 n 0004487291 00000 n 0004487373 00000 n 0004487440 00000 n 0004487522 00000 n 0004487618 00000 n 0004487685 00000 n 0004487767 00000 n 0004487834 00000 n 0004487916 00000 n 0004487983 00000 n 0004488065 00000 n 0004488132 00000 n 0004488214 00000 n 0004488310 00000 n 0004488377 00000 n 0004488459 00000 n 0004488526 00000 n 0004488608 00000 n 0004488675 00000 n 0004488757 00000 n 0004488824 00000 n 0004488906 00000 n 0004489002 00000 n 0004489069 00000 n 0004489151 00000 n 0004489218 00000 n 0004489300 00000 n 0004489367 00000 n 0004489449 00000 n 0004489516 00000 n 0004489598 00000 n 0004489694 00000 n 0004489761 00000 n 0004489843 00000 n 0004489910 00000 n 0004489992 00000 n 0004490059 00000 n 0004490141 00000 n 0004490208 00000 n 0004490290 00000 n 0004490386 00000 n 0004490453 00000 n 0004490535 00000 n 0004490602 00000 n 0004490684 00000 n 0004490751 00000 n 0004490833 00000 n 0004490900 00000 n 0004490982 00000 n 0004491078 00000 n 0004491145 00000 n 0004491227 00000 n 0004491294 00000 n 0004491376 00000 n 0004491443 00000 n 0004491525 00000 n 0004491592 00000 n 0004491674 00000 n 0004491770 00000 n 0004491837 00000 n 0004491919 00000 n 0004491986 00000 n 0004492068 00000 n 0004492135 00000 n 0004492217 00000 n 0004492284 00000 n 0004492366 00000 n 0004492462 00000 n 0004492529 00000 n 0004492611 00000 n 0004492678 00000 n 0004492760 00000 n 0004492827 00000 n 0004492909 00000 n 0004492976 00000 n 0004493058 00000 n 0004493154 00000 n 0004493221 00000 n 0004493303 00000 n 0004493370 00000 n 0004493452 00000 n 0004493519 00000 n 0004493601 00000 n 0004493668 00000 n 0004493750 00000 n 0004493846 00000 n 0004493913 00000 n 0004493995 00000 n 0004494062 00000 n 0004494144 00000 n 0004494211 00000 n 0004494293 00000 n 0004494360 00000 n 0004494442 00000 n 0004494538 00000 n 0004494605 00000 n 0004494687 00000 n 0004494754 00000 n 0004494836 00000 n 0004494903 00000 n 0004494985 00000 n 0004495052 00000 n 0004495134 00000 n 0004495230 00000 n 0004495297 00000 n 0004495379 00000 n 0004495446 00000 n 0004495528 00000 n 0004495595 00000 n 0004495677 00000 n 0004495744 00000 n 0004495826 00000 n 0004495899 00000 n 0004495966 00000 n 0004496019 00000 n 0004496104 00000 n 0004496187 00000 n 0004496296 00000 n 0004496372 00000 n 0004496468 00000 n 0004496530 00000 n 0004496598 00000 n 0004496674 00000 n 0004496772 00000 n 0004496856 00000 n 0004496943 00000 n 0004497020 00000 n 0004497101 00000 n 0004497182 00000 n 0004497249 00000 n 0004497330 00000 n 0004497397 00000 n 0004497478 00000 n 0004497565 00000 n 0004497642 00000 n 0004497723 00000 n 0004497805 00000 n 0004497872 00000 n 0004497954 00000 n 0004498021 00000 n 0004498103 00000 n 0004498177 00000 n 0004498244 00000 n 0004498297 00000 n 0004498382 00000 n 0004498465 00000 n 0004498537 00000 n 0004498611 00000 n 0004498687 00000 n 0004498753 00000 n 0004498825 00000 n 0004498899 00000 n 0004498985 00000 n 0004499309 00000 n 0004499444 00000 n 0004499524 00000 n 0004499604 00000 n 0004499684 00000 n 0004499764 00000 n 0004499844 00000 n 0004500162 00000 n 0004500242 00000 n 0004500322 00000 n 0004500403 00000 n 0004500484 00000 n 0004500565 00000 n 0004500646 00000 n 0004500727 00000 n 0004500808 00000 n 0004500889 00000 n 0004500970 00000 n 0004501051 00000 n 0004501132 00000 n 0004501213 00000 n 0004501294 00000 n 0004501375 00000 n 0004501456 00000 n 0004501537 00000 n 0004501618 00000 n 0004501699 00000 n 0004501780 00000 n 0004501861 00000 n 0004501942 00000 n 0004502023 00000 n 0004502169 00000 n 0004502250 00000 n 0004502331 00000 n 0004502412 00000 n 0004502493 00000 n 0004502574 00000 n 0004502655 00000 n 0004503887 00000 n 0004503968 00000 n 0004504049 00000 n 0004504130 00000 n 0004504211 00000 n 0004504292 00000 n 0004504373 00000 n 0004504454 00000 n 0004504535 00000 n 0004504616 00000 n 0004504697 00000 n 0004504778 00000 n 0004504859 00000 n 0004504940 00000 n 0004505021 00000 n 0004505102 00000 n 0004505183 00000 n 0004505264 00000 n 0004505345 00000 n 0004505426 00000 n 0004505507 00000 n 0004505588 00000 n 0004505669 00000 n 0004505750 00000 n 0004505831 00000 n 0004505912 00000 n 0004505993 00000 n 0004506074 00000 n 0004506155 00000 n 0004506236 00000 n 0004506317 00000 n 0004506398 00000 n 0004506478 00000 n 0004506558 00000 n 0004506638 00000 n 0004506718 00000 n 0004506798 00000 n 0004506878 00000 n 0004506958 00000 n 0004507038 00000 n 0004507118 00000 n 0004507198 00000 n 0004507279 00000 n 0004507360 00000 n 0004507441 00000 n 0004507522 00000 n 0004507603 00000 n 0004507684 00000 n 0004507765 00000 n 0004507846 00000 n 0004507927 00000 n 0004508008 00000 n 0004508089 00000 n 0004508170 00000 n 0004508251 00000 n 0004508332 00000 n 0004508413 00000 n 0004508494 00000 n 0004508575 00000 n 0004508656 00000 n 0004508737 00000 n 0004508818 00000 n 0004508899 00000 n 0004508980 00000 n 0004509061 00000 n 0004509142 00000 n 0004509223 00000 n 0004509304 00000 n 0004509385 00000 n 0004509466 00000 n 0004509547 00000 n 0004509628 00000 n 0004509709 00000 n 0004509790 00000 n 0004509871 00000 n 0004509952 00000 n 0004510033 00000 n 0004510114 00000 n 0004510195 00000 n 0004510276 00000 n 0004510357 00000 n 0004510438 00000 n 0004510519 00000 n 0004510600 00000 n 0004510681 00000 n 0004510762 00000 n 0004510843 00000 n 0004510924 00000 n 0004511005 00000 n 0004511086 00000 n 0004511167 00000 n 0004511248 00000 n 0004511329 00000 n 0004511410 00000 n 0004511491 00000 n 0004511572 00000 n 0004511653 00000 n 0004511734 00000 n 0004511815 00000 n 0004511896 00000 n 0004511977 00000 n 0004512058 00000 n 0004512139 00000 n 0004512220 00000 n 0004512301 00000 n 0004512382 00000 n 0004512463 00000 n 0004512544 00000 n 0004512625 00000 n 0004512706 00000 n 0004512787 00000 n 0004512868 00000 n 0004512949 00000 n 0004513030 00000 n 0004513703 00000 n 0004513783 00000 n 0004513863 00000 n 0004513943 00000 n 0004514023 00000 n 0004514103 00000 n 0004514183 00000 n 0004514263 00000 n 0004514343 00000 n 0004514423 00000 n 0004514504 00000 n 0004514585 00000 n 0004514666 00000 n 0004514747 00000 n 0004514828 00000 n 0004514909 00000 n 0004514990 00000 n 0004515071 00000 n 0004515152 00000 n 0004515233 00000 n 0004515314 00000 n 0004515395 00000 n 0004515476 00000 n 0004515557 00000 n 0004515638 00000 n 0004515719 00000 n 0004515800 00000 n 0004515881 00000 n 0004515962 00000 n 0004516043 00000 n 0004516124 00000 n 0004516205 00000 n 0004516286 00000 n 0004516367 00000 n 0004516448 00000 n 0004516529 00000 n 0004516610 00000 n 0004516691 00000 n 0004516772 00000 n 0004516853 00000 n 0004516934 00000 n 0004517015 00000 n 0004517096 00000 n 0004517177 00000 n 0004517258 00000 n 0004517339 00000 n 0004517420 00000 n 0004517501 00000 n 0004517582 00000 n 0004517663 00000 n 0004517744 00000 n 0004517825 00000 n 0004517906 00000 n 0004517987 00000 n 0004518068 00000 n 0004518149 00000 n 0004518230 00000 n 0004518311 00000 n 0004518392 00000 n 0004518640 00000 n 0004518721 00000 n 0004518802 00000 n 0004518883 00000 n 0004518964 00000 n 0004519045 00000 n 0004519126 00000 n 0004519207 00000 n 0004519288 00000 n 0004519369 00000 n 0004519450 00000 n 0004519531 00000 n 0004519612 00000 n 0004519693 00000 n 0004519774 00000 n 0004519855 00000 n 0004519936 00000 n 0004520387 00000 n 0004520468 00000 n 0004520549 00000 n 0004520630 00000 n 0004520711 00000 n 0004520791 00000 n 0004520871 00000 n 0004520951 00000 n 0004521031 00000 n 0004521111 00000 n 0004521191 00000 n 0004521271 00000 n 0004521351 00000 n 0004521431 00000 n 0004521511 00000 n 0004521592 00000 n 0004521673 00000 n 0004521754 00000 n 0004521835 00000 n 0004521916 00000 n 0004521997 00000 n 0004522078 00000 n 0004522159 00000 n 0004522240 00000 n 0004522321 00000 n 0004522402 00000 n 0004522483 00000 n 0004522564 00000 n 0004522645 00000 n 0004522726 00000 n 0004522807 00000 n 0004522888 00000 n 0004522969 00000 n 0004523050 00000 n 0004523131 00000 n 0004523212 00000 n 0004523293 00000 n 0004523602 00000 n 0004523683 00000 n 0004523764 00000 n 0004523845 00000 n 0004523926 00000 n 0004524007 00000 n 0004524088 00000 n 0004524169 00000 n 0004524250 00000 n 0004524331 00000 n 0004524412 00000 n 0004524493 00000 n 0004524574 00000 n 0004524655 00000 n 0004524736 00000 n 0004524817 00000 n 0004524898 00000 n 0004524979 00000 n 0004525060 00000 n 0004525141 00000 n 0004525222 00000 n 0004525303 00000 n 0004525384 00000 n 0004525662 00000 n 0004525743 00000 n 0004525824 00000 n 0004525905 00000 n 0004525986 00000 n 0004526067 00000 n 0004526148 00000 n 0004526229 00000 n 0004526310 00000 n 0004526391 00000 n 0004526472 00000 n 0004526553 00000 n 0004526634 00000 n 0004526715 00000 n 0004526796 00000 n 0004526877 00000 n 0004526958 00000 n 0004527039 00000 n 0004527120 00000 n 0004527201 00000 n 0004527530 00000 n 0004527611 00000 n 0004527692 00000 n 0004527773 00000 n 0004527854 00000 n 0004527935 00000 n 0004528016 00000 n 0004528097 00000 n 0004528178 00000 n 0004528258 00000 n 0004528338 00000 n 0004528418 00000 n 0004528498 00000 n 0004528578 00000 n 0004528658 00000 n 0004528738 00000 n 0004528818 00000 n 0004528898 00000 n 0004528978 00000 n 0004529059 00000 n 0004529140 00000 n 0004529221 00000 n 0004529302 00000 n 0004529383 00000 n 0004529464 00000 n 0004529570 00000 n 0004529651 00000 n 0004529732 00000 n 0004529828 00000 n 0004529909 00000 n 0004530512 00000 n 0004530593 00000 n 0004530674 00000 n 0004530755 00000 n 0004530836 00000 n 0004530917 00000 n 0004530998 00000 n 0004531079 00000 n 0004531160 00000 n 0004531241 00000 n 0004531322 00000 n 0004531403 00000 n 0004531484 00000 n 0004531565 00000 n 0004531646 00000 n 0004531727 00000 n 0004531808 00000 n 0004531889 00000 n 0004531970 00000 n 0004532051 00000 n 0004532132 00000 n 0004532213 00000 n 0004532294 00000 n 0004532375 00000 n 0004532456 00000 n 0004532537 00000 n 0004532618 00000 n 0004532699 00000 n 0004532780 00000 n 0004532861 00000 n 0004532942 00000 n 0004533023 00000 n 0004533104 00000 n 0004533185 00000 n 0004533266 00000 n 0004533347 00000 n 0004533428 00000 n 0004533509 00000 n 0004533590 00000 n 0004533671 00000 n 0004533752 00000 n 0004533833 00000 n 0004533914 00000 n 0004533995 00000 n 0004534076 00000 n 0004534157 00000 n 0004534238 00000 n 0004534319 00000 n 0004534400 00000 n 0004534481 00000 n 0004534562 00000 n 0004534643 00000 n 0004535388 00000 n 0004535469 00000 n 0004535550 00000 n 0004535631 00000 n 0004535712 00000 n 0004535792 00000 n 0004535872 00000 n 0004535952 00000 n 0004536032 00000 n 0004536112 00000 n 0004536192 00000 n 0004536272 00000 n 0004536352 00000 n 0004536432 00000 n 0004536512 00000 n 0004536593 00000 n 0004536674 00000 n 0004536755 00000 n 0004536836 00000 n 0004536917 00000 n 0004536998 00000 n 0004537079 00000 n 0004537160 00000 n 0004537241 00000 n 0004537322 00000 n 0004537403 00000 n 0004537484 00000 n 0004537565 00000 n 0004537646 00000 n 0004537727 00000 n 0004537808 00000 n 0004537889 00000 n 0004537970 00000 n 0004538051 00000 n 0004538132 00000 n 0004538213 00000 n 0004538294 00000 n 0004538375 00000 n 0004538456 00000 n 0004538537 00000 n 0004538618 00000 n 0004538699 00000 n 0004538780 00000 n 0004538861 00000 n 0004538942 00000 n 0004539023 00000 n 0004539104 00000 n 0004539185 00000 n 0004539266 00000 n 0004539347 00000 n 0004539428 00000 n 0004539509 00000 n 0004539590 00000 n 0004539671 00000 n 0004539752 00000 n 0004539833 00000 n 0004539914 00000 n 0004539995 00000 n 0004540076 00000 n 0004540157 00000 n 0004540238 00000 n 0004540319 00000 n 0004540400 00000 n 0004540481 00000 n 0004540562 00000 n 0004540643 00000 n 0004540810 00000 n 0004540891 00000 n 0004540972 00000 n 0004541053 00000 n 0004541134 00000 n 0004541215 00000 n 0004541296 00000 n 0004541377 00000 n 0004541458 00000 n 0004541604 00000 n 0004541685 00000 n 0004541766 00000 n 0004541847 00000 n 0004541928 00000 n 0004542008 00000 n 0004542088 00000 n 0004542730 00000 n 0004542810 00000 n 0004542890 00000 n 0004542970 00000 n 0004543050 00000 n 0004543130 00000 n 0004543210 00000 n 0004543290 00000 n 0004543371 00000 n 0004543452 00000 n 0004543533 00000 n 0004543614 00000 n 0004543695 00000 n 0004543776 00000 n 0004543857 00000 n 0004543938 00000 n 0004544019 00000 n 0004544100 00000 n 0004544181 00000 n 0004544262 00000 n 0004544343 00000 n 0004544424 00000 n 0004544505 00000 n 0004544586 00000 n 0004544667 00000 n 0004544748 00000 n 0004544829 00000 n 0004544910 00000 n 0004544991 00000 n 0004545072 00000 n 0004545153 00000 n 0004545234 00000 n 0004545315 00000 n 0004545396 00000 n 0004545477 00000 n 0004545558 00000 n 0004545639 00000 n 0004545720 00000 n 0004545801 00000 n 0004545882 00000 n 0004545963 00000 n 0004546044 00000 n 0004546125 00000 n 0004546206 00000 n 0004546287 00000 n 0004546368 00000 n 0004546449 00000 n 0004546530 00000 n 0004546611 00000 n 0004546692 00000 n 0004546773 00000 n 0004546854 00000 n 0004546935 00000 n 0004547016 00000 n 0004547097 00000 n 0004547178 00000 n 0004547284 00000 n 0004547365 00000 n 0004547446 00000 n 0004548079 00000 n 0004548160 00000 n 0004548241 00000 n 0004548322 00000 n 0004548403 00000 n 0004548484 00000 n 0004548565 00000 n 0004548646 00000 n 0004548727 00000 n 0004548808 00000 n 0004548889 00000 n 0004548970 00000 n 0004549050 00000 n 0004549130 00000 n 0004549210 00000 n 0004549290 00000 n 0004549370 00000 n 0004549450 00000 n 0004549530 00000 n 0004549610 00000 n 0004549690 00000 n 0004549770 00000 n 0004549851 00000 n 0004549932 00000 n 0004550013 00000 n 0004550094 00000 n 0004550175 00000 n 0004550256 00000 n 0004550337 00000 n 0004550418 00000 n 0004550499 00000 n 0004550580 00000 n 0004550661 00000 n 0004550742 00000 n 0004550823 00000 n 0004550904 00000 n 0004550985 00000 n 0004551066 00000 n 0004551147 00000 n 0004551228 00000 n 0004551309 00000 n 0004551390 00000 n 0004551471 00000 n 0004551552 00000 n 0004551633 00000 n 0004551714 00000 n 0004551795 00000 n 0004551876 00000 n 0004551957 00000 n 0004552038 00000 n 0004552119 00000 n 0004552200 00000 n 0004552281 00000 n 0004552362 00000 n 0004552443 00000 n 0004553289 00000 n 0004553370 00000 n 0004553451 00000 n 0004553532 00000 n 0004553613 00000 n 0004553694 00000 n 0004553775 00000 n 0004553856 00000 n 0004553937 00000 n 0004554018 00000 n 0004554099 00000 n 0004554180 00000 n 0004554261 00000 n 0004554342 00000 n 0004554423 00000 n 0004554504 00000 n 0004554585 00000 n 0004554666 00000 n 0004554747 00000 n 0004554828 00000 n 0004554909 00000 n 0004554990 00000 n 0004555071 00000 n 0004555152 00000 n 0004555233 00000 n 0004555314 00000 n 0004555395 00000 n 0004555476 00000 n 0004555557 00000 n 0004555638 00000 n 0004555719 00000 n 0004555800 00000 n 0004555881 00000 n 0004555962 00000 n 0004556043 00000 n 0004556124 00000 n 0004556205 00000 n 0004556286 00000 n 0004556367 00000 n 0004556448 00000 n 0004556529 00000 n 0004556610 00000 n 0004556691 00000 n 0004556772 00000 n 0004556853 00000 n 0004556933 00000 n 0004557013 00000 n 0004557093 00000 n 0004557173 00000 n 0004557253 00000 n 0004557333 00000 n 0004557413 00000 n 0004557493 00000 n 0004557573 00000 n 0004557653 00000 n 0004557734 00000 n 0004557815 00000 n 0004557896 00000 n 0004557977 00000 n 0004558058 00000 n 0004558139 00000 n 0004558220 00000 n 0004558301 00000 n 0004558382 00000 n 0004558463 00000 n 0004558544 00000 n 0004558625 00000 n 0004558706 00000 n 0004558787 00000 n 0004558868 00000 n 0004558949 00000 n 0004559030 00000 n 0004559111 00000 n 0004559192 00000 n 0004559273 00000 n 0004559354 00000 n 0004559541 00000 n 0004559622 00000 n 0004559703 00000 n 0004559784 00000 n 0004559865 00000 n 0004559946 00000 n 0004560027 00000 n 0004560108 00000 n 0004560189 00000 n 0004560270 00000 n 0004560351 00000 n 0004560660 00000 n 0004560741 00000 n 0004560822 00000 n 0004560903 00000 n 0004560984 00000 n 0004561065 00000 n 0004561146 00000 n 0004561227 00000 n 0004561308 00000 n 0004561389 00000 n 0004561470 00000 n 0004561551 00000 n 0004561632 00000 n 0004561713 00000 n 0004561794 00000 n 0004561875 00000 n 0004561956 00000 n 0004562037 00000 n 0004562118 00000 n 0004562199 00000 n 0004562280 00000 n 0004562361 00000 n 0004562442 00000 n 0004562619 00000 n 0004562700 00000 n 0004562781 00000 n 0004562862 00000 n 0004562943 00000 n 0004563024 00000 n 0004563105 00000 n 0004563186 00000 n 0004563267 00000 n 0004563348 00000 n 0004563484 00000 n 0004563565 00000 n 0004563645 00000 n 0004563725 00000 n 0004563805 00000 n 0004563885 00000 n 0004563986 00000 n 0004564080 00000 n 0004564142 00000 n 0004564210 00000 n 0004564276 00000 n 0004564364 00000 n 0004564448 00000 n 0004564525 00000 n 0004564612 00000 n 0004564688 00000 n 0004564764 00000 n 0004564840 00000 n 0004564927 00000 n 0004565003 00000 n 0004565079 00000 n 0004565155 00000 n 0004565232 00000 n 0004565319 00000 n 0004565385 00000 n 0004565462 00000 n 0004565539 00000 n 0004565606 00000 n 0004565683 00000 n 0004565819 00000 n 0004566081 00000 n 0004566388 00000 n 0004566750 00000 n 0004567103 00000 n 0004567429 00000 n 0004567755 00000 n 0004567862 00000 n 0004567987 00000 n 0004568167 00000 n 0004568347 00000 n 0004568422 00000 n 0004568547 00000 n 0004568690 00000 n 0004568738 00000 n 0004568845 00000 n 0004568933 00000 n 0004569158 00000 n 0004569310 00000 n 0004569513 00000 n 0004569775 00000 n 0004569960 00000 n 0004570004 00000 n 0004570220 00000 n 0004570436 00000 n 0004570475 00000 n 0004570619 00000 n 0004570663 00000 n 0004570734 00000 n 0004570823 00000 n 0004570941 00000 n 0004571076 00000 n 0004571211 00000 n 0004571310 00000 n 0004571410 00000 n 0004571526 00000 n 0004571661 00000 n 0004571741 00000 n 0004571832 00000 n 0004571931 00000 n 0004572030 00000 n 0004572087 00000 n 0004572221 00000 n 0004572309 00000 n 0004572667 00000 n 0004573025 00000 n 0004573206 00000 n 0004573285 00000 n 0004573538 00000 n 0004573836 00000 n 0004574098 00000 n 0004574173 00000 n 0004574325 00000 n 0004574443 00000 n 0004574542 00000 n 0004574609 00000 n 0004574752 00000 n 0004574888 00000 n 0004574977 00000 n 0004575095 00000 n 0004575184 00000 n 0004575338 00000 n 0004575464 00000 n 0004575590 00000 n 0004575699 00000 n 0004575788 00000 n 0004575877 00000 n 0004575976 00000 n 0004576038 00000 n 0004576126 00000 n 0004576366 00000 n 0004576491 00000 n 0004576575 00000 n 0004576605 00000 n 0004576730 00000 n 0004576800 00000 n 0004576892 00000 n 0004576988 00000 n 0004577092 00000 n 0004577235 00000 n 0004577315 00000 n 0004577387 00000 n 0004577504 00000 n 0004577557 00000 n 0004577629 00000 n 0004577751 00000 n 0004577885 00000 n 0004578092 00000 n 0004578214 00000 n 0004578418 00000 n 0004578585 00000 n 0004578660 00000 n 0004578785 00000 n 0004578911 00000 n 0004579063 00000 n 0004579215 00000 n 0004579349 00000 n 0004579456 00000 n 0004579545 00000 n 0004579653 00000 n 0004579752 00000 n 0004579869 00000 n 0004579967 00000 n 0004580192 00000 n 0004580344 00000 n 0004580520 00000 n 0004580581 00000 n 0004580661 00000 n 0004580769 00000 n 0004580868 00000 n 0004580993 00000 n 0004581055 00000 n 0004581144 00000 n 0004581252 00000 n 0004581386 00000 n 0004581493 00000 n 0004581636 00000 n 0004581752 00000 n 0004581814 00000 n 0004581876 00000 n 0004582002 00000 n 0004582173 00000 n 0004582307 00000 n 0004582405 00000 n 0004582467 00000 n 0004582566 00000 n 0004582723 00000 n 0004582767 00000 n 0004582820 00000 n 0004582928 00000 n 0004583071 00000 n 0004583183 00000 n 0004583290 00000 n 0004583451 00000 n 0004583550 00000 n 0004583641 00000 n 0004583721 00000 n 0004583847 00000 n 0004584010 00000 n 0004584114 00000 n 0004584236 00000 n 0004584371 00000 n 0004584479 00000 n 0004584568 00000 n 0004584668 00000 n 0004584757 00000 n 0004584874 00000 n 0004584973 00000 n 0004585153 00000 n 0004585244 00000 n 0004585360 00000 n 0004585532 00000 n 0004585631 00000 n 0004585712 00000 n 0004585855 00000 n 0004585954 00000 n 0004586062 00000 n 0004586166 00000 n 0004586382 00000 n 0004586534 00000 n 0004586938 00000 n 0004587069 00000 n 0004587154 00000 n 0004587270 00000 n 0004587368 00000 n 0004587467 00000 n 0004587619 00000 n 0004587671 00000 n 0004587778 00000 n 0004587840 00000 n 0004587958 00000 n 0004588088 00000 n 0004588180 00000 n 0004588259 00000 n 0004588385 00000 n 0004588501 00000 n 0004588590 00000 n 0004588689 00000 n 0004588788 00000 n 0004588896 00000 n 0004588976 00000 n 0004589102 00000 n 0004589236 00000 n 0004589344 00000 n 0004589435 00000 n 0004589561 00000 n 0004589652 00000 n 0004589783 00000 n 0004589932 00000 n 0004590093 00000 n 0004590200 00000 n 0004590480 00000 n 0004590633 00000 n 0004590718 00000 n 0004590831 00000 n 0004591116 00000 n 0004591423 00000 n 0004591575 00000 n 0004591650 00000 n 0004591726 00000 n 0004592002 00000 n 0004592382 00000 n 0004592626 00000 n 0004592743 00000 n 0004592782 00000 n 0004592908 00000 n 0004593070 00000 n 0004593161 00000 n 0004593278 00000 n 0004593386 00000 n 0004593529 00000 n 0004593763 00000 n 0004593943 00000 n 0004594077 00000 n 0004594184 00000 n 0004594309 00000 n 0004594516 00000 n 0004594632 00000 n 0004594748 00000 n 0004594873 00000 n 0004594998 00000 n 0004595150 00000 n 0004595293 00000 n 0004595427 00000 n 0004595607 00000 n 0004595706 00000 n 0004595794 00000 n 0004595893 00000 n 0004596001 00000 n 0004596031 00000 n 0004596139 00000 n 0004596265 00000 n 0004596436 00000 n 0004596562 00000 n 0004596670 00000 n 0004596749 00000 n 0004596820 00000 n 0004596928 00000 n 0004597027 00000 n 0004597127 00000 n 0004597244 00000 n 0004597352 00000 n 0004597504 00000 n 0004597620 00000 n 0004597736 00000 n 0004597916 00000 n 0004598004 00000 n 0004598093 00000 n 0004598351 00000 n 0004598558 00000 n 0004598657 00000 n 0004598746 00000 n 0004598825 00000 n 0004599083 00000 n 0004599281 00000 n 0004599370 00000 n 0004599440 00000 n 0004599835 00000 n 0004600088 00000 n 0004600196 00000 n 0004600235 00000 n 0004600297 00000 n 0004600396 00000 n 0004600522 00000 n 0004600575 00000 n 0004600692 00000 n 0004600872 00000 n 0004600980 00000 n 0004601132 00000 n 0004601249 00000 n 0004601348 00000 n 0004601473 00000 n 0004601634 00000 n 0004601750 00000 n 0004601902 00000 n 0004602000 00000 n 0004602099 00000 n 0004602216 00000 n 0004602350 00000 n 0004602467 00000 n 0004602619 00000 n 0004602698 00000 n 0004602806 00000 n 0004602922 00000 n 0004603021 00000 n 0004603138 00000 n 0004603237 00000 n 0004603381 00000 n 0004603542 00000 n 0004603658 00000 n 0004603838 00000 n 0004603999 00000 n 0004604106 00000 n 0004604249 00000 n 0004604384 00000 n 0004604492 00000 n 0004604544 00000 n 0004604633 00000 n 0004604768 00000 n 0004604866 00000 n 0004604965 00000 n 0004605082 00000 n 0004605217 00000 n 0004605296 00000 n 0004605431 00000 n 0004605628 00000 n 0004605789 00000 n 0004605868 00000 n 0004605976 00000 n 0004606102 00000 n 0004606228 00000 n 0004606336 00000 n 0004606443 00000 n 0004606534 00000 n 0004606633 00000 n 0004606732 00000 n 0004606840 00000 n 0004606929 00000 n 0004607118 00000 n 0004607261 00000 n 0004607432 00000 n 0004607584 00000 n 0004607692 00000 n 0004607881 00000 n 0004608024 00000 n 0004608158 00000 n 0004608283 00000 n 0004608363 00000 n 0004608561 00000 n 0004608713 00000 n 0004608865 00000 n 0004609017 00000 n 0004609197 00000 n 0004609305 00000 n 0004609512 00000 n 0004609683 00000 n 0004609844 00000 n 0004609996 00000 n 0004610112 00000 n 0004610229 00000 n 0004610445 00000 n 0004610634 00000 n 0004610768 00000 n 0004610885 00000 n 0004611002 00000 n 0004611101 00000 n 0004611192 00000 n 0004611318 00000 n 0004611443 00000 n 0004611560 00000 n 0004611785 00000 n 0004611965 00000 n 0004612014 00000 n 0004612385 00000 n 0004612738 00000 n 0004612982 00000 n 0004613162 00000 n 0004613323 00000 n 0004613457 00000 n 0004613609 00000 n 0004613761 00000 n 0004613887 00000 n 0004613986 00000 n 0004614103 00000 n 0004614211 00000 n 0004614263 00000 n 0004614325 00000 n 0004614378 00000 n 0004614599 00000 n 0004614661 00000 n 0004614778 00000 n 0004614985 00000 n 0004615146 00000 n 0004615262 00000 n 0004615361 00000 n 0004615486 00000 n 0004615612 00000 n 0004615687 00000 n 0004615757 00000 n 0004616582 00000 n 0004616744 00000 n 0004616774 00000 n 0004617509 00000 n 0004618365 00000 n 0004619211 00000 n 0004620088 00000 n 0004620904 00000 n 0004621689 00000 n 0004622454 00000 n 0004623371 00000 n 0004624177 00000 n 0004624242 00000 n 0004624383 00000 n 0004625274 00000 n 0004626205 00000 n 0004627172 00000 n 0004628139 00000 n 0004629106 00000 n 0004630073 00000 n 0004630259 00000 n 0004630368 00000 n 0004631875 00000 n 0004633380 00000 n 0004634861 00000 n 0004636349 00000 n 0004636602 00000 n 0004636690 00000 n 0004636755 00000 n 0004636820 00000 n 0004636881 00000 n 0004636942 00000 n 0004637001 00000 n 0004637060 00000 n 0004637119 00000 n 0004637178 00000 n 0004637237 00000 n 0004637296 00000 n 0004637355 00000 n 0004637414 00000 n 0004637473 00000 n 0004637532 00000 n 0004637591 00000 n 0004637650 00000 n 0004637709 00000 n 0004637768 00000 n 0004637827 00000 n 0004637886 00000 n 0004637945 00000 n 0004638004 00000 n 0004638063 00000 n 0004638122 00000 n 0004638181 00000 n 0004638240 00000 n 0004638299 00000 n 0004638358 00000 n 0004638417 00000 n 0004638476 00000 n 0004638535 00000 n 0004638594 00000 n 0004638653 00000 n 0004638715 00000 n 0004638775 00000 n 0004638835 00000 n 0004638895 00000 n 0004638955 00000 n 0004639015 00000 n 0004639075 00000 n 0004639135 00000 n 0004639195 00000 n 0004639255 00000 n 0004639315 00000 n 0004639375 00000 n 0004639435 00000 n 0004639495 00000 n 0004639555 00000 n 0004639615 00000 n 0004639675 00000 n 0004639735 00000 n 0004639795 00000 n 0004639855 00000 n 0004639915 00000 n 0004639975 00000 n 0004640035 00000 n 0004640095 00000 n 0004640155 00000 n 0004640215 00000 n 0004640275 00000 n 0004640335 00000 n 0004640395 00000 n 0004640455 00000 n 0004640515 00000 n 0004640575 00000 n 0004640635 00000 n 0004640697 00000 n 0004640757 00000 n 0004640817 00000 n 0004640877 00000 n 0004640937 00000 n 0004640997 00000 n 0004641057 00000 n 0004641117 00000 n 0004641177 00000 n 0004641237 00000 n 0004641297 00000 n 0004641357 00000 n 0004641417 00000 n 0004641477 00000 n 0004641537 00000 n 0004641597 00000 n 0004641657 00000 n 0004641717 00000 n 0004641777 00000 n 0004641837 00000 n 0004641897 00000 n 0004641957 00000 n 0004642017 00000 n 0004642077 00000 n 0004642137 00000 n 0004642197 00000 n 0004642257 00000 n 0004642317 00000 n 0004642377 00000 n 0004642437 00000 n 0004642497 00000 n 0004642557 00000 n 0004642617 00000 n 0004642677 00000 n 0004642737 00000 n 0004642797 00000 n 0004642857 00000 n 0004642917 00000 n 0004642980 00000 n 0004643041 00000 n 0004643102 00000 n 0004643163 00000 n 0004643224 00000 n 0004643285 00000 n 0004643346 00000 n 0004643407 00000 n 0004643468 00000 n 0004643529 00000 n 0004643590 00000 n 0004643651 00000 n 0004643712 00000 n 0004643773 00000 n 0004643834 00000 n 0004643895 00000 n 0004643956 00000 n 0004644017 00000 n 0004644078 00000 n 0004644139 00000 n 0004644200 00000 n 0004644261 00000 n 0004644322 00000 n 0004644383 00000 n 0004644444 00000 n 0004644505 00000 n 0004644566 00000 n 0004644627 00000 n 0004644688 00000 n 0004644749 00000 n 0004644810 00000 n 0004644871 00000 n 0004644932 00000 n 0004644993 00000 n 0004645054 00000 n 0004645115 00000 n 0004645176 00000 n 0004645239 00000 n 0004645300 00000 n 0004645361 00000 n 0004645422 00000 n 0004645483 00000 n 0004645544 00000 n 0004645605 00000 n 0004645666 00000 n 0004645727 00000 n 0004645788 00000 n 0004645849 00000 n 0004645910 00000 n 0004645971 00000 n 0004646032 00000 n 0004646093 00000 n 0004646154 00000 n 0004646215 00000 n 0004646276 00000 n 0004646337 00000 n 0004646398 00000 n 0004646459 00000 n 0004646520 00000 n 0004646581 00000 n 0004646642 00000 n 0004646703 00000 n 0004646764 00000 n 0004646825 00000 n 0004646886 00000 n 0004646947 00000 n 0004647008 00000 n 0004647069 00000 n 0004647130 00000 n 0004647191 00000 n 0004647252 00000 n 0004647313 00000 n 0004647376 00000 n 0004647439 00000 n 0004647500 00000 n 0004647561 00000 n 0004647622 00000 n 0004647683 00000 n 0004647744 00000 n 0004647805 00000 n 0004647866 00000 n 0004647927 00000 n 0004647988 00000 n 0004648049 00000 n 0004648110 00000 n 0004648171 00000 n 0004648232 00000 n 0004648293 00000 n 0004648354 00000 n 0004648415 00000 n 0004648476 00000 n 0004648537 00000 n 0004648598 00000 n 0004648659 00000 n 0004648720 00000 n 0004648781 00000 n 0004648842 00000 n 0004648903 00000 n 0004648964 00000 n 0004649025 00000 n 0004649086 00000 n 0004649147 00000 n 0004649208 00000 n 0004649269 00000 n 0004649330 00000 n 0004649391 00000 n 0004649452 00000 n 0004649513 00000 n 0004649576 00000 n 0004649639 00000 n 0004649700 00000 n 0004649763 00000 n 0004649826 00000 n 0004649889 00000 n 0004649952 00000 n 0004650013 00000 n 0004650074 00000 n 0004650135 00000 n 0004650196 00000 n 0004650257 00000 n 0004650320 00000 n 0004650381 00000 n 0004650442 00000 n 0004650503 00000 n 0004650564 00000 n 0004650625 00000 n 0004650686 00000 n 0004650749 00000 n 0004650810 00000 n 0004650871 00000 n 0004650932 00000 n 0004650993 00000 n 0004651054 00000 n 0004651115 00000 n 0004651176 00000 n 0004651237 00000 n 0004651300 00000 n 0004651361 00000 n 0004651422 00000 n 0004651483 00000 n 0004651544 00000 n 0004651605 00000 n 0004651666 00000 n 0004651727 00000 n 0004651788 00000 n 0004651851 00000 n 0004651912 00000 n 0004651973 00000 n 0004652034 00000 n 0004652095 00000 n 0004652156 00000 n 0004652219 00000 n 0004652282 00000 n 0004652345 00000 n 0004652408 00000 n 0004652469 00000 n 0004652530 00000 n 0004652591 00000 n 0004652652 00000 n 0004652713 00000 n 0004652774 00000 n 0004652835 00000 n 0004652896 00000 n 0004652957 00000 n 0004653018 00000 n 0004653081 00000 n 0004653142 00000 n 0004653203 00000 n 0004653264 00000 n 0004653325 00000 n 0004653386 00000 n 0004653447 00000 n 0004653508 00000 n 0004653569 00000 n 0004653630 00000 n 0004653691 00000 n 0004653752 00000 n 0004653813 00000 n 0004653874 00000 n 0004653935 00000 n 0004653996 00000 n 0004654057 00000 n 0004654118 00000 n 0004654179 00000 n 0004654240 00000 n 0004654303 00000 n 0004654364 00000 n 0004654425 00000 n 0004654486 00000 n 0004654549 00000 n 0004654612 00000 n 0004654675 00000 n 0004654738 00000 n 0004654799 00000 n 0004654860 00000 n 0004654923 00000 n 0004654986 00000 n 0004655047 00000 n 0004655108 00000 n 0004655169 00000 n 0004655230 00000 n 0004655291 00000 n 0004655352 00000 n 0004655415 00000 n 0004655476 00000 n 0004655537 00000 n 0004655598 00000 n 0004655661 00000 n 0004655724 00000 n 0004655785 00000 n 0004655846 00000 n 0004655907 00000 n 0004655968 00000 n 0004656029 00000 n 0004656090 00000 n 0004656151 00000 n 0004656212 00000 n 0004656273 00000 n 0004656334 00000 n 0004656395 00000 n 0004656456 00000 n 0004656517 00000 n 0004656578 00000 n 0004656639 00000 n 0004656700 00000 n 0004656761 00000 n 0004656822 00000 n 0004656883 00000 n 0004656944 00000 n 0004657005 00000 n 0004657066 00000 n 0004657127 00000 n 0004657188 00000 n 0004657249 00000 n 0004657310 00000 n 0004657371 00000 n 0004657432 00000 n 0004657493 00000 n 0004657554 00000 n 0004657615 00000 n 0004657676 00000 n 0004657737 00000 n 0004657798 00000 n 0004657859 00000 n 0004657920 00000 n 0004657981 00000 n 0004658042 00000 n 0004658103 00000 n 0004658164 00000 n 0004658225 00000 n 0004658286 00000 n 0004658347 00000 n 0004658408 00000 n 0004658469 00000 n 0004658530 00000 n 0004658591 00000 n 0004658652 00000 n 0004658713 00000 n 0004658774 00000 n 0004658835 00000 n 0004658896 00000 n 0004658957 00000 n 0004659018 00000 n 0004659079 00000 n 0004659140 00000 n 0004659201 00000 n 0004659262 00000 n 0004659325 00000 n 0004659388 00000 n 0004659449 00000 n 0004659510 00000 n 0004659571 00000 n 0004659632 00000 n 0004659693 00000 n 0004659754 00000 n 0004659815 00000 n 0004659876 00000 n 0004659937 00000 n 0004659998 00000 n 0004660061 00000 n 0004660122 00000 n 0004660183 00000 n 0004660244 00000 n 0004660305 00000 n 0004660368 00000 n 0004660429 00000 n 0004660490 00000 n 0004660551 00000 n 0004660614 00000 n 0004660675 00000 n 0004660736 00000 n 0004660797 00000 n 0004660858 00000 n 0004660919 00000 n 0004660980 00000 n 0004661041 00000 n 0004661102 00000 n 0004661165 00000 n 0004661226 00000 n 0004661287 00000 n 0004661348 00000 n 0004661409 00000 n 0004661470 00000 n 0004661533 00000 n 0004661594 00000 n 0004661655 00000 n 0004661716 00000 n 0004661777 00000 n 0004661840 00000 n 0004661901 00000 n 0004661962 00000 n 0004662023 00000 n 0004662084 00000 n 0004662145 00000 n 0004662206 00000 n 0004662267 00000 n 0004662328 00000 n 0004662389 00000 n 0004662450 00000 n 0004662511 00000 n 0004662574 00000 n 0004662635 00000 n 0004662696 00000 n 0004662757 00000 n 0004662818 00000 n 0004662879 00000 n 0004662940 00000 n 0004663003 00000 n 0004663064 00000 n 0004663125 00000 n 0004663186 00000 n 0004663247 00000 n 0004663310 00000 n 0004663371 00000 n 0004663432 00000 n 0004663493 00000 n 0004663554 00000 n 0004663615 00000 n 0004663678 00000 n 0004663739 00000 n 0004663800 00000 n 0004663861 00000 n 0004663922 00000 n 0004663983 00000 n 0004664044 00000 n 0004664105 00000 n 0004664166 00000 n 0004664227 00000 n 0004664288 00000 n 0004664349 00000 n 0004664412 00000 n 0004664473 00000 n 0004664534 00000 n 0004664595 00000 n 0004664656 00000 n 0004664717 00000 n 0004664778 00000 n 0004664839 00000 n 0004664900 00000 n 0004664961 00000 n 0004665024 00000 n 0004665085 00000 n 0004665146 00000 n 0004665207 00000 n 0004665268 00000 n 0004665329 00000 n 0004665390 00000 n 0004665451 00000 n 0004665514 00000 n 0004665575 00000 n 0004665636 00000 n 0004665697 00000 n 0004665758 00000 n 0004665819 00000 n 0004665882 00000 n 0004665945 00000 n 0004666006 00000 n 0004666067 00000 n 0004666128 00000 n 0004666189 00000 n 0004666250 00000 n 0004666313 00000 n 0004666376 00000 n 0004666437 00000 n 0004666498 00000 n 0004666559 00000 n 0004666620 00000 n 0004666681 00000 n 0004666742 00000 n 0004666803 00000 n 0004666864 00000 n 0004666925 00000 n 0004666986 00000 n 0004667047 00000 n 0004667110 00000 n 0004667171 00000 n 0004667232 00000 n 0004667295 00000 n 0004667356 00000 n 0004667417 00000 n 0004667478 00000 n 0004667539 00000 n 0004667600 00000 n 0004667661 00000 n 0004667722 00000 n 0004667783 00000 n 0004667844 00000 n 0004667905 00000 n 0004667966 00000 n 0004668029 00000 n 0004668090 00000 n 0004668151 00000 n 0004668212 00000 n 0004668273 00000 n 0004668334 00000 n 0004668395 00000 n 0004668456 00000 n 0004668517 00000 n 0004668578 00000 n 0004668641 00000 n 0004668702 00000 n 0004668763 00000 n 0004668824 00000 n 0004668885 00000 n 0004668946 00000 n 0004669007 00000 n 0004669068 00000 n 0004669129 00000 n 0004669190 00000 n 0004669251 00000 n 0004669312 00000 n 0004669373 00000 n 0004669436 00000 n 0004669497 00000 n 0004669558 00000 n 0004669619 00000 n 0004669680 00000 n 0004669743 00000 n 0004669804 00000 n 0004669865 00000 n 0004669926 00000 n 0004669987 00000 n 0004670048 00000 n 0004670109 00000 n 0004670170 00000 n 0004670231 00000 n 0004670292 00000 n 0004670353 00000 n 0004670416 00000 n 0004670479 00000 n 0004670542 00000 n 0004670605 00000 n 0004670666 00000 n 0004670727 00000 n 0004670790 00000 n 0004670853 00000 n 0004670914 00000 n 0004670975 00000 n 0004671036 00000 n 0004671097 00000 n 0004671158 00000 n 0004671219 00000 n 0004671280 00000 n 0004671341 00000 n 0004671402 00000 n 0004671463 00000 n 0004671526 00000 n 0004671589 00000 n 0004671650 00000 n 0004671711 00000 n 0004671774 00000 n 0004671837 00000 n 0004671898 00000 n 0004671959 00000 n 0004672020 00000 n 0004672081 00000 n 0004672142 00000 n 0004672205 00000 n 0004672268 00000 n 0004672329 00000 n 0004672390 00000 n 0004672451 00000 n 0004672512 00000 n 0004672573 00000 n 0004672636 00000 n 0004672697 00000 n 0004672758 00000 n 0004672819 00000 n 0004672880 00000 n 0004672941 00000 n 0004673004 00000 n 0004673065 00000 n 0004673128 00000 n 0004673189 00000 n 0004673250 00000 n 0004673311 00000 n 0004673372 00000 n 0004673433 00000 n 0004673496 00000 n 0004673557 00000 n 0004673620 00000 n 0004673681 00000 n 0004673742 00000 n 0004673803 00000 n 0004673864 00000 n 0004673925 00000 n 0004673988 00000 n 0004674049 00000 n 0004674110 00000 n 0004674171 00000 n 0004674232 00000 n 0004674293 00000 n 0004674354 00000 n 0004674415 00000 n 0004674476 00000 n 0004674537 00000 n 0004674598 00000 n 0004674661 00000 n 0004674722 00000 n 0004674783 00000 n 0004674844 00000 n 0004674905 00000 n 0004674968 00000 n 0004675029 00000 n 0004675090 00000 n 0004675151 00000 n 0004675212 00000 n 0004675275 00000 n 0004675336 00000 n 0004675397 00000 n 0004675458 00000 n 0004675519 00000 n 0004675582 00000 n 0004675643 00000 n 0004675706 00000 n 0004675767 00000 n 0004675830 00000 n 0004675891 00000 n 0004675952 00000 n 0004676013 00000 n 0004676076 00000 n 0004676137 00000 n 0004676198 00000 n 0004676259 00000 n 0004676320 00000 n 0004676381 00000 n 0004676444 00000 n 0004676505 00000 n 0004676566 00000 n 0004676627 00000 n 0004676688 00000 n 0004676751 00000 n 0004676812 00000 n 0004676873 00000 n 0004676934 00000 n 0004676997 00000 n 0004677058 00000 n 0004677119 00000 n 0004677180 00000 n 0004677241 00000 n 0004677304 00000 n 0004677367 00000 n 0004677430 00000 n 0004677491 00000 n 0004677554 00000 n 0004677617 00000 n 0004677678 00000 n 0004677739 00000 n 0004677800 00000 n 0004677861 00000 n 0004677922 00000 n 0004677983 00000 n 0004678044 00000 n 0004678105 00000 n 0004678166 00000 n 0004678227 00000 n 0004678288 00000 n 0004678349 00000 n 0004678410 00000 n 0004678471 00000 n 0004678532 00000 n 0004678593 00000 n 0004678654 00000 n 0004678715 00000 n 0004678776 00000 n 0004678837 00000 n 0004678898 00000 n 0004678959 00000 n 0004679020 00000 n 0004679081 00000 n 0004679142 00000 n 0004679203 00000 n 0004679264 00000 n 0004679325 00000 n 0004679386 00000 n 0004679447 00000 n 0004679508 00000 n 0004679569 00000 n 0004679630 00000 n 0004679691 00000 n 0004679752 00000 n 0004679813 00000 n 0004679874 00000 n 0004679935 00000 n 0004679998 00000 n 0004680059 00000 n 0004680120 00000 n 0004680181 00000 n 0004680242 00000 n 0004680303 00000 n 0004680364 00000 n 0004680425 00000 n 0004680486 00000 n 0004680547 00000 n 0004680610 00000 n 0004680671 00000 n 0004680732 00000 n 0004680793 00000 n 0004680854 00000 n 0004680915 00000 n 0004680976 00000 n 0004681037 00000 n 0004681098 00000 n 0004681159 00000 n 0004681220 00000 n 0004681281 00000 n 0004681342 00000 n 0004681403 00000 n 0004681464 00000 n 0004681525 00000 n 0004681586 00000 n 0004681647 00000 n 0004681708 00000 n 0004681769 00000 n 0004681830 00000 n 0004681891 00000 n 0004681952 00000 n 0004682013 00000 n 0004682074 00000 n 0004682135 00000 n 0004682196 00000 n 0004682257 00000 n 0004682318 00000 n 0004682379 00000 n 0004682440 00000 n 0004682501 00000 n 0004682562 00000 n 0004682623 00000 n 0004682684 00000 n 0004682745 00000 n 0004682806 00000 n 0004682867 00000 n 0004682928 00000 n 0004682989 00000 n 0004683050 00000 n 0004683111 00000 n 0004683172 00000 n 0004683235 00000 n 0004683296 00000 n 0004683357 00000 n 0004683418 00000 n 0004683479 00000 n 0004683542 00000 n 0004683603 00000 n 0004683664 00000 n 0004683725 00000 n 0004683786 00000 n 0004683847 00000 n 0004683908 00000 n 0004683969 00000 n 0004684030 00000 n 0004684091 00000 n 0004684152 00000 n 0004684213 00000 n 0004684274 00000 n 0004684335 00000 n 0004684396 00000 n 0004684457 00000 n 0004684518 00000 n 0004684579 00000 n 0004684640 00000 n 0004684701 00000 n 0004684762 00000 n 0004684823 00000 n 0004684884 00000 n 0004684945 00000 n 0004685006 00000 n 0004685067 00000 n 0004685128 00000 n 0004685189 00000 n 0004685250 00000 n 0004685311 00000 n 0004685372 00000 n 0004685433 00000 n 0004685494 00000 n 0004685555 00000 n 0004685616 00000 n 0004685677 00000 n 0004685738 00000 n 0004685799 00000 n 0004685860 00000 n 0004685921 00000 n 0004685982 00000 n 0004686043 00000 n 0004686104 00000 n 0004686165 00000 n 0004686226 00000 n 0004686287 00000 n 0004686348 00000 n 0004686409 00000 n 0004686470 00000 n 0004686531 00000 n 0004686592 00000 n 0004686653 00000 n 0004686714 00000 n 0004686775 00000 n 0004686836 00000 n 0004686897 00000 n 0004686958 00000 n 0004687019 00000 n 0004687080 00000 n 0004687141 00000 n 0004687202 00000 n 0004687263 00000 n 0004687324 00000 n 0004687385 00000 n 0004687446 00000 n 0004687507 00000 n 0004687568 00000 n 0004687629 00000 n 0004687690 00000 n 0004687751 00000 n 0004687812 00000 n 0004687873 00000 n 0004687934 00000 n 0004687995 00000 n 0004688056 00000 n 0004688117 00000 n 0004688178 00000 n 0004688239 00000 n 0004688300 00000 n 0004688361 00000 n 0004688422 00000 n 0004688483 00000 n 0004688544 00000 n 0004688605 00000 n 0004688666 00000 n 0004688727 00000 n 0004688788 00000 n 0004688849 00000 n 0004688910 00000 n 0004688971 00000 n 0004689032 00000 n 0004689093 00000 n 0004689154 00000 n 0004689215 00000 n 0004689276 00000 n 0004689337 00000 n 0004689398 00000 n 0004689459 00000 n 0004689520 00000 n 0004689581 00000 n 0004689642 00000 n 0004689703 00000 n 0004689764 00000 n 0004689825 00000 n 0004689886 00000 n 0004689947 00000 n 0004690008 00000 n 0004690069 00000 n 0004690130 00000 n 0004690191 00000 n 0004690252 00000 n 0004690313 00000 n 0004690374 00000 n 0004690435 00000 n 0004690496 00000 n 0004690557 00000 n 0004690618 00000 n 0004690679 00000 n 0004690740 00000 n 0004690801 00000 n 0004690862 00000 n 0004690923 00000 n 0004690984 00000 n 0004691045 00000 n 0004691106 00000 n 0004691167 00000 n 0004691228 00000 n 0004691289 00000 n 0004691350 00000 n 0004691411 00000 n 0004691472 00000 n 0004691533 00000 n 0004691594 00000 n 0004691655 00000 n 0004691716 00000 n 0004691777 00000 n 0004691838 00000 n 0004691899 00000 n 0004691960 00000 n 0004692021 00000 n 0004692082 00000 n 0004692143 00000 n 0004692204 00000 n 0004692265 00000 n 0004692326 00000 n 0004692387 00000 n 0004692448 00000 n 0004692509 00000 n 0004692570 00000 n 0004692631 00000 n 0004692692 00000 n 0004692753 00000 n 0004692814 00000 n 0004692875 00000 n 0004692936 00000 n 0004692997 00000 n 0004693058 00000 n 0004693119 00000 n 0004693180 00000 n 0004693241 00000 n 0004693302 00000 n 0004693363 00000 n 0004693424 00000 n 0004693485 00000 n 0004693546 00000 n 0004693607 00000 n 0004693668 00000 n 0004693729 00000 n 0004693790 00000 n 0004693851 00000 n 0004693912 00000 n 0004693973 00000 n 0004694034 00000 n 0004694095 00000 n 0004694156 00000 n 0004694217 00000 n 0004694278 00000 n 0004694339 00000 n 0004694400 00000 n 0004694461 00000 n 0004694522 00000 n 0004694583 00000 n 0004694644 00000 n 0004694705 00000 n 0004694766 00000 n 0004694827 00000 n 0004694888 00000 n 0004694949 00000 n 0004695010 00000 n 0004695071 00000 n 0004695132 00000 n 0004695193 00000 n 0004695254 00000 n 0004695315 00000 n 0004695376 00000 n 0004695437 00000 n 0004695498 00000 n 0004695559 00000 n 0004695620 00000 n 0004695681 00000 n 0004695742 00000 n 0004695803 00000 n 0004695864 00000 n 0004695925 00000 n 0004695986 00000 n 0004696047 00000 n 0004696108 00000 n 0004696169 00000 n 0004696230 00000 n 0004696291 00000 n 0004696352 00000 n 0004696413 00000 n 0004696474 00000 n 0004696535 00000 n 0004696596 00000 n 0004696657 00000 n 0004696718 00000 n 0004696779 00000 n 0004696840 00000 n 0004696901 00000 n 0004696962 00000 n 0004697023 00000 n 0004697084 00000 n 0004697145 00000 n 0004697206 00000 n 0004697267 00000 n 0004697328 00000 n 0004697389 00000 n 0004697450 00000 n 0004697511 00000 n 0004697572 00000 n 0004697633 00000 n 0004697694 00000 n 0004697755 00000 n 0004697816 00000 n 0004697877 00000 n 0004697938 00000 n 0004697999 00000 n 0004698060 00000 n 0004698121 00000 n 0004698182 00000 n 0004698243 00000 n 0004698304 00000 n 0004698365 00000 n 0004698426 00000 n 0004698487 00000 n 0004698550 00000 n 0004698611 00000 n 0004698672 00000 n 0004698733 00000 n 0004698794 00000 n 0004698857 00000 n 0004698920 00000 n 0004698981 00000 n 0004699042 00000 n 0004699103 00000 n 0004699164 00000 n 0004699225 00000 n 0004699286 00000 n 0004699347 00000 n 0004699408 00000 n 0004699469 00000 n 0004699530 00000 n 0004699591 00000 n 0004699654 00000 n 0004699715 00000 n 0004699776 00000 n 0004699837 00000 n 0004699898 00000 n 0004699959 00000 n 0004700020 00000 n 0004700081 00000 n 0004700142 00000 n 0004700203 00000 n 0004700264 00000 n 0004700325 00000 n 0004700386 00000 n 0004700447 00000 n 0004700508 00000 n 0004700569 00000 n 0004700632 00000 n 0004700693 00000 n 0004700754 00000 n 0004700815 00000 n 0004700876 00000 n 0004700937 00000 n 0004701000 00000 n 0004701061 00000 n 0004701122 00000 n 0004701183 00000 n 0004701244 00000 n 0004701305 00000 n 0004701368 00000 n 0004701429 00000 n 0004701490 00000 n 0004701551 00000 n 0004701612 00000 n 0004701673 00000 n 0004701734 00000 n 0004701797 00000 n 0004701858 00000 n 0004701919 00000 n 0004701980 00000 n 0004702041 00000 n 0004702102 00000 n 0004702165 00000 n 0004702226 00000 n 0004702287 00000 n 0004702348 00000 n 0004702409 00000 n 0004702470 00000 n 0004702531 00000 n 0004702594 00000 n 0004702657 00000 n 0004702720 00000 n 0004702783 00000 n 0004702844 00000 n 0004702905 00000 n 0004702966 00000 n 0004703027 00000 n 0004703088 00000 n 0004703149 00000 n 0004703210 00000 n 0004703271 00000 n 0004703332 00000 n 0004703395 00000 n 0004703456 00000 n 0004703517 00000 n 0004703578 00000 n 0004703639 00000 n 0004703700 00000 n 0004703763 00000 n 0004703824 00000 n 0004703885 00000 n 0004703946 00000 n 0004704007 00000 n 0004704068 00000 n 0004704129 00000 n 0004704190 00000 n 0004704251 00000 n 0004704314 00000 n 0004704375 00000 n 0004704436 00000 n 0004704497 00000 n 0004704558 00000 n 0004704619 00000 n 0004704682 00000 n 0004704743 00000 n 0004704804 00000 n 0004704865 00000 n 0004704926 00000 n 0004704987 00000 n 0004705048 00000 n 0004705109 00000 n 0004705170 00000 n 0004705231 00000 n 0004705292 00000 n 0004705355 00000 n 0004705416 00000 n 0004705477 00000 n 0004705540 00000 n 0004705601 00000 n 0004705662 00000 n 0004705723 00000 n 0004705786 00000 n 0004705847 00000 n 0004705908 00000 n 0004705969 00000 n 0004706030 00000 n 0004706091 00000 n 0004706152 00000 n 0004706213 00000 n 0004706276 00000 n 0004706337 00000 n 0004706398 00000 n 0004706459 00000 n 0004706520 00000 n 0004706584 00000 n 0004706646 00000 n 0004706708 00000 n 0004706770 00000 n 0004706832 00000 n 0004706894 00000 n 0004706956 00000 n 0004707020 00000 n 0004707084 00000 n 0004707146 00000 n 0004707208 00000 n 0004707272 00000 n 0004707334 00000 n 0004707396 00000 n 0004707460 00000 n 0004707522 00000 n 0004707584 00000 n 0004707646 00000 n 0004707708 00000 n 0004707770 00000 n 0004707832 00000 n 0004707896 00000 n 0004707958 00000 n 0004708022 00000 n 0004708084 00000 n 0004708146 00000 n 0004708208 00000 n 0004708270 00000 n 0004708332 00000 n 0004708394 00000 n 0004708456 00000 n 0004708518 00000 n 0004708580 00000 n 0004708644 00000 n 0004708706 00000 n 0004708768 00000 n 0004708830 00000 n 0004708892 00000 n 0004708956 00000 n 0004709020 00000 n 0004709082 00000 n 0004709144 00000 n 0004709206 00000 n 0004709268 00000 n 0004709330 00000 n 0004709392 00000 n 0004709454 00000 n 0004709516 00000 n 0004709580 00000 n 0004709642 00000 n 0004709704 00000 n 0004709766 00000 n 0004709828 00000 n 0004709890 00000 n 0004709952 00000 n 0004710016 00000 n 0004710078 00000 n 0004710140 00000 n 0004710202 00000 n 0004710264 00000 n 0004710328 00000 n 0004710390 00000 n 0004710452 00000 n 0004710514 00000 n 0004710578 00000 n 0004710640 00000 n 0004710702 00000 n 0004710764 00000 n 0004710826 00000 n 0004710890 00000 n 0004710954 00000 n 0004711016 00000 n 0004711078 00000 n 0004711142 00000 n 0004711206 00000 n 0004711268 00000 n 0004711330 00000 n 0004711392 00000 n 0004711454 00000 n 0004711516 00000 n 0004711578 00000 n 0004711640 00000 n 0004711702 00000 n 0004711764 00000 n 0004711826 00000 n 0004711888 00000 n 0004711950 00000 n 0004712012 00000 n 0004712074 00000 n 0004712138 00000 n 0004712200 00000 n 0004712262 00000 n 0004712324 00000 n 0004712386 00000 n 0004712448 00000 n 0004712512 00000 n 0004712574 00000 n 0004712638 00000 n 0004712700 00000 n 0004712762 00000 n 0004712824 00000 n 0004712886 00000 n 0004712948 00000 n 0004713010 00000 n 0004713072 00000 n 0004713134 00000 n 0004713198 00000 n 0004713260 00000 n 0004713324 00000 n 0004713388 00000 n 0004713452 00000 n 0004713516 00000 n 0004713578 00000 n 0004713640 00000 n 0004713702 00000 n 0004713764 00000 n 0004713826 00000 n 0004713888 00000 n 0004713950 00000 n 0004714014 00000 n 0004714076 00000 n 0004714140 00000 n 0004714202 00000 n 0004714264 00000 n 0004714326 00000 n 0004714388 00000 n 0004714450 00000 n 0004714512 00000 n 0004714576 00000 n 0004714640 00000 n 0004714704 00000 n 0004714768 00000 n 0004714830 00000 n 0004714892 00000 n 0004714954 00000 n 0004715016 00000 n 0004715078 00000 n 0004715140 00000 n 0004715202 00000 n 0004715264 00000 n 0004715326 00000 n 0004715388 00000 n 0004715450 00000 n 0004715514 00000 n 0004715576 00000 n 0004715638 00000 n 0004715702 00000 n 0004715764 00000 n 0004715826 00000 n 0004715888 00000 n 0004715950 00000 n 0004716012 00000 n 0004716076 00000 n 0004716138 00000 n 0004716200 00000 n 0004716262 00000 n 0004716324 00000 n 0004716386 00000 n 0004716448 00000 n 0004716510 00000 n 0004716572 00000 n 0004716634 00000 n 0004716698 00000 n 0004716760 00000 n 0004716822 00000 n 0004716884 00000 n 0004716946 00000 n 0004717008 00000 n 0004717070 00000 n 0004717134 00000 n 0004717196 00000 n 0004717260 00000 n 0004717322 00000 n 0004717384 00000 n 0004717448 00000 n 0004717510 00000 n 0004717572 00000 n 0004717636 00000 n 0004717698 00000 n 0004717760 00000 n 0004717822 00000 n 0004717884 00000 n 0004717946 00000 n 0004718008 00000 n 0004718070 00000 n 0004718134 00000 n 0004718196 00000 n 0004718260 00000 n 0004718322 00000 n 0004718384 00000 n 0004718446 00000 n 0004718510 00000 n 0004718572 00000 n 0004718634 00000 n 0004718696 00000 n 0004718758 00000 n 0004718820 00000 n 0004718882 00000 n 0004718944 00000 n 0004719006 00000 n 0004719068 00000 n 0004719130 00000 n 0004719194 00000 n 0004719256 00000 n 0004719318 00000 n 0004719382 00000 n 0004719446 00000 n 0004719508 00000 n 0004719570 00000 n 0004719632 00000 n 0004719696 00000 n 0004719760 00000 n 0004719822 00000 n 0004719884 00000 n 0004719948 00000 n 0004720012 00000 n 0004720074 00000 n 0004720136 00000 n 0004720198 00000 n 0004720260 00000 n 0004720322 00000 n 0004720384 00000 n 0004720446 00000 n 0004720508 00000 n 0004720570 00000 n 0004720632 00000 n 0004720694 00000 n 0004720756 00000 n 0004720818 00000 n 0004720882 00000 n 0004720944 00000 n 0004721006 00000 n 0004721068 00000 n 0004721130 00000 n 0004721192 00000 n 0004721254 00000 n 0004721316 00000 n 0004721380 00000 n 0004721442 00000 n 0004721504 00000 n 0004721566 00000 n 0004721628 00000 n 0004721690 00000 n 0004721752 00000 n 0004721814 00000 n 0004721876 00000 n 0004721938 00000 n 0004722002 00000 n 0004722064 00000 n 0004722126 00000 n 0004722188 00000 n 0004722250 00000 n 0004722312 00000 n 0004722374 00000 n 0004722436 00000 n 0004722498 00000 n 0004722560 00000 n 0004722622 00000 n 0004722684 00000 n 0004722748 00000 n 0004722810 00000 n 0004722872 00000 n 0004722934 00000 n 0004722996 00000 n 0004723058 00000 n 0004723120 00000 n 0004723184 00000 n 0004723246 00000 n 0004723308 00000 n 0004723370 00000 n 0004723432 00000 n 0004723494 00000 n 0004723558 00000 n 0004723620 00000 n 0004723682 00000 n 0004723746 00000 n 0004723810 00000 n 0004723874 00000 n 0004723938 00000 n 0004724000 00000 n 0004724062 00000 n 0004724124 00000 n 0004724186 00000 n 0004724248 00000 n 0004724310 00000 n 0004724372 00000 n 0004724436 00000 n 0004724498 00000 n 0004724560 00000 n 0004724622 00000 n 0004724684 00000 n 0004724746 00000 n 0004724810 00000 n 0004724872 00000 n 0004724936 00000 n 0004724998 00000 n 0004725060 00000 n 0004725122 00000 n 0004725184 00000 n 0004725246 00000 n 0004725308 00000 n 0004725370 00000 n 0004725432 00000 n 0004725496 00000 n 0004725558 00000 n 0004725622 00000 n 0004725684 00000 n 0004725746 00000 n 0004725808 00000 n 0004725870 00000 n 0004725932 00000 n 0004725994 00000 n 0004726056 00000 n 0004726120 00000 n 0004726182 00000 n 0004726244 00000 n 0004726306 00000 n 0004726368 00000 n 0004726430 00000 n 0004726492 00000 n 0004726554 00000 n 0004726616 00000 n 0004726678 00000 n 0004726740 00000 n 0004726802 00000 n 0004726864 00000 n 0004726926 00000 n 0004726990 00000 n 0004727052 00000 n 0004727114 00000 n 0004727176 00000 n 0004727240 00000 n 0004727302 00000 n 0004727364 00000 n 0004727428 00000 n 0004727490 00000 n 0004727552 00000 n 0004727614 00000 n 0004727676 00000 n 0004727738 00000 n 0004727800 00000 n 0004727862 00000 n 0004727926 00000 n 0004727988 00000 n 0004728052 00000 n 0004728116 00000 n 0004728180 00000 n 0004728244 00000 n 0004728306 00000 n 0004728368 00000 n 0004728430 00000 n 0004728492 00000 n 0004728554 00000 n 0004728616 00000 n 0004728678 00000 n 0004728740 00000 n 0004728802 00000 n 0004728866 00000 n 0004728928 00000 n 0004728990 00000 n 0004729052 00000 n 0004729114 00000 n 0004729178 00000 n 0004729242 00000 n 0004729304 00000 n 0004729366 00000 n 0004729428 00000 n 0004729492 00000 n 0004729554 00000 n 0004729618 00000 n 0004729682 00000 n 0004729746 00000 n 0004729810 00000 n 0004729872 00000 n 0004729934 00000 n 0004729996 00000 n 0004730058 00000 n 0004730120 00000 n 0004730182 00000 n 0004730244 00000 n 0004730306 00000 n 0004730368 00000 n 0004730432 00000 n 0004730494 00000 n 0004730556 00000 n 0004730618 00000 n 0004730680 00000 n 0004730744 00000 n 0004730806 00000 n 0004730868 00000 n 0004730930 00000 n 0004730992 00000 n 0004731054 00000 n 0004731116 00000 n 0004731178 00000 n 0004731240 00000 n 0004731304 00000 n 0004731366 00000 n 0004731428 00000 n 0004731490 00000 n 0004731552 00000 n 0004731616 00000 n 0004731678 00000 n 0004731740 00000 n 0004731802 00000 n 0004731864 00000 n 0004731928 00000 n 0004731990 00000 n 0004732052 00000 n 0004732114 00000 n 0004732176 00000 n 0004732238 00000 n 0004732302 00000 n 0004732364 00000 n 0004732426 00000 n 0004732488 00000 n 0004732550 00000 n 0004732612 00000 n 0004732674 00000 n 0004732736 00000 n 0004732798 00000 n 0004732860 00000 n 0004732922 00000 n 0004732984 00000 n 0004733046 00000 n 0004733108 00000 n 0004733170 00000 n 0004733232 00000 n 0004733296 00000 n 0004733358 00000 n 0004733420 00000 n 0004733482 00000 n 0004733546 00000 n 0004733608 00000 n 0004733670 00000 n 0004733732 00000 n 0004733794 00000 n 0004733856 00000 n 0004733918 00000 n 0004733982 00000 n 0004734044 00000 n 0004734106 00000 n 0004734168 00000 n 0004734230 00000 n 0004734292 00000 n 0004734354 00000 n 0004734416 00000 n 0004734478 00000 n 0004734540 00000 n 0004734602 00000 n 0004734664 00000 n 0004734728 00000 n 0004734790 00000 n 0004734852 00000 n 0004734914 00000 n 0004734976 00000 n 0004735038 00000 n 0004735100 00000 n 0004735162 00000 n 0004735224 00000 n 0004735286 00000 n 0004735350 00000 n 0004735412 00000 n 0004735474 00000 n 0004735536 00000 n 0004735598 00000 n 0004735660 00000 n 0004735724 00000 n 0004735786 00000 n 0004735848 00000 n 0004735910 00000 n 0004735972 00000 n 0004736034 00000 n 0004736096 00000 n 0004736158 00000 n 0004736220 00000 n 0004736282 00000 n 0004736344 00000 n 0004736406 00000 n 0004736468 00000 n 0004736530 00000 n 0004736592 00000 n 0004736654 00000 n 0004736716 00000 n 0004736778 00000 n 0004736842 00000 n 0004736906 00000 n 0004736970 00000 n 0004737034 00000 n 0004737096 00000 n 0004737158 00000 n 0004737220 00000 n 0004737282 00000 n 0004737344 00000 n 0004737406 00000 n 0004737468 00000 n 0004737532 00000 n 0004737594 00000 n 0004737656 00000 n 0004737718 00000 n 0004737780 00000 n 0004737842 00000 n 0004737904 00000 n 0004737966 00000 n 0004738028 00000 n 0004738090 00000 n 0004738154 00000 n 0004738218 00000 n 0004738280 00000 n 0004738342 00000 n 0004738404 00000 n 0004738466 00000 n 0004738530 00000 n 0004738594 00000 n 0004738658 00000 n 0004738720 00000 n 0004738782 00000 n 0004738846 00000 n 0004738908 00000 n 0004738972 00000 n 0004739036 00000 n 0004739098 00000 n 0004739160 00000 n 0004739222 00000 n 0004739284 00000 n 0004739346 00000 n 0004739408 00000 n 0004739470 00000 n 0004739532 00000 n 0004739594 00000 n 0004739656 00000 n 0004739718 00000 n 0004739780 00000 n 0004739842 00000 n 0004739904 00000 n 0004739966 00000 n 0004740028 00000 n 0004740090 00000 n 0004740152 00000 n 0004740214 00000 n 0004740276 00000 n 0004740338 00000 n 0004740400 00000 n 0004740462 00000 n 0004740524 00000 n 0004740586 00000 n 0004740648 00000 n 0004740710 00000 n 0004740772 00000 n 0004740834 00000 n 0004740896 00000 n 0004740958 00000 n 0004741020 00000 n 0004741082 00000 n 0004741144 00000 n 0004741206 00000 n 0004741268 00000 n 0004741330 00000 n 0004741392 00000 n 0004741454 00000 n 0004741516 00000 n 0004741578 00000 n 0004741640 00000 n 0004741702 00000 n 0004741764 00000 n 0004741826 00000 n 0004741888 00000 n 0004741950 00000 n 0004742012 00000 n 0004742074 00000 n 0004742136 00000 n 0004742198 00000 n 0004742260 00000 n 0004742322 00000 n 0004742386 00000 n 0004742448 00000 n 0004742510 00000 n 0004742572 00000 n 0004742634 00000 n 0004742696 00000 n 0004742758 00000 n 0004742820 00000 n 0004742884 00000 n 0004742946 00000 n 0004743008 00000 n 0004743070 00000 n 0004743132 00000 n 0004743194 00000 n 0004743256 00000 n 0004743318 00000 n 0004743380 00000 n 0004743442 00000 n 0004743504 00000 n 0004743566 00000 n 0004743628 00000 n 0004743690 00000 n 0004743752 00000 n 0004743814 00000 n 0004743876 00000 n 0004743938 00000 n 0004744000 00000 n 0004744062 00000 n 0004744124 00000 n 0004744186 00000 n 0004744248 00000 n 0004744310 00000 n 0004744372 00000 n 0004744434 00000 n 0004744496 00000 n 0004744558 00000 n 0004744620 00000 n 0004744682 00000 n 0004744744 00000 n 0004744806 00000 n 0004744868 00000 n 0004744930 00000 n 0004744992 00000 n 0004745054 00000 n 0004745116 00000 n 0004745178 00000 n 0004745240 00000 n 0004745302 00000 n 0004745364 00000 n 0004745426 00000 n 0004745488 00000 n 0004745550 00000 n 0004745612 00000 n 0004745674 00000 n 0004745736 00000 n 0004745798 00000 n 0004745860 00000 n 0004745922 00000 n 0004745984 00000 n 0004746046 00000 n 0004746108 00000 n 0004746170 00000 n 0004746232 00000 n 0004746294 00000 n 0004746356 00000 n 0004746418 00000 n 0004746480 00000 n 0004746542 00000 n 0004746604 00000 n 0004746666 00000 n 0004746728 00000 n 0004746790 00000 n 0004746852 00000 n 0004746914 00000 n 0004746976 00000 n 0004747038 00000 n 0004747100 00000 n 0004747162 00000 n 0004747224 00000 n 0004747286 00000 n 0004747348 00000 n 0004747410 00000 n 0004747472 00000 n 0004747534 00000 n 0004747596 00000 n 0004747658 00000 n 0004747720 00000 n 0004747782 00000 n 0004747844 00000 n 0004747906 00000 n 0004747968 00000 n 0004748030 00000 n 0004748092 00000 n 0004748154 00000 n 0004748216 00000 n 0004748278 00000 n 0004748340 00000 n 0004748402 00000 n 0004748464 00000 n 0004748526 00000 n 0004748590 00000 n 0004748654 00000 n 0004748716 00000 n 0004748778 00000 n 0004748840 00000 n 0004748902 00000 n 0004748964 00000 n 0004749026 00000 n 0004749088 00000 n 0004749150 00000 n 0004749212 00000 n 0004749274 00000 n 0004749336 00000 n 0004749398 00000 n 0004749460 00000 n 0004749522 00000 n 0004749584 00000 n 0004749646 00000 n 0004749708 00000 n 0004749770 00000 n 0004749832 00000 n 0004749894 00000 n 0004749956 00000 n 0004750018 00000 n 0004750080 00000 n 0004750142 00000 n 0004750204 00000 n 0004750266 00000 n 0004750328 00000 n 0004750390 00000 n 0004750452 00000 n 0004750514 00000 n 0004750576 00000 n 0004750638 00000 n 0004750700 00000 n 0004750762 00000 n 0004750824 00000 n 0004750886 00000 n 0004750948 00000 n 0004751010 00000 n 0004751072 00000 n 0004751134 00000 n 0004751196 00000 n 0004751258 00000 n 0004751320 00000 n 0004751382 00000 n 0004751444 00000 n 0004751506 00000 n 0004751568 00000 n 0004751630 00000 n 0004751692 00000 n 0004751754 00000 n 0004751816 00000 n 0004751878 00000 n 0004751940 00000 n 0004752002 00000 n 0004752064 00000 n 0004752126 00000 n 0004752188 00000 n 0004752250 00000 n 0004752312 00000 n 0004752374 00000 n 0004752436 00000 n 0004752498 00000 n 0004752560 00000 n 0004752622 00000 n 0004752684 00000 n 0004752746 00000 n 0004752808 00000 n 0004752870 00000 n 0004752932 00000 n 0004752994 00000 n 0004753056 00000 n 0004753118 00000 n 0004753180 00000 n 0004753242 00000 n 0004753304 00000 n 0004753366 00000 n 0004753428 00000 n 0004753490 00000 n 0004753552 00000 n 0004753614 00000 n 0004753676 00000 n 0004753738 00000 n 0004753800 00000 n 0004753862 00000 n 0004753924 00000 n 0004753986 00000 n 0004754048 00000 n 0004754110 00000 n 0004754172 00000 n 0004754234 00000 n 0004754296 00000 n 0004754358 00000 n 0004754420 00000 n 0004754482 00000 n 0004754544 00000 n 0004754606 00000 n 0004754668 00000 n 0004754730 00000 n 0004754792 00000 n 0004754854 00000 n 0004754916 00000 n 0004754978 00000 n 0004755040 00000 n 0004755102 00000 n 0004755164 00000 n 0004755226 00000 n 0004755288 00000 n 0004755350 00000 n 0004755412 00000 n 0004755474 00000 n 0004755536 00000 n 0004755598 00000 n 0004755660 00000 n 0004755722 00000 n 0004755784 00000 n 0004755846 00000 n 0004755908 00000 n 0004755970 00000 n 0004756032 00000 n 0004756094 00000 n 0004756156 00000 n 0004756218 00000 n 0004756280 00000 n 0004756342 00000 n 0004756404 00000 n 0004756466 00000 n 0004756528 00000 n 0004756590 00000 n 0004756652 00000 n 0004756714 00000 n 0004756776 00000 n 0004756838 00000 n 0004756900 00000 n 0004756962 00000 n 0004757024 00000 n 0004757086 00000 n 0004757148 00000 n 0004757210 00000 n 0004757272 00000 n 0004757334 00000 n 0004757396 00000 n 0004757458 00000 n 0004757520 00000 n 0004757582 00000 n 0004757644 00000 n 0004757706 00000 n 0004757768 00000 n 0004757830 00000 n 0004757892 00000 n 0004757954 00000 n 0004758016 00000 n 0004758078 00000 n 0004758140 00000 n 0004758202 00000 n 0004758264 00000 n 0004758326 00000 n 0004758388 00000 n 0004758450 00000 n 0004758512 00000 n 0004758574 00000 n 0004758636 00000 n 0004758698 00000 n 0004758760 00000 n 0004758822 00000 n 0004758884 00000 n 0004758946 00000 n 0004759008 00000 n 0004759070 00000 n 0004759132 00000 n 0004759194 00000 n 0004759256 00000 n 0004759318 00000 n 0004759380 00000 n 0004759442 00000 n 0004759504 00000 n 0004759566 00000 n 0004759628 00000 n 0004759690 00000 n 0004759752 00000 n 0004759814 00000 n 0004759876 00000 n 0004759938 00000 n 0004760000 00000 n 0004760062 00000 n 0004760124 00000 n 0004760186 00000 n 0004760248 00000 n 0004760310 00000 n 0004760372 00000 n 0004760434 00000 n 0004760496 00000 n 0004760558 00000 n 0004760620 00000 n 0004760682 00000 n 0004760744 00000 n 0004760806 00000 n 0004760868 00000 n 0004760930 00000 n 0004760992 00000 n 0004761054 00000 n 0004761116 00000 n 0004761178 00000 n 0004761240 00000 n 0004761302 00000 n 0004761364 00000 n 0004761426 00000 n 0004761488 00000 n 0004761550 00000 n 0004761612 00000 n 0004761674 00000 n 0004761736 00000 n 0004761798 00000 n 0004761860 00000 n 0004761922 00000 n 0004761984 00000 n 0004762046 00000 n 0004762108 00000 n 0004762170 00000 n 0004762232 00000 n 0004762294 00000 n 0004762356 00000 n 0004762418 00000 n 0004762480 00000 n 0004762542 00000 n 0004762604 00000 n 0004762666 00000 n 0004762728 00000 n 0004762790 00000 n 0004762852 00000 n 0004762914 00000 n 0004762976 00000 n 0004763038 00000 n 0004763100 00000 n 0004763162 00000 n 0004763224 00000 n 0004763286 00000 n 0004763348 00000 n 0004763410 00000 n 0004763472 00000 n 0004763534 00000 n 0004763596 00000 n 0004763658 00000 n 0004763720 00000 n 0004763782 00000 n 0004763844 00000 n 0004763906 00000 n 0004763968 00000 n 0004764030 00000 n 0004764092 00000 n 0004764154 00000 n 0004764216 00000 n 0004764278 00000 n 0004764340 00000 n 0004764402 00000 n 0004764464 00000 n 0004764526 00000 n 0004764588 00000 n 0004764650 00000 n 0004764712 00000 n 0004764774 00000 n 0004764836 00000 n 0004764898 00000 n 0004764960 00000 n 0004765024 00000 n 0004765086 00000 n 0004765150 00000 n 0004765212 00000 n 0004765274 00000 n 0004765336 00000 n 0004765398 00000 n 0004765460 00000 n 0004765522 00000 n 0004765584 00000 n 0004765646 00000 n 0004765708 00000 n 0004765770 00000 n 0004765832 00000 n 0004765894 00000 n 0004765956 00000 n 0004766018 00000 n 0004766080 00000 n 0004766142 00000 n 0004766204 00000 n 0004766266 00000 n 0004766328 00000 n 0004766390 00000 n 0004766452 00000 n 0004766514 00000 n 0004766576 00000 n 0004766638 00000 n 0004766700 00000 n 0004766762 00000 n 0004766824 00000 n 0004766886 00000 n 0004766948 00000 n 0004767010 00000 n 0004767072 00000 n 0004767134 00000 n 0004767196 00000 n 0004767258 00000 n 0004767320 00000 n 0004767382 00000 n 0004767444 00000 n 0004767506 00000 n 0004767568 00000 n 0004767630 00000 n 0004767692 00000 n 0004767754 00000 n 0004767816 00000 n 0004767878 00000 n 0004767940 00000 n 0004768002 00000 n 0004768064 00000 n 0004768126 00000 n 0004768188 00000 n 0004768250 00000 n 0004768312 00000 n 0004768374 00000 n 0004768436 00000 n 0004768498 00000 n 0004768560 00000 n 0004768622 00000 n 0004768684 00000 n 0004768746 00000 n 0004768808 00000 n 0004768872 00000 n 0004768936 00000 n 0004768998 00000 n 0004769060 00000 n 0004769122 00000 n 0004769184 00000 n 0004769246 00000 n 0004769308 00000 n 0004769370 00000 n 0004769432 00000 n 0004769494 00000 n 0004769556 00000 n 0004769618 00000 n 0004769680 00000 n 0004769742 00000 n 0004769804 00000 n 0004769866 00000 n 0004769928 00000 n 0004769990 00000 n 0004770052 00000 n 0004770114 00000 n 0004770176 00000 n 0004770238 00000 n 0004770300 00000 n 0004770362 00000 n 0004770424 00000 n 0004770486 00000 n 0004770548 00000 n 0004770610 00000 n 0004770672 00000 n 0004770734 00000 n 0004770798 00000 n 0004770860 00000 n 0004770922 00000 n 0004770984 00000 n 0004771046 00000 n 0004771110 00000 n 0004771172 00000 n 0004771234 00000 n 0004771296 00000 n 0004771358 00000 n 0004771420 00000 n 0004771482 00000 n 0004771544 00000 n 0004771606 00000 n 0004771668 00000 n 0004771730 00000 n 0004771792 00000 n 0004771854 00000 n 0004771916 00000 n 0004771978 00000 n 0004772040 00000 n 0004772102 00000 n 0004772164 00000 n 0004772226 00000 n 0004772288 00000 n 0004772350 00000 n 0004772412 00000 n 0004772474 00000 n 0004772536 00000 n 0004772598 00000 n 0004772660 00000 n 0004772722 00000 n 0004772784 00000 n 0004772846 00000 n 0004772908 00000 n 0004772970 00000 n 0004773032 00000 n 0004773094 00000 n 0004773156 00000 n 0004773218 00000 n 0004773280 00000 n 0004773342 00000 n 0004773404 00000 n 0004773466 00000 n 0004773528 00000 n 0004773590 00000 n 0004773652 00000 n 0004773714 00000 n 0004773776 00000 n 0004773838 00000 n 0004773900 00000 n 0004773962 00000 n 0004774024 00000 n 0004774086 00000 n 0004774148 00000 n 0004774210 00000 n 0004774272 00000 n 0004774334 00000 n 0004774396 00000 n 0004774458 00000 n 0004774520 00000 n 0004774582 00000 n 0004774644 00000 n 0004774706 00000 n 0004774768 00000 n 0004774830 00000 n 0004774892 00000 n 0004774954 00000 n 0004775016 00000 n 0004775078 00000 n 0004775140 00000 n 0004775202 00000 n 0004775264 00000 n 0004775326 00000 n 0004775388 00000 n 0004775450 00000 n 0004775512 00000 n 0004775574 00000 n 0004775636 00000 n 0004775698 00000 n 0004775760 00000 n 0004775822 00000 n 0004775884 00000 n 0004775946 00000 n 0004776008 00000 n 0004776070 00000 n 0004776132 00000 n 0004776194 00000 n 0004776256 00000 n 0004776318 00000 n 0004776380 00000 n 0004776442 00000 n 0004776504 00000 n 0004776566 00000 n 0004776628 00000 n 0004776690 00000 n 0004776752 00000 n 0004776814 00000 n 0004776876 00000 n 0004776938 00000 n 0004777000 00000 n 0004777062 00000 n 0004777124 00000 n 0004777186 00000 n 0004777248 00000 n 0004777310 00000 n 0004777372 00000 n 0004777434 00000 n 0004777496 00000 n 0004777558 00000 n 0004777620 00000 n 0004777682 00000 n 0004777744 00000 n 0004777806 00000 n 0004777868 00000 n 0004777930 00000 n 0004777992 00000 n 0004778054 00000 n 0004778116 00000 n 0004778178 00000 n 0004778240 00000 n 0004778302 00000 n 0004778364 00000 n 0004778426 00000 n 0004778488 00000 n 0004778550 00000 n 0004778612 00000 n 0004778674 00000 n 0004778736 00000 n 0004778798 00000 n 0004778860 00000 n 0004778922 00000 n 0004778984 00000 n 0004779046 00000 n 0004779108 00000 n 0004779170 00000 n 0004779232 00000 n 0004779294 00000 n 0004779356 00000 n 0004779418 00000 n 0004779480 00000 n 0004779542 00000 n 0004779604 00000 n 0004779666 00000 n 0004779728 00000 n 0004779790 00000 n 0004779852 00000 n 0004779914 00000 n 0004779976 00000 n 0004780038 00000 n 0004780100 00000 n 0004780162 00000 n 0004780224 00000 n 0004780286 00000 n 0004780348 00000 n 0004780410 00000 n 0004780472 00000 n 0004780534 00000 n 0004780596 00000 n 0004780658 00000 n 0004780720 00000 n 0004780782 00000 n 0004780844 00000 n 0004780906 00000 n 0004780968 00000 n 0004781030 00000 n 0004781092 00000 n 0004781154 00000 n 0004781216 00000 n 0004781278 00000 n 0004781340 00000 n 0004781402 00000 n 0004781464 00000 n 0004781526 00000 n 0004781588 00000 n 0004781650 00000 n 0004781712 00000 n 0004781774 00000 n 0004781836 00000 n 0004781898 00000 n 0004781960 00000 n 0004782022 00000 n 0004782084 00000 n 0004782146 00000 n 0004782208 00000 n 0004782270 00000 n 0004782332 00000 n 0004782394 00000 n 0004782456 00000 n 0004782518 00000 n 0004782580 00000 n 0004782642 00000 n 0004782704 00000 n 0004782766 00000 n 0004782828 00000 n 0004782890 00000 n 0004782952 00000 n 0004783014 00000 n 0004783076 00000 n 0004783138 00000 n 0004783200 00000 n 0004783262 00000 n 0004783324 00000 n 0004783386 00000 n 0004783448 00000 n 0004783510 00000 n 0004783572 00000 n 0004783634 00000 n 0004783696 00000 n 0004783758 00000 n 0004783820 00000 n 0004783882 00000 n 0004783944 00000 n 0004784006 00000 n 0004784068 00000 n 0004784130 00000 n 0004784192 00000 n 0004784254 00000 n 0004784316 00000 n 0004784378 00000 n 0004784440 00000 n 0004784502 00000 n 0004784564 00000 n 0004784626 00000 n 0004784688 00000 n 0004784750 00000 n 0004784812 00000 n 0004784874 00000 n 0004784936 00000 n 0004784998 00000 n 0004785060 00000 n 0004785122 00000 n 0004785184 00000 n 0004785246 00000 n 0004785308 00000 n 0004785370 00000 n 0004785432 00000 n 0004785494 00000 n 0004785556 00000 n 0004785618 00000 n 0004785680 00000 n 0004785742 00000 n 0004785804 00000 n 0004785866 00000 n 0004785928 00000 n 0004785990 00000 n 0004786052 00000 n 0004786114 00000 n 0004786176 00000 n 0004786238 00000 n 0004786300 00000 n 0004786362 00000 n 0004786424 00000 n 0004786486 00000 n 0004786548 00000 n 0004786610 00000 n 0004786672 00000 n 0004786734 00000 n 0004786796 00000 n 0004786858 00000 n 0004786920 00000 n 0004786982 00000 n 0004787044 00000 n 0004787106 00000 n 0004787168 00000 n 0004787230 00000 n 0004787292 00000 n 0004787354 00000 n 0004787416 00000 n 0004787478 00000 n 0004787540 00000 n 0004787602 00000 n 0004787664 00000 n 0004787726 00000 n 0004787788 00000 n 0004787850 00000 n 0004787912 00000 n 0004787974 00000 n 0004788036 00000 n 0004788098 00000 n 0004788160 00000 n 0004788222 00000 n 0004788284 00000 n 0004788346 00000 n 0004788408 00000 n 0004788470 00000 n 0004788532 00000 n 0004788594 00000 n 0004788656 00000 n 0004788718 00000 n 0004788780 00000 n 0004788842 00000 n 0004788904 00000 n 0004788966 00000 n 0004789028 00000 n 0004789090 00000 n 0004789152 00000 n 0004789214 00000 n 0004789276 00000 n 0004789338 00000 n 0004789400 00000 n 0004789462 00000 n 0004789524 00000 n 0004789586 00000 n 0004789648 00000 n 0004789710 00000 n 0004789772 00000 n 0004789834 00000 n 0004789896 00000 n 0004789958 00000 n 0004790020 00000 n 0004790082 00000 n 0004790144 00000 n 0004790206 00000 n 0004790268 00000 n 0004790330 00000 n 0004790392 00000 n 0004790454 00000 n 0004790516 00000 n 0004790578 00000 n 0004790640 00000 n 0004790702 00000 n 0004790764 00000 n 0004790826 00000 n 0004790888 00000 n 0004790950 00000 n 0004791012 00000 n 0004791074 00000 n 0004791136 00000 n 0004791198 00000 n 0004791260 00000 n 0004791322 00000 n 0004791384 00000 n 0004791446 00000 n 0004791508 00000 n 0004791570 00000 n 0004791632 00000 n 0004791694 00000 n 0004791756 00000 n 0004791818 00000 n 0004791880 00000 n 0004791942 00000 n 0004792004 00000 n 0004792068 00000 n 0004792130 00000 n 0004792192 00000 n 0004792256 00000 n 0004792318 00000 n 0004792380 00000 n 0004792442 00000 n 0004792504 00000 n 0004792566 00000 n 0004792628 00000 n 0004792690 00000 n 0004792752 00000 n 0004792814 00000 n 0004792876 00000 n 0004792938 00000 n 0004793000 00000 n 0004793062 00000 n 0004793124 00000 n 0004793186 00000 n 0004793248 00000 n 0004793310 00000 n 0004793372 00000 n 0004793434 00000 n 0004793496 00000 n 0004793558 00000 n 0004793620 00000 n 0004793682 00000 n 0004793744 00000 n 0004793806 00000 n 0004793868 00000 n 0004793930 00000 n 0004793992 00000 n 0004794054 00000 n 0004794116 00000 n 0004794178 00000 n 0004794240 00000 n 0004794302 00000 n 0004794364 00000 n 0004794426 00000 n 0004794488 00000 n 0004794550 00000 n 0004794612 00000 n 0004794674 00000 n 0004794736 00000 n 0004794798 00000 n 0004794860 00000 n 0004794922 00000 n 0004794984 00000 n 0004795048 00000 n 0004795112 00000 n 0004795174 00000 n 0004795236 00000 n 0004795298 00000 n 0004795360 00000 n 0004795422 00000 n 0004795484 00000 n 0004795546 00000 n 0004795608 00000 n 0004795670 00000 n 0004795732 00000 n 0004795794 00000 n 0004795856 00000 n 0004795918 00000 n 0004795980 00000 n 0004796042 00000 n 0004796104 00000 n 0004796166 00000 n 0004796228 00000 n 0004796290 00000 n 0004796352 00000 n 0004796414 00000 n 0004796476 00000 n 0004796538 00000 n 0004796600 00000 n 0004796662 00000 n 0004796724 00000 n 0004796786 00000 n 0004796848 00000 n 0004796910 00000 n 0004796972 00000 n 0004797034 00000 n 0004797096 00000 n 0004797158 00000 n 0004797220 00000 n 0004797282 00000 n 0004797344 00000 n 0004797406 00000 n 0004797468 00000 n 0004797530 00000 n 0004797592 00000 n 0004797654 00000 n 0004797716 00000 n 0004797778 00000 n 0004797840 00000 n 0004797902 00000 n 0004797964 00000 n 0004798026 00000 n 0004798088 00000 n 0004798150 00000 n 0004798212 00000 n 0004798274 00000 n 0004798336 00000 n 0004798398 00000 n 0004798460 00000 n 0004798522 00000 n 0004798584 00000 n 0004798646 00000 n 0004798708 00000 n 0004798770 00000 n 0004798832 00000 n 0004798894 00000 n 0004798956 00000 n 0004799018 00000 n 0004799080 00000 n 0004799142 00000 n 0004799204 00000 n 0004799266 00000 n 0004799328 00000 n 0004799390 00000 n 0004799452 00000 n 0004799514 00000 n 0004799576 00000 n 0004799640 00000 n 0004799704 00000 n 0004799766 00000 n 0004799828 00000 n 0004799890 00000 n 0004799952 00000 n 0004800014 00000 n 0004800076 00000 n 0004800138 00000 n 0004800200 00000 n 0004800262 00000 n 0004800324 00000 n 0004800386 00000 n 0004800448 00000 n 0004800510 00000 n 0004800572 00000 n 0004800636 00000 n 0004800700 00000 n 0004800762 00000 n 0004800826 00000 n 0004800890 00000 n 0004800952 00000 n 0004801014 00000 n 0004801076 00000 n 0004801138 00000 n 0004801200 00000 n 0004801262 00000 n 0004801324 00000 n 0004801386 00000 n 0004801448 00000 n 0004801510 00000 n 0004801572 00000 n 0004801634 00000 n 0004801696 00000 n 0004801758 00000 n 0004801820 00000 n 0004801882 00000 n 0004801944 00000 n 0004802006 00000 n 0004802068 00000 n 0004802130 00000 n 0004802192 00000 n 0004802254 00000 n 0004802316 00000 n 0004802378 00000 n 0004802440 00000 n 0004802502 00000 n 0004802564 00000 n 0004802626 00000 n 0004802688 00000 n 0004802750 00000 n 0004802812 00000 n 0004802874 00000 n 0004802936 00000 n 0004802998 00000 n 0004803060 00000 n 0004803122 00000 n 0004803184 00000 n 0004803246 00000 n 0004803308 00000 n 0004803370 00000 n 0004803432 00000 n 0004803494 00000 n 0004803556 00000 n 0004803618 00000 n 0004803680 00000 n 0004803742 00000 n 0004803804 00000 n 0004803866 00000 n 0004803928 00000 n 0004803990 00000 n 0004804052 00000 n 0004804114 00000 n 0004804176 00000 n 0004804238 00000 n 0004804300 00000 n 0004804362 00000 n 0004804424 00000 n 0004804486 00000 n 0004804548 00000 n 0004804610 00000 n 0004804672 00000 n 0004804734 00000 n 0004804796 00000 n 0004804858 00000 n 0004804920 00000 n 0004804982 00000 n 0004805044 00000 n 0004805106 00000 n 0004805168 00000 n 0004805230 00000 n 0004805292 00000 n 0004805354 00000 n 0004805416 00000 n 0004805478 00000 n 0004805540 00000 n 0004805602 00000 n 0004805664 00000 n 0004805726 00000 n 0004805788 00000 n 0004805850 00000 n 0004805912 00000 n 0004805974 00000 n 0004806036 00000 n 0004806098 00000 n 0004806160 00000 n 0004806222 00000 n 0004806284 00000 n 0004806346 00000 n 0004806408 00000 n 0004806470 00000 n 0004806532 00000 n 0004806594 00000 n 0004806656 00000 n 0004806718 00000 n 0004806780 00000 n 0004806842 00000 n 0004806904 00000 n 0004806966 00000 n 0004807028 00000 n 0004807090 00000 n 0004807152 00000 n 0004807214 00000 n 0004807276 00000 n 0004807338 00000 n 0004807400 00000 n 0004807462 00000 n 0004807524 00000 n 0004807586 00000 n 0004807648 00000 n 0004807710 00000 n 0004807772 00000 n 0004807834 00000 n 0004807896 00000 n 0004807958 00000 n 0004808020 00000 n 0004808082 00000 n 0004808144 00000 n 0004808206 00000 n 0004808268 00000 n 0004808330 00000 n 0004808392 00000 n 0004808454 00000 n 0004808516 00000 n 0004808578 00000 n 0004808640 00000 n 0004808702 00000 n 0004808764 00000 n 0004808826 00000 n 0004808888 00000 n 0004808950 00000 n 0004809012 00000 n 0004809074 00000 n 0004809136 00000 n 0004809198 00000 n 0004809260 00000 n 0004809322 00000 n 0004809384 00000 n 0004809446 00000 n 0004809508 00000 n 0004809570 00000 n 0004809632 00000 n 0004809694 00000 n 0004809756 00000 n 0004809818 00000 n 0004809880 00000 n 0004809942 00000 n 0004810004 00000 n 0004810066 00000 n 0004810128 00000 n 0004810190 00000 n 0004810252 00000 n 0004810314 00000 n 0004810376 00000 n 0004810438 00000 n 0004810500 00000 n 0004810562 00000 n 0004810624 00000 n 0004810686 00000 n 0004810748 00000 n 0004810810 00000 n 0004810872 00000 n 0004810934 00000 n 0004810996 00000 n 0004811058 00000 n 0004811120 00000 n 0004811182 00000 n 0004811244 00000 n 0004811306 00000 n 0004811368 00000 n 0004811430 00000 n 0004811492 00000 n 0004811554 00000 n 0004811616 00000 n 0004811678 00000 n 0004811740 00000 n 0004811802 00000 n 0004811864 00000 n 0004811926 00000 n 0004811988 00000 n 0004812050 00000 n 0004812112 00000 n 0004812174 00000 n 0004812236 00000 n 0004812298 00000 n 0004812360 00000 n 0004812422 00000 n 0004812484 00000 n 0004812546 00000 n 0004812608 00000 n 0004812670 00000 n 0004812732 00000 n 0004812794 00000 n 0004812856 00000 n 0004812918 00000 n 0004812980 00000 n 0004813042 00000 n 0004813104 00000 n 0004813166 00000 n 0004813228 00000 n 0004813290 00000 n 0004813352 00000 n 0004813414 00000 n 0004813476 00000 n 0004813538 00000 n 0004813600 00000 n 0004813662 00000 n 0004813724 00000 n 0004813786 00000 n 0004813848 00000 n 0004813910 00000 n 0004813972 00000 n 0004814034 00000 n 0004814096 00000 n 0004814158 00000 n 0004814220 00000 n 0004814282 00000 n 0004814344 00000 n 0004814406 00000 n 0004814468 00000 n 0004814530 00000 n 0004814592 00000 n 0004814654 00000 n 0004814716 00000 n 0004814778 00000 n 0004814840 00000 n 0004814902 00000 n 0004814964 00000 n 0004815026 00000 n 0004815088 00000 n 0004815150 00000 n 0004815212 00000 n 0004815274 00000 n 0004815336 00000 n 0004815398 00000 n 0004815460 00000 n 0004815522 00000 n 0004815584 00000 n 0004815646 00000 n 0004815708 00000 n 0004815770 00000 n 0004815832 00000 n 0004815894 00000 n 0004815956 00000 n 0004816018 00000 n 0004816080 00000 n 0004816142 00000 n 0004816204 00000 n 0004816266 00000 n 0004816328 00000 n 0004816390 00000 n 0004816452 00000 n 0004816514 00000 n 0004816576 00000 n 0004816638 00000 n 0004816700 00000 n 0004816762 00000 n 0004816824 00000 n 0004816886 00000 n 0004816948 00000 n 0004817010 00000 n 0004817072 00000 n 0004817134 00000 n 0004817196 00000 n 0004817258 00000 n 0004817320 00000 n 0004817382 00000 n 0004817444 00000 n 0004817506 00000 n 0004817568 00000 n 0004817630 00000 n 0004817692 00000 n 0004817754 00000 n 0004817816 00000 n 0004817878 00000 n 0004817940 00000 n 0004818002 00000 n 0004818064 00000 n 0004818126 00000 n 0004818188 00000 n 0004818250 00000 n 0004818312 00000 n 0004818374 00000 n 0004818436 00000 n 0004818498 00000 n 0004818560 00000 n 0004818622 00000 n 0004818684 00000 n 0004818746 00000 n 0004818808 00000 n 0004818870 00000 n 0004818932 00000 n 0004818994 00000 n 0004819056 00000 n 0004819118 00000 n 0004819180 00000 n 0004819242 00000 n 0004819304 00000 n 0004819366 00000 n 0004819428 00000 n 0004819490 00000 n 0004819552 00000 n 0004819614 00000 n 0004819676 00000 n 0004819738 00000 n 0004819800 00000 n 0004819862 00000 n 0004819924 00000 n 0004819986 00000 n 0004820048 00000 n 0004820110 00000 n 0004820172 00000 n 0004820234 00000 n 0004820296 00000 n 0004820358 00000 n 0004820420 00000 n 0004820482 00000 n 0004820544 00000 n 0004820606 00000 n 0004820668 00000 n 0004820730 00000 n 0004820792 00000 n 0004820854 00000 n 0004820916 00000 n 0004820978 00000 n 0004821040 00000 n 0004821102 00000 n 0004821164 00000 n 0004821226 00000 n 0004821288 00000 n 0004821350 00000 n 0004821412 00000 n 0004821474 00000 n 0004821536 00000 n 0004821598 00000 n 0004821660 00000 n 0004821722 00000 n 0004821784 00000 n 0004821846 00000 n 0004821908 00000 n 0004821970 00000 n 0004822032 00000 n 0004822094 00000 n 0004822156 00000 n 0004822218 00000 n 0004822280 00000 n 0004822342 00000 n 0004822404 00000 n 0004822466 00000 n 0004822528 00000 n 0004822590 00000 n 0004822652 00000 n 0004822714 00000 n 0004822776 00000 n 0004822838 00000 n 0004822900 00000 n 0004822962 00000 n 0004823024 00000 n 0004823086 00000 n 0004823148 00000 n 0004823210 00000 n 0004823272 00000 n 0004823334 00000 n 0004823396 00000 n 0004823458 00000 n 0004823520 00000 n 0004823582 00000 n 0004823644 00000 n 0004823706 00000 n 0004823768 00000 n 0004823830 00000 n 0004823892 00000 n 0004823954 00000 n 0004824016 00000 n 0004824078 00000 n 0004824140 00000 n 0004824202 00000 n 0004824264 00000 n 0004824326 00000 n 0004824388 00000 n 0004824450 00000 n 0004824512 00000 n 0004824574 00000 n 0004824636 00000 n 0004824698 00000 n 0004824760 00000 n 0004824822 00000 n 0004824884 00000 n 0004824946 00000 n 0004825008 00000 n 0004825070 00000 n 0004825132 00000 n 0004825194 00000 n 0004825256 00000 n 0004825318 00000 n 0004825380 00000 n 0004825442 00000 n 0004825504 00000 n 0004825566 00000 n 0004825628 00000 n 0004825690 00000 n 0004825752 00000 n 0004825814 00000 n 0004825876 00000 n 0004825938 00000 n 0004826000 00000 n 0004826062 00000 n 0004826124 00000 n 0004826186 00000 n 0004826248 00000 n 0004826310 00000 n 0004826372 00000 n 0004826434 00000 n 0004826496 00000 n 0004826558 00000 n 0004826620 00000 n 0004826682 00000 n 0004826744 00000 n 0004826806 00000 n 0004826868 00000 n 0004826930 00000 n 0004826992 00000 n 0004827054 00000 n 0004827116 00000 n 0004827178 00000 n 0004827240 00000 n 0004827302 00000 n 0004827364 00000 n 0004827426 00000 n 0004827488 00000 n 0004827550 00000 n 0004827612 00000 n 0004827674 00000 n 0004827736 00000 n 0004827798 00000 n 0004827860 00000 n 0004827922 00000 n 0004827984 00000 n 0004828046 00000 n 0004828108 00000 n 0004828170 00000 n 0004828232 00000 n 0004828294 00000 n 0004828356 00000 n 0004828418 00000 n 0004828480 00000 n 0004828542 00000 n 0004828604 00000 n 0004828666 00000 n 0004828728 00000 n 0004828790 00000 n 0004828852 00000 n 0004828914 00000 n 0004828976 00000 n 0004829038 00000 n 0004829100 00000 n 0004829162 00000 n 0004829224 00000 n 0004829286 00000 n 0004829348 00000 n 0004829410 00000 n 0004829472 00000 n 0004829534 00000 n 0004829596 00000 n 0004829658 00000 n 0004829720 00000 n 0004829782 00000 n 0004829844 00000 n 0004829906 00000 n 0004829968 00000 n 0004830030 00000 n 0004830092 00000 n 0004830154 00000 n 0004830216 00000 n 0004830278 00000 n 0004830340 00000 n 0004830402 00000 n 0004830464 00000 n 0004830526 00000 n 0004830588 00000 n 0004830650 00000 n 0004830712 00000 n 0004830774 00000 n 0004830836 00000 n 0004830898 00000 n 0004830960 00000 n 0004831022 00000 n 0004831084 00000 n 0004831146 00000 n 0004831208 00000 n 0004831270 00000 n 0004831332 00000 n 0004831394 00000 n 0004831456 00000 n 0004831518 00000 n 0004831580 00000 n 0004831642 00000 n 0004831704 00000 n 0004831766 00000 n 0004831828 00000 n 0004831890 00000 n 0004831952 00000 n 0004832014 00000 n 0004832076 00000 n 0004832138 00000 n 0004832200 00000 n 0004832262 00000 n 0004832324 00000 n 0004832386 00000 n 0004832448 00000 n 0004832510 00000 n 0004832572 00000 n 0004832634 00000 n 0004832696 00000 n 0004832758 00000 n 0004832820 00000 n 0004832882 00000 n 0004832944 00000 n 0004833006 00000 n 0004833068 00000 n 0004833130 00000 n 0004833192 00000 n 0004833254 00000 n 0004833316 00000 n 0004833378 00000 n 0004833440 00000 n 0004833502 00000 n 0004833564 00000 n 0004833626 00000 n 0004833688 00000 n 0004833750 00000 n 0004833812 00000 n 0004833874 00000 n 0004833936 00000 n 0004833998 00000 n 0004834060 00000 n 0004834122 00000 n 0004834184 00000 n 0004834246 00000 n 0004834308 00000 n 0004834370 00000 n 0004834432 00000 n 0004834494 00000 n 0004834556 00000 n 0004834618 00000 n 0004834680 00000 n 0004834742 00000 n 0004834804 00000 n 0004834866 00000 n 0004834928 00000 n 0004834990 00000 n 0004835052 00000 n 0004835114 00000 n 0004835176 00000 n 0004835238 00000 n 0004835300 00000 n 0004835362 00000 n 0004835424 00000 n 0004835486 00000 n 0004835548 00000 n 0004835610 00000 n 0004835672 00000 n 0004835734 00000 n 0004835796 00000 n 0004835858 00000 n 0004835920 00000 n 0004835982 00000 n 0004836044 00000 n 0004836106 00000 n 0004836168 00000 n 0004836230 00000 n 0004836292 00000 n 0004836354 00000 n 0004836416 00000 n 0004836478 00000 n 0004836540 00000 n 0004836602 00000 n 0004836664 00000 n 0004836726 00000 n 0004836788 00000 n 0004836850 00000 n 0004836912 00000 n 0004836974 00000 n 0004837036 00000 n 0004837098 00000 n 0004837160 00000 n 0004837222 00000 n 0004837284 00000 n 0004837346 00000 n 0004837408 00000 n 0004837470 00000 n 0004837532 00000 n 0004837594 00000 n 0004837656 00000 n 0004837718 00000 n 0004837780 00000 n 0004837842 00000 n 0004837904 00000 n 0004837966 00000 n 0004838028 00000 n 0004838090 00000 n 0004838152 00000 n 0004838214 00000 n 0004838276 00000 n 0004838338 00000 n 0004838400 00000 n 0004838462 00000 n 0004838524 00000 n 0004838586 00000 n 0004838648 00000 n 0004838710 00000 n 0004838772 00000 n 0004838834 00000 n 0004838896 00000 n 0004838958 00000 n 0004839020 00000 n 0004839082 00000 n 0004839144 00000 n 0004839206 00000 n 0004839268 00000 n 0004839330 00000 n 0004839392 00000 n 0004839454 00000 n 0004839516 00000 n 0004839578 00000 n 0004839640 00000 n 0004839702 00000 n 0004839764 00000 n 0004839826 00000 n 0004839888 00000 n 0004839950 00000 n 0004840012 00000 n 0004840074 00000 n 0004840136 00000 n 0004840198 00000 n 0004840260 00000 n 0004840322 00000 n 0004840384 00000 n 0004840446 00000 n 0004840508 00000 n 0004840570 00000 n 0004840632 00000 n 0004840694 00000 n 0004840756 00000 n 0004840818 00000 n 0004840880 00000 n 0004840942 00000 n 0004841004 00000 n 0004841066 00000 n 0004841128 00000 n 0004841190 00000 n 0004841252 00000 n 0004841314 00000 n 0004841376 00000 n 0004841438 00000 n 0004841500 00000 n 0004841562 00000 n 0004841624 00000 n 0004841686 00000 n 0004841748 00000 n 0004841810 00000 n 0004841872 00000 n 0004841934 00000 n 0004841996 00000 n 0004842058 00000 n 0004842120 00000 n 0004842182 00000 n 0004842244 00000 n 0004842306 00000 n 0004842368 00000 n 0004842430 00000 n 0004842492 00000 n 0004842554 00000 n 0004842616 00000 n 0004842678 00000 n 0004842740 00000 n 0004842802 00000 n 0004842864 00000 n 0004842926 00000 n 0004842988 00000 n 0004843050 00000 n 0004843112 00000 n 0004843174 00000 n 0004843236 00000 n 0004843298 00000 n 0004843360 00000 n 0004843422 00000 n 0004843484 00000 n 0004843546 00000 n 0004843608 00000 n 0004843670 00000 n 0004843732 00000 n 0004843794 00000 n 0004843856 00000 n 0004843918 00000 n 0004843980 00000 n 0004844042 00000 n 0004844104 00000 n 0004844166 00000 n 0004844228 00000 n 0004844290 00000 n 0004844352 00000 n 0004844414 00000 n 0004844476 00000 n 0004844538 00000 n 0004844600 00000 n 0004844662 00000 n 0004844724 00000 n 0004844786 00000 n 0004844848 00000 n 0004844910 00000 n 0004844972 00000 n 0004845034 00000 n 0004845096 00000 n 0004845158 00000 n 0004845220 00000 n 0004845282 00000 n 0004845344 00000 n 0004845406 00000 n 0004845468 00000 n 0004845530 00000 n 0004845592 00000 n 0004845654 00000 n 0004845716 00000 n 0004845778 00000 n 0004845840 00000 n 0004845902 00000 n 0004845964 00000 n 0004846026 00000 n 0004846088 00000 n 0004846150 00000 n 0004846212 00000 n 0004846274 00000 n 0004846336 00000 n 0004846398 00000 n 0004846460 00000 n 0004846522 00000 n 0004846584 00000 n 0004846646 00000 n 0004846708 00000 n 0004846770 00000 n 0004846832 00000 n 0004846894 00000 n 0004846956 00000 n 0004847018 00000 n 0004847080 00000 n 0004847142 00000 n 0004847204 00000 n 0004847266 00000 n 0004847328 00000 n 0004847390 00000 n 0004847452 00000 n 0004847514 00000 n 0004847576 00000 n 0004847638 00000 n 0004847700 00000 n 0004847762 00000 n 0004847824 00000 n 0004847886 00000 n 0004847948 00000 n 0004848010 00000 n 0004848072 00000 n 0004848134 00000 n 0004848196 00000 n 0004848258 00000 n 0004848320 00000 n 0004848382 00000 n 0004848444 00000 n 0004848506 00000 n 0004848568 00000 n 0004848630 00000 n 0004848692 00000 n 0004848754 00000 n 0004848816 00000 n 0004848878 00000 n 0004848940 00000 n 0004849002 00000 n 0004849064 00000 n 0004849126 00000 n 0004849188 00000 n 0004849250 00000 n 0004849312 00000 n 0004849374 00000 n 0004849436 00000 n 0004849498 00000 n 0004849560 00000 n 0004849622 00000 n 0004849684 00000 n 0004849746 00000 n 0004849808 00000 n 0004849870 00000 n 0004849932 00000 n 0004849994 00000 n 0004850056 00000 n 0004850118 00000 n 0004850180 00000 n 0004850242 00000 n 0004850304 00000 n 0004850366 00000 n 0004850428 00000 n 0004850490 00000 n 0004850552 00000 n 0004850614 00000 n 0004850676 00000 n 0004850738 00000 n 0004850800 00000 n 0004850862 00000 n 0004850924 00000 n 0004850986 00000 n 0004851048 00000 n 0004851110 00000 n 0004851172 00000 n 0004851234 00000 n 0004851296 00000 n 0004851358 00000 n 0004851420 00000 n 0004851482 00000 n 0004851544 00000 n 0004851606 00000 n 0004851668 00000 n 0004851730 00000 n 0004851792 00000 n 0004851854 00000 n 0004851916 00000 n 0004851978 00000 n 0004852040 00000 n 0004852102 00000 n 0004852164 00000 n 0004852226 00000 n 0004852288 00000 n 0004852350 00000 n 0004852412 00000 n 0004852474 00000 n 0004852536 00000 n 0004852598 00000 n 0004852660 00000 n 0004852722 00000 n 0004852784 00000 n 0004852846 00000 n 0004852908 00000 n 0004852970 00000 n 0004853032 00000 n 0004853094 00000 n 0004853156 00000 n 0004853218 00000 n 0004853280 00000 n 0004853342 00000 n 0004853404 00000 n 0004853466 00000 n 0004853528 00000 n 0004853590 00000 n 0004853652 00000 n 0004853714 00000 n 0004853776 00000 n 0004853838 00000 n 0004853900 00000 n 0004853962 00000 n 0004854024 00000 n 0004854086 00000 n 0004854148 00000 n 0004854210 00000 n 0004854272 00000 n 0004854334 00000 n 0004854396 00000 n 0004854458 00000 n 0004854520 00000 n 0004854582 00000 n 0004854644 00000 n 0004854706 00000 n 0004854768 00000 n 0004854830 00000 n 0004854892 00000 n 0004854954 00000 n 0004855016 00000 n 0004855078 00000 n 0004855140 00000 n 0004855202 00000 n 0004855264 00000 n 0004855326 00000 n 0004855388 00000 n 0004855450 00000 n 0004855512 00000 n 0004855574 00000 n 0004855636 00000 n 0004855698 00000 n 0004855760 00000 n 0004855822 00000 n 0004855884 00000 n 0004855946 00000 n 0004856008 00000 n 0004856070 00000 n 0004856132 00000 n 0004856194 00000 n 0004856256 00000 n 0004856318 00000 n 0004856380 00000 n 0004856442 00000 n 0004856504 00000 n 0004856566 00000 n 0004856628 00000 n 0004856690 00000 n 0004856752 00000 n 0004856814 00000 n 0004856876 00000 n 0004856938 00000 n 0004857000 00000 n 0004857062 00000 n 0004857124 00000 n 0004857186 00000 n 0004857248 00000 n 0004857310 00000 n 0004857372 00000 n 0004857434 00000 n 0004857496 00000 n 0004857558 00000 n 0004857620 00000 n 0004857682 00000 n 0004857744 00000 n 0004857806 00000 n 0004857868 00000 n 0004857930 00000 n 0004857992 00000 n 0004858054 00000 n 0004858116 00000 n 0004858178 00000 n 0004858240 00000 n 0004858302 00000 n 0004858364 00000 n 0004858426 00000 n 0004858488 00000 n 0004858550 00000 n 0004858612 00000 n 0004858674 00000 n 0004858736 00000 n 0004858798 00000 n 0004858860 00000 n 0004858922 00000 n 0004858984 00000 n 0004859046 00000 n 0004859108 00000 n 0004859170 00000 n 0004859232 00000 n 0004859294 00000 n 0004859356 00000 n 0004859418 00000 n 0004859480 00000 n 0004859542 00000 n 0004859604 00000 n 0004859666 00000 n 0004859728 00000 n 0004859790 00000 n 0004859852 00000 n 0004859914 00000 n 0004859976 00000 n 0004860038 00000 n 0004860100 00000 n 0004860162 00000 n 0004860224 00000 n 0004860286 00000 n 0004860348 00000 n 0004860410 00000 n 0004860472 00000 n 0004860534 00000 n 0004860596 00000 n 0004860658 00000 n 0004860720 00000 n 0004860782 00000 n 0004860844 00000 n 0004860906 00000 n 0004860968 00000 n 0004861030 00000 n 0004861092 00000 n 0004861154 00000 n 0004861216 00000 n 0004861278 00000 n 0004861340 00000 n 0004861402 00000 n 0004861464 00000 n 0004861526 00000 n 0004861588 00000 n 0004861650 00000 n 0004861712 00000 n 0004861774 00000 n 0004861836 00000 n 0004861898 00000 n 0004861960 00000 n 0004862022 00000 n 0004862084 00000 n 0004862146 00000 n 0004862208 00000 n 0004862270 00000 n 0004862332 00000 n 0004862394 00000 n 0004862456 00000 n 0004862518 00000 n 0004862580 00000 n 0004862642 00000 n 0004862704 00000 n 0004862766 00000 n 0004862828 00000 n 0004862890 00000 n 0004862952 00000 n 0004863014 00000 n 0004863076 00000 n 0004863138 00000 n 0004863200 00000 n 0004863262 00000 n 0004863324 00000 n 0004863386 00000 n 0004863448 00000 n 0004863510 00000 n 0004863572 00000 n 0004863634 00000 n 0004863696 00000 n 0004863758 00000 n 0004863820 00000 n 0004863882 00000 n 0004863944 00000 n 0004864006 00000 n 0004864068 00000 n 0004864130 00000 n 0004864192 00000 n 0004864254 00000 n 0004864316 00000 n 0004864378 00000 n 0004864440 00000 n 0004864502 00000 n 0004864564 00000 n 0004864626 00000 n 0004864688 00000 n 0004864750 00000 n 0004864812 00000 n 0004864874 00000 n 0004864936 00000 n 0004864998 00000 n 0004865060 00000 n 0004865122 00000 n 0004865184 00000 n 0004865246 00000 n 0004865308 00000 n 0004865370 00000 n 0004865432 00000 n 0004865494 00000 n 0004865556 00000 n 0004865618 00000 n 0004865680 00000 n 0004865742 00000 n 0004865804 00000 n 0004865866 00000 n 0004865928 00000 n 0004865990 00000 n 0004866052 00000 n 0004866114 00000 n 0004866176 00000 n 0004866238 00000 n 0004866300 00000 n 0004866362 00000 n 0004866424 00000 n 0004866486 00000 n 0004866548 00000 n 0004866610 00000 n 0004866672 00000 n 0004866734 00000 n 0004866796 00000 n 0004866858 00000 n 0004866920 00000 n 0004866982 00000 n 0004867044 00000 n 0004867106 00000 n 0004867168 00000 n 0004867230 00000 n 0004867292 00000 n 0004867354 00000 n 0004867416 00000 n 0004867478 00000 n 0004867540 00000 n 0004867602 00000 n 0004867664 00000 n 0004867726 00000 n 0004867788 00000 n 0004867850 00000 n 0004867912 00000 n 0004867974 00000 n 0004868036 00000 n 0004868098 00000 n 0004868160 00000 n 0004868222 00000 n 0004868284 00000 n 0004868346 00000 n 0004868408 00000 n 0004868470 00000 n 0004868532 00000 n 0004868594 00000 n 0004868656 00000 n 0004868718 00000 n 0004868780 00000 n 0004868842 00000 n 0004868904 00000 n 0004868966 00000 n 0004869028 00000 n 0004869090 00000 n 0004869152 00000 n 0004869214 00000 n 0004869276 00000 n 0004869338 00000 n 0004869400 00000 n 0004869462 00000 n 0004869524 00000 n 0004869586 00000 n 0004869648 00000 n 0004869710 00000 n 0004869772 00000 n 0004869834 00000 n 0004869896 00000 n 0004869958 00000 n 0004870020 00000 n 0004870082 00000 n 0004870144 00000 n 0004870206 00000 n 0004870268 00000 n 0004870330 00000 n 0004870392 00000 n 0004870454 00000 n 0004870516 00000 n 0004870578 00000 n 0004870640 00000 n 0004870702 00000 n 0004870764 00000 n 0004870826 00000 n 0004870888 00000 n 0004870950 00000 n 0004871012 00000 n 0004871074 00000 n 0004871136 00000 n 0004871198 00000 n 0004871260 00000 n 0004871322 00000 n 0004871384 00000 n 0004871446 00000 n 0004871508 00000 n 0004871570 00000 n 0004871632 00000 n 0004871694 00000 n 0004871756 00000 n 0004871818 00000 n 0004871880 00000 n 0004871942 00000 n 0004872004 00000 n 0004872066 00000 n 0004872128 00000 n 0004872190 00000 n 0004872252 00000 n 0004872314 00000 n 0004872376 00000 n 0004872438 00000 n 0004872500 00000 n 0004872562 00000 n 0004872624 00000 n 0004872686 00000 n 0004872748 00000 n 0004872810 00000 n 0004872872 00000 n 0004872934 00000 n 0004872996 00000 n 0004873058 00000 n 0004873120 00000 n 0004873182 00000 n 0004873244 00000 n 0004873306 00000 n 0004873368 00000 n 0004873430 00000 n 0004873492 00000 n 0004873554 00000 n 0004873616 00000 n 0004873678 00000 n 0004873740 00000 n 0004873802 00000 n 0004873864 00000 n 0004873926 00000 n 0004873988 00000 n 0004874050 00000 n 0004874112 00000 n 0004874174 00000 n 0004874236 00000 n 0004874298 00000 n 0004874360 00000 n 0004874422 00000 n 0004874484 00000 n 0004874546 00000 n 0004874608 00000 n 0004874670 00000 n 0004874732 00000 n 0004874794 00000 n 0004874856 00000 n 0004874918 00000 n 0004874980 00000 n 0004875042 00000 n 0004875104 00000 n 0004875166 00000 n 0004875228 00000 n 0004875290 00000 n 0004875352 00000 n 0004875414 00000 n 0004875476 00000 n 0004875538 00000 n 0004875600 00000 n 0004875662 00000 n 0004875724 00000 n 0004875786 00000 n 0004875848 00000 n 0004875910 00000 n 0004875972 00000 n 0004876034 00000 n 0004876096 00000 n 0004876158 00000 n 0004876220 00000 n 0004876282 00000 n 0004876344 00000 n 0004876406 00000 n 0004876468 00000 n 0004876530 00000 n 0004876592 00000 n 0004876654 00000 n 0004876716 00000 n 0004876778 00000 n 0004876840 00000 n 0004876902 00000 n 0004876964 00000 n 0004877026 00000 n 0004877088 00000 n 0004877150 00000 n 0004877212 00000 n 0004877274 00000 n 0004877336 00000 n 0004877398 00000 n 0004877460 00000 n 0004877522 00000 n 0004877584 00000 n 0004877646 00000 n 0004877708 00000 n 0004877770 00000 n 0004877832 00000 n 0004877894 00000 n 0004877956 00000 n 0004878018 00000 n 0004878080 00000 n 0004878142 00000 n 0004878204 00000 n 0004878266 00000 n 0004878328 00000 n 0004878390 00000 n 0004878452 00000 n 0004878514 00000 n 0004878576 00000 n 0004878638 00000 n 0004878700 00000 n 0004878762 00000 n 0004878824 00000 n 0004878886 00000 n 0004878948 00000 n 0004879010 00000 n 0004879072 00000 n 0004879134 00000 n 0004879196 00000 n 0004879258 00000 n 0004879320 00000 n 0004879382 00000 n 0004879444 00000 n 0004879506 00000 n 0004879568 00000 n 0004879630 00000 n 0004879692 00000 n 0004879754 00000 n 0004879816 00000 n 0004879878 00000 n 0004879940 00000 n 0004880002 00000 n 0004880064 00000 n 0004880126 00000 n 0004880188 00000 n 0004880250 00000 n 0004880312 00000 n 0004880374 00000 n 0004880436 00000 n 0004880498 00000 n 0004880560 00000 n 0004880622 00000 n 0004880684 00000 n 0004880746 00000 n 0004880808 00000 n 0004880870 00000 n 0004880932 00000 n 0004880994 00000 n 0004881056 00000 n 0004881118 00000 n 0004881180 00000 n 0004881242 00000 n 0004881304 00000 n 0004881366 00000 n 0004881428 00000 n 0004881490 00000 n 0004881552 00000 n 0004881614 00000 n 0004881676 00000 n 0004881738 00000 n 0004881800 00000 n 0004881862 00000 n 0004881924 00000 n 0004881986 00000 n 0004882048 00000 n 0004882110 00000 n 0004882172 00000 n 0004882234 00000 n 0004882296 00000 n 0004882358 00000 n 0004882420 00000 n 0004882482 00000 n 0004882544 00000 n 0004882606 00000 n 0004882668 00000 n 0004882730 00000 n 0004882792 00000 n 0004882854 00000 n 0004882916 00000 n 0004882978 00000 n 0004883040 00000 n 0004883102 00000 n 0004883164 00000 n 0004883226 00000 n 0004883288 00000 n 0004883350 00000 n 0004883412 00000 n 0004883474 00000 n 0004883536 00000 n 0004883598 00000 n 0004883660 00000 n 0004883722 00000 n 0004883784 00000 n 0004883846 00000 n 0004883908 00000 n 0004883970 00000 n 0004884032 00000 n 0004884094 00000 n 0004884156 00000 n 0004884218 00000 n 0004884280 00000 n 0004884342 00000 n 0004884404 00000 n 0004884466 00000 n 0004884528 00000 n 0004884590 00000 n 0004884652 00000 n 0004884714 00000 n 0004884776 00000 n 0004884838 00000 n 0004884900 00000 n 0004884962 00000 n 0004885024 00000 n 0004885086 00000 n 0004885148 00000 n 0004885210 00000 n 0004885272 00000 n 0004885334 00000 n 0004885396 00000 n 0004885458 00000 n 0004885520 00000 n 0004885582 00000 n 0004885644 00000 n 0004885706 00000 n 0004885768 00000 n 0004885830 00000 n 0004885892 00000 n 0004885954 00000 n 0004886016 00000 n 0004886078 00000 n 0004886140 00000 n 0004886202 00000 n 0004886264 00000 n 0004886326 00000 n 0004886388 00000 n 0004886450 00000 n 0004886512 00000 n 0004886574 00000 n 0004886636 00000 n 0004886698 00000 n 0004886760 00000 n 0004886822 00000 n 0004886884 00000 n 0004886946 00000 n 0004887008 00000 n 0004887070 00000 n 0004887132 00000 n 0004887194 00000 n 0004887256 00000 n 0004887318 00000 n 0004887380 00000 n 0004887442 00000 n 0004887504 00000 n 0004887566 00000 n 0004887628 00000 n 0004887690 00000 n 0004887752 00000 n 0004887814 00000 n 0004887876 00000 n 0004887938 00000 n 0004888000 00000 n 0004888062 00000 n 0004888124 00000 n 0004888186 00000 n 0004888248 00000 n 0004888310 00000 n 0004888372 00000 n 0004888434 00000 n 0004888496 00000 n 0004888558 00000 n 0004888620 00000 n 0004888682 00000 n 0004888744 00000 n 0004888806 00000 n 0004888868 00000 n 0004888930 00000 n 0004888992 00000 n 0004889054 00000 n 0004889116 00000 n 0004889178 00000 n 0004889240 00000 n 0004889302 00000 n 0004889364 00000 n 0004889426 00000 n 0004889488 00000 n 0004889550 00000 n 0004889612 00000 n 0004889674 00000 n 0004889736 00000 n 0004889798 00000 n 0004889860 00000 n 0004889922 00000 n 0004889984 00000 n 0004890046 00000 n 0004890108 00000 n 0004890170 00000 n 0004890232 00000 n 0004890294 00000 n 0004890356 00000 n 0004890418 00000 n 0004890480 00000 n 0004890542 00000 n 0004890604 00000 n 0004890666 00000 n 0004890728 00000 n 0004890790 00000 n 0004890852 00000 n 0004890914 00000 n 0004890976 00000 n 0004891038 00000 n 0004891100 00000 n 0004891162 00000 n 0004891224 00000 n 0004891286 00000 n 0004891348 00000 n 0004891410 00000 n 0004891472 00000 n 0004891534 00000 n 0004891596 00000 n 0004891658 00000 n 0004891720 00000 n 0004891782 00000 n 0004891844 00000 n 0004891906 00000 n 0004891968 00000 n 0004892030 00000 n 0004892092 00000 n 0004892154 00000 n 0004892216 00000 n 0004892278 00000 n 0004892340 00000 n 0004892402 00000 n 0004892464 00000 n 0004892526 00000 n 0004892588 00000 n 0004892650 00000 n 0004892712 00000 n 0004892774 00000 n 0004892836 00000 n 0004892898 00000 n 0004892960 00000 n 0004893022 00000 n 0004893084 00000 n 0004893146 00000 n 0004893208 00000 n 0004893270 00000 n 0004893332 00000 n 0004893394 00000 n 0004893456 00000 n 0004893518 00000 n 0004893580 00000 n 0004893642 00000 n 0004893704 00000 n 0004893766 00000 n 0004893828 00000 n 0004893890 00000 n 0004893952 00000 n 0004894014 00000 n 0004894076 00000 n 0004894138 00000 n 0004894200 00000 n 0004894262 00000 n 0004894324 00000 n 0004894386 00000 n 0004894448 00000 n 0004894510 00000 n 0004894572 00000 n 0004894634 00000 n 0004894696 00000 n 0004894758 00000 n 0004894820 00000 n 0004894882 00000 n 0004894944 00000 n 0004895006 00000 n 0004895068 00000 n 0004895130 00000 n 0004895192 00000 n 0004895254 00000 n 0004895316 00000 n 0004895378 00000 n 0004895440 00000 n 0004895502 00000 n 0004895564 00000 n 0004895626 00000 n 0004895688 00000 n 0004895750 00000 n 0004895812 00000 n 0004895874 00000 n 0004895936 00000 n 0004895998 00000 n 0004896060 00000 n 0004896122 00000 n 0004896184 00000 n 0004896246 00000 n 0004896308 00000 n 0004896370 00000 n 0004896432 00000 n 0004896494 00000 n 0004896556 00000 n 0004896618 00000 n 0004896680 00000 n 0004896742 00000 n 0004896804 00000 n 0004896866 00000 n 0004896928 00000 n 0004896990 00000 n 0004897052 00000 n 0004897114 00000 n 0004897176 00000 n 0004897238 00000 n 0004897300 00000 n 0004897362 00000 n 0004897424 00000 n 0004897486 00000 n 0004897548 00000 n 0004897610 00000 n 0004897672 00000 n 0004897734 00000 n 0004897796 00000 n 0004897858 00000 n 0004897920 00000 n 0004897982 00000 n 0004898044 00000 n 0004898106 00000 n 0004898168 00000 n 0004898230 00000 n 0004898292 00000 n 0004898354 00000 n 0004898416 00000 n 0004898478 00000 n 0004898540 00000 n 0004898602 00000 n 0004898664 00000 n 0004898726 00000 n 0004898788 00000 n 0004898850 00000 n 0004898912 00000 n 0004898974 00000 n 0004899036 00000 n 0004899098 00000 n 0004899160 00000 n 0004899222 00000 n 0004899284 00000 n 0004899346 00000 n 0004899408 00000 n 0004899470 00000 n 0004899532 00000 n 0004899594 00000 n 0004899656 00000 n 0004899718 00000 n 0004899780 00000 n 0004899842 00000 n 0004899904 00000 n 0004899966 00000 n 0004900028 00000 n 0004900090 00000 n 0004900152 00000 n 0004900214 00000 n 0004900276 00000 n 0004900338 00000 n 0004900400 00000 n 0004900462 00000 n 0004900524 00000 n 0004900586 00000 n 0004900648 00000 n 0004900710 00000 n 0004900772 00000 n 0004900834 00000 n 0004900896 00000 n 0004900958 00000 n 0004901020 00000 n 0004901082 00000 n 0004901144 00000 n 0004901206 00000 n 0004901268 00000 n 0004901330 00000 n 0004901392 00000 n 0004901454 00000 n 0004901516 00000 n 0004901578 00000 n 0004901640 00000 n 0004901702 00000 n 0004901764 00000 n 0004901826 00000 n 0004901888 00000 n 0004901950 00000 n 0004902012 00000 n 0004902074 00000 n 0004902136 00000 n 0004902198 00000 n 0004902260 00000 n 0004902322 00000 n 0004902384 00000 n 0004902446 00000 n 0004902508 00000 n 0004902570 00000 n 0004902632 00000 n 0004902694 00000 n 0004902756 00000 n 0004902818 00000 n 0004902880 00000 n 0004902942 00000 n 0004903004 00000 n 0004903066 00000 n 0004903128 00000 n 0004903190 00000 n 0004903252 00000 n 0004903314 00000 n 0004903376 00000 n 0004903438 00000 n 0004903500 00000 n 0004903562 00000 n 0004903624 00000 n 0004903686 00000 n 0004903748 00000 n 0004903810 00000 n 0004903872 00000 n 0004903934 00000 n 0004903996 00000 n 0004904058 00000 n 0004904120 00000 n 0004904182 00000 n 0004904244 00000 n 0004904306 00000 n 0004904368 00000 n 0004904430 00000 n 0004904492 00000 n 0004904554 00000 n 0004904616 00000 n 0004904678 00000 n 0004904740 00000 n 0004904802 00000 n 0004904864 00000 n 0004904926 00000 n 0004904988 00000 n 0004905050 00000 n 0004905112 00000 n 0004905174 00000 n 0004905236 00000 n 0004905298 00000 n 0004905360 00000 n 0004905422 00000 n 0004905484 00000 n 0004905546 00000 n 0004905608 00000 n 0004905670 00000 n 0004905732 00000 n 0004905794 00000 n 0004905856 00000 n 0004905918 00000 n 0004905980 00000 n 0004906042 00000 n 0004906104 00000 n 0004906166 00000 n 0004906228 00000 n 0004906290 00000 n 0004906352 00000 n 0004906414 00000 n 0004906476 00000 n 0004906538 00000 n 0004906600 00000 n 0004906662 00000 n 0004906724 00000 n 0004906786 00000 n 0004906848 00000 n 0004906910 00000 n 0004906972 00000 n 0004907034 00000 n 0004907096 00000 n 0004907158 00000 n 0004907220 00000 n 0004907282 00000 n 0004907344 00000 n 0004907406 00000 n 0004907468 00000 n 0004907530 00000 n 0004907592 00000 n 0004907654 00000 n 0004907716 00000 n 0004907778 00000 n 0004907840 00000 n 0004907902 00000 n 0004907964 00000 n 0004908026 00000 n 0004908088 00000 n 0004908150 00000 n 0004908212 00000 n 0004908274 00000 n 0004908336 00000 n 0004908398 00000 n 0004908460 00000 n 0004908522 00000 n 0004908584 00000 n 0004908646 00000 n 0004908708 00000 n 0004908770 00000 n 0004908832 00000 n 0004908894 00000 n 0004908956 00000 n 0004909018 00000 n 0004909080 00000 n 0004909142 00000 n 0004909204 00000 n 0004909266 00000 n 0004909328 00000 n 0004909390 00000 n 0004909452 00000 n 0004909514 00000 n 0004909576 00000 n 0004909638 00000 n 0004909700 00000 n 0004909762 00000 n 0004909824 00000 n 0004909886 00000 n 0004909948 00000 n 0004910010 00000 n 0004910072 00000 n 0004910134 00000 n 0004910196 00000 n 0004910258 00000 n 0004910320 00000 n 0004910382 00000 n 0004910444 00000 n 0004910506 00000 n 0004910568 00000 n 0004910630 00000 n 0004910692 00000 n 0004910754 00000 n 0004910816 00000 n 0004910878 00000 n 0004910940 00000 n 0004911002 00000 n 0004911064 00000 n 0004911126 00000 n 0004911188 00000 n 0004911250 00000 n 0004911312 00000 n 0004911374 00000 n 0004911436 00000 n 0004911498 00000 n 0004911560 00000 n 0004911622 00000 n 0004911684 00000 n 0004911746 00000 n 0004911808 00000 n 0004911870 00000 n 0004911932 00000 n 0004911994 00000 n 0004912056 00000 n 0004912118 00000 n 0004912180 00000 n 0004912242 00000 n 0004912304 00000 n 0004912366 00000 n 0004912428 00000 n 0004912490 00000 n 0004912552 00000 n 0004912614 00000 n 0004912676 00000 n 0004912738 00000 n 0004912800 00000 n 0004912862 00000 n 0004912924 00000 n 0004912986 00000 n 0004913048 00000 n 0004913110 00000 n 0004913172 00000 n 0004913234 00000 n 0004913296 00000 n 0004913358 00000 n 0004913420 00000 n 0004913482 00000 n 0004913544 00000 n 0004913606 00000 n 0004913668 00000 n 0004913730 00000 n 0004913792 00000 n 0004913854 00000 n 0004913916 00000 n 0004913978 00000 n 0004914040 00000 n 0004914102 00000 n 0004914164 00000 n 0004914226 00000 n 0004914290 00000 n 0004915541 00000 n 0004917111 00000 n 0004918682 00000 n 0004920253 00000 n 0004921822 00000 n 0004923392 00000 n 0004924963 00000 n 0004926516 00000 n 0004926665 00000 n 0004928236 00000 n 0004929807 00000 n 0004931337 00000 n 0004932842 00000 n 0004934347 00000 n 0004935852 00000 n 0004937357 00000 n 0004938862 00000 n 0004940367 00000 n 0004941872 00000 n 0004943377 00000 n 0004944882 00000 n 0004946387 00000 n 0004947891 00000 n 0004949413 00000 n 0004950984 00000 n 0004952555 00000 n 0004954142 00000 n 0004955845 00000 n 0004957548 00000 n 0004959251 00000 n 0004960954 00000 n 0004962657 00000 n 0004964360 00000 n 0004966063 00000 n 0004967766 00000 n 0004969469 00000 n 0004971172 00000 n 0004972875 00000 n 0004974565 00000 n 0004976268 00000 n 0004977971 00000 n 0004979674 00000 n 0004981377 00000 n 0004983076 00000 n 0004984713 00000 n 0004986350 00000 n 0004987987 00000 n 0004989624 00000 n 0004991261 00000 n 0004992898 00000 n 0004994535 00000 n 0004996172 00000 n 0004997809 00000 n 0004999446 00000 n 0005001083 00000 n 0005002720 00000 n 0005004357 00000 n 0005005994 00000 n 0005007631 00000 n 0005009268 00000 n 0005010905 00000 n 0005012541 00000 n 0005014178 00000 n 0005016115 00000 n 0005020376 00000 n 0005024411 00000 n 0005027910 00000 n 0005030910 00000 n 0005033536 00000 n 0005034672 00000 n 0005035768 00000 n 0005035998 00000 n 0005036685 00000 n 0005037161 00000 n 0005038664 00000 n 0005038823 00000 n 0005039007 00000 n 0005039170 00000 n 0005039333 00000 n 0005039496 00000 n 0005039659 00000 n 0005039822 00000 n 0005039985 00000 n 0005040148 00000 n 0005040311 00000 n 0005040474 00000 n 0005040588 00000 n 0005040751 00000 n 0005040935 00000 n 0005041098 00000 n 0005041261 00000 n 0005041424 00000 n 0005041587 00000 n 0005041751 00000 n 0005041924 00000 n 0005042097 00000 n 0005042270 00000 n 0005042443 00000 n 0005042616 00000 n 0005042800 00000 n 0005042973 00000 n 0005043146 00000 n 0005043319 00000 n 0005043492 00000 n 0005043665 00000 n 0005043838 00000 n 0005044011 00000 n 0005044184 00000 n 0005044357 00000 n 0005044530 00000 n 0005044714 00000 n 0005044887 00000 n 0005045060 00000 n 0005045233 00000 n 0005045406 00000 n 0005045579 00000 n 0005045752 00000 n 0005045925 00000 n 0005046098 00000 n 0005046271 00000 n 0005046444 00000 n 0005046546 00000 n 0005046700 00000 n 0005046767 00000 n 0005046793 00000 n 0005046851 00000 n 0005046896 00000 n 0005046980 00000 n 0005047044 00000 n 0005047108 00000 n 0005047150 00000 n 0005047236 00000 n trailer /Size 15967 /ID[<ea76d00e931f7e00128c88b3b5ec59ba><996d3dfebb2fe58e208c6aaf54a3ef62>] startxref %%EOF %%EOF
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\docs\SpilV1.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation SPIL: Stored Procedure Interface Language Title _PID_HLINKSSPIL: Stored Procedure Interface Language Murali Krishnan Muralik-Arch-Writeup.dot Murali Krishnan Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags PersonName urn:schemas:contacts GivenName urn:schemas:contacts urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags Month ={X+,j-j-j- LB[O{ qTed) qTed) "U"mfv !/:a4 i6b*Gk mfV$L ~_kyW bX"OZPackage Package PackageSpil.xsd C:\msnia\private\server\protos\SPIL\SpilRun\SPIL.xsd C:\msnia\private\server\protos\SPIL\SpilRun\SPIL.xsd <?xml version="1.0" encoding="utf-8" ?> <xs:schema id="SPIL" targetNamespace="http://schemas.microsoft.com/subscriptions/spil" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/subscriptions/spil" xmlns:mstns="http://schemas.microsoft.com/subscriptions/spil" xmlns:xs="http://www.w3.org/2001/XMLSchema">     <xs:annotation>         <xs:documentation>     SPIL: Contains the schema definition for Stored Procedure Interface Language.     SPIL defines the interface contract for SQL Stored Procedures. SPIL specifies      the interace independent of the high level programming language. Specific      tools will be used to convert this interface specification into runtime       constructs suited for the specific language.         </xs:documentation>     </xs:annotation>     <!-- ######################################################################## -->     <!-- TOP LEVEL ELEMENTS -->     <xs:element name="procedureGroup" type="mstns:ProcedureGroup" />     <!-- ######################################################################## -->     <!-- TODO: Identify and import pre-defined SQL types for use within the schema -->     <xs:simpleType name="SqlDataType">         <xs:annotation>             <xs:documentation>             SQL  data type specifies standard type for use with SQL parameters.             In future this will be repalced from plain string representation into             a rich type for the SQL data types as applicable.             </xs:documentation>         </xs:annotation>         <xs:restriction base="xs:string">             <xs:pattern value="L+(\(N+\))?" />         </xs:restriction>     </xs:simpleType>     <!-- ######################################################################## -->     <xs:complexType name="ProcedureGroup">         <xs:annotation>             <xs:documentation>             Identifies the list of procedures that are organized together to              represent a logical containment.             </xs:documentation>         </xs:annotation>         <xs:sequence>             <xs:element name="description" type="xs:string" minOccurs="0" />             <xs:element name="binding" type="mstns:ProcedureBinding" />             <xs:element name="procedure" type="mstns:ProcedureDefinition" minOccurs="0" maxOccurs="unbounded" />             <xs:element name="parameter" type="mstns:ParameterDefinition" minOccurs="0" maxOccurs="unbounded" />         </xs:sequence>         <xs:attribute name="name" type="xs:string" use="required" />     </xs:complexType>     <xs:complexType name="ProcedureBinding">         <xs:annotation>             <xs:documentation>             Identifies the binding data for the stored procedures.             In this section one references the connection string required to access the database,              as well as any high level language binding data required - eg: Namespaces.             </xs:documentation>         </xs:annotation>         <xs:sequence>             <xs:element name="connectionString" type="xs:string" minOccurs="0">                 <xs:annotation>                     <xs:documentation>Connection string data for talking to the                     database on which the stored procedures should be executed.                     </xs:documentation>                 </xs:annotation>             </xs:element>             <xs:element name="appName" type="xs:string" minOccurs="0">                 <xs:annotation>                     <xs:documentation>Specifies the name of the application                      that has partitioned data stored using WebStore.                     This parameter acts as the logical name to find one of many                      physical servers hosting the relevant data (and stored procedures)                     </xs:documentation>                 </xs:annotation>             </xs:element>             <xs:element name="namespace" type="xs:string">                 <xs:annotation>                     <xs:documentation>Namespace hint for the high-level classes                      exposed. This is useful to scope the method calls from                      high level languages (eg: C#/C++). </xs:documentation>                 </xs:annotation>             </xs:element>         </xs:sequence>     </xs:complexType>     <xs:complexType name="ParameterDefinitionBase" abstract="true">         <xs:annotation>             <xs:documentation>             Defines the base type for parameter definitions.             </xs:documentation>         </xs:annotation>     </xs:complexType>     <xs:complexType name="ParameterDefinition">         <xs:annotation>             <xs:documentation>             Defines a parameter for use in the interface.              Parameter is an input/output data element passed to the stored procedure interface.             name = friendly name for the parameter                  - usually exposed as a property in the high level parameters class                     spname = name for the parameter when binding to the stored procedure call             type   = SQL type for the parameter - internally spiller will make runtime-class mapping.             default = default value if any for this parameter                          TODO: By default only input parameters are supported. Extend it for output parameters later.             </xs:documentation>         </xs:annotation>         <xs:complexContent>             <xs:extension base="mstns:ParameterDefinitionBase">                 <xs:attribute name="name" type="xs:string" use="required" />                 <xs:attribute name="spname" type="xs:string" use="required" />                 <xs:attribute name="type" type="mstns:SqlDataType" use="required" />                 <xs:attribute name="default" type="xs:SqlDataType" use="optional" />             </xs:extension>         </xs:complexContent>     </xs:complexType>     <xs:complexType name="ParameterReference">         <xs:annotation>             <xs:documentation>             Defines a reference to a pre-defined parameter; helps with reusing the same definition.             ref = reference to a pred-defined ParameterDefinition item.             </xs:documentation>         </xs:annotation>         <xs:complexContent>             <xs:extension base="mstns:ParameterDefinitionBase">                 <xs:attribute name="ref" type="xs:string" use="required" />             </xs:extension>         </xs:complexContent>     </xs:complexType>     <xs:complexType name="ProcedureDefinition">         <xs:annotation>             <xs:documentation>             Defines a procedure interface including parameters.             name = friendly name for the parameter                  - usually exposed as the class name for parameters the procedure call.             spname = name for the procedure within the database             </xs:documentation>         </xs:annotation>         <xs:choice minOccurs="0" maxOccurs="unbounded">             <xs:element name="param" type="mstns:ParameterDefinition" />             <xs:element name="paramRef" type="mstns:ParameterReference" />         </xs:choice>         <xs:attribute name="name" type="xs:string" use="required" />         <xs:attribute name="spname" type="xs:string" use="required" />     </xs:complexType>     <!-- Revision History:     Aug 5, 2002 - MuraliK   - Created the v1 schema Todo:     - Identify pre-defined schema namespace for SQL types and use the same     - (medium) Get investigation/approval from SQL programmability team.     - (lowpri) Extend the parameter definition for output parameters as well.     - (lowpri) Investigate if we can use a derivative of WSDL for this binding </xs:schema>Package Package PackageAuthorization1.spil.xml C:\msnia\private\server\protos\SPIL\SpilRun\AUTHOR~1.XML C:\msnia\private\server\protos\SPIL\SpilRun\AUTHOR~1.XML <?xml version="1.0" encoding="utf-8" ?>  <spil:procedureGroup name="SPSAuthorization" xmlns:spil="http://schemas.microsoft.com/subscriptions/spil" >  <spil:description>   Stored Procedure definitions for Authorization database  </spil:description>  <!-- generic metadata information required to access this database -->  <spil:binding>     <spil:connectionString>Integrated Security=SSPI;Initial Catalog=authorization;persist security info=False</spil:connectionString>     <spil:appName>AuthorizationApp</spil:appName>     <!-- indicates the default namespace to use for the generated stub classes -->        <spil:namespace>Microsoft.Subscriptions.DataStores.Authorization</spil:namespace>  </spil:binding>  <!--     spil:Procedure defines a unique stored procedure.    Only input parameters (pass by value as demanded by SQL are specified.    No information on the return parameters are supplied. In future we can structure these as well.    Order of parameters should match the order of occurence in Stored Procedure definition.    Spiller Notes:       Each parameter specified will become a member of the structure in the generated output  <spil:procedure name="GetPartnerInfo" spname="spau_getpartnerinfo">     <spil:param name="PartnerAccountName"   spname="vc_partner_acct_name"   type="varchar(64)"/>     <spil:param name="BillableAccountId"    spname="i_billable_acct_id"     type="bigint"/>  </spil:procedure>  <spil:procedure name="AddPartnerType" spname="spau_addpartnertype">     <spil:param name="OfferingDocument"     spname="doc"        type="varchar(8000)"/>     <spil:param name="PartnerId"            spname="partnerid"  type="int"/>  </spil:procedure>   <!--     spil:ParamDefinition defines a unique parameter that may be reused         during the parameter definitions for a procedure.      Think of this as a type definition in the normal programming language     Doing just one definition and reusing the definition reduces clutter      and promotes high degree of reuse.  -->     <spil:parameter name="BillableAccountId"     spname="i_billable_acct_id"     type="bigint" />  <spil:parameter name="PassportIdHigh"        spname="i_pport_id_high"        type="int"  />  <spil:parameter name="PassportIdLow"         spname="i_pport_id_low"         type="int"  />  <spil:procedure name="IsAccountAdmin" spname="spau_isaccountadmin">     <!-- note how definitions are reused here -->     <spil:paramRef ref="PassportIdHigh"/>       <spil:paramRef ref="PassportIdLow"/>       <spil:paramRef ref="BillableAccountId"/>    </spil:procedure>  <spil:procedure name="AddAuthorizationInstance" spname="spau_addauthinstance">     <spil:paramRef  ref="BillableAccountId"/>     <spil:param     name="SubscriptionRefId"     spname="si_subscription_ref_id"     type="smallint"/>     <spil:param     name="ServiceRefId"          spname="si_service_ref_id"          type="smallint"/>     <spil:paramRef  ref="PassportIdHigh"/>       <spil:paramRef  ref="PassportIdLow"/>      <spil:param     name="BaseRoleName"          spname="vc_base_role_name"          type="varchar(64)"/>     <spil:param     name="MemberName"            spname="vc_member_name"             type="varchar(129)"     default="NULL"/>     <spil:param     name="NodeType"              spname="vc_node_type"               type="varchar(64)"      default="NULL"/>     <spil:param     name="ServiceName"           spname="vc_service_name"            type="varchar(64)"      default="NULL"/>  </spil:procedure> <!--   Version History:    Aug 1, 2002       MuraliK        Created v1 of the spil definition file for Authorization. </spil:procedureGroup>Package Package Packagemap1.spil.xml C:\msnia\private\server\protos\SPIL\TESTFI~1\MAP1SP~1.XML C:\msnia\private\server\protos\SPIL\TESTFI~1\MAP1SP~1.XML <?xml version="1.0" encoding="utf-8"?> <spil:procedureGroup name="SPSAuthorization" xmlns:spil="http://schemas.microsoft.com/subscriptions/spil">   <spil:description>   Stored Procedure definitions for Map Database  </spil:description>   <!-- generic metadata information required to access this database -->   <spil:binding>     <spil:appName>AuthorizationApp</spil:appName>     <spil:connectionString>Integrated Security=SSPI;Initial Catalog=map;persist security info=False</spil:connectionString>     <!-- indicates the default namespace to use for the generated stub classes -->     <spil:namespace>Microsoft.Subscriptions.DataStores.MapDB</spil:namespace>   </spil:binding>   <!-- enumerate all stored procedures that need reverse engineering -->   <spil:procedure spname="spm_AddAccount" name="AddAccount">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />     <spil:param name="MemberName" spname="vc_member_name" type="varchar" />     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId" spname="si_service_ref_id" type="smallint" />     <spil:param name="Guid" spname="tracking_guid" type="uniqueidentifier" />   </spil:procedure>   <spil:procedure spname="spm_AddBinary" name="AddBinary">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="EncryptedConcatNumber" spname="vc_encrypted_concat_number" type="varchar" />     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId" spname="si_service_ref_id" type="smallint" />     <spil:param name="PaymentMethodTypeDesc" spname="nvc_payment_method_type_desc" type="nvarchar" />     <spil:param name="PaymentMethodTypeId" spname="ti_payment_method_type_id" type="tinyint" />     <spil:param name="PaymentMethodId" spname="i_payment_method_id" type="int" />     <spil:param name="IsMigration" spname="b_is_migration" type="bit" />   </spil:procedure>   <spil:procedure spname="spm_AddId" name="AddId">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId" spname="si_service_ref_id" type="smallint" />     <spil:param name="Guid" spname="tracking_guid" type="uniqueidentifier" />   </spil:procedure>   <spil:procedure spname="spm_AddPassportToName" name="AddPassportToName">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />     <spil:param name="MemberName" spname="vc_member_name" type="varchar" />   </spil:procedure>   <spil:procedure spname="spm_AddString" name="AddString">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="StringKey" spname="vc_string_key" type="varchar" />     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId" spname="si_service_ref_id" type="smallint" />   </spil:procedure>   <spil:procedure spname="spm_BatchAddId" name="BatchAddId">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId1" spname="si_service_ref_id1" type="smallint" />     <spil:param name="ServiceRefId2" spname="si_service_ref_id2" type="smallint" />     <spil:param name="ServiceRefId3" spname="si_service_ref_id3" type="smallint" />     <spil:param name="ServiceRefId4" spname="si_service_ref_id4" type="smallint" />     <spil:param name="ServiceRefId5" spname="si_service_ref_id5" type="smallint" />     <spil:param name="ServiceRefId6" spname="si_service_ref_id6" type="smallint" />     <spil:param name="ServiceRefId7" spname="si_service_ref_id7" type="smallint" />     <spil:param name="ServiceRefId8" spname="si_service_ref_id8" type="smallint" />     <spil:param name="ServiceRefId9" spname="si_service_ref_id9" type="smallint" />     <spil:param name="ServiceRefId10" spname="si_service_ref_id10" type="smallint" />     <spil:param name="ServiceRefId11" spname="si_service_ref_id11" type="smallint" />     <spil:param name="ServiceRefId12" spname="si_service_ref_id12" type="smallint" />     <spil:param name="ServiceRefId13" spname="si_service_ref_id13" type="smallint" />     <spil:param name="ServiceRefId14" spname="si_service_ref_id14" type="smallint" />     <spil:param name="ServiceRefId15" spname="si_service_ref_id15" type="smallint" />     <spil:param name="ServiceRefId16" spname="si_service_ref_id16" type="smallint" />     <spil:param name="ServiceRefId17" spname="si_service_ref_id17" type="smallint" />     <spil:param name="ServiceRefId18" spname="si_service_ref_id18" type="smallint" />     <spil:param name="ServiceRefId19" spname="si_service_ref_id19" type="smallint" />     <spil:param name="ServiceRefId20" spname="si_service_ref_id20" type="smallint" />   </spil:procedure>   <spil:procedure spname="spm_BatchRemoveId" name="BatchRemoveId">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId1" spname="si_service_ref_id1" type="smallint" />     <spil:param name="ServiceRefId2" spname="si_service_ref_id2" type="smallint" />     <spil:param name="ServiceRefId3" spname="si_service_ref_id3" type="smallint" />     <spil:param name="ServiceRefId4" spname="si_service_ref_id4" type="smallint" />     <spil:param name="ServiceRefId5" spname="si_service_ref_id5" type="smallint" />     <spil:param name="ServiceRefId6" spname="si_service_ref_id6" type="smallint" />     <spil:param name="ServiceRefId7" spname="si_service_ref_id7" type="smallint" />     <spil:param name="ServiceRefId8" spname="si_service_ref_id8" type="smallint" />     <spil:param name="ServiceRefId9" spname="si_service_ref_id9" type="smallint" />     <spil:param name="ServiceRefId10" spname="si_service_ref_id10" type="smallint" />     <spil:param name="ServiceRefId11" spname="si_service_ref_id11" type="smallint" />     <spil:param name="ServiceRefId12" spname="si_service_ref_id12" type="smallint" />     <spil:param name="ServiceRefId13" spname="si_service_ref_id13" type="smallint" />     <spil:param name="ServiceRefId14" spname="si_service_ref_id14" type="smallint" />     <spil:param name="ServiceRefId15" spname="si_service_ref_id15" type="smallint" />     <spil:param name="ServiceRefId16" spname="si_service_ref_id16" type="smallint" />     <spil:param name="ServiceRefId17" spname="si_service_ref_id17" type="smallint" />     <spil:param name="ServiceRefId18" spname="si_service_ref_id18" type="smallint" />     <spil:param name="ServiceRefId19" spname="si_service_ref_id19" type="smallint" />     <spil:param name="ServiceRefId20" spname="si_service_ref_id20" type="smallint" />   </spil:procedure>   <spil:procedure spname="spm_FindBinary" name="FindBinary">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="EncryptedConcatNumber" spname="vc_encrypted_concat_number" type="varchar" />     <spil:param name="PaymentMethodTypeId" spname="ti_payment_method_type_id" type="tinyint" />     <spil:param name="MaxResults" spname="i_max_results" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId" name="FindId">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId_AllAccounts" name="FindIdAllAccounts">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId_AllSI" name="FindIdAllSI">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId_AllSI_AllAccounts" name="FindIdAllSIAllAccounts">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId_AllSubs" name="FindIdAllSubs">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId_ZeroSi" name="FindIdZeroSi">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindId_ZeroSubSi" name="FindIdZeroSubSi">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />     <spil:param name="MaxResults" spname="i_max_results" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindNameToPassport" name="FindNameToPassport">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindPassportsByOID" name="FindPassportsByOID">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId" spname="si_service_ref_id" type="smallint" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_FindPassportToName" name="FindPassportToName">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="MemberName" spname="vc_member_name" type="varchar" />   </spil:procedure>   <spil:procedure spname="spm_FindString" name="FindString">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="StringKey" spname="vc_string_key" type="varchar" />     <spil:param name="ScopeId" spname="i_scope_id" type="int" />   </spil:procedure>   <spil:procedure spname="spm_InternalAddId" name="InternalAddId">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="BillableAcctId" spname="i_billable_acct_id" type="bigint" />     <spil:param name="SubscriptionRefId" spname="si_subscription_ref_id" type="smallint" />     <spil:param name="ServiceRefId" spname="si_service_ref_id" type="smallint" />     <spil:param name="PportIdHigh" spname="i_pport_id_high" type="int" />     <spil:param name="PportIdLow" spname="i_pport_id_low" type="int" />   </spil:procedure>   <spil:procedure spname="spm_RemoveBinaryFromAccount" name="RemoveBinaryFromAccount">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="EncryptedConcatNumber" spname="vc_encrypted_concat_number" type="varchar" />     <spil:param name="BillableAcctId" spname="bi_billable_acct_id" type="bigint" />     <spil:param name="PaymentMethodTypeId" spname="ti_payment_method_type_id" type="tinyint" />   </spil:procedure>   <spil:procedure spname="dbo.spm_RemoveId" name="RemoveId">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->   </spil:procedure>   <spil:procedure spname="spm_RemovePassportToName" name="RemovePassportToName">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="MemberName" spname="vc_member_name" type="varchar" />   </spil:procedure>   <spil:procedure spname="spm_RemoveString" name="RemoveString">     <!--Autogenerated by SPIL Generator. Modify human-readable names only-->     <spil:param name="StringKey" spname="vc_string_key" type="varchar" />     <spil:param name="ScopeId" spname="i_scope_id" type="int" />   </spil:procedure>   <!--   Version History:    Aug 8, 2002       MuraliK        Created v1 of the SPIL definitions for MapDB. </spil:procedureGroup>SPIL: Stored Procedure Interface Language Introduction to SPIL and associated tools Murali R. Krishnan, Aug 1, 2002 Contents  TOC \o "1-3" \h \z \u   HYPERLINK \l "_Toc16658188"  SPIL: Stored Procedure Interface Language  PAGEREF _Toc16658188 \h   HYPERLINK \l "_Toc16658189"  Contents  PAGEREF _Toc16658189 \h   HYPERLINK \l "_Toc16658190"  Introduction  PAGEREF _Toc16658190 \h   HYPERLINK \l "_Toc16658191"  Goals  PAGEREF _Toc16658191 \h   HYPERLINK \l "_Toc16658192"  Background  PAGEREF _Toc16658192 \h   HYPERLINK \l "_Toc16658193"  SPIL Overview  PAGEREF _Toc16658193 \h   HYPERLINK \l "_Toc16658194"  Tools for SPIL  PAGEREF _Toc16658194 \h   HYPERLINK \l "_Toc16658195"  Runtime Library for Spiller  PAGEREF _Toc16658195 \h   HYPERLINK \l "_Toc16658196"  Creating SPIL file  PAGEREF _Toc16658196 \h   HYPERLINK \l "_Toc16658197"  Code Generation from SPIL  PAGEREF _Toc16658197 \h   HYPERLINK \l "_Toc16658198"  Alternate code models  PAGEREF _Toc16658198 \h   HYPERLINK \l "_Toc16658199"  Road Map  PAGEREF _Toc16658199 \h   HYPERLINK \l "_Toc16658200"  Action Items  PAGEREF _Toc16658200 \h   HYPERLINK \l "_Toc16658201"  Conclusion  PAGEREF _Toc16658201 \h   HYPERLINK \l "_Toc16658202"  Revision History  PAGEREF _Toc16658202 \h   HYPERLINK \l "_Toc16658203"  References  PAGEREF _Toc16658203 \h   HYPERLINK \l "_Toc16658204"  Appendix A: SPIL schema and sample files  PAGEREF _Toc16658204 \h   HYPERLINK \l "_Toc16658205"  Appendix B: FAQ  PAGEREF _Toc16658205 \h  Introduction SPS consists of several databases and stored procedures. High level processing logic or network access code typically sits in separate machine. This processing is done usually in one of the standard High level languages (C++ or C#). Such processing invokes the stored procedures through ODBC or OLE-DB or ADO.NET. The caller has to do considerable work to invoke stored procedures to create and bind parameters for the call. Return values need to be massaged to suit the high level language needs. There is no first class citizenry for such stored procedure calls.  Efforts are underway to build tighter nexus between high level languages and Databases [CLR on Yukon Project], which will not be available in time for SPS 3.0 (May 2003). I introduce SPIL as a language to declaratively state the stored procedures of interest. Using Spil toolset one can generate stub classes for use with the Spil Runtime library to talk to the database.  Goals The high level goal is to provide easy way to execute SQL stored proceduresored procedures of interst. o declaratively state the stored procedures of interst.   from high level languages. Declaratively state the set of stored procedure for which high level language binding (C#/C/C++) is required Enable grouping of the relevant stored procedures into a single description file (eg: all methods dealing with SPS Authorization Database) Define associated tools to enable automatic generation of stub code, and use from high level languages. Ability to group and hierarchically scope stored procedures within a database Background TODO: I m surprised that there exists no such mechanism in the past. May be I had not looked hard enough to gather information. From my knowledge of projects   MSN.com, MSN eShop, MSN Search, SPG, etc, I ve not seen any such model thus far. If you know of other mechanisms, please inform the author. TODO: Talk about problems with existing mechanisms to call stored procedures from high level language   include ADO.NET, Concorde, OLEDB, ODBC in the discussion. Most folks in SPG are familiar with the problems. Should there be a need for others to know the pains involved, I will update this section later on. SPIL Overview SPIL = Stored Procedure Interface Language Spiller = Compiler tool for SPIL (DO NOT confuse with Spoiler :-) ) SPIL provides language agnostic declarative definition of stored procedure metadata.  SPIL is an XML based language - that allows for easy definition of stored procedures in single place. Most of the information in the SPIL is a duplication of what is already present in the stored procedure definition. In future when we have automated ways to introspect and control the exposure of stored procedures, the need for SPIL will go down. Still the technology of generating SPIL files and runtime support will be of good use. Since a SPIL file replicates already available data, following options work very well to generate the SPIL definitions.  a) Reverse engineer and generate the SPIL file from the existing definitions  b) Add annotations inside the SQL files and use those annotations as hints to generate the appropriate SPIL File    (Possibly use [SqlMethod] attribute much like the use of [WebMethod] attribute)  c) Worst case, the developer forcibly writes duplicate copy of the definition as well. Either way, a developer (human) has to put explicit annotations about    a) Binding data for SPIL (connection string, application name, namespace, etc)    b) Friendly names  for stored procedures and parameter names (A stock CarmelCase conversion is built into Spiller to ease the adoption), and    c) Relevant comments  HYPERLINK  \l "_Appendix_A:_SPIL_file for Authoriza"  appendix A , the schema and sample SPIL files are provided.  SPIL is NOT A file format. It is a specification for how to specify the set of stored procedures so that code stubs can be auto-generated. Typically each SPIL definition may be stored in a separate file for persistence. There is NO requirement that all stored procedures for a given database be included in a single SPIL definition. One can choose (most often I expect this) to split the stored procedures into meaningful groups as per their use. That way one gets the poor-man s version of scoping of the relevant stored procedures modularly defined in a single unit. Tools for SPIL To effectively utilize the SPIL contract, we will need following tools SpilRun.dll   a runtime support library (available as a DLL) containing commonly reused functionality referred to by the Spiller generated code. Spiller   a tool that generates the high level language code to convert calls from high level language into stored procedure calls. Spil Generation  tool support to generate the SPIL file through reverse engineering of database. In reality the SpilGenerator functionality is bundled into Spiller as a simple command-line switch. Runtime Library for Spiller SpilRun.dll is a runtime support library. It contains both the design/build classes and the runtime tools to make the SPIL generated code stubs to work well. It will contain the base classes and support functionality to interface with the database stack. Spiller generated code will reuse the data structures exposed by the SpilRun.dll. Some such classes include: DataStoreComponent   base class for all data stores. Each SPIL definition will produce a single class called SPCaller within the scoped namespace as defined in the SPIL document. The SPCaller class derives from DataStoreComponent. The methods take  server name  as a parameter to route the stored procedure calls. DataStoreException   used to distinguish exceptions posted by the Spil runtime. ProcedureResults   encapsulates results from the stored procedure execution. At the minimum it includes return value supplied by the stored procedure (integer value). It may also contain a DataSet that represents all rowsets of data returned by stored procedure. WebStoreDataComponent   base class for all databases accessed through WebStore client. It requires Microsoft.WebStore.WstClient from WstClient.dll assembly. This class is similar to the DataStoreComponent. Each single namespace of SPIL will have a WstSPCaller class, which derives from the WebStoreDataComponent. The methods take  logical partition id  as a parameter to route the stored procedure calls based on WebStore replication state. SpilRun also acts as the design/build time support library. It contains following classes to aid in reverse-engineering to generate a SPIL file and code generation process. ProcedureInterfaces   provides the functions to reverse-engineer an existing database to generate SPIL definition. SpilCodeGenerator   generates high level code for SPIL definition. Both these classes are used by the Spiller and SpilGeneration tool to produce code or SPIL files respectively. Creating SPIL definition To avoid having to manually recreate the SPIL definitions, SPIL toolset provides mechanism to infer the definitions. This includes reverse engineering the metadata from database containing the stored procedures or parsing the raw *.sql files to fetch the required metadata on stored procedures. The file-parsing option is useful as a build time option for smoother integration in codebases where predominantly SQL code is written and checked in. The database option is useful in the traditional DBA model of database schema/procedure definitions. It can also be applied in situations where one has just the database to derive metadata from. SPIL generation requires a human to identify the grouping and set of procedures of interest. Such input is specified in a mini-SPIL definition  which is identical to SPIL definition. The mini-SPIL definition should include: binding data (connection string or appName, namespace for class) and the list procedures of interest.  In the reverse engineering mode, SPIL generation reads binding data from mini-SPIL document and uses it to connect to database of interest. Then the generation fetches metadata about procedures from database to format into full SPIL definition for the procedure. In the file-parsing model, SPIL generation will look for the CREATE PROCEDURE <name> definitions (or use a good SQL parser) in input files. The search can be guided by explicitly limiting the set of *.sql files per directory (much like how we list our *.cs or *.cpp files in the sources file). TODO: Refine the schema to allow marking the mini-SPIL file. For now just see the supplied input samples. SPIL generation should be able to run from command line and be part of the regular build mechanism to build our binaries. So that the respective SPIL file will be generated when there are changes in the stored procedure definitions. To better integrate SPIL generation will return non-zero error codes on failure.  TODO: Spil Generation has to produce output (verbose mode included) and also write output to error and log streams as requested. Once a complete SPIL definition is available, a human (Developer) may annotate the SPIL file to add specific names, namespace, etc.  Code Generation from SPIL SPIL adopts the compiler mindset to generate code. It behaves much like the MIDL compiler that produces code stub from the IDL files. Spiller has a compiler style tool to produce code for runtime calls to the stored procedures from a high level language. It will primarily run as a command line tool; it allows for integration into build environment. Optionally UI may be added in the future, but not required. And further at low priority spiller compilation may be hooked into VisualStudio.NET to ease integrated development.  Spiller can generate stub code in a variety of high level languages (C/C++/C#/VB). The stubs generated will have consistent look and feel to simplify calls from high level language code. High level language binding for the stored procedure will appear like calling a local function in the high level language. Underneath the cover, using the standard database stacks (ADO.NET, ADO, OLE-DB, ODBC) a stored procedure call is routed to the database engine for execution. Simple rules are adopted to generate the code stubs.  TODO: Priority will be to implement C# code generation from Spiller. Revisit this if we write entire Data Access Layer for SPS 3.0 in unmanaged code For each ProcedureGroup there will be a corresponding SPCaller class defined. This class exposes methods to get connection and other database execution related objects for the specified database. This class derives from the DataStoreComponent. The metadata supplied in the SPIL definition are used for setting properties on this base class. For each Procedure there will be a stub function within the above SPCaller class created. The call stub has all the parameters listed in the right types as required by the high-level language. The stub function has standard code pattern that looks like the following:  public ProcedureResults <ProcedureFriendlyName> (     string serverName    , <List Of procedureParameters>    ) {                 SqlParameter[]  callParameters = new SqlParameter[ <NumParameters>];    // Pack all parameters into the SQL parameters array.                // SQL Data type is inferred from the .NET Framework type                 callParameters[0] =  new SqlParameter( <parameter 0 information>);                 callParameters[1] =  new SqlParameter( <parameter 1 information>);  all other parameters get stored here                     // Make the call    return this.ExecuteStoredProcedure( serverName,  <ProcedureDatabaseName>, callParameters); The example above is for plain ADO.Net with database stack. There are minor differences for calls made through WebStore. A full example of a function stub so created is provided in   HYPERLINK  \l "_Appendix_A:_SPIL_schema and sample "  Appendix A The types for input parameters are mapped to respective runtime types. ADO.NET (for managed code) infers the right runtime type to database type mapping to make. The return result is exposed as a ProcedureResults object instance. This object supports various methods to access the results (as RowSets/DataSet, return value, Xml, XmlDocument, etc). Code generated uses use the SPIL runtime support classes. Transaction semantics and context will be exposed. At present transaction is implicit by the caller. No specific attempts are made within this Spil runtime to demark the transaction boundary. Optionally later on, asynchronous calling mechanisms may be used as well. In case if the user chooses to generate WebStore Classes then WebStore related classes will be generated.  Alternate code models Another alternative mechanism considered was the context-model. In the context model, each procedure maps to an object derived from ProcedureCallContext. First the user has to pre-create this call context object, stuff parameters into the call-context (by setting properties), package the parameters and then finally execute the request with the context. The parameters for a procedure call are exposed as properties and there will be read/write accessors for these parameters. This allows one to set/reset the individual values atwiull before making the call. Plus the call context supported the data storage for the intermediate packaging of the parameters into an array for using the standard Execute() function.  However, in any day the method call is much simpler and cleaner than creating context/setting properties and making the call. Hecne this context based code is not generated right now. It is trivial to modify Spiller to generate such code if desired. As another alternative we can consider an interpretation model. In the interpretation model, there is no dedicated method per database stored procedure. At runtime the interpreter s services are called in to do lookup table based assembly of the parameter blocks to call into stored procedure. In general this may save a bit of code space, but would still require data space in memory. The interpreter model suffers from performance penalty due to its inherent late binding approach. Unless a high degree of flexibility is required (which is not required for SPS 3.0), Spiller will not generate interpretation tables. It is important to note that Concorde (SPS 2.5x) uses TowerXml commands, to supply metadata for an interpreter model built into Concorde. NOTE: Spiller tool itself will be implemented in C# for convenience and ease of development. Road Map Aug 2002 (Required 2 weeks of development time)  Define SPIL and stabilize schema - DONE Implement SpilGenerator, Spiller, and SpilRun.dll - DONE Write SPIL documentation, and include usage information for Spiller - DONE Add error handling, exceptions, and tracing support   DONE Add code generation for WebStore   DONE Release Spiller to toolbox for others use   DONE Sep 2002   Nov 2002 (Requires 2 weeks of dev time; we need to add testing time as well) Integrate toolset into build environment Enhance and use SPIL inside SPS 3.0 M1 Reevaluate and close issues with SPIL and tools as required Performance tuning for database code generated from SPIL model. Should be very minimal since we do less within this generated code. Cut items If needed extend SPIL Generation to do file parsing (low priority) Action Items Find holes in the SPIL proposal (ALL) Implement a pretty viewer (XSLT to htm) for SPIL contents (???) Experiment and tweak performance items (Lei's Team) Find if there exists any other such binding tools  (MuraliK) Conclusion SPIL is a very simple definition language for database stored procedures. It provides a logical view of the interface that stored procedures provide. Using this interface contract, tools like Spiller can generate high level code. Such high level code can be used for direct method calls from high level languages without the developer having to worry about custom code for parameter binding.  In contrast with SPS 2.5x (Concorde for data access), use of SPIL generated code avoids the need to pack parameters into XML for stored procedure execution. It would not require the same amount of complexity as faced by ODBC/OleDB/ADO.NET programmers to create parameter lists and send the same for database calls. Finally, use of SPIL should provide a way to act as mini documentation and cross-referencing tool for linking high level code with low-level stored procedures. Revision History Aug 1, 2002 MuraliK Wrote initial draft on SPIL Aug 2, 2002 MuraliK Updated overview and tools section. Included roadmap and action items Aug 9, 2002 MuraliK Include details on SpilRun.dll, SPIL generation, and code generation. Updated roadmap. Aug 13, 2002 MuraliK Add notes on WebStore integration. Update roadmap and items finished.  References  HYPERLINK "http://muralik/public/spiller"  http://muralik/public/spiller  - release location for Spiller toolset Appendix A: SPIL schema and sample files  EMBED Package   SPIL Schema  Sample SPIL files for Microsoft Subscription Platform Service (SPS)   EMBED Package   Authorization Database  EMBED Package   Map Database  Example of a Procedure Call for MapDB Stored Procedure: spm_FindId() public ProcedureResults FindId (      string serverName     , Int32   i_pport_id_high     , Int32   i_pport_id_low     ) {                  SqlParameter[]  callParameters = new SqlParameter[ 2];     // Pack all parameters into the SQL parameters array.                 // SQL Data type is inferred from the .NET Framework type                  callParameters[0]  = new SqlParameter( "@i_pport_id_high",(object)i_pport_id_high);                  callParameters[1]  = new SqlParameter( "@i_pport_id_low", (object) i_pport_id_low);                      // Make the call      return this.ExecuteStoredProcedure( serverName,                 "spm_FindId", callParameters); Appendix B: FAQ  (Some of the questions may be relevant only for the SPS team. Please ignore the same.) A) Why do we need this intermediary SPIL file? Can we forego this entirely?   It is required for 2 reasons    a1) Acts as the documenting aid for the set of interface functions exposed. One is free to define friendly names should one choose to for method and parameter names.    A2) Allows one to group and generate the stubs only for required stored procedures. If we blindly drive the stub generation based on the database, then we will be generating stubs for unwanted items as well   A3) (low pri) Allows for future migration and integration should such a model become available from SQL team.  B) How much work is it anyway?   Gut estimates for the tools are: SPILGenerator - 1 week Spiller - 2 weeks Schemas, Namespace and Annotations - 1 week Fit/finish/polish   1 week Errors and Exceptions   1 week  C) What about transactions?   I've not considered modelling the transactions within the context of the method call stubs. These need to be introduced thru some mechanisms. Or maybe the Execute() method belongs in the runtime library code that will support transactions, connection pooling, etc and expose the same.  D) And how about performance?  Since we generate real-code from the stubs, performance should be significantly better than using XML-to-ODBC/OLEDB conversions or slow-interpreted model of execution. Plus whenever possible we will use direct runtime types avoiding type conversion costs. The stub code will provide access to both raw DataSet and Xml through the MethodResults structure. Hence the caller has the option to use raw or cooked results as required. Finally, all these are achieved with significant reduction in developer having to hardwire such stored procedure bindings.   E) Will it replace Concorde used in SPS 2.5x? Concorde supports Sequencing, Partitioning, and Procedure-call-binding. SPIL only addresses the "Procedure-call-binding" and TowerCommand stuff. Sequencing should be simplified now that we have a flexible mechanism to do procedure calls from SPIL. Partitioning is best addressed by WebStore. Concorde's XSL transforms need to be investigated to see how it may work its way into new middleware.  F) How can I structure return results? At present no work is being done to address the return results. Stored procedures return multiple result sets which is exposed as an array of rowsets (OLEDB, ODBC) or as a DataSet (ADO.NET). For v1 we should not tinker with the return types. In future we should investigate how we can convert these return results into more structured type.  SPIL replaces the esoteric name   Contract Definition Language (CDL). I advocated CDL as name a few months back; however SPIL looks like a natural name (  Friendly names are not needed if the names used for stored procedures and parameters in the database are already friendly. gd!1' gd!1' gd!1' }y}yuyqjejququqa]V] gdZfQ gd!1' gd!1' gd!1' gd!1' gd!1' gd!1' j-j-j- gd!1' gd!1' gd!1' gd!1' gd!1' gd!1' gd!1' gdY8r gdn;  gd!1' gd!1' gd(df gd(df
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\Sample\installers\readme.txt ===
because oi tree doesn't have octopus common,
this folder cannot be built for now.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\Sample\OneDir\populate\sp\TestCompanyOps.xml ===
<Suite name="TestCompanyOps">
    <Case name="TestCompanyInsert" transaction="rollback">
        <Procedure name="InsertCompany">
                <Param name="vc_company_symbol" value="AMZN"/>
                <Param name="vc_company_name" value="Amazon.com"/>
        </Procedure>
        <Expected>
            <ReturnValue>0</ReturnValue>
            <Database>
				<Filter>select * from company where vc_company_symbol = 'AMZN'</Filter>
				<Results>
					<NewDataSet>
						<Table>
							<vc_company_name>Amazon.com</vc_company_name>
						</Table>
					</NewDataSet>
				</Results>
            </Database>
        </Expected>
    </Case>
    <Case name="TestCompanyGet" transaction="rollback">
		<Procedure name="InsertCompany">
                <Param name="vc_company_symbol" value="MSFT"/>
                <Param name="vc_company_name" value="Microsoft"/>
        </Procedure>
        <Procedure name="GetCompany">
                <Param name="vc_company_symbol" value="MSFT"/>
        </Procedure>
        <Expected>
            <ReturnValue>0</ReturnValue>
            <OutputDataSet>
						<Table>
							<vc_company_name>Microsoft</vc_company_name>
						</Table>
            </OutputDataSet>
        </Expected>
    </Case>
    <Case name="TestCompanyDelete" transaction="rollback">
        <Setup>
            <Sql>Insert into company values ('MSFT','Microsoft Corp.')</Sql>
		</Setup>
        <Procedure name="DeleteCompany">
                <Param name="vc_company_symbol" value="MSFT"/>
        </Procedure>
        <Expected>
            <ReturnValue>0</ReturnValue>
            <Database>
                <Filter>SELECT * FROM company where vc_company_symbol = 'MSFT'</Filter>
                <Results><NewDataSet/></Results>
            </Database>
        </Expected>
    </Case>    
</Suite>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\Sample\OneDir\populate\sp\TestAddNumbers.xml ===
<Suite name="TesetAddNumbers">
    <Case name="AddNumbersBothNotNull" transaction="rollback">
        <Procedure name="AddNumbers">
                <Param name="a" value="2"/>
                <Param name="b" value="3"/>
        </Procedure>
        <Expected>
            <ReturnValue>5</ReturnValue>
            <OutputParam name="c" value="5"/>
        </Expected>
    </Case>
    <Case name="AddNumbersBIsNull" transaction="rollback">
        <Procedure name="AddNumbers">
                <Param name="a" value="2"/>
                <Param name="b" value="[NULL]"/>
        </Procedure>
        <Expected>
            <ReturnValue>0</ReturnValue>
            <OutputParam name="c" value="[NULL]"/>
        </Expected>
    </Case>
</Suite>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\SpilAnnotator\hash.xml ===
<SPSHash>
  <ref>HashAlgorithms.dll</ref>
  <using_namespace>Microsoft.Subscriptions.Hashing</using_namespace>
  <HashAlg name='SubsHash' Method='Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash'/>
  <HashAlg name='MapEncryptCCHash' Method='Microsoft.Subscriptions.Hashing.HashAlgorithms.MapEncryptCCHash'/>
  <HashAlg name='MapMemberNameHash' Method='Microsoft.Subscriptions.Hashing.HashAlgorithms.MapMemberNameHash'/>
  <HashAlg name='MapPportIdLowHash' Method='Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash'/>
</SPSHash>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\SpilAnnotator\readme.txt ===
SpilAnnotator was the code used to annotate all SCS stored procedures with SPIL attributes. Since then this has been deprecated and serves only as illustration purposes.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\SpilAnnotator\spAnnotate.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<PublicStoredProcedures>
  <SqlMethod StoredProcedure="spau_isaccountadmin">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_isaccountadmin.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_closelineitem">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_CloseLineItem.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getratingrulesbysubrefid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getRatingRulesBySubRefId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getbillinganniversary">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetBillingAnniversary.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updateprovisioningstatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_UpdateProvisioningStatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_rerefbi">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_RerefBI.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findpassporttoname">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindPassportToName.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapMemberNameHash,vc_member_name)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findid_zerosubsi">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindId_ZeroSubSi.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updatesubscriptionstatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_updatesubscriptionstatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getresbalances">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_getresbalances.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getacctinfo4mailnotice">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAcctInfo4MailNotice.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctID)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_addaccount">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_AddAccount.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_removepaymentinstrument">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_removepaymentinstrument.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getallresbysubrefid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAllResBySubRefId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,AcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_settrackingguid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp1\sps_SetTrackingGUID.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_retrievedealid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_retrievedealId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctID)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_relinkbiforxferbalance">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_RelinkBIForXferbalance.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getddprenotifycandidates">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_GetDDPrenotifyCandidates.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getacctpiinfo4mailnotice">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAcctPIInfo4MailNotice.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_Id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_insertsabalancingrecinbi">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_insertSABalancingRecInBI.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getmaxacctid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetMaxAcctID.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_migratebillingitem">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_MigrateBillingItem.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getdpmandatedue">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetDPMandateDue.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_partition_num)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_subcycleassessmentcharge">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_SubCycleAssessmentCharge.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getserviceinstance">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getserviceinstance.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_validatepartner">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_validatepartner.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_reinstatesubscription">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp1\sps_reinstatesubscription.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getsubpaymentdetails">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetSubPaymentDetails.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updatepaymentinstrument">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_updatepaymentinstrument.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_creditpaymentinstrument">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_CreditPaymentInstrument.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_revertpartialconversion">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_RevertPartialConversion.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findid_allaccounts">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_findId_allaccounts.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_addbinary">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_AddBinary.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapEncryptCCHash,vc_encrypted_concat_number)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_enumauthcontextfromaccount">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_enumauthcontextfromaccount.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_subresourceusagecharge">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_SubResourceUsageCharge.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_initresource">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_InitResource.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findid">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_bdkaggregatesa">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_BDKAggregateSA.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getsubsinfo4mailnotice">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetSubsInfo4MailNotice.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_Id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findid_allsi_allaccounts">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_findId_allsi_allaccounts.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_batchremoveid">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_BatchRemoveId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_chargefailedcancels">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_ChargeFailedCancels.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_partition_num)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getreferral">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getreferral.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getserviceinstancestatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getserviceinstancestatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getsiinfo">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getsiinfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_addusagetoresource">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_AddUsageToResource.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_ddcollectearliest">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_DDCollectEarliest.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updateacctstatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_updateacctstatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_removeid">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_RemoveId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_lockopenbalancerow">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_lockopenBalanceRow.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_setpaymentmethodtogood">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_setpaymentmethodtogood.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getaddress">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAddress.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_purchaseassessmentcharge">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_purchaseassessmentcharge.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_isscepdone">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_IsSCEPDone.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getsubscriptionstatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getsubscriptionstatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spe_purchasesubscription">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\spe_purchasesubscription.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_addpassporttoname">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_AddPassportToName.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapMemberNameHash,vc_member_name)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getccexpiration">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getccexpiration.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_partition_num)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_createacct">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_createacct.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_updatepaymentinstrument">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_UpdatePaymentInstrument.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getduesubscriptions">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetDueSubscriptions.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_partition_num)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getbifromsaid">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_GetBIFromSAID.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spe_addpaymentinstrument">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\spe_addpaymentinstrument.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getoutstandingbalance">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_GetOutstandingBalance.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_addreferral">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_addreferral.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findbinary">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindBinary.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapEncryptCCHash,vc_encrypted_concat_number)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_lockpimandatestatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_LockPIMandateStatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctID)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updateacct">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_updateacct.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getpaymentinstruments">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getpaymentinstruments.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findpassportsbyoid">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindPassportsByOID.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getpisubscriptions">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_GetPISubscriptions.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getdecliningbalance">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_GetDecliningBalance.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_closeacct">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_closeacct.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_getpartnerinfo">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_getpartnerinfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spc_getcomments">
    <LocalPath>$INETROOT\private\server\sql\comment\populate\sp\spc_getcomments.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_marksubs_canceled">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_MarkSubs_Canceled.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_geteligibleofferings">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_geteligibleofferings.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getsubscription">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getsubscription.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_setnegopenamtstorefund">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_SetNegOpenAmtsToRefund.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_switchpaymentinstruments">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_switchpaymentinstruments.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getlastperiodprocessed">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp1\sps_GetLastPeriodProcessed.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getsasubs">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_getSASubs.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_activateacct">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_activateacct.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_batchaddidentity">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_BatchAddIdentity.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getresbalance">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_GetResBalance.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_prepupdateimmedsettlesa">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_PrepUpdateImmedSettleSA.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_removeidentity">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_removeidentity.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getlineitem">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_GetLineItem.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updatesubsrenewflag">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp1\sps_UpdateSubsRenewFlag.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_batchaddid">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_BatchAddId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_updatezombierecord">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_UpdateZombieRecord.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getsaidrangefornotify">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_GetSAIDRangeforNotify.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_adjustsubscription">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_adjustsubscription.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getobjectinfo">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getobjectinfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_addtrackrecord">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_AddTrackRecord.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_verifyuserrights">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_verifyuserrights.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_batchremoveidentity">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_BatchRemoveIdentity.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getpibalance">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_GetPIBalance.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getacctinfo">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getacctinfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_writeoffsarow">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_writeoffsarow.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_updateimmedsettlesa">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_UpdateImmedSettleSA.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getautorenewaldeal">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAutoRenewalDeal.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_removebinaryfromaccount">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_RemoveBinaryFromAccount.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapEncryptCCHash,vc_encrypted_concat_number)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_enumauthcontext">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_enumauthcontext.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_restoresarecord">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_RestoreSARecord.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_createmailrecord">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_CreateMailRecord.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_getpuidinfo">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_getpuidinfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_isvalidconversion">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_isvalidconversion.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getadjustmentsfromsubscription">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getadjustmentsfromsubscription.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_migfixauditabilityforacct">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_MigFixAuditabilityForAcct.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findid_allsubs">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindId_AllSubs.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spc_addcomment">
    <LocalPath>$INETROOT\private\server\sql\comment\populate\sp\spc_addcomment.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getaccountcatchupperiods">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAccountCatchupPeriods.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_offsetlineitem">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_OffsetLineItem.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getobjectsinfofromaccount">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getobjectsinfofromaccount.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getservicereferences">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getServiceReferences.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctID)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getonezombierecord">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_GetOneZombieRecord.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_setsubscriptionstatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_setsubscriptionstatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_migfixbalfwdforacct">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_MigFixBalFwdForAcct.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spe_cancelsubscription">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\spe_cancelsubscription.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_setaccountstatus">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_SetAccountStatus.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_getaccountactivityinfo">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_GetAccountActivityInfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getusageinfo">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp1\sps_GetUsageInfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_updatesubscriptioninfo">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_updatesubscriptioninfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_presaforimmedsettlement">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp1\spbd_PreSAForImmedSettlement.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_checkserviceinstanceexists">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_checkserviceinstanceexists.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_addid">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_AddId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_accountcycleclose">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_AccountCycleClose.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,bi_bill_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getratingrulesbydealid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_getRatingRulesByDealId.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_convert">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_convert.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_gettrackingguid">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetTrackingGUID.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_switchpaymentinstruments">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_SwitchPaymentInstruments.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_createcomment">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_createcomment.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getaccountactivityinfo">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetAccountActivityInfo.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getbillingperiods">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetBillingPeriods.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_setpaymentmethodtodeclined">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_setpaymentmethodtodeclined.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_xferinsertrowintosa">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_XferInsertRowIntoSA.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findnametopassport">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_FindNameToPassport.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getdueaccounts">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetDueAccounts.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,PartitionNumber)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spm_findid_allsi">
    <LocalPath>$INETROOT\private\server\sql\map\populate\sp\spm_findId_allsi.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.MapPportIdLowHash,i_pport_id_low)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spau_addidentity">
    <LocalPath>$INETROOT\private\server\sql\authorization\populate\sp\spau_addidentity.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_billable_acct_id)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_settlementamountmail">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_SettlementAmountMail.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="spbd_checktrackingguidcontent">
    <LocalPath>$INETROOT\private\server\sql\billing25\populate\sp\spbd_CheckTrackingGUIDContent.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,BillableAcctId)]</PartitionBy>
  </SqlMethod>
  <SqlMethod StoredProcedure="sps_getdpsubscriptions">
    <LocalPath>$INETROOT\private\server\sql\subscription\populate\sp\sps_GetDPSubscriptions.sql</LocalPath>
    <PartitionBy>[PartitionBy(Microsoft.Subscriptions.Hashing.HashAlgorithms.SubsHash,i_partition_num)]</PartitionBy>
  </SqlMethod>
</PublicStoredProcedures>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\Spiller\UsageForSpiller.txt ===
Usage: 
  Spiller param1 {/[c /d /f /m /n /a ] [/i inputFile+ ]
     [/o outputFile ] [/s partialConnectionString ] [/u namespaceRef+ ]
  
  Spiller generates "Stored Procedure Interface Language(SPIL) definitions.
  
  SPIL is useful to generate a high-level view of the stored procedures 
   available in a database. Once we have a SPIL document, Spiller can 
   also generate code for high level languages (C#, VB.NET, MC++, C++). 
   Generated code will help to binding high-level function calls to 
   associated stored procedure calls to database.
   
  With Spiller one does not have to worry about writing custom code
   to format the parameters for an ADO.NET stored procedure call.

  Use of SPIL file allows one to maintain a file-level view of 
   stored procedures for build-time code-generation. No need to 
   always lookup the database to fetch definitions and generate code-stub.
   
  .spil file = full SPIL file containing method names and parameter definitions.
    This file is used as input for /c and /w options
  
  See SPIL.xsd for schema of the SPIL file. 
 
  Limitations:
   - At present generates code only for C#
   - At present only generates result compatible with ADO.NET 
     (no plans for ODBC/OLE-DB support)
   - ConnectionManagers are provided for simple (no partitions) as well as 
     MSN WebStore style partitioned database access
    
   If you want code in other languages (VB.NET, ...) please work with us  
     to create a transform for those languages.
  
  
  Command Line Options:
     param1 = input database catalog name if /d, /a or /f is used
              input spil file if /c or /w is used
              placeholder if /m is used
     /a = generate spil file from files in a specific directory. 
          Uses the param1 as database catalog name
          use /z for specifying relative directory name
          use /i for specifying files
     /c = generate code file for .NET Framework (default language: C#) 
          Code generation to C# is only supported now 
     /d = generate spil file from database 
          Uses the param1 as database catalog name
     /f = generate spil file from SQL source file
          Uses the param1 as database catalog name    
     /i input1 input2 ...
        = location for the sqlFile to generate spil file when /f or /d is used
          location for the spil files to merge together into one C# file 
            when /m is used
          when /a is used, the file names(not the full paths) are used for
          generating spil file in the specified directory.
     /m = merge multiple spil file into one spil file
     /n namespace = only used when /m is used. namespace is the generated class namespace
     /o outputFile  
	= location for the ouptput generated 
        (default: generated from input file name)
     /s partialConnectionString 
	= only used when /m is used. Specifies the part of connectionString 
        that is used for database access (without server name and catalog name)
     /t catalog	
        = only used when /m is used. catalog is the logical database name
        that the generated code accesses
     /u namespace1 namespace2 ... 
        = only used when /m is used. namespace{i} will be used by the 
        generated class
     /z directory
        = only used when /a is used. directory of sql files to generate spil file. /i option must be used at the same time to specify the file names inside the directory.
     /tc files
		= create test case based on the XML definition files
     
  Examples:

    Spiller.exe MapDb /f /o map1.spil /i spm_FindId.sql spm_FindName.sql
        generates the full-SPIL file from input parameters, 
        doesn't require all databases installed

    Spiller.exe MapDb /d /o map1.spil /i spm_FindId.sql spm_FindName.sql
        generates the full-SPIL file from input database name, 
        requires all databases to be previously attached
    
    Spiller.exe MapDb /a /z obj\i386 /i spm_FindId.sql spm_FindName.sql
        generates the full-SPIL file from input database name,
        using the files spm_FindId.sql and spm_FindName.sql in obj\i386
        directory.

    Spiller.exe map1.spil /c /o MapDb.cs
        generates code file for the SPIL file


    Spiller.exe placeholder /m /o spgen.spil /i sp.spil sp1.spil \
      /n Microsoft.Subscriptions.Test /t TestDB /s ConnectionString \
      /u System.XML System.Serialization
       
         merge sp.spil and sp1.spil to a full-SPIL file, 
         output is stored in spgen.spil
         use Microsoft.Subscriptions.Test as namespace
         use TestDB as catalog Name
         use ConnectionString as connection string
	 use System.XML and System.Serialization in using namespaces

  Contact:
    mailto:SpilTalk
    http://muralik/public/spiller
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPIL\Spil3.0\src\SpilRun\SpilRunDocument.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpilRun</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Subscriptions.Data.DbAssertion">
            <summary>
            Summary description for Assertion.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDbNull(System.Object)">
            <summary>
            Assert the data is DBNull
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatabaseEquals(System.String,System.String,System.String,System.String,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.Boolean)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="filter"></param>
            <param name="scm"></param>
            <param name="connectionString"></param>
            <param name="databaseName"></param>
            <param name="strictCompare"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatabaseEqualsXml(System.String,System.String,System.String,System.String,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.Boolean)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <param name="filter"></param>
            <param name="scm"></param>
            <param name="connectionString"></param>
            <param name="databaseName"></param>
            <param name="strictCompare"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatasetEqualsFile(System.String,System.Data.DataSet)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="ds"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatasetEqualsXml(System.String,System.Data.DataSet)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <param name="ds"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatasetEqualsXml(System.String,System.Data.DataSet,System.Boolean)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <param name="ds"></param>
            <param name="strictCompare"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatasetEqualsFile(System.String,System.String,System.Data.DataSet)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="fileType"></param>
            <param name="ds"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatasetEqualsFile(System.String,System.String,System.Data.DataSet,System.Boolean)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="fileType"></param>
            <param name="ds"></param>
            <param name="strictCompare"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDatasetEquals(System.Data.DataSet,System.Data.DataSet,System.Boolean)">
            <summary>
            
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
            <param name="strictCompare"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.AssertDataTableEquals(System.Data.DataTable,System.Data.DataTable,System.Boolean)">
            <summary>
            
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
            <param name="strictCompare"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertion.GetConverterFromType(System.String)">
            <summary>
            
            </summary>
            <param name="fileType"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DbAssertionException">
            <summary>
            Thrown when an assertion failed.
            </summary>
            
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertionException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertionException.#ctor(System.String,System.Exception)">
            <summary>
            Standard constructor
            </summary>
            <param name="message">The error message that explains 
            the reason for the exception</param>
            <param name="inner">The exception that caused the 
            current exception</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DbAssertionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.CsvFileConverter">
            <summary>
            Convert a CSV file to <see cref="T:System.Data.DataSet"/>
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.IFileConverter">
            <summary>
            Summary description for IFileConverter.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.IFileConverter.ReadFromFile(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.IFileConverter.ReadFromString(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="input"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.CsvFileConverter.ReadFromFile(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.CsvFileConverter.ReadFromString(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="xml"></param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.ConnectionManagerBase">
            <summary>
            Base class for creating Connection Manager. Defines common properties available to connection manager.
            
            This class implements <see cref="T:Microsoft.Subscriptions.Data.ISpilConnectionManager"/> interface which defines the common methods available
            to connection manager.
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.ISpilConnectionManager">
            <summary>
            ISpilConnectionManager defines the interface that helps
             to translate the supplied (databaseName, hashValue) into
             a SQL connection object. Additional parameter of connectionString
             is supplied to formulate the full connection string for a connection.
             
            A partition aware object implementing this interface will do all it could
             to use the partition id and fetch the right Sql connection.
            
            A non-partition aware object implementing this interface may ignore
             the partition id and return connection based on predefined heuristics.
             
            In addition the object implementing this interface may also maintain a 
             stateful local cache of connections associated with the object's context.
             This provides a means for transactions to utilize the same connection
              for the same (databaseName, hashValue) combo.
            
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetConnection(System.String,System.String,System.Int32)">
            <summary>
            Provides a SQL connection based on supplied parameters.
            </summary>
            <param name="databaseName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="hashValue">identifies the physical partition instance of the logical database.
            The value of DataStoreComponent.HashValueForAnyInstance (-1) is reserved to indicate ANY partition.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetAllConnections(System.String,System.String)">
            <summary>
            Provides an array of SQL connections for the 
             the individual physical partitions of a single database resource
            </summary>
            <param name="databaseName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.CloseConnections">
            <summary>
            Closes any open connections held by the Connection manager.
            The caller should call at the end of sequence of calls.
            Not doing such proactive means:
             - connections will be drained from the connection pool 
             - big memory commitment
             - the system has to wait for garbage collector to search
              and free the connections.
             So it is best that the caller call this function proactively
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetPhysicalInstanceId(System.String,System.Int32)">
            <summary>
            Gets the physical partition id corresponding to the logical partition id.
            The physical instance id can be of any type so an object is returned by this function.
            In most cases, it will be an integer such as physical partition number.
            </summary>
            <param name="storeName">name of the logical database</param>
            <param name="hashValue">the logical partition id</param>
            <returns>the physical partition id</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetAllPhysicalInstances(System.String)">
            <summary>
            Given a logical database name it provides a collection object
             that consists of "key" or "physical Instance Id" required to access
             the individual physical instances.
            </summary>
            <param name="logicalStoreName">name of the logical database or logical Webstore application</param>
            <returns>a collection object consisting of a "cookie" data or handle or key
             to identify the distinct physical instances</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetConnectionForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            Given the (logical database, physical instance id/key) this function
             returns a connection object for accessing the specific database.
            </summary>
            <param name="logicalStoreName">name of the logical database or logical WebStore application</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="physicalInstanceKey">Key (or cookie data) for specifying the target physical instance.
             The caller cannot fabricate these values. The values passed in here should have obtained from 
             a prior call to the GetAllPhysicalInstances()
            </param>
            <returns>an interface to the database connection object</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetCommand(System.String,System.String,System.Int32)">
            <summary>
            Provides a command object for the connection created with the given
            parameters.  Using this function rather than the GetCommand() 
            function of the connection object will ensure that the command will
            utilize any transactional support, or other features, provided by
            the connection manager object.
            </summary>
            <param name="databaseName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="hashValue">identifies the physical partition instance of the logical database.
            The value of DataStoreComponent.HashValueForAnyInstance (-1) is reserved to indicate ANY partition.
            </param>
            <returns>an interface to the database command object</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetCommandForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            Given the (logical database, physical instance id/key) this 
            function returns a command object for the specified connection.
            Using this function rather than the GetCommand() function of the 
            connection object will ensure that the command will utilize any 
            transactional support, or other features, provided by the 
            connection manager object.
            </summary>
            <param name="logicalStoreName">name of the logical database or logical WebStore application</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="physicalInstanceKey">Key (or cookie data) for specifying the target physical instance.
             The caller cannot fabricate these values. The values passed in here should have obtained from 
             a prior call to the GetAllPhysicalInstances()
            </param>
            <returns>an interface to the database command object</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ISpilConnectionManager.GetDataAdapterForCommand(System.Data.IDbCommand)">
            <summary>
            Creates an appropriate data adapter object for the types of 
            connections managed by the connection manager object.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ISpilConnectionManager.ConnectionTimeOut">
            <summary>
            Gets the timeout value(in seconds) for the connection. All
            connections in a connection manager share the same timeout value.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ISpilConnectionManager.CommandTimeOut">
            <summary>
            Gets or sets the timeout value(in seconds) for the command. All
            commands in a connection manager share the same timeout value.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ISpilConnectionManager.ReturnValue">
            <summary>
            Gets or sets the return value for the command. This value is only set when the query
            has completed. Otherwise its value equals to <see cref="F:Microsoft.Subscriptions.Data.ProcedureResults.InvalidProcedureReturnValue"/>
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.ConnectionManagerBase.connTimeOut">
            <summary>
            connection timeout value
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.ConnectionManagerBase.commTimeOut">
            <summary>
            command timeout value
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.ConnectionManagerBase.returnVal">
            <summary>
            return value
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetConnection(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="databaseName"></param>
            <param name="connectionString"></param>
            <param name="hashValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetAllConnections(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="databaseName"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.CloseConnections">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetPhysicalInstanceId(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="storeName"></param>
            <param name="hashValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetAllPhysicalInstances(System.String)">
            <summary>
            
            </summary>
            <param name="logicalStoreName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetConnectionForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="logicalStoreName"></param>
            <param name="connectionString"></param>
            <param name="physicalInstanceKey"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetCommand(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="databaseName"></param>
            <param name="connectionString"></param>
            <param name="hashValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetCommandForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="logicalStoreName"></param>
            <param name="connectionString"></param>
            <param name="physicalInstanceKey"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.GetDataAdapterForCommand(System.Data.IDbCommand)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ConnectionManagerBase.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ConnectionManagerBase.ConnectionTimeOut">
            <summary>
            Gets or sets connection Timeout value 
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ConnectionManagerBase.CommandTimeOut">
            <summary>
            Gets or sets command Timeout value 
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ConnectionManagerBase.ReturnValue">
            <summary>
            Gets or sets the return value of the query
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataLoader">
            <summary>
            Summary description for DataLoader.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataLoader.LoadSql(System.String,System.String,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="sql"></param>
            <param name="scm"></param>
            <param name="connectionString"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataLoader.LoadFile(System.String,System.String,System.String,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
            <param name="fileName"></param>
            <param name="scm"></param>
            <param name="connectionString"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataLoader.LoadBcp(System.String)">
            <summary>
            
            </summary>
            <param name="bcp"></param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreComponent">
            <summary>
            class DataStoreComponent
            o  base component for interacting with the databases
            It stores the connection string and provides accessors to create 
                new SqlConnection class for talking with the databases.
            
            TODO: Add auding/trace logic support
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.DataStoreComponent.HashValueForAnyInstance">
            <summary>
            Reserved hash value to indicate that any physical instance may be used
             when dealing with partitioned instances of same logical database
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.DataStoreComponent.infoMessageEventHandler">
            <summary>
            info message handler
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.#ctor">
            <summary>
            Default constructor. The class is not directly instantiable.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteScalarStoredProcedure(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Int32,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against a single
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object to translate the 
              specified logical id into physical instance and obtains a connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the data reader are returned. It's client's responsibility to close
                the reader after finishing reading from it.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="hashValue">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The data reader for the stored procedure</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteReaderStoredProcedure(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Int32,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against a single
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object to translate the 
              specified logical id into physical instance and obtains a connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the data reader are returned. It's client's responsibility to close
                the reader after finishing reading from it.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="hashValue">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The data reader for the stored procedure</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteNonQueryStoredProcedure(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Int32,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against a single
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object to translate the 
              specified logical id into physical instance and obtains a connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the data reader are returned. It's client's responsibility to close
                the reader after finishing reading from it.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="hashValue">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The data reader for the stored procedure</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteStoredProcedure(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Int32,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against a single
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object to translate the 
              specified logical id into physical instance and obtains a connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the procedure results are returned.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="hashValue">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The procedure results that contains the dataset and return value</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteReaderOnAllPartitions(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against ALL physical instances
             of the specific logical database (this.catalogName) 
             It uses the supplied connection manager object to find ALL
              connections for the given logical database. Then it iterates
              over each of the connection to produce results.
              
            Finally on success it returns the datareader.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>Always throws NotImplementedException</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteScalarOnAllPartitions(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against ALL physical instances
             of the specific logical database (this.catalogName) 
             It uses the supplied connection manager object to find ALL
              connections for the given logical database. Then it iterates
              over each of the connection to produce results.
              
            Finally on success it returns the datareader.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>array of returned scalar objects, one for each partition</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteProcedureOnAllPartitions(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against ALL physical instances
             of the specific logical database (this.catalogName) 
             It uses the supplied connection manager object to find ALL
              connections for the given logical database. Then it iterates
              over each of the connection to produce results.
              
            Finally on success it returns ALL the procedure results as an array.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The procedure results array that contains the dataset and return value
            for each partition.</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteNonQueryOnAllPartitions(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the specified stored procedure against ALL physical instances
             of the specific logical database (this.catalogName) 
             It uses the supplied connection manager object to find ALL
              connections for the given logical database. Then it iterates
              over each of the connection to produce results.
              
            Finally on success it returns ALL the procedure results as an array.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="catalogName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The procedure results array that contains the dataset and return value
            for each partition.</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteOnPhysicalInstance(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Object,System.String,System.Data.IDataParameter[])">
            <summary>
            Executes the specified stored procedure against a specific
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object and physical instance id 
              to obtain a physical connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the procedure results are returned.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="logicalDatabaseName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="physicalInstanceId">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The procedure results that contains the dataset and return value</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteScalarOnPhysicalInstance(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Object,System.String,System.Data.IDataParameter[])">
            <summary>
            Executes the specified stored procedure against a specific
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object and physical instance id 
              to obtain a physical connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the data reader are returned. It's the client's responsibility to
                close the reader after finishing reading from it.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="logicalDatabaseName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="physicalInstanceId">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The scalar object from the stored procedure</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteNonQueryOnPhysicalInstance(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Object,System.String,System.Data.IDataParameter[])">
            <summary>
            Executes the specified stored procedure against a specific
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object and physical instance id 
              to obtain a physical connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the data reader are returned. It's the client's responsibility to
                close the reader after finishing reading from it.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="logicalDatabaseName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="physicalInstanceId">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The number of the rows affected</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteReaderOnPhysicalInstance(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Object,System.String,System.Data.IDataParameter[])">
            <summary>
            Executes the specified stored procedure against a specific
             physical partition/instance of the specified logical database (catalogName)
             It uses the supplied connection manager object and physical instance id 
              to obtain a physical connection
              for the target instance database.
            It takes in an array of parameters for the call and on success
                the data reader are returned. It's the client's responsibility to
                close the reader after finishing reading from it.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="logicalDatabaseName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="physicalInstanceId">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The datareader from the stored procedure</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.BuildCommand(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.String,System.String,System.Object,System.String,System.Data.IDataParameter[])">
            <summary>
            Builds the command for executing the stored procedure.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">interface to connection manager object to fetch the required connection for specified logical partition </param>
            <param name="logicalDatabaseName">name of the catalog or WebStore application for the logical data store</param>
            <param name="partialConnectionString">partial connection string with metadata for connecting to the target database.
            This connection string should NOT have the "Initial Catalog=" value specified.</param>
            <param name="physicalInstanceId">specifies the physical instance # of the logical database
             where the method should be executed</param>
            <param name="procedureName">name of the stored procedure to execute</param>
            <param name="paramList">list of parameters for the call</param>
            <returns>The datareader from the stored procedure</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.FillInProcedureParameters(System.Data.IDataParameterCollection,System.Data.IDataParameter[])">
            <summary>
             Helper function to add the set of input parameters to the command's parameter collection.
             As part of the add, it also will 'clone' parameters if required. 
             Cloning (or making a copy) of parameters is required to ensure that we have unique
                copies for each call made to the databases. ADO.NET/WebStore insist on this unique
                instance of SqlParameter per collection.
             It also adds the special return value parameter at the very end of the parameters list
            </summary>
            <param name="paramCollection">Parameter collection object that belongs to a command object</param>
            <param name="masterParamList">array of parameters to be included in the collection</param>
            <remarks>
             The cloning of <see cref="T:System.Data.SqlClient.SqlParameter"/> is required so that when we make calls against a set of databases
             with the same parameter values. ADO.NET requires unique instances 
             within a collection of parameters in order to maintain unique states.
            </remarks>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.GetReturnValue(Microsoft.Subscriptions.Data.DataStoreContext)">
            <summary>
            Given a list of parameters, find the return value and returns the
            value of that parameter.
            </summary>
            <param name="context">The DataStoreContext</param>
            <returns>The value of the SQL return parameter</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.GetReturnValue(System.Data.IDataParameterCollection)">
            <summary>
            Given a list of parameters, find the return value and returns the
            value of that parameter.
            </summary>
            <param name="paramList"></param>
            <returns>The value of the SQL return parameter</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteCommandAndFetchResults(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,System.Data.IDbCommand)">
            <summary>
            Helper function to execute the supplied SQL Command and fetch 
            results of the call.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="scm">
            The connection manager object that created the command.
            </param>
            <param name="cmd">
            SQL command object with stored procedure and parameters for 
            execution.
            </param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.ExecuteWstCommandAndFetchResults(Microsoft.Subscriptions.Data.DataStoreContext,Microsoft.Subscriptions.Data.ISpilConnectionManager,Microsoft.Webstore.WstClient.WstCommand)">
            <summary>
            Helper function to execute the supplied WST Command and fetch results of the call
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/> for the query
            </param>
            <param name="cmd">The command to execute</param>
            <param name="scm">The connection manager</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreComponent.CloneParameterList(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Internal utility function to make a clone of a SqlParameter array
            </summary>
            <param name="masterParamList">The sql parameter array to be copied</param>
            <returns>The new array containing the same copy of sqlparameters</returns>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreException">
            <summary>
            DataStoreException
            o Custom exception class that captures errors for 
             stored procedure calls to the datastore calls.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreException.#ctor">
            <summary>
            default constructor for DataStoreException
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreException.#ctor(System.String)">
            <summary>
            constructor for DataStoreException that accepts a string message
            </summary>
            <param name="message">exception message</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreException.#ctor(Microsoft.Subscriptions.Data.ProcedureResults)">
            <summary>
            constructor for DataStoreException that accepts a procedure results
            </summary>
            <param name="procedureResults">the procedure results for the particular query</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreException.#ctor(System.String,Microsoft.Subscriptions.Data.ProcedureResults,System.Exception)">
            <summary>
            constructor for DataStoreException that accepts a procedure results and an inner exception
            </summary>
            <param name="procedureResults">the procedure results for the particular query</param>
            <param name="innerException">inner exception</param>
            <param name="message">exception message</param> 
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreException.#ctor(System.String,System.Exception)">
            <summary>
            constructor for DataStoreException that accepts a string message and innerException
            </summary>
            <param name="message">exception message</param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            constructor for DataStoreException that supports serialization
            </summary>
            <param name="sinfo"></param>
            <param name="scontext"></param>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.DataStoreException.ProcedureResults">
            <summary>
            stores the procedure results when an exception is thrown.
            The exception handler can get the results from this property.
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.ProcedureResults">
            <summary>
            class ProcedureResults
            o  Encapsulates return results for a stored procedure calls 
             done using the DataStoreComponent (or its derivative)
             
             Usually an instance is created after successful execution of 
              a stored procedure. A failure to execute stored procedure will
              usually throw an exception and return null value for ProcedureResults.
             
             Notes: This does not keep track of "what" stored procedure executed 
              and "what" were the input values. I believe those belong within
              the ProcedureCallContext and is not required.
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.ProcedureResults.InvalidProcedureReturnValue">
            <summary>
            Specifies the value for errored stored procedure return value
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ProcedureResults.#ctor">
            <summary>
            Creates an empty ProcedureResults instance.
            The results will be marked with execution NOT done and no results.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ProcedureResults.#ctor(System.Int32,System.Data.DataSet)">
            <summary>
            Creates a new ProcedureResults with the supplied return value and dataset
            </summary>
            <param name="retVal">return value from stored procedure. 
                interpretation of the value is subject to individual stored procedures
            </param>
            <param name="results">DataSet returned as a result of executing stored procedure</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ProcedureResults.SetResults(System.Int32,System.Data.DataSet)">
            <summary>
            Stores the results provided none is already stored.
            </summary>
            <param name="results">new set of results to be stored</param>
            <param name="retVal">return value from stored procedure.</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ProcedureResults.MergeResults(Microsoft.Subscriptions.Data.ProcedureResults[])">
            <summary>
            Merges the supplied array of ProcedureResults to produce a single
             ProcedureResults object.
            </summary>
            <param name="allResults">array of ProcedureResults containing results
            from executing a method on ALL database instances.</param>
            <returns>single ProcedureResults object containing the summary of method execution</returns>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ProcedureResults.ReturnValue">
            <summary>
            Method returned value - interpretation is subject to specific stored procedure executed.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ProcedureResults.Results">
            <summary>
            Returns the results in the form of a DataSet
            Returned values are organized in whatever form 
                the stored procedure had returned them.
            No attempt is made to parse out data from this DataSet!
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ProcedureResults.ResultsXml">
            <summary>
            Returns the results as an XML structure using the standard DataSet to XML conversion.
            NOTE: for most part the caller should be pretty happy with the returned DataSet
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ProcedureResults.ResultsXmlDocument">
            <summary>
            Returns the results as an XML Document object.
            NOTE: This dynamically creates the XML Document object by linearizing
             the data set into an XML document. Hence getting this value can be 
             inefficient compared to the "Results" property fetch.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ProcedureResults.ResultsXmlDataDocument">
            <summary>
            Returns the results as an XMLDataDocument object.
            NOTE: This creates an XmlDataDocument directly from the data set. Any changes
            made to this XmlDataDocument will be reflectd in the data set as well.
            An exception is thrown if the execution is not done or results are null.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.ProcedureResults.ResultsXmlNavigator">
            <summary>
            Returns the results as an XmlPathNavigator object.
            NOTE: This creates an XPathNavigator object directly from the data set. This
            property provides read-only random-access to the data set. It can also be used
            to perform XSL Transform efficiently.
            An exception is thrown if the execution is not done or results are null.
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreContext">
            <summary>
            DataStoreContext exposes run time information about the current running 
            query.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreContext.Trace(System.Diagnostics.TraceLevel,System.String,System.String)">
            <summary>
            Trace a message and notify all receivers
            </summary>
            <param name="level">The trace level</param>
            <param name="message">The trace message</param>
            <param name="source">The source object of the trace message</param>
        </member>
        <member name="E:Microsoft.Subscriptions.Data.DataStoreContext.OnTraceMessage">
            <summary>
            Type definining the call back method that receivers must implement
            </summary>
        </member>
        <member name="E:Microsoft.Subscriptions.Data.DataStoreContext.OnQueryEnd">
            <summary>
            event for query end
            </summary>
        </member>
        <member name="E:Microsoft.Subscriptions.Data.DataStoreContext.OnQueryStart">
            <summary>
            type definining query start event handler
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.DataStoreContext.Command">
            <summary>
            Gets the current command. The command object is not thread-safe.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.DataStoreContext.Connection">
            <summary>
            Gets the current connection. The connection object is not thread-safe.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.DataStoreContext.LastReturnValue">
            <summary>
            Gets or sets the last return value
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreContext.DataStoreTraceEventHandler">
            <summary>
            Type definining the prototype of the callback method that receivers must implement
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreContext.QueryEndEventArgs">
            <summary>
            Query End Arguments
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreContext.QueryEndEventHandler">
            <summary>
            type defining handler for Query End Event
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreContext.QueryStartEventArgs">
            <summary>
            type defining arguments for query start
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreContext.QueryStartEventHandler">
            <summary>
            type defining delegates for query start
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.DataStoreTraceEventArgs">
            <summary>
            Type defining information passed to the receiver of trace message
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.DataStoreTraceEventArgs.#ctor(System.Diagnostics.TraceLevel,System.String,System.String)">
            <summary>
            Constructor. Create a trace event argument with designated trace level and message
            </summary>
            <param name="level"></param>
            <param name="message"></param>
            <param name="source"></param>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.DataStoreTraceEventArgs.TraceLevel">
            <summary>
            Get the trace level of this message
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.DataStoreTraceEventArgs.Message">
            <summary>
            Get the content of the message
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.DataStoreTraceEventArgs.Source">
            <summary>
            Get the source object of the event
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.EventHandlerSet">
            <summary>
            Summary description for EventHandlerSet.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.EventHandlerSet.AddHandler(System.Object,System.Delegate)">
            <summary>
            Add a delegate for the indicated event with given hash key
            </summary>
            <param name="eventKey"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.EventHandlerSet.RemoveHandler(System.Object,System.Delegate)">
            <summary>
            Removes a delegate for the indicated event with given hash key
            </summary>
            <param name="eventKey"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.EventHandlerSet.Fire(System.Object,System.Object,System.EventArgs)">
            <summary>
            Fire the event
            </summary>
            <param name="eventKey"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.EventHandlerSet.Synchronized(Microsoft.Subscriptions.Data.EventHandlerSet)">
            <summary>
            Synchronized version
            </summary>
            <param name="eventHandlerSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.EventHandlerSet.Dispose">
            <summary>
            Disposing the object
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.EventHandlerSet.Item(System.Object)">
            <summary>
            An index property that gets or sets the delegate associated with the hash key
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.ExcelFileConverter">
            <summary>
            Convert an Excel file to <see cref="T:System.Data.DataSet"/>
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ExcelFileConverter.ReadFromFile(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ExcelFileConverter.ReadFromString(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="xml"></param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.IDataStore">
            <summary>
            Interface for generated data caller
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.IDataStore.Context">
            <summary>
            Gets the current <see cref="T:Microsoft.Subscriptions.Data.DataStoreContext"/>
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.XmlFileConverter">
            <summary>
            Summary description for XmlFileConverter.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.XmlFileConverter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.XmlFileConverter.ReadFromFile(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.XmlFileConverter.ReadFromString(System.Data.DataSet,System.String)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <param name="xml"></param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.SimpleConnectionManager">
            <summary>
            Provides a simple connection manager for use 
             with a single physical instance of logical database.
            This object inherits from <see cref="T:Microsoft.Subscriptions.Data.ConnectionManagerBase"/> and 
             supports method to translate logical (databaseName, partitionId) 
             into SqlConnection object.
            This object implements the IDisposable interface so the users of this
            class can dispose the resources it uses.
            
            No connection caching is done, although underlying ADO.NET does 
             connection pooling for the connections with same connectionString
            NOTE: The class as a whole is NOT multi-thread safe. It is intended
             that the instance of each class is used completely within a single 
             thread and hence no multi-thread protection is built. However, 
             different instances can be used within different threads.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.#ctor">
            <summary>
            Construct a connection manager that talks to localhost
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.#ctor(System.Int32)">
            <summary>
            Construct a connection manager that talks to localhost
            </summary>
            <param name="connectionTimeOut">the connection timeout value in seconds
            </param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.#ctor(System.String,System.Int32)">
            <summary>
            Construct a connection manager that talks to specified server 
            </summary>
            <param name="serverName">the server name the connection manager is connected to</param>
            <param name="connectionTimeOut">the connection timeout value in seconds
            </param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.Finalize">
            <summary>
            Default finalizer, called when this object is garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.#ctor(System.String)">
            <summary>
            Construct a connection manager that talks to specified server
            </summary>
            <param name="serverName"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetConnection(System.String,System.String,System.Int32)">
            <summary>
            Provides a SQL connection based on supplied parameters.
            Since we only have one server for all databases and logical partitions
             this function just returns a single standard connection.
             The hashValue supplied will be ignored completely.
            If a previous connection request was made and that connection was cached,
             then the same connection will be returned!
            </summary>
            <param name="databaseName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="hashValue">identifies the physical partition instance of the logical database</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetAllConnections(System.String,System.String)">
            <summary>
            Provides an array of SQL connections for the 
             the individual physical partitions of a single database resource
            </summary>
            <param name="databaseName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.CloseConnections">
            <summary>
            Closes any open connections held by the Connection manager.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetPhysicalInstanceId(System.String,System.Int32)">
            <summary>
            Gets the physical instance id given a logical partition id
            </summary>
            <param name="storeName">name of the catalog</param>
            <param name="hashValue">logical partition id</param>
            <returns>physical instance id</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetCommand(System.String,System.String,System.Int32)">
            <summary>
            Exposed from ISpilConnectionManager interface.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetAllPhysicalInstances(System.String)">
            <summary>
            Given a logical database name it provides a collection object
             that consists of "key" or "physical Instance Id" required to access
             the individual physical instances.
            </summary>
            <param name="logicalDatabaseName">name of the logical database</param>
            <returns>a collection object consisting of a set of physical instance IDs</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetConnectionForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            Given the (logical database, physical instance id/key) this function
             returns a connection object for accessing the specific database.
            </summary>
            <param name="logicalDatabaseName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="physicalInstanceId">ID or key for specifying the target physical instance</param>
            <returns>an interface to the database connection object</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetCommandForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            Exposed from ISpilConnectionManager interface.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.GetDataAdapterForCommand(System.Data.IDbCommand)">
            <summary>
            Exposed from ISpilConnectionManager interface.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.Dispose">
            <summary>
            This method should be called explicitly by the user to close the
            resources the connection manager uses.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.Dispose(System.Boolean)">
            <summary>
            The common method that does the actual clean up. This method is protected
            because the connection manager can be inherited by other connection managers.
            </summary>
            <param name="disposing">the flag to indicate whether to dispose explicitly
            or by GC</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.SimpleConnectionManager.CachedConnectionList.AddConnection(System.String,System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            Adds the provided connection combo to the lookup table.
            No duplicate checks are made.
            </summary>
            <param name="databaseName"></param>
            <param name="connString"></param>
            <param name="conn"></param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.WebStoreConnectionManager">
            <summary>
            Provides a webstore connection manager for use 
             with a webstore application.
            This object inherits from <see cref="T:Microsoft.Subscriptions.Data.ConnectionManagerBase"/> and 
             supports method to translate logical (storeName, partitionId) 
             into WstConnection object.
            This object implements the IDisposable interface so the users of this
            class can dispose the resources it uses.
            
            The webstore connection is cached based on the storeName and the connection string
            This class is not thread-safe.
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.WebStoreConnectionManager.connCache">
            <summary>
            Local connection cache.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.#ctor(System.Int32)">
            <summary>
            Construct a webstore connection manager
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.Finalize">
            <summary>
            Default finalizer, called when this object is garbage collected.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetCachedConnection(System.String,System.String)">
            <summary>
            Gets the Cached Connection based on Store Name and Connection String
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetConnection(System.String,System.String,System.Int32)">
            <summary>
            Provides a WST connection based on supplied parameters.
            Since webstore handles the logical partitions at command level,
             this function just returns a single webstore connection.
             The hashValue supplied will be ignored completely.
            If a previous connection request was made and that connection was cached,
             then the same connection will be returned!
            </summary>
            <param name="storeName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="hashValue">identifies the physical partition instance of the logical database</param>
            <returns>A webstore connection to the application</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetAllConnections(System.String,System.String)">
            <summary>
            Returns webstore connections to an application as an array.
            Because webstore manages connection at the application level, only one connection is
            actually returned by this function. 
            </summary>
            <param name="storeName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <returns>A webstore connection to the application, packaged as an array for interface conformance.</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.CloseConnections">
            <summary>
            Closes any open connections held by the Connection manager.
            This method is not thread safe.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetPhysicalInstanceId(System.String,System.Int32)">
            <summary>
            Gets the physical instance id given a logical partition id and store name.
            </summary>
            <param name="storeName">name of the webstore application</param>
            <param name="hashValue">logical partition id</param>
            <returns>physical instance id corresponding to the logical hashValue</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetCommand(System.String,System.String,System.Int32)">
            <summary>
            Exposed from ISpilConnectionManager interface.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetAllPhysicalInstances(System.String)">
            <summary>
            Given a logical database name it provides a collection object
             that consists of "key" or "physical Instance Id" required to access
             the individual physical instances.
            </summary>
            <param name="storeName">name of the logical database</param>
            <returns>a collection object consisting of a set of physical instance partition numbers.</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetConnectionForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            Given the (logical database, physical instance id/key) this function
            returns a connection object for accessing the specific webstore application.
            Because webstore maintains a connection at the logical application level, the physical
            instance id is ignored. 
            </summary>
            <param name="storeName">name of the logical database</param>
            <param name="connectionString">additional parameters required to access the database</param>
            <param name="physicalInstanceId">ID or key for specifying the target physical instance</param>
            <returns>an interface to the database connection object</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetCommandForPhysicalInstance(System.String,System.String,System.Object)">
            <summary>
            Exposed from ISpilConnectionManager interface.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.GetDataAdapterForCommand(System.Data.IDbCommand)">
            <summary>
            Exposed from ISpilConnectionManager interface.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.Dispose">
            <summary>
            This method should be called explicitly by the user to close the
            resources the connection manager uses.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.WebStoreConnectionManager.Dispose(System.Boolean)">
            <summary>
            The common method that does the actual clean up. This method is protected
            because the connection manager can be inherited by other connection managers.
            </summary>
            <param name="disposing">the flag to indicate whether to dispose explicitly
            or by GC</param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.TransactionDispenser">
            <summary>
            encapsulates the gross logic of having to dispense transaction from DTC directly
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.TransactionDispenser.ITransactionDispenser">
            <summary>
            This interface is implemented by the DTC to create transactions
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.ITipTransaction">
            <summary>TIP (transaction internet protocol) transaction interface</summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ITipTransaction.Push(System.String,System.String@)">
            <summary>send TIP push command</summary>
            <param name="remoteTmUrl">destination transaction manager's TIP URL</param>
            <param name="remoteTxUrl">TIP URL</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.ITipTransaction.GetTransactionUrl(System.String@)">
            <summary>Get the TIP URL of this transaction</summary>
            <param name="localTxUrl">the TIP URL</param>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.TransactionScope">
            <summary>
            Specifies the scope of transaction that is supported by the transaction wrapper. SingleSqlDatabase
            transactions are much faster than DTC transactions, but cannot span multiple databases.
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.TransactionScope.None">
            <summary>
            Does not use any transactioning within this context. This scope may be contained within other transaction scopes, but
            other transaction scopes may not be contained within it.
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.TransactionScope.DTC">
            <summary>
            Uses the DTC to coordinate the transaction commit
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.TransactionScope.SingleSqlDatabase">
            <summary>
            Uses native SQL transactions to provide support on a single database
            </summary>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.TransactionWrapper">
            <summary>
            A smartpointer type class for creating transaction contexts. These may be nested
            as many levels deep as is wanted. However, only the final commit will commit if all
            of the nested transactions called SetComplete.
            
            This class is designed to be used with the "using" statement in C#. Unpredictable behaviour
            will result if this object is created in a different manner.
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.TransactionWrapper.m_hasCommitted">
            <summary>
            Records wether SetComplete was called. If the wrapper is destroyed before this flag is set, we assume that the
            transaction was aborted.
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.TransactionWrapper.m_isRoot">
            <summary>
            Records whether this is the root wrapper. Only the root wrapper actually commits the transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.#ctor">
            <summary>
            Constructs a new TransactionWrapper with the default scope of DTC and isolation level
            of ReadCommitted.
            
            TransactionWrappers should always be created with the
            "using" statement in order to ensure proper transactional behaviour.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.#ctor(Microsoft.Subscriptions.Data.TransactionScope)">
            <summary>
            Constructs a new TransactionWrapper with the isolation level
            of ReadCommitted. 
            
            TransactionWrappers should always be created with the
            "using" statement in order to ensure proper transactional behaviour.
            </summary>
            <param name="scope">Specifies the scope of the wrapper. DTC scoped transaction can
            contain Sql scoped transaction, but not vice versa.</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.#ctor(Microsoft.Subscriptions.Data.TransactionScope,System.Data.IsolationLevel)">
            <summary>
            Constructs a new TransactionWrapper. 
            
            TransactionWrappers should always be created with the
            "using" statement in order to ensure proper transactional behaviour.
            </summary>
            <param name="scope">Specifies the scope of the wrapper. DTC scoped transaction can
            contain Sql scoped transaction, but not vice versa. None scoped transactions can be wrapped inside any
            transaction, but no transactions may be wrapped inside None scoped transactions</param>
            <param name="isoLevel">Specifies the isolation level of the transaction. If this transaction
            is contained within another transaction, the isolation level must be equal or lower than the
            outer transaction, or we throw an exception. Ignored for None scoped transactions.</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.Dispose">
            <summary>
            Frees a TransactionWrapper. Dispose MUST be called before the finalizer happens, or very
            bad things will happen.
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.OpenConnection(System.String)">
            <summary>
            Backwards compatibility wrapper for OpenConnection that returns a SqlConnection 
            </summary>
            <param name="connectionString">The connection string to use</param>
            <returns>The connection we have created</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.OpenConnection(System.String,System.Type)">
            <summary>
            Creates and opens a connection of user specified type, taking into account the current transactional state. 
            
            If we are currently within a DTC transaction, the connection is automatically enlisted in 
            that transaction.
            
            If we are within a Sql transaction, we begin a transaction. Note that only one unique connection
            is allowed within a Sql transaction (since we cannot span databases), so we throw an exception
            if this is called for more than one unique connection string.
            
            If we are not within a transaction, we simply create the SqlConnection and open it.
            
            We must use the static CloseConnection method to close the connection, otherwise DTC will hang
            when trying to commit the transaction.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="connectionObjectType">The type of connection to create</param>
            <returns>The connection we have created</returns>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.InitCommand(System.Data.IDbCommand)">
            <summary>
            Creates a new SqlCommand object. If we are within a Sql transaction, we also set the
            Transaction field of the SqlCommand to the current transaction object. 
            
            If we are within a DTC transaction or not within a transaction, we just create a new 
            SqlCommand.
            </summary>
            <param name="command">The command to initialize</param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.CloseConnection(System.Object)">
            <summary>
            Closes the connection if we are not within a transaction. If we are in a transaction, Dispose
            will close the connection after it has been committed or rolled  back.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.AssertNoTransaction">
            <summary>
            Thows an exception if the current thread is running within a transaction
            </summary>
        </member>
        <member name="M:Microsoft.Subscriptions.Data.TransactionWrapper.SetComplete">
            <summary>
            This method should be called just before the end of the "using" block. It lets the TransactionWrapper
            know that the block completed without throwing an exception. If SetComplete was not called
            before Dispose was called, then we automatically abort the transaction.
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.TransactionWrapper.CurrentScope">
            <summary>
            Returns the current scope we are running as
            </summary>
        </member>
        <member name="P:Microsoft.Subscriptions.Data.TransactionWrapper.CurrentTipUrl">
            <summary>get the TIP url of the current DTC transaction</summary>
            <remarks>The current thread's transaction is used to get the TIP URL. Make
            sure you have a running DTC transaction before calling this method.</remarks>
            <returns>TIP URL</returns>
            <exception cref="T:System.InvalidOperationException">if no DTC transaction is running
            </exception>
        </member>
        <member name="T:Microsoft.Subscriptions.Data.TransactionWrapper.TransactionRootData">
            <summary>
            Contains all the data that should be stored on the thread local context
            </summary>
        </member>
        <member name="F:Microsoft.Subscriptions.Data.TransactionWrapper.TransactionRootData.m_connections">
            <summary>
            stores all the connections we have retrieved so far
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\readme.txt ===
Description:
This directory contains the files necessary to use the Subscription Platform Service (SPS) that we use for billing.

Original Location: 
\\spgbld\Latest-XR3-Billing1\retail\spk

Steps Taken:
1) Install spk.msi.
2) Copy billing.pso.dll from samples\Subscription_Platform_API\C#\TestConnection to bin.
3) Rename samples\Service_Provider_API\C# to samples\Service_Provider_API\CSharp since Source Depot doesn't like '#' in file names.
4) Rename samples\Subscription_Platform_API\C# to samples\Subscription_Platform_API\CSharp since Source Depot doesn't like '#' in file names.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\docs\Partner_On_Boarding_Process_Detail.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Role of the Partner PM Title _PID_HLINKSRole of the Partner PM rajkupp Normal.dot Rishi Rana Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags PersonName http://www.microsoft.com wBO*LPartner On-Boarding Process Detail Lead Partner PM is responsible for Being the first contact point in SPS for all new partners. Tracking key events across all partners, i.e. when they come on, changes in plans, partner manager for partners.  Coordinating communication of changes in plan with respective to partner on boarding to SPG and changes in SPG plan to these partners. Lead Partner PM should be copied on all communication with partners. Partner PM is responsible for Building communication channel between SPG and Partners in conjunction with BizOps. Owns the partner relationship on behalf of SPG and is responsible for their success. Defends DCR s and Bugs for Partners. Phase SPG Partner PM Responsibilities Tenant/Service Provider PM Responsibilities BizOps SPG Feature PM SPS Release PM Qualification Phase Upon receipt of a request from a prospective partner sets up a meeting to review On Boarding checklist with partner and BizOps. Reviews high level requirements against current SPS specs. Consults with the feature PM as needed. Identifies high level blocking/missing functionality. Provides a general overview of the SPS 2.5 system to the partners. Suggests an integration approach Identifies migration requirements if any. Reviews partner offerings with BizOps. Tries to ensure that partner plans and strategy are aligned with that of other partners. Creates a one page summary of requirements, blocking functionality and any other issues for all the stakeholders. Meets with key stakeholders  to review the implications of bringing on this partner and arrive at a go/no go decision.  Fills out the partner on boarding checklist Fills out the Technical Requirements spec.  Builds tentative dev and release schedules. Upon receipt of a request from a prospective partner sets up a meeting with partner and SPG Hands over initial information to partners. Reviews business plan, offerings, taxation, and markets. Walkthrough the Tenant on boarding checklist to understand the partners business model and plans Walkthrough the Tenant Integration Guide, including; review of business policies (e.g Billing Terms of Use), financial policies (e.g. bad debt write offs), reporting requirements, etc. No requirements in this phase Requirement Phase Creates a block of credit card #s and gives it to the partner for their use Creates and maintains the partner sharepoint site. Creates a new DL for partner specific discussions. Adds partner contacts to the SPKDISC alias. Identifies the key PM, Marketing, BizDev, Dev, Test, BizOps, Tech Ops and Ops contacts on both teams. Facilitates partner and SPS architecture and design meetings. Reviews partner functional specs with key SPS dev, test and PM owners. Reviews partner requirements with key SPS PM, dev and test owners. Reviews migration specs with key SPS PM, dev and test owners. Creates DCR s for blocking/missing functionality. Assigns to Feature PM for details and specs. Justifies the need for a DCR in the DCR review process. Tries to ensure that partner plans and strategy are aligned with that of other partners. Reviews partner offerings with BizOps. Agree and track to milestones, launch dates etc Manages/maintains on-boarding issues log Builds consolidated on-board schedule and coordinates with extended groups (i.e. Tenants, Customer Support, MSN Ops, SPG, BizOps, etc) Manage status reporting/communication to all parties involved with on-boarding (i.e. Tenants, Customer Support, MSN Ops, SPG, BizOps, etc).  This is on-going. Provides functional specs for proposed system. Provides detailed requirements for the SPS system. Defines Draft Service Components. Signs off that the current SPS specifications and DCR s (if needed) would meet requirements. Provides migration requirements (if needed). Provides detailed plan describing key milestones and completion dates. Provides capacity requirements and volume timelines. Offering Manager fills out the Offering Configuration Spec (OCS) Offering Manager validates the information in OCS by entering it in the PCT. Reviews detailed requirements including partner referrals and payments, financial policies and reporting. Specs the DCR and provides dev and test estimates. Assist in planning for connectivity Provides a guest 1-box environment with sample offerings for the partner to write sample code and get a feel of the system. This environment will have minimal SPG support.  Schedules the DCR Development Phase (In Manga) Identifies Training / Documentation / Environment needs for the partner dev teams. Works with the Release Manager to have Tech Ops setup a 1-Box environment for the partners. Ensures that the PCF file provided by BizOps is loaded by Tech Ops on the 1-Box environment. Provides the partner with 1-Box and PSO and other relevant information. Reviews detailed design document with key SPS dev, test and PM resources. Gets signoff from SPS PM, dev and test owners for detailed integration design specs. Gets signoff from SPS PM, dev and test owners for detailed migration design specs (if needed). Creates DCR s based on partner s request. Assign to Feature PM. Justifies the need for a DCR in the DCR review process. Identifies key issues and proactively work to resolving them. Provides Bi-weekly status emails to SPGLEADS alias. Facilitates discussion between the partner's CSR staff and CSS Phoenix team who will be responsible for supporting subscription issues (billing, enabling/disabling Fills out the Service Component Template  Provides detailed design for integrating with the SPS system. Provides migration specs. Requests new DCR s if required. Files Bugs against SPS system. Updates capacity requirements and volume timelines. Provides a PCF file for the partner offerings entered in the PCT. Works with partner to integrate into their offering process. Establishes a process to review new offerings so that they are valid against the SPS system. Reviews design specs Specs the DCR and provides dev and test estimates. Co-ordinate Dev, Test resources to implement DCR Reviews bugs filed. Reviews requirements (capacity) and volume timelines Maintains tenant integration beds Schedules the DCR Identifies resources and schedules prioritized bug to be fixed. Regular ongoing communications to all partners on schedule, adds, cuts and current status. Test Phase in Manga Works with SPS stress testing team to ensure that partner usage scenarios are represented in the usage mix. Works with Ops to transition partner to the pre-prod environment Defines the test and success criterion. Provides final usage profile and expected capacity requirements. On an ongoing basis files bugs against SPS system. Interacts with Tenant on an ongoing basis to ensure that any new offerings are added to the test environment on a weekly basis. Finalize and freeze offerings. Reviews bugs filed. Sets up and maintains test environment Reviews usage profile and capacity requirements. Pre-Production Phase Ensures that partner is not blocked on any P1 SPS bugs. Works with the partner and Ops to define a cutover plan for going into production. Works with the client to identify key contacts for the production bug resolution process. Works with partner and Ops to get ready for production. Communicates escalation process and identifies contacts on SPS and partner teams. Signs off that they are ready to go live with SPS system. (no outstanding P1 bugs) Verifies that the finalized offerings are in pre-prod. Verifies that BizOps process are in place to bring this tenant to production. Maintains pre-prod environment.  Assists in partner soak testing Post Production Phase Documents key lessons learned. If a new release is part of the partner next steps, starts again at the qualification phase. Defines future plans. Co-ordinates loading new offerings into the production environment. Manage day-to-day business issues with partner Co-ordinates with SPG for partner-related bug fixes, ongoing support issues. SPG Partner PM Responsibilities Upon receiving request from a prospective partner, sets up a meeting to review on-boarding checklist with partner and BizOps.  Provide qualifications doc based on partners requirements for integration If the partner is a Service Provider ensures to get a high level spec on various service instances being provided by SP. This is done in order to get an overall understanding on what the services are how other Tenants can leverage these services. Also, provides a brief overview of Service Provider checklist If a Tenant is interested in bundling of other services make sure to have point Tenant to details on all available services by available Service Providers.  Also, provides a brief overview of Tenant on-boarding checklist. Above all, provide high level overview of current platform and what is supported Works with partner in defining checklists and Technical requirements doc from the partners (after BizOps have reviewed Tenant On boarding and business model) based on high level requirements and key partner scenarios.  Also, need to validate these requirements and scenarios against feature specs Engage Feature PMs on as need basis to provide clarification and support on scenarios. Identifies any blocking functionality and work with Feature PM to provide a workaround or suggest changes to platform Provides overview of the high level design and suggesting integration approach Identifies migration requirements IF ANY Reviews to provide feedback on partner offerings after Bizops have reviewed business plan, offerings, taxation, and target markets Upon receiving tentative schedule from partner, ensures that partner plans and strategy are aligned with other partners Works with partner to define key deliverables and milestones (eg. integration doc, CC-date, RTM-date, migration-date, etc.) Conveys information to all other Tenant Managers on the progress Creates a one page summary of requirements, blocking functionality, and any other issues for all Tenant Managers Meets with key stakeholders (CUDIR, Karl, BizOps Partner-manager) to review the implications of bringing on this partner and arrive at a go/no go decision. Once the decision is made for partner to integrate with SPS, enters relevant information for the partner on the template used on Sharepoint site for partners.  Once a partner is qualified works with dev to generate a block of credit cards #s to be used by partner when accessing SPG-TIE environment  Upon receiving functional specs from partner team, posts the links on partner page to their specs on partner subweb Creates a new DL for partner specific discussions. This DL should contain key folks involved in integration with the partner.  Also, add partner contacts to the SPKDISC alias. Identifies key PM, Marketing, BizDev, Dev, Test, BizOps, Tech Ops and Ops Upon receiving details from BizOps on the OCS (Offering Configuration Spec) along with partner referrals and payments of financial policies   Facilitates design and architecture meetings between SPS and partner teams Reviews partner requirement details with SPS key players on PM, Dev, Test teams  Reviews migration spec if any between SPS and partner team Works with Feature PM to craft required DCRs if any or suggest workarounds for desired feature set Provides integration doc and sign-up flow  Ensures Service Provider checklist and template is filled and available on the partner subweb Continues to ensure that partner plans and strategy are aligned with that of other partners. Obtains agreements on milestones, launch dates etc and tracks them Manages/maintains on-boarding issues log Builds consolidated on-board schedule and coordinates with extended groups (i.e. Tenants, Customer Support, MSN Ops, SPG, BizOps, etc) Manage on going status reporting/communication to all parties involved with on-boarding (i.e. Tenants, Customer Support, MSN Ops, SPG, BizOps, etc) Identifies Training / Documentation / Environment needs for the partner dev teams Upon getting OK from TechOps on review of requirements for the partner, works with the Release Manager to have Tech Ops setup a 1-Box environment for the partners Upon getting a PCF file from BizOps, ensures PCF file is loaded by TechOps on the 1-Box environment  Upon receipt of migration specs from partners (if any)  gets signoff from SPS PM, Dev, Test on detailed designs in partner s specs Upon receiving requirements from partners, creates DCRs based on needs arising due to migration Works with release PM to get the DCRs addressed and understand the impact on the schedule because of this.  Upon receiving news on cuts/adds to the SPS feature set, ensures information is distilled changes affecting partners Ensures feature specs for SPS are updated with all changes and it is being communicated to partners. This information is based on feedback obtained from Feature PM who is responsible for  Identifying change and its impacts. Upon receiving new requirements from partners, ensures all needs are addressed accordingly Ensuring nothing slipping through the cracks and new requirements have either a workaround or is entered in RAID for SPS s vNext Provides Bi-weekly status emails to SPGLEADS alias. Facilitates discussion between the partner's CSR staff and CSS Phoenix team who will be responsible for supporting subscription issues (billing, enabling/disabling) Upon receiving definition on test and success criteria from partner PM Works with SPS test team to ensure all scenarios are being tested internally and have alert partners with blocking issues. Upon receiving final usage profile and expected capacity requirements from partners  Works with SPS stress testing team to ensure that partner usage scenarios are represented in the usage mix. Works with Ops to transition partner to the pre-prod environment Ensure that partner is not blocked on any P1 issues Upon receiving confirmation from BizOps on finalization on offerings, get agreement with partner to freeze offerings. (this should have already been defined as a Tentative date in schedule) Works with the partner and Ops to define a cutover plan for going into production. Works with the client to identify key contacts for the production bug resolution process. (i.e. who gets contacted first and what is the QFE process) Upon receiving and OK from BizOps to go in production (BizOps will be reviewing everything is go for launch), works with partner and TechOps to get ready for production. Also get a sign off from partner for the system is ready to go live Make sure all release criteria is met and scenarios are passing 100% Communicates escalation process and identifies contacts on SPS and partner teams Post mortem of lessons learned and provides feedback on changes to this document Tenant/Service-Provider PM Responsibilities Upon getting an overview of the platform the SPG s partner PM and initial information from BizOps contact provides Provides details for on boarding checklist Provides details on technical Requirements in spec or doc and reviews it with SPG partner PM and BizOps partner-mgr.  Reviews Tenant Integration Guide, including review of business policies (e.g. Billing Terms of Use), financial policies (e.g. bad debt write offs), reporting requirements, etc. from BizOps Reviews business plan, offerings, taxation, and markets.  Upon having a solid understanding (via meetings and/or email discussion with SPG-Partner PM) of the scenarios and support required from SPG.   Provides a tentative dev and release schedules in conjunction with SPG s schedule Provides any special requirements and gets an overview of support of scenarios provided by the current release of SPS  Upon getting a go/no go decision from both SPG and partner team  Review SPS s functional specifications and ensures there are no ambiguities on type of support provided by SPS Provides functional spec (integration doc) for proposed system along with detailed requirements for SPS system Upon receiving feedback from BizOps on OCS (Offering configuration spec)  Reviews detailed requirements including partner referrals and payments, financial policies and reporting. Gets confirmation from BizOps on validation of this via PCT tool Upon receiving feedback from SPG partner and feature PM on requirements work on DCRs (if required) ensures it meet the needs for integration to begin Provides migration requirements if any Upon reviewing SPS s schedule, works with SPG-partner PM to provide detailed plan describing key milestones and completion dates Also provides capacity requirements and volume timelines Upon reviewing details on 1-box environment Obtains confirmation from TechOps and SPG-partner PM on support (minimal from SPG) of these scenarios that need support on 1-box environment Works with SPG-partner PM to address need on training, demos, documentation (if required) by the team Works with SPGpartner PM to fill details in Service Component Template and Service Provider checklist (see template on   HYPERLINK "http://spg/spg%20partners/Lists/Service%20Component/DefaultView.htm"  http://spg/spg%20partners/Lists/Service%20Component/DefaultView.htm Provides detailed design on integration with SPS platform Also provide migration specs if any Obtains feedback from SPG-partner PM who in turn obtains a sign off from features team in SPS on proposed integration design Provides partner PM with any DCRs required for integration After getting and OK from TechOps on capacity requirements and volume timelines (provide updates if any) Starts development on this environment Files bugs against SPS and flagging blocking issues.  Notify SPG-partner PM for faster turnaround Also monitors SPKDISC alias for comments from other partners on common issues and how to best resolve them Upon completion of development, identify test and success criteria and get an agreement with SPG-partner PM Provides details on error codes (if a service provider) so that other tenants can interact accordingly if they want to bundle this particular service Works with SPG-partner PM to notify and get any other details from service provider before proceeding with bundling of services Obtains a block of range for error codes from SPG-Partner PM Works with BizOps on finalizing and freezing of changes to offerings After ensuring that all requirements are set and scenarios are passing 100% Signs-off on the being ready to go live on SPS platform Obtains verification from Bizops on processes being in place for tenant to go in production Works with partner PM on post-mortem feedback and define future plans BizOps Responsibilities Upon receiving request from a prospective partner sets up a meeting to review On Boarding checklist with SPG-partner PM and BizOps.  Hands over initial information to partners of what SPS does and supports. Reviews business plan, offerings, taxation, and markets. Provides a walkthrough of Tenant on boarding checklist to understand the partners business model and plans Provides a walkthrough the Tenant Integration Guide with partners, including; review of business policies (e.g Billing Terms of Use), financial policies (e.g. bad debt write offs), reporting requirements, etc. As a part of Qualifications phase Reviews functional specs of partners Reviews detailed requirements including partner referrals and payments, financial policies and reporting needs. Upon moving into the requirements phase Offering Manager reviews and provides feedback on checklist Offering Manager fills out the Offering Configuration Spec (OCS) Offering Manager validates the information in OCS by entering it in the PCT Upon receiving a filled out the Service Component Template and detailed design for integrating with the SPS system from partner.  A service component template will be part of the PARTNER SUBWEB on   HYPERLINK "http://spg"  http://spg  where details of service components should be filled in the SPG-Partner PM upon obtaining requirements from partners Offering Manager reviews and provides feedback on checklist and then provides a PCF file for the partner offerings entered in the PCT. Works with partner to integrate into their offering process. Establishes a process to review new offerings so that they are valid against the SPS system. While the SPG-partner PM works on integration details with partners  Interacts with Tenant on an ongoing basis to ensure that any new offerings are added to the test environment on a weekly basis. Finalize and freeze offerings. Alerting on any changes necessary based on changes to platform due to changes in financial policies, billing terms, taxation, etc. Upon receiving confirmation on partner ready to go in production Verifies that the finalized offerings are in pre-prod. Verifies that BizOps processes are in place to bring this tenant to production. Once the partner in production  provide post-mortem feedback to SPG-partner PM Co-ordinates loading new offerings into the production environment. Manage day-to-day business issues with partner SPG Feature PM Responsibilities Upon reviewing requirements from Tenants or Service Providers Determine how SPS could meet the needs of the scenarios Work with partner PM to define any DCRs required Upon receiving detailed design/architecture specs of partners reviews and provides feedback on the spec Continues to work with SPG-partner PM where necessary to craft DCRs required or suggest workarounds Ensures specs are kept up to date with adds/cuts and schedule changes and notifies to SPKDISC where necessary (i.e. changes effect partners) Keeps an eye out for the bugs or notification from SPG-partner PM on bugs assigned and provide resolution or estimate on resolution of bug Continue to provide feedback on design specs of partners and suggestions where necessary TechOps Responsibilities Reviews deployment docs and its requirements from SPG specs and ensures all details are in the spec If not alert the spec-owner for providing missing details Upon reviewing notification on GO for a Tenants or Service Providers Provides assistance in planning for connectivity and environment setup issues Provides ETAs on requirements after obtaining needs of partners (eg.  does partner need a special box setup in Manga and what are the various boxes needed moving forward from Test/Dev environment to Pre-Prod and Prod) After receiving a notification from SPG-Test and partner PM  Maintains and provides 1st tier support for the TIE environment for the partners. This environment will have minimal SPG support. Ensures partner machines can be connected/reachable via connection scripts provided to partners in SPK Upon receiving requirements (capacity) and volume timelines, review and provide feedback Obtains agreement with SPG-partner PM and partners involved Maintains TIE (Tenant Integration Environment) and provide SLAs for assistance Also provide off hours contact if required Upon receiving final usage profile and expected capacity requirements Reviews and provide feedback to get an agreement Sets up and maintains test environment Upon receiving a sign off from partners on the platform move to pre-production environment Maintains pre-prod environment.  Assists in partner soak testing (if required) Once partner in production, provide post-mortem feedback to SPG-partner PM Continue to work on an on-going basis  Co-ordinates with SPG for partner-related bug fixes Any other support issues SPG-Release PM Responsibilities After the partner has been qualified works with SPG-partner PM to schedule any DCRs necessary for their release Once the partner is completed the requirements and SPG-partner PM has shared all the documentation of requirements works with SPG-partner PM to schedule any other DCRs that are required Identifies resources and schedules prioritized bug to be fixed. Regular ongoing communications to all partners on schedule, adds, cuts, current status and TIE bed status.  Currently I think the key stakeholders would be Craig, Doug, Bharat, Ken, Rajesh, Partner PM, Feature PM (s), Girish, Andrew, Current Release Manager (Lena), Michael Sharp and Karl Hebert.  The on boarding checklist talks about Business Plan, High level requirements for SPS System, Roadmap, List of Offerings, Anticipated transaction volume, US only and/or Global markets (which countries), Currencies, Localization required, Taxation requirements, Physical fulfillment. In addition if the partner is a service provider the list of service components.  There will be a separate bug creation and resolution process.  I am calling this out as this process will be different from the bug process in the development/test environment. This would impact a live environment and maybe we would call this one out separately.  Lena would need to define what is needed. gdl0@ gdl0@ gdZri gdE(S gdXv# gdZri gdE(S ziziziz ctctctQtc
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\docs\Tenant_Onboarding_Questionnaire.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation The following document contains is a checklist of questions that should be asked of each  Title _PID_HLINKS _AdHocReviewCycleID _EmailSubject _AuthorEmail _AuthorEmailDisplayName _ReviewingToolsShownOnce Billing | Provisioning | Member Service and Personal.NET dougw@microsoft.com Doug Wood (SPD)The following document contains is a checklist of questions that should be asked of each  Timmy Woods Normal.dot Shyam Krishnamoorthy Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PlaceType urn:schemas-microsoft-com:office:smarttags PlaceName urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags stocktickerIntroduction The following document is a questionnaire of General & Business Operations questions that should be addressed between the Subscription Platform team and each tenant when going through the qualification phase of the on-boarding process. After the tenant has completed the questions, an assessment can be made as to any gaps that exist between the tenant s billing requirements and the supported features. Table of Contents  TOC \o "1-3" \h \z \u   HYPERLINK \l "_Toc535830659"  Introduction  PAGEREF _Toc535830659 \h   HYPERLINK \l "_Toc535830660"  Table of Contents  PAGEREF _Toc535830660 \h   HYPERLINK \l "_Toc535830661"  Contact Data  PAGEREF _Toc535830661 \h   HYPERLINK \l "_Toc535830662"  Tenant  PAGEREF _Toc535830662 \h   HYPERLINK \l "_Toc535830663"  Service Provider  PAGEREF _Toc535830663 \h   HYPERLINK \l "_Toc535830664"  Tenant Questions, Actions and Information  PAGEREF _Toc535830664 \h   HYPERLINK \l "_Toc535830665"  General  PAGEREF _Toc535830665 \h   HYPERLINK \l "_Toc535830666"  Offer Management  PAGEREF _Toc535830666 \h   HYPERLINK \l "_Toc535830667"  Account Management  PAGEREF _Toc535830667 \h   HYPERLINK \l "_Toc535830668"  Customer Support  PAGEREF _Toc535830668 \h   HYPERLINK \l "_Toc535830669"  Partner Deals  PAGEREF _Toc535830669 \h   HYPERLINK \l "_Toc535830670"  Migration Tasks  PAGEREF _Toc535830670 \h  Contact Data Tenant Tenant Name Tenant Description Contact Details Alias Phone Program Management Development Testing Technical Operations Business Operations Business Development Marketing Service Provider Please make additional copies of this table for each Service Provider that you have SP Name SP Description Contact Details Alias Phone Program Management Development Testing Technical Operations Business Operations Business Development Marketing Tenant Questions, Actions and Information This section addresses the questions and actions that the Subscription Platform team should address when going through the on-boarding process. The Subscription Platform team will walk the tenant through this document to ensure full understanding on the tenant s part. General Are you a Tenant or a Service provider? Tenants offer services to customers and as such define the product plans and enable a billing relationship with the customer directly, or act as a proxy for the customer. Service providers provide services for others to provision and sell to users. Most tenants are also service providers since they often offer their own services along with others.  FORMTEXT  [click here and type] Business model: Describe the overall business model, or provide documentation/links/etc that will provide an overview of the business model.  FORMTEXT  [click here and type] At what stage in your VP approval process are you?  FORMTEXT  [click here and type] What is the target customer segment (Consumer, SORG, MORG, LORG)?  FORMTEXT  [click here and type] What are the revenue targets/projections?  FORMTEXT  [click here and type] What are the subscriber targets/projections?  FORMTEXT  [click here and type] Any co-branding or partner deals? (If Yes, also go to the   HYPERLINK  \l "_Partner_Deals"  Partner Deals  section)  FORMTEXT  [click here and type] Any existing billing infrastructure? (If Yes, also go to the   HYPERLINK  \l "_Migration_Tasks"  Migration Tasks  section)  FORMTEXT  [click here and type] Vital Statistics: Primary Target Markets: Primary Countries?  FORMTEXT  [click here and type] Primary Languages?  FORMTEXT  [click here and type] What are your launch Currencies?  FORMTEXT  [click here and type] You will need to display a Privacy Statement on your website   who is your contact for Privacy?  FORMTEXT  [click here and type] You will need to display a Terms of Use on your website and require customers to accept it   who is your contact for Terms of Use?  FORMTEXT  [click here and type] Where do you plan to host your application servers (i.e., what Data Center will you use)?  FORMTEXT  [click here and type] Communication & Contacts: Who are the tenant key contacts for Product Planning, Program Management, Development and Test?  FORMTEXT  [click here and type] Do you have subsidiary contacts?  FORMTEXT  [click here and type] Who owns the decision making process?  FORMTEXT  [click here and type] Headcount & Budget  Does tenant have headcount at Corp & the Subsidiaries for Product Planning, Program Management, Development and Test?  FORMTEXT  [click here and type] Have you budgeted for cross-charging of one time project setup costs and ongoing operational & support costs?  FORMTEXT  [click here and type] Schedule What is the planned launch date for each Primary Target Market?  FORMTEXT  [click here and type] What are the intermediate key milestones and dates?  FORMTEXT  [click here and type] What is the current status against work plan?  FORMTEXT  [click here and type] What internal/external dependencies exist?  FORMTEXT  [click here and type] What drivers/events are driving your launch (i.e., holiday season, fiscal year, etc)?  FORMTEXT  [click here and type] Offer Management After answering these initial questions, this section will require a separate meeting with the Tenant Manager and the Product Management team Product Types Describe the types of offerings customers can purchase Single service, bundled services within the tenant, bundled services across tenants (e.g. MSN-IA and bCentral)  Does your service get bundled, upgraded or downgraded from other offers by other teams? E.g. your service is an upgrade to free Hotmail users. Are there any services that aren t permitted with yours (e.g. can t have yours and an Office.Net subscription at the same time)  Are there any physical goods being sold.  (E.g. CDROM distribution, promotional items like hats, t-shirts)   FORMTEXT  [click here and type] Describe the relationships between offerings Base, Upgrades, Downgrades, Add-ons, Renewals  FORMTEXT  [click here and type] Describe the pricing model Customized pricing based on country/language/currency? Multiple price points?  FORMTEXT  [click here and type] Subscription Model Describe the types of subscription available Cycle (i.e., monthly in arrears, yearly cycle forward), Usage (e.g. minutes used), Contracts (year commitment), One-Time Automatic vs confirmed renewals  FORMTEXT  [click here and type] Describe the types of access that the customer will have to use the service Will the customer always need to be online in order to use?  FORMTEXT  [click here and type] Will there ever be downloadable software, executable or other?  FORMTEXT  [click here and type] Will there ever be a physical deliverable?  FORMTEXT  [click here and type] Taxability of the Offering Is the offering in a regulated market (e.g. telephony)?  FORMTEXT  [click here and type] Is the offering treated differently in different countries?  FORMTEXT  [click here and type] Are there any international restrictions or limitations such as services that cannot be or will not be offered in some countries?  FORMTEXT  [click here and type] Projected volume of offers Product/Service 2.5 Launch Date # of offers at launch (low) # of offers at launch (high) Avg # of offers per month (low) Avg # of offers per month (high) Account Management Customer signup Describe the process you expect to use for account sign up Will there be one or multiple primary account holders (i.e., Admins) per account (i.e., responsible for purchasing etc)  FORMTEXT  [click here and type] Describe the relationship between purchaser and consumer of services  FORMTEXT  [click here and type] Describe the process you expect to use to authenticate customers The tenant is expected to use Passport to validate customers  FORMTEXT  [click here and type] How do you expect to provision your services? The tenant is expected to use the SPS provisioning platform (MAPS) and provisioning service framework to accelerate their development.  FORMTEXT  [click here and type] Who are your dev, test, pm contacts for your signup UI  FORMTEXT  [click here and type] Payment Methods Describe the payment types that you would expect to use Credit card, Debit cards, Direct debit, etc Gifting, coupons, sponsored accounts etc For non-immediate payment types (e.g. direct debit), when does the customer get access to the purchased offerings?   FORMTEXT  [click here and type] Bill Presentment Describe what you expect to use to present billing information Online Statement (OLS) The OLS is generated once a month   based on the billing anniversary date (i.e., account creation) Is OLS history required? For how long? Tax Invoice Only used where required by law  FORMTEXT  [click here and type] Who are your dev, test, pm contacts for your bill presentment UI  FORMTEXT  [click here and type] Financial Operations & Management Reporting Describe any unique statutory/legal requirements Any unique cash flow requirements? Reporting support P&L reporting for subs Partner reporting and payments Credit management and bad debt collection, Dunning letters Credit card Chargebacks  FORMTEXT  [click here and type] Customer Support After answering these initial questions, this section will require separate meeting with the Tenant Manager and the Customer Support team Support Infrastructure Who are your dev, test, pm contacts for your support application  FORMTEXT  [click here and type] What do you wish to offer for Billing and Account support Self serve is first point of contact For Email, Telephone, Chat, uses single point of contact for all tenants All locations and languages? Credit card statement will display  Microsoft Online Srvcs  and one telephone number  FORMTEXT  [click here and type] What are your plans for technical product support?  FORMTEXT  [click here and type] Customer signups Do you expect CSRs to be involved in any aspect of the sign up process? Redirect to the website Remote Account Creation Create Billing Accounts Create Passport accounts for customers  FORMTEXT  [click here and type] Partner Deals Structure of deals Who is your business development contact or person in charge of brokering deals?  FORMTEXT  [click here and type] Does Microsoft resell technology that is purchased from a partner?  FORMTEXT  [click here and type] Does the Partner bill on behalf of Microsoft?  FORMTEXT  [click here and type] What is the remuneration mechanism? Frequency of payments to be made  FORMTEXT  [click here and type] Account Management Who owns the customer relationship?  FORMTEXT  [click here and type] Is co-branding of the OLS required?  FORMTEXT  [click here and type] Migration Tasks Existing Infrastructure What is the existing infrastructure that you are using for billing?  FORMTEXT  [click here and type] What is your timeline for moving off this infrastructure? Why?  FORMTEXT  [click here and type] How long do you plan to keep the existing infrastructure around for reference?  FORMTEXT  [click here and type] Migration Effort Data Mapping Accounts Subscriptions Payment Types  FORMTEXT  [click here and type] Are there any feature differences between your existing billing system and the SPS?  FORMTEXT  [click here and type] Tenant On-boarding Questionnaire SPS v2.5 Page   PAGE   NUMPAGES  }c_[H plplph_ iea]eaiJ okgkgkgkgkgk jfjbj^j zh[h[h[h[h[h[ ~oY~E~ gd$14 zvzcT gdAb' gdAb' gdAb' ztkXI :pU#(
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\docs\Partner_Qualification_Details.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Partner Qualification Details Title _AdHocReviewCycleID _EmailSubject _AuthorEmail _AuthorEmailDisplayName _PreviousAdHocReviewCycleID _ReviewingToolsShownOnce Partner_Qualification_Details timmyw@microsoft.com Timmy WoodsPartner Qualification Details Timmy Woods Normal.dot Shyam Krishnamoorthy Microsoft Word 10.0GB}0) hp%fg /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=Timmyw EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=TIMMYW Timmy Woods timmyw /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=TIMMYW timmyw@microsoft.com /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=Gayleu EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=GAYLEU Gayle Uchida gayleu /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=GAYLEU gayleu@microsoft.com /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=Jpaul EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=JPAUL jpaul@microsoft.com jpaul Jyoti Paul /O=microsoft/OU=northamerica/cn=Recipients/cn=jpaul /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=386769 /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=386769 EX:/O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=386769 /O=MICROSOFT/OU=NORTHAMERICA/CN=RECIPIENTS/CN=386769SPS Partner Qualification Details Note: Partners need only to fill details down to (and including) the Schedule section Partner Name & Type Please note whether you are a Tenant, Service Provider or Both. If you are both, answer all other questions (with clear identification) for both partner types. If you are only a service provider, please fill out the details based on the offer(s) that you will be a part of.  FORMTEXT  <click here and type> Business Model Brief Description (who are they?)  FORMTEXT  <click here and type> Customer profile  FORMTEXT  <click here and type> User projections  FORMTEXT  <click here and type> Total # of users  FORMTEXT  <click here and type> Distribution Channel (This does not apply to Service Providers)  FORMTEXT  <click here and type> Markets  FORMTEXT  <click here and type> Offers  FORMTEXT  <click here and type> Customer Offer Details Service Components Note: For all of the Service Components contained in your offers, please specify which require provisioning and authorization and which require authorization only.  FORMTEXT  <click here and type> Schedule (Major Milestones) Milestone Impact on Partner Resources: Financial Operations  FORMTEXT  <click here and type> Customer Service  FORMTEXT  <click here and type> Other Impacts on the Partner:  FORMTEXT  <click here and type> Impact on the SPS Team SPG Resources: Partner PM  FORMTEXT  <click here and type> Feature PM  FORMTEXT  <click here and type>  FORMTEXT  <click here and type> SSD BizOps Resources: Partner Manager  FORMTEXT  <click here and type> Offering Manager  FORMTEXT  <click here and type> Reporting  FORMTEXT  <click here and type> FinOps  FORMTEXT  <click here and type> Other Resources: Technical/Data Center Ops  FORMTEXT  <click here and type> Customer Support  FORMTEXT  <click here and type> APIs:  FORMTEXT  <click here and type> Items of Note:  FORMTEXT  <click here and type> Functional Gaps:  FORMTEXT  <click here and type> Scalability:  FORMTEXT  <click here and type> Other Impacts on the SPS Team:  FORMTEXT  <click here and type>  DATE \@ "M/d/yyyy"  2/19/2002  TIME \@ "h:mm am/pm"  3:09 PM Page   PAGE   NUMPAGES  ~sa~Q~F gdI9d gdR8} ui_iRJ:R ~vnj\nSnH~ hZhSL |tb|U|tNJN| {umi[m
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\docs\Service_Provider_Checklist.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Service Provider Checklist (Provisioning requirements) Title _PID_HLINKS _ReviewCycleID _EmailSubject _AuthorEmail _AuthorEmailDisplayName _AdHocReviewCycleID _EmailEntryID _EmailStoreID _ReviewingToolsShownOnce New Service Provider Checklist document shyamk@microsoft.com Shyam Krishnamoorthy 00000000FB93EDF646095F489898A2C0487F0D6207005DD556A32C387C4493F251290A28216E00000341528900005DD556A32C387C4493F251290A28216E000003CFF6BA0000 0000000038A1BB1005E5101AA1BB08002B2A56C20000454D534D44422E444C4C00000000000000001B55FA20AA6611CD9BC800AA002FC45A0C0000005245442D4D53472D3039002F4F3D6D6963726F736F66742F4F553D6E6F727468616D65726963612F636E3D526563697069656E74732F636E3D70697276696E6500Service Provider Checklist (Provisioning requirements) Rishi Rana Normal.dot Madeline Bechtold Microsoft Word 9.0r`)VeSPS Service Provider Checklist This document describes provisioning requirements for service providers. Steps To qualify to use SPS 2.5, contact an SPG partner program manager (PM). See   HYPERLINK "http://spg/spg%20partners/"  http://spg/spg%20partners/  for a list of partner PMs. Once you are qualified, SPG will create sample offers, partner IDs, and service components for you. Define service components for your services. Provide SPG with the service name(s) and a one-line description of the service. For example, Hotmail may have a service component with the description,  One mailbox with 10 MB of storage. See the SPK  Getting Started  section for information on SSL certification requirements for service providers. SSL certification implements encryption on communications between the SPG test integration environment (TIE) and your environment. Install the key .msi file provided by your partner PM. This key is required to access the SPG TIE beds. Provide SPS service metadata, including WSDL locations (test, pre-production, and production) and retry semantics (optional). For more information, contact BizOps (KaylieA). This ensures that your service provider metadata is configured in SPG so tenants can be routed to your service. These names should be fully qualified domain names, as illustrated by the following sample links.  Test:   HYPERLINK "http://testservername/test/aspx?wsdl"  https://testservername.microsoft.com/test/aspx?wsdl Pre-production:   HYPERLINK "https://preprodservername/test/aspx?wsdl"  https://preprodservername.microsoft.com/test/aspx?wsdl Production:   HYPERLINK "http://prodservername/prod/aspx?wsdl"  https://prodservername.microsoft.com /prod/aspx?wsdl A sample ISvcProvider service component implementation is available. Please see   HYPERLINK "http://spg/spg%20partners/Lists/Service%20Component/DispForm.htm?ID=8"  http://spg/spg%20partners/Lists/Service%20Component/DispForm.htm?ID=8  for the WSDL location of the sample service. This ISvcProvider implementation can be used until your implementation is ready for testing. If service providers change the URL in the production environment, they should maintain both the old and new URLs for at least 91 hours so that requests currently in the SPG queue can be completed. Define the provisioning schema (.xsd) for each service component, then distribute it to the partner PM and any tenants who will use it.  When tenants call ProvisionServices, they use this schema to populate the <Details> node of the bstrServiceInstanceSetXML parameter. When SPS receives the call, it fires off a corresponding ISvcProvider ProvisionService call to the service provider, passing the tenant s information in the Details parameter. For more information, see the SPK pages for the ProvisionServices and Provision Service APIs and the ServiceInstanceSet XML Schema. If service provisioning requires validation or reservation, define this information in the provisioning schema. For example, you would do this to check availability of an e-mail address and reserve it before provisioning. Define custom error codes in SPS for provisioning errors. Service providers are allocated error codes 1   999 for custom use. Publish a list of custom error codes with your schema so tenants can communicate errors to end users. For more details, see  Overview of Service Provider APIs  in the SPK documentation (SPK.chm). Implement the ISvcProvider SOAP API. For more information, see the SPK. Authorization-only service components are not required to implement the ISvcProvider API. Maintain a PUID, ServiceComponentId, and ServiceInstanceId in a local data store for every provisioned service instance. ISvcProvider requests use these as keys, and these are the IDs you will need to provision your service. For free service instances, set ServiceInstanceId to null. Set up idempotent provisioning in which multiple requests for the same service instance by the same user are treated as a single request. For example, if a 10 MB mailbox is provisioned as service instance ID 100, all subsequent provisioning calls for ID 100 should be ignored since it is already provisioned.  Implement reference counting to maintain counts on the total number of simultaneous users for a service instance. SPS does not do this; it is considered the responsibility of the service provider. For reserved services, implement expiration handling (time-stamping recommended) using the ValidateProvisioningData API. For more information on this API, see the SPK. Implement handling for the return of alternate validation and reservation information using ValidateProvisioningData. For example, if an e-mail name is already used, this API can return a list of alternate names. The return schema should also be defined as part of the provisioning schema.  Maintain provisioning status for free services using the CheckProvisioningStatusAPI to return the status. This will ensure the status of free services if you plan to offer free services to users. For more information on this API, see the SPK. Understand the add-on semantics of all services, especially for free services. An add-on is an optional paid increment. The service provider in this case should first check for the free service, then convert it for the service instance ID of the paid increment. Set up storage provisioning and quota management. Since the provisioning service does not provide quota management, it is up to the service provider to manage user storage quotas. The information needed to do this includes total storage of service and current usage. For example, Joe has a 10MB mailbox with username   and a 20 MB mailbox with username  Joseph . He upgrades his 10 MB mailbox to a 30MB mailbox through an add-on. It is important that the service provider while managing quotas understand the 10 MB service instance and the new 20 MB service instance are part of Joe s username   mailbox. Run the ISvcProvider certification suite to verify the accuracy of your implementation. Perform end-to-end testing of your offers and service components.  Additional References  HYPERLINK "http://spg/sps/SPS%2025%20Documents/Subscription%20Platform%20Kit.doc"  http://spg/sps/SPS%2025%20Documents/Subscription%20Platform%20Kit.doc Service component example   HYPERLINK "http://spg/spg%20partners/Lists/Service%20Component/DispForm.htm?ID=2"  http://spg/spg%20partners/Lists/Service%20Component/DispForm.htm?ID=2 Service component for demo partner   HYPERLINK "http://spg/spg%20partners/Lists/Service%20Component/DispForm.htm?ID=8"  http://spg/spg%20partners/Lists/Service%20Component/DispForm.htm?ID=8 Service Provider Checklist Page   PAGE   NUMPAGES
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\docs\Partner_On_Boarding_Process_Overview.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation Partner On Boarding Title _PID_HLINKS Spec Status _AdHocReviewCycleID _ReviewingToolsShownOnce One Page DeploymentPartner On Boarding Shyam Krishnamoorthy Spec Template Shyam Krishnamoorthy Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags PersonName http://www.microsoft.com9 urn:schemas-microsoft-com:office:smarttags place $}V%Z Xr,Nn XlCp}\ pzTEd ./Nh*^ m@n*5V /o=Microsoft/ou=APPS-WGA/cn=Xenix_Users/cn=ganeshp EX:/O=MICROSOFT/OU=APPS-WGA/CN=XENIX_USERS/CN=GANESHP /o=Microsoft/ou=APPS-WGA/cn=Xenix_Users/cn=ganeshpj+Xb5; {17@A wd3^Gj>g \SWEm 9>9IP_Z8 E_"GO SxR*2 2w[(~ 07]Ac G(Oi} c:K3t yzpGdz *k`Wm k0]|% nVSAv oav31? Cg"M] W)4BN Ffw]@ XATo$ &kk]p Zth-K b`.=O ))-Kk -0p)Z Af{D! }i[WZ |_%L; 6fw'd F:v>E >2<DO4u@ o9Ht-hk $?S@`Uppl_ #.iI|  =o,A 5h?9xz_@g oa`p*Z oa`p*Z d&2A-U =U&(jiU G3m+~ JBw;) -/QoJ 3|p?6 mi]ig O\<Su; zP<ed 6HrSs 4ObO?Kj KkW!]+2v_ L}^g2 C=1NYSK EUWFb reEbLSb `(qs= h(1t$q rKt0w hX42]K {CC2rTw sF#[^ *KGvx }>1y91j-q ^Yseqe #&o"^ Or,Rm -!N\N ;5&dV Pi\q0 LlMU# E44$^ yLv}/ WfYzw0 5#~Q} \8Pp: uwZ'g|8Z P.!Xk& kfbk. `*1q> ^zy}p _:GT}/ ^1GqM Q~>}a %y({A z =wr sHE9w h,o,{ vAf:;  dd|0 <W4<n |'g2st^ S.*}p >@^;Ma Is(n^ WYw`^ %\@FNu3 DZ/E9 r}c8Kg O-1::?a g#dm]N\C 'x^p5 Si6gn {"\C2gW0 OHWC?P * Z^m@ Rs4^{1 +>0kf G=6H~. &h2d4 hYdtcx ES(^  mmWz! )b_da VSw<!d /tOD5 NEzA< ]DCr( CtFTB "d5*l GdoF! "Z{4E E4tkJ zQ\uy E;@^+ ++!ZS pN _s cE5D[Z ai5Dv dD}zI sw8y L LD6f> At._D ^uD{L )}t7Dg p^1Ha tnUaynU mej : :M2CG ';[4s ua~ot 2IrQ>\ AeW>i AeW>i H9@@PD mvvfV b0cAL k:s#8 ?.T7K 4{.mJ R%{j>B ;eD4I Irv_<E \*_pm.+ M?,6: 3a||4 wUDW|#JW ky}WD oGQ<q +okOwm <?5bn &JN+h d"Zwv Z\E:K g)=z+ L=G:P m:Fv&] /;H:J O']"g \Z1%l 0FA?y@ Oe6}F ,{/W# 6$a7?Fk 'hM~v 0FMgd3nW ?a>y> y*wn= ~#IlB <Wa zl$ |e$3C &@gL9D mxsJWu wo/hn fPkM( &@kDuD tDWh7 %tCvL Ow%IQ $9r>Q )}o6a "n+w&qci hhGpW `S?xl ?g!Zw -!&@[NuD{ ":7\E 4DKom JwvCt>1 7j!:S Gno1= ~s r( #:l_  !qk[cyMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6EMF+0@ EMF+*@ ?ffF>R -?ffF>nkE?ffF>n a?ffF>R j?ffF> ?ffF> ?ffF> ?ffF>~ ?ffF>~ ?ffF> ?ffF> EMF++@ >R`E? >5AO? EMF++@ EMF++@ EMF++@ >DD\?R, ?DD\?n "?DD\?n >?DD\?RlH?DD\?nCT?DD\? m?DD\? w?DD\?E ?DD\? ?DD\?) ?DD\?) ?DD\?)r ?DD\? ?DD\? ?DD\? ?DD\? EMF++@ gH?ww .\?ww EMF++@ EMF+*@ }(=J3  w(=J3 ?3(=J3 EMF++@ B$lAC@ QCP B$lACI8 C$lACI8 EMF+*@ B$lAC ~(=J3  w(=J3 ?3(=J3 EMF++@ B$lAC6@ [&?33 14?33 EMF++@ B$lAC6@ EMF++@ B$lAC6@ EMF++@ B$lAC6@ EMF++@ B$lAC6@ c=DD|? =DD|? >DD|? n>DD|?r >DD|?9 >DD|? >DD|? >DD|?U ?DD|?rl ?DD|? >?DD|? Q?DD|? [?DD|? e?DD|? ro?DD|? Sy?DD|?U ?DD|?Ua ?DD|?rD ?DD|? ?DD|? ?DD|? ?DD|? ?DD|? ?DD|? ?DD|? EMF++@ +C$lAC EMF+*@ >RTL? >55V? EMF++@ kAC6@ >Um{?0 EMF++@ kAC6@ >U56? EMF++@ kAC6@ EMF++@ kAC6@ KN?9vq? EMF++@ .2CMd .2CMd C$lAC^[eC~j C$lAC! .D$lAC! EMF+*@ C$lAC EMF++@ C$lAC6@ EMF++@ C$lAC6@ EMF++@ C$lAC6@ c=DD<? >DD<?r ^>DD<? >DD<? >DD<? >DD<?U >DD<? ?DD<? x ?DD<? P,?DD<? EMF++@ C$lAC6@ EMF++@ C$lAC6@ ?Uu~> ?9F.? ?U]w? EMF++@ C$lAC6@ EMF++@ C$lAC6@ s"?ww J.?ww EMF++@ C$lAC6@ EMF++@ D$lAC C\OBC C\OBC EMF+*@ B\OBC (=J3  w(=J3 ?3(=J3 EMF++@ B\OBC EMF++@ B\OBC >r\P>UU W7?UU >9>??UU EMF++@ EMF+*@ >XaG? > 3W? EMF++@ >u8D? EMF++@ > s!?S EMF++@ EMF+*@ mr>w{h? mr>[\r? (=J3  w(=J3 ?3(=J3 EMF++@ EMF+*@ (=J3  w(=J3 ?3(=J3 EMF++@ EMF++@ xP>UU EMF++@ EMF+*@ ]>r\3? ]>9.C? EMF++@ >UU`>33 Q(?33 80?33 jQ?33 EMF++@ EMF+*@ ->9r;? (=J3  w(=J3 ?3(=J3 EMF++@ EMF+*@ =8>U1P? EMF++@ EMF+*@ *2>mV *.?mV qG?mV (=J3  w(=J3 ?3(=J3 EMF++@ 3g>ncq> 3g>1. EMF++@ EMF+*@ U)>(] U)>}r U)>"r U)>Jg EMF++@ >wW0?5 >?)@?5 EMF++@Microsoft Pages Masters Page-1 Dynamic connector Executive Manager Position Consultant Vacancy Assistant Team frame Staff Title/Date Multiple shapes Three positions Title _VPID_PREVIEWS _VPID_ALTERNATENAMES _PID_LINKBASEganeshp @@@```    ppp HHH000@@@@@@@@@@@@@@@@@@@@@|||DDD@@@@@@@@@@@@@@@@@@@@@    ppp ppp    ```PPP ```PPP ```(((@@@@@@@@@@@@@@@@@@@@@@@@DDDttt@@@@@@@@@@@@@@@@@@@@@@@@@@@    888@@@@@@@@@@@@@@@@@@@@@xxx@@@@@@@@@@@@@@@@@@@@@888    hhh(((@@@@@@@@@@@@@@@@@@@@@lllLLL@@@@@@@@@@@@@@@@@@@@@ ```(((@@@@@@@@@@@@@@@@@@@@@lllLLL@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ xxx``` ppp    ```xxx xxx``` @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LLL@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PPP @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ LLL@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@xxx @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@|||xxx@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ```@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@hhh 888@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((( HHH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PPPVisio (TM) Drawing Arial ingdz otype So Symbol '5/G% ^?Tp2 N7OIJ`2 _HOZOlI ?`?r6 :/L/^/ 7R 8Q )&}tJ #O[ { 0/B/T/ ?(?:?L?^? O$O6OHOZOlO _-_?_Q_c_u_ )o;oMo /!/3/E/W/i/ O&O8OJO P_b_t_ =oOoaoso  ~u=2 etter /)/;/M/_/q/   Displa nector This c onnector  automat ically r outes be tween th e shap Vis_S E.chm!#2 Copyrigh t (c) ,@1  Microso ft Corpo ration.   All ?Bs  reserved ?8w?2 84F7AF5- C993-11d 1-B2E7-0 06008BD3?47E} Class (D;Contem porary;E legant;N otepad;R Theme Grid G ranulari Show Div @ defau lt visib @ of t ~QmS line  for ALL  org char t shapes "9*_<_ EEnabl e Auto S Ua$`- s)` behavqi is featu `Bbed, aincre ased %`fi Rtext a glength /height Custom  Layouts  Allowed c3sl:s H0!C&{5 2BC4E31- A33B-11d 1-B2B9-0 06008BD3 b(BHwIC@ rnal  Globally bNf_s Psubordi iP\`in `~PMa'nag #b&9s Drag t o add an  Executi ve posit ion. If  this  p leve ll su bordinat rawing. g & dr% it overj s managp shape in md=Shape Dropped ?`0Fi# SOC.chm! #30196 `?Cop yright ( c) 2001  Microsof t Corpor ation.   All 2Rs r eserved.# 9":3] O(RV|T Wr?Uv assic;Co ntemNQry; Elegant; Notepad; Retro BC4E31- B-11d1-B 2B9-0060 08BD347E e Su&bor dinates >j1 Left Show D r L&ikne _p&p& i"R"K he prede d layo ut tha s best i nlPUb &P_refer heme for 60)QB ault vi sibility aZPmana o-size. featu 82ed, 1incre to fi ext as 7length/ 2 AI0 Si#&z %_?' su cCpartmen?t namelP. J\C@,?>< eleph=o  numb! 0ensio5 &TFe.V 1CUA_@q3 Q&C7hilU T&it q "UAUA w!w!d  = Draw posit_` h 0'Assist ant' ty Uniqu PifiSaf  docu ntain=1 r cla ss which 0anU`g 4\C*7 QG-\CA# _@8Lo /e sy nchronN0d  with 1in c alcul. uw `u 1widtQh y`@,& argin c/xu: report nclud!1p perfor jo"3i80c: `vMSj rimari @ app earanc al pu "?4?F; Z?W]W{_ [H@gC_ left, 2= er, 3= ,(-1)= l sep|&`G betwe abov\ Horiz by a @l ve,Drag_,add,C ,level, ,di_agram  e,manag nt,emplo?yee,re ra6$@ TitlR  /SIWIRt \!r1, To conne1c @)Asu ol h-`lh '`ge S BDlgG 21.n@ i(\u) t/]1ift )/;/M  n&V P  S&ynch #inkJ QB'ah "Di}v  r L&i> 7sGZ6Ud V; Rk hipd- %Name itle$" #V4kO}A gA~D:%Z?O O,O>O VOhMq O+oI_ _Zo$_ oZ[wQl_~_ udovo X/r=l/( q!q!& Classicw ;Contemp orary;El egant;No tepad;Re_tro Theme Grid Gr anularitWy how Divi |@ defaul t visibi}l @ of tmQ \S line f or ALL o rg chart  shapes. EEnable  Auto SiUz ` behavi s featurse t`1bed, \~aincrea Rtext as glength/?height Custom  Layouts  Allowed 0r cB"sl)s C&{52 BC4E31-A 33B-11d1 -B2B9-00 6008BD34 B7wI2@r lobally b=fNsvf subordinKat #H^PN `mPMan Drag t o add a  Manager  position . Connec t it by  s shape  uperior its m d=ShapeD ropped ?$F]#X Vis_SOC .chm!#30 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  &Rs rese rved. 3".3`] G[oTP Kr?Iv qy5>pT TClassic ;ContemBQ ry;Elega nt;Notep ad;Retro@ {52BC4E3 pB-11d 1-B2B9-0 06008BD3 Hide Su& bordinat ^1 LefAt w Div r _L&ine _d&d& SH'#{w] ]"F"Ky# #O#<o `4The pr ayout th ooks bes t in`PIb &Prefer theme   visibil ity of aNPmOanag ^s)enab auto-siz=e" fe?ature  *w1in creas 7leng th/he'R E|2 A=0  Si&z %S?' squ WCpart ment nam O%C{w.]q JPC@ ?2<P 0ensiqo) &T:e""V %CIAS@3 Q&ChilI "IAIA k!k!X +r%S< RUE = Dr rposit 0'Ass istant'  iquv0d iGaf docu Rcontain class wh 0a=nI`g ch EG-PC# 8Loca;  synchro nB0d with n calcul@" m`@ & Margin [`L|qID8 10uishG  ?from oN W/lu. Includ perOform ;`sy+ete marily   appeara l pur7 ?(?:; Z3WQWo_` 1=left , 2=c , 3=r -1)=non `1Vertf darAd !aabov~P op-mos +@pro Manag ag,add,7 ,Connect iagrams,>n ice,m ,employeoe,re rU6$@ =W=Rh troWl h!`lU `oge S J1ift BjIR& /(/:   kn&C P PJR,( &ynchro CopyR,) p#ink  L&i2 6&i7`GG6 GhipQ- 1JH#C4XOjA TAkD'% O+OsR COUMq oG[dQ Y_k_}_ uQoco E/r=Y/ It,{O @%D!E E1M5T" `*p4;Con temporar y;Elegan t;Notepa d;Retro d Granul arity (Dg0I11  Divider efault v isibil7@  ine for  ALL org  chart sh apes. nable Au to Siz IeeQing EalP-sqP b ehavi Ais f eature  ncreased  mPfit xt as ngth/hei g$jO1^Y stom Lay outs All b c{cl i3&{52BC4 E31-A33B -11d1-B2 B9-00600 8BD347E}3 0rnal  3CGlobaGlly @subo rdinat Manag tkR&D Drag t o add a  position . Connec t it by  s shape  uperior~% e in0 s manag md=Shape Dropped :F%NO Vis_SO C.chm!#3 `?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al l 0Rs res erved. 3-1~& C(RzT 8x"Qyf _d&d& i\iN! lTo conn ect this  sh1 to i _Psuperio r, dragX trol ha point  defined _layouW looks be st injPSb &Prefe ult visi bility o divide "aXPmOanag L?Icd1 to-size/  featu 9Bed, Aincre3as ext as ength/heh1R  AJ@ Si&z  bordiGnat -Q6=Ke D&epartm+en]  (+?0_BSJ @-O?LP Telephon "Ju n `&Chi lV% S q^#1u HQHQB TRUE =  Draw @'Assis tant' ty@  SE7  `ifi~nqf docu+b contain>A ass whicah @anpp  8Loc ?e syn chronO@d  in calcu -uh0`u Awidth ?Margin om o{ repor ncludLAw perfor zoMCic@c:" ;etAe:Qt rimaril y 8P appe aranc al pur$T MO_OqK =left, 2 er, 3 ,(-1) =non% betwye Qabov} p-mosJP bPpro KPluX Drag,add ,Connect ,su5Pw iagrams, ice,man nt,em ployee,r Titl% s{52BC 4E31-A33 B-11d1-B 2B9-0060 08BD347Ei} ;EleN d;Ret THi"PSu& /r L& /#/5/G/Y/z KG4?F2 8LR6S  #o5oGoYoko /cmd= LayoutDl i#ftk Chan& osition  verte nchroniz ed Copy  RelaZ sWhip ZH#S4hOzA ppdA{D )O;O" SOeMq O(oF_ OWo!_ oW[tQi_ uaoso J*1X& W.=i/ _TitleT q!q!& Classicw ;Contemp orary;El egant;No tepad;Re_tro Theme Grid Gr anularitWy how Divi |@ defaul t visibi}l @ of tmQ \S line f or ALL o rg chart  shapes. EEnable  Auto SiUz ` behavi s featurse t`1bed, \~aincrea Rtext as glength/?height Custom  Layouts  Allowed 0r cB"sl)s C&{52 BC4E31-A 33B-11d1 -B2B9-00 6008BD34 B7wI2@r lobally b=fNsvf subordinKat #H^PN `mPMan Drag t o add a  Consulta nt posit t it by  s shape  uperior s magnagp d=ShapeD ropped ?$F]#X Vis_SOC .chm!#30 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  &Rs rese rved. 3".3`] G[oTP ZC(RpT Kr?IvU bTClassi c;Contem BQry;Eleg ant;Note pad;Retr {52BC4E pB-11 d1-B2B9- 006008BD 347E} Hide Su &bordina ^1 Le ow Div  L&ine _d&d& S'#{w] ]"F"K The pred d lay out tha ks best  in`PIb Prefer theme fo}r ault v isibilitoy of aNPman to-size" *w1incr ext a 7lengthG/he'R E|2 A=0 SGi&z `;xs/ %S?' su WCpartme nt name`P O%C{w]q JPC@ ?2< elep{ho  numb 0ensio) &T:e"V Q&oChilI "IAIA E = Draw& rpositS`  0'Assis tant' ty  Uniquuv0d PifiGa f docu Rc?ontain11 ass whicah 0anI` 4PC*8+ ynchronB0?d with 1in ?calcul" uk `u2 m`@ & ?Margin |qID8 om oN W/lu. S@6|q report ?Includ perfoSrm 3i,0uc ;`sy+ete marily   appeara l pur7 ?(?:; Z3WQWo_` 1=left, ,(-?1)=non 1Vertf dard  low x !aabovP ?op-mos +@pro onsulJ rag,add, nect, agrams,n ice,mana emplo?yee,re rU6$@ TitlR  #S=W=Rh troWl h!`lX `oge S 2,!.b@ M1ift BmIR& /+/= # kn&F P PJU,( &ynchro CopyU,) s#ink  L&i2 6)i7cGJ6 GhipT- Title #F4[OmA WAnD*%Z/O O.OvR FOXMq oJ[gQ\_n_ uTofo H/r=\/( I,w,~O q!q!& Classicw ;Contemp orary;El egant;No tepad;Re_tro Theme Grid Gr anularitWy how Divi |@ defaul t visibi}l @ of tmQ \S line f or ALL o rg chart  shapes. EEnable  Auto SiUz ` behavi s featurse t`1bed, \~aincrea Rtext as glength/?height Custom  Layouts  Allowed 0r cB"sl)s C&{52 BC4E31-A 33B-11d1 -B2B9-00 6008BD34 B7wI2@r lobally b=fNsvf subordinKat #H^PN `mPMan Drag t o add a  vacant p osition.  Connect  it by d  shape o]n uperior, s magnagp d=ShapeD ropped ?$F]#X Vis_SOC .chm!#30 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  &Rs rese rved. 3".3`] G[oTP ZC(RpT Kr?IvU bTClassi c;Contem BQry;Eleg ant;Note pad;Retr {52BC4E pB-11 d1-B2B9- 006008BD 347E} Hide Su &bordina ^1 Le ow Div  L&ine _d&d& S'#{w] ]"F"K The pred d lay out tha ks best  in`PIb Prefer theme fo}r ault v isibilitoy of aNPman to-size" *w1incr ext a 7lengthG/he'R E|2 A=0 SGi&z `;xs/ %S?' su WCpartme nt name`P O%C{w]q JPC@ ?2< elep{ho  numb 0ensio) &T:e"V Q&oChilI "IAIA E = Draw& rpositS`  0'Assis tant' ty  Uniquuv0d PifiGa f docu Rc?ontain11 ass whicah 0anI` 4PC*8+ ynchronB0?d with 1in ?calcul" uk `u2 m`@ & ?Margin |qID8 om oN W/lu. S@6|q report ?Includ perfoSrm 3i,0uc ;`sy+ete marily   appeara l pur7 ?(?:; Z3WQWo_` 1=left, ,(-?1)=non 1Vertf dard  low x !aabovP ?op-mos +@pro `y,Dra g,add,v ,Conn ect,d ? g=, ,OrgaC ,diagra manag mployee, rVU6$@ #S=W=R P!f1  `lTo Ac trol h `ge MS /cmd=L~ 2%.b@ ](\i) /6#HX :h/Q1if aDown ///A ' n&J MP  S&yn pyY,) w#i+nk  r L&!i2 6-i7gGN6Id w"Upd %Name 1QH#J4_O [ArD".%Z3O O O2OzR kQ`_r_ uXojo L/r=`/ q!q!& Classicw ;Contemp orary;El egant;No tepad;Re_tro Theme Grid Gr anularitWy how Divi |@ defaul t visibi}l @ of tmQ \S line f or ALL o rg chart  shapes. EEnable  Auto SiUz ` behavi s featurse t`1bed, \~aincrea Rtext as glength/?height Custom  Layouts  Allowed 0r cB"sl)s C&{52 BC4E31-A 33B-11d1 -B2B9-00 6008BD34 B7wI2@r lobally b=fNsvf subordinKat #H^PN `mPMan Drag t o add an  Assista nt posit ion. Con nect it  his sha pe on s? managp d=ShapeD ropped ?$F]#X Vis_SOC .chm!#30 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  &Rs rese rved. 3".3`] G[oTP ZC(RpT Kr?IvU bTClassi c;Contem BQry;Eleg ant;Note pad;Retr {52BC4E pB-11 d1-B2B9- 006008BD 347E} Hide Su &bordina ^1 Le ow Div  L&ine _d&d& S'#{w] ]"F"K The pred d lay out tha ks best  in`PIb Prefer theme fo}r ault v isibilitoy of aNPman to-size" *w1incr ext a 7lengthG/he'R E|2 A=0 SGi&z `;xs/ %S?' su WCpartme nt name`P O%C{w]q JPC@ ?2< elep{ho  numb 0ensio) &T:e"V Q&oChilI "IAIA E = Draw& rpoositS` h 'Assista?nt' ty Uniquv0 PifiGaf  tain11 r clas s which 0anI`g  4PC*+ EG-PCA# S@8Lo /e sy nchronB0d  with 1in c alcul" uk `u 1widtQh m`@ & argin W/lu. S@6|qup report nclud perfor 3i,0c: sy+ete arily  appearan  pur7 ?(?:; Z3WQWo_ 1=left,  )=non  ;fi! Vertf betwye !aabovP p-mos +@pro Drag,add ,Conne OrgaC ,diagram ice,m ployee,r rU6+$@ /Titl #S=W=Rh `lTo c  trol h!` `ge S& /cmd=L B?Dlg 2 .b@ X(\d) *c/L1ift ?1#iK aDown /*/< " n&E P  S&ync  r L&i (i7bGI6Dd hipS-t r"Upd %Name 1LH#E4ZOlA VAmD)% O-OuR EOWMq oI[fQ uSoeo G/r=[/ Iv,}O assic ntempora ry;Elega nt;Notep ad;Retro Drag t his shap e to enc ositions  you wan displa y as a t eam. Res  more or  fewer3 members. < 7@& @2/D/V/h/z/ Vis_S OC.chm!# 30208 2`?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al Bs res erved. $:mD5 is shap?e only ssic;Con Ary;E legant;N otepad;R d by a s7olu am,frame ,Drag,en close,po As,wy display, Resize,i ude,mor e,fewer, members, hart,hie~p chical0 s,off{icF loyee, Title ropertie XC-jJ= $E/W  @%D!E E1M5T" assic `*p4;Co ntempora ry;Elega nt;Notep ad;Retrok The/me id Granu larity (Dg0I11  Divider efault v isibil7@  ine for  ALL org  chart sh apes. nable Au to Siz IeeQing EalP-sqP b ehavi Ais f eature  ncreased  mPfit xt as ngth/hei g$jO1^Y stom Lay outs All b c{cl i3&{52BC4 E31-A33B -11d1-B2 B9-00600 8BD347E}{ 0rnal 3CGlob ordinat @Manag Drag t o add a  staff po sition.  Connect  it by d shape on perior+ s man3agp d=ShapeD ropped ?$F]#X Vis_SOC .chm!#30 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  &Rs rese rved. C(QRO#d&d& y5>pZ TClassic ;ContemBQ ry;Elega nt;Notep ad;Retro@ {52BC4E3 1-A33B-1 1d1-B2B9 -006008B?D347E} Hide S u&bordin 7em#Tq1 SH'#qw] ]"F"Ky# `4The p redefine d layout looks  best in`P eme for y5N#o ault vis ibility {of aNPmOanagf   Di&c"! nabi gY%au to-size ,\"':G1incr ext a sy7lengthG/he'Ri5 EL2 A 0 SGi&z `;xC/U%#?' su partment  name`P 3qwSq @5Z UL elepho k numbf  ensio A#@38 )aTR UQ E = Drawf`% sit#` h Assistan t' ty UniquF0d Bcont r class? which G- C# #@8Lo Z/e sy nchron  withy6 4uo1in c alcul 1width. argin #@6Lqup `3thax1~4 report 0AojpGm6 Lq5@mR nclud perfor getxV `sD+ete  [pe,  rimarily 0 appeaoranc `ndOu~% al pur W:_L_^_p_ 1=lef t, 2=c r, 3=r (-1)=non JuS fi `1Vert; l sep op-mo Horiz 0CluT1 ,Conn ect,do ,Orga ,diagra manag ,employeoe,re Prop. lTo c m#v`n Pge So .v`9b cmd=L 0Su&p SgbUp !iftt2 K4?Z2 R4&ha uu_OzqM&a  S&ynchryo ink!Q%B `N)u"Div.[ r &HPel&Z"B q}goqM' 2/D/V/ 3?E?W?i?{? OaOsO _'_9_K_]_o_ Vq?(. Y!Q!Y!x Classicw ;Contemp orary;El egant;No tepad;Re_tro Drag t o add a  company  name and  the dat  may ei matic or  typed. SOC.chm! #30213 2`?Copy right (c ) 2001 M icrosoft  Corpora tion.  A Bs re served. &eOh__5 F`5-dU 8g\E-d !8g"U-d 8gNU-d 8g3U-d -dR!8gR )hf!8g )hp! 8g H3Tp!l_ TClassi c;Contem Ary;Eleg ant;Note pad;Retr C This  shape  sed by a  solu CnTitl e,Datf g,add,co mpany,na me,OrK R,Chart, al,diagr ams,offi ce,manag ement,? oyee,rel  foyr R0cD` &Resiz  Fit TexWt Width %Proper |$G+I ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  "s reser 5?G?Y?k?}? |$G+I opyright  (c) 200 1 Micros oft Corp oration.   All   reserve 5?G?Y?k?}? opyright  (c) 200 1 Micros oft Corp oration.   All   reserve <_*!fi opyright  (c) 200 1 Micros oft Corp oration.   All   reserve W<_*!fi `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. opyright  (c) 200 1 Micros oft Corp oration.   All   reserve <_*!fi F",2UH opyright  (c) 200 1 Micros oft Corp oration.   All   reserve $`1-- ]\9<$O NPa#V NgFfDXo pyright  (c) 2001  Microso ft Corpo ration.   All \2s  reserved svJTt ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  \2s reser W]r7# EyNAw opyright  (c) 200 1 Micros oft Corp oration.   All   reserve ?ROdKI9* `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All 2s rese rved. '(zm* Za(Xm* ']r9C ?CA@vY 03Y;b t3w5R S?OQOcOuO@ N_`Y_ 6VV!N 5A&A= H[3e_ Adjus t Frame  ThicknesCs @;tQd `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All "s rese rved. Ae#r@` `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All "s rese rved. Ae#r@` Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Ae#r@` O e#6 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All "s rese rved. Ae#r@` `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All 2s rese rved. 6OHBV% I|AIA7 Yoko}o V%&qa pany Nam {52BC4E3 1-A33B-1 1d1-B2B9 -006008B D347E} ernal Sh ape Clas Drag t o add se veral st aff posi tions. C onnect t hem by d  shape o erior4 /cmd= ShapeDro 0A0C7 is_SOC.c hm!#3020 opyright  (c)  Microsof t Corpor ation.   eserved. 5e[m6 E5>_PVg aD%9ech C This d by a s ltiple,D rag,add, several, staff,po As,Con nect,dXpg ing,onto mv,superi or,Organ B,Char t,hicprch icepdiagr ams,offi ce,manag ement,em ployee,rKel Bs"sE5 has ' pbehav dit P ties for GecMo dify the p col and oz Hide &Su bordinatCes 5%ecD isable A uto &LayGout ec{52BC4E 31-A33B- 11d1-B2B 9-006008 BD347E} {52BC4E3 1-A33B-1 1d1-B2B9 -006008B D347E} ernal Sh ape Clas Drag t o add th ree late ral posi tions. C onnect m by d his s hape on uper7ior4 /cmd=Sha peDroppe bADADC7 SOC.chm! #30210 2`?Copy right (c ) 2001 M icrosoft  Corpora tion.  A Bs re served. YmQY5R_ C This s pused  by a sol%u e,posi ,Drag,ad d,latera l,Connec t,dspging ,ontogv,s uperior, Organiz ,Chart,h}i~prchic diagrams ,office, manageme nt,emplo yepre{pmq6sY5m Is+pM ulti- rhu h ' t}y pbehav |`_Ed ies for  %GycMod ify theN p col r p^E ide &Sub_ordin|ps* .5%ycDisa ble Auto  &LayoutH 'yc{5 2BC4E31- A33B-11d 1-B2B9-0 06008BD3 47E}* assic ntempora ry;Elega nt;Notep ad;Retro Drag t o add a  company  r organi zation c hart. Re place ex istin ex?t with !T#("!T#n Vis_SOC. chm!#302 Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv?ed. dL[5D TClassic ;Contem ry;Elega nt;Notep ad;Retro is shape used b y a soluR tle,Drag ,add,com pany,namoe,or ,chart,R eplace,e xisting, text,hie chical, diagrams ,offiY nagement loyee,  for< GA3.GP3 o Fit[ Tf ch.X2 %Prop ertie I3_b  |$G+I ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  "s reser Ah%)O 5?G?@Y?k?}? |$G+I opyright  (c) 200 1 Micros oft Corp oration.   All   reserve 5?G?Y?k?}? ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  "s reser W<_*!fi ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  "s reser pyright  (c) 2001  Microso ft Corpo ration.   All  reserved <_*!fi ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  "s reser W<_*!fi F",2UH `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. ]9<.$O NPa#V NgFfXo Copyrigh t (c) 20 01 Micro soft Cor poration .  All \2 s reserv  :v"  svJTt `?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al l \2s res erved. "a_s_ ?A8N~ pyright  (c) 2001  Microso ft Corpo ration.   All  reserved ,:7'< ROdKI9* `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved.- '(zm* a(Xm* ?A@vY ?OQOcOuO PN_`Y_ Yu?<f !AvY0 H[3e_(  to chan ge featu re size. w@tQd `?Copy right (c ) 2001 M icrosoft  Corpora tion.  A "s re served. `?Copy right (c ) 2001 M icrosoft  Corpora tion.  A "s re served. `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All "s rese rved. Ae#r@` `?Copy right (c ) 2001 M icrosoft  Corpora tion.  A "s re served. `?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al 2s res erved. a2_$l 6OHB3 I|AIA Yoko}o Compa ny Name Departme &! ;4 Theme *Classic ;Contemp orary;El egant;No tepad;Re P70 & 0 def ault vis ibility  der line  for all  org cha rt shape Show D :1KC`c ab `g o-size b ehavi&`%o7d ais f eature  [red, ncreased  to fit text as length/h eight r Alp  SqpTiX1KC0 rid gran 0#C&{ 52BC4E31 -A33B-11 d1-B2B9- 006008BD 347E}Te ayout ubordinaUt;b llJ`custo /cmd=F itToPage rdo?cument=` zation C 4294w28D Black &  Scale 1C47165 C-F779-4 B77-AE34 0A5711F oj4>q  Hidden a >qH2 5$:1@'r 5$e1@' 1(!!@'!! _,_>_ @@fxa nCons  of 3 vices. A ny p8 Is or re and Pro vision ?"@!22 &{1C47 165C-F77 9-4B77-A 11F97} +I?OU $_6_H_Z_l_ (o:oLlt<joUdgf &/8/J/\/n/ ?'?9?K?a Q{%!_3[ 5P_b_ Q7oIo Qfoxo  Partner Consume r of  rvices.  Any p alling  APIs or  receiv qs from sand  Provisio A4QVqh cBsder qmultip;le {1C47165 C-F779-4 B77-AE34 10A5711F eC4aa C44U@ wU2%_ |c]5co o"o4oFk  I_@[_m_ !)o;oMo <rT3uServi ce Provi of one o r multipole s They are  not. rs rath  Hotmail , Sh@ #B**T8/J/?qR i.&&c <rApR #s<C@]J "/q'Y !HQ(a ?^YHKA+ ^5,!#y|d Tenant s (AKA S ellers) rvice %^2== 8!9b:a LQLt&/A ?"S,u &{1C4716 5C-F779- 4B77-AE3 0A5711?F97} ,!^5 8$Q *#y%8$a- O?a?z( e}/P' @O+D6 _UA43 .o@oRodovo nants (A KA Selle ice s egator o   Ex.  Bcentra l, Off Mk?t? T}A8 7W} *1}IQ u}@`u 8%*AL <r6#Dkr70D :WD"}B qWgA& CP_b_ stomer m anagemen ;1dQb O`\tt 1C47165C -F779-4B 77-AE34 0A5711F9 3q2/D/V/h/ f2?U0*Q J8tqg ZqXOjO|O YELgq8_J_\_n_ ustomer  manageme Need  extensiv e suppor t to upd ate user ling sys_tem n log the oact  s nam e who is credi  @z3D <x+UOs> Uz=1z Partn ?Roles Servi ce  prov;id" hAUu5 +?(&/ -4OFO aUaCb Extern Ex. Fax f`Q<r=q `&{1C47 165C-F77 9-4B77-A 11F97} A'1}!\ U/g/y/ ?,?>?w? cUD^|X T_f_1a|_ q\ono 9OKO]OoO ernal se rvice pr ovider x. Fax9 B/T/C 2q2l7 ?@ F%u Tenants   TypY ?@Z A 10e<? k?}?} $#O5O !ROdO` 3Q0e, &Y_kX3Q Interna l servic e provid Hotmail `&{1C 47165C-F 779-4B77 -AE34 5711F97} /*/c/ LO^OpO _('_9_ 5oGoYo m_O/O UP9LW ernal se rvice pr ovider x. Hotma_il `u_ ` uW `uv0 v0'@z3 BnRiWvv W!W!o _s>43F wiAJa+5 QiAtQ tQPVo #k4n1 R31$31Bb9T s workin g for Mi crosoft R5dR^ 2LQLQDR K4$&iA :P&{1C4 7165C-F7 79-4B77- 711F97} yQL!3 &BwyQ ?0?B?T? O"O4OFOXAkhgO IkflX +DoVo oZ@-w eCSRs  working  for Mic rosoft xO!l0 bgqgq rnal Ten?ants . Char @jajaq FB$gq xryqkr {1C47165 C-F779-4 B77-AE34 g10A5711F FHM"4Na F$o3zfgr C?U?g? O#O5OGOYOkO +io{o External  Tenants Ex. Cha )a@t! 8fM!  !TM![ `?r9;1`u 1OZ?UKq `u"d: ?ioDjh qOffice. &{1C471 65C-F779 -4B77-AE 0A571 1F97} /e*{& ///A/S/ O?a?s? Q2_D_ Uogoyo :Oc-j Inter nal Tena Office.n aB!@@@%u 1OCOUO _'_9_>L_^_p_ Io[omo .dPj1S kqkq" r=Q=Q 6D$D2 2(q$(q 29k$)B:x$_ CSRs wor king for  externa l partne  Limited  access  0 fun bp1p1 1C47165C -F779-4B 77-AE34Ca 0A5711F9 p(zfi" %d(r6R /#/5/G/Y/k/ ?'?9?K?S T_f_x_ q"o 4oFoXo SRs work ing for  external  partner - Lim ited acc ess to   functio Classic ack & Wh ONo`orl /cmd= DocCreat d=DocOpe Guide TheDoc Page-1 ure Form Executive Theme ShowDivider WantAutoSize Right Granular Bottom ShapeClass Float AutoLayo PrefLayout omLayout sAllowed DocClass wShapeMo veCallba SchemeName wCtrlMov eCallbac ECHANGED?EVENT TOPLINESTYLE Subordin BARLOCAT YNCCOPIE BOXHEIGHT BOXWIDTH visPPO Org Normal Visio 03 Visio 02 Visio 00 Visio 13 Visio 70 Visio 01 Visio 10 Visio 11 Connector Visio 90 Visio 12 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 80 mic conn?ector rUniqueI Department Telephone dLayoutS LayoutSt Title IsAssistant DocumentID IsHidingSubs ubordina DividerY LineHeight TextWidt TextHeig Margin UniqueID ReportsTo ingPosit ShapeType SuperiorName ustifica ustOffse yBtwnSub yBelowPa xBtwnSub xBtwnAss ropJustO?ffset Solsh visKeywords visVersion OCVersion Display1 Display2 Manager Position Consultant Vacancy Assistant Team frame Staff Title/Date AntiScale iple sha IsMultiShape e positi mDisplay Fields ALModeMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6EMF+0@ A23KD! p5:(p5:( EMF+*@ >r<C? ` u#2 EMF++@ EMF+*@ EMF++@ EMF+*@ >U]"? EMF++@ EMF+*@ EMF++@  p5:(p5:( EMF+*@ EMF++@ EMF+*@ EMF++@ B.Cc] B.Cc] koCc] EMF+*@ >r\J? EMF++@ >9>e?? EMF++@ Cw@PC EMF+*@ EMF++@ >UUJ>? EMF++@ EMF++@ EMF++@ $D&^wC +D,!hC +D,!hC JD,!hC EMF+*@ *>UA?? EMF++@ >U%(> >9>w> >rX8? EMF++@ ?UY6? EMF++@ *?Uu.? *?9V8? EMF++@ 8u=UUU? =UUU? 3>UUU? >UUU?9 >UUU? >UUU?r >UUU?r ?UUU? #?UUU? s-?UUU? Y5?UUU?  I?UUU?9 \?UUU? EMF++@ EMF++@ Ao>UU ?rh2?UU EMF++@ EMF+*@ =UUU>U ">UUU>r b>UUU> >UUU> >UUU> >UUU> >UUU>r >UUU>U ?UUU> ?UUU> ?UUU> +?UUU> ;?UUU>r I?UUU> Q?UUU>U5X?UUU> h?UUU> @v?UUU> ?UUU>r ?UUU>U% ?UUU>9 ?UUU> ?UUU> EMF++@ EMF++@ @<>33 #b>33 s5?33 >UEE?33 >r,M?33 EMF++@ ?rly? EMF++@ =1^U? =1~k? EMF++@ ~QYBFw C~QYB C~QYBFw EMF+*@ B~QYB *>rx,? EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB *?9n/? *?r4C? EMF++@ EMF+*@ >r\}> EMF++@ >9N}> >Ue?? EMF++@ EMF++@ *?UUW> EMF++@ EMF++@ B]OBC$ EMF+*@ s&?UU >U9:?UU EMF++@ >UU'? f>UU'? >UU'? >UU'? >UU'? >UU'? ?UU'? ?UU'? `,?UU'? '@?UU'? EMF++@ R?Uu?> R?Uu&? EMF++@ |?9~?> |?rh*? |?UI4? EMF++@ EMF++@ EMF++@ k(?UU 1<?UU EMF++@ ?9n;> ?9~!? ?U%?? EMF++@ ?r,W> EMF++@ Uu?>UU {"?UU A6?UU EMF++@ EMF+*@ 8?U1p? EMF++@ b?9^"> EMF++@ EMF++@ ?UUe? EMF++@ ?rlu>UU We?UU ?r8o?UU EMF++@ ?9& ? EMF++@ EMF++@ 1~=UU (6>UU ?9"$?UU ?rh]?UU ?UIg?UU EMF++@ g`?UU Hj?UU (t?UU EMF++@ PD,!hC EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@MS-SPG Pages Masters Page-1 Vertical holder Functional band Horizontal holder Functional band.6 Process Dynamic connector Decision Control transfer Off-page reference _VPID_ALTERNATENAMES _VPID_PREVIEWS _PID_LINKBASE _PID_HLINKS A13KD! p5:(p5:( EMF+*@ >r<C? EMF++@ EMF+*@ EMF++@ EMF+*@ >U]"? EMF++@ EMF+*@ EMF++@  p5:(p5:( EMF+*@ EMF++@ EMF+*@ EMF++@ B.C(] B.C(] EMF+*@ >r\J? EMF++@ B%C6@ >9>e?? EMF++@ Cv@PCC aCD4BDt EMF+*@ B:=\B EMF++@ B:=\B >UUJ>? EMF++@ B:=\B EMF++@ B:=\B EMF++@ D&^wC D&^wC $D&^wC JDW>kC EMF+*@ >UA?? EMF++@ EMF++@ EMF+*@ =UUU>U ">UUU>r b>UUU> >UUU> >UUU> >UUU> >UUU>r >UUU>U ?UUU> ?UUU> ?UUU> +?UUU> ;?UUU>r I?UUU> Q?UUU>U5X?UUU> h?UUU> @v?UUU> ?UUU>r ?UUU>U% ?UUU>9 ?UUU> ?UUU> EMF++@ EMF++@ @<>33 #b>33 s5?33 >UEE?33 >r,M?33 EMF++@ ?rly? EMF++@ =1^U? =1~k? EMF++@ C}@!D =1^U? =1~k? EMF++@ OYBRs OYBRs EMF+*@ OYBRs *>rx,? EMF++@ OYBRs EMF++@ OYBRs EMF++@ OYBRs *?9n/? *?r4C? EMF++@ (D&^wCv (D&^wC EMF+*@ >r\}> EMF++@ >9N}> >Ue?? EMF++@ EMF++@ ;?UUW> EMF++@ =1^U? =1~k? EMF++@ B\OBC$ EMF+*@ s&?UU >U9:?UU EMF++@ >UU'? f>UU'? >UU'? >UU'? >UU'? >UU'? ?UU'? ?UU'? `,?UU'? '@?UU'? EMF++@ R?Uu?> R?Uu&? EMF++@ |?9~?> |?rh*? |?UI4? EMF++@ EMF++@ EMF++@ k(?UU 1<?UU EMF++@ ?9n;> ?9~!? ?U%?? EMF++@ ?r,W> EMF++@ Uu?>UU {"?UU A6?UU EMF++@ EMF+*@ k\?UU >U1p?UU EMF++@ ?9^">UU zi>UU vV?UU <j?UU EMF++@ EMF++@ b?Um\? EMF++@ ?UuY? ?9Vc? EMF++@ EMF++@ ?rLm>UU ?9ba?UU ?r(u?UU EMF++@ EMF++@ ?rlu> ?r8o? EMF++@ ?9& ?UU Pe?UU EMF++@ Ld?UU EMF++@ @rXc? @U9m? EMF++@ EMF++@ B15mC(H B15mCQ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@shyamk ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ```xxx ?????? ?????? $$$ccc @@@@@@@@@,,,>>>@@@@@@``` ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc aaa222 ?????? ?????? $$$ccc    ppp ppp::: ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc @@@@@@@@@@@@@@@@@@999111@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@888>>>@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc    ;;;@@@@@@@@@@@@ @@@000@@@000@@@000@@@000@@@000@@@000@@@000 ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc    sss ?????? ?????? $$$ccc    eee GGGooo ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? $$$ccc    }}} ?????? $$$ccc ?????? ?????? $$$ccc @@@@@@@@@@@@@@@@@@999111@@@@@@@@@@@@@@@@@@@@@@@@???@@@@@@@@@@@@@@@@@@@@@ ?????? ?????? $$$ccc PPPsss ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc 444@@@$$$ @@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc @@@www ooo    ?????? ?????? $$$ccc @@@```___ ___ppp    ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc XXX@@@ ?????? ?????? $$$ccc ???GGG ?????? ?????? $$$ccc ppp    ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ??????~~~~~~$$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc PPP@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@HHH ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc hhh@@@@@@@@@@@@@@@@@@;;; @@@@@@@@@@@@@@@@@@@@@ ?????? ?????? $$$ccc bbb    xxx``` ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ??????ppp $$$ccc ?????? ?????? iii$$$ccc ?????? ?????? $$$ccc xxx``` ?????? ?????? $$$ccc hhh@@@@@@@@@@@@@@@@@@@@@222@@@@@@@@@@@@@@@@@@@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc    @@@ ?????? ?????? $$$ccc TTT    ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc @@@@@@ @@@@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc TTT    ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc :::000 $$$@@@@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ZZZ::: ?????? ?????? $$$ccc ?????? ?????? $$$ccc PPP@@@@@@+++ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"""...@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@ ?????? ?????? $$$ccc ?????? ?????? $$$ccc 999(((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(((ppp ?????? ?????? $$$ccc $$$KKK ?????? ?????? $$$ccc ?????? ?????? $$$ccc 888;;; ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? $$$ccc ?????? ?????? ###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((( @@@@@@@@@@@@@@@@@@""" 444444444444444444 222@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+++ ?????? ?????? ?????? ?????? ?????? ?????? ?????? ???``` ???___ ???OOO ???```Visio (TM) Drawing Arial Wingdz onotype  '5/G% ^?Tp2 N7OIJ`2 _HOZOlI ?`?r6 :/L/^/ tqB@q@q,b yaya2 tLq7R 8Q +_=Y  ///A/ S/e/w/ ?)?;?M?_?q? O"O4OFOXOjO|O 0_B_T_f_ 9oKo]ooo /0/B/ T/f/x/ ?'?9?K? O#O5OGOYOkO _,_>_P_b\B o@%o7e2 0oBoTo ///A/S/e/w/ *iS7oy /,/>/P/b/ ?(?:? 5wXRX8 @OROdOW   Displa sU'!a Bands  are used  to orga nize the  differe nt steps :3Z C4 `?Cop yright ( c) 2001  Microsof t Corpor ation.   All 9Bs r eserved. s_SCFF.c hm!#3229 3]0"- B, Mt A/ttx :vtba ndmgr: :.C0Off set from  top of   manage_r forK ~1@7WidthO bay, dep endent o?n numb] He:BP D#;Ra played v erticall horiz s?tarted; s title ult size$g `%Minigmumy ywCoV ,holder, ,used, organ{ teps,pro cess,CK@s ,FuncYA< epaW@oE tQX$tRX$ &Q(-DOT s!y $E `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All 2s rese rved. Y(z!|W %>YV_U pyright  (c) 2001  Microso ft Corpo ration.   All  reserved O3)l> `?Cop yright ( c) 2001  Microsof t Corpor ation.   All N2s r eserved.W 0[I}B 2oKHlN NAst# TheText= >_MapNam <Proce7ss  Drag o nto a cr oss-func tional f lowchart create new ver band?. Use  organi ze steps `?Cop yright ( c) 2001  Microsof t Corpor ation.   All l"s r eserved. Y0X9J 0@Q(-DT DNKIe2`?C opyright  (c) 200 1 Micros oft Corp oration.   All   reserve Vis_Ss@.c hm!#2730O6 &GA_b V&#GA @a&%Ld =T)tx 7Ct27"8Pt tband:re -Is labe l displa yed vert ically o r horizo SsFun q,Dorag, s,flowch ,organiz e,steps, proce mqhrQ g0!6C+1 3%)(Q6 Q(-DT pyright  (c) 2001  Microso ft Corpo ration.   All  reserved 26_O* []5 4 Bands  are used  to orga nize the  differe nt steps Nk?}r Jr$xi$i" Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SCF F.chm!#3 Pi#SC ~!~!H2+ :hzbandm cLH5V" SQA4-3 ffset of  Xa manag er where Prs aapstaOrted`cDEk y08He 2N}ba y, depen pn nu mb[pNts`cx idthMqlab 3A/ab :v30Aap( isplayed  vertica lly or h orizont fault si Ry0%Mi nimum? ,holde r,Beq,use d,organA ,diff`pnt ,steps,p rocess,C~ 0s,Func [tQ:$tR:$ `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. (cAZW `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. AY%{K !q!q# pyright  (c) 2001  Microso ft Corpo ration.   All  reserved O%O]J 8%oq_Ik '}Qq Fwh ur:0S :TheTex t=>_MapN ame_: <Process Drag o nto a cr oss-func tional f lowchart create new hor band?. Use  organi ze steps !-!-#z `?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al "s res erved. Sp .chm!# 27304 ?Q(-DT OBG+O KQKQ3 :hzban d:reg 6}s\" s this l abel dis played v erticall y or hor izont width p leng 5r7tL Du 5  03uFunc q,Drag lowchart eate, ganize,s teps,pro A9Auuc ` Nk?(< ?Q(-DT ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  Bs reser /)RD2 /'TdQ7%p^ !!!#7 Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv?ed. .A0%:K Ku%\8$ chart Any pr ocessing  functio y kin ouble-cl ick to a dd sub-p Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SFB .chm!#26?527 ter the  p assoc iated wi pis pr ocess# [" ssGtep#  Res7our wnumb people stask roperti g,func Basic,Fl owchart, inform ,diagr am,data es,joine nector Connec tor that  automat ically r outes be tween s, usi ng a rig ht-angle d line. is_SFB.c hm!#2651 opyright  (c) 200 1 Micros oft Corp oration.   All <Bs  reserve ?7g;2 Dynamic, connecto r,autom[@ cally,ro utes,betoween us,<B ,angled, line,Bas pFlowcha rt,infor ,qon,fgp,d iagram,d ata,proc ess:pjo\pr s,associN[Bs chart Decisi on point  between  two or  more pat hs in yo ur flowc hart. IC"`?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. is_SFB.c hm!#2651O0 52WO#U q%H(^ ^UfUf _aosl %1#:T am#hd "NaNa ,Enter t he co sociated  with  process,Q0 stepQ0/ Reosour peopleH0oquir opertin rDecis80, point,be tween,tw o,more,p aths,flo wchart,B asic,inf orm62  agram,da owchart A loca tion in  your dia gram whe re contr ol is tr ansferre d. The be posi ?ed any line. `Q(-DT 7!=M$^ `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. s_SFB.ch m!#26508 83Ro"G VX*zSr X/(^: PLu:# just X P osi7Q of  Shape 2*A*AC2W!O% ter the   assoc iated wi is pr ocessQP pQPW!C5{H Resou eopleHPqu[ir taskQP Properti Contro l,transf er,loc6R, diagram iangle here, ne,Basic ,Flowcha rt,infor es,jo owchart 'Connect Use th is shap o create oss-r eferenc nd hyper link fro proces s on9 anot7her@ CMD=2 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  @Bs rese rved. Vis_SF B.chm!#2 utgoing 0&I"` Ut@.Shape Appearan7ce WIncom _._B@V J_z$cR25oq_ Circ#le Arrow%o7o Properti q25.3 ff,page, refereDP,~ `,creatL oss,hy&pl ink,from ,proceX e,anot her,Basi c,Flowch art,info rm_B,f iagram,d Pers,ass oci_B,pw N7,?N a(!@T Xtsy$% :\Progra m Files\ Microsof t Office \Visio10 \1033\So lutions\ Flowchar t\Basic   Shapes  (US uni ts).vss C:\Progr am Files \Microso ft Offic e\Visio1 0\1033\S olutions \Flowcha s-Fwunc  Shapes  Vertic& US units?).vss Co&lo r Scheme `'Set t_he co|As  f}@this  document Z!Z!"B 0rC&{17 B4E26D-0 0DB-4A8B -962D-7A F01C3082 cQl571 :cfO6.0: lack & W onnector iFlowcOhart a,1Na HIFVQ* "P!P!!2 {F2277 B85-8EAD -49DD-84 10-2EB55;8C  X: { 43737A08 -B891-45 3A-90D6- 39A4973B F31F} Y 2]  L[  {B2052FE 8-5813-4 EE0-9187 -640CE1F 14C59} { 754580E9 -28E[0B86 -A8C4-32 7C26362B @DD93 6-1EFA-4 06_0E30B 08BN@ 42EC-83E B-D136DA 175F80 0F6A1 F9-4C3B- AB9E-09CM0 0@O?a? ?Q(-DT PdgULSebW_i_ Ooaoso -Boardin g Work F $y2A<+$ TechO OpsT {08B0601 3-4E82-4 2EC-83EB -D136DA1?75F80}  M: {F 2277B85- 8EAD-49D D-8410-2 EB558C7B 407} [ X K_]_oRYw_ / /2/D/V/h/z/ ?!?3?E?W? ROdOvO Partne CDD936-1 EFA-4767 -B8C9-9 E30BF143 z Opsp 54580E9- A8C4-327 C26362BF @%QU)s TLQY/ @E?W?i? /E]Q;O0D _0_B_T_f_ CoUogoyo {SPG De?v/Test E0F6A16D -F4F9-4C 3B-AB9E- O$O6OHO6 Partners B2052F E8-5813- 4EE0-918 7-640CE1?F14C598 _$/6/ :?L?6_p? O#o5oGoYo E8AC-614 C1-962 B-F51735 A3BB0 580E9 -A8C4-32 7C263 a8q'q f,page,r eference ,Use,cre !oss,h yperlink ,from,pr ,another ,Basic,F lowchU nformati  ,diag ram,data~ %es,joiX ,associ &{242F 5B52-87F 1-4F73-9 420-12B2 162D7F25 DC4D-7A5 -8020861 03EA6 =DDB7B3D 13D-0E56 EE33BD0 jo|nq +vew#w6yld v@.@47 8@31-6E2F 49AF<@D B2052FE 8-581Z 0-9187-6 40CE1F14 936-1EFA -4767-B8 C9-9060E [(y#y ant On-B oarding  Checklis file://S AS/KWSBi 0/New% 20q3s/q3 6.doEc ERD3bF Biz O ps and p artner P M discus s with+us  to deci de on in itial of 0s. They  er Man smeu0 uuseYp formatiWp?from tnuyy Policie&s Procedur pDocu q<p(t hisYpclud plat1pcha pMpbv) -M_$>C urj3h 0,func Basic,Fl ,diagr am,data es,joiHq, associ A@P4$ 896F55-5 CA1-4D12 -8C6A-F9 41ADC4D4SA6r 9EBC2B74 -762CA C04C38?E2940D ADF643AE 5F7-FB95 p 1-bo x setup,  open su b-web'rDL3s  p+vre tactsVqbo"ApsSp F7FF204A -5DF9-42 A3-3D AC77C6 D936-1EF 67-B8C F143u 277Bf D-49DD-8 410-2EB5 58C7B407 Lxy/_ Io[o6 I/>\+Rece ivs%loc MSI & e d w/ dev 57829CD- 968F-469 E-9F76-6 '@C499DF5 ?)?;?M?3 2052FE8- 5813-4EE 0-9187-66^@E1 59+O=O _-_?_Q_ l*O=o drO<_N_ C9CAD 68E-A532 -418B-AD 27-EDFF4 26F9554} ,08B06 83EB-D13 6DA175F8 / /3?D/ F?X?j? roS_So et upI r crea te an ac countG sample o/fferops l to s< (include 02ADDB-8 9E0-078D B10DA05C CDD936-1 EFA-4767 -B8C9-9 E30BF143 ax5.! ph5}& 281B-544 1-417E-A 031-23A8 35BB8F05 580E9-28 B86-A8 C4-327C2 6362BFE' 13-4E82 -42EC-83 EB-D136D A175F80s E0F6A16D -F4F9-4C 3B-A~ BD2B1 Off,pa ge,re ce,Use,V hyper link,fro &{632 5279B-3B 7B-4814- -C8360 36CE0EB} 5-952i 655EC572 34B633-3 A73D0 89D59 ;+v'7Sw g'!e) ?VDc|Z?WC  2OkN q<u(}%k_}Q oH}_Ro^  o 5z  m%V/h/ B3F24 780D923 Recei ve 1-box  locatio n, MSI a nd pass  on to ners alo ng with  SPK & ot nt info gK$2q hProce ,func sic,Flowkch ,diagr am,data es,joi @z3|A E220-B28 B-420 F-AF7F00?8F5146 -83EB-D1 36DA175F YOkO}O ,o>oPobo 8CC0E1A1 9187-6 r$`N& 6b"^1 .CPartne Devel op and T Sample  Offering sL2V5 EDA0-7DE 991-B44 0-FA3 0oBo: -#HQ7)$ @?R?$d? 'J\C:OPObOtO 4_F_^ put to o U decisi W453D F31A-225 8-4097-8 89B-0261 EA07F `DD93 6-1EFA-4 767-B8C9 -9060E30 d CI[ bQ0AK /?A6- 91551 32F-802 0-38* 17FOC114  {754580 E9-28E 86-A8C4- 327C2636 )qP"t sjt=q artner n eg. proc ess unti l first  draft d?ed.  created  and upl  by O Manag; scrib ,funct ,Basic,F diagram, s,asosoci hHcU@ 4_F_X_j_ Cross FunctionOal Guide TheDoc Page-1 ure Form ical hol sFunctio nalType sFunctio?nalRX sFunctio?nalRY SchemeName bandMargin bandMin HolderOf chartTyp Flow Normal Visio 00 Visio 90 Connector Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80  Separat Flow Dashed chart No Flow Title BayTop BayWidth Lheight Lvert BayHeight BayLeft ShowTitle TitleHeight ultBandS bandMgrMin visKeywords visVersion Scale AntiScale GridRounding tional b visHMAH BHeight zontal h?older BaySize Lwidth tional b?and.6 Blength Process Duration Resources mic conn?ector Decision rol tran page ref erence eAppeara yBottom OPCShapeID OPCDPageID OPCDShapeID ageConne Row_1 mic conn ector.61 Process.23 mic conn ector.24 Process.25 Process.26 mic conn ector.27 page ref erence.2 Process.30 mic conn ector.31 mic conn ector.32 mic conn ector.36 mic conn ector.39 Process.29 mic conn ector.43 mic conn ector.44 xLeft xRightMicrosoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6EMF+0@ A23KD! p5:(p5:( EMF+*@ >r<C? EMF++@ EMF+*@ EMF++@ EMF+*@ EMF++@ D7Dj++C D7Dj++C SC&~KD VCLLKDA PCLLKD VCLLKD EMF+*@ B2i,C'>:D EMF++@ B2i,C'>:D6@ EMF++@ B2i,C'>:D6@ EMF++@ B2i,C'>:D6@ ?UUJ> ?r<R? EMF++@ EMF+*@ >U]"? EMF++@ EMF+*@ EMF++@  p5:(p5:( EMF+*@ EMF++@ SCk?*D XCtl8C EMF+*@ EMF++@ EMF++@ EMF++@ ?9Np> ?rl$? EMF++@ EMF++@ EMF+*@ >rLj?. EMF++@ EMF++@ >rLH? EMF++@ ?UEL?r ?r,T?r EMF++@ >)?9n EMF++@ `K?r\ `K?r|)? `K?9N EMF++@ m?UE*? m?Ue@? m?rLH? EMF++@ EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ [0?r\ EMF++@ GJ>(}R?U >(}R? >(}R?r >(}R? >(}R? ?(}R? ?(}R? ?(}R? EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ [0?r\ EMF++@ EMF+*@ EMF++@ EMF++@ >UU7> EMF++@ ?UUM>r EMF++@ &K$S& A3DPJ EMF+*@ >9>i?. EMF++@ >r<%?[ EMF++@ >r\]? >9.m? EMF++@ EMF++@ >)?r\!> >)?9. >)?UE EMF++@ EMF++@ EMF+*@ >UEj?. EMF++@ EMF++@ >9N5? EMF++@ EMF++@ >)?9nK? EMF++@ `K?Uu `K?rl<? `K?9>L? EMF++@ EMF+*@ EMF++@ >rlT> EMF++@ ?U)X?x EMF++@ ="l,? (>"l,?U5X>"l,? >"l,? >"l,? >"l,? ?"l,? ?"l,? ?"l,? (?"l,?9v<?"l,? WF?"l,?U Z?"l,? b?"l,? u?"l,? EMF++@ W?r|D> W?r|=? EMF++@ EMF++@ ~QYBN ~QYB/_ C~QYBN C~QYB/_ EMF+*@ B~QYBN >9n/? EMF++@ B~QYBN EMF++@ B~QYBN Ao>UU ?rh2?UU EMF++@ EMF+*@ EMF++@ EMF++@ ?U9b? EMF++@ EMF++@ EMF+*@ >9~)? >U%G? EMF++@   >UU a2?UU B<?UU EMF++@ c3?UU :??UU EMF++@ ~QYBF ,D~QYB ,D~QYBF EMF+*@ B~QYB *>U-D? EMF++@ B~QYB >9n/? >r4C? EMF++@ B~QYB ?9Ng> ?9V8? ?U-D? EMF++@ B~QYB EMF++@ EMF+*@ EMF++@ >Um1? >rD=? EMF++@ EMF++@ EMF++@ EMF+*@ >r<r> >r|h? EMF++@ EMF++@ >U5,? EMF++@ "?rxl? EMF++@ =QUM? >QUM? an>QUM?U >QUM? >QUM? >QUM?r >QUM?r ?QUM?Uy ?QUM?9Z$?QUM?r@,?QUM? @?QUM? I?QUM? ]?QUM? g?QUM? es?QUM?r ?QUM? ?QUM? ?QUM? ?QUM? ?QUM?U ?QUM? EMF++@ w?rlj> EMF++@ ?)?SU ?r 3?SU nn?SU EMF++@ Btl8C Ctl8C Btl8C EMF+*@ *>rJ0@ EMF++@ >U;4@ EMF++@ ?9f8? ?r,L? ?U-$@ EMF++@ *?rp5? EMF++@ yTD+!hC& RD+!hCy PD,!hC LDU}?C NDU}?Cx PDT}?C% EMF+*@ BU}?C >""b> S>""b> >""b> EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ EMF+*@ EMF++@ h1?"l I;?"l EMF++@ ?9~_> EMF++@ +?UY6?g +?9:@?g EMF++@ EMF++@MS-SPG Pages Masters Page-1 Vertical holder Functional band Horizontal holder Functional band.6 Process Dynamic connector Decision Control transfer Off-page reference Annotation Terminator _VPID_ALTERNATENAMES _VPID_PREVIEWS _PID_LINKBASE EMF+0@ A13KD! p5:(p5:( EMF+*@ >r<C? EMF++@ EMF+*@ EMF++@ VC LKD PC LKDk VC LKD EMF+*@ h,C >:D EMF++@ h,C >:D6@ EMF++@ h,C >:D6@ EMF++@ h,C >:D6@ ?UUJ> ?r<R? EMF++@ EMF+*@ >U]"? EMF++@ EMF+*@ EMF++@  p5:(p5:( EMF+*@ EMF++@ EMF+*@ EMF++@ SCk?*D B15mC(H B15mCQ C*zaC EMF+*@ EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF+*@ >rLj?. EMF++@ EMF++@ >rLH? EMF++@ ?UEL?r ?r,T?r EMF++@ >)?9n EMF++@ `K?r\ `K?r|)? `K?9N EMF++@ m?UE*? m?Ue@? m?rLH? EMF++@ EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ [0?r\ EMF++@ GJ>(}R?U >(}R? >(}R?r >(}R? >(}R? ?(}R? ?(}R? ?(}R? EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ [0?r\ EMF++@ Ck?*D Bk?*D EMF+*@ EMF++@ EMF++@ >UU7> EMF++@ ?UUM>r EMF++@ &K$S& A3DPJ EMF+*@ >9>i?. EMF++@ >r<%?[ EMF++@ >r\]? >9.m? EMF++@ EMF++@ >)?r\!> >)?9. >)?UE EMF++@ EMF++@ EMF+*@ >UEj?. EMF++@ EMF++@ >9N5? EMF++@ EMF++@ >)?9nK? EMF++@ `K?Uu `K?rl<? `K?9>L? EMF++@ EMF+*@ >UU5> >UU5>Uu >UU5> >UU5> >UU5>9. ?UU5>U ?UU5> '?UU5>r 1?UU5> SI?UU5> c?UU5> EMF++@ >U)X? EMF++@ ?U5X> ?9v<? EMF++@ =UU-?r|D>UU-? >UU-?r >UU-? >UU-?U >UU-? ?UU-? ?UU-?9 )?UU-?r|=?UU-? SI?UU-? 9Q?UU-? e?UU-? n?UU-? EMF++@ EMF++@ EMF+*@ >9n/? EMF++@ EMF++@ Ao>UU ?rh2?UU EMF++@ EMF+*@ EMF++@ EMF++@ ?U9b? EMF++@ EMF++@ EMF+*@ >9~)? >U%G? EMF++@   >UU a2?UU B<?UU EMF++@ c3?UU :??UU EMF++@ EMF+*@ *>U-D? EMF++@ >9n/? >r4C? EMF++@ ?9Ng> ?9V8? ?U-D? EMF++@ EMF++@ EMF+*@ EMF++@ >Um1? >rD=? EMF++@ EMF++@ EMF++@ EMF+*@ >r<r> >r|h? EMF++@ K'?UU `t?UU A~?UU EMF++@ >U5,? EMF++@  ?r|Z>  ?U%7? EMF++@ J?9Z$? J?r@,? EMF++@ 9^v>UUu? >UUu? >UUu?9 >UUu?9 ?UUu?r ?UUu? ?UUu? 42?UUu? >?UUu? G?UUu? Q?UUu? {k?UUu?9B}?UUu? ?UUu? ?UUu? ?UUu? ?UUu? EMF++@ k8Ceg k8Ceg EMF+*@ *>rJ0@ EMF++@ >U;4@ EMF++@ ?9f8? ?r,L? ?U-$@ EMF++@ *?rp5? EMF++@ EMF+*@ >""b> S>""b> >""b> EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@shyamk ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? xxx@@@444;;;@@@ ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? 000OOO ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ```PPP ppp    ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? (((RRR ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? @@@@@@HHH ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ?????? hhh(((@@@@@@@@@@@@@@@@@@???@@@@@@@@@@@@@@@@@@888000 ccc$$$ ?????? ccc$$$ ?????? 000888@@@@@@@@@@@@@@@@@@@@@@@@@@@$$$ @@@@@@@@@@@@@@@@@@@@@@@@@@@ ,,,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ccc$$$ ?????? kkk000 ccc$$$ ?????? @@@@@@@@@@@@@@@@@@>>>888@@@@@@@@@@@@@@@@@@    ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ?????? @@@kkk ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? www444 ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ?????? ccc$$$ ?????? @@@@@@@@@ ccc$$$ ccc$$$ ?????? ccc$$$ @@@@@@@@@@@@@@@@@@@@@ ;;;@@@@@@@@@>>> @@@xxx ccc$$$ ?????? ccc$$$ ```xxx ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ---... ccc$$$ ccc$$$ ?????? ggg@@@ ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? @@@@@@@@@ ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? 000OOO ccc$$$ ??????___HHHsssssssssssssssssssssssssssssssssssssssssssssssssssssssssVVV ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss ssssssssssssssssssssssssssssssoooSSSssssssssssssssssssssssssssssss @@@sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss--- ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss ccc$$$ ??????___ sssssssssssssssssssssssssssssssssssssssssssss YYY!!! ccc$$$ ??????___ XXXPPP YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ LLLsssVVV ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss sssssssssssssssssssssssssssssssss YYY!!! ccc$$$ ??????___ tttsssVVV ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss ssssssssssssssssssssssssssssssWWW::: YYY!!! ccc$$$ ??????___ ssssssssssssssssssssssssssssssVVV ssssssssssssssssssssssssssssss YYY!!! ccc$$$ ??????___ ***PPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ ___'''>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>777--- UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ mmm??????___ UUUPPP YYY!!! ccc$$$ ??????___ @@@   555:::zzz YYY!!! ccc$$$ ??????___ UUUEEE YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ UUUPPP YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ ;;;;;;;;;;;;;;;;;;;;;;;; ;;;;;;;;;;;;;;;;;;;;;;;; YYY!!! ccc$$$ ??????___ xxxXXX YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ zzzssssssssssssssssssssssssssssssssssssssssssssssssssssss YYY!!! AAA+++ ccc$$$ ??????___ YYY!!! !!!LLL::: ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! :::``` ccc$$$ ppp??????___ YYY!!! ccc$$$ ??????___ YYY!!! 222vvv ccc$$$ ??????___ ::::::::::::::::::::: YYY!!! ccc$$$ ??????___ xxxXXX YYY!!! ccc$$$ ??????___ ;;;;;;;;;;;;;;;;;;;;;;;;...;;;;;;;;;;;;;;;;;;;;;;;; YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ HHH::::::sss @@@:::::::::    :::::::::::::::::::::::::::eee YYY!!! ccc$$$ ??????___ >>>>>>>>>>>>>>>>>>>>>>>>===>>>>>>>>>>>>>>>>>>>>>>>>>>> YYY!!! ccc$$$ ??????___ FFFmmm YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ ssslll YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ hhhlll YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ OOO--- ooossssss YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ ssssss YYY!!! ccc$$$ ??????___ PPPXXX ssssss YYY!!! ccc$$$ ??????___ ssssssssssssssssssssssssssssssVVV sssssssssssssssssssssssssss]]] lllsssssssssssssssssssssssssss sssssssssssssssssssssssssssssssss :::+++:::AAA YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___ YYY!!! ccc$$$ ??????___HHHsssssssssssssssssssssssssssssssssssssssssssssssssssssssssVVV ssssssssssssssssss]]]333 ***lllssssssssssssssssss ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss @@@sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss--- ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss ccc$$$ ?????? 888___ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((( @@@@@@@@@@@@@@@@@@""" 444444444444444444 222@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@555 ccc$$$ ///@@@ ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU cccBBB cccXXX cccBBB cccXXX ccc777 cccXXX cccBBBVisio (TM) Drawing Arial Wingdz onotype  '5/G% ^?Tp2 N7OIJ`2 _HOZOlI ?`?r6 :/L/^/ tqB@q@q,b yaya2 tLq7R 8Q +_=Y  ///A/ S/e/w/ ?)?;?M?_?q? O"O4OFOXOjO|O 0_B_T_f_ 9oKo]ooo /0/B/ T/f/x/ ?'?9?K? O#O5OGOYOkO _,_>_P_b\B o@%o7e2 0oBoTo ///A/S/e/w/ *iS7oy /,/>/P/b/ ?(?:? 5wXRX8 @OROdOW   Displa sU'!a Bands  are used  to orga nize the  differe nt steps :3Z C4 `?Cop yright ( c) 2001  Microsof t Corpor ation.   All 9Bs r eserved. s_SCFF.c hm!#3229 3]0"- B, Mt A/ttx :vtba ndmgr: :.C0Off set from  top of   manage_r forK ~1@7WidthO bay, dep endent o?n numb] He:BP D#;Ra played v erticall horiz s?tarted; s title ult size$g `%Minigmumy ywCoV ,holder, ,used, organ{ teps,pro cess,CK@s ,FuncYA< epaW@oE tQX$tRX$ &Q(-DOT s!y $E `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All 2s rese rved. Y(z!|W %>YV_U pyright  (c) 2001  Microso ft Corpo ration.   All  reserved O3)l> `?Cop yright ( c) 2001  Microsof t Corpor ation.   All N2s r eserved.W 0[I}B 2oKHlN NAst# TheText= >_MapNam <Proce7ss  Drag o nto a cr oss-func tional f lowchart create new ver band?. Use  organi ze steps `?Cop yright ( c) 2001  Microsof t Corpor ation.   All l"s r eserved. Y0X9J 0@Q(-DT DNKIe2`?C opyright  (c) 200 1 Micros oft Corp oration.   All   reserve Vis_Ss@.c hm!#2730O6 &GA_b V&#GA @a&%Ld =T)tx 7Ct27"8Pt tband:re -Is labe l displa yed vert ically o r horizo SsFun q,Dorag, s,flowch ,organiz e,steps, proce mqhrQ g0!6C+1 3%)(Q6 Q(-DT pyright  (c) 2001  Microso ft Corpo ration.   All  reserved 26_O* []5 4 Bands  are used  to orga nize the  differe nt steps Nk?}r Jr$xi$i" Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SCF F.chm!#3 Pi#SC ~!~!H2+ :hzbandm cLH5V" SQA4-3 ffset of  Xa manag er where Prs aapstaOrted`cDEk y08He 2N}ba y, depen pn nu mb[pNts`cx idthMqlab 3A/ab :v30Aap( isplayed  vertica lly or h orizont fault si Ry0%Mi nimum? ,holde r,Beq,use d,organA ,diff`pnt ,steps,p rocess,C~ 0s,Func [tQ:$tR:$ `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. (cAZW `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. AY%{K !q!q# pyright  (c) 2001  Microso ft Corpo ration.   All  reserved O%O]J 8%oq_Ik '}Qq Fwh ur:0S :TheTex t=>_MapN ame_: <Process Drag o nto a cr oss-func tional f lowchart create new hor band?. Use  organi ze steps !-!-#z `?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al "s res erved. Sp .chm!# 27304 ?Q(-DT OBG+O KQKQ3 :hzban d:reg 6}s\" s this l abel dis played v erticall y or hor izont width p leng 5r7tL Du 5  03uFunc q,Drag lowchart eate, ganize,s teps,pro A9Auuc ` Nk?(< ?Q(-DT ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  Bs reser /)RD2 /'TdQ7%p^ !!!#7 Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv?ed. .A0%:K Ku%\8$ chart Any pr ocessing  functio y kin ouble-cl ick to a dd sub-p Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SFB .chm!#26?527 ter the  p assoc iated wi pis pr ocess# [" ssGtep#  Res7our wnumb people stask roperti g,func Basic,Fl owchart, inform ,diagr am,data es,joine nector Connec tor that  automat ically r outes be tween s, usi ng a rig ht-angle d line. is_SFB.c hm!#2651 opyright  (c) 200 1 Micros oft Corp oration.   All <Bs  reserve ?7g;2 Dynamic, connecto r,autom[@ cally,ro utes,betoween us,<B ,angled, line,Bas pFlowcha rt,infor ,qon,fgp,d iagram,d ata,proc ess:pjo\pr s,associN[Bs chart Decisi on point  between  two or  more pat hs in yo ur flowc hart. IC"`?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. is_SFB.c hm!#2651O0 52WO#U q%H(^ ^UfUf _aosl %1#:T am#hd "NaNa ,Enter t he co sociated  with  process,Q0 stepQ0/ Reosour peopleH0oquir opertin rDecis80, point,be tween,tw o,more,p aths,flo wchart,B asic,inf orm62  agram,da owchart A loca tion in  your dia gram whe re contr ol is tr ansferre d. The be posi ?ed any line. `Q(-DT 7!=M$^ `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. s_SFB.ch m!#26508 83Ro"G VX*zSr X/(^: PLu:# just X P osi7Q of  Shape 2*A*AC2W!O% ter the   assoc iated wi is pr ocessQP pQPW!C5{H Resou eopleHPqu[ir taskQP Properti Contro l,transf er,loc6R, diagram iangle here, ne,Basic ,Flowcha rt,infor es,jo owchart 'Connect Use th is shap o create oss-r eferenc nd hyper link fro proces s on9 anot7her@ CMD=2 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  @Bs rese rved. Vis_SF B.chm!#2 utgoing 0&I"` Ut@.Shape Appearan7ce WIncom _._B@V J_z$cR25oq_ Circ#le Arrow%o7o Properti q25.3 ff,page, refereDP,~ `,creatL oss,hy&pl ink,from ,proceX e,anot her,Basi c,Flowch art,info rm_B,f iagram,d Pers,ass oci_B,pw N7,?N a(!@T Xtsy$% owchart Adjust able tex t box wi th brack et you c an us ts or no tes. B eight! Q(-DT 1T1T3z Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SFB .chm!#26?505 Adjus t Bracke t Length e,text,b e,add,ca llouts, es,he s,typed, Basic,Fl owchart, inform ,diagra m,data,p rocessO oiners,a ssoci ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  2s reser?ved. Q(-DTo ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  2s reser?ved. A0[5[A `text b ox and i ,@associa ted line  increas es or de eas you  b. To? chang width mment, d bsid< owchart Indica tes the  beginnin g or end  of a pr ogram fl ow in yo ur dia onment. ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  C2s reser Vis_S FB.chm!# 26531 _;*6 y s=s&E 683,E nter the p asso ciated w pis p?rocess}0 D]ua3 sst#ep}0nq wnumb eoplet0qu[ir stask}0 qQH(^ Properti (IQ@p 3wTermi nator,In ps,be ginning, m,flow,d Basic chart ,informb2 ,data] joiners, :\Progra m Files\ Microsof t Office \Visio10 \1033\So lutions\ Flowchar t\Basic   Shapes  (US uni ts).vss C:\Progr am Files \Microso ft Offic e\Visio1 0\1033\S olutions \Flowcha s-Fwunc  Shapes  Vertic& US units?).vss Co&lor  Schemes. 'Set the @this do cument TF!.U Z!dZ!2B C&{17B 4E26D-00 DB-4A8B- 962D-7AF 01C3082B sQ|5G1 :cf6'.0: ack & Wh?ite nnector iFlowch'art oNzB/H 'A2A2A "P!P! e5yw* F2277B85 -8EAD-49 DD-8410- 2EB558C P'07}  X: {437 37A08-B8 91-453A- 90D6-39A 4973BF31 F} YV_h_zR]   L[ {B2 052FE8-5 813-4EE0 -9187-64 0CE1F14C 59} {754 580E9-28 E$PB86-A8 C4-327C2 6362BFE PDD936-1 EFA-4767 P60E3 R82-42E C-83EB-D 136DA175 PE0F6 A16D-F4F 9-4C3B-A B9E-09C0 PBD2B1 ?Q(-DT n-Boardi ng Work ?Flow 1",7#G# r1113H v!7(D0 RABU" 1W!RA Nf%RA E@B[G TechO Ops {08B0601 3-4E82-4 2EC-83EB -D136DA1?75F80}y"  M: {F 2277B85- 8EAD-49D D-8410-2 EB558C7B 407} [ X E/W/i/ 1411Y?I O1OCO _*_<_0N_`_r_ o+o=oOoao Partner DD936-1E FA-4767- B8C9-9 30BF143 S?e?# 2|&6+ V%Biz Ops 754580 E9-28E 86-A8C4- 327C2636 2BFEV X/j/TO ?K_]_o_ 'o9oKo]ooo rs:ov SPG Dev/ F6A16D-F 4F9-4C3B -AB9E-09 BD2B1 ;?M?L LY;/M/_/q/ &Part 052FE8-5 813-4EE0 -9187-64 0CE1F14C '13DD E8AC-614 0C1-962 B-F51735 A3BB0 0580E9 -A8C4-32 7C263 ,page,re ference, Use,crea Aoss,hy perlink, from,pro another, Basic,Fl owchZ formati @,diagr am,data es,joi] associ  &{242F5 B52-87F1 -4F73-94 20-12B21 62D7F25} [C7DD C4D-7A56 QFBE- 80208610 DDB7B3D7w-A3 3D-0E56E?E33BD0 #Atq! +}/sr lqcExt E{275 59660-3F 86-41D0- 910C-0CC E74A65F2 X: {7545 80E9-28E 4-327C26 362BFE}  pF2277B 85-8EA DD-8410- 2EB558C7 B407} ]  3q] C (O:OLO hProcess ing,f unction, Basic,Fl owchart, informaK ,diagr am,data; es,joine rs,assoc C2D8DE 7-4E52-A D57-B382 31BAE67B xB205 2FE8-581 a87-6 40CE1F14 936-1EFA -9060E30uB4 3EB-D136 DA175F80 E0F6A16 D-F4F9-4 C3B-AB9E -09C0 9`1p`5 9A722-F6 98-88 5B-6F931 0D6A701 /(/:/Z itial of `s de cided. O D Manage r in Biz  Ops fil GConfi gur#b Spe c (OCS) ?with p ` theser H(q@/@lat,@ caAa new/ modified G)!_3_E_W_ o/oAoSoeowo 22E02 C-A99 5DFC69FB 1Wai! E65E2-D1 F7-4459- A16E-3C5 B63FAFC5 SaSe} 3cO{D MgrW en @ PCT (f rom OCS _,_>_ P_b_t_ HoZolo(d C303330- DAA3d BC6AB?F10EF4z 40CDD93 6-1EFA-4 8C9-9 060E30F >?P?b?t:Q HI>UKSend  uPp reque st to Te ch Ops wwith @F aJ other _C_U_g_ CD89974E FF-6382 7FE5154A\N 82-42EC- 83EB-D13 6DA175F8 ReceiveL loadx duct c log on   mach JlesI_ B/T/f/x/ BC8ABB-A 809-450C -AB,05E29 1D78DC73 +40CDD 936-1EF 767-B8C9  60E30BF ?#?5< }B?T?f?x? Convey m  that ne w offer rn oth elevant fo (serv Ds etc)  h% u @z3#a" Ix2 PM are+$i" F3BCB-F3 E1-8FE 2-0207AA?C2055B O[AEe_w_ 65C6D-FF 4B-4C56- 960F-2CB 0B496B7B D936-1EF A-4767-B 8C9-9j E3?0BF1435 2FE8- E0-91o87-6 E78527 28-B3m 9-A8CF-0 11FBB4A4'7A6 art dev/ test on Process, ,func tion,Bas ic,Flowcuh ,diagr am,data es,joine rs,assoc `!|!I Q(-DT 0g|a8 x0!|e</ ntil( SPbeen fa ed and p ir code  well. P co_Pnu /or wait ]TSPG sig nal to g .Z"|aRqm3cbx?a Q9eg/y/ CVDrop CVT bu ilds   1-box  ith Tech R.C ( 4E115A81 -514C-40 60-B4BD- 7D48AF02 72F4}v" >U[ X: {E 0F6A16D- F4F9-4C3 B-AB9E-0 9C075 77B85-8E AD-49DD- 8410-2EB 558C7B40 7} ]  I[ NLQ`@ IwJX`# ]WoioYU ,',(5 '-4ax USPG  ready . Ema partner  #hProc function ,Basic,F lowch nforma ,diagra m,data s,joi associ /0(+rg KO]OI 'AA61 A864-725 I02C2-9A3 F-509490?F1452D "?} X1! CDD936-1 EFA-4767 -B8C9-9  /E30B -43E0-8& -021DF1D 0FBAF ready to  go pre-6 cess, ng,funct ion,Basi c,FlowchV ,diagram ,data q,asosoci 80qC@ H#l/~/ 48FEDCF 3-00971 D39D4 597E1 2052FE8- 5813-4E 9187-6h0E C595?G?Y< ?vO"O4O XOjO4 _%_z_Fo[_m_< ufinish   an?d move @z3DLQ tNAPm 1DDE29-A B01-426 9A1-F68A F75C3433 D936-1EF A-4767-B 8C9-9060/E30B /AV($ ?@~?9 swtepz ast time od..B- !&1H1@ 0aBABAY" 36FFD 45C-E594 -43F1-85 7E-52896 54369B6} wTermina tor,Indi cates,be ginning, flow,dia bBasic,F `chart,i mation ,data `joine rs,assoc 80E9-28E B86-A8C 4-327C26?362BFE^ eyHHq>$ ` SPS 2 .5 dev/ t stage ^_p_p S/e/X At end transfer  to prep_rod ay A!QH0q Partners  sit dow n with O ing Ma is infor mation  pe fir p, all  changes qotts ar pbe l7oad wice a w `A4~W+ @`uN;P` N`@@z3  lK2. <,_2T1 I%<~S N/`/r-_1 4F942F26 -1C18-41 06-8093- 1864DCB3 0FA8} Nu[ X0: { 754580E9 -28ED-4B 86-A8C4- 327C2636 2BFE} YR F2277B85 -8EAb -2EB5 58C7B407 } X1S -4767-B8 C9-9060E 30BF143z F34B50BE -C812-X -B373-75 D96CB75F P2EC- 83EB-D13o6DA1 Cross FunctionOal Guide TheDoc Page-1 ure Form ical hol sFunctio nalType sFunctio?nalRX sFunctio?nalRY SchemeName bandMargin bandMin HolderOf chartTyp Flow Normal Visio 00 Visio 90 Connector Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80  Separat Flow Dashed chart No Flow Title BayTop BayWidth Lheight Lvert BayHeight BayLeft ShowTitle TitleHeight ultBandS bandMgrMin visKeywords visVersion Scale AntiScale GridRounding tional b visHMAH BHeight zontal h?older BaySize Lwidth tional b?and.6 Blength Process Duration Resources mic conn?ector Decision rol tran page ref erence eAppeara yBottom OPCShapeID OPCDPageID OPCDShapeID ageConne Annotation Terminator Process.44 Process.30 mic conn ector.68 Process.23 Process.25 Process.26 mic conn ector.27 mic conn ector.28 Process.29 mic conn ector.34 mic conn ector.35 mic conn ector.44 xLeft xRight Process.36 mic conn ector.38 Process.39 Process.40 mic conn ector.41 mic conn ector.43 tation.4 tation.4 tation.3Microsoft Visio Drawing VISIO 6.0 Shapes Visio.Drawing.6EMF+0@ A23KD! p5:(p5:( EMF+*@ >r<C? EMF++@ EMF+*@ EMF++@ EMF+*@ >U]"? EMF++@ EMF+*@ EMF++@  p5:(p5:( EMF+*@ EMF++@ EMF+*@ EMF++@ \C212C XCtl8C UC212C\ \C212C BKMpC BKMpC BzMpC BKMpC EMF+*@ EMF++@ $CloSC RCw7'C EMF+*@ EMF++@ >UUJ>? EMF++@ C||*DT B~u%D C||*D C||*DT B~u%D C||*D CNa%D5 B~u%D B8|%D EMF+*@ EMF++@ B8|%D 0B8|%D 8kCQ"=B sqCK5$B XCw=<D EMF+*@ EMF++@ >UUJ>? EMF++@ EMF++@ XCtl8C EMF+*@ >9Z,? >r @? EMF++@ dFC6@ WG>UU d(?UU K0?UU EMF++@ dFC6@ EMF++@ dFC6@ EMF++@ dFC6@ EMF++@ dFC6@ >UUy? >UUy? ?UUy?rd)?UUy? EMF++@ ~QYBX C~QYBX C~QYB EMF+*@ B~QYBX EMF++@ B~QYBX EMF++@ C~QYB C~QYB EMF+*@ B~QYB =vO>> &>vO>> m>vO>> >vO>> >vO>> >vO>> >vO>> >vO>> >vO>> ?vO>> ?vO>> ?vO>> B-?vO>> &6?vO>> B=?vO>> BM?vO>> &V?vO>> g?vO>> y?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> ?vO>> EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB =w-I? >w-I? >w-I? ;>w-I? `X>w-I? >w-I? >w-I? >w-I? >w-I? ?w-I? ?w-I? ?w-I? '?w-I? 9?w-I? B?w-I? pT?w-I? <f?w-I? p?w-I? y?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? ?w-I? EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB EMF++@ B~QYB hD?U0 4V?U0 ht?U0 EMF++@ B~QYB EMF++@ B~QYB EMF++@ CNa%D CNa%D XCw=<D CNa%D EMF+*@ EMF++@ EMF++@ =ffN?  5>ffN? P|>ffN? >ffN? >ffN? >ffN? >ffN? ?ffN? ?ffN? ?ffN? )?ffN? ;?ffN? dM?ffN? h?ffN? p?ffN? ?ffN? ?ffN? ?ffN? EMF++@ EMF++@ EMF++@ EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@ C43KB$ B~QYB B~QYB EMF+*@ B~QYB @>U5F> @>9>m? @>rb3@ @>r$q@ EMF++@ B~QYB EMF++@ B~QYB Kn?UU ?UR$@UU 8,@UU *1@UU w@@UU ?riE@UU 2W@UU ?U$\@UU ?r}h@UU EMF++@ CfV D CfV D EMF+*@ EMF++@ >>UU5?9 >UU5? >UU5?r >UU5? >UU5? ?UU5? ?UU5? ?UU5? .?UU5?9 5?UU5? ??UU5?U S?UU5? _g?UU5? 6s?UU5? }?UU5? ?UU5? ?UU5? EMF++@ `?Uac? `?r(u? EMF++@ :6>UU ,"?UU {[?UU ?UAo?UU EMF++@ ?U!&? ?rPk? ?U1u? EMF++@ ?U%"? EMF++@ Qh?UU 2r?UU EMF++@ EMF+*@ =UUU>r =UUU>U (>UUU> `>UUU> @z>UUU>9 >UUU> >UUU> >UUU> >UUU> >UUU>r ?UUU> ?UUU> ?UUU>r +?UUU>U 9?UUU>r A?UUU> I?UUU>U P?UUU> _?UUU> o?UUU> ?UUU> EMF++@ >r<b? EMF++@ S8?33 EMF++@ ?Ue!? EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@ EMF++@MS-SPG Pages Masters Page-1 Vertical holder Functional band Horizontal holder Functional band.6 Process Dynamic connector Decision Control transfer Off-page reference _VPID_PREVIEWS _VPID_ALTERNATENAMES _PID_LINKBASE EMF+0@ A13KD! p5:(p5:( EMF+*@ >r<C? EMF++@ EMF+*@ EMF++@ EMF+*@ >U]"? EMF++@ EMF+*@ EMF++@  p5:(p5:( EMF+*@ EMF++@ EMF+*@ EMF++@ EMF+*@ EMF++@ $CloSC RCw7'C EMF+*@ EMF++@ >UUJ>? EMF++@ C15mC C15mC EMF+*@ EMF++@ CZ|*D CuS D Bsu%D CZ|*D CZ|*D CuS D Bsu%D CZ|*D C"a%D Bsu%D B8|%D EMF+*@ B|\ D EMF++@ B8|%D 0B8|%D 8kCQ"=B sqCK5$B sFD15mC sFD15mC XCK=<DE EMF+*@ EMF++@ EMF+*@ EMF++@ >UUJ>? EMF++@ EMF++@ k8CFb EMF+*@ B4R*C >9Z,? >r @? EMF++@ B4R*C dFC6@ WG>UU d(?UU K0?UU EMF++@ B4R*C dFC6@ EMF++@ B4R*C dFC6@ EMF++@ B4R*C dFC6@ EMF++@ B4R*C dFC6@ >UUy? >UUy? ?UUy?rd)?UUy? EMF++@ EMF+*@ EMF++@ EMF++@ EMF+*@ EMF++@ (n>33 EMF++@ B&?33 &_?33 EMF++@ EMF++@ EMF++@ pq>ff&? >ff&? >ff&? >ff&? >ff&? ?ff&? ?ff&? ?ff&? ,.?ff&? 7?ff&? ??ff&? W?ff&? ,^?ff&? He?ff&? dl?ff&? Hu?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? ?ff&? EMF++@ EMF++@ (=33s? =33s? P1>33s? x>33s? >33s? >33s? >33s? >33s? ?33s? ?33s? ?33s? #?33s? P5?33s? G?33s? W?33s? h?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? ?33s? EMF++@ EMF++@ EMF++@ EMF++@ C"a%DE C"a%DE XCK=<D C"a%D EMF+*@ EMF++@ EMF++@ =ffN?  5>ffN? P|>ffN? >ffN? >ffN? >ffN? >ffN? ?ffN? ?ffN? ?ffN? )?ffN? ;?ffN? dM?ffN? h?ffN? p?ffN? ?ffN? ?ffN? ?ffN? EMF++@ EMF++@ EMF++@ EMF++@ EMF+*@ EMF++@ EMF++@ EMF++@ 8J>33 f$?33 26?33 EMF++@ EMF++@ EMF++@ HJ>33 fD?33 2V?33 EMF++@ 6f?ff EMF++@ C23KB$ EMF+*@ @>U5F> @>9>m? @>rb3@ @>r$q@ EMF++@ EMF++@ On?UU 7-@UU EMF++@ EMF+*@ EMF++@ >>UU5?9 >UU5? >UU5?r >UU5? >UU5? ?UU5? ?UU5? ?UU5? .?UU5?9 5?UU5? ??UU5?U S?UU5? _g?UU5? 6s?UU5? }?UU5? ?UU5? ?UU5? EMF++@ `?Uac? `?r(u? EMF++@ :6>UU ,"?UU {[?UU ?UAo?UU EMF++@ ?r$$? EMF++@ ?Uma? ?r4s? EMF++@ )"?UU EMF++@ EMF+*@ EMF++@ >r<b? EMF++@ EMF++@ UD15mCM PD15mC EMF+*@ EMF++@ EMF++@ EMF++@ EMF++@shyamk ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? @@@@@@@@@000:::@@@@@@PPP ccc$$$ ccc$$$ ?????? <<<ttt ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? 000HHH ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? 000PPP ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? &&&777 ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? 000```    XXXppp ccc$$$ ccc$$$ ?????? xxx888 ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ??????hhh(((@@@@@@@@@@@@@@@@@@@@@@@@(((@@@@@@000HHH @@@""" ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` HHHppp ccc$$$ ccc$$$ ??????```        ccc$$$ ccc$$$ ??????``` hhh@@@ ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` hhh@@@ ccc$$$ ccc$$$ ??????``` >>>ppp ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ??????```    ,,, ccc$$$ ??????```    ``` ccc$$$ ??????``` @@@,,, ```888 ccc$$$ ??????``` ```ccc ccc$$$ ??????``` ccc$$$ ??????```    @@@@@@@@@@@@@@@@@@@@@@@@@@@999>>>@@@@@@@@@@@@@@@@@@@@@@@@888!!! ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ppp``` ccc$$$ ??????``` ccc$$$ ??????``` `````` ccc$$$ ??????``` ```,,, ccc$$$ ??????``` ccc$$$ ??????``` KKKPPP ccc$$$ ??????``` NNN(((???????????????????????????????????????????????????????????????????????????????????????777;;;??????????????????????????????????????????????????????????????????????????????????????? ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ppp``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ mmm??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` (((((( ccc$$$ ??????``` ccc$$$ ??????``` ccc$$$ ??????``` @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@222@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@___ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` WWWwww ccc$$$ ??????``` @@@@@@BBB ???((( $$$@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@PPP ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` @@@``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` :::;;; ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ppp??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ```HHH ccc$$$ ccc$$$ ??????%%% @@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@$$$ ccc$$$ ccc$$$ ??????IIIlll ccc$$$ ccc$$$ ??????``` 888xxx ccc$$$ ccc$$$ ??????``` 000PPP ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` xxxPPP ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ??????``` ccc$$$ ccc$$$ ?????? @@@@@@$$$ @@@@@@@@@@@@@@@@@@@@@@@@@@@444222 ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? HHHwww ccc$$$ ccc$$$ ?????? ```(((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@999111@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<<<>>>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@000@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ ?????? ```(((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@999111@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@000@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ccc$$$ ccc$$$ ?????? ccc$$$ ccc$$$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@((( @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (((@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@555 ccc$$$ ///@@@ ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU ccc$$$ >>>UUU cccBBB cccXXX cccBBB cccXXX ccc777 cccXXX cccBBBVisio (TM) Drawing Arial Wingdz onotype  '5/G% ^?Tp2 N7OIJ`2 _HOZOlI ?`?r6 :/L/^/ tqB@q@q,b yaya2 tLq7R 8Q +_=Y  ///A/ S/e/w/ ?)?;?M?_?q? O"O4OFOXOjO|O 0_B_T_f_ 9oKo]ooo /0/B/ T/f/x/ ?'?9?K? O#O5OGOYOkO _,_>_P_b\B o@%o7e2 0oBoTo ///A/S/e/w/ *iS7oy /,/>/P/b/ ?(?:? 5wXRX8 @OROdOW   Displa sU'!a Bands  are used  to orga nize the  differe nt steps :3Z C4 `?Cop yright ( c) 2001  Microsof t Corpor ation.   All 9Bs r eserved. s_SCFF.c hm!#3229 3]0"- B, Mt A/ttx :vtba ndmgr: :.C0Off set from  top of   manage_r forK ~1@7WidthO bay, dep endent o?n numb] He:BP D#;Ra played v erticall horiz s?tarted; s title ult size$g `%Minigmumy ywCoV ,holder, ,used, organ{ teps,pro cess,CK@s ,FuncYA< epaW@oE tQX$tRX$ &Q(-DOT s!y $E `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All 2s rese rved. Y(z!|W %>YV_U pyright  (c) 2001  Microso ft Corpo ration.   All  reserved O3)l> `?Cop yright ( c) 2001  Microsof t Corpor ation.   All N2s r eserved.W 0[I}B 2oKHlN NAst# TheText= >_MapNam <Proce7ss  Drag o nto a cr oss-func tional f lowchart create new ver band?. Use  organi ze steps `?Cop yright ( c) 2001  Microsof t Corpor ation.   All l"s r eserved. Y0X9J 0@Q(-DT DNKIe2`?C opyright  (c) 200 1 Micros oft Corp oration.   All   reserve Vis_Ss@.c hm!#2730O6 &GA_b V&#GA @a&%Ld =T)tx 7Ct27"8Pt tband:re -Is labe l displa yed vert ically o r horizo SsFun q,Dorag, s,flowch ,organiz e,steps, proce mqhrQ g0!6C+1 3%)(Q6 Q(-DT pyright  (c) 2001  Microso ft Corpo ration.   All  reserved 26_O* []5 4 Bands  are used  to orga nize the  differe nt steps Nk?}r Jr$xi$i" Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SCF F.chm!#3 Pi#SC ~!~!H2+ :hzbandm cLH5V" SQA4-3 ffset of  Xa manag er where Prs aapstaOrted`cDEk y08He 2N}ba y, depen pn nu mb[pNts`cx idthMqlab 3A/ab :v30Aap( isplayed  vertica lly or h orizont fault si Ry0%Mi nimum? ,holde r,Beq,use d,organA ,diff`pnt ,steps,p rocess,C~ 0s,Func [tQ:$tR:$ `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. (cAZW `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. AY%{K !q!q# pyright  (c) 2001  Microso ft Corpo ration.   All  reserved O%O]J 8%oq_Ik '}Qq Fwh ur:0S :TheTex t=>_MapN ame_: <Process Drag o nto a cr oss-func tional f lowchart create new hor band?. Use  organi ze steps !-!-#z `?Copyr ight (c)  2001 Mi crosoft  Corporat ion.  Al "s res erved. Sp .chm!# 27304 ?Q(-DT OBG+O KQKQ3 :hzban d:reg 6}s\" s this l abel dis played v erticall y or hor izont width p leng 5r7tL Du 5  03uFunc q,Drag lowchart eate, ganize,s teps,pro A9Auuc ` Nk?(< ?Q(-DT ?Copyrig ht (c) 2 001 Micr osoft Co rporatio n.  All  Bs reser /)RD2 /'TdQ7%p^ !!!#7 Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv?ed. .A0%:K Ku%\8$ chart Any pr ocessing  functio y kin ouble-cl ick to a dd sub-p Copyrigh t (c) 20 01 Micro soft Cor poration .  All  s reserv Vis_SFB .chm!#26?527 ter the  p assoc iated wi pis pr ocess# [" ssGtep#  Res7our wnumb people stask roperti g,func Basic,Fl owchart, inform ,diagr am,data es,joine nector Connec tor that  automat ically r outes be tween s, usi ng a rig ht-angle d line. is_SFB.c hm!#2651 opyright  (c) 200 1 Micros oft Corp oration.   All <Bs  reserve ?7g;2 Dynamic, connecto r,autom[@ cally,ro utes,betoween us,<B ,angled, line,Bas pFlowcha rt,infor ,qon,fgp,d iagram,d ata,proc ess:pjo\pr s,associN[Bs chart Decisi on point  between  two or  more pat hs in yo ur flowc hart. IC"`?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. is_SFB.c hm!#2651O0 52WO#U q%H(^ ^UfUf _aosl %1#:T am#hd "NaNa ,Enter t he co sociated  with  process,Q0 stepQ0/ Reosour peopleH0oquir opertin rDecis80, point,be tween,tw o,more,p aths,flo wchart,B asic,inf orm62  agram,da owchart A loca tion in  your dia gram whe re contr ol is tr ansferre d. The be posi ?ed any line. `Q(-DT 7!=M$^ `?Cop yright ( c) 2001  Microsof t Corpor ation.   eserved. s_SFB.ch m!#26508 83Ro"G VX*zSr X/(^: PLu:# just X P osi7Q of  Shape 2*A*AC2W!O% ter the   assoc iated wi is pr ocessQP pQPW!C5{H Resou eopleHPqu[ir taskQP Properti Contro l,transf er,loc6R, diagram iangle here, ne,Basic ,Flowcha rt,infor es,jo owchart 'Connect Use th is shap o create oss-r eferenc nd hyper link fro proces s on9 anot7her@ CMD=2 `?Copyri ght (c)  2001 Mic rosoft C orporati on.  All  @Bs rese rved. Vis_SF B.chm!#2 utgoing 0&I"` Ut@.Shape Appearan7ce WIncom _._B@V J_z$cR25oq_ Circ#le Arrow%o7o Properti q25.3 ff,page, refereDP,~ `,creatL oss,hy&pl ink,from ,proceX e,anot her,Basi c,Flowch art,info rm_B,f iagram,d Pers,ass oci_B,pw N7,?N a(!@T Xtsy$% :\Progra m Files\ Microsof t Office \Visio10 \1033\So lutions\ Flowchar t\Basic   Shapes  (US uni ts).vss C:\Progr am Files \Microso ft Offic e\Visio1 0\1033\S olutions \Flowcha s-Fwunc  Shapes  Vertic& US units?).vss Co&lo r Scheme `'Set t_he co|As  f}@this  document Z!Z!"B 0rC&{1 7B4E26D- 00DB-4A8 B-962D-7 AF01C308?2B1} f6.0: Black &  White Connecto%r iFlow chart "APF!VQ #9T NA "A"Ab P!P!!2 c|eyM #t#*!t#4!t#>! t#cQ} {F2277B8 5-8EAD-4 9DD-8410 -2EB558CN [ X: { 43737A08 -B891-45 3A-90D6- 39A4973B F31F} Y,O >OPB]  L[  {B2052FE 8-5813-4 EE0-9187 -640CE1F 14C59} { 754580E9 -A8C4-32 7C26362B @DD93 6-1EFA-4 767a@C9k@6_0E30B 42EC-83E B-D136DA 175F80 0F6A1 F9-4C3B- AB9E-09CM0 ?Q(-DT _{Jfvu"5 -Boardin g Work F TechO Ops {08B0601 3-4E82-4 2EC-83EB -D136DA1?75F80}O  M: {F 2277B85- 8EAD-49D D-8410-2 EB558C7B 407} [ X S/e/w/ +?=?V O O2K PObOiu rtner PM T_fR40CDD9 36-1EFA- 4767-B8C 9-9nPE30B !ZQ`u 580E9-28 B86-A8 C4-327C2 6362BFE O&/8/ @OROdE pOeDN _/_A_S_e_ SPG Dev /TestM 0F6A16D- F4F9-4C3 B-AB9E-0 sD~#D Partne 2FE8-581 3-4EE0-9 187-640C E1F14C59 W,Iqj/ O'O9O1? C?U?g? o1okO Mqr$W F974996 A-719 3-98AB-0 80B702 936-1EFA -4767-B8 C9-9060E q\Q\S Oc_u\AQ&uM[a vite dev /test le check p aech. r equireme Process, sing,fu nction,B asic,Flo diagram, ,ass7oci P?b?L~A 2C4405-3 213-48A9 -BDCD-7E C644983F  X0: {40 CDD936-1 EFA-4767 -B8C9-90 60E30BF1 43} Y 277B85-8 EAD-49DD -8410-2E B558C7B4 07} X1 0F6A16D- F4F9-4C3 B-AB9E-0 9C0754BD 2B180f1??Q?} 8CA107-D C08-4F51 |009-11E4 4898BB36 52FE8-58 !EE0-918 0E140C 0E9-28E5` B86-A8C4  7C26362 BFEz` EWEXD Initial  Discussi on descr ibing SP S featur es and p artner s_ inte  relat  Ops h!  ;to$ X!X!*b hPro?cess,pQ ,func? asic,Flo ,diagr am,dataW es,joi{ associ> f_xP1 ~QP.7_IX -0260 P1Cw-A7 `2C2y0?A7119B X0&`}o o#`f1<)o;o} X1g?y? GATUZIa EBE2D-BB F4044 -BAACB53 48622L3h% sdd!6 between, two,more?,paths E'/bQ s`0tcFu rther  iscus  serious yxxq$ Q(-DT x/q$; kEQ+3/M/ uvl@`u (b2*5o4 ?-???Q? valuate  rities s"`{0 E518E78- 531C-4AB A-B241-F 05798226O30A} [ X0: {7 54580E9- 28ED-4B8 6-A8C4-3 77B85-8E 9DD-84 10-2EB55 8C7B407} UAlA]OoOu/ O!O3OEO ?iOTM avQm5 Q'T2`/r/ 3A97257- B9EF-AA2 3980DF36 52FEd -4EE0-91 87-640CE 1F14C59 ;QF1[ /hPart  of this  based o n questi ons from e Tenan t On-boa rding Ch ecklist  and Inte  Gui_de. T will bge f2 Bi?z Ops, eventua customi usines s requir s spe c for B1B1RR shoProc ,func Basic,Fl m,dat}a es,jo rs,assoc ?aGa/ P1aKd aro~m 824F00-A EFC-445A -B45F/ 0A3D668C 6-1EFA-4 767-B8C9 -9060E30uB 08B{P 82-42EC -83EB-D1 36DA175F E0F6A 16D-F4F9 -4C3B-Al -09C0;PBD .q.qHqC Off,p age,refe rence,Us e,creat hyperlOink, one,ano &{DDB7B3 D7-A35 12-873D- 0E56EE33 BD05} 1F3{P9A 1372377 -4F73-94 20-12B21?62D7F2l *3(5z/ E%676 As@Ru1Q O19078AE E-7CA7-4 3A3-AFFP7]C !0BE*dlBF #~L5< Identif y list o f pot  partner~H quirem s that a ffect de v. and t he PM in  creatin spec. r9#hProc ess,pG function ,Basic,F lowch nformZ ,diagra m,dataM s,joi (?UAb wv@@p <5G_0B 5EF5DA72o-743 A9F-0AF6 K@AD613fK @580E9- 28W@4B86- A8C4-327 C26362BF {40CDD93 6-1EFA-4 767-B8C9 -9060E30 BF143 tU~i:Q1 9RlEFT o0oWr ^9t{D !Ooao chnic l also b  docu" am addrR  issueo  comp bility, tails o @@ ?u B6F8642E -42DB-48 A4-B07F- 4608AAAC 361Ag 2052FE8- 5813-4EE 0-9187-6v QVHP;TP M, Biz O B:Ts me @o fles/h ou @u:`8`  model &3 gc nI. \_n_ o"o4oFoXojo|o %1zs<F HV!{0 099EB 683-8065 -45F1-A6 58-ACA3B A323AD4k 5C4o4689> B48-F 4D9D43F7 E8077-7E 44E6- -FA756BC 3F33B} X q+c4_UAP 439DF9-6 021-0A8C 7BA5DF39 2FE8-581 E0-918 7-640CE1?F14C59 F2277B85 -8EAD-49 DD-8410- 2EB55 C4-327C2 6362BFE rDecis t,bet ween,two ,more,pa ):/L/ er a gap analys is on th e biz an d tech r eqmts.  )0taken  whe/0r t o+0-board2 3oEnB WQ(-DT / /2/ $d@19 _(//_A_S_ ?Aw?!Z Q.GOYHxB uU `u uY `u Techni irements Spec. R eview~ {DB3342 CE-0F80- 4AF7-A74 A-966CD5 2FF5B5}2" [ X0:  {40CDD9 36-1EFA- 4767-B8C 9-9060E3 0BF143}  Y*QF2277B 85-8EAD- 49DD-841 0-2EB558 C7B407}  X1+_=_OS QY_k_ /&/8/J*+  ?7?I? OC@Ze WOiO{O 3D6A3-3C A5-423C- 950E-5E4 7F2E06D4 4580E9-2 PB86-A 8C4-327C 26362BFEpRP *?C/N?`? 5FE1-B91 D-D3585B?24ED02 Cross FunctionOal Guide TheDoc Page-1 ure Form ical hol sFunctio nalType sFunctio?nalRX sFunctio?nalRY SchemeName bandMargin bandMin HolderOf chartTyp Flow Normal Visio 00 Visio 90 Connector Visio 01 Visio 02 Visio 03 Visio 10 Visio 11 Visio 12 Visio 13 Visio 20 Visio 21 Visio 22 Visio 23 Visio 50 Visio 51 Visio 52 Visio 53 Visio 70 Visio 80  Separat Flow Dashed chart No Flow Title BayTop BayWidth Lheight Lvert BayHeight BayLeft ShowTitle TitleHeight ultBandS bandMgrMin visKeywords visVersion Scale AntiScale GridRounding tional b visHMAH BHeight zontal h?older BaySize Lwidth tional b?and.6 Blength Process Duration Resources mic conn?ector Decision rol tran page ref erence eAppeara yBottom OPCShapeID OPCDPageID OPCDShapeID ageConne mic conn ector.61 mic conn ector.24 rol tran sfer.26 Process.27 Process.34 Process.32 Process.33 mic conn ector.36 Decision.34 rol tran sfer.29 mic conn ector.37 rol tran sfer.38 mic conn ector.39 mic conn ector.41 xLeft xRightbjbjk Microsoft confidential Copyright   2000-2001 Microsoft Corporation.  All right reserved.  TITLE   FILLIN "Enter specification document title:" \d   TITLE  <Feature Title>  = "MSnP Spec Title"   FILENAME  MSnP Co-branded Portal.doc  TITLE  <Feature Title> <Feature Title> Partner On Boarding Partner On Boarding Microsoft Billing  Function Owner Program Manager Shyamk, Ganesh Pandey Development Operations Modification Last Changed  DATE   \* MERGEFORMAT  12/16/2001 Reviewed by Area Owners Contents  TOC \o "1-3" \h \z   HYPERLINK \l "_Toc529769170"  Contents  PAGEREF _Toc529769170 \h   HYPERLINK \l "_Toc529769171"  Vision  PAGEREF _Toc529769171 \h   HYPERLINK \l "_Toc529769172"  Summary  PAGEREF _Toc529769172 \h   HYPERLINK \l "_Toc529769173"  Definitions  PAGEREF _Toc529769173 \h   HYPERLINK \l "_Toc529769174"  Goals and Non-Goals  PAGEREF _Toc529769174 \h   HYPERLINK \l "_Toc529769175"  Goals  PAGEREF _Toc529769175 \h   HYPERLINK \l "_Toc529769176"  Non-Goals  PAGEREF _Toc529769176 \h   HYPERLINK \l "_Toc529769177"  Requirements  PAGEREF _Toc529769177 \h   HYPERLINK \l "_Toc529769178"  Design  PAGEREF _Toc529769178 \h   HYPERLINK \l "_Toc529769179"  On-boarding: Basic Initial Information  PAGEREF _Toc529769179 \h   HYPERLINK \l "_Toc529769180"  Roles of partners  PAGEREF _Toc529769180 \h   HYPERLINK \l "_Toc529769181"  Partner On-boarding Work Flow  PAGEREF _Toc529769181 \h   HYPERLINK \l "_Toc529769182"  Overview of partner on-boarding process  PAGEREF _Toc529769182 \h   HYPERLINK \l "_Toc529769183"  Tools  PAGEREF _Toc529769183 \h   HYPERLINK \l "_Toc529769184"  Links, Forms and Contact Personnel  PAGEREF _Toc529769184 \h  Vision To define a simple, easy and robust process to bring a new partner on board. This specification will be the reference document that will be accessed in order to set up a partner s relationship with the SPS system. Summary  The Subscription Platform Service (SPS) for billing and provisioning supports multiple partners using a common infrastructure. The service exposes its functionality through the SPK (Subscription Platform Kit). As the SPK APIs are released as a service tool kit, SPG partners need to be brought on board before they can use these services. Partner on boarding is the entire process involved in bringing the partners to market and thereby using the SPS billing and provisioning service. SPS will be a live system which will support concurrent partners. A simple and robust process needs to be defined so that the SPS services are not interrupted when a new partner is brought on board. This document will define this process. The spec. will contain links to all the related technical and business operations specs. Definitions Subscription Platform Kit Subscription Platform Service (for billing and provisioning) SPS partner Anyone calling SPK APIs or receiving calls from the SPS (for provisioning and billing events) Biz Ops Business operations group. Group responsible to define business rules for SPS.  Tech Ops Technical operations group. People responsible for running data centers. Partner PM SPS Program manager responsible to work with partner to define the requirements and get them on board. The PM will work a liaison between the partner and the SPS group. 1-box Manga This 1-box environment is the test bed that partner systems will use (develop against) for integration with SPS services. Partner configuration tool. Combined partner on boarding, offering modeling tool used by  Biz Ops personnel. Partner configuration file. Combined partner, service component and offering file format. Loader tool Common loader tool which loads the PCF into the product catalog, creates accounts for partners, and generates MSIs that can be used on the partner machines that interact with SPS. Goals and Non-Goals Goals Define a clear and robust process to get a new partner on boarded to use the SPS 2.5 system. Describe the overall test stages and test process in relation to on-boarding. List the forms to be filled, and the roles that they play in the on-boarding process.  Include in the process, all the information that Biz Ops should receive from, and transmit to the partners during on-boarding. Define the list of tools to be used for the process, and their roles. Provide links to the other specs related to aspects of on-boarding. Non-Goals This spec will not cover CSR on boarding. For CSR on-boarding issues, contact the CSR PM. Actual definition of the forms to on-board the partners. Forms should be defined by Biz Ops and reviewed by the partner relationship PM. Requirements The on-boarding spec (this document) should define the overall process flow and other common information (like contacts, tools etc.) for on-boarding. It will be the reference for information regarding the on-boarding process, and will be a deliverable to partners as well as SPG internal personnel. The specific detailed steps that individual area owners must follow in order to on-board partners will be defined in a separate document   namely, the Partner On Boarding Process Detail Doc. This doc will include the following TODO lists, as well as bring them together in a cohesive manner in a detailed Responsibility Matrix. Biz Ops TODO List:   HYPERLINK "mailto:timmyw@microsoft.com"  Timmy Woods  HYPERLINK "mailto:rishir@microsoft.com"  Rishi Rana Tech Ops TODO List:   HYPERLINK "mailto:mlankeit@microsoft.com"  Markus Lankeit  HYPERLINK "mailto:mpriest@microsoft.com"  Matt Priestley  HYPERLINK "mailto:rishir@microsoft.com"  Rishi Rana Partner TODO List:   HYPERLINK "mailto:rajkupp@microsoft.com"  Rajesh Kuppuswamy  HYPERLINK "mailto:rishir@microsoft.com"  Rishi Rana Dev/Test TODO List  HYPERLINK "mailto:jeanle@microsoft.com"  : Jeanne Lewis  HYPERLINK "mailto:rishir@microsoft.com"  Rishi Rana Partner PM TODO List:   HYPERLINK "mailto:rajkupp@microsoft.com"  Rajesh Kuppuswamy  HYPERLINK "mailto:rishir@microsoft.com"  Rishi Rana The following forms will be designed by Biz Ops The Offering Configuration Spec (  HYPERLINK "mailto:kayliea@microsoft.com"  Kaylie Albert  with PCT dev) The Initial Information Form (  HYPERLINK "mailto:timmyw@microsoft.com"  Timmy Woods Further business details about setting up the relationship for tenants will be specified in the Tenant Integration Guide (  HYPERLINK "mailto:timmyw@microsoft.com"  Timmy Woods ) available as part of the   HYPERLINK "http://spg/spg%20partners/Subscription%20Platform%20Kit%2025/Forms/AllItems.htm"  , and will be included in the SPK deliverables (  HYPERLINK "mailto:shyamk@microsoft.com"  Shyam Krishnamoorthy  HYPERLINK "http://spg/spg%20partners/Shared%20Documents/POB%20test%20Plan.doc"  Partner On-boarding Test Plan Spec  which includes sample test cases, scenarios and release criteria for the partners will be owned by the test team (  HYPERLINK "mailto:jeanle@microsoft.com"  Jeanne Lewis ). The overall test process is taken into consideration while writing this spec. Design On-boarding: Basic Initial Information Some points to keep in mind when going through the work-flow on the next few pages are: Partner on-boarding involves the partner contacts on the partner s end, and the Biz Ops, Tech Ops, SPG dev/test and the partner PM on the SPG end. The partner PM is responsible for coordinating the entire process, and making sure the personnel in different areas (Biz Ops/Tech Ops/Testers/Devs) are able to smoothly manage their respective tasks. All data is either channeled through the PM or copies (cc) of relevant emails/transfers are sent to the PM so that they can effectively track the process. All stages of the on-boarding process will be tracked and monitored from a single application   RAID. The PM in charge of performance and scale issues and the Biz Ops will get usage profile and usage volume information from the tenants and service providers and use this information to set performance, scale and stress targets for the system. He/She will then work in conjunction with the testers to achieve these targets and then outline an SLA for the partner relationship. This process will be coordinated with a corresponding performance PM on the partner side. The on-boarding partner PM should be kept aware of all these stages. The on-boarding process flow described below is applicable to both tenants and service providers, except where there is explicit reference to either tenants or offerings. Certain documents (e.g. the Tenant Integration Guide) are specifically for tenants and can be ignored by service providers. In all cases where offerings are being decided upon, and/or used/loaded on SPS systems, service providers may replace them with their corresponding  service components , and the process will remain unchanged. Roles of partners Depending on what relationship the partners desire and expect to have with SPG, they are grouped into different roles. Each partner usually fits into one of these categories, and some may fit more than one. The partner must approach the SPG team in one or more of these roles, as the setup processes differ for each role. The following diagram outlines the different roles that partners play: this spec. will only cover on-boarding for tenants and service providers.  EMBED Visio.Drawing.6   Partner On-boarding Work Flow   EMBED Visio.Drawing.6    EMBED Visio.Drawing.6    EMBED Visio.Drawing.6   Overview of partner on-boarding process This section describes the workflow shown above in more detail. Once a potential partner has been identified, the Biz Ops and the partner PM meet the partner representatives in an initial meeting, wherein they describe SPG s services and our advantages in detail to the partner.  The partner is then given an Initial Information Form that will gather all their basic information  who they are, the role in which they are approaching us, their important contacts etc. At this time, a corresponding information sheet about SPS services, contact information for SPG etc. is also handed over. In subsequent meetings, the Biz Ops and partner PM will sit down with the partners and go over their responses, asking them more detailed questions about the expected relationship. This process will be guided by the   HYPERLINK "\\\\SAS\\KWSBilling\\New Tenants\\Tenant Onboarding Checklist.doc"  Tenant On-boarding Checklist  and the Tenant Integration Guide (available as part of the   HYPERLINK "http://spg/spg%20partners/Subscription%20Platform%20Kit%2025/Forms/AllItems.htm"  If the partners are serious about the relationship, the following steps are taken: The Biz Ops and partner PM continue to meet the partners to flesh out their business model and potential offerings. One set of questions (from the Tenant On-boarding Checklist) involves basic details about the partner, including their company information, business model, contacts for privacy, terms of use, product management, program management, marketing, dev, test and operations. Another set of questions is aimed at making them think about the offerings that they would like to sell and how they will structure the offerings, and put them down in concrete terms. The Biz Ops and partner PM will, in addition to information from the above set of questions also get other technical and business requirements from the partners. This information will be compared to a list of SPS supported features and a gap analysis will be performed. The Business requirements document will arise from the partner s answers to questions on the Tenant On-Boarding Checklist, and include any other details that arise in discussions with the Biz and Fin Ops. It will also include special requirements that the partners would like SPG to consider or implement. The Technical requirements spec will be created by the partner PM with help from the dev/test team of SPG and on the partner side. [If required, the partner PM can invite the dev. and test leads in SPG to talk to the partners to recognize their technical requirements]. The spec will analyze the systems on corresponding sides for compatibility, usage requirements, performance, security etc. and will be used in the next step (on-boarding decision) after it is reviewed and finalized. Based on the previous steps, a decision is taken to on-board the partner or not. If we decide to on-board the partner, the Partner PM opens a sub-web for the partner on the SPG website and includes complete information about the partner including contacts on both sides. The PM also creates email lists for personnel related to on-boarding and any source control archives (VSS) that he/she may deem necessary. The partner PM emails Tech Ops to set up a 1-box deployment of the SPS system for tenants to start working on. This work can involve initial API testing, development and code testing against sample offerings on the 1-box deployment. They also help the partners in setting up their developer machines to talk to these 1-box deployments. The partners are now in a good condition to go ahead and think of modeling their offerings  this may take more meetings with the partner PM and Biz Ops.  The methodology for creating the initial offerings (as well as subsequent changes to them) involves contribution from all area personnel, and the partner PM will coordinate this effort. The partners will be given sufficient information from each area representative so that they can start deciding on their offerings. More information about the offering management process in available in the Offer Management Policies and Procedures document <link TBD>. Meanwhile, dev. on the partner side can start working on the 1-box setup provided for them. The partner PM must coordinate the transfer of all relevant information to enable this   including the SPK, the partner s username and password for the 1-box systems, documentation, the list of sample offerings on the 1-box, all the software to be installed on the partner side (MSI). The SPK contains the SDK, the documentation for it, the Tenant Integration Guide (which details the business steps to be taken by the tenants to start the relationship including billing terms, privacy rules etc. -- available as part of the   HYPERLINK "http://spg/spg%20partners/Subscription%20Platform%20Kit%2025/Forms/AllItems.htm"  ), sample programs using SPS 2.5 and sample scenarios and test cases for their systems. Once the partners have a fair idea of the type of offers they want to sell, they sit down with the Biz Op to fill the Offering Configuration Spec, which translates the offering deals to the language of the PCT tool interface.  The Offering Management Biz Op enters this information in the PCT, and passes the generated PCF to the Tech Op (through partner PM). The Biz Op also returns any relevant partner IDs for that offering back to the partner (again through the partner PM). The Tech Op uses the Loader Tool to load it onto the product catalog on the 1-box machine that the partner is dev/testing against.  Once the data has been loaded, the Tech Ops inform the partner PM who sends the notice and other relevant information (service provider IDs etc) back to the partners, and closes the bug. This is followed by an iterative process on steps 5-a to 5-c for partners to decide on their close-to-final offerings before they move to pre-production. During these iterations, the partners will make changes to offerings, make changes to their code, give us feedback on our test systems if they encounter problems etc.  Changes to offerings will be filed as bugs, and the Offering Manager will upload these changes to the PCT once a week (EOD Friday) and transfer the bug to Partner PM. The PM will make a prop request to the Tech Ops within one business day (EOD Monday). The changes will be reflected in the product catalog within 1 business day (EOD Tuesday) of the Tech Ops receiving the prop request. Some critical/urgent offering change requests can also be made as special cases, and will be followed up by the Biz Op & partner PM. Feedback from the partners about SPS will be sent to the partner PM, who will judge their severity and route them to the appropriate personnel.  Feedback about issues/bugs in our code should be sent to the partner PM who will evaluate their severity and route them to the appropriate personnel. Feedback about design changes or integration efforts that partners desire from SPG side should be sent to the partner PM, who will consult with feature PMs to decide the priority and feasibility of such an effort. Requests for urgent changes in offerings can be made to the partner PM or the Offer Management Biz Op and will be dealt with on a case-by-case basis. Urgent requests like system failures and security compromises should be made to the emergency contacts listed in this document. During on-boarding, if SPG is still in the test stage, the test team will continue to test our software and load weekly builds onto the 1-box deployments. They (along with dev.) will use the usage profile and other requirements, (as well as feedback from the dev/test on the 1-boxes), provided by the partners to make any requisite changes in SPS code.  Once the R.C. is ready, test and Ops will set up a pre-production SPS system. The partner PM will notify the partners about this, and the partners can set up a pre-production system with us when they are finished testing their code and offerings. The setup of the pre-production system will involve the same steps as for test   namely, modeling the offerings with the Offering Management Biz Op who will enter the information in the PCT, sending the PCF to the Tech Op who will load it onto the pre-production machine, partner installing the MSI that they receive on their pre-production machine etc.  A similar process will be followed with production, with the exception that the offerings will not be changed after we go live on the production system, and that the specific offering that is finally loaded onto the production system should have been previously tested on the pre-production system.  Tools The tools required for on-boarding are defined in the individual tool specs.  Partner Configuration Tool (  HYPERLINK "http://spg/sps/SPS%2025%20Documents/Partner%20Configuration%20Tool.doc"  http://spg/sps/SPS%2025%20Documents/Partner%20Configuration%20Tool.doc Loader Tool (  HYPERLINK "http://spg/sps/SPS%2025%20Documents/PCF%20Loader%20Tool.doc"  http://spg/sps/SPS%2025%20Documents/PCF%20Loader%20Tool.doc Links, Forms and Contact Personnel Links  Partner On-Boarding Process Details (and TODO Lists) <link TBD> Tool Specs  HYPERLINK "http://spg/sps/SPS%2025%20Documents/Partner%20MSI%20Creation%20Tool.doc"   HYPERLINK "http://spg/sps/SPS%2025%20Documents/Partner%20Configuration%20Tool.doc"  http://spg/sps/SPS%2025%20Documents/Partner%20Configuration%20Tool.doc  HYPERLINK "http://spg/sps/SPS%2025%20Documents/PCF%20Loader%20Tool.doc"  http://spg/sps/SPS%2025%20Documents/PCF%20Loader%20Tool.doc Partner Authentication Spec.   HYPERLINK "http://spg/sps/SPS%2025%20Documents/Partner%20Authentication.doc"  http://spg/sps/SPS%2025%20Documents/Partner%20Authentication.doc Tenant On-Boarding Checklist   HYPERLINK "file://SAS/KWSBilling/New%20Tenants/Tenant%20Onboarding%20Checklist.doc"  file://SAS/KWSBilling/New%20Tenants/Tenant%20Onboarding%20Checklist.doc Tenant Integration Guide, available as part of the SPK                                                   HYPERLINK "http://spg/spg partners/Subscription Platform Kit 25/Forms/AllItems.htm"  http://spg/spg partners/Subscription Platform Kit 25/Forms/AllItems.htm SPK API  HYPERLINK "http://spg/sps/SPS%2025%20Documents/SPK%20API%20Specification.doc" SPK API Spec Partner On-Boarding Test Plan   HYPERLINK "http://spg/spg%20partners/Shared%20Documents/POB%20test%20Plan.doc"  http://spg/spg%20partners/Shared%20Documents/POB%20test%20Plan.doc Partner Side Object         HYPERLINK "http://spg/sps/SPS%2025%20Documents/Partner%20Side%20Object.doc"  http://spg/sps/SPS%2025%20Documents/Partner%20Side%20Object.doc Forms Offering Configuration Spec (Biz Ops) Usage Profile Form (Performance PM) Initial Information Form (Biz Ops)  HYPERLINK "\\\\SAS\\KWSBilling\\New Tenants\\Tenant Onboarding Checklist.doc"  Tenant On-Boarding Checklist  (Biz Ops) Contact Personnel Partner Management:   HYPERLINK "mailto:dougw@microsoft.com"  Doug Wood  HYPERLINK "mailto:rajkupp@microsoft.com"  Rajesh Kuppuswamy  HYPERLINK "mailto:bharats@microsoft.com"  Bharat Shyam On-boarding Process:   HYPERLINK "mailto:shyamk@microsoft.com"  Shyam Krishnamoorthy  HYPERLINK "mailto:ganeshp@microsoft.com"  Ganesh Pandey  HYPERLINK "mailto:rishir@microsoft.com"  Rishi Rana Partner Authentication PM:   HYPERLINK "mailto:mpriest@microsoft.com"  Matthew Priestley Partner On-boarding Test Plan:   HYPERLINK "mailto:jeanle@microsoft.com"  Jeanne Lewis Partner Relation Biz Ops:   HYPERLINK "mailto:timmyw@microsoft.com"  Timmy Woods  HYPERLINK "mailto:msharp@microsoft.com"  Michael Sharp SPG Development:   HYPERLINK "mailto:ramv@microsoft.com"  Ram Viswanathan  HYPERLINK "mailto:eboon@microsoft.com"  Elisabeth Boonin Tools and CSR:  HYPERLINK "mailto:nkachroo@microsoft.com" Naveen Kachroo Internationalization/Globalization:  HYPERLINK "mailto:susam@microsoft.com" Susan McLean  HYPERLINK "mailto:mpaulus@microsoft.com"  Matthew Paulus Tech Ops :   HYPERLINK "mailto:mlankeit@microsoft.com"  Markus Lankeit 24 Hour Emergency Operations: (TBD) All material   Microsoft Corporation 2001-2002. Microsoft Confidential Page   PAGE  {m_Q{QC{2{ ~z~v~ njfjbj gdP1B {wswo gd(M: yq^yUy yumubmYmQM vrnjf
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\docs\Tenant_Integration_Guide.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft SPS Tenant Integration Guide Title _PID_HLINKS _EmailSubject Tenant Integration GuideSPS Tenant Integration Guide Timmy Woods MSDN20.dot Shyam Krishnamoorthy Microsoft Word 10.0@y 60 urn:schemas-microsoft-com:office:smarttags PersonName http://www.microsoft.com8 urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags country-region urn:schemas-microsoft-com:office:smarttags place Month Year4 p=ET0 Tgf';[f SSD Business operations Tenant Integration Guide VERSION 2.5  SAVEDATE  \* MERGEFORMAT  7/10/2002 2:15 PM This documentation is an early release of the final documentation, which may be changed substantially prior to final commercial release, and is confidential and proprietary information of Microsoft Corporation.  It is disclosed pursuant to a non-disclosure agreement between the recipient and Microsoft. This document is provided for informational purposes only and Microsoft makes no warranties, either express or implied, in this document.  Information in this document, including URL and other Internet Web site references, is subject to change without notice.  The entire risk of the use or the results of the use of this document remains with the user.  Unless otherwise noted, the example companies, organizations, products, people and events depicted herein are fictitious and no association with any real company, organization, product, person or event is intended or should be inferred.  Complying with all applicable copyright laws is the responsibility of the user.  Without limiting the rights under copyright, no part of this document may be reproduced, stored in or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation.  Microsoft may have patents, patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document.  Except as expressly provided in any written license agreement from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks, copyrights, or other intellectual property. Unpublished work.   ioned herein may be the trademarks of their respective owners. Contents  TOC \h \z \t "Heading 1,1,Heading 7,2,Heading 8,3"   HYPERLINK \l "_Toc6913391"  Section I: Ownership & How to Integrate with SSD Business Operations  PAGEREF _Toc6913391 \h   HYPERLINK \l "_Toc6913392"  Areas Owned by SSD Business Operations  PAGEREF _Toc6913392 \h   HYPERLINK \l "_Toc6913393"  Content  PAGEREF _Toc6913393 \h   HYPERLINK \l "_Toc6913394"  Areas owned by Tenants  PAGEREF _Toc6913394 \h   HYPERLINK \l "_Toc6913395"  Content  PAGEREF _Toc6913395 \h   HYPERLINK \l "_Toc6913396"  How to integrate with SPS & SSD Business Operations  PAGEREF _Toc6913396 \h   HYPERLINK \l "_Toc6913397"  Table of Key Contacts  PAGEREF _Toc6913397 \h   HYPERLINK \l "_Toc6913398"  Section II: SSD Business Operations  The Billing Business Team  PAGEREF _Toc6913398 \h   HYPERLINK \l "_Toc6913399"  Introduction  PAGEREF _Toc6913399 \h   HYPERLINK \l "_Toc6913400"  Product Platform Operations  PAGEREF _Toc6913400 \h   HYPERLINK \l "_Toc6913401"  Billing Business Rules  PAGEREF _Toc6913401 \h   HYPERLINK \l "_Toc6913402"  Billing Privacy Statement  PAGEREF _Toc6913402 \h   HYPERLINK \l "_Toc6913403"  Billing Terms of Use  PAGEREF _Toc6913403 \h   HYPERLINK \l "_Toc6913404"  Determining Primary Target Market(s)  PAGEREF _Toc6913404 \h   HYPERLINK \l "_Toc6913405"  Signup Process  PAGEREF _Toc6913405 \h   HYPERLINK \l "_Toc6913406"  User Acceptance Testing  PAGEREF _Toc6913406 \h   HYPERLINK \l "_Toc6913407"  Customer Notifications  PAGEREF _Toc6913407 \h   HYPERLINK \l "_Toc6913408"  Customer Support  PAGEREF _Toc6913408 \h   HYPERLINK \l "_Toc6913409"  Frequently Asked Questions (FAQ)  PAGEREF _Toc6913409 \h   HYPERLINK \l "_Toc6913410"  Customer Account Management  PAGEREF _Toc6913410 \h   HYPERLINK \l "_Toc6913411"  Table of Denied Orders  PAGEREF _Toc6913411 \h   HYPERLINK \l "_Toc6913412"  Tenant Escalations  PAGEREF _Toc6913412 \h   HYPERLINK \l "_Toc6913413"  Financial Operations  PAGEREF _Toc6913413 \h   HYPERLINK \l "_Toc6913414"  Customer Billing Management  PAGEREF _Toc6913414 \h   HYPERLINK \l "_Toc6913415"  Interfaces  PAGEREF _Toc6913415 \h   HYPERLINK \l "_Toc6913416"  Payment Processing  PAGEREF _Toc6913416 \h   HYPERLINK \l "_Toc6913417"  Offering Management  PAGEREF _Toc6913417 \h   HYPERLINK \l "_Toc6913418"  Pricing Features  PAGEREF _Toc6913418 \h   HYPERLINK \l "_Toc6913419"  Adding Offers to the Billing System  PAGEREF _Toc6913419 \h   HYPERLINK \l "_Toc6913420"  Reporting  PAGEREF _Toc6913420 \h   HYPERLINK \l "_Toc6913421"  Currently Available Reports  PAGEREF _Toc6913421 \h   HYPERLINK \l "_Toc6913422"  Viewing Reports  PAGEREF _Toc6913422 \h   HYPERLINK \l "_Toc6913423"  Requesting New Reports  PAGEREF _Toc6913423 \h   HYPERLINK \l "_Toc6913424"  Glossary  PAGEREF _Toc6913424 \h  Section I: Ownership & How to Integrate with SSD Business Operations This section covers the areas of ownership and handoff between SSD Business Operations (BizOps) and Tenants. There are no areas of ownership and handoff between SSD BizOps and Service Providers. Areas Owned by SSD Business Operations Content Privacy Statement and Terms of Use SSD Business Operations is responsible for creating and maintaining the Billing Privacy Statement and the Billing Terms of Use in English, covering US law.  The English version of these items has been reviewed by Microsoft Legal and Corporate Affairs (LCA), and must not be changed by tenants without council from SSD Business Operations and LCA.  Tenants are responsible for incorporating the Billing Privacy Statement and Billing Terms of Use into the Tenant Privacy Statement and Terms of Use, respectively, and localizing them into the languages supported by the tenant.  Tenants are responsible for engaging the appropriate LCA contact to review of all localized items, to ensure the correct language and appropriate law of the PTM is used.  Frequently Asked Questions (FAQs) SSD Business Operations is responsible for creating and maintaining the billing-related FAQs. SSD Business Operations and SPD International are jointly responsible for localizing the FAQs into the languages supported by the SPS. Tenants must not change the content of the Billing FAQs in any way. BAM/Online Statement The SPS will generate and host the Billing Account Management (BAM)/Online Statements in a central, multi-tenant view. This will include Account, Payment Instrument and Subscription details. Tenants will not be required to host any portion of the BAM/Online Statement. Payment Processing for Multiple Payment Methods SSD Business Operations is responsible for processing payments made by customers to the tenants for the services that are purchased. Localization SPD International will handle the localization of the relevant parts of the SPS platform. Customer Support The Worldwide Customer Care (WWCC) group performs customer support for the Billing System. Customer support consists of phone, chat, and e-mail support for the Billing System and its administrative tools. WWCC offers both Customer Service (accounts and billing) and Technical Support (product and technical) for the Billing System and its tenants. This support includes the following services: Vendor Management, Telecom Management, Tools Management, Escalation Management, Product Feedback, Instructional Design and Training, and End User Education. The integration of support between Customer Service and Technical Support is a key topic of discussion with tenants and WWCC. As part of this discussion, the following areas are emphasized: Definition of the support offering. Integration of support tools. The transfer of incidents between Customer Service and Technical Support. Definition of support boundaries. For more information on Customer Service policies and procedures, see  Customer Support  in Section II: The Billing Business Team. Offering Management Offering Management is responsible for maintaining the offering database of products and pricing within the SPS. This includes creating partners in the billing system, configuring rating and service components for the services being offered, as well as configuring the name of offer and offer description that tenants present to customers. For more information on Products and Pricing, see   HYPERLINK  \l "_Offering_Management"  Offering Management  HYPERLINK  \l "_Section_II:_SSD_Business Operations"  Section II: The Billing Business Team Billing Operations Billing Operations is responsible for running the daily billing process, including cash settlement with payment providers. Financial Operations & Microsoft Financial Integration Financial Operations is responsible for all financial policies and procedures for the Billing System, including recording revenue activity, managing outside vendors, developing new credit policies, and establishing new payment methods. Financial Operations is also responsible for customer billing management, and establishing the policies and procedures to be used in managing customer billing accounts. For more information on customer billing management, see   HYPERLINK  \l "_Customer_Billing_Management"  Customer Billing Management  HYPERLINK  \l "_Section_II:_SSD_Business Operations"  Section II: The Billing Business Team Reporting Reporting is responsible for developing Billing reports used by tenants to view the data collected by the SPS. Tenants have the option of either filtering a report with preset data fields, or creating a customized report by adding or removing specific fields. Reporting also works with tenants to create new reports based on tenant-requested data. For more information on reports, see   HYPERLINK  \l "_Reporting"  Reporting  HYPERLINK  \l "_Section_II:_SSD_Business Operations"  Section II: The Billing Business Team Areas owned by Tenants Content Tenants are responsible for the following content areas of the SPS system. Offerings and Pricing Tenants are responsible for determining the offerings that customers can purchase, as well as for setting the pricing structure of those offerings for each market they are targeting. Tenants will work with the Offering Manager to provide the required information for the SPS. For more information on Offerings and Pricing, see   HYPERLINK  \l "_Offering_Management"  Offering Management  HYPERLINK  \l "_Section_II:_SSD_Business Operations"  Section II: The Billing Business Team Detailed Descriptions of Offerings Tenants are responsible for providing detailed, localized descriptions of their product offerings to be made available to customers. Customized Self-Care and Statement User Interfaces Tenants are responsible for creating all user interface (UI) pages to be used by customers for account registration, purchase and customer self-care. Tenants may present a link to the centrally hosted Online Statement from any of their hosted UI pages. How to integrate with SPS & SSD Business Operations To start the process of becoming a tenant of SPS & SSD Business Operations Contact Karl Hebert (SSD Business Ops) and Doug Wood (SPG). Provide an overview of the services you provide to customers. Provide a description of your customer billing requirements and your proposed implementation timing. Ensure that you have Project Management, Development and Testing resources available to assist you once the integration process has begun. Schedule a meeting with the above persons to go through the Tenant On-Boarding Checklist included in the Subscription Platform Kit (SPK). You can locate the SPK at:  HYPERLINK "http://spg/spg%20partners" http://spg/spg partners  - under Links. You will need to fill out this checklist as a part of the process of signing up with SPS & SSD Business Operations. Table of Key Contacts The following table contains a list of SPS contacts referenced throughout this document. Group Name or Contact Title Contact Name Contact Alias Group Manager, SSD Business Operations Karl Hebert khebert Group Program Manager, SPG Doug Wood dougw Tenant Manager, SSD Bus Ops Timmy Woods timmyw Tenant Manager, SSD Bus Ops Gayle Uchida gayleu Offer Manager, SSD Bus Ops Kaylie Albert kayliea Financial Operations Manager TJ Bultman tjbult Partner PM, SPG Rajesh Kuppuswamy rajkupp Partner PM, SPG Jyoti Paul jpaul Partner PM Rajesh Kuppuswamy rajkupp Worldwide Customer Care Group John Stapleton johnstap Snr Program Manager, EMEA Brian Mullan brimul Project Manager, Asia Pacific Steve Harbick stevh Snr Program Manager, Reporting Bill Jandl bjandl Customer Service Delivery Manager John Stapleton johnstap Section II: SSD Business Operations  The Billing Business Team Introduction SSD Business Operations owns all business operations for billing of online services, and consists of several core groups. These include Tenant Onboarding, Product Platform Operations, Billing Operations, Financial Operations, Products and Pricing, Reporting and liason with Customer Support. The Business Team serves the following functions: To ensure that all business requirements are defined for the SPS Billing platform. The Business Team also ensures that the tools they use, and the system used by the customers, meet these requirements. To assist with integrating tenants into the Business Operations processes for Billing. the team works with SPG to help tenants define a common project plan and serves as the tenant contact for business issues during the integration process. To run the business operations of the Billing platform in a production mode, including managing day-to-day billing operations, pricing changes, collections processes, account statuses, reporting and so on. The core Business Operations groups, their function, and areas of responsibility are described in detail in the remainder of this section. Product Platform Operations Product Platform Operations is responsible for the business-oriented requirements of the Billing System. These requirements span the functions of all other groups on the Business Team, and consist of the underlying physical and business structures of the Billing System with which tenants integrate. The Platform Product Manager is responsible for the business aspect (as opposed to the technical aspect) of all new features for the Billing System. This includes establishing business rules and requirements for new features, researching and recommending changes to taxation requirements, currencies, countries, and languages. Billing Business Rules For a full text of the Business Rules used by SPS v2.5, please look at the following document:   HYPERLINK "http://spg/sps/SPS%2025%20Documents/Business%20Rules%20for%20SPS%202.5.doc"  Business Rules for SPS 2.5 Billing Privacy Statement The Billing Privacy Statement (BPS) is a document for presentation to tenant customers as a discrete section within the Tenant Privacy Statement (TPS). It specifies the policies regarding disclosure of a customer s personal information, and describes the handling and use of that information by Microsoft Online Services. In certain business models   e.g. Microsoft wholesales the services to a partner, who in turn resells the services to the end-user   the Privacy Statement is not required. This is because the reseller will dictate the Privacy Statement to the end user. It is worth noting that this does not mean that Microsoft has no hand in wording the Privacy Statement that is presented to the end-user. It simply means that Microsoft will not be the presenter of, or a party in, that Privacy Statement. Information covered by the Billing Privacy Statement The BPS covers all data collected about individuals (such as information on individual customers, organizations, or users) with regard to processing their billing transactions for the subscription services provided by or through Microsoft. This includes, for example, credit card numbers, billing addresses, and so on.  Information not covered by the Billing Privacy Statement This BPS does not cover data collected about individuals by tenants that provide the services themselves (for example, the contents of their e-mail store). Tenants are expected to address that data in their respective privacy statements. Integration with the tenant s privacy statement The BPS is included as an integral part of the tenant s privacy statement. It is expected that there may be elements of the BPS that will overlap or be made redundant within the context of the overall TPS. This issue will be addressed on a case by case basis, with a likely revision to the BPS. The BPS is maintained in English only. It is the responsibility of the tenant to take the English language version and determine the appropriate text required in order to fulfill the overall policy of the TPS. Billing Privacy Statement Text The agreed full text of the Billing Privacy Statement must be displayed to customers when they view the TPS.  This text can be found at: HYPERLINK "\\\\Sumac\\SSDBusOps\\VSSShadow\\Platform\\BPS" \\Sumac\SSDBusOps\VSSShadow\Platform\BPS Your SSD BizOps contact will work with you to ensure the correct language and appropriate law for the BPS is used. Display Requirements The following items are requirements for the presentation and integration of the Billing Privacy Statement into the overall tenant privacy statement. Initial Display The BPS is to be made available to the individual prior to them divulging any personal information. Disclosure of Secondary Data Usage If the tenant is planning to capture and store any of the information that is passed to the Billing System and use it for purposes other than originally collected or stated in the BPS, then the tenant is expected to state those purposes in their overall tenant privacy statement. The tenant must take the appropriate steps to ensure that this planned secondary usage is fully disclosed to the individual. Display Method The BPS is to be displayed as a part of the overall TPS. It is necessary for the tenant to maintain the BPS data within the tenant environment along with their TPS data. Other disclosures COPPA Tenants are expected to abide by the rules of COPPA (Children's Online Privacy Protection Act) For example; the tenant should know whether they are going to allow a user with a Kid s Passport to use their site. It is the responsibility of the tenant to verify (with LCA) if this legal. Opt-in vs. Opt-out When tenants display pages that collect a customers privacy preferences, they should ensure that the opt-in or opt-out defaults that are shown are consistent with the Primary Target Market (see the   HYPERLINK  \l "_Determining_Primary_Target_Market(s"  Primary Target Market  section for more detail) that the subscription service is aimed at. Billing Terms of Use The Billing Terms of Use (BToU) is a document for presentation to tenant customers that contains information on the policies and procedures of Microsoft Online Services, customer rights and responsibilities, and other legally required statements regarding the enforcement of the Billing Terms of Use as a contract. Because the SPS provides back-end billing services to various Microsoft tenants, the BToU must be integrated into the terms and conditions for every tenant site. This creates a User Agreement for the tenant s customers. The governing law for the BToU is based on the law of the Tenant Terms of Use. It is assumed that the tenant will use the appropriate law of the Primary Target Market that the services are being sold in. In certain business models   e.g. Microsoft wholesales the services to a partner, who in turn resells the services to the end-user   the Terms of Use is not required. This is because the reseller will dictate the Terms of Use to the end user. It is worth noting that this does not mean that Microsoft has no hand in wording the Terms of Use that is presented to the end-user. It simply means that Microsoft will not be the presenter of, or a party in, those Terms of Use. Billing Terms of Use Text The agreed full text of the BToU must be displayed to customers when they view the TPS. This text can be found at: HYPERLINK "\\\\Sumac\\SSDBusOps\\VSSShadow\\Platform\\BToU" \\Sumac\SSDBusOps\VSSShadow\Platform\BToU Your SSD BizOps contact will work with you to ensure the correct language and appropriate law for the BToU is used. Existing Tenant User Agreement as a Contract It is assumed that tenants have an established process for forming and obtaining legally binding consent to each tenant s User Agreement. If a signature is required under a statute of frauds, it is also assumed that the tenant has obtained a user s signature. It is also assumed that any applicable disclosures are made in a timely fashion, including disclosures and consents required under  101(c) of the federal Electronic Signatures in Global and National Commerce Act (E-Sign). This act, which became effective October 1, 2000, generally established equivalency between written signatures and paper documents, and electronic signatures and records.  The Billing Terms of Use must be incorporated into the tenant s User Agreement. Potential tenants without User Agreements (and a legally binding process for entering into them) should contact LCA to have them drafted.  Integrating Billing Terms into a Tenant s Existing User Agreement The BToU is included as an integral part of the tenant s Terms of Use. It is expected that there may be elements of the BToU that will overlap or be made redundant within the context of the overall Terms of Use. This issue will be addressed on a case by case basis, with a likely revision to the BToU. The BToU is maintained by SSD Business Operations in English corresponding to US law.  It is the responsibility of the tenant to insert the BToU into the Tenant Terms of Use and localize it into the correct language of the PTM.  This includes a legal review of the country s laws of that PTM.   Amending User Agreements The tenant must apply its existing User Agreement amendment process to obtain consent to the amendment, which is required in order to insert the Billing Terms of Use into the tenant s User Agreement. The tenant s existing User Agreement is a contract and may only be amended in compliance with whatever procedure for amendments was agreed upon in the User Agreement Retaining Records It is assumed that the tenant site has record retention practices that enable Microsoft to prove the specific text of terms and conditions of the User Agreement on any given day, including the Billing Terms of Use. Thus, it is expected that the tenant will archive the customer s acceptance of the Terms of Use, including, but not limited to, Name as keyed-in by the customer, Terms of Use Version, Date & Time. Microsoft Online Services is responsible for ensuring that the Billing Terms of Use that customers see is the current Billing Terms of Use, and that accurate records are maintained in order to prove what terms were applied to a particular tenant site user. Microsoft Online Services will retain the records in chronological format. Managing Billing Terms of Use Modifications On occasion, Microsoft Online Services will need to update or modify the Billing Terms of Use. This assumes that the tenant will apply its User Agreement amendment procedure to Billing Terms of Use amendments. However, there may be instances where a specific type of consent is required for a Billing Terms of Use modification. For example, a particular type of payment process may require an electronic signature in order to obtain a valid consent to charge a user s account under applicable consumer protection law. If this is the case, the SPS will provide its required consent procedure together with the modifications to the Billing Terms of Use. If that procedure is different from the tenant s normal amendment procedure, then the SPS and the tenant will have to resolve the inconsistency. For assistance with implementing a User Agreement modifications procedure, contact LCA. Timing is also important. SSD will provide changed Billing Terms of Use text to tenants, along with a deadline by which the tenant must have complied with the tenant s procedure for amending the User Agreement. If the tenant misses that deadline, SSD and the tenant will be out of synchronization. Also, if a tenant cannot meet the SSD deadline, the tenant must contact SSD in time to establish another deadline that will not create liability for Microsoft in relation to tenant site users. Additional Revisions The Billing Terms of Use attempts to cover the various types of transactions common at tenant sites, including subscription purchases and acquisitions of items. The goal is to make these terms consistent across the tenant sites, so that users become familiar with the overall framework for billing and payment rules and processes provided by Microsoft Online Services. Tenant site users will then only need to read one set of billing terms. If the Billing Terms of Use does not appropriately address a particular type of transaction that the tenant site provides, please contact Microsoft Online Services to discuss alternative approaches. Display Requirements The following items are requirements for the presentation of the Billing Terms of Use. Initial Display The Billing Terms of Use is to be presented to the individual prior to them using any paid-for services for the first time. This applies to each subscription that the individual signs up for. This is because each subscription is a separate and distinct contract   in much the same manner that each separate product (e.g. Office, Windows) that an individual purchases has a separate EULA that needs to be presented. Display Method The BToU is to be displayed as a part of the overall Terms of Use. It is necessary for the tenant to maintain the BToU data within the tenant environment along with their Terms data. User Acceptance The Billing Terms of Use must be presented to the individual in a way that requires them to  Accept  the Terms of Use before they can use any paid-for services. Again, this acceptance applies to each subscription that the individual signs up for. See the   HYPERLINK  \l "_Signup_process"  Signup Process  for further details. Tenant Display Requirements The tenant is to create a Terms of Use that references  Microsoft and/or its affiliates  as the legal entity that will enter into a contract with the Customer. The customer will be able to identify the actual legal entity by viewing their Online Statement.  Determining Primary Target Market(s) Primary Target Market definition Tenants have many different approaches to determining the Primary Target Market(s) on which they will focus. The markets are typically based on the desire to reach the residents of a particular country, or the speakers of a particular language. A Primary Target Market is a country or region wherein tenants are allowed to market their services directly to the residents of that country or location. All other countries and regions are accepted in that the SPS will register customers and bill them for services purchased, but residents of non-Primary Target Markets cannot be marketed directly to. Aspects of a Primary Target Market In order to fully implement a Primary Target Market, the SPS has to consider the many aspects of what constitutes support for a specific country or region. Examples include Taxation, Legal compliance, Customer Support, Language, Currency. For a more complete understanding the various aspects of a Primary Target Market please see the following presentation:   HYPERLINK "http://spg/sps/SPS%2025%20Documents/Primary%20Target%20Market%20-%20definition.ppt"  Primary Target Market - definition Primary Target Market and Mapping Tenants have many different approaches to determining the Primary Target Market(s) on which they will focus. The markets are typically based on the desire to reach the residents of a particular country, or the speakers of a particular language. As a part of their approach, tenants will need to think of each selling point (Web site, CD, etc) they will use for their services, and assign it to a primary target market. This is what is referred to as  mapping For SPS, the need to have this mapping is based on two items (and their needs) that can vary significantly from country to country: Billing Terms of Use - The need to decide on a country-specific set of laws to govern what Terms of Use the customer must adhere to for a given Web site. Pricing display method for marketing pages - The need to decide on a country-specific set of sales tax rules to govern what price and sales tax rates the customer sees when they first navigate to a given Web site. Reasoning behind mapping It is impractical (and not legally required) to provide a Billing Terms of Use, or to display a price, based on the laws or sales tax rules of every country in the world that has customers that could visit a tenant's Web site. Instead, the primary target market is chosen for a particular Web site, and the Billing Terms of Use and pricing display rules appropriate to the laws or sales tax rules of that market are used to govern all activity on that site. This does not mean that customers from outside the target market cannot use the Web site. It simply means that they will be subject to the country-specific laws and sales tax rules for initial price display that have been chosen for that Web site. Mapping Example For examples please see the following presentation:   HYPERLINK "http://spg/sps/SPS%2025%20Documents/Primary%20Target%20Market%20-%20definition.ppt"  Primary Target Market - definition Tenant Responsibilities: Primary Target Market and Web site Mapping The country to be the Primary Target Market for each and all selling points to be used by the tenant will be discussed and agreed upon between the tenant and Microsoft Online Service. If necessary, the display rules will be changed from the expected, or default country (for example, if the tenant decides that   HYPERLINK "http://www.a.country-specific.service.microsoft.de"  www.a.country-specific.service.microsoft.de  has a primary target market of Austria rather than Germany). Terms of Use Tenants are responsible for including text to indicate that the Terms of Use are based on the laws of a specific country. The following text is an example of the text that may be used: The Terms of Use that you accept before you can use any services on this site are based on the laws of <insert country>.  Price Display Tenants are responsible for including text to indicate that prices are displayed based on the sales tax rules of a specific country. The following text is an example of the text that may be used: All prices displayed on this Web site include <insert country> VAT at <insert %>. If you are not from <insert country>, then the final price you pay will be based on a combination of your local tax situation, local sales tax laws, and the presence of Microsoft Online Services in <insert country>. In any event, you will be given the opportunity to review this price before you confirm payment for your service. Signup Process There are several billing-related items that are required to be presented to the end-user when they sign up for a service. The upshot of presentation requirement is that the Tenant should display a Confirmation or Authorization page to the end-user so that they are fully aware of the financial commitment that they are making. Display requirements - Confirmation or Authorization page A statement that monies collected on their Payment Method will reference  Microsoft Online Svcs The currency that the offer will be billed and the end-user will pay in Complete amount that the customer will pay   this is the price including taxes  The frequency that the offer amount will have to be paid by the end-user The duration of the customer s authorization to charge their Payment Method (e.g., until the customer terminates in writing or through the termination method). The Service/Subscription ordered (e.g., MSN Internet Access). Text to indicate the customer  authorizes  his or her Payment Method to be charged as described.  E.g., I authorize Microsoft to charge my designated Payment Method as indicated below/above.   <SUBMIT> button. Text to tell the customer that they should print/store the page for their records Items 1-8 should be presented on the pages for initial sign-up.  Items 3-8 should be presented on pages for change in payment method and change in subscription levels. Other requirements At the end of your terms of use/Agreement, right before the  Click and Accept  button, add an area called  Acceptance  with a check box below and the following statement: By checking this box, I agree that I have reviewed these [terms of use/Agreement] and consent to receive electronic disclosures regarding my Microsoft Billing Account, and I confirm that my computer is capable of receiving and printing or storing copies of such electronic disclosures for my Microsoft Billing Account. Others? User Acceptance Testing Purpose of User Acceptance Testing User Acceptance Testing (UAT) is a testing process oriented to the Business Operations user (as opposed to the end customer user) that is focused on ensuring that all of the business processes that are necessary to support a Billing System are in place and work as planned. UAT is not intended as a technical test of the SPS Billing tools, or as a validation of any documentation. UAT is also not intended as a test of the tenant s UI, but as a means of validating business processes once the UI is connected to SPS. Tenants are responsible for testing the functionality of their UI prior to connecting to the SPS. The typical Business Operations Users involved in the UAT are Customer Service, Reporting, Financial Operations, Offering Management, Billing Operations, Quality Assurance and other individuals associated with Business Operations.  The responsibilities of the UAT participants are to produce a Test Plan involving scripts/scenarios and validation points testing that their Business Rules are being met as expected, then execute these tests to verify assumptions.  The Quality Assurance Team coordinates this process to insure all Users have an opportunity to validate their Process(es) against the UAT Environment (maintained by Operations) and provide basic assistance where needed. Tenant Responsibility Once tenants have created the UI pages for their system, the UI must be connected to the SPS Billing UAT environment. Tenants are responsible for ensuring that their systems are integrated with the SPS. Once the connection is established, a series of tests must be run against the UAT system, using the tenant s UI. Business Ops will run the tests for the tenant using the tenant s UI. Once the tests have passed, the tenant will have passed their UAT, and will then connect to the live SPS for actual customer use. Customer Notifications The SPS will provide an email infrastructure that will be used to provide customers with various billing related notifications. These notifications include, but are not limited to: Payment Instrument-specific hard decline notifications Payment Instrument-specific soft decline notifications Pre-notification of withdrawal for all Direct Debit transactions and Credit/Debit card transactions where the subscription amount has the potential to vary Credit Card expiration date notifications Subscription Renewal notifications Customer Support SSD Customer Support is responsible for handling all incoming billing inquiries from customers.  These inquiries can be submitted through phone, E-mail (Web form), or chat, and are initially handled by support agents. Support agents will provide base-level support to customers. If the inquiry requires further investigation or higher-level authorization, the issue is escalated to additional support tiers. Further details on customer support overview and policies can be obtained from the customer support organization, or go to  HYPERLINK "\\\\Sumac\\SSDBusOps\\VSSShadow\\SSD Policies" \\Sumac\SSDBusOps\VSSShadow\SSD Policies  for further documentation. There is an expectation that the tenant will be cross-charged for customer support services (e.g. phone, chat, email) provided for the tenant. The exact amount to be cross-charged will be agreed between the Customer Support team and the tenant s finance team. Customer Service Representatives The main tool that support agents will leverage to access the SPS is the Phoenix 2.5 Tool. This tool is being developed by the CSS group and will be interfaced with the SPS Billing System. This is the primary tool used for responding to customer account inquiries, billing inquiries, account updates, credits/debits, refunds, and account closures. Customer Self-Care Tenants are responsible for creating a self-care page for customers to use to make changes to their account information. This should be the primary method for account changes and updates. Frequently Asked Questions (FAQ) Frequently Asked Questions (FAQ) is a list of questions commonly asked by customers, and their answers. There are two types of FAQ: Tenant-specific. This FAQ addresses tenant technical, product, or service related items. Each tenant is responsible for creating and maintaining the tenant-specific FAQ. Billing System-specific. This FAQ addresses billing and statement items. SSD Customer Support is responsible for creating and maintaining the Billing System FAQ. Tenants must integrate the Billing System FAQ into their own FAQ.  There will be a link to the Billing FAQ from the centrally hosted On Line Statement Customer Account Management The following policy statements detail the support system in place to handle customer management issues specifically relating to customer accounts.  Other customer support policy statements will be detailed by the customer support organization, or go to  HYPERLINK "\\\\Sumac\\SSDBusOps\\VSSShadow\\SSD Policies" \\Sumac\SSDBusOps\VSSShadow\SSD Policies  for further documentation. Microsoft Passport Account Inquiries Customers are required to use a Microsoft Passport account to register and access all Microsoft Online Services. Customers can use an existing Microsoft Passport account, or obtain a new Microsoft Passport account through the online self-care pages or directly through Microsoft Passport at   HYPERLINK "http://www.passport.com"  http://www.passport.com . Information regarding a Microsoft Passport account, or changes to Microsoft Passport account information, such as the Microsoft Passport username and password, must be completed through the online self-care Web pages, or directly through Microsoft Passport at   HYPERLINK "http://www.passport.com"  http://www.passport.com . If a customer submits a request to customer support, the support agent will direct the customer to the online self-care Web pages, or to Microsoft Passport to obtain the requested information.  Printing Online Statements  The account owner should handle printing online statements through the self-care Web pages. Online statements up to 18 months old should be available for viewing and printing. Updating VAT Registration ID (EMEA) As a general rule, the account owner should handle updating the account s VAT Registration ID through the online self-care Web pages. When requested, support agents will be able to update a customer s VAT Registration ID on behalf of the customer. In such cases, the support agent must perform the baseline account verification before processing any requests to update VAT Registration ID. Microsoft will not refund VAT taxes billed prior to a customer providing a valid VAT Registration ID. Updating Tax Exemption Status (US & Canada) Microsoft will not refund taxes billed prior to a customer providing valid tax documentation.  For customers residing in the United States, the account owner for the organization should handle the updating of an account s tax exemption status through the online self-care Web pages. When requested, support agents will be able to update a customer s tax exemption information on behalf of the customer. The support agents must perform the baseline account verification before processing any requests to update an organization s tax exemption status.   For customers residing in Canada, tax-exempt customers will be required to send the required tax exemption documentation to Microsoft Online Services. Microsoft Online Services will validate the customer s tax exemption status and will update the customer s account accordingly.   Direct Debit Mandates As a general rule, the account owner should be directly printing the mandate form or request to be sent the mandate form at the time of creating the direct debit payment instrument.  However, at a later date the account owner may request a new mandate form via on-line self-care and support agents should be able to request sending a new mandate form to the customer. Table of Denied Orders The Table of Denied Orders (TDO) refers to any customer that is denied access to a product or service due to Microsoft s determination that the customer is inappropriate and not one with whom Microsoft can (legally or otherwise) conduct business.  TDO Checking  refers in general to the process by which customers are appraised prior to being accepted by Microsoft as a customer. Specific types of TDO Checking are outlined below. Embargoed Countries List The Embargoed Countries List is a list of countries that are deemed by the U.S. government to be illegal for a U.S. Company to conduct business with. Upon registration, each new account is checked against the Embargoed Countries list. Any customers attempting to establish an account and who are found on this list are denied. In the case of a new country being added to the Embargoed Countries list, a manual check will need to be performed to locate any customers already established. In this instance, if an account shows up on the Embargoed Countries list, Financial Operations will perform the following procedure. To process a country on the Embargoed Countries list Lock the account and suspend all subscriptions using the reason code Embargo Country. Notify the customer and tenants that the customer s account/subscriptions have been locked/suspended. If after one week the customer has not provided an address in a non-embargoed country, Financial Operations will: Cancel all subscriptions, close the account and submit the outstanding balances for settlement and/or refund. Notify the tenants that the customer s account has been closed.  If after one week, the customer has provided an address in a non-embargoed country Financial Operations will: Remove the violation from subscriptions and re-activate the account. Notify the tenant of the re-activation. Tenant Responsibilities Tenants are responsible for deprovisioning a service when a service has been closed due to an embargo. Denied Parties List The Denied Parties List is a list of companies or individuals that are deemed by the U.S. government to be illegal for a US Company to conduct business with. Active accounts are automatically checked against the Denied Parties List (DPL) upon account registration and account information update. If there is a match, then the customer will receive a message informing them that they should contact customer support as there is an issue with their account. Whenever we receive an updated DPL, all active or locked accounts will be checked against the DPL. If a customer shows up on the DPL, Financial Operations will perform the following procedure. To process a company or individual on the Denied Parties list Lock the account and suspend all subscriptions using the reason code Denied Party. Notify the customer and tenants that the customer s account/subscriptions have been locked/suspended. Escalate the issue to Trade Services through an e-mail message to the xport alias. If after one week Trade Services has not reversed the account s denied party status (for example, if the customer is actually on the list), Financial Operations will: Cancel all subscriptions, close the account and submit the outstanding balances for settlement and/or refund. Notify the tenants that the customer s account has been closed.  If after one week Trade Services has reversed the accounts denied party status (for example, if the customer was not actually on the list), Financial Operations will: Remove the violation from subscriptions and re-activate the account. Notify the tenants of the re-activation. Notify Trade Services of the re-activation. Tenant Responsibilities Tenants are responsible for deprovisioning a service when a service has been closed due to an embargo. Banned Payment Instrument List Financial Operations will create and maintain a table in the SPS for all payment instruments identified as banned. The file will include customer name, address, phone number, credit card or direct debit information, amount outstanding (if any), and the reason for their placement on the list. Financial Operations will crosscheck active payment instruments against the banned list monthly. If an active payment instrument is found on the banned list, a letter is mailed notifying them that they are on the banned list, providing the reason why, and requesting correction of the issue. The customer will have 30 days to respond and resolve the issue. If the issue is resolved, the customer is returned to good standing, and is removed from the Banned Payment Instrument List; if not, their services are de-activated. Potential scenarios resulting in being added to the Banned Payment Instrument List include, but are not limited to: Stolen Credit Card Fraud Non-Payment Bad Debt Fraudulent Behavior Customers may be banned at the account level if they are suspected or found to have acted in a fraudulent manner (i.e., abuse of Terms of Use or Service). When an account is banned, the system will not allow the user to create any new accounts.  Potential scenarios classified as Fraudulent Behavior include, but are not limited to: Using a stolen credit card. Multiple charge-backs without a legitimate cause. Abuse of account, as outlined in the Terms of Use. A violation can also be added to the subscription for fraudulent behavior (instead of banning the account).    Multiple charge-backs without a legitimate cause. Abuse of account, as outlined in the Terms of Use e.g. SPAMing. Tenant Escalations The Billing Operations team will manage all Tenant escalations, including requests from the Tenant to batch update customer accounts and billing issues identified by or escalated to the Tenant.  Tenants should use the   HYPERLINK "mailto:ssdtenan@microsoft.com"  ssdtenan@microsoft.com  alias to escalate issues to the Billing Operations team.  The Billing Operations team will work with the Tenant to determine the required information and priority of the request, based on the nature of the issue. Supported batch updates for customer accounts are as follows: Activate Subscriptions   Activates a set of subscriptions from a cancelled state.  Cancel Subscriptions   Cancel a set of subscriptions.  Create Accounts   Create a set of accounts.  Convert Subscription   Converts a set of subscriptions.  Apply Adjustments   Applies adjustments for a set of subscriptions.  Credit Payment Instruments   Applies a credit to multiple payment instruments.  Close Accounts   Close a set of accounts.  Financial Operations Financial Operations is responsible for handling all the financial policies and procedures of the Billing System. This includes recording revenue activity into SAP (Microsoft s general ledger system), managing outside vendors, developing credit policies and new payment methods, providing new tenants with reporting information, and developing policies for customer billing.  While many of these tasks allow Financial Operations to operate transparently for the tenants, the area of customer billing management has the most potential to bring Financial Operations in contact with both tenants and customers. There is an expectation that the tenant will be cross-charged for services and infrastructure provided within the SPS framework and consumed by the tenant. The exact amount to be cross-charged will be agreed between the SSD Financial Operations team and the tenant s finance team. Customer Billing Management The following policy statements explain the financial policies adhered to by Financial Operations in the management of customer billing accounts. These policies are followed when changes are made to customer accounts in order to minimize risk, reduce errors, and respond in a consistent manner to customer billing issues. Further details on customer support overview and policies can be obtained from the financial operations support organization, or go  HYPERLINK "\\\\Sumac\\SSDBusOps\\VSSShadow\\SSD Policies" \\Sumac\SSDBusOps\VSSShadow\SSD Policies  for further documentation. Interfaces Statutory and Management reporting interfaces All required data for Statutory and Management reporting is sent on a daily basis from the SPS to the SSD BizOps data warehouse (DW) where some business rules are applied and it is formatted for consumption by the various downstream systems. SAP Revenue Report MSSales (MSS) is the Microsoft sales reporting system. For the SPS, all billed data is extracted from the SSD BizOps DW on a weekly basis and it is then loaded into SAP and automatically sent from SAP to MSSales. Billed data consists of those sales that have been through the customer monthly billing cycle. If a customer pays for the offering at the time of purchase, it is still not considered billed until the billing run occurs. Billed data is pulled at the offering level, which is consistent with how other groups at Microsoft report revenue. SAP General Ledger Report Microsoft requires all financial transactions to be posted to the SAP General Ledger (GL). This requirement is fulfilled by posting other non-revenue transactions to SAP on a fiscal month basis. Thus all non-revenue statutory transactions (e.g. cash received, bad debts) are posted into SAP using the SAP GL Report. Tax Datawarehouse Report Microsoft is required to report details of how much tax was charged in each jurisdiction that the tax was collected. This is accomplished via the Tax Datawarehouse Report. On a monthly basis, various data is extracted from the SSD BizOps DW and sent to the Tax Datawarehouse. The tax department then takes this data and aggregates it with all other tax data and reports it to the appropriate tax authorities.  Taxation The SPS assesses taxes for all applicable accounts. To calculate taxes internationally, two tax applications are used. TaxWare is used to calculate sales and use taxes for the United States, and federal and provincial taxes for Canada. WorldTax calculates consumption taxes internationally. A third application, Vertex, may be used to calculate communications taxes in the United States only, however, there is no tenant requirement yet for this type of taxation. Attributes Calculating Tax To determine the amount to tax, SPS sends the address information of the account, the transaction amount, the exemption status, the taxcode, and a tax supplier ID to TaxWare. The taxcode tells TaxWare what type of product is being sold (for example, it differentiates between selling a T-shirt and selling an online subscription). The tax supplier is the company or company division responsible for collecting taxes. Taxes may be calculated differently depending on the location of the tax supplier. Within SPS, the tax supplier corresponds to the company code. For more information regarding company codes, see  Multiple Company Codes  under  Customer Management. Tax Exemptions Exempt transactions will not be assessed tax. Exemption statuses are either 0% or 100% exempt, and are determined according to the following schedule: For US customers who enter an exemption certificate, the exemption status occurs at the state level, and all jurisdictions (federal, state, county, city, secondary county, secondary city) for that customer are set to 100% exempt.  For Canadian customers, Microsoft Tax will decide which of the Canadian taxes to exempt. Any exemptions are at 100%.  For international customers who enter a VAT ID, WorldTax will determine if taxes will be assessed. Exemption Process The following list describes the exemption process used by the SPS: United States. Customers are able to provide a tax exemption certificate number, along with start and end dates of the exemption, when creating an account, or updating account information. Once this certificate number is stored and the tax jurisdictions have been set to 100%, the account will not be assessed taxes. An internal report is generated for the Microsoft Tax department to use to validate the certificate numbers. If any numbers are found to be invalid, the exemptions and certificate number are removed from the account by the Business Operations team. Canada. Customers are instructed to mail or fax a copy of their exemption certificate to the Microsoft Tax department. The certificate is validated by Microsoft Tax, and the customer s account will then be updated to exempt them from either GST or PST [need definitions], or all taxes within Canada. International. Where applicable, customers are able to provide a VAT ID when creating an account, or updating account information. Before being stored on the account, the VAT ID is validated in real-time for format by WorldTax, and for appropriate country by the API. Once a valid VAT ID is entered, WorldTax will decide whether or not to assess taxes on the account. In some instances, taxes will still be assessed (for example, the European Union). In other instances, no taxes will be assessed (for example, South Africa). In some cases, the decision to assess tax is more complex than simply examining the country. There are no reports or manual processes required for international exemptions. Communications Tax Communications tax may need to be assessed on phone call services, however, this is not a confirmed requirement and therefore not supported in SPS. The tax application Vertex is used in conjunction with TaxWare to support communications taxes in the United States. Communications taxes are not used in Canada. For international support, WorldTax does not differentiate between sales and use and communications taxes, but works instead with consumption taxes. Tenant Responsibilities Notifying Canadian Customers of Certificate Requirements Tenants are responsible for instructing Canadian customers to send their tax exemption certificates to the Microsoft Tax department for validation. Tenants are also responsible for informing Canadian customers that any purchases made before the account s exemption status has been updated will be assessed tax. Entering Tax Exemption Information Tenants are responsible for preventing Canadian customers from entering tax information directly into their accounts. Payment Processing Revenue Sharing Revenue sharing arrangements result from multiple entities teaming together to form alliances in order to promote complementing services, thus benefiting from creating value-added services. These value-added services are a benefit to customers, and generate added revenue for the companies. Revenue results from referral fees and revenue-sharing agreements. Business units that wish to participate in revenue sharing relationships must comply with Microsoft standards regarding the accounting treatment of revenue sharing and co-op marketing arrangements. Products must be created to allocate revenue to the correct entities. There are two type of revenue sharing   Internal and External. Internal revenue sharing refers to multiple groups within Microsoft participating in a revenue sharing relationship. External revenue sharing refers to one or more groups within Microsoft and one or more 3rd party companies participating in a revenue sharing relationship using the SPS to bill customers. Currently, internal revenue sharing is supported by SPS processing. External revenue sharing needs will need to be handled on a case-by-case basis, so please discuss your requirements with your SSD Business Operations Tenant Manager. Internal revenue sharing For plans consisting of multiple internal Microsoft tenants  deals, there is no impact on accounting. When a customer purchases a multi-tenant offering, revenue is allocated according to the standard Microsoft Product and Microsoft Sales rules for internal revenue sharing within each offering. Thus, products will always allocate revenue to the proper entity, regardless of the other products with which they are aligned. External revenue sharing External revenue sharing utilizes distribution agreements, whereby marketing expenses are paid for by sharing a portion of the revenues generated through a company alliance. For example, Company A may agree with Microsoft to offer online advertisement on Company A s site. If a customer links to Microsoft s site and purchases a product because of this link, Microsoft will allocate a predetermined portion of the revenue to Company A. This allocation is viewed either as a marketing expense or reduced revenue to Microsoft, and a referral revenue to Company A. Processes must be put in place to allocate revenue (cut a check) to Company A and record the specified expense or reduced revenue within Microsoft. VAP (Partner) Referrals The SPS supports Value Added Partner (VAP) programs, which work like a referral program where a VAP receives a payment for purchases made by the referred business. Attributes VAP Identifiers A VAP code is used to link tenants to organization accounts. This allows VAP payments to be calculated based on any of the organization account attributes. Tenants will specifically define the payment amounts. The VAP code is stored only on the organization account, and at the account level. The code is created at the time of account creation, and cannot be modified or deleted.  Payment Calculation The SPS will not calculate the payment amount to the VAP, and will not store VAP payments, or records of payments. Reporting and Payments Given specifications by the Tenant, SSD Business Operations will create all reports relating to VAPs, and handle all payments to VAPs using an appropriate vendor. Tenant Responsibilities Reporting and Payments Tenants are responsible for specifying all reports and payment calculations relating to VAPs. Validating VAP Codes Tenants are responsible for validating that the account transmitting a VAP code is an organization account, and, if necessary, that the VAP code is valid. This data will be sent to the SPS via the Referral Dataset, using the Referral Type to identify the specific Referral Data template to use. Offering Management The SSD Business Operations Offering Management team is responsible for maintaining the offering and pricing database using the Partner Configuration Tool (PCT). The following table describes the core components of the product model used by the configuration tool. Definition Partner The service provider or tenant offering the service. Service/ Benefit A single benefit that the tenant provides to the customer. For example, Domain Name Registration (DNR), E-mail, or Chat. Rating The purchase limits and rates available for an offer. Localization The localized offer name, price description and price in localized currency. Offer The resulting offering to the customer after all purchase limits, rates, and discounts are applied. For example, a Web service plan could contain E-mail, and Click-to-chat services. Pricing Features In the SPS, pricing features provide flexibility for how and when customers are billed, and the ways in which they are billed. The SPS provides the following pricing features: Billing Models When the customers account will be charged for the delivery of the associated benefits. Cycle Forward  The charge to the billable account occurs before the access to the set of benefits is allowed. The charge is collected on the customer s anniversary date (unless immediate settlement is applied).   Purchase A one-time charge for the delivery of services before access to the service is allowed. Usage The charge is based on the amount of service the customer used during the month and occurs on the customer s anniversary date.  There are 2 scenarios for usage that will be supported for 2.5: Basic Usage An example of basic usage is Internet access where the customer is charged for the amount of time they are online.  This service would be billing per minute used.  For example, $.05 per minute. Allowance with per unit rate  Part of the monthly subscription includes X units of allowance, use of service beyond the allowed amount is rated and billed.  Any remaining allowance at the end of the cycle can be removed or carried over to the next cycle.  Example, Internet Access provides a $29.95 monthly subscription with 60 minutes allowance and each additional minute used during the month is charged at $.10/minute. Immediate Settlement (Settle asap) The customer s PI (payment instrument) will be charged on the next billing run vs. on their next anniversary billing date.  This can be applied only to a purchase fee.  Note: Immediate settlement is not supported for the Direct Debit payment type. Suspend/Re-enable The ability to bill the customer a different amount when they go into or are brought out of a suspended status due to a credit card decline or other subscription violation. The amount charged for an associated set of benefits. Fixed A single amount charged for an associated set of benefits regardless of when purchased or the volume purchased.  Rate By  A variable amount charged for an associated set of benefits based on when (date, time) the billing occurs. Rating by Cycle Allows for charging or crediting a specified amount based on the event and the customer s cycle.   Example 1:  A plan that offers a set of benefits for a particular monthly cycle charge relative to when the customer purchased the subscription. Cycle Charge $20.00 $25.00 Example 2:  A plan that has a cancel policy where if the customer cancels in the first cycle of their annual subscription they are credited 75% of the purchase price, and if cancelled in the 2-3 cycle they get 50%, 4-6 cycle 25%. Cycle Charge 2nd-3rd 4th-6th Proration Adjustment of the rate billed based on the difference between the purchase date or cancellation date and the customers anniversary billing date.  The tenant may chose to prorate or charge in full on cancel. Cancel An adjustment to the bill rate based on the cancellation date and the customers last billing date.   Example:  A customer has a billing date of the 17th of each month.  The customer cancels a subscription that has a base charge of $20.00 per month  (cycle) on 5/22/01.  The customer would then have a credit of $16.77 applied to their balance. Non-Currency Resources  Non-monetary units that may be used to implement rating scenarios, track usage or used in lieu of monetary units as payment. Allowance Issuing a predetermined amount of a non-currency resource at the time of purchase to affect the customers account balance for the non-currency resource. Example:  A business unit allows a customer to purchase 10 article downloads.  At the time of purchase the customers account would be credited with 10 downloads for $3.00.  Each time the customer downloads an article their account would be debited 1 download.  When a customer was out of downloads they would need to purchase another set of 10 downloads. (For 2.5, the billing system does not restrict how many downloads the customer uses and this must be done on the tenant side) Usage Tracking Non-Currency resources are tracked through usage events at the customer s account level and totaled at the end of the month to determine the rate that is to be applied.  For 2.5, there will only be a flat rate per unit allowed. Cancellation Credits or Fees The credit or fees applied to a customer s account upon cancellation of a subscription.  A customer initiated cancel event will assess the cancellation fees immediately (where applicable) and then the subscription will go into a  grace period  if this is configured.  This will allow accidental cancellations to be reactivated without service being lost.  If a customer is in suspension due to a declining credit card, the cancellation fees will be immediately assessed and then credited/charged back in the event they are re-enabled. Fixed A single amount charged or given back regardless of when a customer cancels their subscription. Example: A customer purchases an offering that charges $20.00 for 1 month of access to a set of benefits.  If the customer cancels at any point during the month they would receive a credit of $10.00 on their account. Tiered The amount charged or given back to a customer varies depending upon when the customer cancels their subscription.  This can only be configured in flat fee cycle tiers, not percentages.  Therefore, if the purchase can be prorated, the cycle time may be different for different customers (anywhere from 1   31 days). Example:  A customer owns a $100 one year subscription which if they cancel within the first cycle of their subscription, can receive a 75% ($75) credit of the total purchase price.  If they cancel in 2-3 cycles, they receive a 50% credit, etc.   Free Cycles To start billing after a specified number of cycles, therefore providing free months of service. Or, to say 1 month free after 6 months of service. Term Commits These essentially represent a commitment by the subscriber to use the services in the subscription for a specified duration of time, and an agreement to pay penalties for early termination of this agreement.  When the customer goes into a suspension status, the cancellation fee will be immediately assessed.  If they then come out of the suspension status back to an active status, the cancellation fees will then be credited back and only the active months will be counted towards their subscription end date. Grace Period The grace period functionality in the billing system is set at the offer level, is configurable by days and is used for two purposes: to set a period for after the customer s subscription has expired in which they are still allowed to renew without losing their service and to set a period for when a customer or CSR has cancelled a subscription and want to  uncancel  it without losing their service.  It is highly recommended that every offer have a grace period of 3 days minimum for the latter case. Relations Relationships between offers that are enforced on purchase.   A base offer is an offer that the customer can own standalone and is required to be owned prior to a customer purchasing a downgrade, upgrade, renewal or add-on. Downgrade downgrade  means to immediately replace one subscription with another that most likely has fewer services and costs less.  A rate specific to the conversion event can be set up if desired.  A downgrade cannot be a downgrade, upgrade or add-on to itself.  Upgrade upgrade  means to immediately replace one subscription with another that most likely has additional services. An upgrade can also be a discounted offer that is only offered to customers who own the previous version of a service. A rate specific to the conversion event can be set up if desired.  An upgrade cannot be an upgrade, downgrade or add-on to itself. Renewal renew  means to schedule a replacement of a currently owned subscription with another offering at the time of expiration.  An offer can be renewed into automatically or manually (must be initiated by the customer).  If the renewal is to be automatic, only one renewal path can exist. If the renewal is manual, multiple renewal paths can exist.  In both cases the offer the customer is renewing into must contain identical services as the one they are renewing from for 2.5.  The customer may renew anytime before their current subscription expires but the renewal will not become effective until the day after the current subscription expires.  If the tenant wants to restrict this renewal window, they must do so on their end.  The customer is able to purchase as many renewals as they like unless restricted by the tenant or through the Max Ownership functionality in the billing system.  If the customer cancels a subscription and has purchased a renewal to that subscription that has not yet been activated, the renewal will also be cancelled and any cancellation fees/credits will be applied.  Tenants have the option to provide a grace period in which a customer has time to renew after the expiration of their current subscription without losing access to the service.  Renewal offers must contain the exact same service components as in the original subscription for 2.5. Categories A category (or grouping) is a filtering mechanism that can be defined by tenants to only allow for specific offers to be displayed to a customer. Example:  The tenant may have special offers that are only for Academic Users, therefore they may have a category called   in which only the AE offers would be displayed to customers when they follow a specific purchase path. Mutually Exclusive Group A MEG restricts a customer to only owning one active subscription of the offers within that MEG at a time.  Example: Base Offer monthly and Base Offer yearly may be in the MEG of  Base Offer  which allows them to be presented together and the customer to choose their payment option.  Or Base Offer and Gold offer could be grouped together to allow the customer to only purchase one if the tenant wants to limit the customer to only one instance of the service at one time. Max Ownership Allows for a tenant to restrict the number of times a customer can own a specified offering either for the lifetime of the account or just while the subscription is active (concurrent). Tenant Responsibility Offering Availability Tenants may choose to make an offering available only in select countries, or for select scenarios. Tenants are responsible for providing the criteria with which to filter the lists of offerings that are displayed to their customers. The key filter criteria that define an offering list are country, currency, language, relation, and scenario. Offering Localization Tenants are responsible for providing the localized description that will be presented to the customers as well as localized pricing from each subsidiary for each offer. Tenants can only make their offerings available in the languages supported by the SPS. Languages supported by the SPS may differ by country.  Supported Languages and Currencies Tenants can only make each offering available in languages supported by the SPS and in one of the currencies supported by the SPS. For a list of languages and currencies supported by the SPS, see  HYPERLINK "http://spg/sps/SPS%2025%20Documents/Primary%20Target%20Markets%20for%20the%20SPS.xls" http://spg/sps/SPS 25 Documents/Primary Target Markets for the SPS.xls Tenant Interface Requirements The tenant interfaces must transfer customer country, language, currency, and scenario values to the SPK APIs. Adding Offers to the Billing System New Tenant Offers When a new tenant is onboarding and has completed the onboarding checklist, the next step is for them to meet with an Offer Manager from the Bizops team to discuss their offers.  The offer manager will assist the tenant in defining their offers and will maintain a document with their requirements until they are finalized usually several weeks later.  The offer manager will create test offers in the tenant s integration environment for testing purposes and will work with the tenant s marketing and dev teams to tweak the offers until they are behaving as desired.  Minor changes to the offers such as prices and offer name can be made up to 4 weeks prior to the launch of the offerings but major changes such as services and general billing model must be finalized at least a couple of months prior to launch.  Existing Tenant Offers In general, offers that have already been propped to production are not to be changed due to impacts on current customers and system complexities.  Tenants may wish to add a new offer and this can be done via RAID (attach template) on a weekly basis (schedule tbd) Before a new offer can be requested it must go through all the appropriate approvals by Bizops and for the tenant internally (legal, finance, operations, etc). Testing expected pricing and account behavior After an offer has been added, it must be tested before it can be made available to customers. Both Billing and the tenant must test the changes. After a tenant submits and approved offer request, Business Operations identifies test cases and the expected results of the cases. These test cases are then tested and verified within SSD Business Operations. Once the tests have passed and the offers loaded into the TIE, the tenant is notified and must perform their own set of tests, as defined by their business processes. Tenant Responsibility Tenants are responsible for ensuring the user experience meets expectations using their own defined processes. Propping offers to production Once all BizOps and Tenant testing is completed the Offer Manager will give Operations the approval to prop the offers to production and will continue to maintain the offer configuration spec with any changes.  This spec will be available on the SPG site under the partner s folder and will contain information that they may need to call the offerings, such as Partner ID, Category Names, Offer ID s, etc. Reporting Reports are used as a way for tenants to view the data collected by the SPS in a way that is meaningful to their business.  All reporting is created and managed by SSD Business Operations. For more information, contact the SSD Reporting Team. Currently Available Reports The following table lists the reports currently available for use by tenants. Report Name Description Sign up Page Tracks number of subscription sign-ups in a specific time period Free vs. Paid Shows number of free subscriptions versus paid subscriptions Churn Analysis Analysis of subscription cancellations for a variety of reasons Month End Metrics Various financial details for MonthEnd Declines Analysis For Credit Card and Direct Debit Viewing Reports Billing reports are accessed through   HYPERLINK "http://SSDReports/Portal"  http://SSDReports/Portal . After logging onto the Web site, tenants may use one of the two following methods for viewing reports: Managed reports. Contain pre-selected fields that the tenant can filter.  Free-Form reports. Contain a large number of pre-selected fields which the tenant can add or remove, thus creating a customized report. These customized reports can be saved to the server and be shared or not shared with other users. While reviewing a report, tenants may export a report to an Excel file for further analysis. Requesting New Reports Tenants should contact the SSD Reporting Team to request that additional fields be added or new reports be created. All requests are prioritized and reviewed prior to being added. Glossary Definition Automated Clearing House (ACH) A system used by banks to process account transactions. Add-on An additional offering/service that can be purchased, based on an existing offering/service that is already owned by a customer. Anniversary Billing Date The date a customer creates an account. Monthly cycle billing for the customer will always occur on their same anniversary date. Authentication Verification of a customer s identity using a Passport ID. Authorization Verification of a customer s access rights to a service and/or information. Banned Account List (BAL) Table of accounts identified as banned, maintained by the Financial Operations team. The initial offering that a customer owns when first joining a tenant s system. Bertelsmann Distribution Financial Services (BDFS) The Business Operations vendor that supports the financial operations functions of the SPS Billing System. Billing Privacy Statement (BPS) The document specifying the policies regarding disclosure of a customer s personal information, and describing the handling and use of that information by Microsoft Online Services Category Method of grouping offerings according to customer or offering characteristics such as product families. Credit Card Authorization The processing of credit card charges including settlement, either in real-time or in batch processes. Convert To cancel one offering and repurchase another offering, through an upgrade or downgrade, most often without cancellation penalties. Credit Card Validation Verification of a credit card by authorizing one currency unit without settlement. Design Change Request (DCR) A request for a change to the functionality and/or features of the SPS. Downgrade To immediately replace one offering with another that most likely has fewer services and costs less. Dunning The collection process whereby attempts are made to contact the customer (through letters, telephone calls, e-mail messages, and so on) to collect monies due. Electronic Signatures in Global and National Commerce Act (E-SIGN) A federal act that became effective October 1, 2000. The act generally established equivalency between written signatures and paper documents, and electronic signatures and records. Embargoed Country A country with which the U.S. government has stated it is illegal to conduct business. Escalation The process of advancing a customer support issue through a hierarchical set of tiers that correspond to the severity or complexity of the issue. Legal and Corporate Affairs (LCA) Microsoft s Legal and Corporate Affairs department. Localization The act of translating a document into a foreign language for an audience local to that area (for example, French, or Russian).  Mandate A legal authorization for the withdrawal of monies from a customer s bank account for direct debit. Microsoft Sales (MSSales) The internal Sales tool used by Microsoft for the reporting of sales revenue. Microsoft Tax The internal division within Microsoft that provides guidance on business approaches from a tax perspective, performs tax risk assessment, and updates information regarding the correct taxation rates to be used in different countries. Non-sufficient Funds (NSF) The message returned when a direct debit account does not have enough funds to cover the billing settlement amount being deducted from the account.  Offering A set of products or services available to the customer for purchase. Online Statement (OLS) An itemization of all billing charges and the current amount due on each payment instrument for an account for a specific billing cycle. Renew To schedule a replacement of a currently owned offering (subscription) with another offering (upon the expiry of the currently owned offering). Often, the same offering simply has its  end by  date extended. Service A single benefit that a tenant provides customers, such as Domain Name Registration (DNR), E-mail, or Chat. Settlement The attempt to process payment for a payment instrument on an account. Support Agent A Microsoft employee or contracted employee responsible for handling customer inquiries regarding billing accounts. Table of Denied Orders The list of customers that are denied access to a product or service because they are deemed inappropriate to conduct business with. The list contains the embargoes countries list, the denied parties list, and the banned account list. Tax Invoice An itemization of all billing charges and taxes applied for a billing cycle. Hard copy Tax Invoices are sent to specific customer sets (for example, EU business customers) for tax reporting purposes. TaxWare The application used to calculate sales and use taxes for the United States, and federal and provincial taxes for Canada. Tenant Integration Environment (TIE) A system maintained by SPG for tenants to use in developing and testing their billing Web pages. Upgrade To replace one offering with another that has additional services and higher cost. User Acceptance Testing (UAT) A testing process focused on ensuring that all of the business processes that are necessary to support a SPS Billing in production are in place and work as planned and expected Value Added Partner (VAP) An external partner who receives a payment from SSD Business Operations for referring new customers to a tenant service. Value Added Tax (VAT) Tax added for purchases made in Europe, the Middle East, and Africa. WorldTax The application used to calculate consumption taxes internationally. Zero-decimal Currency A currency that must be represented as a whole number, such as the Japanese Yen. The currency cannot be subdivided (for example, the way the US Dollar can be divided into cents).  PAGE  Tenant Integration Guide Microsoft Confidential Microsoft Confidential Tenant Integration Guide  PAGE  Microsoft Confidential. This is preliminary documentation and is subject to change. Microsoft Confidential. This is preliminary documentation and is subject to change. yn_nN wsmgamZSsOsHA gdJ0j gdP*E gdP*E gdABr xtktgtgtgtg gdH-! gdH-! gdH-! gdH-! gdiJ0 gdiJ0 gdH-! gdH-! gdH-! gdH-!
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\Domain_Data\SupportedCurrencies.xml ===
<CurrencyList>
	<CurrencyInfo CurrencyName="Australian Dollar" ISO3166CurrencyNum="36" CurrencyCode="AUD"/>
	<CurrencyInfo CurrencyName="British Pound" ISO3166CurrencyNum="826" CurrencyCode="GBP"/>
	<CurrencyInfo CurrencyName="Canadian Dollar" ISO3166CurrencyNum="124" CurrencyCode="CAD"/>
	<CurrencyInfo CurrencyName="Danish Krone" ISO3166CurrencyNum="208" CurrencyCode="DKK"/>
	<CurrencyInfo CurrencyName="European Euro" ISO3166CurrencyNum="978" CurrencyCode="EUR"/>
	<CurrencyInfo CurrencyName="Japanese Yen" ISO3166CurrencyNum="392" CurrencyCode="JPY"/>
	<CurrencyInfo CurrencyName="New Zealand Dollar" ISO3166CurrencyNum="554" CurrencyCode="NZD"/>
	<CurrencyInfo CurrencyName="Norwegian Krone" ISO3166CurrencyNum="578" CurrencyCode="NOK"/>
	<CurrencyInfo CurrencyName="South African Rand" ISO3166CurrencyNum="710" CurrencyCode="ZAR"/>
	<CurrencyInfo CurrencyName="South Korean Won" ISO3166CurrencyNum="410" CurrencyCode="KRW"/>
	<CurrencyInfo CurrencyName="Swedish Krona" ISO3166CurrencyNum="752" CurrencyCode="SEK"/>
	<CurrencyInfo CurrencyName="Swiss Franc" ISO3166CurrencyNum="756" CurrencyCode="CHF"/>
	<CurrencyInfo CurrencyName="Taiwanese New Dollar" ISO3166CurrencyNum="901" CurrencyCode="TWD"/>
	<CurrencyInfo CurrencyName="United States Dollar" ISO3166CurrencyNum="840" CurrencyCode="USD"/>
</CurrencyList>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\Domain_Data\CountryCurrency.xml ===
<!-- This file lists the mapping of country and currency for SPS 2.5. The first 
 currency in the list is the  default currency for the country.  -->
 
<CountryCurrencyMapping>
	<CountryCurrency>
		<CountryName>Albania</CountryName>
		<ISO3166CountryCode2>AL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Algeria</CountryName>
		<ISO3166CountryCode2>DZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>American Samoa</CountryName>
		<ISO3166CountryCode2>AS</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Andorra</CountryName>
		<ISO3166CountryCode2>AD</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Angola</CountryName>
		<ISO3166CountryCode2>AO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Anguilla</CountryName>
		<ISO3166CountryCode2>AI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Antarctica</CountryName>
		<ISO3166CountryCode2>AQ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Antigua and Barbuda</CountryName>
		<ISO3166CountryCode2>AG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Argentina</CountryName>
		<ISO3166CountryCode2>AR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Armenia</CountryName>
		<ISO3166CountryCode2>AM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Aruba</CountryName>
		<ISO3166CountryCode2>AW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Australia</CountryName>
		<ISO3166CountryCode2>AU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Australian Dollar</CurrencyName>
			<CurrencyCode>AUD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Austria</CountryName>
		<ISO3166CountryCode2>AT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Azerbaijan</CountryName>
		<ISO3166CountryCode2>AZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bahamas, The</CountryName>
		<ISO3166CountryCode2>BS</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bahrain</CountryName>
		<ISO3166CountryCode2>BH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bangladesh</CountryName>
		<ISO3166CountryCode2>BD</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Barbados</CountryName>
		<ISO3166CountryCode2>BB</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Belarus</CountryName>
		<ISO3166CountryCode2>BY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Belgium</CountryName>
		<ISO3166CountryCode2>BE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Belize</CountryName>
		<ISO3166CountryCode2>BZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Benin</CountryName>
		<ISO3166CountryCode2>BJ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bermuda</CountryName>
		<ISO3166CountryCode2>BM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bhutan</CountryName>
		<ISO3166CountryCode2>BT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bolivia</CountryName>
		<ISO3166CountryCode2>BO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bosnia and Herzegovina</CountryName>
		<ISO3166CountryCode2>BA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Botswana</CountryName>
		<ISO3166CountryCode2>BW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Brazil</CountryName>
		<ISO3166CountryCode2>BR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Brunei</CountryName>
		<ISO3166CountryCode2>BN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Bulgaria</CountryName>
		<ISO3166CountryCode2>BG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Burkina Faso</CountryName>
		<ISO3166CountryCode2>BF</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Burundi</CountryName>
		<ISO3166CountryCode2>BI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cambodia</CountryName>
		<ISO3166CountryCode2>KH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cameroon</CountryName>
		<ISO3166CountryCode2>CM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Canada</CountryName>
		<ISO3166CountryCode2>CA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Canadian Dollar</CurrencyName>
			<CurrencyCode>CAD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cape Verde</CountryName>
		<ISO3166CountryCode2>CV</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cayman Islands</CountryName>
		<ISO3166CountryCode2>KY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Central African Republic</CountryName>
		<ISO3166CountryCode2>CF</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Chad</CountryName>
		<ISO3166CountryCode2>TD</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Chile</CountryName>
		<ISO3166CountryCode2>CL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>China</CountryName>
		<ISO3166CountryCode2>CN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Christmas Island</CountryName>
		<ISO3166CountryCode2>CX</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cocos (Keeling) Islands</CountryName>
		<ISO3166CountryCode2>CC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Colombia</CountryName>
		<ISO3166CountryCode2>CO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Comoros</CountryName>
		<ISO3166CountryCode2>KM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Congo</CountryName>
		<ISO3166CountryCode2>CG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Congo (DRC)</CountryName>
		<ISO3166CountryCode2>CD</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cook Islands</CountryName>
		<ISO3166CountryCode2>CK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Costa Rica</CountryName>
		<ISO3166CountryCode2>CR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cote D'Ivoire</CountryName>
		<ISO3166CountryCode2>CI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Croatia</CountryName>
		<ISO3166CountryCode2>HR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Cyprus</CountryName>
		<ISO3166CountryCode2>CY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Czech Republic</CountryName>
		<ISO3166CountryCode2>CZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Denmark</CountryName>
		<ISO3166CountryCode2>DK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Danish Krone</CurrencyName>
			<CurrencyCode>DKK</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Djibouti</CountryName>
		<ISO3166CountryCode2>DJ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Dominica</CountryName>
		<ISO3166CountryCode2>DM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Dominican Republic</CountryName>
		<ISO3166CountryCode2>DO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>East Timor</CountryName>
		<ISO3166CountryCode2>TP</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Ecuador</CountryName>
		<ISO3166CountryCode2>EC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Egypt</CountryName>
		<ISO3166CountryCode2>EG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>El Salvador</CountryName>
		<ISO3166CountryCode2>SV</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Equatorial Guinea</CountryName>
		<ISO3166CountryCode2>GQ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Eritrea</CountryName>
		<ISO3166CountryCode2>ER</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Estonia</CountryName>
		<ISO3166CountryCode2>EE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Ethiopia</CountryName>
		<ISO3166CountryCode2>ET</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Falkland Islands (Islas Malvinas)</CountryName>
		<ISO3166CountryCode2>FK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Faroe Islands</CountryName>
		<ISO3166CountryCode2>FO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Fiji Islands</CountryName>
		<ISO3166CountryCode2>FJ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Finland</CountryName>
		<ISO3166CountryCode2>FI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>France</CountryName>
		<ISO3166CountryCode2>FR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>French Guiana</CountryName>
		<ISO3166CountryCode2>GF</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>French Polynesia</CountryName>
		<ISO3166CountryCode2>PF</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Gabon</CountryName>
		<ISO3166CountryCode2>GA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Gambia, The</CountryName>
		<ISO3166CountryCode2>GM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Georgia</CountryName>
		<ISO3166CountryCode2>GE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Germany</CountryName>
		<ISO3166CountryCode2>DE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Ghana</CountryName>
		<ISO3166CountryCode2>GH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Gibraltar</CountryName>
		<ISO3166CountryCode2>GI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Greece</CountryName>
		<ISO3166CountryCode2>GR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Greenland</CountryName>
		<ISO3166CountryCode2>GL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Grenada</CountryName>
		<ISO3166CountryCode2>GD</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Guadeloupe</CountryName>
		<ISO3166CountryCode2>GP</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Guam</CountryName>
		<ISO3166CountryCode2>GU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Guatemala</CountryName>
		<ISO3166CountryCode2>GT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Guinea</CountryName>
		<ISO3166CountryCode2>GN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Guinea-Bissau</CountryName>
		<ISO3166CountryCode2>GW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Guyana</CountryName>
		<ISO3166CountryCode2>GY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Haiti</CountryName>
		<ISO3166CountryCode2>HT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Honduras</CountryName>
		<ISO3166CountryCode2>HN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Hong Kong SAR</CountryName>
		<ISO3166CountryCode2>HK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Hungary</CountryName>
		<ISO3166CountryCode2>HU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Iceland</CountryName>
		<ISO3166CountryCode2>IS</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>India</CountryName>
		<ISO3166CountryCode2>IN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Indonesia</CountryName>
		<ISO3166CountryCode2>ID</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Ireland</CountryName>
		<ISO3166CountryCode2>IE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Israel</CountryName>
		<ISO3166CountryCode2>IL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Italy</CountryName>
		<ISO3166CountryCode2>IT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Jamaica</CountryName>
		<ISO3166CountryCode2>JM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Japan</CountryName>
		<ISO3166CountryCode2>JP</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Japanese Yen</CurrencyName>
			<CurrencyCode>JPY</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Jordan</CountryName>
		<ISO3166CountryCode2>JO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Kazakhstan</CountryName>
		<ISO3166CountryCode2>KZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Kenya</CountryName>
		<ISO3166CountryCode2>KE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Kiribati</CountryName>
		<ISO3166CountryCode2>KI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Korea</CountryName>
		<ISO3166CountryCode2>KR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>South Korean Won</CurrencyName>
			<CurrencyCode>KRW</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Kuwait</CountryName>
		<ISO3166CountryCode2>KW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Kyrgyzstan</CountryName>
		<ISO3166CountryCode2>KG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Laos</CountryName>
		<ISO3166CountryCode2>LA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Latvia</CountryName>
		<ISO3166CountryCode2>LV</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Lebanon</CountryName>
		<ISO3166CountryCode2>LB</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Lesotho</CountryName>
		<ISO3166CountryCode2>LS</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Liberia</CountryName>
		<ISO3166CountryCode2>LR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Liechtenstein</CountryName>
		<ISO3166CountryCode2>LI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Lithuania</CountryName>
		<ISO3166CountryCode2>LT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Luxembourg</CountryName>
		<ISO3166CountryCode2>LU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Macau SAR</CountryName>
		<ISO3166CountryCode2>MO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Macedonia, Former Yugoslav Republic of</CountryName>
		<ISO3166CountryCode2>MK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Madagascar</CountryName>
		<ISO3166CountryCode2>MG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Malawi</CountryName>
		<ISO3166CountryCode2>MW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Malaysia</CountryName>
		<ISO3166CountryCode2>MY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Maldives</CountryName>
		<ISO3166CountryCode2>MV</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mali</CountryName>
		<ISO3166CountryCode2>ML</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Malta</CountryName>
		<ISO3166CountryCode2>MT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Marshall Islands</CountryName>
		<ISO3166CountryCode2>MH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Martinique</CountryName>
		<ISO3166CountryCode2>MQ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mauritania</CountryName>
		<ISO3166CountryCode2>MR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mauritius</CountryName>
		<ISO3166CountryCode2>MU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mayotte</CountryName>
		<ISO3166CountryCode2>YT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mexico</CountryName>
		<ISO3166CountryCode2>MX</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Micronesia</CountryName>
		<ISO3166CountryCode2>FM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Moldova</CountryName>
		<ISO3166CountryCode2>MD</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Monaco</CountryName>
		<ISO3166CountryCode2>MC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mongolia</CountryName>
		<ISO3166CountryCode2>MN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Montserrat</CountryName>
		<ISO3166CountryCode2>MS</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Morocco</CountryName>
		<ISO3166CountryCode2>MA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Mozambique</CountryName>
		<ISO3166CountryCode2>MZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Myanmar</CountryName>
		<ISO3166CountryCode2>MM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Namibia</CountryName>
		<ISO3166CountryCode2>NA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Nauru</CountryName>
		<ISO3166CountryCode2>NR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Nepal</CountryName>
		<ISO3166CountryCode2>NP</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Netherlands Antilles</CountryName>
		<ISO3166CountryCode2>AN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Netherlands, The</CountryName>
		<ISO3166CountryCode2>NL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>New Caledonia</CountryName>
		<ISO3166CountryCode2>NC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>New Zealand</CountryName>
		<ISO3166CountryCode2>NZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>New Zealand Dollar</CurrencyName>
			<CurrencyCode>NZD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Nicaragua</CountryName>
		<ISO3166CountryCode2>NI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Niger</CountryName>
		<ISO3166CountryCode2>NE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Nigeria</CountryName>
		<ISO3166CountryCode2>NG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Niue</CountryName>
		<ISO3166CountryCode2>NU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Norfolk Island</CountryName>
		<ISO3166CountryCode2>NF</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Northern Mariana Islands</CountryName>
		<ISO3166CountryCode2>MP</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Norway</CountryName>
		<ISO3166CountryCode2>NO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Norwegian Krone</CurrencyName>
			<CurrencyCode>NOK</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Oman</CountryName>
		<ISO3166CountryCode2>OM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Pakistan</CountryName>
		<ISO3166CountryCode2>PK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Palau</CountryName>
		<ISO3166CountryCode2>PW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Panama</CountryName>
		<ISO3166CountryCode2>PA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Papua New Guinea</CountryName>
		<ISO3166CountryCode2>PG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Paraguay</CountryName>
		<ISO3166CountryCode2>PY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Peru</CountryName>
		<ISO3166CountryCode2>PE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Philippines</CountryName>
		<ISO3166CountryCode2>PH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Pitcairn Islands</CountryName>
		<ISO3166CountryCode2>PN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Poland</CountryName>
		<ISO3166CountryCode2>PL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Portugal</CountryName>
		<ISO3166CountryCode2>PT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Puerto Rico</CountryName>
		<ISO3166CountryCode2>PR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Qatar</CountryName>
		<ISO3166CountryCode2>QA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Reunion</CountryName>
		<ISO3166CountryCode2>RE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Romania</CountryName>
		<ISO3166CountryCode2>RO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Russia</CountryName>
		<ISO3166CountryCode2>RU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Rwanda</CountryName>
		<ISO3166CountryCode2>RW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Samoa</CountryName>
		<ISO3166CountryCode2>WS</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>San Marino</CountryName>
		<ISO3166CountryCode2>SM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Sao Tome and Principe</CountryName>
		<ISO3166CountryCode2>ST</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Saudi Arabia</CountryName>
		<ISO3166CountryCode2>SA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Senegal</CountryName>
		<ISO3166CountryCode2>SN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Seychelles</CountryName>
		<ISO3166CountryCode2>SC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Sierra Leone</CountryName>
		<ISO3166CountryCode2>SL</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Singapore</CountryName>
		<ISO3166CountryCode2>SG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Slovakia</CountryName>
		<ISO3166CountryCode2>SK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Slovenia</CountryName>
		<ISO3166CountryCode2>SI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Solomon Islands</CountryName>
		<ISO3166CountryCode2>SB</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Somalia</CountryName>
		<ISO3166CountryCode2>SO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>South Africa</CountryName>
		<ISO3166CountryCode2>ZA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>South African Rand</CurrencyName>
			<CurrencyCode>ZAR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Spain</CountryName>
		<ISO3166CountryCode2>ES</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Sri Lanka</CountryName>
		<ISO3166CountryCode2>LK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>St. Helena</CountryName>
		<ISO3166CountryCode2>SH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>St. Kitts and Nevis</CountryName>
		<ISO3166CountryCode2>KN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>St. Lucia</CountryName>
		<ISO3166CountryCode2>LC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>St. Pierre and Miquelon</CountryName>
		<ISO3166CountryCode2>PM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>St. Vincent and the Grenadines</CountryName>
		<ISO3166CountryCode2>VC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Suriname</CountryName>
		<ISO3166CountryCode2>SR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Swaziland</CountryName>
		<ISO3166CountryCode2>SZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Sweden</CountryName>
		<ISO3166CountryCode2>SE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Swedish Krona</CurrencyName>
			<CurrencyCode>SEK</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Switzerland</CountryName>
		<ISO3166CountryCode2>CH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>Swiss Franc</CurrencyName>
			<CurrencyCode>CHF</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Taiwan</CountryName>
		<ISO3166CountryCode2>TW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>Taiwanese New Dollar</CurrencyName>
			<CurrencyCode>TWD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Tajikistan</CountryName>
		<ISO3166CountryCode2>TJ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Tanzania</CountryName>
		<ISO3166CountryCode2>TZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Thailand</CountryName>
		<ISO3166CountryCode2>TH</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Togo</CountryName>
		<ISO3166CountryCode2>TG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Tokelau</CountryName>
		<ISO3166CountryCode2>TK</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Tonga</CountryName>
		<ISO3166CountryCode2>TO</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Trinidad and Tobago</CountryName>
		<ISO3166CountryCode2>TT</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Tunisia</CountryName>
		<ISO3166CountryCode2>TN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Turkey</CountryName>
		<ISO3166CountryCode2>TR</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Turkmenistan</CountryName>
		<ISO3166CountryCode2>TM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Turks and Caicos Islands</CountryName>
		<ISO3166CountryCode2>TC</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Tuvalu</CountryName>
		<ISO3166CountryCode2>TV</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Uganda</CountryName>
		<ISO3166CountryCode2>UG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Ukraine</CountryName>
		<ISO3166CountryCode2>UA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>United Arab Emirates</CountryName>
		<ISO3166CountryCode2>AE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>United Kingdom</CountryName>
		<ISO3166CountryCode2>GB</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>British Pound</CurrencyName>
			<CurrencyCode>GBP</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>United States</CountryName>
		<ISO3166CountryCode2>US</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Uruguay</CountryName>
		<ISO3166CountryCode2>UY</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Uzbekistan</CountryName>
		<ISO3166CountryCode2>UZ</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Vanuatu</CountryName>
		<ISO3166CountryCode2>VU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Vatican City</CountryName>
		<ISO3166CountryCode2>VA</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Venezuela</CountryName>
		<ISO3166CountryCode2>VE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Vietnam</CountryName>
		<ISO3166CountryCode2>VN</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Virgin Islands</CountryName>
		<ISO3166CountryCode2>VI</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Virgin Islands, British</CountryName>
		<ISO3166CountryCode2>VG</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Wallis and Futuna</CountryName>
		<ISO3166CountryCode2>WF</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Yemen</CountryName>
		<ISO3166CountryCode2>YE</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Yugoslavia</CountryName>
		<ISO3166CountryCode2>YU</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Zambia</CountryName>
		<ISO3166CountryCode2>ZM</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
	<CountryCurrency>
		<CountryName>Zimbabwe</CountryName>
		<ISO3166CountryCode2>ZW</ISO3166CountryCode2>
		<Currency>
			<CurrencyName>United States Dollar</CurrencyName>
			<CurrencyCode>USD</CurrencyCode>
		</Currency>
		<Currency>
			<CurrencyName>European Euro</CurrencyName>
			<CurrencyCode>EUR</CurrencyCode>
		</Currency>
	</CountryCurrency>
</CountryCurrencyMapping>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\Domain_Data\CountryDefaultCurrency.xml ===
<CountryDefaultCurrencyList>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AD</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AL</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AQ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AS</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AT</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AU</ISO3166CountryCode2>
		<DefaultCurrencyCode>AUD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>AZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BB</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BD</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BE</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BF</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BJ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BS</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>BZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CA</ISO3166CountryCode2>
		<DefaultCurrencyCode>CAD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CD</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CF</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CH</ISO3166CountryCode2>
		<DefaultCurrencyCode>CHF</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CL</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CV</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CX</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>CZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>DE</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>DJ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>DK</ISO3166CountryCode2>
		<DefaultCurrencyCode>DKK</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>DM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>DO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>DZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>EC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>EE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>EG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ER</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ES</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ET</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>FI</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>FJ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>FK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>FM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>FO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>FR</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GB</ISO3166CountryCode2>
		<DefaultCurrencyCode>GBP</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GD</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GF</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GL</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GP</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GQ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GR</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>GY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>HK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>HN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>HR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>HT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>HU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ID</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>IE</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>IL</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>IN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>IS</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>IT</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>JM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>JO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>JP</ISO3166CountryCode2>
		<DefaultCurrencyCode>JPY</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KR</ISO3166CountryCode2>
		<DefaultCurrencyCode>KRW</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>KZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LB</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LI</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LS</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LU</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>LV</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MC</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MD</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ML</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MP</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MQ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MS</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MV</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MX</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>MZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NF</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NL</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NO</ISO3166CountryCode2>
		<DefaultCurrencyCode>NOK</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NP</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>NZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>NZD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>OM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PF</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PL</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PT</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>PY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>QA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>RE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>RO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>RU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>RW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SB</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SE</ISO3166CountryCode2>
		<DefaultCurrencyCode>SEK</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SL</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SM</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ST</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SV</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>SZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TD</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TH</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TJ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TK</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TO</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TP</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TR</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TV</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TW</ISO3166CountryCode2>
		<DefaultCurrencyCode>TWD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>TZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>UA</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>UG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>US</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>UY</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>UZ</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VA</ISO3166CountryCode2>
		<DefaultCurrencyCode>EUR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VC</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VG</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VI</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VN</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>VU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>WF</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>WS</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>YE</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>YT</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>YU</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ZA</ISO3166CountryCode2>
		<DefaultCurrencyCode>ZAR</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ZM</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
	<CountryDefaultCurrency>
		<ISO3166CountryCode2>ZW</ISO3166CountryCode2>
		<DefaultCurrencyCode>USD</DefaultCurrencyCode>
	</CountryDefaultCurrency>
</CountryDefaultCurrencyList>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\Domain_Data\SupportedCountries.xml ===
<CountryList>
	<CountryInfo CountryName="Albania" ISO3166CountryNum="8" ISO3166CountryCode2="AL" ISO3166CountryCode3="ALB"/>
	<CountryInfo CountryName="Algeria" ISO3166CountryNum="12" ISO3166CountryCode2="DZ" ISO3166CountryCode3="DZA"/>
	<CountryInfo CountryName="American Samoa" ISO3166CountryNum="16" ISO3166CountryCode2="AS" ISO3166CountryCode3="ASM"/>
	<CountryInfo CountryName="Andorra" ISO3166CountryNum="20" ISO3166CountryCode2="AD" ISO3166CountryCode3="AND"/>
	<CountryInfo CountryName="Angola" ISO3166CountryNum="24" ISO3166CountryCode2="AO" ISO3166CountryCode3="AGO"/>
	<CountryInfo CountryName="Anguilla" ISO3166CountryNum="660" ISO3166CountryCode2="AI" ISO3166CountryCode3="AIA"/>
	<CountryInfo CountryName="Antarctica" ISO3166CountryNum="10" ISO3166CountryCode2="AQ" ISO3166CountryCode3="ATA"/>
	<CountryInfo CountryName="Antigua and Barbuda" ISO3166CountryNum="28" ISO3166CountryCode2="AG" ISO3166CountryCode3="ATG"/>
	<CountryInfo CountryName="Argentina" ISO3166CountryNum="32" ISO3166CountryCode2="AR" ISO3166CountryCode3="ARG"/>
	<CountryInfo CountryName="Armenia" ISO3166CountryNum="51" ISO3166CountryCode2="AM" ISO3166CountryCode3="ARM"/>
	<CountryInfo CountryName="Aruba" ISO3166CountryNum="533" ISO3166CountryCode2="AW" ISO3166CountryCode3="ABW"/>
	<CountryInfo CountryName="Australia" ISO3166CountryNum="36" ISO3166CountryCode2="AU" ISO3166CountryCode3="AUS"/>
	<CountryInfo CountryName="Austria" ISO3166CountryNum="40" ISO3166CountryCode2="AT" ISO3166CountryCode3="AUT"/>
	<CountryInfo CountryName="Azerbaijan" ISO3166CountryNum="31" ISO3166CountryCode2="AZ" ISO3166CountryCode3="AZE"/>
	<CountryInfo CountryName="Bahamas, The" ISO3166CountryNum="44" ISO3166CountryCode2="BS" ISO3166CountryCode3="BHS"/>
	<CountryInfo CountryName="Bahrain" ISO3166CountryNum="48" ISO3166CountryCode2="BH" ISO3166CountryCode3="BHR"/>
	<CountryInfo CountryName="Bangladesh" ISO3166CountryNum="50" ISO3166CountryCode2="BD" ISO3166CountryCode3="BGD"/>
	<CountryInfo CountryName="Barbados" ISO3166CountryNum="52" ISO3166CountryCode2="BB" ISO3166CountryCode3="BRB"/>
	<CountryInfo CountryName="Belarus" ISO3166CountryNum="112" ISO3166CountryCode2="BY" ISO3166CountryCode3="BLR"/>
	<CountryInfo CountryName="Belgium" ISO3166CountryNum="56" ISO3166CountryCode2="BE" ISO3166CountryCode3="BEL"/>
	<CountryInfo CountryName="Belize" ISO3166CountryNum="84" ISO3166CountryCode2="BZ" ISO3166CountryCode3="BLZ"/>
	<CountryInfo CountryName="Benin" ISO3166CountryNum="204" ISO3166CountryCode2="BJ" ISO3166CountryCode3="BEN"/>
	<CountryInfo CountryName="Bermuda" ISO3166CountryNum="60" ISO3166CountryCode2="BM" ISO3166CountryCode3="BMU"/>
	<CountryInfo CountryName="Bhutan" ISO3166CountryNum="64" ISO3166CountryCode2="BT" ISO3166CountryCode3="BTN"/>
	<CountryInfo CountryName="Bolivia" ISO3166CountryNum="68" ISO3166CountryCode2="BO" ISO3166CountryCode3="BOL"/>
	<CountryInfo CountryName="Bosnia and Herzegovina" ISO3166CountryNum="70" ISO3166CountryCode2="BA" ISO3166CountryCode3="BIH"/>
	<CountryInfo CountryName="Botswana" ISO3166CountryNum="72" ISO3166CountryCode2="BW" ISO3166CountryCode3="BWA"/>
	<CountryInfo CountryName="Brazil" ISO3166CountryNum="76" ISO3166CountryCode2="BR" ISO3166CountryCode3="BRA"/>
	<CountryInfo CountryName="Brunei" ISO3166CountryNum="96" ISO3166CountryCode2="BN" ISO3166CountryCode3="BRN"/>
	<CountryInfo CountryName="Bulgaria" ISO3166CountryNum="100" ISO3166CountryCode2="BG" ISO3166CountryCode3="BGR"/>
	<CountryInfo CountryName="Burkina Faso" ISO3166CountryNum="854" ISO3166CountryCode2="BF" ISO3166CountryCode3="BFA"/>
	<CountryInfo CountryName="Burundi" ISO3166CountryNum="108" ISO3166CountryCode2="BI" ISO3166CountryCode3="BDI"/>
	<CountryInfo CountryName="Cambodia" ISO3166CountryNum="116" ISO3166CountryCode2="KH" ISO3166CountryCode3="KHM"/>
	<CountryInfo CountryName="Cameroon" ISO3166CountryNum="120" ISO3166CountryCode2="CM" ISO3166CountryCode3="CMR"/>
	<CountryInfo CountryName="Canada" ISO3166CountryNum="124" ISO3166CountryCode2="CA" ISO3166CountryCode3="CAN"/>
	<CountryInfo CountryName="Cape Verde" ISO3166CountryNum="132" ISO3166CountryCode2="CV" ISO3166CountryCode3="CPV"/>
	<CountryInfo CountryName="Cayman Islands" ISO3166CountryNum="136" ISO3166CountryCode2="KY" ISO3166CountryCode3="CYM"/>
	<CountryInfo CountryName="Central African Republic" ISO3166CountryNum="140" ISO3166CountryCode2="CF" ISO3166CountryCode3="CAF"/>
	<CountryInfo CountryName="Chad" ISO3166CountryNum="148" ISO3166CountryCode2="TD" ISO3166CountryCode3="TCD"/>
	<CountryInfo CountryName="Chile" ISO3166CountryNum="152" ISO3166CountryCode2="CL" ISO3166CountryCode3="CHL"/>
	<CountryInfo CountryName="China" ISO3166CountryNum="156" ISO3166CountryCode2="CN" ISO3166CountryCode3="CHN"/>
	<CountryInfo CountryName="Christmas Island" ISO3166CountryNum="162" ISO3166CountryCode2="CX" ISO3166CountryCode3="CXR"/>
	<CountryInfo CountryName="Cocos (Keeling) Islands" ISO3166CountryNum="166" ISO3166CountryCode2="CC" ISO3166CountryCode3="CCK"/>
	<CountryInfo CountryName="Colombia" ISO3166CountryNum="170" ISO3166CountryCode2="CO" ISO3166CountryCode3="COL"/>
	<CountryInfo CountryName="Comoros" ISO3166CountryNum="174" ISO3166CountryCode2="KM" ISO3166CountryCode3="COM"/>
	<CountryInfo CountryName="Congo" ISO3166CountryNum="178" ISO3166CountryCode2="CG" ISO3166CountryCode3="COG"/>
	<CountryInfo CountryName="Congo (DRC)" ISO3166CountryNum="180" ISO3166CountryCode2="CD" ISO3166CountryCode3="ZAR"/>
	<CountryInfo CountryName="Cook Islands" ISO3166CountryNum="184" ISO3166CountryCode2="CK" ISO3166CountryCode3="COK"/>
	<CountryInfo CountryName="Costa Rica" ISO3166CountryNum="188" ISO3166CountryCode2="CR" ISO3166CountryCode3="CRI"/>
	<CountryInfo CountryName="Cote D'Ivoire" ISO3166CountryNum="384" ISO3166CountryCode2="CI" ISO3166CountryCode3="CIV"/>
	<CountryInfo CountryName="Croatia" ISO3166CountryNum="191" ISO3166CountryCode2="HR" ISO3166CountryCode3="HRV"/>
	<CountryInfo CountryName="Cyprus" ISO3166CountryNum="196" ISO3166CountryCode2="CY" ISO3166CountryCode3="CYP"/>
	<CountryInfo CountryName="Czech Republic" ISO3166CountryNum="203" ISO3166CountryCode2="CZ" ISO3166CountryCode3="CZE"/>
	<CountryInfo CountryName="Denmark" ISO3166CountryNum="208" ISO3166CountryCode2="DK" ISO3166CountryCode3="DNK"/>
	<CountryInfo CountryName="Djibouti" ISO3166CountryNum="262" ISO3166CountryCode2="DJ" ISO3166CountryCode3="DJI"/>
	<CountryInfo CountryName="Dominica" ISO3166CountryNum="212" ISO3166CountryCode2="DM" ISO3166CountryCode3="DMA"/>
	<CountryInfo CountryName="Dominican Republic" ISO3166CountryNum="214" ISO3166CountryCode2="DO" ISO3166CountryCode3="DOM"/>
	<CountryInfo CountryName="East Timor" ISO3166CountryNum="626" ISO3166CountryCode2="TP" ISO3166CountryCode3="TMP"/>
	<CountryInfo CountryName="Ecuador" ISO3166CountryNum="218" ISO3166CountryCode2="EC" ISO3166CountryCode3="ECU"/>
	<CountryInfo CountryName="Egypt" ISO3166CountryNum="818" ISO3166CountryCode2="EG" ISO3166CountryCode3="EGY"/>
	<CountryInfo CountryName="El Salvador" ISO3166CountryNum="222" ISO3166CountryCode2="SV" ISO3166CountryCode3="SLV"/>
	<CountryInfo CountryName="Equatorial Guinea" ISO3166CountryNum="226" ISO3166CountryCode2="GQ" ISO3166CountryCode3="GNQ"/>
	<CountryInfo CountryName="Eritrea" ISO3166CountryNum="232" ISO3166CountryCode2="ER" ISO3166CountryCode3="ERI"/>
	<CountryInfo CountryName="Estonia" ISO3166CountryNum="233" ISO3166CountryCode2="EE" ISO3166CountryCode3="EST"/>
	<CountryInfo CountryName="Ethiopia" ISO3166CountryNum="231" ISO3166CountryCode2="ET" ISO3166CountryCode3="ETH"/>
	<CountryInfo CountryName="Falkland Islands (Islas Malvinas)" ISO3166CountryNum="238" ISO3166CountryCode2="FK" ISO3166CountryCode3="FLK"/>
	<CountryInfo CountryName="Faroe Islands" ISO3166CountryNum="234" ISO3166CountryCode2="FO" ISO3166CountryCode3="FRO"/>
	<CountryInfo CountryName="Fiji Islands" ISO3166CountryNum="242" ISO3166CountryCode2="FJ" ISO3166CountryCode3="FJI"/>
	<CountryInfo CountryName="Finland" ISO3166CountryNum="246" ISO3166CountryCode2="FI" ISO3166CountryCode3="FIN"/>
	<CountryInfo CountryName="France" ISO3166CountryNum="250" ISO3166CountryCode2="FR" ISO3166CountryCode3="FRA"/>
	<CountryInfo CountryName="French Guiana" ISO3166CountryNum="254" ISO3166CountryCode2="GF" ISO3166CountryCode3="GUF"/>
	<CountryInfo CountryName="French Polynesia" ISO3166CountryNum="258" ISO3166CountryCode2="PF" ISO3166CountryCode3="PYF"/>
	<CountryInfo CountryName="Gabon" ISO3166CountryNum="266" ISO3166CountryCode2="GA" ISO3166CountryCode3="GAB"/>
	<CountryInfo CountryName="Gambia, The" ISO3166CountryNum="270" ISO3166CountryCode2="GM" ISO3166CountryCode3="GMB"/>
	<CountryInfo CountryName="Georgia" ISO3166CountryNum="268" ISO3166CountryCode2="GE" ISO3166CountryCode3="GEO"/>
	<CountryInfo CountryName="Germany" ISO3166CountryNum="276" ISO3166CountryCode2="DE" ISO3166CountryCode3="DEU"/>
	<CountryInfo CountryName="Ghana" ISO3166CountryNum="288" ISO3166CountryCode2="GH" ISO3166CountryCode3="GHA"/>
	<CountryInfo CountryName="Gibraltar" ISO3166CountryNum="292" ISO3166CountryCode2="GI" ISO3166CountryCode3="GIB"/>
	<CountryInfo CountryName="Greece" ISO3166CountryNum="300" ISO3166CountryCode2="GR" ISO3166CountryCode3="GRC"/>
	<CountryInfo CountryName="Greenland" ISO3166CountryNum="304" ISO3166CountryCode2="GL" ISO3166CountryCode3="GRL"/>
	<CountryInfo CountryName="Grenada" ISO3166CountryNum="308" ISO3166CountryCode2="GD" ISO3166CountryCode3="GRD"/>
	<CountryInfo CountryName="Guadeloupe" ISO3166CountryNum="312" ISO3166CountryCode2="GP" ISO3166CountryCode3="GLP"/>
	<CountryInfo CountryName="Guam" ISO3166CountryNum="316" ISO3166CountryCode2="GU" ISO3166CountryCode3="GUM"/>
	<CountryInfo CountryName="Guatemala" ISO3166CountryNum="320" ISO3166CountryCode2="GT" ISO3166CountryCode3="GTM"/>
	<CountryInfo CountryName="Guinea" ISO3166CountryNum="324" ISO3166CountryCode2="GN" ISO3166CountryCode3="GIN"/>
	<CountryInfo CountryName="Guinea-Bissau" ISO3166CountryNum="624" ISO3166CountryCode2="GW" ISO3166CountryCode3="GNB"/>
	<CountryInfo CountryName="Guyana" ISO3166CountryNum="328" ISO3166CountryCode2="GY" ISO3166CountryCode3="GUY"/>
	<CountryInfo CountryName="Haiti" ISO3166CountryNum="332" ISO3166CountryCode2="HT" ISO3166CountryCode3="HTI"/>
	<CountryInfo CountryName="Honduras" ISO3166CountryNum="340" ISO3166CountryCode2="HN" ISO3166CountryCode3="HND"/>
	<CountryInfo CountryName="Hong Kong SAR" ISO3166CountryNum="344" ISO3166CountryCode2="HK" ISO3166CountryCode3="HKG"/>
	<CountryInfo CountryName="Hungary" ISO3166CountryNum="348" ISO3166CountryCode2="HU" ISO3166CountryCode3="HUN"/>
	<CountryInfo CountryName="Iceland" ISO3166CountryNum="352" ISO3166CountryCode2="IS" ISO3166CountryCode3="ISL"/>
	<CountryInfo CountryName="India" ISO3166CountryNum="356" ISO3166CountryCode2="IN" ISO3166CountryCode3="IND"/>
	<CountryInfo CountryName="Indonesia" ISO3166CountryNum="360" ISO3166CountryCode2="ID" ISO3166CountryCode3="IDN"/>
	<CountryInfo CountryName="Ireland" ISO3166CountryNum="372" ISO3166CountryCode2="IE" ISO3166CountryCode3="IRL"/>
	<CountryInfo CountryName="Israel" ISO3166CountryNum="376" ISO3166CountryCode2="IL" ISO3166CountryCode3="ISR"/>
	<CountryInfo CountryName="Italy" ISO3166CountryNum="380" ISO3166CountryCode2="IT" ISO3166CountryCode3="ITA"/>
	<CountryInfo CountryName="Jamaica" ISO3166CountryNum="388" ISO3166CountryCode2="JM" ISO3166CountryCode3="JAM"/>
	<CountryInfo CountryName="Japan" ISO3166CountryNum="392" ISO3166CountryCode2="JP" ISO3166CountryCode3="JPN"/>
	<CountryInfo CountryName="Jordan" ISO3166CountryNum="400" ISO3166CountryCode2="JO" ISO3166CountryCode3="JOR"/>
	<CountryInfo CountryName="Kazakhstan" ISO3166CountryNum="398" ISO3166CountryCode2="KZ" ISO3166CountryCode3="KAZ"/>
	<CountryInfo CountryName="Kenya" ISO3166CountryNum="404" ISO3166CountryCode2="KE" ISO3166CountryCode3="KEN"/>
	<CountryInfo CountryName="Kiribati" ISO3166CountryNum="296" ISO3166CountryCode2="KI" ISO3166CountryCode3="KIR"/>
	<CountryInfo CountryName="Korea" ISO3166CountryNum="410" ISO3166CountryCode2="KR" ISO3166CountryCode3="KOR"/>
	<CountryInfo CountryName="Kuwait" ISO3166CountryNum="414" ISO3166CountryCode2="KW" ISO3166CountryCode3="KWT"/>
	<CountryInfo CountryName="Kyrgyzstan" ISO3166CountryNum="417" ISO3166CountryCode2="KG" ISO3166CountryCode3="KGZ"/>
	<CountryInfo CountryName="Laos" ISO3166CountryNum="418" ISO3166CountryCode2="LA" ISO3166CountryCode3="LAO"/>
	<CountryInfo CountryName="Latvia" ISO3166CountryNum="428" ISO3166CountryCode2="LV" ISO3166CountryCode3="LVA"/>
	<CountryInfo CountryName="Lebanon" ISO3166CountryNum="422" ISO3166CountryCode2="LB" ISO3166CountryCode3="LBN"/>
	<CountryInfo CountryName="Lesotho" ISO3166CountryNum="426" ISO3166CountryCode2="LS" ISO3166CountryCode3="LSO"/>
	<CountryInfo CountryName="Liberia" ISO3166CountryNum="430" ISO3166CountryCode2="LR" ISO3166CountryCode3="LBR"/>
	<CountryInfo CountryName="Liechtenstein" ISO3166CountryNum="438" ISO3166CountryCode2="LI" ISO3166CountryCode3="LIE"/>
	<CountryInfo CountryName="Lithuania" ISO3166CountryNum="440" ISO3166CountryCode2="LT" ISO3166CountryCode3="LTU"/>
	<CountryInfo CountryName="Luxembourg" ISO3166CountryNum="442" ISO3166CountryCode2="LU" ISO3166CountryCode3="LUX"/>
	<CountryInfo CountryName="Macau SAR" ISO3166CountryNum="446" ISO3166CountryCode2="MO" ISO3166CountryCode3="MAC"/>
	<CountryInfo CountryName="Macedonia, Former Yugoslav Republic of" ISO3166CountryNum="807" ISO3166CountryCode2="MK" ISO3166CountryCode3="MKD"/>
	<CountryInfo CountryName="Madagascar" ISO3166CountryNum="450" ISO3166CountryCode2="MG" ISO3166CountryCode3="MDG"/>
	<CountryInfo CountryName="Malawi" ISO3166CountryNum="454" ISO3166CountryCode2="MW" ISO3166CountryCode3="MWI"/>
	<CountryInfo CountryName="Malaysia" ISO3166CountryNum="458" ISO3166CountryCode2="MY" ISO3166CountryCode3="MYS"/>
	<CountryInfo CountryName="Maldives" ISO3166CountryNum="462" ISO3166CountryCode2="MV" ISO3166CountryCode3="MDV"/>
	<CountryInfo CountryName="Mali" ISO3166CountryNum="466" ISO3166CountryCode2="ML" ISO3166CountryCode3="MLI"/>
	<CountryInfo CountryName="Malta" ISO3166CountryNum="470" ISO3166CountryCode2="MT" ISO3166CountryCode3="MLT"/>
	<CountryInfo CountryName="Marshall Islands" ISO3166CountryNum="584" ISO3166CountryCode2="MH" ISO3166CountryCode3="MHL"/>
	<CountryInfo CountryName="Martinique" ISO3166CountryNum="474" ISO3166CountryCode2="MQ" ISO3166CountryCode3="MTQ"/>
	<CountryInfo CountryName="Mauritania" ISO3166CountryNum="478" ISO3166CountryCode2="MR" ISO3166CountryCode3="MRT"/>
	<CountryInfo CountryName="Mauritius" ISO3166CountryNum="480" ISO3166CountryCode2="MU" ISO3166CountryCode3="MUS"/>
	<CountryInfo CountryName="Mayotte" ISO3166CountryNum="175" ISO3166CountryCode2="YT" ISO3166CountryCode3="MYT"/>
	<CountryInfo CountryName="Mexico" ISO3166CountryNum="484" ISO3166CountryCode2="MX" ISO3166CountryCode3="MEX"/>
	<CountryInfo CountryName="Micronesia" ISO3166CountryNum="583" ISO3166CountryCode2="FM" ISO3166CountryCode3="FSM"/>
	<CountryInfo CountryName="Moldova" ISO3166CountryNum="498" ISO3166CountryCode2="MD" ISO3166CountryCode3="MDA"/>
	<CountryInfo CountryName="Monaco" ISO3166CountryNum="492" ISO3166CountryCode2="MC" ISO3166CountryCode3="MCO"/>
	<CountryInfo CountryName="Mongolia" ISO3166CountryNum="496" ISO3166CountryCode2="MN" ISO3166CountryCode3="MNG"/>
	<CountryInfo CountryName="Montserrat" ISO3166CountryNum="500" ISO3166CountryCode2="MS" ISO3166CountryCode3="MSR"/>
	<CountryInfo CountryName="Morocco" ISO3166CountryNum="504" ISO3166CountryCode2="MA" ISO3166CountryCode3="MAR"/>
	<CountryInfo CountryName="Mozambique" ISO3166CountryNum="508" ISO3166CountryCode2="MZ" ISO3166CountryCode3="MOZ"/>
	<CountryInfo CountryName="Myanmar" ISO3166CountryNum="104" ISO3166CountryCode2="MM" ISO3166CountryCode3="MMR"/>
	<CountryInfo CountryName="Namibia" ISO3166CountryNum="516" ISO3166CountryCode2="NA" ISO3166CountryCode3="NAM"/>
	<CountryInfo CountryName="Nauru" ISO3166CountryNum="520" ISO3166CountryCode2="NR" ISO3166CountryCode3="NRU"/>
	<CountryInfo CountryName="Nepal" ISO3166CountryNum="524" ISO3166CountryCode2="NP" ISO3166CountryCode3="NPL"/>
	<CountryInfo CountryName="Netherlands Antilles" ISO3166CountryNum="530" ISO3166CountryCode2="AN" ISO3166CountryCode3="ANT"/>
	<CountryInfo CountryName="Netherlands, The" ISO3166CountryNum="528" ISO3166CountryCode2="NL" ISO3166CountryCode3="NLD"/>
	<CountryInfo CountryName="New Caledonia" ISO3166CountryNum="540" ISO3166CountryCode2="NC" ISO3166CountryCode3="NCL"/>
	<CountryInfo CountryName="New Zealand" ISO3166CountryNum="554" ISO3166CountryCode2="NZ" ISO3166CountryCode3="NZL"/>
	<CountryInfo CountryName="Nicaragua" ISO3166CountryNum="558" ISO3166CountryCode2="NI" ISO3166CountryCode3="NIC"/>
	<CountryInfo CountryName="Niger" ISO3166CountryNum="562" ISO3166CountryCode2="NE" ISO3166CountryCode3="NER"/>
	<CountryInfo CountryName="Nigeria" ISO3166CountryNum="566" ISO3166CountryCode2="NG" ISO3166CountryCode3="NGA"/>
	<CountryInfo CountryName="Niue" ISO3166CountryNum="570" ISO3166CountryCode2="NU" ISO3166CountryCode3="NIU"/>
	<CountryInfo CountryName="Norfolk Island" ISO3166CountryNum="574" ISO3166CountryCode2="NF" ISO3166CountryCode3="NFK"/>
	<CountryInfo CountryName="Northern Mariana Islands" ISO3166CountryNum="580" ISO3166CountryCode2="MP" ISO3166CountryCode3="MNP"/>
	<CountryInfo CountryName="Norway" ISO3166CountryNum="578" ISO3166CountryCode2="NO" ISO3166CountryCode3="NOR"/>
	<CountryInfo CountryName="Oman" ISO3166CountryNum="512" ISO3166CountryCode2="OM" ISO3166CountryCode3="OMN"/>
	<CountryInfo CountryName="Pakistan" ISO3166CountryNum="586" ISO3166CountryCode2="PK" ISO3166CountryCode3="PAK"/>
	<CountryInfo CountryName="Palau" ISO3166CountryNum="585" ISO3166CountryCode2="PW" ISO3166CountryCode3="PLW"/>
	<CountryInfo CountryName="Panama" ISO3166CountryNum="591" ISO3166CountryCode2="PA" ISO3166CountryCode3="PAN"/>
	<CountryInfo CountryName="Papua New Guinea" ISO3166CountryNum="598" ISO3166CountryCode2="PG" ISO3166CountryCode3="PNG"/>
	<CountryInfo CountryName="Paraguay" ISO3166CountryNum="600" ISO3166CountryCode2="PY" ISO3166CountryCode3="PRY"/>
	<CountryInfo CountryName="Peru" ISO3166CountryNum="604" ISO3166CountryCode2="PE" ISO3166CountryCode3="PER"/>
	<CountryInfo CountryName="Philippines" ISO3166CountryNum="608" ISO3166CountryCode2="PH" ISO3166CountryCode3="PHL"/>
	<CountryInfo CountryName="Pitcairn Islands" ISO3166CountryNum="612" ISO3166CountryCode2="PN" ISO3166CountryCode3="PCN"/>
	<CountryInfo CountryName="Poland" ISO3166CountryNum="616" ISO3166CountryCode2="PL" ISO3166CountryCode3="POL"/>
	<CountryInfo CountryName="Portugal" ISO3166CountryNum="620" ISO3166CountryCode2="PT" ISO3166CountryCode3="PRT"/>
	<CountryInfo CountryName="Puerto Rico" ISO3166CountryNum="630" ISO3166CountryCode2="PR" ISO3166CountryCode3="PRI"/>
	<CountryInfo CountryName="Qatar" ISO3166CountryNum="634" ISO3166CountryCode2="QA" ISO3166CountryCode3="QAT"/>
	<CountryInfo CountryName="Reunion" ISO3166CountryNum="638" ISO3166CountryCode2="RE" ISO3166CountryCode3="REU"/>
	<CountryInfo CountryName="Romania" ISO3166CountryNum="642" ISO3166CountryCode2="RO" ISO3166CountryCode3="ROM"/>
	<CountryInfo CountryName="Russia" ISO3166CountryNum="643" ISO3166CountryCode2="RU" ISO3166CountryCode3="RUS"/>
	<CountryInfo CountryName="Rwanda" ISO3166CountryNum="646" ISO3166CountryCode2="RW" ISO3166CountryCode3="RWA"/>
	<CountryInfo CountryName="Samoa" ISO3166CountryNum="882" ISO3166CountryCode2="WS" ISO3166CountryCode3="WSM"/>
	<CountryInfo CountryName="San Marino" ISO3166CountryNum="674" ISO3166CountryCode2="SM" ISO3166CountryCode3="SMR"/>
	<CountryInfo CountryName="Sao Tome and Principe" ISO3166CountryNum="678" ISO3166CountryCode2="ST" ISO3166CountryCode3="STP"/>
	<CountryInfo CountryName="Saudi Arabia" ISO3166CountryNum="682" ISO3166CountryCode2="SA" ISO3166CountryCode3="SAU"/>
	<CountryInfo CountryName="Senegal" ISO3166CountryNum="686" ISO3166CountryCode2="SN" ISO3166CountryCode3="SEM"/>
	<CountryInfo CountryName="Seychelles" ISO3166CountryNum="690" ISO3166CountryCode2="SC" ISO3166CountryCode3="SYC"/>
	<CountryInfo CountryName="Sierra Leone" ISO3166CountryNum="694" ISO3166CountryCode2="SL" ISO3166CountryCode3="SLE"/>
	<CountryInfo CountryName="Singapore" ISO3166CountryNum="702" ISO3166CountryCode2="SG" ISO3166CountryCode3="SGP"/>
	<CountryInfo CountryName="Slovakia" ISO3166CountryNum="703" ISO3166CountryCode2="SK" ISO3166CountryCode3="SVK"/>
	<CountryInfo CountryName="Slovenia" ISO3166CountryNum="705" ISO3166CountryCode2="SI" ISO3166CountryCode3="SVN"/>
	<CountryInfo CountryName="Solomon Islands" ISO3166CountryNum="90" ISO3166CountryCode2="SB" ISO3166CountryCode3="SLB"/>
	<CountryInfo CountryName="Somalia" ISO3166CountryNum="706" ISO3166CountryCode2="SO" ISO3166CountryCode3="SLM"/>
	<CountryInfo CountryName="South Africa" ISO3166CountryNum="710" ISO3166CountryCode2="ZA" ISO3166CountryCode3="ZAF"/>
	<CountryInfo CountryName="Spain" ISO3166CountryNum="724" ISO3166CountryCode2="ES" ISO3166CountryCode3="ESP"/>
	<CountryInfo CountryName="Sri Lanka" ISO3166CountryNum="144" ISO3166CountryCode2="LK" ISO3166CountryCode3="LKA"/>
	<CountryInfo CountryName="St. Helena" ISO3166CountryNum="654" ISO3166CountryCode2="SH" ISO3166CountryCode3="SHN"/>
	<CountryInfo CountryName="St. Kitts and Nevis" ISO3166CountryNum="659" ISO3166CountryCode2="KN" ISO3166CountryCode3="KNA"/>
	<CountryInfo CountryName="St. Lucia" ISO3166CountryNum="662" ISO3166CountryCode2="LC" ISO3166CountryCode3="LCA"/>
	<CountryInfo CountryName="St. Pierre and Miquelon" ISO3166CountryNum="666" ISO3166CountryCode2="PM" ISO3166CountryCode3="SPM"/>
	<CountryInfo CountryName="St. Vincent and the Grenadines" ISO3166CountryNum="670" ISO3166CountryCode2="VC" ISO3166CountryCode3="VCT"/>
	<CountryInfo CountryName="Suriname" ISO3166CountryNum="740" ISO3166CountryCode2="SR" ISO3166CountryCode3="SUR"/>
	<CountryInfo CountryName="Swaziland" ISO3166CountryNum="748" ISO3166CountryCode2="SZ" ISO3166CountryCode3="SWZ"/>
	<CountryInfo CountryName="Sweden" ISO3166CountryNum="752" ISO3166CountryCode2="SE" ISO3166CountryCode3="SWE"/>
	<CountryInfo CountryName="Switzerland" ISO3166CountryNum="756" ISO3166CountryCode2="CH" ISO3166CountryCode3="CHE"/>
	<CountryInfo CountryName="Taiwan" ISO3166CountryNum="158" ISO3166CountryCode2="TW" ISO3166CountryCode3="TWN"/>
	<CountryInfo CountryName="Tajikistan" ISO3166CountryNum="762" ISO3166CountryCode2="TJ" ISO3166CountryCode3="TJK"/>
	<CountryInfo CountryName="Tanzania" ISO3166CountryNum="834" ISO3166CountryCode2="TZ" ISO3166CountryCode3="TZA"/>
	<CountryInfo CountryName="Thailand" ISO3166CountryNum="764" ISO3166CountryCode2="TH" ISO3166CountryCode3="THA"/>
	<CountryInfo CountryName="Togo" ISO3166CountryNum="768" ISO3166CountryCode2="TG" ISO3166CountryCode3="TGO"/>
	<CountryInfo CountryName="Tokelau" ISO3166CountryNum="772" ISO3166CountryCode2="TK" ISO3166CountryCode3="TKL"/>
	<CountryInfo CountryName="Tonga" ISO3166CountryNum="776" ISO3166CountryCode2="TO" ISO3166CountryCode3="TON"/>
	<CountryInfo CountryName="Trinidad and Tobago" ISO3166CountryNum="780" ISO3166CountryCode2="TT" ISO3166CountryCode3="TTO"/>
	<CountryInfo CountryName="Tunisia" ISO3166CountryNum="788" ISO3166CountryCode2="TN" ISO3166CountryCode3="TUN"/>
	<CountryInfo CountryName="Turkey" ISO3166CountryNum="792" ISO3166CountryCode2="TR" ISO3166CountryCode3="TUR"/>
	<CountryInfo CountryName="Turkmenistan" ISO3166CountryNum="795" ISO3166CountryCode2="TM" ISO3166CountryCode3="TKM"/>
	<CountryInfo CountryName="Turks and Caicos Islands" ISO3166CountryNum="796" ISO3166CountryCode2="TC" ISO3166CountryCode3="TCA"/>
	<CountryInfo CountryName="Tuvalu" ISO3166CountryNum="798" ISO3166CountryCode2="TV" ISO3166CountryCode3="TUV"/>
	<CountryInfo CountryName="Uganda" ISO3166CountryNum="800" ISO3166CountryCode2="UG" ISO3166CountryCode3="UGA"/>
	<CountryInfo CountryName="Ukraine" ISO3166CountryNum="804" ISO3166CountryCode2="UA" ISO3166CountryCode3="UKR"/>
	<CountryInfo CountryName="United Arab Emirates" ISO3166CountryNum="784" ISO3166CountryCode2="AE" ISO3166CountryCode3="ARE"/>
	<CountryInfo CountryName="United Kingdom" ISO3166CountryNum="826" ISO3166CountryCode2="GB" ISO3166CountryCode3="GBR"/>
	<CountryInfo CountryName="United States" ISO3166CountryNum="840" ISO3166CountryCode2="US" ISO3166CountryCode3="USA"/>
	<CountryInfo CountryName="Uruguay" ISO3166CountryNum="858" ISO3166CountryCode2="UY" ISO3166CountryCode3="URY"/>
	<CountryInfo CountryName="Uzbekistan" ISO3166CountryNum="860" ISO3166CountryCode2="UZ" ISO3166CountryCode3="UZB"/>
	<CountryInfo CountryName="Vanuatu" ISO3166CountryNum="548" ISO3166CountryCode2="VU" ISO3166CountryCode3="VUT"/>
	<CountryInfo CountryName="Vatican City" ISO3166CountryNum="336" ISO3166CountryCode2="VA" ISO3166CountryCode3="VAT"/>
	<CountryInfo CountryName="Venezuela" ISO3166CountryNum="862" ISO3166CountryCode2="VE" ISO3166CountryCode3="VEN"/>
	<CountryInfo CountryName="Vietnam" ISO3166CountryNum="704" ISO3166CountryCode2="VN" ISO3166CountryCode3="VNM"/>
	<CountryInfo CountryName="Virgin Islands" ISO3166CountryNum="850" ISO3166CountryCode2="VI" ISO3166CountryCode3="VIR"/>
	<CountryInfo CountryName="Virgin Islands, British" ISO3166CountryNum="92" ISO3166CountryCode2="VG" ISO3166CountryCode3="VGB"/>
	<CountryInfo CountryName="Wallis and Futuna" ISO3166CountryNum="876" ISO3166CountryCode2="WF" ISO3166CountryCode3="WLF"/>
	<CountryInfo CountryName="Yemen" ISO3166CountryNum="887" ISO3166CountryCode2="YE" ISO3166CountryCode3="YEM"/>
	<CountryInfo CountryName="Yugoslavia" ISO3166CountryNum="891" ISO3166CountryCode2="YU" ISO3166CountryCode3="YUG"/>
	<CountryInfo CountryName="Zambia" ISO3166CountryNum="894" ISO3166CountryCode2="ZM" ISO3166CountryCode3="ZMB"/>
	<CountryInfo CountryName="Zimbabwe" ISO3166CountryNum="716" ISO3166CountryCode2="ZW" ISO3166CountryCode3="ZWE"/>
</CountryList>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\samples\Subscription_Platform_API\ASP.Net\SPKTenantDemo\ReadMe.txt ===
ReadMe.txt (SPKTenantDemo, ASP.Net Version)

Contents
--------
Overview
Prerequisites
Accessing the ASP demo
Code Samples


Overview
--------
SPKTenantDemo is an ASP.Net demo that tenants can use to understand how the Partner Side Object (PSO) communicates with Subscription Platform Service (SPS).


Prerequisites
-------------
Before you run the demo:

1. Verify that the PSO is already installed. If it is not, re-run SPK.msi as a complete install.

2. Verify that you have a working test connection to SPS. For instructions on setting up a test connection, see "Getting Connected" in the SPK documentation (SPK.chm).


Accessing the Demo
------------------
To access the demo from Windows:

1. Click Start, then Programs, and then Microsoft Subscription Platform. 
2. From the shortcut menu, choose ASP Net Demo.


Code Samples
------------
The demo contains the following files that use PSO objects to manipulate information. These files are located in \Program Files\Microsoft Subscription Platform\samples\Subscription_Platform_API\ASP.Net\SPKTenantDemo.

bdk.cs
File generated using WSDL.exe on bdk.wsdl. It exposes all the API methods from bdk.wsdl as a class on C#.

BDKProvider.cs
Class derived from bdk, the SOAP object used to make all PSO calls. It has a static PSOConnector object that is initialized for all objects and gets the URL and username/password for connections.

BillingInfo.aspx.cs
Creates a customer account with the specified account/billing information.

CancelSubscription.aspx.cs
Cancels the selected subscription.

GetBaseOfferings.aspx.cs
Gets all available offerings for category "Free Trial".

GetEligibleOfferings.aspx.cs
Gets all offerings for category "Free Trial" that the customer is eligible for.

Global.asax.cs
Initializes the static PSOConnector object for the application and creates a session-based PSO object.

PurchaseOfferings.aspx.cs
Purchases an offering that the customer has selected.

UpdateAccountInfo.aspx.cs
Updates account information for the specified account.

UpdateBillingInfo.aspx.cs
Updates billing information for the specified account and payment instrument.

UpsAuthZ.aspx.cs
Gets User Profile Store (UPS) information for the customer.

UseServices.aspx.cs
Gets permits for the selected subscription.

ViewAccountId.aspx.cs
Gets all accounts for the specified customer.

ViewAccountInfo.aspx.cs
Shows account information for the specified account ID.

ViewPayInstruInfo.aspx.cs
Shows information for the specified payment instrument.

ViewSubscriptions.aspx.cs
Gets all subscriptions for the specified account.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\samples\Subscription_Platform_API\ASP\SPKTenantDemo\ReadMe.txt ===
ReadMe.txt (SPKTenantDemo, ASP Version)


Contents
--------
Overview
Prerequisites
Accessing the Demo
Code Samples


Overview
--------
SPKTenantDemo is an ASP demo that tenants can use to understand how the Partner Side Object (PSO) communicates with Subscription Platform Service (SPS).


Prerequisites
-------------
Before you run the demo:

1. Verify that the PSO is already installed. If it is not, re-run SPK.msi as a complete install.

2. Verify that you have a working test connection to SPS. For instructions on setting up a test connection, see "Getting Connected" in the SPK documentation (SPK.chm).


Accessing the Demo
------------------
To access the demo from Windows:

1. Click Start, then Programs, and then Microsoft Subscription Platform. 
2. From the shortcut menu, choose ASP Demo.


Code Samples
------------
The demo contains the following files that use PSO objects to manipulate information. These files are located in \Program Files\Microsoft Subscription Platform\samples\Subscription_Platform_API\ASP\SPKTenantDemo.

callPurchaseOfferings.asp
Purchases an offering that the customer has selected.

CancelSubscription.asp
Cancels the selected subscription.

CreateAccount.asp
Creates an account and assigns it a credit card payment instrument.

GetEligibleOfferings.asp
Gets all offerings for category "Free Trial" that the specified customer is eligible for.

Global.asa
Initializes the global PSOConnector object.

TestConnectionVersion.asp
Calls the test connection API and gets the version of the PSO.

UpdateAccountInfofromXML.asp
Updates account contact information.

UpdateBillingInfoFromXML.asp
Updates the customer's billing information.

UpsAuthZ.asp
Gets user information from User Profile Store (UPS).

UseServices.asp
Gets permits for the selected subscription.

ViewAccountID.asp
Gets the account ID for the specified PUID.

ViewAccountInfo.asp
Gets account information for the specified account ID.

ViewGetBaseOfferings.asp
Gets all available offerings for category "Free Trial".

ViewPaymentInstruInfo.asp
Gets payment instrument information.

ViewSubscriptions.asp
Gets all subscriptions for the specified account.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\samples\Subscription_Platform_API\VBScript\ReadMe.txt ===
ReadMe.txt (VBScript Demo)

Contents
--------
Overview
Prerequisites
Code Samples


Overview
--------
The Subscription Platform Kit (SPK) contains VBScript files that tenants can use to understand how the Partner Side Object (PSO) communicates with SUbscription Platform Service (SPS). The files described in this file are located in \Program Files\Microsoft Subscription Platform\samples\Subscription_Platform_API\VBScript.


Prerequisites
-------------
Before you execute any scripts:

1. Verify that the PSO is already installed. If it is not, re-run SPK.msi as a complete install.

2. Verify that you have a working test connection to SPS by running TestConnection.vbs. For detailed instructions on setting up a test connection, see "Getting Connected" in the SPK documentation (SPK.chm).


Code Samples
------------
The following scripts call the indicated methods in the Subscription Platform API. Execute the following scripts in the order listed. Dependencies between files are documented in the respective files. For more information on the API methods, see SPK.chm.

TestConnection.vbs
Establishes a connection to SPS.

PsoEncrypter-GenerateGUID.vbs
Demonstrates how the PSOEncrypter object generates GUIDs.

PsoEncrypter-Provider.vbs
Displays the cryptographic service provider for PSOEncrypter.

CreateAccount.vbs 
Calls CreateAccount to create an account. The program reads CreateAccountInput.xml and sends output to CreateAccountOutput.xml.

GetAccountIDFromAdminPUID.vbs
Calls GetAccountIDFromAdminPUID to retrieve the account IDs associated with a customer PUID. This program reads PUIDs from CreateAccountInput.xml and sends output to GetAccountIDFromAdminPUIDOutput.xml.

GetAccountInfo.vbs
Calls GetAccountInfo to retrieve account information for the specified customer PUID and account ID. This program reads CreateAccountInput.xml and CreateAccountOutput.xml and sends output to GetAccountInfoOutput.xml.

GetBaseOfferings.vbs
Calls GetBaseOfferings to retrieve the available base offerings for the specified category. The default category is "MSN IA", but the user can change this. The program sends output to GetBaseOfferingsOutput.xml.

GetPaymentInstruments.vbs
Calls GetPaymentInstruments to retrieve billing information for the specified customer PUID and account ID. This program reads CreateAccountInput.xml and CreateAccountOutput.xml and sends output to GetPaymentInstrumentsOutput.xml.

PurchaseOffering.vbs
Calls PurchaseOffering to purchase an offering for the specified account. This program reads CreateAccountInput.xml, CreateAccountOutput.xml, and GetBaseOfferingsOutput.xml and sends output to PurchaseOfferingsOutput.xml.

ProvisionServices.vbs
Calls ProvisionServices to provision services for the specified account and subscription. This program reads CreateAccountInput.xml, CreateAccountOutput.xml, and PurchaseOfferingOutput.xml. It does not generate an output file, only a success/error message.

GetSubscriptions.vbs
Calls GetSubscriptions to retrieve information on all subscriptions associated with the specified PUID and account ID. This program reads CreateAccountInput.xml and CreateAccountOutput.xml and sends output to GetSubscriptionsOutput.xml.

GetPermitsForObjectID.vbs
Calls GetPermitsForObjectId to retrieve the permit for the specified account ID and service instance ID. This program reads CreateAccountInput.xml, CreateAccountOutput.xml and PurchaseOfferingOutput.xml and sends output to GetPermitsForObjectIdOutput.xml

GetPermitsForPUID.vbs
Calls GetPermitsForPUID to get the permit for the specified customer PUID. This program reads CreateAccountInput.xml and sends output to GetPermitsForPUIDOutput.xml.

UpdateAccountInfo.vbs
Calls UpdateAccountInfo to update account information. This program reads CreateAccountInput.xml and UpdateAccountInfoInput.xml. It does not generate an output file, only a success/error message.

UpdatePaymentInstrumentInfo.vbs
Calls UpdatePaymentInstrument to update the customer's payment information. This program reads CreateAccountInput.xml and UpdatePaymentInstrumentInfoInput.xml. 

CancelSubscription.vbs
Calls CancelSubscription to cancel a customer's subscription. This program reads CreateAccountInput.xml, CreateAccountOutput.xml, and PurchaseOfferingOutput.xml. It does not generate an output file, only a success/error message.

AddRoleAssignment.vbs (optional)
Calls AddRoleAssignment to add a user role to the account. This program reads CreateAccountInput.xml and CreateAccountOutput.xml. It does not generate an output file, only a success/error message. Running this program is optional because the earlier ProvisionServices call already added a role assignment.  

UpsSample.vbs
Retrieves information from the specified customer's User Profile Store (UPS) object.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\samples\Subscription_Platform_API\VBScript\UpdateAccountInfoInput.xml ===
<AccountInfo xmlns="urn:schemas-microsoft-com:billing-data">
  <FriendlyName>Account Update Friendly</FriendlyName> 
  <FirstName>Another</FirstName> 
  <LastName>Person</LastName> 
  <Email>AnotherPerson@SomeWhere.com</Email> 
  <CompanyName>XYZ Corporation</CompanyName> 
  <Locale>en-US</Locale> 
  <Currency>USD</Currency> 
 <AddressInfoSet>
 <AddressInfo>
  <FriendlyName>PRIMARY</FriendlyName> 
  <Street1>Two XYZ Pl</Street1> 
  <Street2>Rm 3</Street2> 
  <City>Seattle</City> 
  <State>WA</State> 
  <CountryCode>US</CountryCode> 
  <PostalCode>98115</PostalCode> 
  </AddressInfo>
 </AddressInfoSet>
  </AccountInfo>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\samples\Subscription_Platform_API\VBScript\CreateAccountInput.xml ===
<UserInfo xmlns="urn:schemas-microsoft-com:billing-data">
  <IDelegateIDHigh>1</IDelegateIDHigh>
  <IDelegateIDLow>1</IDelegateIDLow>
  <IRequesterIDHigh></IRequesterIDHigh>
  <IRequesterIDLow></IRequesterIDLow>
  <PMN></PMN>
  <TrackingGUID/>
  <AccountInfo>
    <CustomerType>PERSONAL</CustomerType>
    <FriendlyName>Account Creation Friendly</FriendlyName>
    <FirstName>Some</FirstName>
    <LastName>One</LastName>
    <Email>SomeOne@SomeWhere.com</Email>
    <CompanyName>Microsoft Corporation</CompanyName>
    <Locale>en-US</Locale>
    <Currency>USD</Currency>
    <PhoneSet>
      <Phone>
        <PhoneType>PRIMARY</PhoneType>
        <PhonePrefix>425</PhonePrefix>
        <PhoneNumber>4257050000</PhoneNumber>
        <PhoneExtension>000</PhoneExtension>
        <CountryCode>US</CountryCode>
      </Phone>
    </PhoneSet>
    <AddressInfoSet>
      <AddressInfo>
        <FriendlyName>PRIMARY</FriendlyName>
        <Street1>One Microsoft Way</Street1>
        <Street2>Rm 1</Street2>
        <City>Redmond</City>
        <State>WA</State>
        <CountryCode>US</CountryCode>
        <PostalCode>98052</PostalCode>
      </AddressInfo>
    </AddressInfoSet>
  </AccountInfo>
  <PaymentInstrumentInfo>
    <PaymentInstrumentType>CREDITCARD</PaymentInstrumentType>
    <FriendlyName>Payment Info</FriendlyName>
    <CreditCardInfo>
      <AccountHolderName>Some One</AccountHolderName>
      <EncryptedAccountNumber>4444111122223333</EncryptedAccountNumber>
      <CardType>VISA</CardType>
      <ExpirationDate>112077</ExpirationDate>
    </CreditCardInfo>
    <Phone>
      <PhoneType>PRIMARY</PhoneType>
      <PhonePrefix>425</PhonePrefix>
      <PhoneNumber>4251234567</PhoneNumber>
      <PhoneExtension>00</PhoneExtension>
      <CountryCode>US</CountryCode>
    </Phone>
    <AddressInfo>
      <FriendlyName>Credit Card Address</FriendlyName>
      <Street1>One Redmond Avenue</Street1>
      <Street2>Apt. #1</Street2>
      <City>Redmond</City>
      <State>WA</State>
      <CountryCode>US</CountryCode>
      <PostalCode>98052</PostalCode>
    </AddressInfo>
  </PaymentInstrumentInfo>
</UserInfo>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\SPS\XR3\samples\Subscription_Platform_API\VBScript\UpdatePaymentInstrumentInfoInput.xml ===
<PaymentInstrumentInfo xmlns="urn:schemas-microsoft-com:billing-data">
  <PaymentInstrumentType>CREDITCARD</PaymentInstrumentType> 
  <FriendlyName>Payment Update Info</FriendlyName> 
 <CreditCardInfo>
  <AccountHolderName>Another Person</AccountHolderName> 
  <ExpirationDate>112999</ExpirationDate> 
  </CreditCardInfo>
 <AddressInfo>
  <FriendlyName>Credit Card Address</FriendlyName> 
  <Street1>Two XYZ Pl</Street1> 
  <Street2>Apt. #2</Street2> 
  <City>Seattle</City> 
  <State>WA</State> 
  <CountryCode>US</CountryCode> 
  <PostalCode>98115</PostalCode> 
  </AddressInfo>
  </PaymentInstrumentInfo>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\amd64\Bin\Microsoft.ComplexEventProcessing.ManagementService.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ComplexEventProcessing.ManagementService</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest">
            <summary>
            Contains request information for a ChangeQueryState operation.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.#ctor">
            <summary>
            Initializes a new, default instance of the ChangeQueryStateRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.#ctor(System.Uri,Microsoft.ComplexEventProcessing.ManagementService.QueryState)">
            <summary>
            Initializes a new instance of the ChangeQueryStateRequest class with the specified name and query state.
            </summary>
            <param name="name">A T:System.Uri value containing the name of the query state to be changed.</param>
            <param name="queryState">A QueryState value specifying the new query state value.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.Name">
            <summary>
            Gets or sets the name of the parent container 
            in which the object is going to be created.
            </summary>
            <returns>A T:System.String containing the name of the parent container.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.QueryState">
            <summary>
            Gets or sets the value that the query state will be changed to.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse">
            <summary>
            Contains the response for a ChangeQueryState operation.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.#ctor">
            <summary>
            Initializes a new instance of the ChangeQueryStateResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.#ctor(System.Uri,Microsoft.ComplexEventProcessing.ManagementService.QueryState)">
            <summary>
            Initializes a new instance of the ChangeQueryStateResponse class with the specified name and query state.
            </summary>
            <param name="name">A T:System.Uri value containing the name of the query state to be changed.</param>
            <param name="queryState">A QueryState value specifying the requested new query state value.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.Name">
            <summary>
            Gets or sets the name of the parent container 
            in which the object is going to be created.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.QueryState">
            <summary>
            Gets or sets the value that the query state will be changed to.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault">
            <summary>
            Represents a SOAP fault message that is generated when clearing the diagnostic 
            settings is not supported for a specific name.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the ClearDiagnosticSettingsNotSupportedFault class.
            </summary>
            <param name="name">The name for which clearing the diagnostic settings is not supported.</param>
            <param name="errorMessage">The human readable error message.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault.Name">
            <summary>
            Gets or sets the name for which clearing the diagnostic settings is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault.Message">
            <summary>
            Gets or sets the human readable error message.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest">
            <summary>
            Represents a request message for the ClearDiagnosticSettings web service call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest.#ctor">
            <summary>
            Initializes a new instance of the ClearDiagnosticSettingsRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest.Name">
            <summary>
            Gets or sets the name of the object for which diagnostic settings should be cleared.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest">
            <summary>
            Encapsulates the parameters for a Create operation.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest.#ctor">
            <summary>
            Initializes a new instance of the CreateRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest.Name">
            <summary>
            Gets or sets the name of the parent container 
            in which the object is going to be created.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest.Body">
            <summary>
            Gets or sets the XML definition of the object to be created.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody">
            <summary>
            Instances of this class represent the body elements of a Create requests to the management service.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.#ctor">
            <summary>
            Initializes a new instance of the CreateRequestBody class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CreateRequestBody class given XML text for the body.
            This constructor is only used for testing purposes.
            </summary>
            <param name="xmlText"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Adds the XML schema for this class to the given XML schema set.
            </summary>
            <param name="schemaSet">The XML schema set.</param>
            <returns>The XML qualified name for the element which can represent instances of this class.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.GetSchema">
            <summary>
            Gets the XML schema that this object can be serialized to.
            This method is not used.
            </summary>
            <returns>XML schema.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads this object from its XML representation.
            </summary>
            <param name="reader">XML reader positioned on the XML element for this object.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes this object XML representation to an XML writer.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.Xml">
            <summary>
            Gets the XML text of the create request. This is only used for testing purposes.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse">
            <summary>
            Encapsulates the response information for a Create operation.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse.#ctor">
            <summary>
            Initializes a new instance of the CreateResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse.ResourceAddress">
            <summary>
            Gets or sets the name of the object that has been created.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest">
            <summary>
            Contains information about a Delete operation request.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest.#ctor">
            <summary>
            Initializes a new, default instance of the DeleteRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the DeleteRequest class with the specified resource name.
            </summary>
            <param name="name">A T:System.Uri object specifying the name of the resource to be deleted.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest.Name">
            <summary>
            Gets or sets the name of the resource that will be deleted.
            </summary>
            <returns>A T:System.Uri value that contains the name of the resource to be deleted.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse">
            <summary>
            Contains information about the response to a Delete operation request.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse.#ctor">
            <summary>
            Initializes a new, default instance of the DeleteResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the DeleteResponse class with the specified resource name.
            </summary>
            <param name="name">A T:System.Uri value specifying the name of the resource to be deleted.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse.Name">
            <summary>
            Gets or sets the name of the resource to be deleted.
            </summary>
            <returns>A T:System.Uri value specifying the name of the resource to be deleted.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView">
            <summary>
            Represents a diagnostic view for a single engine object as a bag of name-value pairs (properties).
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.#ctor">
            <summary>
            Initializes a new instance of the ServerDiagnosticView class.
            Parammeterless constructor, used for serialization.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the ServerDiagnosticView class.
            </summary>
            <param name="instanceName"></param>
            <param name="properties"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.GetProperty``1(System.String)">
            <summary>
            Gets the value for a specific property.
            </summary>
            <typeparam name="TValue">the type of the value</typeparam>
            <param name="name">the property name</param>
            <returns>the value of the given property</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Count">
            <summary>
            Gets the number of properties in the diagnostic view.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Name">
            <summary>
            Gets or sets the name of the object that this diagnostic view object is for
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Values">
            <summary>
            Gets a collection of name values pairs for all values in the diagnostic view.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Properties">
            <summary>
            Gets or sets the property collection - for serialization puposes only
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest">
            <summary>
            Contains the properties needed to call the Enumerate function.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest.#ctor">
            <summary>
            Initializes a new instance of the EnumerateRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest.Name">
            <summary>
            Gets or sets the name of the container object that contains 
            the requests to enumerate.
            </summary>
            <returns>A T:System.Uri value containing the name of the container object to be enumerated.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse">
            <summary>
            Contains the response information for an Enumerate method call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse.#ctor">
            <summary>
            Initializes a new instance of the EnumerateResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse.ResourceNames">
            <summary>
            Gets or sets the names for the objects returned by the Enumerate operation.
            </summary>
            <returns>A T:System.Collections.Generic.List object containing the names for objects returned by an
            Enumerate operation.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault">
            <summary>
            Represents a SOAP fault message that is generated when getting the diagnostic 
            settings is not supported for a specific name.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the GetDiagnosticSettingsNotSupportedFault class.
            </summary>
            <param name="name">The name for which getting the diagnostic settings is not supported.</param>
            <param name="errorMessage">The human readable error message.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault.Name">
            <summary>
            Gets or sets the name for which getting the diagnostic settings is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault.Message">
            <summary>
            Gets or sets the human readable error message.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest">
            <summary>
            Represents a request message for the GetDiagnosticSettings web service call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest.#ctor">
            <summary>
            Initializes a new instance of the GetDiagnosticSettingsRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest.Name">
            <summary>
            Gets or sets the name of the object for which diagnostic settings should be returned.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse">
            <summary>
            Represents a response message for the GetDiagnosticSettings web service call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse.#ctor">
            <summary>
            Initializes a new instance of the GetDiagnosticSettingsResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse.DiagnosticAspects">
            <summary>
            Gets or sets the enabled diagnostic aspects.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse.DiagnosticLevel">
            <summary>
            Gets or sets the enabled diagnostic level.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault">
            <summary>
            Represents a SOAP fault message that is generated when getting the diagnostic 
            view is not supported for a specific name.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the GetDiagnosticViewNotSupportedFault class.
            </summary>
            <param name="name">The name for which getting the diagnostic view is not supported.</param>
            <param name="errorMessage">The human readable error message.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault.Name">
            <summary>
            Gets or sets the name for which getting the diagnostic view is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault.Message">
            <summary>
            Gets or sets the human readable error message.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest">
            <summary>
            Represents a request message for the GetDiagnosticView web service call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest.#ctor">
            <summary>
            Initializes a new instance of the GetDiagnosticViewRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest.Name">
            <summary>
            Gets or sets the name of the object for which the diagnostic view should be returned.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse">
            <summary>
            Represents a response message for the GetDiagnosticView web service call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse.#ctor">
            <summary>
            Initializes a new instance of the GetDiagnosticSettingsResponse class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse.View">
            <summary>
            Gets or sets the diagnostic view for the given name.
            </summary>
            <returns>Diagnostic view.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest">
            <summary>
            Contains the request for a Get call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetRequest.#ctor">
            <summary>
            Initializes a new instance of the GetRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetRequest.Name">
            <summary>
            Gets or sets the name of the resource to be retrieved.
            </summary>
            <returns>A T:System.Uri value containing the name of the resource to be retrieved.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse">
            <summary>
            Contains the response to the Get call request.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponse.#ctor">
            <summary>
            Initializes a new instance of the GetResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponse.#ctor(System.Xml.Serialization.IXmlSerializable)">
            <summary>
            Initializes a new instance of the GetResponse class.
            </summary>
            <param name="bodyElements">An objects that will be serialized as the body of the response message.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetResponse.Body">
            <summary>
            Gets or sets the XML definition of the requested resource.
            </summary>
            <returns>An T:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody value containing the XML definition of the requested resource.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody">
            <summary>
            Instances of this class represent the body elements of a Get response from the management service.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.#ctor">
            <summary>
            Initializes a new instance of the GetResponseBody class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.#ctor(System.Xml.Serialization.IXmlSerializable)">
            <summary>
            Initializes a new instance of the GetResponseBody class given an object that can be serialized
            into the body element of the response message. This method is only used for testing purposes.
            </summary>
            <param name="bodyElements"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.GetSchema(System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Adds the XML schema for this class to the given XML schema set.
            </summary>
            <param name="schemaSet">The XML schema set.</param>
            <returns>The XML qualified name for the element which can represent instances of this class.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.GetSchema">
            <summary>
            Gets the XML schema that this object can be serialized to.
            This method is not used.
            </summary>
            <returns>XML schema.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads this object from its XML representation.
            </summary>
            <param name="reader">XML reader positioned on the XML element for this object.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes this object XML representation to an XML writer.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.Xml">
            <summary>
            Gets the XML text of the create request. This is only used for testing purposes.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.IManagementService">
            <summary>
            The T:Microsoft.ComplexEventProcessing.ManagementService.IManagementService interface
            defines methods and properties that are used to control the management functions of the 
            Complex Event Processing engine.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Create(Microsoft.ComplexEventProcessing.ManagementService.CreateRequest)">
            <summary>
            Creates a new resource with the specified description and the address of its parent container.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest object
            that contains the resource object's XML definition and the name of the parent object.</param>
            <returns>CreateResponse object that contains object name.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Get(Microsoft.ComplexEventProcessing.ManagementService.GetRequest)">
            <summary>
            Gets the XML definition of the specified resource.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest 
            object that contains the name of the resource.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse object that 
            contains the XML resource definition.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Delete(Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest)">
            <summary>
            Deletes the specified resource.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest 
            object that specifies the resource to be deleted.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse object that 
            contains the name of the resource.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Enumerate(Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest)">
            <summary>
            Enumerates a collection of requests and returns an EnumerateResponse containing a collection of XML request
            definitions.
            </summary>
            <param name="request">An T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest object 
            that contains the name of the collection to enumerate.</param>
            <returns>An T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse object that contains 
            a collection of XML object definitions.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.ChangeQueryState(Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest)">
            <summary>
            Changes the state of a running query.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest object 
            that contains the name of the running query.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse object that 
            contains the query name and its current state.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.GetDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest)">
            <summary>
            Gets the diagnostic settings that apply to a specific named object. Only settings for one specific object 
            can be returned. Settings for collection of objects cannot be returned. If the name is a name of 
            a colleciton of objects then GetDiagnosticSettingsNotSupportedFault is generated.
            </summary>
            <param name="request">Request which contains the name.</param>
            <returns>Response which contains the diagnostic aspects and level that apply to the given name.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.SetDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest)">
            <summary>
            Sets the diagnostic settings of a named object or a collection of objects. 
            </summary>
            <param name="request">Request which contains the name and the new diagnostic settings.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.ClearDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest)">
            <summary>
            Clears the diagnostic settings of a named object or a collection of objects.
            </summary>
            <param name="request">Request which contains the name.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.GetDiagnosticView(Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest)">
            <summary>
            Gets the diagnostic view of a named object or a collection of objects.
            </summary>
            <param name="request">Request which contains the name.</param>
            <returns>Response which contains the the requested diagnostic view.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault">
            <summary>
            Represents a fault that occurs when an invalid name is detected.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidNameFault class with the specified message.
            </summary>
            <param name="message">A T:System.String that contains the message providing information about the fault.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault.Message">
            <summary>
            Gets or sets the message providing information about this fault.
            </summary>
            <returns>A T:System.String that contains the message providing information about the fault.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault">
            <summary>
            Represents an invalid definition fault.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidDefinitionFault class with the specified message.
            </summary>
            <param name="message">A T:System.String that contains the message providing information about the fault.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault.Message">
            <summary>
            Gets or sets the message providing information about the fault.
            </summary>
            <returns>A T:System.String that contains the message providing information about the fault.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementService">
            <summary>
            Implements the management service.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.#ctor(Microsoft.ComplexEventProcessing.CommandDispatcher.CommandDispatcher)">
            <summary>
            Initializes a new instance of the ManagementService class for the specified command dispatcher.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.Create(Microsoft.ComplexEventProcessing.ManagementService.CreateRequest)">
            <summary>
            Creates a new resource with the specified request information.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest object that contains 
            the XML definition of the object to be created and the name of the object's parent.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse object that contains the name of
            the created object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.Get(Microsoft.ComplexEventProcessing.ManagementService.GetRequest)">
            <summary>
            Gets the description of a new resource.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.GetRequest object that contains the 
            name of the resource to be described.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.GetResponse object that contains the XML resource
            definition.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.Delete(Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest)">
            <summary>
            Deletes a resource.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.DeleteRequest object that contains the 
            name of the resource to be deleted.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.DeleteResponse object that contains the name of the 
            resource to be deleted.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.Enumerate(Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest)">
            <summary>
            Enumerates a collection of objects.
            </summary>
            <param name="request">An T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest object 
            that contains the name of the collection to enumerate.</param>
            <returns>An T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse object that 
            contains a collection of XML object definitions.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.ChangeQueryState(Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest)">
            <summary>
            Changes the state of a running query.
            </summary>
            <param name="request">A T:Microsoft.ComplexEventProcessing.ChangeQueryStateRequest object 
            that contains the name of the query to be changed.</param>
            <returns>A T:Microsoft.ComplexEventProcessing.ChangeQueryStateResponse object that contains 
            the query name and its current state.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.GetDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest)">
            <summary>
            Gets the diagnostic settings that apply to a specific named object. Only settings for one specific object 
            can be returned. Settings for collection of objects cannot be returned. If the name is a name of 
            a colleciton of objects then GetDiagnosticSettingsNotSupportedFault is generated.
            </summary>
            <param name="request">Request which contains the name.</param>
            <returns>Response which contains the diagnostic aspects and level that apply to the given name.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.SetDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest)">
            <summary>
            Sets the diagnostic settings of a named object or a collection of objects. 
            </summary>
            <param name="request">Request which contains the name and the new diagnostic settings.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.ClearDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest)">
            <summary>
            Clears the diagnostic settings of a named object or a collection of objects.
            </summary>
            <param name="request">Request which contains the name.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.GetDiagnosticView(Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest)">
            <summary>
            Gets the diagnostic view of a named object or a collection of objects.
            </summary>
            <param name="request">Request which contains the name.</param>
            <returns>Response which contains the the requested diagnostic view.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.AddElementSchemaToSchemaSet(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaSet)">
            <summary>
            Adds the schema for an element to an existing schema set. If the schema set already
            contains another schema for the given target namespace, then the new schema is merged
            with this old one. This will allow us to incrementally add the schemas for the different
            message bodies defined in the Management Service namespace.
            </summary>
            <param name="elementName">The name of the XML event for which the schema is being added.</param>
            <param name="schema">XML schema definition of the element.</param>
            <param name="schemaSet">A set of XML schemas to which the new schema should be added.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementService.CheckRolePermission">
            <summary>
            Check that user is in the role according to the principal permission object.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects">
            <summary>
            Enumeration of different diagnostics aspects that can be turned on or off separately.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.DiagnosticViews">
            <summary>
            Diagnostic views
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.Debug">
            <summary>
            Debug tracing - enter/exit methods, exceptions, etc.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.StateChanges">
            <summary>
            Tracing of creation, destruction and state changes of objects in the engine
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.CepEventTracing">
            <summary>
            Tracing of CEP events as the progress through the queries
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.GenerateErrorReports">
            <summary>
            Generate error reports on query crashes.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel">
            <summary>
            Enumeration of different verbosity levels for the diagnostic aspects.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Always">
            <summary>
            The least verbose diagnostic level. Only diagnostics that are always on are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Critical">
            <summary>
            Critical diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Error">
            <summary>
            Error diagnostics are enabled on this level. 
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Warning">
            <summary>
            Warning diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Informational">
            <summary>
            Informational diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Verbose">
            <summary>
            The most verbose diagnostic level. All diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault">
            <summary>
            Represents a fault that occurs due to a generic failure in the management service.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ManagementFault class with the specified message.
            </summary>
            <param name="message">A T:System.String that contains the message providing information about the fault.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault.Message">
            <summary>
            Gets or sets the message for this fault.
            </summary>
            <returns>A T:System.String that contains the message providing information about the fault.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceTrace">
            <summary>
            This class is used for Expression Service traces. It doesn't have to implement any methods, 
            because the base class implements all necessary static methods.
            The trace switch for traces produced through this class is "Microsoft.ComplexEventProcessing.Expressions.ExpressionsTrace".
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer">
            <summary>
            This class will be used for testing only to enable writing and reading metadata objects'
            XML representation diractly to and from the management web service request and response messages.
            When we have a client API which talks to the web service and deserializes the XML into
            objects, then we can remove this class and the tests using it.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer.#ctor">
            <summary>
            Initializes a new instance of the MetadataXmlSerializer class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MetadataXmlSerializer class.
            </summary>
            <param name="xmlText">The XML text to which this object will get serialized.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer.GetSchema">
            <summary>
            Gets the XML schema that this object can be serialized to.
            This method is not used.
            </summary>
            <returns>XML schema.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads this object from its XML representation.
            </summary>
            <param name="reader">XML reader positioned on the XML element for this object.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes this object XML representation to an XML writer.
            </summary>
            <param name="writer">The XML writer.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.MetadataXmlSerializer.XmlText">
            <summary>
            The XML representation of this object.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.QueryState">
            <summary>
            Enumerates a list of possible query states.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.QueryState.Started">
            <summary>
            The Query has been started, and is processing events.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.ManagementService.QueryState.Stopped">
            <summary>
            The query has been stopped.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.RuntimeFault">
            <summary>
            Represents a fault that occurs due to a generic failure in the runtime.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.RuntimeFault.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RuntimeFault class with the specified message.
            </summary>
            <param name="message">A T:System.String that contains the message providing information about the fault.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.RuntimeFault.Message">
            <summary>
            Gets or sets the message for this fault.
            </summary>
            <returns>A T:System.String that contains the message providing information about the fault.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault">
            <summary>
            Represents a SOAP fault message that is generated when setting the diagnostic 
            settings is not supported for a specific name.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the SetDiagnosticSettingsNotSupportedFault class.
            </summary>
            <param name="name">The name for which setting the diagnostic settings is not supported.</param>
            <param name="errorMessage">The human readable error message.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault.Name">
            <summary>
            Gets or sets the name for which setting the diagnostic settings is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault.Message">
            <summary>
            Gets or sets the human readable error message.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest">
            <summary>
            Represents a request message for the SetDiagnosticSettings web service call.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.#ctor">
            <summary>
            Initializes a new instance of the SetDiagnosticSettingsRequest class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.Name">
            <summary>
            Gets or sets the name of the object for which diagnostic settings should be set.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.DiagnosticAspects">
            <summary>
            Gets or sets the diagnostic aspects.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.DiagnosticLevel">
            <summary>
            Gets or sets the diagnostic level.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\amd64\Bin\Microsoft.ComplexEventProcessing.Adapters.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ComplexEventProcessing.Adapters</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.Adapter">
            <summary>
            Defines the methods and properties that must be implemented by input and output adapters.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.#ctor">
            <summary>
            Initializes a new instance of the Adapter class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Start">
            <summary>
            Invoked asynchronously by the CEP engine to start the adapter to produce/consume events.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Resume">
            <summary>
            Invoked asynchronously the CEP engine to resume adapter execution to produce/consume events after it has been suspended.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Ready">
            <summary>
            Invoked by the adapter to signal to the engine that it is ready to be resumed. The engine will invoke Resume() only after the adapter has called Ready().
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Stopped">
            <summary>
            Invoked by the adapter to notify the runtime that the adapter has shut down
            </summary>
            <remarks>
            Prior to this invocation, the adapter must release all
            acquired resources. Post invocation, the adapter should not call
            back into the engine. The engine may dispose the adapter at any time
            after this method is called.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Dispose">
            <summary>
            Invoked by the adapter to release all of the resources owned by the adapter host. This method 
            must not be called by users, as this would result in an unusable adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.StartAdapter">
            <summary>
            Called by the runtime to start the adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.StopAdapter">
            <summary>
            Called by the runtime when shutting down the query or by the output adapter after dequeueing end-of-stream.
            It transitions the adapter to the Stopping state. 
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.ResumeAdapter">
            <summary>
            Called by the runtime to signal the adapter that it can resume.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.WaitForAdapterToStop(System.TimeSpan)">
            <summary>
            Waits for the adapter to transition to a stopped state with a specified timeout.
            </summary>
            <param name="timeout">The timeout.</param>
            <returns>True if the adapter transitioned to a stopped state and false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose pattern. To be overridden by derived classes.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.CleanupResources">
            <summary>
            Internal virtual function that does cleanup of resources.
            To be overridden by the input and output adapter base classes.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.OnStopped">
            <summary>
            This function is called when the adapter invokes Stopped to stop itself.
            It allows derived classes to implement additional behavior besides what the 
            base class does.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.OnStopAdapter">
            <summary>
            This function is called when the adapter is stopped by the
            plan manager or when we encounter end-of-stream on output adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.StartAsync">
            <summary>
            Calls Start() on its own worker thread.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.ResumeAsync">
            <summary>
            Calls Resume() on its own worker thread.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.ConvertToAdapterState(Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState)">
            <summary>
            Translate the internal adapter state to the user-visible adapter state.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.AdapterState">
            <summary>
            Gets the state of the adapter.
            </summary>
            <value> 
            The current adapter state.
            </value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.AdapterInternalState">
            <summary>
            Gets or sets the internal state of the adapter.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.StateLock">
            <summary>
            Gets the lock used to synchronize updates to the adapter state
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.ResumeCalledOnce">
            <summary>
            Gets a boolean indicating whether resume has been called
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.IsDisposed">
            <summary>
            Gets a boolean indicating whether this object has been disposed
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.OperatorState">
            <summary>
            Gets the operator state for this adapter instance.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.ExecutionOperator">
            <summary>
            Gets the execution operator for this adapter instance.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterActivator">
            <summary>
            Activator that builds adapter factories. 
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterActivator.CreateInputAdapterFactory(System.String)">
            <summary>
            Creates an adapter factory based on the supplied class name. 
            Two calls for the same class name will yield the same instance.
            Note that the activation relies on the fusion loader to resolve 
            the class name, so a previous step of installing adapter factories is
            needed if the factory class is not in the GAC.
            </summary>
            <param name="factoryClassName">full class name of the adapter factory.</param>
            <returns>An instance of an adapter factory.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterActivator.CreateOutputAdapterFactory(System.String)">
            <summary>
            Creates an adapter factory based on the supplied class name. 
            Two calls for the same class name will yield the same instance.
            Note that the activation relies on the fusion loader to resolve 
            the class name, so a previous step of installing adapter factories is
            needed if the factory class is not in the GAC.
            </summary>
            <param name="factoryClassName">full class name of the adapter factory.</param>
            <returns>An instance of an adapter factory.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterException">
            <summary>
            Represents an exception that is raised when an error occurs during an input or output adapter operation.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor">
            <summary>
            Initializes a new instance of the AdapterException class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AdapterException class with the specified message.
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the AdapterException class with the 
            specified message and inner exception.
            </summary>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterFactory`1">
            <summary>
            This class is an internal wrapper for the factory instance. Its purpose is to 
            hide the fact that the factory is derived from a generic interface and to 
            transform the configuration information from an xml blob into an object.
            </summary>
            <typeparam name="TAdapter">Type of adapter. We are only supporting InputAdapterBase 
            and OutputAdapterBase at the moment.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterFactory`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AdapterFactory class.
            </summary>
            <param name="factoryClassName">Name of the factory type</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterFactory`1.Create(Microsoft.ComplexEventProcessing.Engine.OperatorState,System.Xml.XmlReader,Microsoft.ComplexEventProcessing.CepEventType,System.String,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Wraps the call to the factory interface method by deserializing the xml 
            config info in a config object and optionally hides the event type.
            </summary>
            <param name="operatorState"></param>
            <param name="configInfo"></param>
            <param name="cepEventType"></param>
            <param name="payloadClassName"></param>
            <param name="eventShape"></param>
            <returns>An instance of the adapter.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterFactory`1.GetAdapterImplementedInterfaces(System.Xml.XmlReader,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Get all implemented interfaces for the adapter
            </summary>
            <param name="configInfo"></param>
            <param name="payloadClassName"></param>
            <param name="eventShape"></param>
            <param name="runtimeEventType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterFactory`1.GetAdapterAdvanceTimeSettings(System.Type,System.Object,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Helper function that gets AdvanceTimeSettings if the factory implements an interface
            that exposes this capability.
            </summary>
            <param name="implementedInterface"></param>
            <param name="configInstance"></param>
            <param name="payloadClassName"></param>
            <param name="eventShape"></param>
            <param name="runtimeEventType"></param>
            <returns>AdvanceTimeSettings if the factory implements any of the interfaces that expose 
            this capability and they were successfully queried, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterFactory`1.GetAdapterEventTypeProperties(System.Type,System.Object,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Helper function that gets decorated CepEventType information from the factory
            if the factory implements an interface that exposes this capability.
            </summary>
            <param name="implementedInterface"></param>
            <param name="configInstance"></param>
            <param name="payloadClassName"></param>
            <param name="eventShape"></param>
            <param name="runtimeEventType"></param>
            <returns>A decorated CepEventType that contains additional event fields information</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState">
            <summary>
            Enumeration that represents the state of the adapter.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Created">
            <summary>
            Adapter has just been created, but not yet started.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Running">
            <summary>
            The adapter is running and producing events. It is not 
            blocked waiting on any engine resources, but it could be 
            waiting on external resources.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Suspending">
            <summary>
            The adapter has been told by the runtime that it needs to wait 
            before using runtime resources, e.g. writing into or reading from
            streams, but it has not yet acknowledged this by calling Ready.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Suspended">
            <summary>
            The adapter has been told by the runtime that it needs to wait 
            before using runtime resources, e.g. writing into or reading from
            streams, and it has acknowledged this by calling Ready.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Runnable">
            <summary>
            The adapter is ready to continue producing / consuming events,
            but it has not yet ackonwledged this by calling Ready.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Stopping">
            <summary>
            The adapter has been told by the runtime that it needs to wait 
            before using runtime resources, e.g. writing into or reading from
            streams, but it has not yet acknowledge this by calling Stopped.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterInternalState.Stopped">
            <summary>
            The adapter has finished running, has cleaned up its state and will not be reused again.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterState">
            <summary>
            Enumeration of possible adapter states.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Created">
            <summary>
            The adapter has just been created, but not yet started.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Running">
            <summary>
            The adapter is running and producing events.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Suspended">
            <summary>
            The adapter is suspended and cannot enqueue events. 
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Stopping">
            <summary>
            The adapter has been asked to stop producing events because the query is being shut down.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Stopped">
            <summary>
            The adapter has finished running and will not be used again.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterStateTransitionHistory">
            <summary>
            Keeps track of the last adapter state transitions in a ring buffer for debugging puposes.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterTrace">
            <summary>
            This class is used for Adapter host traces. It doesn't have to implement any methods, 
            because the base class implements all necessary static methods.
            The trace switch for traces produced through this class is "Microsoft.ComplexEventProcessing.Adapters.AdapterTrace".
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.DequeueOperationResult">
            <summary>
            Represents the result of an Dequeue operation.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.DequeueOperationResult.Success">
            <summary>
            The operation succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.DequeueOperationResult.Empty">
            <summary>
            Operation failed, and the caller needs to suspend itself 
            and wait to be notified that they can do more work with the queue.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter">
            <summary>
            Base class for an input adapter that produces untyped edge events.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1">
            <summary>
            Base class for a untyped input adapter.
            </summary>
            <typeparam name="TEvent">Payload structure for the events produced by this adapter.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase">
            <summary>
            Base class for input adapters.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.EnqueueCtiEvent(System.DateTimeOffset)">
            <summary>
            Enqueues a Cti event.
            </summary>
            <param name="startTime">Valid start time for the Cti event.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the queue is full and the operation did not succeed.
            </returns>
            <remarks>This function does not allocate memory</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.CreateEvent(Microsoft.ComplexEventProcessing.Expressions.EventKind)">
            <summary>
            Creates an event that can be enqueued, used by untyped input adapter
            to create event
            </summary>
            <param name="eventKind">The kind of event (Insert, Retract, Cti)</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.CreateEvent``1(Microsoft.ComplexEventProcessing.Expressions.EventKind,Microsoft.ComplexEventProcessing.ClrToCepEventConverter{``0},``0)">
            <summary>
            Creates an event that can be enqueued. Used by typed event.
            </summary>
            <param name="eventKind">The kind of event (Insert, Retract, Cti)</param>
            <param name="clrObject"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.EnqueueInternal(Microsoft.ComplexEventProcessing.Expressions.CepEvent@)">
            <summary>
            Enqueues events into the stream associated with this adapter.
            </summary>  
            <param name="cepEvent">Generic event that is to be enqueued.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the queue is full and the operation did not succeed.
            The adapter needs to signal the runtime that it is suspended and 
            it is waiting to be resumed.
            The event will be "consumed" by the runtime in the case of success, 
            that is the memory that it occupies will be released.
            On failure the event will be returned to the user who is 
            responsible to clean it up.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.OnStopAdapter">
            <summary>
            This function is called when the adapter is stopped by the
            plan manager. Enqueue the EndOfStream event and detach
            from the query instance. After this point, the plan manager
            is free to shut down the query independently of the adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.OnStopped">
            <summary>
            This function is called when the adapter invokes Stopped to
            stop itself. Enqueue the EndOfStream event and detach from
            query instance. After this point, the plan manager
            is free to shut down the query independently of the adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.EnqueueEndOfStreamAndDetach">
            <summary>
            This function enqueues the EndOfStream event and detaches from
            query instance. After this point, the plan manager
            is free to shut down the query independently of the adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.CleanupResources">
            <summary>
            Cleans up engine resources that are used by the adapter host.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1.EnqueueInternal(`0@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1.ReleaseEvent(`0@)">
            <summary>
            Release the memory occupied by an event.
            </summary>
            <param name="eventInstance">Event instance</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.EdgeEvent@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter.CreateInsertEvent(Microsoft.ComplexEventProcessing.EdgeType)">
            <summary>
            Creates an edge insert event.
            </summary>
            <param name="edgeType">Edge type (start or end).</param>
            <returns>An instance of an EdgeEvent.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.EdgeOutputAdapter">
            <summary>
            Represents the base class for an output adapter that receives edge events.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.UntypedOutputAdapter`1">
            <summary>
            Base class for an untyped input adapter.
            </summary>
            <typeparam name="TEvent">Payload structure for the events produced by this adapter.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase">
            <summary>
            Base class for output adapters.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.DequeueInternal(Microsoft.ComplexEventProcessing.Expressions.CepEvent@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="cepEvent">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation DID NOT SUCCEED and the adapter 
            needs to wait with further Dequeue calls. After this the adapter 
            can be resumed at any moment by the runtime.
            adapter had been stopped.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.OnStopAdapter">
            <summary>
            This function is called when the adapter has dequeue the end-of-stream.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.OnStopped">
            <summary>
            This function is called when the adapter invokes Stopped to
            stop itself.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.NotifyObserverAndDetach">
            <summary>
            Notify observer that adapter is stopping and detach from
            query instance.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.CleanupResources">
            <summary>
            Cleans up engine resources that are used by the adapter host.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.OutputEventType">
            <summary>
            Gets the event type that the output adapter will receive
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedOutputAdapter`1.ReleaseEvent(`0@)">
            <summary>
            Release the memory occupied by an event.
            </summary>
            <param name="eventInstance">Event instance</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.EdgeEvent@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation did not succeed and the adapter 
            needs to wait with further Dequeue calls.
            </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.EnqueueOperationResult">
            <summary>
            Represents the result of an Enqueue operation.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.EnqueueOperationResult.Success">
            <summary>
            The operation succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.EnqueueOperationResult.Full">
            <summary>
            The queue is full, and the engine did not accept the event. Further calls to Enqueue
            will not succeed until the Resume method has been called.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.EventPool`1">
            <summary>
            Class that maintains a pool of events. We maintain this pool per adapter instance (see, for example,
            the TypedOutputAdapter class.
            </summary>
            <typeparam name="TEvent">Event type</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter">
            <summary>
            Represents the base class for an input adapter that uses the CepEvent class.
            TODO - this is to be used for test purposes only.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter.ReleaseEvent(Microsoft.ComplexEventProcessing.Expressions.CepEvent@)">
            <summary>
            Releases the memory occupied by the event.
            </summary>
            <param name="cepEvent">Event reference.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter.CreateInsertEvent">
            <summary>
            Creates an Insert event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter.CreateCtiEvent">
            <summary>
            Creates a CTI event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter.CreateRetractEvent">
            <summary>
            Creates a Retract event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter.CreateExpandEvent">
            <summary>
            Creates a Expand event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.Expressions.CepEvent@)">
            <summary>
            Enqueues events into the stream associated with this adapter.
            </summary>
            <param name="cepEvent">Generic event that is to be enqueued.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the queue is full and the operation did not succeed.
            The adapter needs to signal the runtime that it is suspended and 
            it is waiting to be resumed.
            The event will be "consumed" by the runtime in the case of success, 
            that is the memory that it occupies will be released.
            On failure the event will be returned to the user who is 
            responsible to clean it up.
            </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.FieldAccessOutputAdapter">
            <summary>
            Represents the base class for an output adapter that uses the CepEvent class.
            TODO - this is to be used for test purposes only.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.Expressions.CepEvent@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="cepEvent">Reference to the event that is dequeued.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Empty if the operation DID NOT SUCCEED and the adapter 
            needs to wait with further Enqueue calls. This code signals the adapter
            that is needs to suspend itself, after which it should call Full 
            to inform the runtime that it is waiting to be resumed.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.FieldAccessOutputAdapter.ReleaseEvent(Microsoft.ComplexEventProcessing.Expressions.CepEvent@)">
            <summary>
            Releases the memory occupied by the event.
            </summary>
            <param name="cepEvent">Event reference.</param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.HostConfiguration">
            <summary>
            Base class for the host configuration.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.HostConfiguration.Dispose(System.Boolean)">
            <summary>
            Disposes the event allocator.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.HostConfiguration.DetachFromQueryInstance">
            <summary>
            Detaches from the query instance that this host configuration is
            bound to. This is called when StopQuery is invoked on a query instance.
            Detaching from the query instance allows the query to shut itself down
            independent of the adapter. The adapter should not reference any
            query instance state after this call.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IDeclareAdvanceTimeProperties`1">
            <summary>
            Interface that must be implemented by the factory classes that (optionally) want to specify
            AdvanceTimeSettings for the adapter instances that they produce.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IDeclareAdvanceTimeProperties`1.DeclareAdvanceTimeProperties(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Declares the AdvanceTime properties given configuration information 
            and the shape of the event. Factory classes that implement this interface 
            tell the runtime that it should produce Cti events that have 
            the properties described by the AdvanceTimeSettings class returned by 
            this method.
            </summary>
            <param name="configInfo">Contains configuration information for the adapter.</param>
            <param name="eventShape">Defines the shape of the events that must be produced by the adapter.</param>
            <param name="cepEventType">Defines the type of event that is expected from the adapter.</param>
            <returns>An instance of the AdvanceTimeSettings.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IDeclareEventProperties`1">
            <summary>
            Optional interface to be implemented by input adapter factory
            to provide additional information for the event field, such as the culture
            of a string field.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IDeclareEventProperties`1.DeclareEventProperties(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Declares the additional properties of the cepEventType given the adapter 
            factory configuration and event shape information. 
            </summary>
            <param name="configInfo">Contains configuration information for the adapter factory.</param>
            <param name="eventShape">Defines the shape of the events that must be produced by the adapter.</param>
            <param name="inputEventType">The event type CEP engine expects the input adapter to provide</param>
            <returns>A decorated CepEventType that contains additional event fields information</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IInputAdapterFactory`1">
            <summary>
            This interface must be implemented by factory classes that produce untyped input adapters.
            </summary>
            <typeparam name="TConfigInfo">Type of configuration information that is used to create the adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IInputAdapterFactory`1.Create(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Creates an input adapter.
            </summary>
            <param name="configInfo">Contains configuration information for the adapter.</param>
            <param name="eventShape">Defines the shape of the events that is expected by the adapter.</param>
            <param name="cepEventType">Defines the type of event that is expected from the adapter.</param>
            <returns>An instance of the input adapter.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IInputStream">
            <summary>
            This is the interface used by the input adapter hosts to talk to the input stream.
            The implementation of this interface will decide on the outcome of the operation 
            based on the availability of events in the input stream.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IInputStream.Dequeue(Microsoft.ComplexEventProcessing.Engine.Stream.LogicalStream,Microsoft.ComplexEventProcessing.Expressions.EventReference@,System.DateTime@)">
            <summary>
            Tries to dequeue a single event from the given logical stream.
            </summary>
            <param name="stream">The logical stream to dequeue from.</param>
            <param name="eventReference">The dequeued event.</param>
            <param name="stimulusTime">The stimulus time of the event.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.InputHostConfiguration.DetachFromQueryInstance">
            <summary>
            Detaches from the query instance that this host configuration is
            bound to.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter">
            <summary>
            Base class for an input adapter that produces untyped interval events.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.IntervalEvent@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter.CreateInsertEvent">
            <summary>
            Creates an interval insert event.
            </summary>
            <returns>An instance of an IntervalEvent.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IntervalOutputAdapter">
            <summary>
            Represents the base class for an output adapter that receives interval events.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.IntervalEvent@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation did not succeed and the adapter 
            needs to wait with further Dequeue calls. After this the adapter 
            can be resumed at any moment by the runtime.
            adapter had been stopped.
            </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IOutputAdapterFactory`1">
            <summary>
            This interface must be implemented by factory classes that produce untyped output adapters.
            </summary>
            <typeparam name="TConfigInfo">Type of configuration information that is 
            used to create the adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IOutputAdapterFactory`1.Create(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Creates an output adapter.
            </summary>
            <param name="configInfo">Contains configuration information for the adapter.</param>
            <param name="eventShape">Defines the shape of the events that will be received by the adapter.</param>
            <param name="cepEventType">Defines the type of event that will be received by the adapter.</param>
            <returns>An instance of the output adapter.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IOutputAdapterObserver">
            <summary>
            Interface that notifies of state changes in the adapter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IOutputAdapterObserver.OnStopOutputAdapter(Microsoft.ComplexEventProcessing.Engine.OperatorStateAdapter)">
            <summary>
            Called when the adapter has been asked to stop.
            </summary>
            <param name="adapterState">Adapter operator state.</param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.IOutputStream">
            <summary>
            This is the interface used by the input adapter hosts to talk to the output stream.
            The implementation of this interface will decide on the outcome of the operation based on
            available memory, scheduling policy, etc.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.IOutputStream.Enqueue(Microsoft.ComplexEventProcessing.Engine.Stream.LogicalStream,Microsoft.ComplexEventProcessing.Expressions.EventReference@,System.DateTime,Microsoft.ComplexEventProcessing.Engine.ExecutionOperatorAdapter,Microsoft.ComplexEventProcessing.Engine.OperatorStateAdapter)">
            <summary>
            Tries to enqueue a single event to the given logical stream.
            </summary>
            <param name="stream">The logical stream to enqueue into.</param>
            <param name="eventReference">The event to be enqueued.</param>
            <param name="stimulusTime">The stimulus time of the event.</param>
            <param name="executionOperator">The adapter execution operator - used for tracing.</param>
            <param name="operatorState">The adapter operator state - used for tracing.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareAdvanceTimeProperties`1">
            <summary>
            Interface that must be implemented by typed input factory classes that (optionally) want to specify
            AdvanceTimeSettings for the adapter instances that they produce.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareAdvanceTimeProperties`1.DeclareAdvanceTimeProperties``1(`0,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Declares the AdvanceTime properties given configuration information 
            and the shape of the event. Factory classes that implement this interface 
            tell the runtime that it should produce Cti events that have 
            the properties described by the AdvanceTimeSettings class returned by 
            this method.
            </summary>
            <typeparam name="TPayload">Type of the payload that is created by this adapter.</typeparam>
            <param name="configInfo">Contains configuration information for the adapter.</param>
            <param name="eventShape">Defines the shape of the events that must be produced by the adapter.</param>
            <returns>An instance of the AdvanceTimeSettings.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareEventProperties`1">
            <summary>
            Optional interface to be implemented by a typed input adapter factory
            to provide additional information for the event field, such as the culture 
            of a string field
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareEventProperties`1.DeclareEventProperties``1(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Declares the additional properties of the cepEventType given the adapter 
            factory configuration and event shape information. 
            </summary>
            <param name="configInfo">Contains configuration information for the adapter factory.</param>
            <param name="eventShape">Defines the shape of the events that must be produced by the adapter.</param>
            <param name="inputEventType">The event type CEP engine expects the input adapter to provide</param>
            <returns>A decorated CepEventType that contains additional event fields information</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedInputAdapterFactory`1">
            <summary>
            This interface must be implemented by factory classes that produce typed input adapters.
            </summary>
            <typeparam name="TConfigInfo">Type of configuration information that is 
            used to create the adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedInputAdapterFactory`1.Create``1(`0,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Creates an input adapter.
            </summary>
            <typeparam name="TPayload">Type of the payload that is created by this adapter.</typeparam>
            <param name="configInfo">Contains configuration information for the adapter.</param>
            <param name="eventShape">Defines the shape of the events that must be produced by the adapter.</param>
            <returns>An instance of the input adapter.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedOutputAdapterFactory`1">
            <summary>
            This interface must be implemented by factory classes that produce typed output adapters.
            </summary>
            <typeparam name="TConfigInfo">Type of configuration information that is 
            used to create the adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedOutputAdapterFactory`1.Create``1(`0,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Creates an output adapter.
            </summary>
            <typeparam name="TPayload">Type of the payload that is created by this adapter.</typeparam>
            <param name="configInfo">Contains configuration information for the adapter.</param>
            <param name="eventShape">Defines the shape of the events that will be received by the adapter.</param>
            <returns>An instance of the output adapter.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.OutputHostConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputHostConfiguration.DetachFromQueryInstance">
            <summary>
            Detaches from the query instance that this host configuration is
            bound to.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter">
            <summary>
            Base class for an input adapter that produces untyped point events.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.PointEvent@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter.CreateInsertEvent">
            <summary>
            Creates a point insert event.
            </summary>
            <returns>An instance of a point event allocated in the internal memory.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.PointOutputAdapter">
            <summary>
            Represents the base class for an output adapter that receives point events.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.PointOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.PointEvent@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation did not succeed and the adapter 
            needs to wait with further Dequeue calls. After this the adapter 
            can be resumed at any moment by the runtime.
            adapter had been stopped.
            </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory">
            <summary>
            Adapter factory for the published stream input and output adapters.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory.Create(Microsoft.ComplexEventProcessing.Adapters.PublishedStreamInputAdapterConfiguration,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Creates a new input adapter. This method should not be called directly.
            </summary>
            <param name="configInfo">The adapter configuration info.</param>
            <param name="eventShape">The event shape.</param>
            <param name="cepEventType">The event type.</param>
            <returns>The new adapter instance.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory.Create(Microsoft.ComplexEventProcessing.Adapters.PublishedStreamOutputAdapterConfiguration,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Creates a new output adapter. This method should not be called directly.
            </summary>
            <param name="configInfo">The adapter configuration info.</param>
            <param name="eventShape">The event shape.</param>
            <param name="cepEventType">The event type.</param>
            <returns>The new adapter instance.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory.Dispose">
            <summary>
            Disposes the adapter factory instance.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamInputAdapterConfiguration">
            <summary>
            This is the configuration for published stream input adapters.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamInputAdapterConfiguration.PublishedStreamName">
            <summary>
            The name of the published stream which will be the event source for the input adapter.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamOutputAdapterConfiguration">
            <summary>
            This is the configuration for published stream output adapters.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamOutputAdapterConfiguration.PublishedStreamName">
            <summary>
            The name of the published stream which will be the event sink for the output adapter.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1">
            <summary>
            Base class for an input adapter that produces edge events which have a payload structure.
            </summary>
            <typeparam name="TPayload">Payload structure for the edge events produced 
            by this adapter.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2">
            <summary>
            Base class for a typed input adapter.
            </summary>
            <typeparam name="TEvent">Event type produced by this adapter.</typeparam>
            <typeparam name="TPayload">Payload structure for the events produced by this adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2.EnqueueInternal(`0@,Microsoft.ComplexEventProcessing.Expressions.EventKind,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Enqueues an event into the stream associated with this adapter. 
            </summary>
            <param name="eventInstance"></param>
            <param name="eventKind"></param>
            <param name="eventStartTime"></param>
            <param name="eventEndTime"></param>
            <param name="eventNewValidEndTime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2.ReleaseEvent(`0@)">
            <summary>
            Release the memory occupied by an event.
            </summary>
            <param name="eventInstance">Event instance</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1.Enqueue(Microsoft.ComplexEventProcessing.EdgeEvent{`0}@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1.CreateInsertEvent(Microsoft.ComplexEventProcessing.EdgeType)">
            <summary>
            Creates an edge insert event.
            </summary>
            <param name="edgeType">Edge type (start or end).</param>
            <returns>An instance of an EdgeEvent.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeOutputAdapter`1">
            <summary>
            Represents the base class for an output adapter that receives edge events.
            </summary>
            <typeparam name="TPayload">Payload type. Must have default constructor.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedOutputAdapter`2">
            <summary>
            Represents the base class for a typed output adapter.
            </summary>
            <typeparam name="TEvent">Event type</typeparam>
            <typeparam name="TPayload">Payload type. Must have default constructor.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedOutputAdapter`2.ReleaseEvent(`0@)">
            <summary>
            Release the memory occupied by an event.
            </summary>
            <param name="eventInstance">Event instance</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeOutputAdapter`1.Dequeue(Microsoft.ComplexEventProcessing.EdgeEvent{`0}@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation did not succeed and the adapter 
            needs to wait with further Dequeue calls.
            </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1">
            <summary>
            Base class for an input adapter that produces point events which have a payload structure.
            </summary>
            <typeparam name="TPayload">Payload structure for the point events produced 
            by this adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1.Enqueue(Microsoft.ComplexEventProcessing.PointEvent{`0}@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1.CreateInsertEvent">
            <summary>
            Creates a point insert event.
            </summary>
            <returns>An instance of an EdgeEvent.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedPointOutputAdapter`1">
            <summary>
            Represents the base class for an output adapter that receives point events that have a payload structure.
            </summary>
            <typeparam name="TPayload">Payload type.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointOutputAdapter`1.Dequeue(Microsoft.ComplexEventProcessing.PointEvent{`0}@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation did not succeed and the adapter 
            needs to wait with further Dequeue calls. After this the adapter 
            can be resumed at any moment by the runtime.
            </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1">
            <summary>
            Base class for an input adapter that produces interval events which have a payload structure.
            </summary>
            <typeparam name="TPayload">Payload structure for the interval events produced 
            by this adapter.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1.Enqueue(Microsoft.ComplexEventProcessing.IntervalEvent{`0}@)">
            <summary>
            Enqueues an event into the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Event instance.</param>
            <returns>
            EnqueueOperationResult.Success if the operation succeeded.
            EnqueueOperationResult.Full if the operation did not succeed because the queue is full.
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1.CreateInsertEvent">
            <summary>
            Creates an interval insert event.
            </summary>
            <returns>An instance of an EdgeEvent.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalOutputAdapter`1">
            <summary>
            Represents the base class for an output adapter that receives interval events.
            </summary>
            <typeparam name="TPayload">Payload type. Must have default constructor.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalOutputAdapter`1.Dequeue(Microsoft.ComplexEventProcessing.IntervalEvent{`0}@)">
            <summary>
            Dequeues events from the stream associated with this adapter.
            </summary>
            <param name="eventInstance">Reference to the event that is dequeued.</param>
            <returns>
            DequeueOperationResult.Success if the operation succeeded.
            DequeueOperationResult.Empty if the operation did not succeed and the adapter 
            needs to wait with further Dequeue calls. After this the adapter 
            can be resumed at any moment by the runtime.
            </returns>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\amd64\Bin\Microsoft.ComplexEventProcessing.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ComplexEventProcessing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings">
            <summary>
            Adapter factories can use this class to instruct the engine on how to automatically advance application time for their adapters.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings.#ctor(Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings,Microsoft.ComplexEventProcessing.AdvanceTimePolicy)">
            <summary>
            Initializes a new instance of the AdapterAdvanceTimeSettings class.
            </summary>
            <param name="generationSettings">Defines how and when the engine should advance application time.</param>
            <param name="policy">Defines the policy how the engine should deal with events that violate the current application time.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings.AdvanceTimePolicy">
            <summary>
            Gets the policy how violations of current application time should be dealt with.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings.AdvanceTimeGenerationSettings">
            <summary>
            Gets the settings that define how and when the engine should advance application time for adapters from this factory.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeFrequencyType">
            <summary>
            Defines when the engine advances application time.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeFrequencyType.EventCount">
            <summary>
            The engine advances time based on the number of events that have been received from the data source.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeFrequencyType.Duration">
            <summary>
            The engine advances time based on the application time of the events that have been received from the data source.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings">
            <summary>
            Defines how and when the engine should advance application time.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.UInt32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the AdvanceTimeSettings class with specified 
            frequency, and delay.
            </summary>
            <param name="eventCount">Defines after how many events the engine advances time again.</param>
            <param name="delay">Defines the time span that application time lags behind. 
            A positive value implements a grace period to allow for out of order events. 
            Smaller values reduce latency. </param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.UInt32,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the AdvanceTimeSettings class with specified 
            frequency, delay and advance to infinity settings.
            </summary>
            <param name="eventCount">Defines after how many events the engine advances time again.</param>
            <param name="delay">Defines the time span that application time lags behind. 
            A positive value implements a grace period to allow for out of order events. 
            Smaller values reduce latency. </param>
            <param name="advanceToInfinityOnShutdown">Specifies whether application time should be advanced to positive infinity 
            in order to entirely flush the query's state when the query shuts down.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the AdvanceTimeSettings class with specified 
            frequency, and delay.
            </summary>
            <param name="duration">Defines how much application time needs to progress in the input before the engine advances time again.</param>
            <param name="delay">Defines the time span that application time lags behind. 
            A positive value implements a grace period to allow for out of order events. 
            Smaller values reduce latency. </param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the AdvanceTimeSettings class with specified 
            frequency, and delay.
            </summary>
            <param name="duration">Defines how much application time needs to progress in the input events before the engine advances time again.</param>
            <param name="delay">Defines the time span that application time lags behind. 
            A positive value implements a grace period to allow for out of order events. 
            Smaller values reduce latency. </param>
            <param name="advanceToInfinityOnShutdown">Controls whether application time should be advanced to infinity 
            when the query shuts down.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.AdvanceToInfinityOnShutdown">
            <summary>
            Gets a value that specifies whether application time should be advanced to positive infinity 
            in order to entirely flush the query's state when the query shuts down.
            The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.AdvanceTimeFrequencyType">
            <summary>
            Gets the policy when the engine advances application time.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.EventCount">
            <summary>
            Gets the event count that defines after how many events the engine advances time again.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.Duration">
            <summary>
            Gets the duration that defines how much application time needs to progress in the input before the engine advances time again.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.Delay">
            <summary>
            Gets the time span that defines how application time lags behind.
            A positive value implements a grace period to allow for out of order events. 
            Smaller values reduce latency. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings">
            <summary>
            Defines another input stream as the source of application time increments (CTIs).
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AdvanceTimeImportSettings class.
            </summary>
            <param name="streamName">Name of the stream that advances application time.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings.StreamName">
            <summary>
            Gets the name of the stream that advances application time.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.AdvanceTimePolicy">
            <summary>
            Defines the different policies for how the engine can handle input events that would violate the current application time..
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimePolicy.Adjust">
            <summary>
            The start time of incoming events is adjusted to the current application time if the event starts before the current application time and end after the current application time.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimePolicy.Drop">
            <summary>
            Incoming events are dropped from the input if they start before the current application time.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeSettings">
            <summary>
            The settings that instruct the engine on how to advance application time for an input stream.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.#ctor(Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings,Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings,Microsoft.ComplexEventProcessing.AdvanceTimePolicy)">
            <summary>
            Initializes a new instance of the AdvanceTimeSettings class which specifies whether application time is advanced
            based on its own input, from another input, or both.
            </summary>
            <param name="generationSettings">Defines how and when the engine should advance application time. 
            If null, then the engine does not automatically advance application time. </param>
            <param name="importSettings">Defines other input streams as sources of application time.
            If null, then application time is not imported from another source. </param>
            <param name="policy">Defines the policy for how the engine should deal with events that violate the current application time.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimePolicy">
            <summary>
            Gets the policy how violations of current application time should be dealt with.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimeSourceType">
            <summary>
            Gets the settings that define what other input streams can advance application time for this stream.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimeGenerationSettings">
            <summary>
            Gets the settings that define how and when the engine should advance application time.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimeImportSettings">
            <summary>
            Gets the settings that define other input streams as sources of application time.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType">
            <summary>
            Defines the options for how application time can be advanced on an input stream.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType.Generate">
            <summary>
            Time is advanced only based on the events received in the input stream.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType.Import">
            <summary>
            Time is advanced by importing application time from another input stream.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType.GenerateAndImport">
            <summary>
            Time is advanced by both events received in the input stream and by importing application time 
            from another input stream. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Application">
            <summary>
            Represents an application on a CEP server. Applications serve as containers for further CEP metadata objects.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.CepObject">
            <summary>
            Represents the base class for CEP metadata objects.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObject._name">
            <summary>
            name of the CepObject, which is a full Uri path
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObject._shortName">
            <summary>
            Short name of the CepObject, without the full Uri path
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObject.#ctor">
            <summary>
            Initializes a new instance of the CepObject class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObject.Validate">
            <summary>
            Validate that this object is valid
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Parses the event type definition.
            </summary>
            <param name="reader">The System.Xml.XmlReader stream to which the object is deserialized.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObject.Delete">
            <summary>
            Deletes the object.
            TODO(tomerv): Why is delete on the object but CreateXXX is on the Application? Create DeleteXXX on the Application instead.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObject.CreateInstance``1">
            <summary>
            Factory method to construct a CepObject. Used by the server proxy to deserialize a CepObject from the server.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObject.Name">
            <summary>
            Gets the name of this object.
            </summary>
            <value>The name of the object.</value>
            <remarks>The URI value of this property represents the name of the CEP object in metadata,
            according to the CEP name hierarchy.</remarks>
            <example>
            <code>
            Application app = server.CreateApplication("MyApp");
            InputAdapter inputAdapter = app.CreateInputAdapter{MyFactory}("MyInputAdapter", "");
            Console.WriteLine(inputAdapter.Name);
            </code>
            This code will produce the following output:
            <code>
            cep:/Server/Application/MyApp/InputAdapter/MyInputAdapter
            </code>
            </example>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObject.ShortName">
            <summary>
            Gets the short name of this object.
            </summary>
            <value>The relative URI of the CEP object, without the full metadata path of the object.</value>
            <example>
            <code>
            Application app = server.CreateApplication("MyApp");
            InputAdapter inputAdapter = app.CreateInputAdapter{MyFactory}("MyInputAdapter", "");
            Console.WriteLine(inputAdapter.Name);
            </code>
            This code will produce the following output:
            <code>
            MyInputAdapter
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateInputAdapter``1(System.String,System.String)">
            <summary>
            Creates a CEP input adapter object based on an adapter factory class.
            </summary>
            <typeparam name="TInputAdapterFactory">The input adapter factory class that instantiates the adapter.</typeparam>
            <param name="name">The name for the input adapter object in metadata.</param>
            <param name="description">The description for the input adapter object in metadata.</param>
            <returns>The new input adapter object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateOutputAdapter``1(System.String,System.String)">
            <summary>
            Creates a CEP output adapter object based on an adapter factory class.
            </summary>
            <typeparam name="TOutputAdapterFactory">The output adapter factory class that instantiates the adapter.</typeparam>
            <param name="name">The name for the output adapter object in metadata.</param>
            <param name="description">The description for the output adapter object in metadata.</param>
            <returns>The new output adapter object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.GetPublishedStreamInputAdapter">
            <summary>
            Gets the built-in published stream input adapter that can be used for dynamic query composition.
            </summary>
            <returns>The published stream input adapter.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.GetPublishedStreamOutputAdapter">
            <summary>
            Gets the built-in published stream output adapter that can be used for dynamic query composition.
            </summary>
            <returns>The published stream output adapter.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateQueryTemplate(System.Xml.XmlReader)">
            <summary>
            Creates a new query template from its XML representation.
            </summary>
            <remarks>
            Apart from specifying query templates through LINQ, they can also be given
            directly in their low-level XML representation, according to the StreamInsight
            metadata XML schema (http://schemas.microsoft.com/ComplexEventProcessing).
            <para></para>
            </remarks>
            <seealso cref="P:Microsoft.ComplexEventProcessing.QueryTemplate.Definition">You can inspect the XML translation of
            a registered query template that was
            given in LINQ through the property QueryTemplate.Definition</seealso>
            <param name="queryTextReader">The XML query template definition.</param>
            <returns>The new query template object being created.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateQueryTemplate``1(System.String,System.String,Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
            <summary>
            Creates a new query template from a LINQ expression.
            </summary>
            <example>
            <code>
            var inputstream = CepStream{RawData}.Create("filterInput");
            var filtered = from e in inputstream
                           where e.Value > 30
                           select e;
            QueryTemplate filterQT = application.CreateQueryTemplate("filterLogic", "Description of the query template", filtered);
            </code>
            </example>
            <param name="queryTemplateName">The name for the query template in metadata.</param>
            <param name="description">description of the query template</param>
            <param name="streamDefinition">The query template definition.</param>
            <returns>The new query template object being created.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateQuery(System.String,System.String,Microsoft.ComplexEventProcessing.QueryBinder)">
            <summary>
            Creates a query from a query binder.
            </summary>
            <param name="name">The name for the query object in metadata.</param>
            <param name="description">The description for the query in metadata.</param>
            <param name="queryBinder">The binder object that contains the input and
            output binding information for the query.</param>
            <exception cref="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException">The exception that is thrown when
            the query creation fails, e.g., due to missing bindings in the query binder.</exception>
            <returns>The new query object being generated</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateQuery(System.String,System.Uri,System.String,Microsoft.ComplexEventProcessing.InputStreamBinding[],Microsoft.ComplexEventProcessing.OutputStreamBinding[])">
            <summary>
            Creates a new query.
            </summary>
            <param name="name">Name of the query.</param>
            <param name="queryTemplateName">Name of the query template.</param>
            <param name="description">Description of the query.</param>
            <param name="inputStreamBindings">Input stream bindings of the query.</param>
            <param name="outputStreamBindings">Output stream bindings of the query.</param>
            <returns>The new query being created.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.Delete">
            <summary>
            Deletes the query from the application in metadata.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.CreateEventType``1">
            <summary>
            Creates a new event type out of a Clr type.
            </summary>
            <typeparam name="TEventType">Clr type that is the model for the new event type.
            </typeparam>
            <remarks>The type will be created with a default name, the default name is the
            short name of the CLR type</remarks>
            <returns>The new event type being created.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.Validate">
            <summary>
            Validate that this object is valid
            TODO: implement this for all application objects
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.ToXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.TryGetApplicationObject``1(System.String,``0@)">
            <summary>
            Retrieves the ApplicationObject from the server using short name.
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="name"></param>
            <param name="cepObject"></param>
            <returns>bool indicating whether object was found</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.TryGetApplicationObject``1(System.Uri,``0@)">
            <summary>
            Retrieves the ApplicationObject from the server using Uri.
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="name"></param>
            <param name="cepObject"></param>
            <returns>bool indicating whether object was found</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.GetAllApplicationObjects``1">
            <summary>
            Retrieves all objects of the specified type from the server.
            </summary>
            <typeparam name="TObject"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Application.GetCollection``1">
            <summary>
            Helper function that returns a collection of child objects of the current object.
            </summary>
            <typeparam name="TObject">Type of object in the collection.</typeparam>
            <returns>A collection of child objects</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Application.Server">
            <summary>
            Gets a reference to the server in which the application resides.
            </summary>
            <value>
            The server object that is hosting the application.
            </value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Application.Queries">
            <summary>
            Gets the collection of queries defined in the application.
            </summary>
            <value>
            The collection of query objects that are defined in the application.
            </value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Application.QueryTemplates">
            <summary>
            Gets the collection of query templates defined in the application.
            </summary>
            <value>
            The collection of query template objects that are defined in the application.
            </value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Application.EventTypes">
            <summary>
            Gets the collection of event types defined in the application.
            </summary>
            <value>
            The collection of event type objects that are defined in the application.
            </value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Application.InputAdapters">
            <summary>
            Gets the collection of input adapters defined in the application.
            </summary>
            <value>
            The collection of input adapter objects that are defined in the application.
            </value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Application.OutputAdapters">
            <summary>
            Gets the collection of output adapters defined in the application.
            </summary>
            <value>
            The collection of output adapter objects that are defined in the application.
            </value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Application.CepObjectCollectionSource">
            <summary>
            Helper class to retrieve objects rooted at this application.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ICepObjectCollectionSource">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ApplicationObject">
            <summary>
            Base class for all objects that are contained in an application.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ApplicationObject.#ctor">
            <summary>
            Initializes a new instance of ApplicationObject class 
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ApplicationObject.Validate">
            <summary>
            Validate that this object is valid
            TODO: implement this for all application objects
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ApplicationObject.Delete">
            <summary>
            Deletes the object.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ApplicationObject.Application">
            <summary>
            Gets the hosting application.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1">
            <summary>
            Implements a generic read-only collection for CEP metadata objects.
            </summary>
            <remarks>
            This collection populates its underlying list on demand (such as on call to Count or GetEnumerator)
            from the collection source. Once the underlying list is populated, it is cached for the lifetime
            of this object. The indexer retrieves objects directly from the collection source or from the
            underlying list if it has been populated.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.#ctor(Microsoft.ComplexEventProcessing.ICepObjectCollectionSource)">
            <summary>
            Construct a new read-only collection with the given collection source.
            </summary>
            <param name="collectionSource"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Add(System.String,`0)">
            <summary>
            Not supported.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@T}}#Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Not supported.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@T}}#Clear">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Indicates whether the collection contains the given item.
            </summary>
            <param name="item">The item to search in the collection</param>
            <returns>true if the item is contained in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.ContainsKey(System.String)">
            <summary>
            Indicates whether the collection contains the given key.
            </summary>
            <param name="key">The key to search in the collection</param>
            <returns>true if the key is contained in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
            <summary>
            Copies the elements of the collection to a given
            array, starting at a particular array index.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The array index to start copying to.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Remove(System.String)">
            <summary>
            Not supported.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@T}}#Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Not supported.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.TryGetValue(System.String,`0@)">
            <summary>
            Tries to get the value given the key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">The value for the key, if the key exists</param>
            <returns>When this method returns, contains the value associated with the
            specified key, if the key is found; otherwise, the default value for the type
            of the value parameter.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.InitializeData">
            <summary>
            Initialize the underlying dictionary from the underlying collection source.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.IsReadOnly">
            <summary>
            Gets the accessibility of the collection.
            </summary>
            <value>Always returns true, indicating that the collection is read-only.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Keys">
            <summary>
            Gets the keys of the collection.
            </summary>
            <value>The read-only collection of keys.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Values">
            <summary>
            Gets the values of the collection.
            </summary>
            <value>The read-only collection of values.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Item(System.String)">
            <summary>
            Gets metadata objects by name.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Item(System.String)">
            <summary>
            Retrieve object by name.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.CepObjectType">
            <summary>
            Enum representing all the possible types of objects.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.Query">
            <summary>
            Query object
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.QueryTemplate">
            <summary>
            QueryTemplate object
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.InputAdapter">
            <summary>
            InputAdapter object
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.OutputAdapter">
            <summary>
            OutputAdapter object
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.EventType">
            <summary>
            EventType object
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.Application">
            <summary>
            Application object
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.CepObjectType.StreamingServer">
            <summary>
            StreamingServer object
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ConnectionException">
            <summary>
            Exception thrown when connecting to a server fails.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ManagementException">
            <summary>
            Exception thrown when creating a type fails.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor">
            <summary>
            Initializes a new instance of the ManagementException class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ManagementException class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ManagementException class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ManagementException class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor">
            <summary>
            Initializes a new instance of the ConnectionException class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConnectionException class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ConnectionException class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ConnectionException class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.DiagnosticAspect">
            <summary>
            Enumeration of different diagnostics aspects that can be turned on or off separately.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.DiagnosticViews">
            <summary>
            Diagnostic views
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.Debug">
            <summary>
            Debug tracing - enter/exit methods, exceptions, etc.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.StateChanges">
            <summary>
            Tracing of creation, destruction and state changes of objects in the engine
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.CepEventTracing">
            <summary>
            Tracing of CEP events as the progress through the queries
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.GenerateErrorReports">
            <summary>
            Generate error reports on query crashes.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.DiagnosticLevel">
            <summary>
            Enumeration of different verbosity levels for the diagnostic aspects.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Always">
            <summary>
            The least verbose diagnostic level. Only diagnostics that are always on are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Critical">
            <summary>
            Critical diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Error">
            <summary>
            Error diagnostics are enabled on this level. 
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Warning">
            <summary>
            Warning diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Informational">
            <summary>
            Informational diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Verbose">
            <summary>
            The most verbose diagnostic level. All diagnostics are enabled on this level.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.DiagnosticSettings">
            <summary>
            Represents a collection of diagnostic settings.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticSettings.#ctor">
            <summary>
            Initializes a new instance of the DiagnosticSettings class with the default values
            of diagnostic aspects None and verbosity level Critical.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticSettings.#ctor(Microsoft.ComplexEventProcessing.DiagnosticAspect,Microsoft.ComplexEventProcessing.DiagnosticLevel)">
            <summary>
            Initializes a new instance of the DiagnosticSettings class with the given
            diagnsotic aspects and level.
            </summary>
            <param name="aspects">The diagnostic aspects.</param>
            <param name="level">The diagnostic level.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticSettings.Aspects">
            <summary>
            Gets or sets different diagnostics aspects that can be turned on or off separately.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticSettings.Level">
            <summary>
            Gets or sets different verbosity levels for the diagnostic aspects.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.DiagnosticView">
            <summary>
            Represents a diagnostic view for a single engine object as a bag of name-value pairs (properties).
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.GetProperty``1(Microsoft.ComplexEventProcessing.DiagnosticViewProperty)">
            <summary>
            Gets the value for a specific property.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The property name.</param>
            <returns>The value of the given property.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.GetProperty``1(System.String)">
            <summary>
            Gets the value for a specific property.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The property name.</param>
            <returns>The value of the given property.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Add(System.String,System.Object)">
            <summary>
            This method is not supported because instances of this class are read-only.
            Attempts to invoke the method will result in an exception being thrown.
            </summary>
            <param name="key">The element's key.</param>
            <param name="value">The element's value.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.ContainsKey(System.String)">
            <summary>
            Determines whether the diagnostic view collection contains an element with the specified key.
            </summary>
            <param name="key">The element's key.</param>
            <returns>True if the collection contains the element and false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Remove(System.String)">
            <summary>
            This method is not supported because instances of this class are read-only.
            Attempts to invoke the method will result in an exception being thrown.
            </summary>
            <param name="key">the key of the element to remove</param>
            <returns>true if the element is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">the key of the element to get </param>
            <param name="value">the return value</param>
            <returns>true if the element with given key is found</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            This method is not supported because instances of this class are read-only.
            Attempts to invoke the method will result in an exception being thrown.
            </summary>
            <param name="item">The item to be added.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Clear">
            <summary>
            This method is not supported because instances of this class are read-only.
            Attempts to invoke the method will result in an exception being thrown.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Checks if the diagnostic view contains the given key-value pair.
            </summary>
            <param name="item">The key-value pair to check.</param>
            <returns>true if the diagnostic view contains the given key-value pair; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the collection to a given
            array, starting at a particular array index.
            </summary>
            <param name="array">The array to copy to.</param>
            <param name="arrayIndex">The array index to start copying to.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            This method is not supported because instances of this class are read-only.
            Attempts to invoke the method will result in an exception being thrown.
            </summary>
            <param name="item">the key/value pari to remove</param>
            <returns>true if the item is successfully removed</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.GetEnumerator">
            <summary>
            Returns the enumerator that can enumerate the diagnostic view items
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.ObjectName">
            <summary>
            Gets the name of the object for ths diagnostic view.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Item(Microsoft.ComplexEventProcessing.DiagnosticViewProperty)">
            <summary>
            Gets or sets the value of the specified property.
            </summary>
            <param name="property">The property to get or set the value for.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Keys">
            <summary>
            Gets an System.Collections.Generic.ICollection containing the keys of the diagnostic view
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Values">
            <summary>
            Gets an System.Collections.Generic.ICollection containing the keys of
             this diagnostic view
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Item(System.String)">
            <summary>
            Gets the element with the specified key. Setting the value of the element is not supported
            because instances of this class are read-only. Attempts to set the value will result in an
            exception being thrown.
            </summary>
            <param name="key">The key of the element to get or set the value of.</param>
            <returns>The value of the element.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Count">
            <summary>
            Gets the number of items in the collection
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.IsReadOnly">
            <summary>
            Gets whether or not the diagnostic view is read only
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.DiagnosticViewProperty">
            <summary>
            Enumeration of all diagnostic view properties.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterState">
            <summary>
            The current state of the adapter (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterTotalSuspendCount">
            <summary>
            The total number of times the adapter was suspended (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterTotalTimeInSuspendedState">
            <summary>
            The total time the adapter was in suspended state (TimeSpan).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterTotalTimeInNonSuspendedState">
            <summary>
            The total time the adapter was in a non-suspended state (TimeSpan).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterStateTransitionHistory">
            <summary>
            The XML representation of the last few adapter state transitions (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterFirstCtiTimestamp">
            <summary>
            The timestamp of the first CTI (in application time) produced or consumed by the adapter (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.BranchParentOperatorId">
            <summary>
            The ID of the Group operator for the branch (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.BranchGroupingFields">
            <summary>
            The XML representation of the values of the grouping fields for the branch (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllEventsCount">
            <summary>
            The number of all events allocated in the server instance (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllEventsMemory">
            <summary>
            The total amount of memory (in bytes) used by all events on the server instance (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorId">
            <summary>
            The ID of the operator (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorKind">
            <summary>
            The kind of the operator (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorQueryId">
            <summary>
            The ID of the query for the operator (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorSystemInstance">
            <summary>
            Boolean value indicating whether the operator is a system operator (Boolean).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorEventType">
            <summary>
            The XML representation of the type of the events produced by the operator (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorSchedulerId">
            <summary>
            The ID of the scheduler for the operator (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalInputEventCount">
            <summary>
            The total number of input events for the operator (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalOutputEventCount">
            <summary>
            The total number of output events for the operator (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorIndexEventCount">
            <summary>
            The total number of events in the operator's indexes (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorEventMemory">
            <summary>
            The amount of memory used (in bytes) by the events in the operator's indexes (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorIndexMemory">
            <summary>
            The amount of memory used (in bytes) by the indexes in the operator (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalCpuUsage">
            <summary>
            The total CPU usage of the operator in milliseconds (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalScheduledCount">
            <summary>
            The total number of times the operator was scheduled (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorLastOutputCtiTimestamp">
            <summary>
            The timestamp of the last CTI (in application time) produced by the operator (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalOutputCtiCount">
            <summary>
            The total number of CTI events produced by the operator (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorEventCountSinceLastCti">
            <summary>
            The number of events produced by the operator since the last CTI (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllQueriesCount">
            <summary>
            The number of all queries instantiated on the server (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllQueriesOperatorCount">
            <summary>
            The number of all operators instantiated on the server (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllQueriesStreamCount">
            <summary>
            The number of all streams instantiated on the server (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamId">
            <summary>
            The ID of the published stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamEventShape">
            <summary>
            The event shape of the events in the published stream (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamEventType">
            <summary>
            The XML representation of the event type of the events in the published stream (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamEventCount">
            <summary>
            The number of events in the published stream (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamTotalEventCount">
            <summary>
            The total number of events produced on the published stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamProducerCount">
            <summary>
            The number of queries producing events in the published stream (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamConsumerCount">
            <summary>
            The number of queries consuming events from the published stream (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryId">
            <summary>
            The ID of the query (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QuerySystemInstance">
            <summary>
            Boolean value indicating whether the query is a system query (Boolean).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryInstanceGroupId">
            <summary>
            The instance group ID of the query (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryCreationTime">
            <summary>
            The time when the query instance was created (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryStartTime">
            <summary>
            The start time of the query (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryEndTime">
            <summary>
            The end time of the query (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryState">
            <summary>
            The current state of the query (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryException">
            <summary>
            The last exception that occurred in the query (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalIncomingEventCount">
            <summary>
            The total number of incoming events for the query (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalConsumedEventCount">
            <summary>
            The total number of events consumed by the query (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalProducedEventCount">
            <summary>
            The total number of events produced by the query (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalOutgoingEventCount">
            <summary>
            The total number of outgoing events for the query (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastIncomingEventTimestamp">
            <summary>
            The system time of the last incoming event for the query (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastConsumedEventTimestamp">
            <summary>
            The system time of the last consumed event for the query (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastProducedEventTimestamp">
            <summary>
            The system time of the last produced event for the query (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastOutgoingEventTimestamp">
            <summary>
            The system time of the last outgoing event for the query (DateTime).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalConsumedEventLatency">
            <summary>
            The total latency (in milliseconds) of all events consumed by the query (Double).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalProducedEventLatency">
            <summary>
            The total latency (in milliseconds) of all events produced by the query (Double).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalOutgoingEventLatency">
            <summary>
            The total latency (in milliseconds) of all outgoing events for the query (Double).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastProducedCtiTimestamp">
            <summary>
            The timestamp (in application time) of the last CTI produced by the query.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerId">
            <summary>
            The ID of the scheduler (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerState">
            <summary>
            The current state of the scheduler (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerStateTransitionHistory">
            <summary>
            The XML representation of the last few scheduler state transitions (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerCurrentTaskId">
            <summary>
            The ID of the currently running task on the scheduler (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerActiveTaskCount">
            <summary>
            The number of active tasks on the scheduler (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerDormantTaskCount">
            <summary>
            The number of dormant tasks on the scheduler (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerAsyncRunningTaskCount">
            <summary>
            The number of running asynchronous tasks on the scheduler (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerCommandQueueLength">
            <summary>
            The lenght of the scheduler command queue (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerLastErrorTaskId">
            <summary>
            The ID of the last task that hit an error on the scheduler (Int32).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerLastTaskError">
            <summary>
            The last task error on this scheduler (String).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTaskCount">
            <summary>
            The number of tasks on the scheduler (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalBusyTime">
            <summary>
            The total busy time (in milliseconds) of the scheduler (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalIdleTime">
            <summary>
            The total idle time (in milliseconds) of the scheduler (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalContextSwitchTime">
            <summary>
            The total context switch time (in milliseconds) of the scheduler (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalContextSwitchCount">
            <summary>
            The total number of context switches for the scheduler (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalTaskErrorCount">
            <summary>
            The total number of task errors on the scheduler (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamId">
            <summary>
            The ID of the stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamQueryId">
            <summary>
            The ID of the query for the stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamSourceOperatorId">
            <summary>
            The ID of the source operator for the stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamTargetOperatorId">
            <summary>
            The ID of the target operator for the stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamSystemInstance">
            <summary>
            Boolean value indicating whether the stream is a system stream (Boolean).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamTotalInputEventCount">
            <summary>
            The total number of input events for the stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamEventCount">
            <summary>
            The number of events in the stream (Int64).
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamMemoryIncludingEvents">
            <summary>
            The amount of memory (in bytes) used by the stream and all events in it (Int64).
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions">
            <summary>
            This class contains the extension methods to the Qeury class for dynamic query composition.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query)">
            <summary>
            Creates a new input stream bound to the output event stream of an existing query.
            </summary>
            <typeparam name="TPayload">The type of the payload for the new stream.</typeparam>
            <param name="query">The existing query.</param>
            <returns>An instance of the CepStream class that can be used to create new queries.</returns>
            <example>
            <code>
            Application myApp = server.CreateApplication("MyApp");
            var inputstream = CepStream{TPayload}.Create("inputStream", typeof(InputFactory), inConf, EventShape.Point);
            var filtered = from e in inputstream
                           where e.Value > 25
                           select e;
            var query = filtered.ToQuery(myApp, "filterQuery", "", typeof(OutputFactory), outConf, EventShape.Point, StreamEventOrder.FullyOrdered);
            var filteredStream = query.ToStream{TPayload}();
            var validated = from e in filteredStream
                            select new
                            {
                                SourceId = e.SourceId,
                                Value = e.Value,
                                Status = e.Value > 75 ? false : true
                            };
            var validationQuery = validated.ToQuery("validationQuery", "", typeof(OutputFactory), outConf2, EventShape.Point, StreamEventOrder.FullyOrdered);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query,System.String)">
            <summary>
            Creates a new input stream with a given name bound to the output event stream of an existing query.
            </summary>
            <remarks>The given stream name can be used to bind with a query binder, and to retrieve diagnostics.</remarks>
            <typeparam name="TPayload">The type of the payload for the new stream.</typeparam>
            <param name="query">The existing query.</param>
            <param name="streamName">The name of the input stream in the query template.</param>
            <returns>An instance of the CepStream class that can be used to create new queries.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Creates a new input stream with given advance time settings bound to the output event stream of an existing query.
            </summary>
            <typeparam name="TPayload">The type of the payload for the new stream.</typeparam>
            <param name="query">The existing query.</param>
            <param name="advanceTimeSettings">The advance time settings for the stream.</param>
            <returns>An instance of the CepStream class that can be used to create new queries.</returns>
            <remarks>The specified AdvanceTimeSettings object provides the option to advance application time
            in addition to the current time increment events in the output stream of the existing query.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query,System.String,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Creates a new input stream with given name and advance time settings bound to the output event stream of an existing query.
            </summary>
            <typeparam name="TPayload">The type of the payload for the new stream.</typeparam>
            <param name="query">The existing query.</param>
            <param name="streamName">The name of the input stream in the query template.</param>
            <param name="advanceTimeSettings">The advance time settings for the stream.</param>
            <returns>An instance of the CepStream class that can be used to create new queries.</returns>
            <remarks>
            <para>The given stream name can be used to bind with a query binder, and to retrieve diagnostics.</para>
            <para>The specified AdvanceTimeSettings object provides the option to advance application time
            in addition to the current time increment events in the output stream of the existing query.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ValidatePublishedStreamName(System.Uri)">
            <summary>
            Validates that the given name is a valid published stream name. Valid names are:
            1. Query names
            2. Explicit published stream names - e.g. cep:/Server/Application/app1/PublishedStream/ps1
            </summary>
            <param name="publishedStreamName">The stream name.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ValidateExplicitPublishedStreamName(System.Uri)">
            <summary>
            Validates that the given name is a valid explicit published stream name - 
            e.g. cep:/Server/Application/app1/PublishedStream/ps1
            </summary>
            <param name="publishedStreamName">The stream name.</param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EmbeddedServerProxy">
            <summary>
            Wrapper for the instance of IServerProxy that runs in process.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.IServerProxy">
            <summary>
            Represents the public management surface of a Cep server.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.Create(System.Xml.XmlReader,System.Uri)">
            <summary>
            Creates an object from its xml definition.
            </summary>
            <param name="definition">object's definition as xml</param>
            <param name="parentName">name of the parent object</param>
            <returns>The object's name as a Uri</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.Delete(System.Uri)">
            <summary>
            Deletes an object.
            </summary>
            <param name="name">Object's name.</param>
            <remarks>this function will throw if there are runtime or static 
            dependencies on the object being deleted.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.Get(System.Uri)">
            <summary>
            Retrieves the definition of an object.
            </summary>
            <param name="name">Object's name</param>
            <returns>Object's definition, if name corresponds to an existing object, 
            otherwise null.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.Enumerate(System.Uri)">
            <summary>
            Enumerates a collection of objects.
            </summary>
            <param name="name">the name of the parent object</param>
            <returns>all the objects that belong to the respective collection.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.StartQuery(System.Uri)">
            <summary>
            Starts a queryTemplate.
            </summary>
            <param name="name">Name of the queryTemplate.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.StopQuery(System.Uri)">
            <summary>
            Stops a queryTemplate.
            </summary>
            <param name="name">Name of the queryTemplate.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.GetDiagnosticSettings(System.Uri)">
            <summary>
            Gets the diagnostic settings for an object.
            </summary>
            <param name="name">Object's name.</param>
            <returns>The diagnostic settings for he object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.SetDiagnosticSettings(System.Uri,Microsoft.ComplexEventProcessing.DiagnosticSettings)">
            <summary>
            Sets the diagnostic setting for an object.
            </summary>
            <param name="name">Object's name.</param>
            <param name="diagnosticSettings">The new diagnostic settings to be set.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.ClearDiagnosticSettings(System.Uri)">
            <summary>
            Clears the diagnostic settings for an object. After this operation, 
            the object iherits the diagnostic settings from its parent.
            </summary>
            <param name="name">Object's name.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.GetDiagnosticView(System.Uri)">
            <summary>
            Gets the diagnostic view for an object.
            </summary>
            <param name="name">Object's name.</param>
            <returns>The diagnostic view information for the object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.IServerProxy.CreateManagementService">
            <summary>
            Returns a management service implementation for the current server.
            If the server is a remote server the metod will throw an exception.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.IServerProxy.IsEmbedded">
            <summary>
            Determines whether this proxy is embedded or remoted
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the embedded server class with in-memory metadata provider.
            </summary>
            <param name="instanceName">Name of StreamInsight instance</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the embedded server class with SqlCe metadata provider.
            </summary>
            <param name="instanceName">Name of StreamInsight instance</param>
            <param name="sqlCeDatasource">SqlCe database filename</param>
            <param name="createIfMissing">Directs whether to create the metadata database 
            if it is missing.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.Create(System.Xml.XmlReader,System.Uri)">
            <summary>
            Creates an object from its xml definition.
            </summary>
            <param name="definition">object's definition as xml</param>
            <param name="parentName">name of the parent object</param>
            <returns>The object's name as a Uri</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.Delete(System.Uri)">
            <summary>
            Deletes an object.
            </summary>
            <param name="name">Object's name.</param>
            <remarks>this function will throw if there are runtime or static 
            dependencies on the object being deleted.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.Get(System.Uri)">
            <summary>
            Retrieves the definition of an object.
            </summary>
            <param name="name">Object's name</param>
            <returns>Object's definition, if name corresponds to an existing object, 
            otherwise null.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.Enumerate(System.Uri)">
            <summary>
            Enumerates a collection of objects.
            </summary>
            <param name="name">the name of the parent object</param>
            <returns>all the objects that belong to the respective collection.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.StartQuery(System.Uri)">
            <summary>
            Starts a queryTemplate.
            </summary>
            <param name="name">Name of the queryTemplate.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.StopQuery(System.Uri)">
            <summary>
            Stops a queryTemplate.
            </summary>
            <param name="name">Name of the queryTemplate.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.GetDiagnosticSettings(System.Uri)">
            <summary>
            Gets the diagnostic settings for an object.
            </summary>
            <param name="name">Object's name.</param>
            <returns>The diagnostic settings for he object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.SetDiagnosticSettings(System.Uri,Microsoft.ComplexEventProcessing.DiagnosticSettings)">
            <summary>
            Sets the diagnostic setting for an object.
            </summary>
            <param name="name">Object's name.</param>
            <param name="diagnosticSettings">The new diagnostic settings to be set.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.ClearDiagnosticSettings(System.Uri)">
            <summary>
            Clears the diagnostic settings for an object. After this operation, 
            the object iherits the diagnostic settings from its parent.
            </summary>
            <param name="name">Object's name.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.GetDiagnosticView(System.Uri)">
            <summary>
            Gets the diagnostic view for an object.
            </summary>
            <param name="name">Object's name.</param>
            <returns>The diagnostic view information for the object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.Dispose">
            <summary>
            Releases all the resources references by this object.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.CreateManagementService">
            <summary>
            Returns a management service implementation for the current server.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.ConfigureStreamOS(Microsoft.ComplexEventProcessing.InstanceManager.Instance)">
            <summary>
            Constructs a StreamOSConfiguration object based on SKU-specific settings.
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.CheckEvalExpiration(Microsoft.ComplexEventProcessing.InstanceManager.Instance)">
            <summary>
            Checks whether the evalution time is expired for this instance.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.GetSchedulerCountForInstance(Microsoft.ComplexEventProcessing.InstanceManager.Instance)">
            <summary>
            Gets the scheduler count for the given instance
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.IsEmbedded">
            <summary>
            Determines whether this proxy is embedded or remoted
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EmbeddedServerProxy.CommandDispatcher">
            <summary>
            Returns the CommandDispatcher associated with this instance.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.CepEventType">
            <summary>
            Represents an event type that is used by a CEP application. Event payloads as well as their fields have associated CEP event types.
            </summary>
            <remarks>
            <para>An event type defines the structure of CEP events. A CEP stream is always of one specific event type
            and thus can contain only events with this structure. An event type is based on a CLR struct or class
            and as such implictly registered with an application when necessary. The registration of a LINQ query
            template object in an application, for instance, will implicitly create the input and output event types
            in that application, based on the CLR types that are input and result of the LINQ statement.</para>
            <para>An event type contains a list of atomic fields, which in turn are of a certain CEP event type.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.#ctor(Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Initializes a new instance of the EventType class from a 
            runtime represenation of an event type.
            </summary>
            <param name="runtimeEventType"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.#ctor(System.Uri,System.Type,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the EventType class.
            </summary>
            <param name="name"></param>
            <param name="clrType"></param>
            <param name="nullable"></param>
            <param name="isSizeFixed"></param>
            <param name="maxSize"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.Match(Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Check if the current event type matches the given event type. Two CepEventType is said to match when
             -- they have the same number of fields
             -- all coresponding fields (by ordinal) have the same name, type, nullability and size
             -- the field can have different culture
            </summary>
            <param name="anotherEventType"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.FromXml(System.Xml.XmlReader)">
            <summary>
            Parses the event type definition.
            </summary>
            <param name="xmlReader"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.FixNullableTypeName(System.String)">
            <summary>
            Fix the Nullable type name by patching System.Nullable`1[] on it
            </summary>
            <param name="typeName"></param>
            <returns>
            input: System.Int32 --> output: System.Nullable`1[Int32]
            </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.TypeIsAlwaysNullable(System.String)">
            <summary>
            Check if the given builtin type is nullable
            </summary>
            <param name="typeName"></param>
            <returns>true if nullable, false otherwise</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventType.MakeRelativeEventName(System.Uri)">
            <summary>
            Build short name based on the specified Uri. This is used when the application object is not present,
            such as when the EventType is used on the server-side by adapters / UDOs.
            </summary>
            <param name="name">object name uri</param>
            <returns>
            string representing the short name
            </returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventType.InternalFields">
            <summary>
            Gets / sets internal fields collection
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventType.InternalFieldsByOrdinal">
            <summary>
            Gets / sets internal fields collection
            </summary>
            <returns>Dictionary</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventType.Fields">
            <summary>
            Gets the collection of fields of the event type by their name, ordered lexicographically.
            </summary>
            <returns>A dictionary containing all fields
            in the CEP event type, ordered lexicographically by name. Null, if the type is an event field itself.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventType.FieldsByOrdinal">
            <summary>
            Gets the collection of fields of the event type by ordinal.
            </summary>
            <returns>A dictionary containing all fields
            in the CEP event type by ordinal. Null, if the type is an event field itself.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventType.ClrType">
            <summary>
            Gets the Common Language Runtime type equivalent of the CEP event type.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.CepEventTypeField">
            <summary>
            Represents a single field in a CEP event type.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepEventTypeField.#ctor(System.String,Microsoft.ComplexEventProcessing.CepEventType,System.Globalization.CultureInfo,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EventTypeField class.
            </summary>
            <param name="name">The name of the field.</param>
            <param name="type">The runtime type of the field.</param>
            <param name="culture">The culture settings of the field.</param>
            <param name="ordinal">The define ordinal of the field.</param>
            <param name="maxSize">the field's maximum size.</param>
            <param name="sizeFixed">Whether or not the field is fixed size</param>
            <param name="nullable">Whether or not the field is nullable</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.Name">
            <summary>
            Gets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.Type">
            <summary>
            Gets the CEP event type of the field.
            </summary>
            <value>The run-time type of the field.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.CultureInfo">
            <summary>
            Gets the culture settings of the field. 
            </summary>
            <value>The culture information that contains the field's culture settings.
            These setting are used for culture-sensitive operations. If null, the default culture settings 
            are used.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.Ordinal">
            <summary>
            Gets the ordinal of the field.
            </summary>
            <value>The ordinal value of the field within the CEP event type.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.IsFixedSize">
            <summary>
            Gets a value indicating whether the field size is fixed.
            </summary>
            <value>true if the field size is fixed, false otherwise.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.MaxSize">
            <summary>
            Gets the maximum size of this field, in bytes.
            </summary>
            <remarks></remarks>
            <returns>The maximum size of the field in bytes.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.IsNullable">
            <summary>
            Gets a value indicating whether or not the field is nullable.
            </summary>
            <returns>true, if the field can be null, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.InputAdapter">
            <summary>
            Class that represents an input adapter as CEP metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputAdapter.Description">
            <summary>
            Gets the description of this input adapter.
            </summary>
            <value>The description that was specified when the adapter was registered.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputAdapter.FactoryClassName">
            <summary>
            Gets the full name of the adaper factory class.
            </summary>
            <value>The full name of the adapter factory class, including the assembly name.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputAdapter.IsTyped">
            <summary>
            Gets or sets a value that indicates whether or not this factory is a typed factory.
            </summary>
            <value>true if the factory is typed; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.InputStreamBinding">
            <summary>
            Represents binding information for an input stream of a query.
            </summary>
            <remarks>
            An input binding includes information such as the bound event source, the event structure
            of that input stream, and settings for advancing application time for that stream.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InputStreamBinding.#ctor">
            <summary>
            Initializes a new instance of the InputStreamBinding class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InputStreamBinding.#ctor(System.Uri,System.Uri,Microsoft.ComplexEventProcessing.EventShape,System.Object,System.Type,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Initializes a new instance of the InputStreamBinding class
            </summary>
            <param name="streamName"></param>
            <param name="streamSource"></param>
            <param name="streamEventShape"></param>
            <param name="configInfo"></param>
            <param name="payloadType"></param>
            <param name="advanceTimeSettings"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InputStreamBinding.TryGetConfigInfo``1(``0@)">
            <summary>
            Returns an instance of a initialization info structure.
            If the underlying XML cannot be converted into this structure an exception will be thrown.
            </summary>
            <typeparam name="TConfigInfo">Type of the initialization structure that is returned.</typeparam>
            <param name="configInfo">An instance of the configuration structure.</param>
            <returns>true if a configuration structure could be retrieved; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InputStreamBinding.SetConfigInfo``1(``0)">
            <summary>
            Set initialization information for input adapter
            </summary>
            <typeparam name="TConfigInfo">the init information type</typeparam>
            <param name="configInfo">the initialization information for the input adapter</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.AdvanceTimeSettings">
            <summary>
            Gets the AdvanceTimeSettings for this input binding.
            </summary>
            <value>The settings that specify how to advance application time for this input binding.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.StreamSource">
            <summary>
            Gets the name of the source for this input binding.
            </summary>
            <value>The full name of the event source.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.StreamName">
            <summary>
            Gets the name of the input stream for this binding.
            </summary>
            <value>The full name of the input stream.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.PayloadClassName">
            <summary>
            Gets the name of the stream's payload class for this binding.
            </summary>
            <value>The payload class name of this stream.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.EventShape">
            <summary>
            Gets the shape of the input stream of this binding.
            </summary>
            <value>The event shape of the input stream of this binding.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.ConfigInfo">
            <summary>
            Gets or sets the configuration information for the input adapter factory
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException">
            <summary>
            Exception thrown when creating a CEP metadata object fails.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor">
            <summary>
            Initializes a new instance of the InvalidDefinitionException class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidDefinitionException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidDefinitionException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidDefinitionException class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.InvalidNameException">
            <summary>
            Exception thrown when creating a type fails.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor">
            <summary>
            Initializes a new instance of the InvalidNameException class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidNameException class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidNameException class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidNameException class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.NameBuilder">
            <summary>
            Utility class for manipulating Object Model names
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.CreateRootName">
            <summary>
            Gets the address of the root node of the metadata objects.
            </summary>
            <returns>address of the root node</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.GetCollectionName``1">
            <summary>
            Helper function that returns the name of the collection corresponding 
            to the input type.
            </summary>
            <typeparam name="TObject">type of the object</typeparam>
            <returns>collection name</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.AppendUriElement(System.Uri,System.String)">
            <summary>
            Helper function that creates a new Uri by appending the given element name to 
            the name of an existing object.
            </summary>
            <param name="name">object name</param>
            <param name="element">element name</param>
            <returns>A Uri in the format "name/element", where name and element are the two arguments.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.CreateSystemObjectName``1(System.String)">
            <summary>
            Helper method that returns the Uri of an event type that lives in 
            the system application.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <param name="name">The object name.</param>
            <returns>The full name (URI) of the system object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.CreateObjectName``1(System.Uri,System.String)">
            <summary>
            Helper method that builds an Uri given its parent and its name. The object type is 
            passed as template parameter.
            </summary>
            <typeparam name="TObject">type of the object</typeparam>
            <param name="parent">address of the parent</param>
            <param name="name">object name</param>
            <returns>an instance of the Uri class</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.CreateObjectNameFromEscapedUriString(System.String)">
            <summary>
            Creates a full object name from a string containing a URI.
            </summary>
            <param name="name">The URI string.</param>
            <returns>Object name.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.CreateRelativeObjectNameFromUnescapedString(System.String)">
            <summary>
            Creates a relative object name from a short name string.
            </summary>
            <param name="shortName">The short name of the object (no parent information).</param>
            <returns>Relative URI with the name string correctly escaped.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.GetShortObjectName``1(System.Uri,System.Uri)">
            <summary>
            Returns the relative string from the absolute Uri as a string for the given object type and parent.
            </summary>
            <typeparam name="TObject">type of the object</typeparam>
            <param name="parent">Name of the parent.</param>
            <param name="name">object name</param>
            <returns>String representing the relative Uri</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.NameBuilder.GetShortObjectName(System.Uri)">
            <summary>
            Gets the unescaped short name (the last segment) of an object. Works on both relative and absolute URIs.
            </summary>
            <param name="name">The name - relative or absolute.</param>
            <returns>The short name string (unescaped).</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.OutputAdapter">
            <summary>
            Class that represents an output adapter as CEP metadata object.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputAdapter.Description">
            <summary>
            Gets the description of this output adapter.
            </summary>
            <value>The description that was specified when the adapter was registered.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputAdapter.FactoryClassName">
            <summary>
            Gets the full name of the adaper factory class.
            </summary>
            <value>The full name of the adapter factory class, including the assembly name.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputAdapter.IsTyped">
            <summary>
            Gets or sets a value that indicates whether or not this factory is a typed factory.
            </summary>
            <value>true if the factory is typed; otherwise, false.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.OutputStreamBinding">
            <summary>
            Represents binding information for the output stream of a query.
            </summary>
            <remarks>
            An output binding includes information such as the bound event target, the event structure
            of that output stream, and the stream orderness.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.OutputStreamBinding.TryGetConfigInfo``1(``0@)">
            <summary>
            Returns an instance of a initialization info structure.
            If the underlying XML cannot be converted into this structure an exception will be thrown.
            </summary>
            <typeparam name="TConfigInfo">Type of the initialization structure that is returned.</typeparam>
            <param name="configInfo">An instance of the configuration structure.</param>
            <returns>true if a configuration structure could be retrieved; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.OutputStreamBinding.SetConfigInfo``1(``0)">
            <summary>
            Set initialization information for this binding
            </summary>
            <typeparam name="TConfigInfo">the configInfo type</typeparam>
            <param name="configInfo">intitalization information for output adapter</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamName">
            <summary>
            Gets the name of the output stream for this binding.
            </summary>
            <value>The full name of the output stream.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamConsumerName">
            <summary>
            Gets the name of the consumer for this input binding.
            </summary>
            <value>The name of the event consumer.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamTarget">
            <summary>
            Gets the name of the stream target.
            </summary>
            <value>The full name of the event sink.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.EventShape">
            <summary>
            Gets the shape of the output stream of this binding.
            </summary>
            <value>The event shape of the output stream of this binding.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamEventOrder">
            <summary>
            Gets information about the order of events in that stream.
            </summary>
            <value>The order of events in that stream.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.PayloadClassName">
            <summary>
            Gets the name of the stream's payload class for this binding.
            </summary>
            <value>The payload class name of this stream.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.ConfigInfo">
            <summary>
            Gets or sets the init information for this binding
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Query">
            <summary>
            Represents a query object in CEP metadata.
            </summary>
            <remarks>
            Query objects are based on the specification of event sources and sinks and query templates and
            their binding to each other. They are entities that are registered in an application on a 
            CEP server, so that they can be started and stopped.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Query.Start">
            <summary>
            Starts the query asynchronously.
            </summary>
            <remarks>The method is asynchronous, it may return before the query 
            is actually running.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Query.Stop">
            <summary>
            Stop this query.
            </summary>
            <remarks>
            The method is synchronous, it will block until the qurey 
            is stopped and then it will return.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Query.CreateAnonymousQueryName">
            <summary>
            Creates a unique name for an anonymous query.
            </summary>
            <returns>Query name.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Query.QueryTemplateName">
            <summary>
            Gets the name of the query template associated with this query.
            </summary>
            <value>Full name of the query template associated with this query.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Query.InternalInputStreamBindings">
            <summary>
            Gets the collection of input stream bindings.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Query.InternalOutputStreamBindings">
            <summary>
            Gets the collection of output stream bindings.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Query.InputStreamBindings">
            <summary>
            Gets the collection of input stream bindings.
            </summary>
            <value>The collection of input stream bindings.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Query.OutputStreamBindings">
            <summary>
            Gets the collection of output stream bindings.
            </summary>
            <value>The collection of output stream bindings.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Query.Description">
            <summary>
            Gets the description of this query.
            </summary>
            <value>The description that was specified when the query was registered.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.QueryBinder">
             <summary>
             Represents a client-side helper class to bind query producers and consumers in order to create a query object.
             </summary>
             <remarks>A query binder is used to associate event sources and sinks
             with the input and output streams of a query template through an explicit binding.</remarks>
             <example>
             <code>
             Application app = server.CreateApplication("MyApp");
             InputAdapter inputAdapter = app.CreateInputAdapter{MyInputFactory}("DataSource", "");
             OutputAdapter outputAdapter = app.CreateOutputAdapter{MyOutputFactory}("Output", "");
             var inputstream = CepStream{TPayload}.Create("filterInput");
            
             var filtered = from e in inputstream
                            where e.Value > 30
                            select e;
            
             QueryTemplate filterQT = application.CreateQueryTemplate("filterLogic", "Description of the query template", filtered);
             QueryBinder queryBinder = new QueryBinder(filterQT);
             queryBinder.BindProducer{TPayload}("filterInput", inputAdapter, inputConf, EventShape.Point);
             queryBinder.AddConsumer("filterOutput", outputAdapter, outputConf, EventShape.Point, StreamEventOrder.FullyOrdered);
             
             Query query = application.CreateQuery("filterQuery", queryBinder, "");
             </code>
             </example>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.#ctor(Microsoft.ComplexEventProcessing.QueryTemplate)">
            <summary>
            Initializes a new instance of the QueryBinder class
            </summary>
            <param name="queryTemplate">Query template that needs to be bound by this query binder.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer``1(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Binds a query template input to an input adapter.
            </summary>
            <typeparam name="PayloadT">The input stream payload type.</typeparam>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="inputAdapter">The input adapter metadata object to be bound.</param>
            <param name="configInfo">The runtime configuration for the input adapter.</param>
            <param name="eventShape">The desired event shape of the input stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer``1(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Binds a query template input to an input adapter.
            </summary>
            <typeparam name="PayloadT">The input stream payload type.</typeparam>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="inputAdapter">The input adapter metadata object to be bound.</param>
            <param name="configInfo">The runtime configuration for the input adapter.</param>
            <param name="eventShape">The desired event shape of the input stream.</param>
            <param name="advanceTimeSettings">The settings to advance application time for this input stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Binds a query template input to an untyped input adapter
            </summary>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="inputAdapter">The input adapter metadata object to be bound.</param>
            <param name="configInfo">The runtime configuration for the input adapter.</param>
            <param name="eventShape">The desired event shape of the input stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Binds a query template input to an untyped input adapter
            </summary>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="inputAdapter">The input adapter metadata object to be bound.</param>
            <param name="configInfo">The runtime configuration for the input adapter.</param>
            <param name="eventShape">The desired event shape of the input stream.</param>
            <param name="advanceTimeSettings">The settings to advance application time for this input stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.Query)">
            <summary>
            Binds the output events stream of an existing query to a given input stream in the query template.
            </summary>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="query">The existing query.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.Query,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Binds the output events stream of an existing query to a given input stream in the query template.
            </summary>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="query">The existing query.</param>
            <param name="advanceTimeSettings">The settings to advance application time for this input stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,System.Uri,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Binds an existing published stream to a given input stream in the query template.
            </summary>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="publishedStreamName">The name of the published stream.</param>
            <param name="eventShape">The desired event shape of the input stream.</param>
            <remarks>Note that the event shape needs to match the shape produced by the published stream.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,System.Uri,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Binds an existing published stream to a given input stream in the query template.
            </summary>
            <param name="streamName">The name of the query template's input stream to be bound.</param>
            <param name="publishedStreamName">The name of the published stream.</param>
            <param name="eventShape">The desired event shape of the input stream.</param>
            <param name="advanceTimeSettings">The settings to advance application time for this input stream.</param>
            <remarks>Note that the event shape needs to match the shape produced by the published stream.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.AddConsumer(System.String,Microsoft.ComplexEventProcessing.OutputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Adds an untyped adapter as an event consumer.
            </summary>
            <param name="streamConsumerName">Stream consumer name, used to uniquely identify the consumer.</param>
            <param name="outputAdapter">The output adapter metadata object to be bound.</param>
            <param name="configInfo">The runtime configuration for the output adapter</param>
            <param name="eventShape">The desired event shape of the output stream.</param>
            <param name="streamEventOrder">The desired event order in the output stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.AddConsumer``1(System.String,Microsoft.ComplexEventProcessing.OutputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Adds an adapter as an event consumer.
            </summary>
            <typeparam name="PayloadT">The output stream payload type.</typeparam>
            <param name="streamConsumerName">Stream consumer name, used to uniquely identify the consumer.</param>
            <param name="outputAdapter">The output adapter metadata object to be bound.</param>
            <param name="configInfo">The runtime configuration for the output adapter</param>
            <param name="eventShape">The desired event shape of the output stream.</param>
            <param name="streamEventOrder">The desired event order in the output stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindOutputToPublishedStream(Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Binds the output of the query to the default published stream with the same name as the query.
            </summary>
            <param name="eventShape">The desired event shape of the output stream.</param>
            <param name="streamEventOrder">The desired event order in the output stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindOutputToPublishedStream(System.Uri,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Binds the output of the query to an explicitly named published stream.
            </summary>
            <param name="publishedStreamName">The name of the published stream.</param>
            <param name="eventShape">The desired event shape of the output stream.</param>
            <param name="streamEventOrder">The desired event order in the output stream.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,System.Type,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
             internal implementation of Bind Input stream
            </summary>
            <param name="streamName"></param>
            <param name="inputAdapter"></param>
            <param name="configInfo"></param>
            <param name="eventShape"></param>
            <param name="payloadType"></param>
            <param name="advanceTimeSettings"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryBinder.AddConsumer(System.String,Microsoft.ComplexEventProcessing.OutputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder,System.Type)">
            <summary>
            Internal implementation of adding a new query consumer
            </summary>
            <param name="streamConsumerName"></param>
            <param name="outputAdapter"></param>
            <param name="configInfo"></param>
            <param name="eventShape"></param>
            <param name="streamEventOrder"></param>
            <param name="payloadType"></param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryBinder.QueryTemplate">
            <summary>
            Gets the query template this query binder is trying to bind.
            </summary>
            <value>The query template that this query binder is trying to bind.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryBinder.InputBindings">
            <summary>
            Gets the collection of input stream binding information.
            </summary>
            <value>A collection of input stream binding objects.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryBinder.OutputBindings">
            <summary>
            Gets the collection of output stream binding information.
            </summary>
            <value>A collection of output stream binding objects.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryBinder.InternalInputBindings">
            <summary>
            Gets or sets the collection of inputs stream binding information
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.QueryTemplate">
            <summary>
            Represents a query template metadata object.
            </summary>
            <remarks>
            Query templates define the desired query logic of a CEP application. A query template is usually
            defined through LINQ on top of a CepStream object.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryTemplate.Validate">
            <summary>
            Validate the query template is valid
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.QueryTemplate.Delete">
            <summary>
            Deletes the query template from metadata.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryTemplate.QueryTemplateInputs">
            <summary>
            Gets the collection of inputs associated with this queryTemplate.
            </summary>
            <value>A collection of input stream names.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryTemplate.Description">
            <summary>
            Gets a description for this query template
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryTemplate.Definition">
            <summary>
            The query template definition in the form of XML.
            </summary>
            <remarks>Internally StreamInsight uses an XML representation of its metadata objects. In the
            case of query templates, the LINQ specification of a query logic is translated at runtime into
            the internal XML format for query templates. The XML schema for CEP metadata entities is
            published at http://schemas.microsoft.com/ComplexEventProcessing</remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.QueryTemplateInput">
            <summary>
            Represents a stream entry point in a query template.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.StreamName">
            <summary>
            Gets the name of the input stream.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.EventTypeName">
            <summary>
            Gets the name of the event type associated with the stream input.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.QueryTemplate">
            <summary>
            Gets a reference to the query template that has the input.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2">
            <summary>
            Implements a generic read-only dictionary. This class is a simple wrapper
            over an underlying dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Construct a new read-only dictionary given the source.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)">
            <summary>
            Not supported.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Not supported.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Clear">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Returns a boolean indicating whether the dictionary contains the given item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
            Returns a boolean indicating whether the dictionary contains the given key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies entries from dictionary to the given array.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(`0)">
            <summary>
            Not supported.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Not supported.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Tries to get the value given the key. Returns true if value is present.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns>bool</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.IsReadOnly">
            <summary>
            Returns true - the collection is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.Keys">
            <summary>
            Returns the Keys read-only collection.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.Values">
            <summary>
            Returns the Values read-only collection.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.Item(`0)">
            <summary>
            Retrieve value by key
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Item(`0)">
            <summary>
            Retrieve value by key
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.RemoteServerProxy">
            <summary>
            Wrapper for the instance of IServer that runs remote.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.Create(System.Xml.XmlReader,System.Uri)">
            <summary>
            Creates an object from its xml definition.
            </summary>
            <param name="definition">object's definition as xml</param>
            <param name="parentName">name of the parent object</param>
            <returns>The object's name as a Uri</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.Delete(System.Uri)">
            <summary>
            Deletes an object.
            </summary>
            <param name="name">Object's name.</param>
            <remarks>this function will throw if there are runtime or static 
            dependencies on the object being deleted.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.Get(System.Uri)">
            <summary>
            Retrieves the definition of an object.
            </summary>
            <param name="name">Object's name</param>
            <returns>Object's definition, if name corresponds to an existing object, 
            otherwise null.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.Enumerate(System.Uri)">
            <summary>
            Enumerates a collection of objects.
            </summary>
            <param name="name">the name of the parent object</param>
            <returns>all the objects that belong to the respective collection.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.StartQuery(System.Uri)">
            <summary>
            Starts a queryTemplate.
            </summary>
            <param name="name">Name of the queryTemplate.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.StopQuery(System.Uri)">
            <summary>
            Stops a queryTemplate.
            </summary>
            <param name="name">Name of the queryTemplate.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.GetDiagnosticSettings(System.Uri)">
            <summary>
            Gets the diagnostic settings for an object.
            </summary>
            <param name="name">Object's name.</param>
            <returns>The diagnostic settings for he object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.SetDiagnosticSettings(System.Uri,Microsoft.ComplexEventProcessing.DiagnosticSettings)">
            <summary>
            Sets the diagnostic setting for an object.
            </summary>
            <param name="name">Object's name.</param>
            <param name="diagnosticSettings">The new diagnostic settings to be set.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.ClearDiagnosticSettings(System.Uri)">
            <summary>
            Clears the diagnostic settings for an object. After this operation, 
            the object iherits the diagnostic settings from its parent.
            </summary>
            <param name="name">Object's name.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.GetDiagnosticView(System.Uri)">
            <summary>
            Gets the diagnostic view for an object.
            </summary>
            <param name="name">Object's name.</param>
            <returns>The diagnostic view information for the object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.Dispose">
            <summary>
            Releases all the resources references by this object.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.RemoteServerProxy.CreateManagementService">
            <summary>
            Returns a management service implementation for the current server.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.RemoteServerProxy.IsEmbedded">
            <summary>
            Determines whether this proxy is embedded or remoted
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Server">
            <summary>
            Represents a CEP server.
            </summary>
            <remarks>
            A CEP server is the central entity that hosts any complex event processing application. A server
            can either be instantiated embedded in the user process or it can represent a remote server
            through a connection. In either model the interaction with the server in order to register and
            manage metadata objects is the same.</remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.#ctor(Microsoft.ComplexEventProcessing.IServerProxy)">
            <summary>
            Creates a new instance of Server class based on a server proxy.
            </summary>
            <param name="serverProxy">Proxy class that abstracts the difference 
            between the embedded and remote servers.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Create(System.String)">
            <summary>
            Creates an instance of the CEP server, backed by an in-memory metadata store.
            </summary>
            <param name="instanceName">Name of the installed StreamInsight instance</param>
            <returns>The new CEP server instance.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Create(System.String,Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration)">
            <summary>
            Creates a server using the SqlCe metadata provider.
            </summary>
            <param name="instanceName">Name of the installed StreamInsight instance</param>
            <param name="config">The SqlCe metadata provider configuration</param>
            <returns>The new CEP server instance.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Connect(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.Uri)">
            <summary>
            Connects to a running instance of the CEP server through an endpoint.
            </summary>
            <param name="endpointAddress">The endpoint of the remote server.</param>
            <param name="binding">The connection binding information.</param>
            <param name="via"></param>
            <returns>A new CEP server instance that represents the remote server.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Connect(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
            <summary>
            Connects to a running instance of the CEP server through an endpoint.
            </summary>
            <param name="endpointAddress">The endpoint of the server.</param>
            <param name="binding">The connection binding information.</param>
            <returns>A new CEP server instance that represents the server.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Connect(System.ServiceModel.EndpointAddress)">
            <summary>
            Connects to a running instance of the CEP server through an endpoint.
            The WsHttpBinding will be used as default binding.
            </summary>
            <param name="endpointAddress">The endpoint of the server.</param>
            <returns>A new CEP server instance that represents the server.</returns>
            <example>
            <code>
            Server server = Server.Connect(new System.ServiceModel.EndpointAddress(@"http://localhost/StreamInsight/MyInstance"));
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.CreateApplication(System.String)">
            <summary>
            Creates an application in the CEP server.
            </summary>
            <param name="name">Name of the application.</param>
            <returns>The application being created.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.CreateManagementService">
            <summary>
            Returns a management service implementation for the current server.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Dispose">
            <summary>
            Releases all resources referenced by this server.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.GetDiagnosticSettings(System.Uri)">
            <summary>
            Gets the diagnostic settings for the named object.
            </summary>
            <param name="name">The name can 
            represent the full name of the object, or it can be the name of 
            a collection or subobject of the Server (like PlanManager, etc.)</param>
            <returns>Diagnostic settings for the object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.SetDiagnosticSettings(System.Uri,Microsoft.ComplexEventProcessing.DiagnosticSettings)">
            <summary>
            Sets the diagnostic settings for the named object. 
            </summary>
            <param name="name">The name can represent the full name of the object, 
            or it can be the name of a collection or subobject of the Server 
            (like PlanManager, etc.)</param>
            <param name="diagnosticSettings">Diagnostic settings for the object.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.ClearDiagnosticSettings(System.Uri)">
            <summary>
            Clears the diagnostic settings for the named object. 
            </summary>
            <param name="name">The name can represent the full name of the object, 
            or it can be the name of a collection or subobject of the Server 
            (like PlanManager, etc.)</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.GetDiagnosticView(System.Uri)">
            <summary>
            Gets the diagnostic view for the named object. 
            </summary>
            <param name="name">The name can represent the full name of the object, 
            or it can be the name of a collection or subobject of the Server 
            (like PlanManager, etc.)</param>
            <returns>Diagnostic view for the object.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.Enumerate(System.Uri)">
            <summary>
            Enumerates a collection of metadata objects in the server.
            </summary>
            <param name="name">The name of the collection.</param>
            <returns>The names of all the objects that belong to the collection.</returns>
            <example>
            The following example retrieves all query names in a specific application from the server:
            <code>
            var queryList = server.Enumerate(new Uri(@"cep:/Server/Application/MyApp/Query"));
            </code>
            </example>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.CreateCepObject(Microsoft.ComplexEventProcessing.CepObject)">
            <summary>
            Creates the given CepObject on the server
            </summary>
            <param name="obj">The Cep object to create</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.DeleteCepObject(Microsoft.ComplexEventProcessing.CepObject)">
            <summary>
            Deletes the given CepObject the server
            </summary>
            <param name="obj">The Cep object to delete</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.TryGetApplication``1(System.String,``0@)">
            <summary>
            Retrieves the server object from the server using short name.
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="name"></param>
            <param name="cepObject"></param>
            <returns>bool indicating whether object was found</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.TryGetApplication``1(System.Uri,``0@)">
            <summary>
            Retrieves the server object from the server using Uri.
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="name"></param>
            <param name="cepObject"></param>
            <returns>bool indicating whether object was found</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.GetAllApplications``1">
            <summary>
            Retrieves all objects of the specified type from the server.
            </summary>
            <typeparam name="TObject"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Server.TryGetObject``1(System.Uri,``0@)">
            <summary>
            Retrieves the CepObject from the server.
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="name"></param>
            <param name="cepObject"></param>
            <returns>bool indicating whether object was found</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Server.IsEmbedded">
            <summary>
            Gets a flag indicating whether the server is running in process or 
            is a remote server.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Server.Applications">
            <summary>
            Gets the collection of applications that are registered in the server.
            </summary>
            <value>The collection of applications that are registered in the server.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Server.CepObjectCollectionSource">
            <summary>
            Helper class to retrieve objects rooted at this server.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration">
            <summary>
            Represents configuration information specific to the SqlCe metadata provider.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.DefaultDataSource">
            <summary>
            Default relative location of the file that holds the SqlCe metadata database.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.DefaultCreateDataSourceIfMissing">
            <summary>
            Default value for the CreateDataSourceIfMissing setting.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.DataSource">
            <summary>
            Gets or sets the path to the database file used by the provider.
            </summary>
            <value>The path of the database file.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.CreateDataSourceIfMissing">
            <summary>
            Gets or sets a flag indicating if the data source file should be created if missing.
            </summary>
            <value>true if the data source file should be created if missing; otherwise, false.
            The default is false.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.StreamEventOrder">
            <summary>
            Specifies the event order in a query output stream.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.StreamEventOrder.ChainOrdered">
            <summary>
            In a ChainOrdered output stream each CTI releases all interval events with an end time
            before the CTI to the output.
            </summary>
            <remarks>
            Since Point and Edge (considering start end end edges separately) events only
            have a single significant timestamp, this only has an effect on interval event output streams.
            Effectively, this value will order the output interval events according to their end times.
            </remarks>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.StreamEventOrder.FullyOrdered">
            <summary>
            In a FullyOrdered output stream each CTI releases interval events to the output only if all other events with
            an earlier start time have been released to the output already.
            </summary>
            <remarks>
            Since Point and Edge (considering start end end edges separately) events only
            have a single significant timestamp, this only has an effect on interval event output streams.
            Effectively, this value will order the output interval events according to their start times.
            </remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Utils">
            <summary>
            Class that contains various internal utilities.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Utils.GetFullMessage(System.Exception)">
            <summary>
            Gets an exception message that includes the messages of the inner exceptions.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.XmlReaderUtils">
            <summary>
            The CompilerUtils class presents several utilities for compilation.
            It factors out code patterns that span the compiler components.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.XmlReaderUtils.ReadRequiredXmlAttribute(System.Xml.XmlReader,System.String)">
            <summary>
            Reads a required attribute from the Xml reader.
            </summary>
            <param name="xmlReader">The input Xml reader.</param>
            <param name="attributeName">The attribute name to be read from the Xml reader.</param>
            <returns>The value of the attribute.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.XmlReaderUtils.ReadOptionalXmlAttribute(System.Xml.XmlReader,System.String)">
            <summary>
            Reads an optional attribute from the Xml reader.
            If the attribute is not specified in the input Xml, the default value is returned.
            </summary>
            <param name="xmlReader">The input Xml reader.</param>
            <param name="attributeName">The attribute name to be read from the Xml reader.</param>
            <returns>The value of the attribute as specified in the Xml, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.XmlReaderUtils.ReadOptionalXmlAttribute(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            Reads an optional attribute from the Xml reader.
            If the attribute is not specified in the input Xml, the default value is returned.
            </summary>
            <param name="xmlReader">The input Xml reader.</param>
            <param name="attributeName">The attribute name to be read from the Xml reader.</param>
            <param name="defaultValue">The attribute default value.</param>
            <returns>The value of the attribute as specified in the Xml, the default value otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.XmlReaderUtils.ReadOptionalXmlAttribute(System.Xml.XmlReader,System.String,System.Boolean)">
            <summary>
            Reads an optional boolean attribute from the Xml reader.
            If the attribute is not specified in the input Xml, the default value is returned.
            </summary>
            <param name="xmlReader">The input Xml reader.</param>
            <param name="attributeName">The attribute name to be read from the Xml reader.</param>
            <param name="defaultValue">The attribute default value.</param>
            <returns>The value of the attribute as specified in the Xml, the default value otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.XmlReaderUtils.AddXsdFileToXmlReaderSettings(System.Xml.XmlReader,System.String[])">
            <summary>
            This function adjusts the XmlReader with the proper settings by loading the correct XSD file
            </summary>
            <param name="xmlReader">the input Xml Reader</param>
            <param name="xsdFileNames">the XSD file name</param>
            <returns>An XmlReader based on the input XmlReader after restricting it with the inputXSD file</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.XmlReaderUtils.SettingsValidationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Handles the XSD validation errors and warnings by throwing a CompilerException.
            </summary>
            <param name="sender">the sender of the validation event</param>
            <param name="e">the validation event arguments</param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.CepToClrEventConverter`1">
            <summary>
            Converts instances of engine type to Clr instances of a given type
            </summary>
            <typeparam name="TObject">Clr type.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepToClrEventConverter`1.#ctor(Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Initializes a new instance of the CepToClrEventConverter class.
            </summary>
            <param name="internalEventType">EventType that the events must conform to.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepToClrEventConverter`1.ConvertToClrInstance(Microsoft.ComplexEventProcessing.Expressions.CepEvent,`0@)">
            <summary>
            Converts an instance of the engine type into an instance of the Clr type.
            </summary>
            <param name="eventInstance"></param>
            <param name="clrObject"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.CepToClrEventConverter`1.CreateConverter(Microsoft.ComplexEventProcessing.EventTypeConverter{`0},Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Compiles an efficient delegate that initializes the property
            </summary>
            <returns>A compiled delegate.</returns>
            <remarks> See http://blogs.msdn.com/meek/archive/2008/04/25/using-linq-expressions-to-generate-dynamic-methods.aspx </remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1">
            <summary>
            Converts instances of a Clr type to instances of engine type.
            </summary>
            <typeparam name="TObject">Clr type.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1.#ctor(Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Initializes a new instance of the ClrToCepEventConverter class.
            </summary>
            <param name="internalEventType">EventType that the clr object must be able to convert to.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1.ConvertFromClrInstance(Microsoft.ComplexEventProcessing.Expressions.CepEvent,`0)">
            <summary>
            Converts an instance of a Clr type to an instance of an engine type.
            </summary>
            <param name="eventInstance">Instance of an engine type. It is assumed 
            that the memory has already been allocated for it in the internal storage.</param>
            <param name="clrObject">Clr object.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1.CreateConverter(Microsoft.ComplexEventProcessing.EventTypeConverter{`0},Microsoft.ComplexEventProcessing.Expressions.RuntimeEventType)">
            <summary>
            Generate an lambda expression that takes a Clr object and a CepEvent, set
            all field values of the CepEvent from the Clr object
            </summary>
            <param name="eventTypeConverter">event type converter that convert CLR type to CEP type</param>
            <param name="internalEventType">the engine runtime event type</param>
            <returns>the labmda expression that does the field setting</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1.GetObjectFieldInfo(`0,System.Int32@,System.Int32@)">
            <summary>
            Given an instance of CLR object, count how many fields have null value and
            total number of bytes needed to store the variable and nullable fields' value
            </summary>
            <param name="clrObject"></param>
            <param name="numberOfNullFields"></param>
            <param name="totalBytesForVariableOrNullableFields"></param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1.ClrType2CepEventTypeHelper">
            <summary>
            Helper for for building delegates for converting a CLR object to 
            CEP event
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.ClrToCepEventConverter`1.ClrObjectSizeCalculator">
            <summary>
            Helper struct for building the delegate for retrieving CLR object information
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EdgeEvent">
            <summary>
            Defines methods and properties that allow adapters and user-defined 
            operators to create and access edge events.
            </summary>
            <remarks>
            <para>An edge event represents either the start or end of a CEP event. As opposed to single interval events, which are
            fully specified in terms of their start and end time, edge events need to be given in pairs.
            An edge event of type Start indicates the beginning of the event lifetime, and a matching End event indicates the 
            end of the event lifetime.</para>
            <para>Edge events are typically used to model a discrete signal, where the arrival of the new signal value is not known in advance.
            Such a pattern entails the submission of an end event regarding the previous start event, followed by a
            start event for the new value. Note that the end event has to match the start event's start time as well as payload.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.UntypedEvent">
            <summary>
            Represents an untyped event.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EventInstance">
            <summary>
            Abstract class that represents a user-facing event. This is a wrapper around an underlying event in the system.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EventInstance.Reset">
            <summary>
            Resets the EventInstance object so that it can be returned to the event pool
            for future reuse.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.Reset">
            <summary>
            Resets the EventInstance object so that it can be returned to the event pool
            for future reuse. We set the CepEvent to its default value.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.SetField``1(System.Int32,``0)">
            <summary>
            Sets the field value specified by its ordinal.
            </summary>
            <typeparam name="T">The field type.</typeparam>
            <param name="ordinal">The field ordinal, as defined by the event type.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.GetField``1(System.Int32)">
            <summary>
            Returns the specified field value by its ordinal.
            </summary>
            <typeparam name="T">The field type.</typeparam>
            <param name="ordinal">The field ordinal, as defined by the event type.</param>
            <returns>An object of the same type as the field that contains the fields value.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.SetField(System.Int32,System.Object)">
            <summary>
            Sets the value of the specified field, regardless of its type.
            </summary>
            <param name="ordinal">The field ordinal, as defined by the event type.</param>
            <param name="value">The value to be set.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.GetField(System.Int32)">
            <summary>
            Returns the value of the specified field, regardless of its type.
            </summary>
            <param name="ordinal">The field ordinal, as defined by the event type.</param>
            <returns>An object containing the field value.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.UntypedEvent.EventKind">
            <summary>
            Gets the kind of the event.
            </summary>
            <returns>The kind of the event.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.StartTime">
            <summary>
            Gets or sets the start time of the event.
            </summary>
            <value>The start time of the event.</value>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.EndTime">
            <summary>
            Gets or sets the end time of the event. This value is ignored if this is a start edge event.
            </summary>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
            <value>The end time of the event.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.EdgeType">
            <summary>
            Gets the edge type.
            </summary>
            <value>Start for start edges, End for end edges.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.EventKind">
            <summary>
            Gets the kind of the event.
            </summary>
            <value>One of the enumeration values that specifies the kind of event (Insert, Cti).</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EdgeEvent`1">
            <summary>An edge event represents either the start or end of a CEP event.</summary>
            <remarks>
            <para>As opposed to single interval events, which are
            fully specified in terms of their start and end time, edge events need to be given in pairs.
            An edge event of type Start indicates the beginning of the event lifetime, and a matching End event indicates the 
            end of the event lifetime.</para>
            <para>Edge events are typically used to model a discrete signal, where the arrival of the
            new signal value is not known in advance.
            Such a pattern entails the submission of an end event regarding the previous start event, followed by a
            start event for the new value. Note that the end event has to match the start event's start
            time as well as payload.</para>
            </remarks>
            <example>
            <code>
            EdgeEvent{TPayload} ev = CreateInsertEvent(EdgeType.Start);
            ev.StartTime = DateTime.Now;
            ev.Payload = ...
            EnqueueOperationResult result = Enqueue(ref ev);
            </code></example>
            <typeparam name="TPayload">Class or structure representing the payload of this event.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.TypedEvent`1">
            <summary>
            Represents a typed event.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypedEvent`1.Reset">
            <summary>
            Resets the EventInstance object so that it can be returned to the event pool
            for future reuse. We just set the payload to its default value.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.TypedEvent`1.EventKind">
            <summary>
            Gets the kind of the event.
            </summary>
            <returns>The kind of the event.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.TypedEvent`1.Payload">
            <summary>
            Gets or sets the payload of the event.
            </summary>
            <returns>The event payload.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent`1.StartTime">
            <summary>
            Gets or sets the start time of the event.
            </summary>
            <value>The start time of the event.</value>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent`1.EndTime">
            <summary>
            Gets or sets the end time of the event. This value is ignored if this is a start edge event.
            </summary>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
            <value>The end time of the event.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EdgeEvent`1.EdgeType">
            <summary>
            Gets the edge type.
            </summary>
            <value>Start for start edges, End for end edges.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EdgeType">
            <summary>
            Enumerates the valid edge types.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EdgeType.Start">
            <summary>
            Represents a start edge.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EdgeType.End">
            <summary>
            Represents an end edge.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EventKind">
            <summary>
            Enumerates the valid kinds of events.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EventKind.Insert">
            <summary>
            Represents an INSERT event.
            </summary>
            <remarks>An INSERT event contains actual event data. It is composed of temporal
            information (a single timestamp or a start plus end time, depending on the event shape)
            and a payload.</remarks>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EventKind.Cti">
            <summary>
            Represents a Current Time Increment (CTI) event.
            </summary>
            <remarks>A CTI event advances the application
            time to the time specified by the CTI event's StartTime property.</remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EventShape">
            <summary>
            Specifies the shape of events that a stream contains.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EventShape.Interval">
            <summary>
            Interval events have a start time and an end time, indicating the lifetime during which the 
            event's payload was valid.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EventShape.Edge">
            <summary>
            Edge events indicate either the start or the end of a payload's lifetime. Events of shape Edge
            can be either start edges or end edges.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.EventShape.Point">
            <summary>
            Point events have a lifetime of a single tick, and hence only a single timestamp.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.EventTypeConverter`1">
            <summary>
            Represents functionality to convert a CLR type into a CEP event type.
            </summary>
            <typeparam name="TObject">CLR type.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EventTypeConverter`1.#ctor">
            <summary>
            Initializes a new instance of class EventTypeConverter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.EventTypeConverter`1.CanInstantiateClrObject(System.Type)">
            <summary>
            Gets a value indicates whether or not engine can create a CLR object of this type
            correctly. Return true when:
              a. All public fields/properties have setters
              b. There is a default constructor for this type
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EventTypeConverter`1.EventType">
            <summary>
            Gets the CEP type representation of the CLR type.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.EventTypeConverter`1.MapEngineFieldToClrField">
            <summary>
            Returns a collection of mappings from CEP fields to CLR fields.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.IntervalEvent">
            <summary>
            Defines methods and properties that allow adapters and user-defined 
            operators to create and access interval events.
            <remarks>
            <para>An interval event represents an event payload that is valid from a start time to an end time.</para>
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.IntervalEvent.StartTime">
            <summary>
            Gets or sets the start time of the event.
            </summary>
            <value>The start time of the event.</value>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.IntervalEvent.EndTime">
            <summary>
            Gets or sets the end time of the event.
            </summary>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
            <value>The end time of the event.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.IntervalEvent`1">
            <summary>
            Defines methods and properties that allow adapters and user-defined 
            operators to create and access interval events.
            </summary>
            <remarks>
            <para>An interval event represents an event payload that is valid from a start time to an end time.</para>
            </remarks>
            <typeparam name="TPayload">Class or structure representing the payload of this event.</typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.IntervalEvent`1.StartTime">
            <summary>
            Gets or sets the start time of the event.
            </summary>
            <value>The start time of the event.</value>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.IntervalEvent`1.EndTime">
            <summary>
            Gets or sets the end time of the event.
            </summary>
            <remarks>
            <para>In the temporal model of StreamInsight, event start times are inclusive, whereas end
            times are exclusive.</para>
            </remarks>
            <value>The end time of the event.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.PointEvent">
            <summary>
            Defines methods and properties that allow adapters and user-defined 
            operators to create and access point events.
            </summary>
            <remarks>
            <para>A point event represents an event payload that is valid for a distinct 
            point in time.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.PointEvent.StartTime">
            <summary>
            Gets or sets the time of the point event.
            </summary>
            <value>The time of the event.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.PointEvent`1">
            <summary>
            Defines methods and properties that allow adapters and user-defined 
            operators to create and access point events.
            </summary>
            <remarks>
            <para>A point event represents an event payload that is valid for a distinct 
            point in time.</para>
            </remarks>
            <typeparam name="TPayload">Class or structure representing the payload of this event.</typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.PointEvent`1.StartTime">
            <summary>
            Gets or sets the time of the point event.
            </summary>
            <value>The time of the event.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.TypeCreationException">
            <summary>
            Exception thrown when creating a type fails.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor">
            <summary>
            Initializes a new instance of the TypeCreationException class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TypeCreationException class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TypeCreationException class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TypeCreationException class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.TypeUtility">
            <summary>
            Type utility class provides common type related methods for LINQ provider
            and event type converter.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.ClrTypeToRuntimeEventType(Microsoft.ComplexEventProcessing.Expressions.TypeService,System.Type)">
            <summary>
            Gets the RuntimeEventType representation of a CLR type
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.IsValidPayloadType(System.Type)">
            <summary>
            Check whether or not a give clrType can be converted to CepEventType
            </summary>
            <param name="clrType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.IsCepBuiltinType(System.Type)">
            <summary>
            Check whether or not the type is supported natively by CEP engine
            </summary>
            <param name="inputType"></param>
            <returns>true if the type is supported natively by CEP engine</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.IsSupportedCultureType(System.Type)">
            <summary>
            Return true if the given CLR type is one of the culture types we support
            </summary>
            <param name="clrType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.BuiltinTypeSize(System.Type)">
            <summary>
            Get the size in bytes for built in types
            </summary>
            <param name="clrType"></param>
            <returns>number of bytes in size</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.IsNullableType(System.Type)">
            <summary>
            Checks whether or not a given type is type of Nullable`1
            </summary>
            <param name="type">the type to check</param>
            <returns>true if the type is nullable type</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.GetUnderlyingType(System.Type)">
            <summary>
            Retrieve the underlying type for type of Nullable of T. If the given type
            is not a nullable type, then return the original type
            </summary>
            <param name="type">the type to retrieve the underlying type</param>
            <returns>the underlying type if the given type is a nullable type, otherwise, original type is returned</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.SerializeConfigObject(System.Object)">
            <summary>
            Serialize a given config object into a string
            </summary>
            <param name="objectToSerialize"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.TypeUtility.DeserializeConfigObject``1(System.String)">
            <summary>
            DeSerialize a given config object from XML blob
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="serializedString"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.AggregateExpression">
            <summary>
            AggregateExpression captures all information for CEP aggregate functions. The aggregate
            function consumes events from a WindowStream and produces an aggregate value.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowedCepExpression">
            <summary>
            base class for all windowed Cep operations
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepExpression">
            <summary>
            StreamExpression is the definition of a stream of events of type T. The type is supplied
            as a parameter to the constructor along with other parameters required for binding the 
            appropriate input adapter to the stream.    
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.AggregateFunction">
            <summary>
            All builtin aggregate functions 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.AggregateFunctionInfo">
            <summary>
            Represents one aggregate method call inside Aggregate operator
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.AggregateRewriter">
            <summary>
            Rewrites a LINQ expression that is the following form:
                    stream.Window().Select()
            To an Aggregate() call or UDO call
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.OperatorExpressionRewriter">
            <summary>
            This is the base class for all rewriter that needs to be done before we translate
            a LINQ expression to our CepExpression tree. It's work is to make sure the multicast
            information is not lost during the transformation: when one Expression is referenced
            by another exression, then the relationship needs to be maintained during rewrite.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.ExpressionVisitor">
            <summary>
            The LINQ ExpressionVistitor is the base class that will be reused in a number of different ways.
            All the important functionality provided by the LINQ provider can be viewed as a number of 
            transformations of a LINQ expression which involves a number of rewrites followed by a final
            traversal of the expression that emits the XML (ISL) associated with the CEP engine. 
            This class understands the CEP specific extensions as well as the generalized LINQ constructs.
            For each of these expressions this visitor class structures a visit to the associated sub expressions
            In many cases there are more than one sub-expressions to be visited. 
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.OperatorExpressionRewriter.Visit(System.Linq.Expressions.Expression)">
            <summary>
            All our Cep expression call are method calls, so we only need to make sure
            the information is not lost during the rewrite for method call
            </summary>
            <param name="exp"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.AggregateRewriter.ExtractAggregateInfoFromMethodCall(System.String,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visit method call like w.Sum(), w.Avg(), etc
            </summary>
            <param name="outputFieldName">output field name, if null, use the name of the aggregate function</param>
            <param name="aggregateMethodExpr">the aggregate method call</param>
            <returns>an instance of AggregateMember which contains all aggregate information</returns>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.AggregateRewriter.UdxType.Uda">
            <summary>
            user defined aggregate
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.AggregateRewriter.UdxType.Udo">
            <summary>
            user defined operator
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.AlterLifetimeExpression">
            <summary>
            AlterLifetimeExpression allows the lifetime associated with an event to be altered. This 
            provides the capability to dilate or shrink the lifetime associated with an event in a
            computationally controlled manner. The control is provided by two expressions that allow
            the user to specify how the new start time and the lifetime is computed based upon
            the original start and end times of the event. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepEvent">
            <summary>
            Provides access to the start time with expressions that can only refer to the start time of an event.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepEvent.StartTime">
            <summary>
            Gets the start time of the event.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepEvent`1">
            <summary>    
            Allows to specify lambda expressions for event duration changes. It provides access to start time, end time, and event payload.
            </summary>
            <typeparam name="TPayload">The type of the event payload</typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepEvent`1.Payload">
            <summary>
            Gets the payload of the event.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepEvent`1.EndTime">
            <summary>
            Gets the end time of the event.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CEPExpressionCloner">
            <summary>
            This class is the equivalent of a copy constructor for CEPExpressions. 
            When we need to make a copy of a CEP expression this class needs to be 
            instantiated and the Clone method needs to be invoked.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepExpressionVisitor">
            <summary>
            The CepExpressionVisitor class that is derived from the base class ExpressionVisitor. 
            While the base class understands all the traditional LINQexpressions the 
            CepExpressionVisitor class understands the structure and layout of all the 
            new CEP expressions. All the expression visitors used in the LINQ provider implementation
            derive from this base class. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepInputStreamExtractor">
            <summary>
            Extracts all the input streams from the query definition
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepInputStreamExtractor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            CepStream can also have the form of local variable, like this:
                value(ApplicationCultureTests__DisplayClass4).inputStream2
            In this case, we need to unwrap it and visit the inner expression
            </summary>
            <param name="memberExpr"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepExpressionRewriter">
            <summary>
            This is the base class to transform a CepExpression, it is mainly for optimization
            purpose
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepExpressionType">
            <summary>
            The existing set of LINQ expressions need to be extended with new expression types 
            that are specific to CEP. For each of the operators that are there in CEP an equivalent 
            expression type is defined.  This will facilitate the handling of semantics associated
            with each of these operators. For some of these operators there are mappings to existing 
            constructs in the current LINQ specification. The handlers for these constructs generate
            the appropriate type of CEP expression type. In order to delineate these expression types
            we use the traditinal tick of partitioning the values assigned to an enumerated type. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.IKey`1">
            <summary>
            Provides access to the grouping key. 
            </summary>
            <typeparam name="K"></typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.IKey`1.Key">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2">
            <summary>
            Represents a group of streams.
            </summary>
            <remarks>
            CepGroupingStreams restricts the programming surface area once a grouping construct has been specified. 
            The set of methods exposed to the programmer cover multiple
            types. Each of these types surfaces only the set of operators available to the programmer. The transition
            between any of these types is carefully controlled by the operations so that problems surface 
            early at compile time rather than at runtime. 
            </remarks>
            <typeparam name="TPayload">Payload type.</typeparam>
            <typeparam name="TGroupingKey">Grouping key type.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2.ApplyWithUnion``1(System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{`0},Microsoft.ComplexEventProcessing.Linq.CepStream{``0}}})">
            <summary>
            Applies the query logic specified by the applybranch parameter to a grouped stream. 
            Produces a result stream per group and unions all result streams together.
            </summary>
            <remarks>
            The grouped stream is a result of a group-by operation on a stream.
            </remarks>
            <typeparam name="TApplyOutput">Event payload type at the output of the apply.</typeparam>
            <param name="applybranch">Query to be applied to each group.</param>
            <returns>Stream with TApplyOutput as the event payload type.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2.ApplyWithUnion``2(System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{`0},Microsoft.ComplexEventProcessing.Linq.CepStream{``1}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.KeyedPayload{`1,``1},``0}})">
            <summary>
            Applies the query logic specified by the applybranch parameter to a grouped stream. 
            Produces a result stream per group and unions all result streams together.
            The selector parameter is a lambda expression that allows additional 
            project operations on the output and provides access to grouping fields.
            </summary>
            <remarks>
            The grouped stream is a result of a group-by operation on a stream.
            </remarks>
            <typeparam name="TApplyOutput">The event payload type at the output of the apply.</typeparam>
            <typeparam name="TUnionOutput">The event type at the output of the group union.</typeparam>
            <param name="applybranch">The query to be applied to each group.</param>
            <param name="selector">The lambda expression for projections of the output.</param>
            <returns>A stream with TApplyOutput as event payload type.</returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2.Key">
            <summary>
            The grouping key.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.KeyedPayload`2">
            <summary>
            
            </summary>
            <typeparam name="TPayload"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.KeyedPayload`2.Payload">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.KeyedPayload`2.Key">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepOperatorAttribute">
            <summary>
            Attribute used to decorate all operations CepStream exposes. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepOrderableStream`1">
            <summary>
            Represents a stream of events that can be ordered.
            </summary>
            <remarks>
            CepOrderableStream helps you write ranking expressions.
            A CepOrderableStream is produced when a SelectMany is applied to a window stream, like this:
            <code>
                             (from w in s.Window()
                             from e in w
                             order by e.i 
                             select e).Take(10)
             </code>
             An orderable stream facilitates the specification of an "order by" clause. 
             After at least one "order by" clause is applied to an orderable stream, an ordered stream (<see cref="T:Microsoft.ComplexEventProcessing.Linq.CepOrderedStream`1"/>)
             is produced. 
            </remarks>
            <typeparam name="T">The event type of the orderable stream.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepOrderedStream`1">
            <summary>
            An ordered stream is the result of an "order by" or one of its variants in the query. 
            It helps constrain subsequent query specification to operations that are allowed on an ordered stream, such as Take.
            </summary>
            <remarks>
            Once a stream has been ordered it has to be followed
            by a Take operation which yields a regular CEP stream that can be composed further.
            </remarks>
            <typeparam _name="T">The event type of the ordered stream.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepQueryTemplateFormatter">
            <summary>
            CepQueryTemplateFormatter formats LINQ query expressions. In the 
            current format the query tree/DAG is generated as a collection of 
            operator nodes which are appropriately wired using the relevant 
            input and output stream names. This format is conveneient in that
            it allows us to potentially model richer structures. 
            The QueryTemplate formatter should be logically thought of as making 
            multiple traversals of the LINQ expression to generate the appropriate XML. 
            In the first pass the QueryTemplateStreamNameGenerator is invoked. This 
            class derived from the CepExpressionVisitor class generates the appropriate
            input and output stream names for each of the CEP operators. In addition it 
            also gathers the various imported and exported streams into candidate sets. 
            In the second pass the CepQueryTemplateFormatter generates the appropriate ISL
            for each of the operators. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.IslFormatter">
            <summary>
            CEPFormatter is the base class for all formatters. It provides the appropriate constructs 
            for building a string, providing the correct indentation and miscellanous utilities. 
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.ProcessStringMethods(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Convert string operations to engine builtin operations if possible.
            We don't support all string operations in engine yet, so here we
            just pick and choose the ones engine supports for now
            </summary>
            <param name="methodCallExpr"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.WriteCultureInfo(System.Linq.Expressions.Expression)">
            Write CultureInfo as attribute for ComparisonExpression
            CultureInfo could come from three sources
              * CepUtility.GetEventFieldCulture -- we translate to get field culture in engine
              * static property/method call of CultureInfo
              * a CultureInfo object
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.ProcessCepUtilityCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Process all CepUtility static method call
            </summary>
            <param name="methodCallExpr"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.FormatPayloadElements(System.String,System.Type,System.String,System.Linq.Expressions.NewExpression)">
            <summary>
            Format payload from a NewExpression
            </summary>
            <param name="pathPrefix"></param>
            <param name="payloadType"></param>
            <param name="operatorExpression"></param>
            <param name="payloadExpr"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.FormatPayloadElements(System.String,System.Type,System.String,System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Format the payload from a MemberInitExpression
            </summary>
            <param name="pathPrefix"></param>
            <param name="payloadType"></param>
            <param name="operatorExpression"></param>
            <param name="payloadExpr"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.FormatUnwrappedType(System.Type,System.String,System.String,System.String)">
            <summary>
            Unwrap a type completely and write each field/property of the type as one project
            expression
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.ParentIsGroupByAnonymousType(System.Linq.Expressions.MemberExpression)">
            <summary>
            Check if the given expression's parent is the anonymous type that is generated by 
            compiler, for the following query:
                    from e in inputStream
                    group e by e.i into gs
                    from e1 in gs
                    ...
            the compiler generated anonymous type would look something like  
                    TransparentIdentifier19 {gs, e1}
            and the member expression looks something like:
                    TransparentIdentifier19.gs.Key
                    TransparentIdentifier19.e1.i
            This method returns true if the expression is like one of the following:
                    __TransparentIdentifier19.gs
                    __TransparentIdentifier19.e1
            </summary>
            <param name="expression">the expression that accesses a member or a parameter</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.IslFormatter.IsCepEventPayloadReference(System.Linq.Expressions.MemberExpression)">
            <summary>
            Check if a given field reference is referencing user payload member. This is used in 
            AlterLifeTime expression where user can have a lambda epxression like the following:
              (CepEvent e) => e.StartTime/e.EndTime/e.Payload.i, ...
            So the reference to user payload 'i' apprears in the form of e.Payload.i
            </summary>
            <param name="memberExpr">the expresssion to check if it is referencing CepEvent.Payload.*</param>
            <returns>true if it is referencing members in CepEvent.Payload</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepQueryTemplateFormatter.VisitSource(System.Linq.Expressions.Expression)">
            <summary>
            This method visits a source stream. It avoids visiting the same source twice by
            remembering all visted stream sources. If a stream source is visited multiple
            times, then a multicast operator will be inserted.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepQueryTemplateFormatter.FormatApplyBranch(System.Linq.Expressions.Expression,System.String)">
            <summary>
            Prepare apply branch for output by injecting Export operator and assign names for all streams
            </summary>
            <remarks>
            The traversal of the Grouping expression is special case because of the apply side.
            The export and Import operators associated with the apply fragment need to be traversed 
            and stored separately. Since the apply side can be any query expression this is accomplished
            by instantiating a separate stream name generator for traversing the apply side and taking 
            the imported and exported names and storing them in the enclosing grouping expression. 
            </remarks>
            <param name="groupApplyName"></param>
            <param name="applyExpression">current apply expression</param>
            <returns>the new apply expression that has all stream names assigned</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepRankedEvent`1">
            <summary>
            Exposes a rank along with the event payload over a ranked stream using Take. 
            </summary>
            <typeparam _name="P">The payload type.</typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepRankedEvent`1.Rank">
            <summary>
            Gets the rank of the event.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepRankedEvent`1.Payload">
            <summary>
            Gets the payload of the event.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepStream">
            <summary>
            Provides the extension methods used for writing LINQ queries over a stream of CEP events.
            </summary>
            <remarks>
            CepStream is a collection of the extension methods. 
            In general, the extension methods return a LINQ method call expression. The method calls capture the invocation
            sequence in a canonical form that is later translated into a runnable CEP query. 
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.AlterEventLifetime``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent,System.DateTime}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent{``0},System.TimeSpan}})">
            <summary>
            Alters the lifetime of the events in the stream. This method can change both the start time and end time of an event.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The input stream. </param>
            <param name="startTimeFunc">The function that defines the new event start time given an event.</param>
            <param name="lifeTimeFunc">The function that defines the new event life time given an event.</param>
            <returns>A new stream with changed event lifetimes. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ShiftEventTime``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent,System.DateTime}})">
            <summary>
             Shift event times by the amount specified by the shiftExpr parameter.
             The shift value can be positive or negative. The method does not change event life times. 
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The input stream. </param>
            <param name="shiftExpr">The expression that defines the time span to shift. </param>
            <returns>A stream with shifted event start times. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ToPointEventStream``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
            <summary>
            Changes the events in input stream to point events by keeping only the event start times.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The input stream. </param>
            <returns>A stream with events converted to point events.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.AlterEventDuration``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent{``0},System.TimeSpan}})">
            <summary>
             Changes the duration of the input events. This method does not change the start time of an event.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The input stream. </param>
            <param name="eventDurationFunc">The expression that defines the new event duration. </param>
            <returns>A stream with new event durations. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SnapshotWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow. 
            Each window is a snapshot window that is defined by the closest event endpoints in the stream.
            </summary>
            <remarks>
            Uses a default input policy that clips both start and end times of the events to the window size.
            </remarks>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply the Snapshot operation against. </param>
            <param name="outputPolicy">Indicate how the output events of the window operation are altered they are introduced back into the stream. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SnapshotWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow.
            Each window is a snapshot window that is defined by the closest event endpoints in the stream.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply the Snapshot operation against. </param>
            <param name="inputPolicy">Indicate how events are altered before being fed into the window operation. </param>
            <param name="outputPolicy">Indicate how the output events of the window operation are altered they are introduced back into the stream. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow. 
            The window is defined by constant window size and hop size timespans. 
            </summary>
            <remarks>
            Uses a default input policy that clips both start and end times of the events to the window size.
            </remarks>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply the HoppingWindow operation against. </param>
            <param name="windowSize">The length of the window.</param>
            <param name="hopSize">The hop size of the window.</param>
            <param name="outputPolicy">Indicate how output events of the window operation are altered. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied to. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow. 
            The window is defined by constant window size and hop size timespans. You can also provide an alignment time as a reference for the starting
            point for the window.
            <remarks>
            Uses default input policy that clip both start and end time of the event to the window size.
            </remarks>
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply the HoppingWindow operation against. </param>
            <param name="windowSize">The length of the window. </param>
            <param name="hopSize">The hop size of the window. </param>
            <param name="alignment">The reference time to align window start times. </param>
            <param name="outputPolicy">Indicate how output events of the window operation are altered. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied to. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow. 
            The window is defined by constant window size and hop size timespans. You can also provide an alignment time as a reference for the starting
            point for the window.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply the HoppingWindow operation against. </param>
            <param name="windowSize">The length of the window. </param>
            <param name="hopSize">The hop size of the window. </param>
            <param name="inputPolicy">Indicate how events are altered before being input into the window operation. </param>
            <param name="outputPolicy">Indicate how output events of the window operation are altered before they are introduced back into the stream. </param>
            <returns>A window stream to which aggregates, TopK or UDO can be applied to. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            The window is defined by constant window size and hop size timespans. You can also provide an alignment time as a reference for the starting
            point of the window.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply the HoppingWindow operation against. </param>
            <param name="windowSize">The length of the window. </param>
            <param name="hopSize">The hop size of the window. </param>
            <param name="alignment">The reference time to align window start times. </param>
            <param name="inputPolicy">Indicates how events are altered before being input into the window operation. </param>
            <param name="outputPolicy">Indicates how output events of the window operation are altered before they are introduced back into the stream. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied to. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow.
            A tumbling window is a special kind of hopping window where window size and hop
            size are the same.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply TumblingWindow operation against. </param>
            <param name="windowSize">The length and hop size of the window. </param>
            <param name="outputPolicy">Indicates how output events coming output of window operation are altered. </param>
            <returns>A window stream to which aggregates, ranking or uder-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow.
            A tumbling window is a special kind of hopping window where window size and hop
            size are the same. You can also provide an alignment time as a reference for the starting
            point of the window.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply window operation against. </param>
            <param name="windowSize">The length and hop size of the window. </param>
            <param name="alignment">The reference time to align window start times. </param>
            <param name="outputPolicy">Indicate how output events of the window operation are altered. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow.
            A tumbling window is a special kind of hopping window where window size and hop
            size are the same. You can also provide an alignment time as a reference for the starting
            point of the window.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply window operation against. </param>
            <param name="windowSize">The length and hop size of the window. </param>
            <param name="inputPolicy">Indicates how events are altered before being input into the window operation. </param>
            <param name="outputPolicy">Indicates how output events of the window operation are altered. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Transforms a stream to a window stream where each member is a CepWindow.
            A tumbling window is a special kind of hopping window where window size and hop
            size are the same. You can also provide an alignment time as a reference for the starting
            point of the window.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The CepStream to apply window operation against. </param>
            <param name="windowSize">The length and hop size of the window. </param>
            <param name="alignment">The reference time to align window start times. </param>
            <param name="inputPolicy">Indicates how events are altered before being input into the window operation. </param>
            <param name="outputPolicy">Indicates how output events of the window operation are altered. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.CountByStartTimeWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.UInt32,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Groups input stream events into windows of events based on a given number of unique event start times. 
            The window slides when a new event arrives that starts at a different time. 
            </summary>
            <param name="source">The CepStream to apply window operation against. </param>
            <param name="numberOfEventStartTime">The window size by number of unique event start times. </param>
            <param name="outputPolicy">Indicates how output events of the window operation are altered or defined before they are introduced back into the stream. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied.  </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.CountByStartTimeWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.UInt32,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
            <summary>
            Groups input stream events into windows of events based on a given number of unique event start times. 
            The window slides when new event arrives that starts at a different time. 
            </summary>
            <param name="source">The CepStream to apply window operation against. </param>
            <param name="numberOfEventStartTime">The window size by number of unique event start times. </param>
            <param name="inputPolicy">Indicates how events are altered before being input into the window operation. </param>
            <param name="outputPolicy">Indicates how output events of the window operation are altered or defined before they are introduced back into the stream. </param>
            <returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Select``2(Microsoft.ComplexEventProcessing.Linq.CepWindowStream{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},``1}})">
            <summary>
            Maps a window stream to a stream based on a given mapping expression.
            </summary>
            <typeparam name="TInput">The input event payload type of the window. </typeparam>
            <typeparam name="TResult">The result payload type. </typeparam>
            <param name="source">The stream of windows. </param>
            <param name="selector">Defines the mapping expression. </param>
            <returns>A stream which is the union of all window streams. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``2(Microsoft.ComplexEventProcessing.Linq.CepWindowStream{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},``0,``1}})">
            <summary>
            Supports order by operation against a windowed stream.
            </summary>
            <remarks>
            An example is:
            <code>
                       (from w in s.Snapshot()
                       from e in w
                       order by e.i
                       order by e.j descending
                       select e).Take(10)
             </code>
             The two "from" clauses are converted into SelectMany.
            </remarks>
            <typeparam name="TInput">The type of the input event payload. </typeparam>
            <typeparam name="TResult">The type of output event payload. </typeparam>
            <param name="source">The stream source. </param>
            <param name="bind">The bind expression to bind elements in the two "from" clauses. </param>
            <param name="selector">The result selector. </param>
            <returns>A stream that can be ordered. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Where``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Filters events from an input stream using a given filter function.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <param name="source">The source stream. </param>
            <param name="filter">The filter function. </param>
            <returns>The stream of filtered events. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Select``2(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Projects events from input stream using a projections expression.
            </summary>
            <typeparam name="TPayload">The type of the input event payload. </typeparam>
            <typeparam name="TResult">The type of the result event payload. </typeparam>
            <param name="source">The input stream. </param>
            <param name="selector">The mapping functions that defines the projection over the input events. </param>
            <returns>The stream of projected input events. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``3(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            Produces a stream based on the cross join of two input streams.
            </summary>
            <remarks>
            Note that even in a cross join events from the inner and outer stream are only matched and output as a result
            of the join if their lifetimes overlap. 
            </remarks>
            <typeparam name="TInput">The payload type of events from the outer input stream. </typeparam>
            <typeparam name="TBind">The payload type of events from the inner input stream. </typeparam>
            <typeparam name="TResult">The payload type of result events. </typeparam>
            <param name="source">The outer input stream. </param>
            <param name="bind">The inner input stream. </param>
            <param name="selector">The mapping expression that defines a projection on the output. </param>
            <returns>A stream where the result is a cross join of the outer and inner stream. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``4(Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams{``0,``1},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``2}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.IKey{``1},``2,``3}})">
            <summary>
            Supports adding query logic inside a Group and Apply. 
            </summary>
            <example>
            An example is:
            <code>
                    from e1 in inputStream
                    group e1 by e.i into gs
                    from e2 in gs
                    ...
            </code>
            </example>
            <typeparam name="TInput">The payload type of input events. </typeparam>
            <typeparam name="TGroupingKey">The payload type of grouping key events. </typeparam>
            <typeparam name="TBind">The payload type of bound events. </typeparam>
            <typeparam name="TResult">The payload type of result events. </typeparam>
            <param name="source">The stream source.</param>
            <param name="bind">The bind information that bind the second stream to the first stream.</param>
            <param name="selector">The mapping expression that defines a projection on the output.</param>
            <returns>A stream that can be used for further apply logic in the Group and Apply.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``4(Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams{``0,``1},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepWindowStream{``2}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.IKey{``1},``2,``3}})">
            <summary>
            Enables window operations on top of a grouping stream.
            </summary>
            <typeparam name="TInput">The payload type of input events. </typeparam>
            <typeparam name="TGroupingKey">The payload type of the grouping key. </typeparam>
            <typeparam name="TBind">The payload type of bound events. </typeparam>
            <typeparam name="TResult">The payload type of result events. </typeparam>
            <param name="source">The grouping stream source. </param>
            <param name="bind">The binding from grouping stream to window streaming. </param>
            <param name="selector">The mapping expression that defines a projection on the output. </param>
            <returns>A stream that is the result of select many and the window operation. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Join``4(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
            <summary>
            Joins the events from the outer stream with events from the inner stream on the given join key.
            </summary>
            <remarks>
            Note that join only matches events from the inner and outer stream and outputs them as a result
            if their lifetimes overlap. 
            </remarks>
            <typeparam name="TOuter">The outer stream event type.</typeparam>
            <typeparam name="TInner">The inner stream event type.</typeparam>
            <typeparam name="TKey">The join key type.</typeparam>
            <typeparam name="TResult">The join result type.</typeparam>
            <param name="outer">The outer stream.</param>
            <param name="inner">The inner stream.</param>
            <param name="outerKeySelector">The selector to select the key values from outer stream event.</param>
            <param name="innerKeySelector">The selector to select the key value from inner stream event.</param>
            <param name="selector">The mapping expression that defines a projection on the output. </param>
            <returns>A stream of joined events. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.GroupBy``2(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Partitions the input stream by the specified grouping key. 
            </summary>
            <typeparam name="TPayload">The payload type of the input events. </typeparam>
            <typeparam name="TGroupingKey">The grouping key event type. </typeparam>
            <param name="source">The input stream. </param>
            <param name="keySelector">The expressions for projecting the grouping key. </param>
            <returns>Groups of streams.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.GroupBy``3(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
            <summary>
            Groups the source stream by the specified key selector functions and projects results
            using the element selector function.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <typeparam name="TGroupingKey">The grouping key event type.</typeparam>
            <typeparam name="TResult">The payload type of result events.</typeparam>
            <param name="source">The input stream.</param>
            <param name="keySelector">The expression that defines key value.</param>
            <param name="selector">The expression that projects the results.</param>
            <returns>Groups of streams.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Union``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
            <summary>
            Unions two streams together into one stream.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <param name="outer">The first stream for the union.</param>
            <param name="inner">The second stream for the union.</param>
            <returns>A stream that unions the two input streams. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.OrderBy``2(Microsoft.ComplexEventProcessing.Linq.CepOrderableStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Orders the input stream by the 'rankSelector'.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <typeparam name="TOrderKey">The type of the ordering key.</typeparam>
            <param name="source">The stream source to order against.</param>
            <param name="rankSelector">The ranking expression whose value is used to compare events against each other.</param>
            <returns>An ordered stream that can furthur be ranked, for example, by using Take(). </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.OrderByDescending``2(Microsoft.ComplexEventProcessing.Linq.CepOrderableStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Orders the input stream by the 'rankSelector' in descending order.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <typeparam name="TOrderKey">The type of the ordering key.</typeparam>
            <param name="source">The stream source to order against.</param>
            <param name="rankSelector">The expression whose value is used to compare events against each other.</param>
            <returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ThenBy``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Orders an ordered stream by another orderKey as indicated by 'rankSelector'.
            </summary>
            <typeparam name="TPayload">The payload type of input events. </typeparam>
            <typeparam name="TOrderKey">The type of the ordering key.</typeparam>
            <param name="source">The stream source to order against.</param>
            <param name="rankSelector">The expression whose value is used to compare events against each other.</param>
            <returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ThenByDescending``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Orders an ordered stream by another orderKey as indicated by 'rankSelector'.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <typeparam name="TOrderKey">The type of the ordering key.</typeparam>
            <param name="source">The stream source to order against.</param>
            <param name="rankSelector">the expression whose value is used to compare events against each other.</param>
            <returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Select``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Given an ordered stream, this method produces an ordered stream that
            can be used for ranking.
            </summary>
            <typeparam name="TInput">The payload type of input events.</typeparam>
            <typeparam name="TResult">The payload type of result events. </typeparam>
            <param name="source">The input stream. </param>
            <param name="selector">The mapping to produce the result event type.</param>
            <returns>An ordered stream. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Take``1(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.UInt32)">
            <summary>
            Given an ordered stream, takes a given number of events from each window.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <param name="source">The input stream.</param>
            <param name="numberOfElements">The number of elements to take from each window.</param>
            <returns>A stream with a given number of events taken from each window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Take``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.UInt32,System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepRankedEvent{``0},``1}})">
            <summary>
            Takes a given number of events from each window and also evaluate the given expression.
            This is used for cases in which you want to project the rank into the result of Take().
            </summary>
            <typeparam name="TInput">The payload type of input events. </typeparam>
            <typeparam name="TResult">The payload type of output events. </typeparam>
            <param name="source">The input stream to take events from.</param>
            <param name="numberOfElements">The number of elements to take.</param>
            <param name="resultSelector">The project expression to project the ranking into the result.</param>
            <returns>A stream that is the result of Take.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.CreateInputStream``1(System.String,Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext)">
            <summary>
            Create an unbound stream with event payload of type 'TPayload'
            </summary>
            <typeparam name="TPayload">event payload type</typeparam>
            <param name="name">name of the stream</param>
            <param name="context">the stream creation context</param>
            <returns>an input stream with given name and type</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.CreateAdapterStream``1(System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext)">
            <summary>
            Create a bound stream with given binding information
            </summary>
            <typeparam name="TPayload"></typeparam>
            <param name="streamName"></param>
            <param name="adapterType"></param>
            <param name="adapterConfig"></param>
            <param name="eventShape"></param>
            <param name="context">the stream creation context</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TopK``2(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.WindowOperationInfo,System.Int32,System.String,Microsoft.ComplexEventProcessing.Linq.TopKRankingExpression[])">
            <summary>
            Internal implementation of the TopK
            </summary>
            <typeparam name="TInput">input stream event type</typeparam>
            <typeparam name="TResult">output stream event type</typeparam>
            <param name="source">stream source</param>
            <param name="windowOperationInfo">window description and input/output policy</param>
            <param name="numOfItemsToTake">number of items to take</param>
            <param name="rankingFieldName">the output field name for the ranking field. If the ranking field name is empty, then do not output ranking field</param>
            <param name="rankingExpressions">a list of ranking expressions</param>
            <returns>new CepStream</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.IsEmpty``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
            <summary>
            Function used in queries to indicate LASJ
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream._AlterEventLifetime``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent,System.DateTime}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent{``0},System.TimeSpan}})">
            <summary>
            Internal alter life time representation when it deals with DateTime instead of DateTime
            </summary>
            <typeparam name="TPayload">input event payload type</typeparam>
            <param name="source">input stream</param>
            <param name="startTimeFunc">the function that defines new event start time given a CepEvent</param>
            <param name="lifeTimeFunc">the function that defines new event life time given a CepEvent</param>
            <returns>a new stream with events' time changed</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepStream`1">
            <summary>
            Represents a stream of events from any user specified payload type.  
            </summary>
            <remarks>
            Before you can write a CEP query, you must provide the appropriate stream definition. 
            This class provides various methods to create a CepStream object.    
            </remarks>
            <typeparam name="TPayload">The payload type of the event in the stream. </typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.String)">
            <summary>
            Creates an unbound stream with event payload of type 'TPayload'.
            </summary>
            <param name="streamName">The name of the stream. </param>
            <returns>An input stream with given name and type. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Creates a bound stream from a given input adapter factory.
            </summary>
            <param name="streamName">The name of the input stream.</param>
            <param name="adapterFactoryType">The input adapter factory type.</param>
            <param name="configInfo">The input adapter factory configuration.</param>
            <param name="eventShape">The event shape of the input stream.</param>
            <returns>A bound stream whose events come from an instance of an input adapter that is generated by the input adapter factory.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Creates a bound stream from a given input adapter factory.
            </summary>
            <param name="streamName">The name of the input stream.</param>
            <param name="adapterFactoryType">The input adapter factory type.</param>
            <param name="configInfo">The input adapter factory configuration.</param>
            <param name="eventShape">The event shape of the input stream.</param>
            <param name="advanceTimeSettings">The advance time setting for the adapter.</param>
            <returns>A bound stream whose events come from an instance of the input adapter that is generated by the input adapter factory.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.Uri,Microsoft.ComplexEventProcessing.EventShape)">
            <summary>
            Creates a bound stream over an input from a given published stream.
            </summary>
            <param name="publishedStreamName">The name of the published stream.</param>
            <param name="eventShape">The shape of the events in the stream.</param>
            <returns>A bound input stream for the events in a given published stream.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.Uri,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
            <summary>
            Creates a bound stream for input from a given published stream.
            </summary>
            <param name="publishedStreamName">The name of the published stream. </param>
            <param name="eventShape">The shape of the events in the stream.</param>
            <param name="advanceTimeSettings">The advance time settings for this stream.</param>
            <returns>A bound input stream for the events in a given published stream.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(System.String,System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Creates a query bound to one or more input queries.
            At least one input to the query must be a query. If there are multiple queries as input,
            all input queries must be part of the same server and application.
            </summary>
            <param name="queryName">The name of the query to be created.</param>
            <param name="description">The description of the query.</param>
            <param name="adapterFactoryType">The type of the output adapter factory.</param>
            <param name="adapterConfig">The configuration for the output adapter factory.</param>
            <param name="eventShape">The expected event shape that is going to be sent to the output adapter.</param>
            <param name="eventOrder">The expected event order.</param>
            <returns>A runnable query that the user can then start, stop, or otherwise manage.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Creates a query bound to one or more input queries and with an unbound output.
            At least one input to the query must be a query. If there are multiple queries as input,
            all input queries must be part of the same server and application.
            The output of the query can be consumed through dynamic query composition only.
            </summary>
            <param name="queryName">The name of the query.</param>
            <param name="description">The description of the query.</param>
            <param name="eventShape">The shape of the query output stream.</param>
            <param name="eventOrder">The expected event order</param>
            <returns>The newly created query.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToPublishedStreamQuery(System.Uri,System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Creates a query bound to one or more input queries and with an output bound to an explicitly named published stream.
            At least one input to the query must be a query. If there are multiple queries as input,
            all input queries must be part of the same server and application.
            Only one query bound to the same published stream can be running at any given time.
            </summary>
            <param name="publishedStreamName">The name of the published stream.</param>
            <param name="queryName">The name of the query.</param>
            <param name="description">The description of the query.</param>
            <param name="eventShape">The shape of the query output stream.</param>
            <param name="eventOrder">The expected event order.</param>
            <returns>The newly created query.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(Microsoft.ComplexEventProcessing.Application,System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Creates a query with an unbound output running in the specified application.
            The output of the query can be consumed through dynamic query composition only.
            </summary>
            <param name="application">The application which will host the query.</param>
            <param name="queryName">The name of the query.</param>
            <param name="description">The description of the query.</param>
            <param name="eventShape">The shape of the query output stream.</param>
            <param name="eventOrder">The expected event order.</param>
            <returns>The newly created query.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(Microsoft.ComplexEventProcessing.Application,System.String,System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Convert the defined LINQ query into a CEP query that runs in the specified application.
            </summary>
            <param name="application">The application which will host the query.</param>
            <param name="queryName">The name of the query to be created.</param>
            <param name="description">The description of the query.</param>
            <param name="adapterFactoryType">The type of the output adapter factory.</param>
            <param name="adapterConfig">The configuration for the output adapter factory</param>
            <param name="eventShape">The expected event shape that is going to be sent to the output adapter.</param>
            <param name="eventOrder">The expected event order.</param>
            <returns>A runnable query that user can then start, stop, or otherwise manage.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToPublishedStreamQuery(System.Uri,Microsoft.ComplexEventProcessing.Application,System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
            <summary>
            Creates a query with an output bound to an explicitly named published stream.
            The output of the query can be consumed through dynamic query composition.
            Only one query bound to the same published stream can be running at any given time.
            </summary>
            <param name="publishedStreamName">The name of the published stream.</param>
            <param name="application">The application which will host the query.</param>
            <param name="queryName">The name of the query.</param>
            <param name="description">The description of the query.</param>
            <param name="eventShape">The shape of the query output stream.</param>
            <param name="eventOrder">The expected event order.</param>
            <returns>The newly created query.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the CepStream class.
            </summary>
            <param name="expression">The expression, when evaluated, will generate a stream of events that has payload type of T.</param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ExtractInputStreams">
            <summary>
            Retrieves a list with information about input streams from a given stream definition.
            </summary>
            <returns>all input streams used in the query</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepStreamConsumer`1">
            <summary>
            CepStreamConsumer represents a specific stream consumer information. It will be translated
            to actual output binding for a query.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext">
            <summary>
            This class represents the context in which a CepStream was created.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext.#ctor">
            <summary>
            Initializes a new instance of the CepStreamCreationContext class.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext.Query">
            <summary>
            Gets or sets the query from which the CepStream was created. 
            </summary>
            <value>
            Returns null if the CepStream was not created from a query.
            </value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedAggregateAttribute">
            <summary>
            Decorates the user defined aggregate extension method
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedAggregateAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the user defined attribute.
            </summary>
            <param name="udaType">The type that implements the user defined attribute.</param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedOperatorAttribute">
            <summary>
            Decorates the user defined operator extension method.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedOperatorAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the user defined opreator attribute. 
            </summary>
            <param name="udoType">The type that implements the user defined operator.</param>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepUtility">
            <summary>
            Utility class used by user defined operator, aggregate and functions.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepUtility.DoNotCall">
            <summary>
            Indicates that a given method is not supposed to be called and executed. This is used
            to decorate the extension methods for User Defined Operator and User Defined 
            Aggregate so that users would not accidentally execute it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepUtility.GetEventFieldCulture(System.String)">
            <summary>
            Creates an object that describes culture by using the culture of a specific field from input stream event.
            </summary>
            <param name="inputFieldExpression">The member access expression on input stream event. </param>
            <returns>An object that describes the culture of the specified input field. </returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindow`1">
            <summary>
            A window is a finite collection of events that results from applying a windowing operator on a stream of events.
            </summary>
            <remarks>
            Windows serve as the basis for set-based operations such as aggregation or ranking. 
            </remarks>
            <typeparam name="TPayload">event payload type</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods">
            <summary>
            Extension methods for builtin aggregates.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.SByte}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int16}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Byte}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt16}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt32}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt64}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.SByte}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int16}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Byte}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt16}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt32}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt64}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
            <summary>
            Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. 
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window that the sum is computed over.</param>
            <param name="input">The lambda expression which defines the input value for the summation based on an input event.</param>
            <returns>A nullable value that contains the result of the summation.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Count``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0})">
            <summary>
            Computes the Count of events in the window.
            </summary>
            <typeparam name="TPayload">The payload type of window events </typeparam>
            <returns>A value that contains the count of events. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Min``2(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Computes the minimum of the values specified by the input parameter over a window of events.
            </summary>
            <typeparam name="TMinValue">The value type that the minimum computation is operating against.</typeparam>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the minimum calculation is applied to.</param>
            <param name="input">A lambda expression that defines the value that the minimum is going to operate against. </param>
            <returns>A value that contains the minimum. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Max``2(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Computes the maximum of the values specified by the input parameter over a window of events.
            </summary>
            <typeparam name="TMaxValue">The value type that the maximum computation is operating against.</typeparam>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the maximum calculation is applied to.</param>
            <param name="input">The lambda expression that defines the value that the maximum is going to operate against. </param>
            <returns>A value that contains the maximum. </returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.SByte}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int16}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Byte}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt16}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt32}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt64}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.SByte}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int16}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Byte}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt16}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt32}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt64}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
            <summary>
            Computes the avarage over all events in a window. The value to average over is defined in the input expression parameter.
            </summary>
            <typeparam name="TPayload">The payload type of window events.</typeparam>
            <param name="window">The window with the input events to which the average is applied to.</param>
            <param name="input">The lambda expression which specifies the value that the average is computed over.</param>
            <returns>The nullable value that contains the average over the events in the input window.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.UserDefinedAggregate``3(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Object)">
            <summary>
            Calls a user defined aggregate where the UDA does not take an additional expression to map the 
            input event to the input that the UDA expects.
            </summary>
            <typeparam name="TPayload">The payload type of input events. </typeparam>
            <typeparam name="TUda">The input event type of the user defined aggregate. </typeparam>
            <typeparam name="TAggregateOutput">The event type of the aggregate output. </typeparam>
            <param name="window">The window that the aggregate is applied to.</param>
            <param name="configInfo">The initialization information for the aggreagate.</param>
            <returns>The output of the user defined aggregate.</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.UserDefinedAggregateWithMapping``4(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Object)">
            <summary>
            Calls a user defined aggregate.
            </summary>
            <typeparam name="TPayload">The payload type of input events.</typeparam>
            <typeparam name="TUda">The input event type of the user defined aggregate.  </typeparam>
            <typeparam name="TAggregateInput">The input type of the aggregate. </typeparam>
            <typeparam name="TAggregateOutput">The event type of the aggregate output. </typeparam>
            <param name="window">The window that aggregate is applied to.</param>
            <param name="aggregateInputExpr">The expression that transform the input event type to the aggregate input event type.</param>
            <param name="configInfo">The initialization information for the aggreagate.</param>
            <returns>The output of the user defined aggregate.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindowKind">
            <summary>
            The various kinds of windows supported in the system are captured in this enumerated type. 
                Snapshot - This window captures the notion of temporal colocation as dictated by the source.
                The events in snapshot have lifetimes spanning the snapshot interval. From the query writers
                perspective this provides the ability to dynamically reason over groups of events as they 
                occur. This is the basic kind of window supported in the system over which aggregates 
                operate.
                Hopping - This is a window established by the query writer independent of the event source.
                This enables the query writer to group the events in a predetermined way.
                EventStartTime - This enables the query writer to group events disregarding time by segementing the 
                incoming event stream into batches for further processing.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.CepWindowKind.Snapshot">
            <summary>
            Window is defined by event in they natural time interval.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.CepWindowKind.Hopping">
            <summary>
            Window is defined by a window size and a hop size
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.CepWindowKind.EventStartTimeCount">
            <summary>
            Window is defiend by number of event start times
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindowStream`1">
            <summary>
            Results from applying a windowing operator to a stream.
            </summary>
            <remarks>
            A query writer can group the events in the input using one of many window definition centered around timestamps, 
            count, and so on. Each of the items in the result stream is of the type CepWindow where each CepWindow refers to a finite collection of events. This
            is used as the basis for aggregate calculations, ordering and ranking, or user-defined operations. 
            </remarks>
            <typeparam name="T">The event payload type.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowStream`1.ApplyWindowFunction``1(System.Linq.Expressions.Expression{System.Func{`0,Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}}})">
            <summary>
            Applies the specified window function.
            </summary>
            <typeparam name="R">The payload type of input events.</typeparam>
            <param name="WindowFunction">The window function to perform.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CepWindowStream`1.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CoalesceUnionsRewriter">
            <summary>
            The rewriter that fuses unions together  
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.CountWindowDescriptor">
            <summary>
            The window descriptor for event count based windows
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowDescriptor">
            <summary>
            A base class that captures the notion of a window descriptor.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.WindowDescriptor.#ctor(Microsoft.ComplexEventProcessing.Linq.CepWindowKind)">
            <summary>
            
            </summary>
            <param name="kind"></param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.WindowDescriptor.Kind">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.CountWindowDescriptor.EventStartTimeCount">
            <summary>
            Gets the window size in number of event start times
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.PartialEvaluator">
            Evaluator does partial evaluation of the CEP expression to remove all local variable 
            references
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.PartialEvaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.ExportExpression">
            <summary>
            The CEPExportExpression is a way of connecting the output stream of a query to a output adapter. Along with the 
            type of the event, it also accepts the source expression and the parameters for binding the appropriate output
            adapter to the output.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.ExpressionRewriter">
            <summary>
            Expression Rewriter is the core of LINQ provider -- it takes a query expression in the form
            of a series of method calls, and convert it to a form that is ready to be translated directly
            to internal XML query language representation.
            The transform is divided to three big steps:
               a. Transform the LINQ expression to make it closer to stream engine's form of representation
               b. Convert from LINQ expression to CEP expression
               c. Optimize the CEP expression to make it more efficient.
            Each big step is sub divided to small steps, each step does one kind of transformation work.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.FormatterConstants">
            <summary>
            These are all constants used by CEP formatter to create query sent to CEP engine
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.FuseJoinAndSelectRewriter">
            <summary>
            This rewriter tries to push filter and selects into Join if the join 
            result selector is a default selector
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.GenericCepEvent`1">
            <summary>
            GenericCepEvent is used to represent the type that is created in the middle of LINQ 
            query, for example, Join
            </summary>
            <typeparam name="TPayload">event payload type</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.GroupApplyRewriter">
            <summary>
            GroupApplyRewriter rewrites the query syntax representation of GroupApply to a form that is close
            to internal representation of GroupApply. It converts the following sequence of method calls:
                      sourceStream.GroupBy().SelectMany().MethodCall1().MethodCall2().... MethodCallN().Select().
            where the apply branch is implicitly specified between MethodCall1() and Select()
            into the following form:
                      sourceStream.GroupBy().ApplyWithUnion(applyBranch)
            where the applyBranch is put into ApplyWithUnion as an argument:
                      applyBranch = inputStream.MethodCall1().MethodCall2()...MethodCallN().Select()
            </summary>
            <remarks>
            There is some special cases that makes the logic a little more complex:
               1. For the SelectMany method, user may put AlterLifeTime, Window, etc operations on the grouping stream binding
                  like:
                                 from e in inputStream
                                 group e by e.i into gs
                                 from w in gs.AlterLifeTime(...).Snapshot()
                                 ...
                   We need to visit the SelectMany() binding and move the operation on gs into apply branch
               2. The last Select may or may not reference grouping key, if it is referencing grouping key, then we 
                      need to rewrite the select so that it matches the engine implementation. For example
                                 from e in input stream
                                 group e by e.i into gs
                                 from e2 in gs
                                 where e2.i > 4
                                 select new OutputType { Key = gs.Key, Field1 = e2.i + 2}
                      We need to rewrite it to something like:
                                 inputStream.GroupBy(...).ApplyWithUnion(projectGroupingKey = true).Select()
            </remarks>
            <remarks>
            Implementations: an expression visitor is used visit the expression tree. If we encounter 
            multiple embedded GroupBy().SelectMany(), we use a stack to push down the state of previous 
            group's information.
             * Whenever a GroupBy().SelectMany() combination is encountered, a new stack of GroupBy is generated. 
                    A CreateInputStream() is generated to start the apply branch
             * All the method called after SelectMany() is appended into the apply branch
             * when a Select is encountered, the apply branch is finished and the expression is rewritten to
                    GroupyBy().ApplyWithUnion(applyBranch)
             * TopLevelSelectMany -- There is a special case where the only operation in apply branch is Select, 
                     compiler puts the selector into SelectMany() directly instead of having a separate Select call. 
                     in this case, we will move the selector into apply branch
             * Nested group apply -- If there are nested group apply in the same statement, then there is only one
                     select to close both GroupApply, when that happened, we will close all group apply.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.GroupApplyRewriter.VisitSelectMany(System.Linq.Expressions.Expression,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Handle SelectMany operator. 
               -- For TopLevelSelectMany: We simply inject an Select as apply branch and then do an ApplyWithUnion
               -- For non-TopLevelSelectMany, we will start collecting Apply branch by creating a seed (
                    CreateInputStream) and all operators after that will be treated as apply branch until we
                    see a select.
            </summary>
            <param name="sourceExpr"></param>
            <param name="methodCallExpr"></param>
            <returns>the new expression that is rewritten</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.GroupApplyRewriter.VisitSelect(System.Linq.Expressions.Expression,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            When we see a Select and there was SelectMany in the scope, the Select will close the
            Apply branch. So we will produce a tree like:
                currentGroupApplySource.ApplyWithUnion(ApplyBranch.Select)
            </summary>
            <param name="sourceExpr"></param>
            <param name="methodCallExpr"></param>
            <returns>rewritten expression</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.GroupApplyRewriter.GetGroupStreamName(System.Linq.Expressions.Expression)">
            <summary>
            Get the group stream name. This is used to check grouping key reference in apply branch
            and remove the group stream reference later on in the translation
            The grouping expression will look like this:
             gs => gs, or
             gs => gs.Snapshot
            </summary>
            <param name="expression">the lambda expression that we can extract grouping stream name from</param>
            <returns>the name for grouping stream</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.GroupApplyRewriter.VisitBindingStream(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Bind stream has one of the following format:
            gs => gs
            gs => gs.AlterLifeTime(...)
            gs => gs.Snapshot(...)
            gs => gs.Window(...)
            We will move the stream operation into apply branch
            </summary>
            <param name="applyStreamSource">the apply expression is the part that we will change if the grouping stream is modified</param>
            <param name="bindExpr">the binding expression to be visited</param>
            <returns>the modified apply branch</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.GroupApplyRewriter.ReplaceExpressionSource(System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions.Expression)">
            <summary>
            For expression like:
                    groupStream.MethodCall1().MethodCall2()... MethodCallN()
            Replace with 
                    CreateInputStream().MethodCall1().MethodCall2()... MethodCallN()
            </summary>
            <param name="methodCallExpr">the expression whose stream source wil be replaced</param>
            <param name="newSource">the new source to replace, should be a CreateInputStream</param>
            <returns>the newly generated query expression</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.GroupingExpression">
            <summary>
            GroupingExpression captures one of the unique constructs in stream processing. This is 
            the ability to split an incoming stream of events into multiple streams and apply 
            the same computation (apply function) to each of the individual streams. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.GroupUnionSelectRewriter">
            <summary>
            This class visits given lambda expression that is placed after GroupUnion, the expression is in 
            the form of:
                   AnonymousType[groupingKey, PayloadType] => body
            And the body could be one of the following:
                    NewExpression or MemberInitExpression
                    direct reference to key, like e.gs.Key or e.gs.Key.Member
                    direct reference to payload, like  e.payload.i;
            This rewriter tries to flatten all references of the members by flatten both left and right
            side of the lambda expression. 
            Left side of the lambda expression becomes
                NewFlattenedType which contains all fields of both key and payloads
            Right side of the lambda expression becomes a direct reference of the member of left side.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.HoppingWindowDescriptor">
            <summary>
            The window descriptor for hopping windows
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.InputExpressionValidator">
            <summary>
            this class is used to validate input expression and fail any expression we don't support
            or don't yet support. For example, we don't recognize the ArrayInit expression.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.InputExpressionValidator.VisitFilter(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            We only allow CepStream.IsEmpty() call in where clause, so do special
            processing here to make sure the valid case gets supported. We will
            raise exception in CheckUDFCall() for using CepStream.IsEmpty() in all
            other cases.
            </summary>
            <param name="methodCallExpr"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.InputExpressionValidator.ValidateSelect(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Select expression will produce a new event type, we only support the select expression 
            to be in one of the following format:
                 a. Explicity type creation with explicit member initialization (MemberInitExpression)
                 b. Anonymous type creation with explicit member initialization (NewExpression where members are not null)
            We also don't support nested types.
            If the result is not fulfilling our requirement, we will raise exception.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.InputOperatorConsolidator">
            <summary>
            For operations like AlterLifeTime, Window, UDA, etc, we surface different APIs to end user for 
            user convenience, but internally, we only use one representation for each of them. This rewriter
            tries to convert them to consolidated internal representation.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo">
            <summary>
            Contains all information extracted from a stream definition.
            </summary>
            <remarks>
            The information exposes whether the stream is in one of the following states:
              a. Unbound -- the stream only contains name and type, but is not bound to any stream source
              b. Bound to a given InputAdapter API object, StreamSource is a Uri in this case
              c. Bound to a specific InputAdapterFactory type, StreamSource is a Type in this case.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.#ctor(System.String,System.Object,System.Object,System.Type,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings,Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext)">
            <summary>
            Initalizes a new instance of the input stream info.
            </summary>
            <param name="streamName">The name of the input stream.</param>
            <param name="streamSource">The input stream provider.</param>
            <param name="streamSourceConfig">The configuration for the input stream provider.</param>
            <param name="eventType">The event payload type of the input stream.</param>
            <param name="eventShape">The event shape of the input stream.</param>
            <param name="advanceTimeSettings">The advance time settings.</param>
            <param name="context">The context in which the stream was created.</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.AdvanceTimeSettings">
            <summary>
            Gets the advance time settings.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.StreamName">
            <summary>
            Gets the name of the stream.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.StreamSource">
            <summary>
            Gets the stream provider.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.StreamSourceConfig">
            <summary>
            Gets the configuration information for the stream provider.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.EventType">
            <summary>
            Gets the event payload type in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.EventShape">
            <summary>
            Gets the event shape the stream source is going to provide.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.Context">
            <summary>
            Gets an object which represents the context in which the stream was created.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.JoinClassifier">
            <summary>
            JoinClassifier tries to clasify join according to the join expression and how join
            result is used
            TODO: is this correct? Also this is not covering all join types
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.JoinExpression">
            <summary>
            joinExpression identifies the general class of joins in the CEP engine. The two inputs
            are streams of events and the resultant stream is an output of the appropriate 
            result type. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.JoinPredicateFormatter">
            <summary>
            JoinPredicateFormatter is used to format join predicate. The uniqueness of Join predicate
            is that the predicate expression could reference one of the two join input streams, so
            we need to make sure the field reference expression has the correct stream name.
            The constructor of the class analyzes the join expression and extract the two
            input stream names and two parameter expressions. The name is later used to formate 
            field access expression.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.JoinPredicateFormatter.Format">
            <summary>
            Format the join predicate
            </summary>
            <returns>the XML string representation of the Join</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.JoinResultsFormatter">
            <summary>
            Join result formatter formats the join result project expressions. We need a separate
            formatter for join result because join has two input streams and we need to make sure
            field accesses are formatted correctly using their corresponding input streams.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.JoinResultsFormatter.Format">
            <summary>
            There are two possibilities for the join results 
            1) In the first group we have three possibilities 
                 a) a new event type is output based upon references to parameters from both the input 
                    streams - Inner join case.
                 b) a new event type is output based upon references to parameters from the right stream.
                 c) a new event type is output based upon references to parameters from the left stream.
               All of these cases are handled by outputing the appropriate project expressions for the 
               various fields in the payload of the newly constructed item.
            2) In the second group we have either the event type associated with the left or right stream
               as the Join output in its entirety - a specialized form of semi-join. In such cases the body 
               of the lambda expression is the parameter corresponding to the stream being referenced.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.JoinRewriter">
            <summary>
            Rewrites a LINQ expression which contains CrossJoin(SelectMany) or EquiJoin
            An expression with the following pattern:
                s1.SelectMany(s1 => s2, resultSelector) 
            or:
                s1.EquiJoin(s2, leftSelector, rightSelector, resultSelector)
            is rewritten to the following 
                s1.Join(s2, predicate, resultSelector)
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.JoinRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Convert the following format: 
                CepStream.SelectMany(anotherCepStream, selector)
            to the following format
                CepStream.Join(anotherCepStream, selector)
            </summary>
            <param name="methodCallExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.LASJRewriter">
            <summary>
            Rewrites a LINQ expression which contains CrossJoin(SelectMany) or EquiJoin
            An expression with the following pattern:
                s1.SelectMany(s1 => s2, resultSelector) 
            or:
                s1.EquiJoin(s2, leftSelector, rightSelector, resultSelector)
            is rewritten to the following 
                s1.Join(s2, predicate, resultSelector)
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.LASJRewriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            This pattern performs the following substitution:
            Outer.Where.IsEmpty(Inner.where*.select*) -> lasj(outer, inner, join predicate)
            The join predicate is constructed from the where chain and is the only place where the outer
            may be referenced.
            The select chain is ignored.
            </summary>
            <param name="methodCallExpression"></param>
            <returns>a rewritten method call expression</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.LASJRewriter.LASJExpressionVisitor">
            <summary>
            Check if a given expression is referecing a given parameter,
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.LASJRewriter.CheckParameterRef">
            <summary>
            Check if a given expression is only referencing the two parameters
            this is to make sure the prediate expression of join is only
            referencing the two input streams
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.OperatorToCepExpressionRewriter">
            <summary>
            This rewriter rewrites LINQ operator expression to CepExpression
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.ProjectExpression">
            <summary>
            The ProjectExpression provides the project capability on a stream of events and producing
            an output stream of events. It accepts two LINQ expressions one identifying the source and 
            the second one project expressions that can be applied to events from the input stream. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException">
            <summary>
            Exception thrown from LINQ provider when the query cannot be produced correctly.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.QueryTemplateStreamNameGenerator.VisitSource(System.Linq.Expressions.Expression)">
            <summary>
            this method does name generation for Multicast case where one expression output is used 
            input for multiple expressions. We use _expressionVisited to remember all expressions 
            that have been visited. If we encounter the same expression again, then we generate one
            new name for the output stream of the expression. Also the new name is always inserted
            at beginning of the name list so that the caller can always get the stream name from 
            the first in the list.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.RemoveDefaultProject">
            <summary>
            The rewriter removes the project that simply project input to output
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.FilterExpression">
            <summary>
            The FilterExpression provides the filtering capability on a stream of events and producing
            an output stream of events. It accepts two LINQ expressions one identifying the source and 
            the second one a filter that can be applied to events from the input stream. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowDescriptor">
            <summary>
            The window descriptor for snapshot windows
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy">
            <summary>
            Defines the window output policies that are applicable to snapshot windows.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy">
            <summary>
            The window output policy describes how the CEP engine modifies the timestamp of events 
            that are resulting from a set-based operation on top of the window.
            </summary>
            <remarks>
            Currently, clipping the event times to the window size is the only policy supported.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="kind">window output policy</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.ClipToWindowEnd">
            <summary>
            Gets a window output policy instance for generic windows that clips the end time of the output events 
            to the window end.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.OutputPolicyKind">
            <summary>
            Gets the output policy kind.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind">
            <summary>
            Enumerates the policies for changing the timestamps of the events.
            that are resulting from a set-based operation on top of the window.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind.Clip">
            <summary>
            Clips the timestamps of output events to window-related boundaries.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="kind"></param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy.Clip">
            <summary>
            Gets a snapshot window output policy instance that clips the end time of the output events 
            to the window end.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicyClip">
            <summary>
            Defines a specific snapshot window output policy that clips the end time of the output events 
            to the window end.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicyClip.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.SplitGroupUnionSelect">
            <summary>
            This class visits given lambda expression that is the select for SelectMany for GroupBy. The Select is 
            special because it may be referencing both grouping key and non-grouping key. And if the non-grouping 
            key part is aggregate or TopK, then we have to put part of the SELECT inside group apply and other 
            part of the SELECT outside of the Group apply as engine doesn't support accessing grouping fields
            inside group apply. So the purpose of this class is to look at the following lambda expression:
                   AnonymousType[groupingKey, PayloadType] => (BodyType)body
            And split the body into two select expressions, one doesn't reference grouping expression, the other does.
            The first select will have the form of:
                            (PayloadType)e => new GeneratedType{...}
            And the second Select will have the form of:
                            (Key, GeneratedType) => new BodyType(...)
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.StringExpressionFormatter">
            <summary>
            StringExpressionFormatter formats string comparison expressions so that CEP engine can support
            these expression internally, instead of resolving to a user defined method call into the .NET
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.TopKRewriter">
            <summary>
            TopKRewriter rewrites the TopK expression from compiler representation to internal representation.
            it will rewrite the LINQ expression that has the following form:
                someSource.Window().SelectMany().(OrderBy()|OrderByDescending)*.(ThenBy|ThenByDescending)*.Select().(Take)
            to the following form:
                someSource.TopK()
            If Take() has an additional lambda expression to project result, then we would rewrite the above expression 
            into the following form: 
                someSource.TopK().Select()
            The output type for TopK() depends on whether or not Rank is referenced in the lambda expression. 
                -- If Ranking is not referenced in the Select, then the output type for TopK is the same as input type of TopK
                -- If Ranking is referenced in the Select, then the output type for TopK is a temporary type that is flattened
                   type of CepRankedEvent -- a Ranking field plus all other fields in the type
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.TopKRewriter.CheckRankingKeyReference">
            <summary>
            Check if CepRankedEvent.Rank is refereneced in the given expression. 
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.UdaInfo">
            <summary>
            represents user defined aggregate information
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.UdoExpression">
            <summary>
            UdoExpression captures all information that is needed to call a UDO
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.UnWrapLambdaExpression(System.Linq.Expressions.Expression)">
            <summary>
            Unwrap a lambda expression. The expression can be one of the following: 
              1. a direct lambdaExpression
              2. a quote expression that is quoting a lambdaExpression
              3. a constant expression whose value is lambdaExpression
            </summary>
            <param name="expression">the expression to unwrap</param>
            <returns>a valid lambda expression, or null</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.UnWrapConstantExpressionThrowIfFail``1(System.Linq.Expressions.Expression)">
            <summary>
            Evaluate the given expression to a constant value. Raise exception if the the expression
            cannot be evalutated to a constant of the expected type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.UnWrapConstantExpression(System.Linq.Expressions.Expression)">
            <summary>
            Unwrap a constant expression. The expression can be one of the following: 
              1. a constant expression
              2. a quote expression that is quoting a constant expression
            If the expression is not a constant expression, try to evaluate it first
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.UnWrapConstantExpressionNoEvaluation(System.Linq.Expressions.Expression)">
            <summary>
            Unwrap a constant expression, if the expression is not a constant, return null
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.ChangeType(System.Object,System.Type)">
            <summary>
            Change 'value' to a type of 'convertToType' and return a ConstantExpression 
            with type of 'convertToType'
            </summary>
            <param name="value">value to be converted to</param>
            <param name="convertToType">type to convert the value to</param>
            <returns>the constant expression that contains the converted value</returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.IsDefaultJoinSelector(System.Linq.Expressions.LambdaExpression)">
            <summary>
            This method checks if the joinSelect is the default selector, which projects all
            members of both input to output.
            </summary>
            <param name="joinSelector"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.ReplaceMethodCallExprSource(System.Linq.Expressions.Expression,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            For LINQ operators that has one input stream, this method is used 
            reform the return method call expressions when the input stream 
            is rewriten
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.ReplaceMethodCallExprSources(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            For LINQ operators that has two input streams (Join, ApplyWithUnion, Union),
            this method is used to reform the return method call expressions when the
            two input streams are rewriten
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.MethodCallToStreamExpression(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Creates a StreamExpression from a method call expression that is input stream creation expression
            </summary>
            <param name="methodCallExpr"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.Utility.UnWrapCepStreamConstant(System.Object)">
            <summary>
            Given a constant that is of CepStream type, return the underneath expression of that constant
            </summary>
            <param name="constantValue"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy">
            <summary>
            The window input policy describes how the timestamps of events that fall into a given 
            window are changed before processing the window operation.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipKind)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="clipKind">clip kind</param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipToWindow">
            <summary>
            Gets a window input policy that clips input event start and end time to the window boundaries.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.EventClipKind">
            <summary>
            Gets the clip kind.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipKind">
            <summary>
            The kind of clip for the input events that falls into the same window.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipKind.ClipToWindow">
            <summary>
            Clips both start and end time of the event and align it with the window.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOperationInfo">
            <summary>
            The structure that contains all information related to windows operation, including
                window description
                input policy
                output policy
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip">
            <summary>
            Output policy that allows events generated from window operations to be clipped as
            desired. 
            </summary>
            <remarks>
            Currently, only one kind of clip is supported, which clips to the end of
            the window.
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.ClipKind)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="kind"></param>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.OutputClipKind">
            <summary>
            Gets the output clip kind.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.ClipKind">
            <summary>
            Policies to clip events in the window output.
            </summary>
        </member>
        <member name="F:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.ClipKind.ClipToWindowEnd">
            <summary>
            The end time of the event is set to the window end boundary if the 
            original end time of the end would stretch beyond the window boundary.
            </summary>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepModule`2">
            <summary>
            The base class for a user-defined non-incremental, time-insensitive operator or aggregate.
            </summary>
            <typeparam name="TInput">Payload type of the input events.</typeparam>
            <typeparam name="TOutput">Type of the result.</typeparam>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Extensibility.CepModule`2.InputEventType">
            <summary>
            Gets event type that is input to the CEP operator or aggregate.
            </summary>
            <value>The CEP representation of the input event type.</value>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveModule`2">
            <summary>
            The base class for a user-defined non-incremental, time-sensitive operator or aggregate.
            </summary>
            <typeparam name="TInput">Payload type of the input events.</typeparam>
            <typeparam name="TOutput">Type of the result.</typeparam>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepOperator`2">
            <summary>
            The base class for a user-defined non-incremental, time-insensitive operator.
            </summary>
            <typeparam name="TInput">Payload type of the input events.</typeparam>
            <typeparam name="TOutput">Payload type of the output events.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepOperator`2.GenerateOutput(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            The GenerateOutput method generates a collection of output event payloads as a result
            of the operator computation over a collection of input event payloads.
            </summary>
            <param name="payloads">The collection of input event payloads.</param>
            <returns>A collection of output event payloads.</returns>
            <para>A time-insensitive operator only receives a collection of payloads, as opposed
            to a collection of whole events with timestamps. Moreover, it generates sets of 
            output payloads without any temporal properties. The framework will apply
            the window size as the default output event lifetime to the returned events, 
            before the output policy specified in the query can modify that default.</para>
            <para>Note that the collection of input event payloads is unordered.</para>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2">
            <summary>
            The base class for a user-defined non-incremental, time-sensitive operator.
            </summary>
            <typeparam name="TInput">Payload type of the input events.</typeparam>
            <typeparam name="TOutput">Payload type of the output events.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2.GenerateOutput(System.Collections.Generic.IEnumerable{Microsoft.ComplexEventProcessing.IntervalEvent{`0}},Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor)">
            <summary>
            The GenerateOutput method generates a collection of output events as a result
            of the operator computation over a collection of input event payloads.
            </summary>
            <param name="events">The collection of input events.</param>
            <param name="windowDescriptor">The window descriptor of the window that contains the input events.</param>
            <returns>A collection of output events.</returns>
            <remarks>
            <para>A time-sensitive operator receives a collection of whole events with timestamps,
            so that the computation can take the temporal properties of the events (as well as the
            window size) into account.</para>
            <para>Note that the collection of input events is unordered.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2.CreateIntervalEvent">
            <summary>
            Creates an event to be contained in the returned result of the user-defined operator.
            </summary>
            <returns>An interval event.</returns>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepAggregate`2">
            <summary>
            The base class for a user-defined non-incremental, time-insensitive aggregate.
            </summary>
            <typeparam name="TInput">Payload type of the input events.</typeparam>
            <typeparam name="TOutput">Type of the scalar aggregation result.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepAggregate`2.GenerateOutput(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            The GenerateOutput method generates a single scalar value as a result of the aggregate computation 
            over a collection of input event payloads.
            </summary>
            <param name="payloads">The collection of input event payloads.</param>
            <returns>Scalar result of the aggregation.</returns>
            <remarks>
            <para>A time-insensitive aggregate only receives a collection of payloads, as opposed
            to a collection of whole events with timestamps. The framework will apply
            the window size as the default output event lifetime to the result, 
            before the output policy specified in the query can modify that default.</para>
            <para>Note that the collection of input event payloads is unordered.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveAggregate`2">
            <summary>
            The base class for a user-defined non-incremental, time-sensitive aggregate.
            </summary>
            <typeparam name="TInput">Payload type of the input events.</typeparam>
            <typeparam name="TOutput">Type of the scalar aggregation result.</typeparam>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveAggregate`2.GenerateOutput(System.Collections.Generic.IEnumerable{Microsoft.ComplexEventProcessing.IntervalEvent{`0}},Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor)">
            <summary>
            The GenerateOutput method generates a single scalar value as a result of the aggregate computation 
            over a collection of input events.
            </summary>
            <param name="events">The collection of input events.</param>
            <param name="windowDescriptor">The window descriptor of the window that contains the input events.</param>
            <returns>Scalar result of the aggregation.</returns>
            <remarks>
            <para>A time-sensitive aggregate receives a collection of whole events with timestamps,
            so that the computation can take the temporal properties of the events (as well as the
            window size) into account.</para>
            <para>Note that the collection of input events is unordered.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.IDeclareEventProperties">
            <summary>
            Defines properties for user defined operators
            or aggregates to provide additional information about the event field, such 
            as the culture information for a string field in the result.
            </summary>
        </member>
        <member name="M:Microsoft.ComplexEventProcessing.Extensibility.IDeclareEventProperties.DeclareEventProperties(Microsoft.ComplexEventProcessing.CepEventType)">
            <summary>
            Declares additional properties of the result event type.
            </summary>
            <param name="outputEventType">The CEP representation of the event type that is 
            output from the user defined module.</param>
            <returns>A decorated outputEventType that contains additional event fields information.</returns>
            <remarks>
            The culture annotation of the outputEventType will be applied for each output of
            the user-defined operator or aggregate, before the result is introduced back into the stream.
            </remarks>
            <example>
            <code>
            public CepEventType DeclareEventProperties(CepEventType outputEventType)
            {
                // assuming string field 'loc' in type Input
                // assuming string fields 'firstName' and 'location' in type Output
                outputEventType.Fields["firstName"].CultureInfo = new System.Globalization.CultureInfo("zh-CN");
                outputEventType.Fields["location"].CultureInfo = base.InputEventType.Fields["loc"].CultureInfo;
                return outputEventType;
            }
            </code>
            Here, it is assumed that a user-defined operator or aggregate returns string fields named
            'firstName' and 'location'. In order to explicitly set the culture of these fields as part of
            the user-defined functionality, DeclareEventProperties is implemented.
            </example>
        </member>
        <member name="T:Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor">
            <summary>
            The window descriptor provides information about the temporal properties of the window
            that contains the events that are input to a user-defined time-sensitive operator or aggregate.
            </summary>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor.StartTime">
            <summary>
            Gets the start time of the window.
            </summary>
            <value>the start time of the window.</value>
        </member>
        <member name="P:Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor.EndTime">
            <summary>
            Gets the end time of the window.
            </summary>
            <value>The end time of the window.</value>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\amd64\Bin\en\Microsoft.ComplexEventProcessing.ManagementService.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.ComplexEventProcessing.ManagementService</name>
	</assembly>
	<members>
		<member name="N:Microsoft.ComplexEventProcessing.ManagementService">
			<summary>Exposes The APIs used to expose the Web service methods.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest">
			<summary>Contains request information for a <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryState" /> operation.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.#ctor(System.Uri,Microsoft.ComplexEventProcessing.ManagementService.QueryState)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest" /> class with the specified name and query state.</summary>
			<param name="name">A <see cref="T:System.Uri" /> value containing the name of the query state to be changed.</param>
			<param name="queryState">A <see cref="P:Microsoft.ComplexEventProcessing.ManagementService.QueryState" /> value specifying the new query state value.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.Name">
			<summary>Gets or sets the name of the parent container in which the object is going to be created.</summary>
			<returns>A <see cref="T:System.String" /> containing the name of the parent container.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest.QueryState">
			<summary>Gets or sets the value that the query state will be changed to.</summary>
			<returns>A <see cref="P:Microsoft.ComplexEventProcessing.ManagementService.QueryState" /> value specifying the new query state value.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse">
			<summary>Contains the response for a ChangeQueryState operation.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.#ctor(System.Uri,Microsoft.ComplexEventProcessing.ManagementService.QueryState)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse" /> class with the specified name and query state.</summary>
			<param name="name">A <see cref="T:System.Uri" /> value containing the name of the query state to be changed.</param>
			<param name="queryState">A <see cref="P:Microsoft.ComplexEventProcessing.ManagementService.QueryState" /> value specifying the requested new query state value.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.Name">
			<summary>Gets or sets the name of the parent container in which the object is going to be created.</summary>
			<returns>A <see cref="T:System.Uri" /> value containing the name of the parent container.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse.QueryState">
			<summary>Gets or sets the value that the query state will be changed to.</summary>
			<returns>A <see cref="P:Microsoft.ComplexEventProcessing.ManagementService.QueryState" /> value specifying the requested new query state value.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault">
			<summary>Represents a SOAP fault message that is generated when clearing the diagnostic settings is not supported for a specific name.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault.#ctor(System.Uri,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault" /> class. </summary>
			<param name="name">The name of the object whose diagnostic settings cannot be cleared.</param>
			<param name="errorMessage">The message that describes the error condition.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault.Message">
			<summary>Gets or sets the message that describes the error condition.</summary>
			<returns>The message that describes the error condition.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsNotSupportedFault.Name">
			<summary>Gets or sets the name of the object whose diagnostic settings cannot be cleared.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object whose diagnostic settings cannot be cleared. </returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest">
			<summary>Represents a request message for the ClearDiagnosticSettings Web service call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest.Name">
			<summary>Gets or sets the name of the object to clear the diagnostic settings for.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object to clear the diagnostic settings for.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest">
			<summary>Encapsulates the parameters for a Create operation.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest" /> class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest.Body">
			<summary>Gets or sets the XML definition of the object to be created.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody" /> object containing the XML definition.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest.Name">
			<summary>Gets or sets the name of the parent container in which the object is going to be created.</summary>
			<returns>A <see cref="T:System.Uri" /> value containing the name of the parent container.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody">
			<summary>Represents the body elements of a Create request.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.GetSchema">
			<summary>Gets the XML Schema that this object can be serialized to. This method is not currently used.</summary>
			<returns>Always returns null.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.GetSchema(System.Xml.Schema.XmlSchemaSet)">
			<summary>Adds the XML Schema for this object to the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</summary>
			<returns>An <see cref="T:System.Xml.XmlQualifiedName" /> object that represents the XML qualified name of the body element.</returns>
			<param name="schemaSet">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object to add the XML Schema to.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.ReadXml(System.Xml.XmlReader)">
			<summary>Reads the XML data from the specified <see cref="T:System.Xml.XmlReader" /> object.</summary>
			<param name="reader">An <see cref="T:System.Xml.XmlReader" /> object that is positioned on the XML element that contains the body elements for this object.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateRequestBody.WriteXml(System.Xml.XmlWriter)">
			<summary>Writes the XML data for this object to the specified <see cref="T:System.Xml.XmlWriter" /> object.</summary>
			<param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to write to.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse">
			<summary>Encapsulates the response information for a Create operation.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse" /> class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse.ResourceAddress">
			<summary>Gets or sets the name of the object that has been created.</summary>
			<returns>A <see cref="T:System.ServiceModel.EndpointAddress10" /> class containing the name of the created object.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest">
			<summary>Contains information about a Delete operation request.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest.#ctor(System.Uri)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest" /> class with the specified resource name.</summary>
			<param name="name">A <see cref="T:System.Uri" /> object specifying the name of the resource to be deleted.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest.Name">
			<summary>Gets or sets the name of the resource that will be deleted.</summary>
			<returns>A <see cref="T:System.Uri" /> value that contains the name of the resource to be deleted.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse">
			<summary>Contains information about the response to a Delete operation request.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse.#ctor(System.Uri)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse" /> class with the specified resource name.</summary>
			<param name="name">A <see cref="T:System.Uri" /> value specifying the name of the resource to be deleted.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse.Name">
			<summary>Gets or sets the name of the resource to be deleted.</summary>
			<returns>A <see cref="T:System.Uri" /> value specifying the name of the resource to be deleted.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest">
			<summary>Contains the properties needed to call the Enumerate function.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest" /> class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest.Name">
			<summary>Gets or sets the name of the container object that contains the requests to enumerate.</summary>
			<returns>A <see cref="T:System.Uri" /> value containing the name of the container object to be enumerated.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse">
			<summary>Contains the response information for an Enumerate method call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse" /> class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse.ResourceNames">
			<summary>Gets or sets the names for the objects returned by the Enumerate operation.</summary>
			<returns>A <see cref="T:System.Collections.Generic.List" /> object containing the names for objects returned by an Enumerate operation.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault">
			<summary>Represents a SOAP fault message that is generated when getting the diagnostic settings is not supported for a specific name.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault.#ctor(System.Uri,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault" /> class. </summary>
			<param name="name">The name of the object whose diagnostic settings cannot be returned.</param>
			<param name="errorMessage">The message that describes the error condition.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault.Message">
			<summary>Gets or sets the message that describes the error condition.</summary>
			<returns>The message that describes the error condition.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsNotSupportedFault.Name">
			<summary>Gets or sets the name of the object whose diagnostic settings cannot be returned.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object whose diagnostic settings cannot be returned.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest">
			<summary>Represents a request message for the GetDiagnosticSettings Web service call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest.Name">
			<summary>Gets or sets the name of the object to get the diagnostics settings for.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object to get the diagnostics settings for.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse">
			<summary>Represents a response message for the GetDiagnosticSettings Web service call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse.DiagnosticAspects">
			<summary>Gets or sets the enabled diagnostic aspects.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects" /> value that specifies diagnostic aspects that are enabled.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsResponse.DiagnosticLevel">
			<summary>Gets or sets the verbosity level for the diagnostic aspects.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel" /> value that specifies the verbosity level for the diagnostic aspects.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault">
			<summary>Represents a SOAP fault message that is generated when getting the diagnostic view is not supported for a specific name.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault.#ctor(System.Uri,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault" /> class. </summary>
			<param name="name">The name of the object whose diagnostic view cannot be returned.</param>
			<param name="errorMessage">The message that describes the error condition.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault.Message">
			<summary>Gets or sets the message that describes the error condition.</summary>
			<returns>The message that describes the error condition.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewNotSupportedFault.Name">
			<summary>Gets or sets the name of the object whose diagnostic view cannot be returned.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object whose diagnostic view cannot be returned.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest">
			<summary>Represents a request message for the GetDiagnosticView Web service call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest.Name">
			<summary>Gets or sets the name of the object to get the diagnostics view for.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object to get the diagnostics view for.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse">
			<summary>Represents a response message for the GetDiagnosticView Web service call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewResponse.View">
			<summary>Gets or sets the diagnostic view for the specified name. </summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DiagnosticView" /> object.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest">
			<summary>Contains the request for a Get call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest" /> class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetRequest.Name">
			<summary>Gets or sets the name of the resource to be retrieved.</summary>
			<returns>A <see cref="T:System.Uri" /> value containing the name of the resource to be retrieved.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse">
			<summary>Contains the response to the Get call request.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponse.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponse.#ctor(System.Xml.Serialization.IXmlSerializable)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse" /> class with the specified body elements.</summary>
			<param name="bodyElements">The object to be serialized as the body of the response message.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.GetResponse.Body">
			<summary>Gets or sets the XML definition of the requested resource.</summary>
			<returns>An <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody" /> value containing the XML definition of the requested resource.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody">
			<summary>Represents the body elements of a Get request.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.GetSchema">
			<summary>Gets the XML Schema that this object can be serialized to. This method is not currently used.</summary>
			<returns>Always returns null.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.GetSchema(System.Xml.Schema.XmlSchemaSet)">
			<summary>Adds the XML Schema for this object to the specified <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</summary>
			<returns>An <see cref="T:System.Xml.XmlQualifiedName" /> object that represents the XML qualified name of the body element.</returns>
			<param name="schemaSet">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object to add the XML Schema to.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.ReadXml(System.Xml.XmlReader)">
			<summary>Reads the XML data from the specified <see cref="T:System.Xml.XmlReader" /> object.</summary>
			<param name="reader">An <see cref="T:System.Xml.XmlReader" /> object that is positioned on the XML element that contains the body elements for this object.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.GetResponseBody.WriteXml(System.Xml.XmlWriter)">
			<summary>Writes the XML data for this object to the specified <see cref="T:System.Xml.XmlWriter" /> object.</summary>
			<param name="writer">The <see cref="T:System.Xml.XmlWriter" /> object to write to.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.IManagementService">
			<summary>The <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.IManagementService" /> interface defines methods and properties that are used to control the management functions of the Complex Event Processing engine.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.ChangeQueryState(Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest)">
			<summary>Changes the state of a running query.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateResponse" /> object that contains the query name and its current state.</returns>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ChangeQueryStateRequest" /> object that contains the name of the running query.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.ClearDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.ClearDiagnosticSettingsRequest)">
			<summary>Clears the diagnostic settings of a named object or a collection of objects.</summary>
			<param name="request">Request which contains the name.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Create(Microsoft.ComplexEventProcessing.ManagementService.CreateRequest)">
			<summary>Creates a new resource with the specified description and the address of its parent container.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.CreateResponse" /> object that contains object name.</returns>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.CreateRequest" /> object that contains the resource object's XML definition and the name of the parent object.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Delete(Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest)">
			<summary>Deletes the specified resource.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteResponse" /> object that contains the name of the resource.</returns>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.DeleteRequest" /> object that specifies the resource to be deleted.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Enumerate(Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest)">
			<summary>Enumerates a collection of requests and returns an <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse" /> containing a collection of XML request definitions.</summary>
			<returns>An <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateResponse" /> object that contains a collection of XML object definitions.</returns>
			<param name="request">An <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.EnumerateRequest" /> object that contains the name of the collection to enumerate.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.Get(Microsoft.ComplexEventProcessing.ManagementService.GetRequest)">
			<summary>Gets the XML definition of the specified resource.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse" /> object that contains the XML resource definition.</returns>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest" /> object that contains the name of the resource.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.GetDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticSettingsRequest)">
			<summary>Gets the diagnostic settings that apply to a specific named object. </summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse" /> object that contains the diagnostic aspects and level that apply to the specified name.</returns>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest" /> object that contains the name of the resource.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.GetDiagnosticView(Microsoft.ComplexEventProcessing.ManagementService.GetDiagnosticViewRequest)">
			<summary>Gets the diagnostic view of a named object or a collection of objects.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetResponse" /> object that contains the diagnostic view.</returns>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest" /> object that contains the name of the resource.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.IManagementService.SetDiagnosticSettings(Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest)">
			<summary>Sets the diagnostic settings of a named object or a collection of objects.</summary>
			<param name="request">A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.GetRequest" /> object that contains the name of the resource and the new diagnostic settings.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault">
			<summary>Represents an invalid definition fault.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault" /> class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String" /> that contains the message providing information about the fault.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.InvalidDefinitionFault.Message">
			<summary>Gets or sets the message providing information about the fault.</summary>
			<returns>A <see cref="T:System.String" /> that contains the message providing information about the fault.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault">
			<summary>Represents a fault that occurs when an invalid name is detected.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault" /> class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String" /> that contains the message providing information about the fault.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.InvalidNameFault.Message">
			<summary>Gets or sets the message providing information about this fault.</summary>
			<returns>A <see cref="T:System.String" /> that contains the message providing information about the fault.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault">
			<summary>Represents a fault that occurs due to a generic failure in the management service.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault" /> class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String" /> that contains the message providing information about the fault.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ManagementFault.Message">
			<summary>Gets or sets the message for this fault.</summary>
			<returns>A <see cref="T:System.String" /> that contains the message providing information about the fault.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects">
			<summary>Specifies the different diagnostic aspects that can be turned on or off separately.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.CepEventTracing">
			<summary>Trace CEP events as they progress through the queries.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.Debug">
			<summary>Debug tracing (enter/exit methods, exceptions, and so on).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.DiagnosticViews">
			<summary>Diagnostic views.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.None">
			<summary>No diagnostic aspects are enabled.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects.StateChanges">
			<summary>Trace creation, destruction, and state changes of objects in the engine.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel">
			<summary>Specifies the verbosity level for the diagnostic aspects.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Always">
			<summary>The least verbose diagnostic level. Only diagnostics that are always on are reported.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Critical">
			<summary>Reports critical diagnostics.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Error">
			<summary>Reports error diagnostics.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Informational">
			<summary>Reports informational diagnostics. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Verbose">
			<summary>The most verbose diagnostic level. All diagnostics are reported.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel.Warning">
			<summary>Reports warning diagnostics.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.QueryState">
			<summary>Enumerates a list of possible query states.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.QueryState.Started">
			<summary>The Query has been started, and is processing events.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.ManagementService.QueryState.Stopped">
			<summary>The query has been stopped.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.RuntimeFault">
			<summary>Represents a fault that occurs due to a generic failure in the runtime.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.RuntimeFault.#ctor(System.String)">
			<summary>Initializes a new instance of the RuntimeFault class with the specified message.</summary>
			<param name="message">A <see cref="T:System.String" /> that contains the message providing information about the fault.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.RuntimeFault.Message">
			<summary>Gets or sets the message for this fault.</summary>
			<returns>A <see cref="T:System.String" /> that contains the message providing information about the fault.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView">
			<summary>Represents a diagnostic view for a single engine object as a container of name-value pairs.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.Object})">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView" /> class with the specified name and properties.</summary>
			<param name="instanceName">The name of the instance.</param>
			<param name="properties">Specifies the object properties.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.GetProperty``1(System.String)">
			<summary>Gets the value for a specific property.</summary>
			<returns>The value of the property with the specified name.</returns>
			<param name="name">The name of the property that contains the value to be returned.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Count">
			<summary>Gets the number of properties in the diagnostic view.</summary>
			<returns>An Integer value specifying the number of properties in the diagnostic view.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Name">
			<summary>Gets or sets the name of the object that is the subject of the diagnostic view.</summary>
			<returns>The name of the object that is the subject of the diagnostic view.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.ServerDiagnosticView.Values">
			<summary>Gets a collection of name values pairs for all values in the diagnostic view.</summary>
			<returns>A collection of name value pairs.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault">
			<summary>Represents a SOAP fault message that is generated when setting the diagnostic settings is not supported for a specific name.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault.#ctor(System.Uri,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault" /> class. </summary>
			<param name="name">The name of the object whose diagnostic settings cannot be set.</param>
			<param name="errorMessage">The message that describes the error condition.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault.Message">
			<summary>Gets or sets the message that describes the error condition.</summary>
			<returns>The message that describes the error condition.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsNotSupportedFault.Name">
			<summary>Gets or sets the name of the object whose diagnostic settings cannot be set.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object whose diagnostic settings cannot be set.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest">
			<summary>Represents a request message for the SetDiagnosticSettings Web service call.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.DiagnosticAspects">
			<summary>Gets or sets the diagnostic aspects for the specified name.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticAspects" /> object that represents the diagnostic aspects for the specified name.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.DiagnosticLevel">
			<summary>Gets or sets the diagnostic level for the specified name.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.ManagementService.ManagementServiceDiagnosticLevel" /> object that represents the diagnostic level for the specified name.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ManagementService.SetDiagnosticSettingsRequest.Name">
			<summary>Gets or sets the name of the object to set the diagnostics settings for.</summary>
			<returns>A <see cref="T:System.Uri" /> object that contains the name of the object to set the diagnostics settings for.</returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\amd64\Bin\en\Microsoft.ComplexEventProcessing.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.ComplexEventProcessing</name>
	</assembly>
	<members>
		<member name="N:Microsoft.ComplexEventProcessing">
			<summary>The Microsoft.ComplexeventProcessing namespace contains managed classes that are used to develop StreamInsight applications. StreamInsight applications create structures that define the events, adapters, and queries used in the application. For more information, see StreamInsight End-to-End Example.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings">
			<summary>Adapter factories can use this class to instruct the engine on how to automatically advance application time for their adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings.#ctor(Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings,Microsoft.ComplexEventProcessing.AdvanceTimePolicy)">
			<summary>Initializes a new instance of the AdapterAdvanceTimeSettings class.</summary>
			<param name="generationSettings">Defines how and when the engine should advance application time.</param>
			<param name="policy">Defines the policy how the engine should deal with events that violate the current application time.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings.AdvanceTimeGenerationSettings">
			<summary>Gets the settings that define how and when the engine should advance application time for adapters from this factory.</summary>
			<returns>The settings that define how and when the engine should advance application time for adapters from this factory.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdapterAdvanceTimeSettings.AdvanceTimePolicy">
			<summary>Gets the policy the determines how violations of current application time should be dealt with.</summary>
			<returns>The policy the determines how violations of current application time should be dealt with.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeFrequencyType">
			<summary>Defines when the engine advances application time.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeFrequencyType.Duration">
			<summary>The engine advances time based on the application time of the events that have been received from the data source.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeFrequencyType.EventCount">
			<summary>The engine advances time based on the number of events that have been received from the data source.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings">
			<summary>Defines how and when the engine should advance application time.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.TimeSpan,System.TimeSpan)">
			<summary>Initializes a new instance of the AdvanceTimeSettings class with specified frequency, and delay.</summary>
			<param name="duration">Defines how much application time needs to progress in the input before the engine advances time again.</param>
			<param name="delay">Defines the time span that application time lags behind. A positive value implements a grace period to allow for out of order events. Smaller values reduce latency.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.UInt32,System.TimeSpan)">
			<summary>Initializes a new instance of the AdvanceTimeSettings class with specified frequency and delay.</summary>
			<param name="eventCount">Defines after how many events the engine advances time again.</param>
			<param name="delay">Defines the time span that application time lags behind. A positive value implements a grace period to allow for out of order events. Smaller values reduce latency.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
			<summary>Initializes a new instance of the AdvanceTimeSettings class with specified frequency and delay.</summary>
			<param name="duration">Defines how much application time needs to progress in the input events before the engine advances time again.</param>
			<param name="delay">Defines the time span that application time lags behind. A positive value implements a grace period to allow for out of order events. Smaller values reduce latency.</param>
			<param name="advanceToInfinityOnShutdown">Controls whether application time should be advanced to infinity when the query shuts down.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.#ctor(System.UInt32,System.TimeSpan,System.Boolean)">
			<summary>Initializes a new instance of the AdvanceTimeSettings class with specified frequency, delay and advance to infinity settings.</summary>
			<param name="eventCount">Defines after how many events the engine advances time again.</param>
			<param name="delay">Defines the time span that application time lags behind. A positive value implements a grace period to allow for out of order events. Smaller values reduce latency.</param>
			<param name="advanceToInfinityOnShutdown">Controls whether application time should be advanced to infinity when the query shuts down.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.AdvanceTimeFrequencyType">
			<summary>Gets the policy when the engine advances application time.</summary>
			<returns>The policy when the engine advances application time.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.AdvanceToInfinityOnShutdown">
			<summary>Gets a value that specifies whether application time should be advanced to positive infinity in order to entirely flush the query's state when the query shuts down. The default value is false.</summary>
			<returns>The value that specifies whether application time should be advanced to positive infinity.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.Delay">
			<summary>Gets the time span that defines how application time lags behind. A positive value implements a grace period to allow for out of order events. Smaller values reduce latency. </summary>
			<returns>The time span that defines how application time lags behind.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.Duration">
			<summary>Gets the duration that defines how much application time needs to progress in the input before the engine advances time again. </summary>
			<returns>The duration that defines how much application time needs to progress in the input before the engine advances time again.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings.EventCount">
			<summary>Gets the event count that defines after how many events the engine advances time again.</summary>
			<returns>The event count that defines after how many events the engine advances time again.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings">
			<summary>Defines another input stream as the source of application time increments (CTIs).</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings" /> class.</summary>
			<param name="streamName">Name of the stream that advances application time.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings.StreamName">
			<summary>Gets the name of the stream that advances application time.</summary>
			<returns>The name of the stream that advances application time.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdvanceTimePolicy">
			<summary>Defines the different policies for how the engine can handle input events that would violate the current application time.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimePolicy.Adjust">
			<summary>The start time of incoming events is adjusted to the current application time if the event starts before the current application time and end after the current application time.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimePolicy.Drop">
			<summary>Incoming events are dropped from the input if they start before the current application time.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeSettings">
			<summary>The settings that instruct the engine on how to advance application time for an input stream.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.#ctor(Microsoft.ComplexEventProcessing.AdvanceTimeGenerationSettings,Microsoft.ComplexEventProcessing.AdvanceTimeImportSettings,Microsoft.ComplexEventProcessing.AdvanceTimePolicy)">
			<summary>Initializes a new instance of the AdvanceTimeSettings class which specifies whether application time is advanced based on its own input, from another input, or both.</summary>
			<param name="generationSettings">Defines how and when the engine should advance application time. If null, the engine does not automatically advance application time.</param>
			<param name="importSettings">Defines other input streams as sources of application time. If null, application time is not imported from another source.</param>
			<param name="policy">Defines the policy for how the engine should deal with events that violate the current application time.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimeGenerationSettings">
			<summary>Gets the settings that define how and when the engine should advance application time.</summary>
			<returns>The settings that define how and when the engine should advance application time.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimeImportSettings">
			<summary>Gets the settings that define other input streams as sources of application time.</summary>
			<returns>The settings that define other input streams as sources of application time.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimePolicy">
			<summary>Gets the policy how violations of current application time should be dealt with.</summary>
			<returns>The policy that determines how violations of current application time should be dealt with.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.AdvanceTimeSettings.AdvanceTimeSourceType">
			<summary>Gets the settings that define what other input streams can advance application time for this stream.</summary>
			<returns>The settings that define what other input streams can advance application time for this stream.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType">
			<summary>Defines the options for how application time can be advanced on an input stream.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType.Generate">
			<summary>Time is advanced only based on the events received in the input stream.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType.GenerateAndImport">
			<summary>Time is advanced by both events received in the input stream and by importing application time from another input stream. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.AdvanceTimeSourceType.Import">
			<summary>Time is advanced by importing application time from another input stream.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Application">
			<summary>Represents an application on a CEP server. Applications serve as containers for further CEP metadata objects.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.CreateInputAdapter``1(System.String,System.String)">
			<summary>Creates a CEP input adapter object based on an adapter factory class.</summary>
			<returns>The new input adapter object.</returns>
			<param name="name">The name for the input adapter object in metadata.</param>
			<param name="description">The description for the input adapter object in metadata.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.CreateOutputAdapter``1(System.String,System.String)">
			<summary>Creates a CEP output adapter object based on an adapter factory class.</summary>
			<returns>The new output adapter object.</returns>
			<param name="name">The name for the output adapter object in metadata.</param>
			<param name="description">The description for the output adapter object in metadata.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.CreateQuery(System.String,System.String,Microsoft.ComplexEventProcessing.QueryBinder)">
			<summary>Creates a query from a query binder.</summary>
			<returns>The new query object being generated.</returns>
			<param name="name">Name for the query object in metadata.</param>
			<param name="description">Description for the query in metadata.</param>
			<param name="queryBinder">Binder object that contains the input and output binding information for the query.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.CreateQuery(System.String,System.Uri,System.String,Microsoft.ComplexEventProcessing.InputStreamBinding[],Microsoft.ComplexEventProcessing.OutputStreamBinding[])">
			<summary>Creates a new query.</summary>
			<returns>The new query.</returns>
			<param name="name">Name of the query.</param>
			<param name="queryTemplateName">Name of the query template.</param>
			<param name="description">Description of the query.</param>
			<param name="inputStreamBindings">Input stream bindings of the query.</param>
			<param name="outputStreamBindings">Output stream bindings of the query.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.CreateQueryTemplate(System.Xml.XmlReader)">
			<summary>Creates a new query template from its XML representation.v</summary>
			<returns>The new query template object being created.</returns>
			<param name="queryTextReader">The XML query template definition.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.CreateQueryTemplate``1(System.String,System.String,Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
			<summary>Creates a new query template from a LINQ expression.</summary>
			<returns>New query template object being created.</returns>
			<param name="queryTemplateName">Name for the query template in metadata.</param>
			<param name="description">Description of the query template.</param>
			<param name="streamDefinition">Query template definition.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.Delete">
			<summary>Deletes the query from the application in metadata.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.GetPublishedStreamInputAdapter">
			<summary>Gets the built-in published stream input adapter that can be used for dynamic query composition.</summary>
			<returns>The published stream input adapter.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Application.GetPublishedStreamOutputAdapter">
			<summary>Gets the built-in published stream output adapter that can be used for dynamic query composition.</summary>
			<returns>The published stream output adapter.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Application.EventTypes">
			<summary>Gets the collection of event types defined in the application.</summary>
			<returns>The collection of event types defined in the application.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Application.InputAdapters">
			<summary>Gets the collection of input adapters defined in the application.</summary>
			<returns>The collection of input adapter objects that are defined in the application.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Application.OutputAdapters">
			<summary>Gets the collection of output adapters defined in the application.</summary>
			<returns>The collection of output adapter objects defined in the application.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Application.Queries">
			<summary>Gets the collection of queries that are defined in this application.</summary>
			<returns>The collection of query objects that are defined in the application.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Application.QueryTemplates">
			<summary>Gets the collection of query templates that are defined in this application.</summary>
			<returns>The collection of query template objects that are defined in the application.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Application.Server">
			<summary>Gets a reference to the server in which the application resides.</summary>
			<returns>The server object that is hosting the application.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ApplicationObject">
			<summary>Base class for all objects that are contained in an application.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ApplicationObject.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ApplicationObject" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ApplicationObject.Delete">
			<summary>Deletes the object.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.ApplicationObject.Application">
			<summary>Gets the hosting application.</summary>
			<returns>The hosting application object.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.CepEventType">
			<summary>Represents an event type that is used by a CEP application. Event payloads as well as their fields have associated CEP event types.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventType.ClrType">
			<summary>Gets the Common Language Runtime (CLR) type equivalent of the CEP event type.</summary>
			<returns>The CLR type equivalent of the CEP event type.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventType.Fields">
			<summary>Gets the collection of fields of the event type by their name, ordered lexicographically.</summary>
			<returns>A dictionary containing all fields in the CEP event type, ordered lexicographically by name. Null, if the type is an event field itself.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventType.FieldsByOrdinal">
			<summary>Gets the collection of fields of the event type by ordinal.</summary>
			<returns>A dictionary containing all fields in the CEP event type by ordinal. Null, if the type is an event field itself.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.CepEventTypeField">
			<summary>Represents a single field in a CEP event type.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.CultureInfo">
			<summary>Gets the culture settings of the field.</summary>
			<returns>The culture information that contains the field's culture settings. These setting are used for culture-sensitive operations. If null, the default culture settings are used.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.IsFixedSize">
			<summary>Gets a value indicating whether the field size is fixed.</summary>
			<returns>true if the field size is fixed; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.IsNullable">
			<summary>Gets a value indicating whether the field is nullable.</summary>
			<returns>true if the field is nullable; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.MaxSize">
			<summary>Gets the maximum size of the field, in bytes.</summary>
			<returns>The maximum size of the field in bytes.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.Name">
			<summary>Gets the name of the field.</summary>
			<returns>The name of the field.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.Ordinal">
			<summary>Gets the ordinal value of the field.</summary>
			<returns>The ordinal value of the field within the CEP event type.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepEventTypeField.Type">
			<summary>Gets the CEP event type of the field. </summary>
			<returns>The run-time type of the field.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.CepObject">
			<summary>Represents the base class for CEP objects.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObject.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.CepObject" /> class. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.CepObject._name">
			<summary>Name of the CepObject, which is a full Uri path.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.CepObject._shortName">
			<summary>Short name of the CepObject, without the full Uri path. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObject.Delete">
			<summary>Deletes the object.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObject.Name">
			<summary>Gets the name of this object.</summary>
			<returns>The name of the object.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObject.ShortName">
			<summary>Gets the short name of the CEP object. </summary>
			<returns>The relative URI of the CEP object, without the full metadata path of the object.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1">
			<summary>Implements a generic read-only collection for CEP metadata objects.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
			<summary>Indicates whether the collection contains the given item.</summary>
			<returns>true if the item is contained in the collection; otherwise, false.</returns>
			<param name="item">The item to search in the collection.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.ContainsKey(System.String)">
			<summary>Indicates whether the collection contains the given key.</summary>
			<returns>true if the key is contained in the collection; otherwise, false.</returns>
			<param name="key">The key to search in the collection.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
			<summary>Copies the elements of the collection to a given array, starting at a particular array index.</summary>
			<param name="array">Array to copy the items to.</param>
			<param name="arrayIndex">Array index to start copying to.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.GetEnumerator">
			<summary>Returns an enumerator that iterates through the collection.</summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.TryGetValue(System.String,`0@)">
			<summary>Tries to get the value given the key.</summary>
			<returns>Contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</returns>
			<param name="key">Key of the value to get.</param>
			<param name="value">The value for the key, if the key exists.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Count">
			<summary>Gets the number of elements contained in the collection.</summary>
			<returns>The number of elements in the collection.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.IsReadOnly">
			<summary>Gets the accessibility of the collection.</summary>
			<returns>Always returns true, indicating that the collection is read-only.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Item(System.String)">
			<summary>Gets metadata objects by name.</summary>
			<returns>The object with the specified name.</returns>
			<param name="key">The name of the CEP object to retrieve.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Keys">
			<summary>Returns the keys of the collection.</summary>
			<returns>The read-only collection of keys.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.CepObjectReadOnlyDictionary`1.Values">
			<summary>Gets the values of the collection.</summary>
			<returns>The read-only collection of values.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ConnectionException">
			<summary>Exception thrown when connecting to a server fails.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ConnectionException" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ConnectionException" /> class. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ConnectionException" /> class with serialized data. </summary>
			<param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</param>
			<param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ConnectionException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ConnectionException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception. </summary>
			<param name="message">The error message that explains the reason for the exception.</param>
			<param name="innerException">The exception that is the cause of the current exception. </param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.DiagnosticAspect">
			<summary>Enumeration of different diagnostics aspects that can be turned on or off separately.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.CepEventTracing">
			<summary>Tracing of CEP events as the progress through the queries.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.Debug">
			<summary>Debug tracing. Enter or exit methods, exceptions and so on.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.DiagnosticViews">
			<summary>Diagnostic views.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.GenerateErrorReports">
			<summary>Generate error reports on query failures.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.None">
			<summary>None</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticAspect.StateChanges">
			<summary>Tracing of creation, destruction, and state changes of objects in the engine.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.DiagnosticLevel">
			<summary>Enumeration of different verbosity levels for the diagnostic aspects.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Always">
			<summary>The least verbose diagnostic level. Only diagnostics that are always on are enabled on this level.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Critical">
			<summary>Critical diagnostics are enabled on this level.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Error">
			<summary>Error diagnostics are enabled on this level. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Informational">
			<summary>Informational diagnostics are enabled on this level.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Verbose">
			<summary>The most verbose diagnostic level. All diagnostics are enabled on this level.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticLevel.Warning">
			<summary>Warning diagnostics are enabled on this level.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.DiagnosticSettings">
			<summary>Represents a collection of diagnostic settings.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticSettings.#ctor">
			<summary>Initializes a new instance of the DiagnosticSettings class with the default values of diagnostic aspects None and verbosity level Critical.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticSettings.#ctor(Microsoft.ComplexEventProcessing.DiagnosticAspect,Microsoft.ComplexEventProcessing.DiagnosticLevel)">
			<summary>Initializes a new instance of the DiagnosticSettings class with the given diagnsotic aspects and level.</summary>
			<param name="aspects">Diagnostic aspects.</param>
			<param name="level">Diagnostic level.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticSettings.Aspects">
			<summary>Gets or sets different diagnostics aspects that can be turned on or off separately.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.Diagnostics.DiagnosticAspect" /> value that specifies the diagnostic aspects to enable.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticSettings.Level">
			<summary>Gets or sets different verbosity levels for the diagnostic aspects.</summary>
			<returns>A <see cref="T:Microsoft.ComplexEventProcessing.Diagnostics.DiagnosticLevel" /> value that specifies the verbosity level for the diagnostic aspects.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.DiagnosticView">
			<summary>Represents a diagnostic view for a single engine object as a bag of name-value pairs (properties).</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
			<summary>This method is currently not supported.</summary>
			<param name="item">Item to be added.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Add(System.String,System.Object)">
			<summary>This method is currently not supported.</summary>
			<param name="key">Key of the element.</param>
			<param name="value">Value of the element.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Clear">
			<summary>This method is currently not supported.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
			<summary>Checks if the diagnostic view contains the given key-value pair.</summary>
			<returns>true if the diagnostic view contains the given key-value pair; otherwise, false.</returns>
			<param name="item">Key-value pair to check.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.ContainsKey(System.String)">
			<summary>Determines whether the diagnostic view collection contains an element with the specified key.</summary>
			<returns>true if the collection contains the element; otherwise, false.</returns>
			<param name="key">Key of the element.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
			<summary>Copies the elements of the collection to a given array, starting at a particular array index.</summary>
			<param name="array">Array to copy to.</param>
			<param name="arrayIndex">Array index to start copying to.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.GetEnumerator">
			<summary>Returns an enumerator that can enumerate the diagnostic view items</summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.GetProperty``1(Microsoft.ComplexEventProcessing.DiagnosticViewProperty)">
			<summary>Gets the value for a specific property.</summary>
			<returns>The value of the given property.</returns>
			<param name="name">Property name.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.GetProperty``1(System.String)">
			<summary>Gets the value of the specified property.</summary>
			<returns>The value of the specified property.</returns>
			<param name="name">Name of the property.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
			<summary>This method is currently not supported.</summary>
			<param name="item">Key/value pair to remove.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.Remove(System.String)">
			<summary>This method is currently not supported.</summary>
			<param name="key">Key to remove.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DiagnosticView.TryGetValue(System.String,System.Object@)">
			<summary>Gets the value associated with the specified key.</summary>
			<returns>true if the element with given key is found; otherwise, false.</returns>
			<param name="key">Key of the element to get.</param>
			<param name="value">Return value.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Count">
			<summary>Gets the number of items in the collection.</summary>
			<returns>The number of items in the collection..</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.IsReadOnly">
			<summary>Gets whether the diagnostic view is read only.</summary>
			<returns>true if the diagnostic view is read-only; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Item(Microsoft.ComplexEventProcessing.DiagnosticViewProperty)">
			<summary>Gets or sets the value of the specified property.</summary>
			<returns>The value of the specified property.</returns>
			<param name="property">Property to get or set the value for.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Item(System.String)">
			<summary>Gets the element with the specified key. Setting the value of the element is not supported because instances of this class are read-only. Attempts to set the value will result in an exception being thrown. </summary>
			<returns>The value of the element.</returns>
			<param name="key">Key of the element to get or set the value of.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Keys">
			<summary>Gets an <see cref="System.Collections.Generic.ICollection" /> containing the keys of the diagnostic view</summary>
			<returns>An object that contains names of the keys of the diagnostic view.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.ObjectName">
			<summary>Gets the name of the object for this diagnostic view.</summary>
			<returns>The name of the object for the diagnostic view.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.DiagnosticView.Values">
			<summary>Gets a <see cref="System.Collections.Generic.Icollection" /> object containing the keys of this diagnostic view</summary>
			<returns>An object that contains values of the keys of the diagnostic view.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.DiagnosticViewProperty">
			<summary>Enumeration of all diagnostic view properties.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterFirstCtiTimestamp">
			<summary>The timestamp of the first CTI (in application time) produced or consumed by the adapter (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterState">
			<summary>The current state of the adapter (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterStateTransitionHistory">
			<summary>The XML representation of the last few adapter state transitions (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterTotalSuspendCount">
			<summary>The total number of times the adapter was suspended (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterTotalTimeInNonSuspendedState">
			<summary>The total time the adapter was in a non-suspended state (TimeSpan).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AdapterTotalTimeInSuspendedState">
			<summary>The total time the adapter was in suspended state (TimeSpan).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllEventsCount">
			<summary>The number of all events allocated in the server instance (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllEventsMemory">
			<summary>The total amount of memory (in bytes) used by all events on the server instance (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllQueriesCount">
			<summary>The number of all queries instantiated on the server (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllQueriesOperatorCount">
			<summary>The number of all operators instantiated on the server (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.AllQueriesStreamCount">
			<summary>The number of all streams instantiated on the server (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.BranchGroupingFields">
			<summary>The XML representation of the values of the grouping fields for the branch (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.BranchParentOperatorId">
			<summary>The ID of the Group operator for the branch (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorEventCountSinceLastCti">
			<summary>The number of events produced by the operator since the last CTI (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorEventMemory">
			<summary>The amount of memory used (in bytes) by the events in the operator's indexes (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorEventType">
			<summary>The XML representation of the type of the events produced by the operator (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorId">
			<summary>The ID of the operator (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorIndexEventCount">
			<summary>The total number of events in the operator's indexes (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorIndexMemory">
			<summary>The amount of memory used (in bytes) by the indexes in the operator (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorKind">
			<summary>The kind of the operator (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorLastOutputCtiTimestamp">
			<summary>The timestamp of the last CTI (in application time) produced by the operator (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorQueryId">
			<summary>The ID of the query for the operator (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorSchedulerId">
			<summary>The ID of the scheduler for the operator (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorSystemInstance">
			<summary>Boolean value indicating whether the operator is a system operator (Boolean).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalCpuUsage">
			<summary>The total CPU usage of the operator in milliseconds (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalInputEventCount">
			<summary>The total number of input events for the operator (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalOutputCtiCount">
			<summary>The total number of CTI events produced by the operator (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalOutputEventCount">
			<summary>The total number of output events for the operator (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.OperatorTotalScheduledCount">
			<summary>The total number of times the operator was scheduled (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamConsumerCount">
			<summary>The number of queries consuming events from the published stream (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamEventCount">
			<summary>The number of events in the published stream (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamEventShape">
			<summary>The event shape of the events in the published stream (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamEventType">
			<summary>The XML representation of the event type of the events in the published stream (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamId">
			<summary>The ID of the published stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamProducerCount">
			<summary>The number of queries producing events in the published stream (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.PublishedStreamTotalEventCount">
			<summary>The total number of events produced on the published stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryCreationTime">
			<summary>The time when the query instance was created (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryEndTime">
			<summary>The end time of the query (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryException">
			<summary>The last exception that occurred in the query (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryId">
			<summary>The ID of the query (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryInstanceGroupId">
			<summary>The instance group ID of the query (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastConsumedEventTimestamp">
			<summary>The system time of the last consumed event for the query (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastIncomingEventTimestamp">
			<summary>The system time of the last incoming event for the query (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastOutgoingEventTimestamp">
			<summary>The system time of the last outgoing event for the query (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastProducedCtiTimestamp">
			<summary>The timestamp (in application time) of the last CTI produced by the query.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryLastProducedEventTimestamp">
			<summary>The system time of the last produced event for the query (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryStartTime">
			<summary>The start time of the query (DateTime).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryState">
			<summary>The current state of the query (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QuerySystemInstance">
			<summary>Boolean value indicating whether the query is a system query (Boolean).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalConsumedEventCount">
			<summary>The total number of events consumed by the query (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalConsumedEventLatency">
			<summary>The total latency (in milliseconds) of all events consumed by the query (Double).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalIncomingEventCount">
			<summary>The total number of incoming events for the query (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalOutgoingEventCount">
			<summary>The total number of outgoing events for the query (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalOutgoingEventLatency">
			<summary>The total latency (in milliseconds) of all outgoing events for the query (Double).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalProducedEventCount">
			<summary>The total number of events produced by the query (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.QueryTotalProducedEventLatency">
			<summary>The total latency (in milliseconds) of all events produced by the query (Double).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerActiveTaskCount">
			<summary>The number of active tasks on the scheduler (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerAsyncRunningTaskCount">
			<summary>The number of running asynchronous tasks on the scheduler (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerCommandQueueLength">
			<summary>The length of the scheduler command queue (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerCurrentTaskId">
			<summary>The ID of the currently running task on the scheduler (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerDormantTaskCount">
			<summary>The number of dormant tasks on the scheduler (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerId">
			<summary>The ID of the scheduler (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerLastErrorTaskId">
			<summary>The ID of the last task that hit an error on the scheduler (Int32).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerLastTaskError">
			<summary>The last task error on this scheduler (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerState">
			<summary>The current state of the scheduler (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerStateTransitionHistory">
			<summary>The XML representation of the last few scheduler state transitions (String).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTaskCount">
			<summary>The number of tasks on the scheduler (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalBusyTime">
			<summary>The total busy time (in milliseconds) of the scheduler (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalContextSwitchCount">
			<summary>The total number of context switches for the scheduler (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalContextSwitchTime">
			<summary>The total context switch time (in milliseconds) of the scheduler (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalIdleTime">
			<summary>The total idle time (in milliseconds) of the scheduler (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.SchedulerTotalTaskErrorCount">
			<summary>The total number of task errors on the scheduler (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamEventCount">
			<summary>The number of events in the stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamId">
			<summary>The ID of the stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamMemoryIncludingEvents">
			<summary>The amount of memory (in bytes) used by the stream and all events in it (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamQueryId">
			<summary>The ID of the query for the stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamSourceOperatorId">
			<summary>The ID of the source operator for the stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamSystemInstance">
			<summary>Boolean value indicating whether the stream is a system stream (Boolean).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamTargetOperatorId">
			<summary>The ID of the target operator for the stream (Int64).</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.DiagnosticViewProperty.StreamTotalInputEventCount">
			<summary>The total number of input events for the stream (Int64).</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions">
			<summary>This class contains the extension methods to the Query class for dynamic query composition.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query)">
			<summary>Creates a new input stream bound to the output event stream of an existing query.</summary>
			<returns>An instance of the CepStream class that can be used to create new queries.</returns>
			<param name="query">Existing query.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Creates a new input stream with given advance time settings bound to the output event stream of an existing query.</summary>
			<returns>An instance of the CepStream class that can be used to create new queries.</returns>
			<param name="query">Existing query.</param>
			<param name="advanceTimeSettings">Advance time settings for the stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query,System.String)">
			<summary>Creates a new input stream with a given name bound to the output event stream of an existing query.</summary>
			<returns>An instance of the CepStream class that can be used to create new queries.</returns>
			<param name="query">Existing query.</param>
			<param name="streamName">Name of the input stream in the query template.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.DynamicQueryCompositionExtensions.ToStream``1(Microsoft.ComplexEventProcessing.Query,System.String,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Creates a new input stream with given name and advance time settings bound to the output event stream of an existing query.</summary>
			<returns>An instance of the CepStream class that can be used to create new queries.</returns>
			<param name="query">Existing query.</param>
			<param name="streamName">Name of the input stream in the query template.</param>
			<param name="advanceTimeSettings">Advance time settings for the stream.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EdgeEvent">
			<summary>Defines methods and properties that allow adapters and user-defined operators to create and access edge events.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.EdgeType">
			<summary>Gets the edge type.</summary>
			<returns>Start for Start edges; end for End edges.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.EndTime">
			<summary>Gets or sets the end time of the event. This value is ignored if this is a Start edge event.</summary>
			<returns>The end time of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.EventKind">
			<summary>Gets the event kind for the event.</summary>
			<returns>One of the enumeration values that specifies the kind of event (Insert or Cti).</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent.StartTime">
			<summary>Gets or sets the valid start time of the event. </summary>
			<returns>The start time of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EdgeEvent`1">
			<summary>An edge event represents either the start or end of a CEP event.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent`1.EdgeType">
			<summary>Gets the edge type.</summary>
			<returns>Start for Start edges, End for End edges.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent`1.EndTime">
			<summary>Gets or sets the valid end time of the event. This value is ignored if this is a start edge event.</summary>
			<returns>The end time of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EdgeEvent`1.StartTime">
			<summary>Gets or sets the valid start time of the event. This value is ignored if this is an end edge event.</summary>
			<returns>A <see cref="T:System:DateTime" /> object that represents the valid start time of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EdgeType">
			<summary>Enumerates the valid edge types.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EdgeType.End">
			<summary>Represents an End edge event.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EdgeType.Start">
			<summary>Represents a Start edge event.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EventInstance">
			<summary>Abstract class that represents a user-facing event. This is a wrapper around an underlying event in the system. </summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EventKind">
			<summary>Enumerates the valid kinds of events. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EventKind.Cti">
			<summary>Represents a current time increment (CTI) event.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EventKind.Insert">
			<summary>Represents an Insert event.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EventShape">
			<summary>Specifies the shape of events that the stream contains.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EventShape.Edge">
			<summary>Edge events indicate either the start or the end of the lifetime of a payload. Events of shape Edge can be either Start edges or End edges.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EventShape.Interval">
			<summary>Interval events have a start time and an end time, indicating the lifetime during which the payload of the event is valid.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.EventShape.Point">
			<summary>Point events have a lifetime of a single tick, and hence only a single timestamp.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.EventTypeConverter`1">
			<summary>Represents functionality to convert a CLR type into a CEP event type.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.EventTypeConverter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.EventTypeConverter`1" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EventTypeConverter`1.EventType">
			<summary>Gets the CEP type representation of the CLR type.</summary>
			<returns>The CEP type representation of the CLR type.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.EventTypeConverter`1.MapEngineFieldToClrField">
			<summary>Returns a collection of mappings from CEP fields to CLR fields.</summary>
			<returns>A collection of mappings from CEP fields to CLR fields </returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.InputAdapter">
			<summary>Class that represents an input adapter as a CEP metadata object. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputAdapter.Description">
			<summary>Gets the description of this input adapter.</summary>
			<returns>The description that was specified when the adapter was registered.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputAdapter.FactoryClassName">
			<summary>Gets the full name of the adapter factory class.</summary>
			<returns>The full name of the adapter factory class, including the assembly name.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputAdapter.IsTyped">
			<summary>Gets or sets a value that indicates whether or not this factory is a typed factory.</summary>
			<returns>true if the factory is typed; otherwise, false.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.InputStreamBinding">
			<summary>Represents binding information for an input stream of a query.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InputStreamBinding.#ctor">
			<summary>Initializes a new instance of the InputStreamBinding class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InputStreamBinding.TryGetConfigInfo``1(``0@)">
			<summary>Returns an instance of a initialization info structure. If the underlying XML cannot be converted into this structure an exception will be thrown.</summary>
			<returns>true if a configuration structure could be retrieved; otherwise, false.</returns>
			<param name="configInfo">An instance of the configuration structure.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.AdvanceTimeSettings">
			<summary>Gets the AdvanceTimeSettings for this input binding.</summary>
			<returns>The settings that specify how to advance application time for this input binding.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.EventShape">
			<summary>Gets the shape of the input stream of this binding.</summary>
			<returns>The event shape of the input stream of this binding.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.PayloadClassName">
			<summary>Gets the name of the stream's payload class for this binding.</summary>
			<returns>The payload class name of this stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.StreamName">
			<summary>Gets the name of the input stream for this binding.</summary>
			<returns>The full name of the input stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.InputStreamBinding.StreamSource">
			<summary>Gets the name of the source for this input binding.</summary>
			<returns>The full name of the event source.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.IntervalEvent">
			<summary>Defines methods and properties that allow adapters and user-defined operators to create and access interval events.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.IntervalEvent.EndTime">
			<summary>Gets or sets the end time of the event.</summary>
			<returns>The end time of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.IntervalEvent.StartTime">
			<summary>Gets or sets the start time of the event.</summary>
			<returns>The start time of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.IntervalEvent`1">
			<summary>Defines methods and properties that allow adapters and user-defined operators to create and access interval events</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.IntervalEvent`1.EndTime">
			<summary>Gets or sets the end time of the event.</summary>
			<returns>The end time of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.IntervalEvent`1.StartTime">
			<summary>Gets or sets the start time of the event.</summary>
			<returns>The start time of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException">
			<summary>Exception thrown when creating a CEP metadata object fails.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException" /> class with the specified error message. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException" /> class with serialized data. </summary>
			<param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</param>
			<param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidDefinitionException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidDefinitionException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
			<param name="innerException">Exception that is the cause of the current exception. </param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.InvalidNameException">
			<summary>Exception thrown when creating a type fails.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidNameException" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidNameException" /> class with the specified error message. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidNameException" /> class with serialized data. </summary>
			<param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</param>
			<param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.InvalidNameException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.InvalidNameException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception. </summary>
			<param name="message">Error message that explains the reason for the exception. </param>
			<param name="innerException">Exception that is the cause of the current exception.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.ManagementException">
			<summary>Exception thrown when creating a type fails.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementException" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementException" /> class with the specified error message. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementException" /> class with serialized data. </summary>
			<param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</param>
			<param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.ManagementException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.ManagementException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception. </summary>
			<param name="message">Error message that explains the reason for the exception. </param>
			<param name="innerException">Exception that is the cause of the current exception.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.OutputAdapter">
			<summary>Class that represents an output adapter as CEP metadata object.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputAdapter.Description">
			<summary>Gets the description of this output adapter.</summary>
			<returns>The description that was specified when the adapter was registered.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputAdapter.FactoryClassName">
			<summary>ets the full name of the adaper factory class.</summary>
			<returns>The full name of the adapter factory class, including the assembly name.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputAdapter.IsTyped">
			<summary>Gets or sets a value that indicates whether or not this factory is a typed factory.</summary>
			<returns>true if the factory is typed; otherwise, false.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.OutputStreamBinding">
			<summary>Represents binding information for the output stream of a query.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.OutputStreamBinding.TryGetConfigInfo``1(``0@)">
			<summary>Returns an instance of a initialization info structure. If the underlying XML cannot be converted into this structure an exception is thrown.</summary>
			<returns>true if a configuration structure could be retrieved; otherwise, false.</returns>
			<param name="configInfo">An instance of the configuration structure.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.EventShape">
			<summary>Gets the shape of the output stream of this binding.</summary>
			<returns>The event shape of the output stream of this binding.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.PayloadClassName">
			<summary>Gets the name of the stream's payload class for this binding.</summary>
			<returns>The payload class name of this stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamConsumerName">
			<summary>Gets the name of the consumer for this output binding.</summary>
			<returns>The name of the event consumer.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamEventOrder">
			<summary>Gets information about the order of events in that stream.</summary>
			<returns>The order of events in that stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamName">
			<summary>Gets the name of the output stream for this binding.</summary>
			<returns>The full name of the output stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.OutputStreamBinding.StreamTarget">
			<summary>Gets the name of the stream target.</summary>
			<returns>The full name of the event sink.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.PointEvent">
			<summary>Defines methods and properties that allow adapters and user-defined operators to create and access point events.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.PointEvent.StartTime">
			<summary>Gets or sets the time of the point event.</summary>
			<returns>The time of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.PointEvent`1">
			<summary>Defines methods and properties that allow adapters and user-defined operators to create and access point events.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.PointEvent`1.StartTime">
			<summary>Gets or sets the time of the event.</summary>
			<returns>The time of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Query">
			<summary>Represents a query object in CEP metadata.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Query.Start">
			<summary>Starts the query asynchronously.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Query.Stop">
			<summary>Stops this query.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Query.Description">
			<summary>Gets the description of this query.</summary>
			<returns>The description that was specified when the query was registered.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Query.InputStreamBindings">
			<summary>Gets the collection of input stream bindings.</summary>
			<returns>The collection of input stream bindings.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Query.OutputStreamBindings">
			<summary>Gets the collection of output stream bindings.</summary>
			<returns>The collection of output stream bindings.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Query.QueryTemplateName">
			<summary>Gets the name of the query template associated with this query.</summary>
			<returns>Full name of the query template associated with this query.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.QueryBinder">
			<summary>Represents a client-side helper class to bind query producers and consumers in order to create a query object.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.#ctor(Microsoft.ComplexEventProcessing.QueryTemplate)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.QueryBinder" /> class. </summary>
			<param name="queryTemplate">Query template that must be bound by this query binder.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.AddConsumer(System.String,Microsoft.ComplexEventProcessing.OutputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Adds an untyped adapter as an event consumer.</summary>
			<param name="streamConsumerName">Stream consumer name, used to uniquely identify the consumer.</param>
			<param name="outputAdapter">Output adapter metadata object to be bound.</param>
			<param name="configInfo">Runtime configuration for the output adapter.</param>
			<param name="eventShape">Desired event shape of the output stream.</param>
			<param name="streamEventOrder">Desired event order in the output stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.AddConsumer``1(System.String,Microsoft.ComplexEventProcessing.OutputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Adds an adapter as an event consumer.</summary>
			<param name="streamConsumerName">Stream consumer name, used to uniquely identify the consumer.</param>
			<param name="outputAdapter">Output adapter metadata object to be bound.</param>
			<param name="configInfo">Runtime configuration for the output adapter.</param>
			<param name="eventShape">Desired event shape of the output stream.</param>
			<param name="streamEventOrder">Desired event order in the output stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindOutputToPublishedStream(Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Binds the output of the query to the default published stream with the same name as the query.</summary>
			<param name="eventShape">Desired event shape of the output stream.</param>
			<param name="streamEventOrder">Desired event order in the output stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindOutputToPublishedStream(System.Uri,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Binds the output of the query to an explicitly named published stream.</summary>
			<param name="publishedStreamName">Name of the published stream.</param>
			<param name="eventShape">Desired event shape of the output stream.</param>
			<param name="streamEventOrder">Desired event order in the output stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.Query)">
			<summary>Binds the output events stream of an existing query to a given input stream in the query template.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound.</param>
			<param name="query">Existing query.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.Query,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Binds the output events stream of an existing query to a given input stream in the query template.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound.</param>
			<param name="query">Existing query.</param>
			<param name="advanceTimeSettings">Settings to advance application time for this input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,System.Uri,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Binds an existing published stream to a given input stream in the query template.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound.</param>
			<param name="publishedStreamName">Name of the published stream.</param>
			<param name="eventShape">Desired event shape of the input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Binds a query template input to an untyped input adapter.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound.</param>
			<param name="inputAdapter">Input adapter metadata object to be bound.</param>
			<param name="configInfo">Runtime configuration for the input adapter.</param>
			<param name="eventShape">Desired event shape of the input stream</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,System.Uri,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Binds an existing published stream to a given input stream in the query template.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound.</param>
			<param name="publishedStreamName">Name of the published stream.</param>
			<param name="eventShape">Desired event shape of the input stream.</param>
			<param name="advanceTimeSettings">Settings to advance application time for this input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Binds a query template input to an untyped input adapter</summary>
			<param name="streamName">Name of the input stream of the query template to be bound.</param>
			<param name="inputAdapter">Input adapter metadata object to be bound.</param>
			<param name="configInfo">Runtime configuration for the input adapter.</param>
			<param name="eventShape">Desired event shape of the input stream.</param>
			<param name="advanceTimeSettings">Settings to advance application time for this input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer``1(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Binds a query template input to an input adapter.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound</param>
			<param name="inputAdapter">Input adapter metadata object to be bound.</param>
			<param name="configInfo">Runtime configuration for the input adapter.</param>
			<param name="eventShape">Desired event shape of the input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryBinder.BindProducer``1(System.String,Microsoft.ComplexEventProcessing.InputAdapter,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Binds a query template input to an input adapter.</summary>
			<param name="streamName">Name of the input stream of the query template to be bound</param>
			<param name="inputAdapter">Input adapter metadata object to be bound.</param>
			<param name="configInfo">Runtime configuration for the input adapter.</param>
			<param name="eventShape">Desired event shape of the input stream.</param>
			<param name="advanceTimeSettings">Settings to advance application time for this input stream.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryBinder.InputBindings">
			<summary>Gets the collection of input stream binding information.</summary>
			<returns>A collection of input stream binding objects.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryBinder.OutputBindings">
			<summary>Gets the collection of output stream binding information.</summary>
			<returns>A collection of output stream binding objects.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryBinder.QueryTemplate">
			<summary>Gets the query template this query binder is trying to bind.</summary>
			<returns>The query template that this query binder is trying to bind.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.QueryTemplate">
			<summary>Represents a query template metadata object.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.QueryTemplate.Delete">
			<summary>Deletes the query template from metadata.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplate.Definition">
			<summary>The query template definition in the form of XML.</summary>
			<returns>The query definition as an XML string.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplate.Description">
			<summary>Gets a description for this query template.</summary>
			<returns>The description for this query template</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplate.QueryTemplateInputs">
			<summary>Gets the collection of inputs associated with this query template.</summary>
			<returns>A collection of input stream names.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.QueryTemplateInput">
			<summary>Represents a stream entry point in a query template.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.EventTypeName">
			<summary>Gets the name of the event type associated with the stream input.</summary>
			<returns>The name of the event type associated with the stream input.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.Name">
			<summary>Gets the name of the event type associated with the stream input.</summary>
			<returns>The name of the event type associated with the stream input.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.QueryTemplate">
			<summary>Gets the query template that is associated with this input.</summary>
			<returns>The query template that is associated with this input.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.QueryTemplateInput.StreamName">
			<summary>Gets ets the stream name of the input..</summary>
			<returns>The stream name of the input.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Server">
			<summary>Represents a CEP server.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.ClearDiagnosticSettings(System.Uri)">
			<summary>Clears the diagnostic settings for the named object.</summary>
			<param name="name">Name can represent the full name of the object or it can be the name of a collection or subobject of the Server (such as PlanManager).</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Connect(System.ServiceModel.EndpointAddress)">
			<summary>Connects to a running instance of the CEP server through an endpoint. The WsHttpBinding will be used as default binding.</summary>
			<returns>A new CEP server instance that represents the server.</returns>
			<param name="endpointAddress">The endpoint of the server.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Connect(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding)">
			<summary>Connects to a running instance of the CEP server through an endpoint.</summary>
			<returns>A new CEP server instance that represents the server.</returns>
			<param name="endpointAddress">Endpoint of the server.</param>
			<param name="binding">Connection binding information.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Connect(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.Uri)">
			<summary>Connects to a running instance of the CEP server through an endpoint.</summary>
			<returns>A new CEP server instance that represents the remote server.</returns>
			<param name="endpointAddress">Endpoint of the server.</param>
			<param name="binding">Connection binding information.</param>
			<param name="via">A <see cref="T:System.Uri" /> object that contains the transport address of the CEP server.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Create(System.String)">
			<summary>Creates an instance of the CEP server, backed by an in-memory metadata store.</summary>
			<returns>The new CEP server instance.</returns>
			<param name="instanceName">Name of the installed StreamInsight instance.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Create(System.String,Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration)">
			<summary>Creates a CEP server using the SqlCe metadata provider.</summary>
			<returns>The new CEP server instance.</returns>
			<param name="instanceName">Name of the installed StreamInsight instance.</param>
			<param name="config">The SqlCe metadata provider configuration.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.CreateApplication(System.String)">
			<summary>Creates an application in the CEP server.</summary>
			<returns>The application being created.</returns>
			<param name="name">Name of the application.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.CreateManagementService">
			<summary>Returns a management service implementation for the current server.</summary>
			<returns>A management service implementation for the current server.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Dispose">
			<summary>Releases all resources referenced by this server.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.Enumerate(System.Uri)">
			<summary>Enumerates a collection of metadata objects in the server.</summary>
			<returns>Returns the names of all of the objects that belong to the specified collection.</returns>
			<param name="name">Name of the collection.&lt;/</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.GetDiagnosticSettings(System.Uri)">
			<summary>Gets the diagnostic settings for the named object.</summary>
			<returns>Diagnostic settings for the object.</returns>
			<param name="name">Name can represent the full name of the object or it can be the name of a collection or sub-object of the Server (for example, PlanManager).</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.GetDiagnosticView(System.Uri)">
			<summary>Gets the diagnostic view for the named object.</summary>
			<returns>Diagnostic view for the object.</returns>
			<param name="name">Name can represent the full name of the object or it can be the name of a collection or sub-object of the Server (for example, PlanManager).</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Server.SetDiagnosticSettings(System.Uri,Microsoft.ComplexEventProcessing.DiagnosticSettings)">
			<summary>Sets the diagnostic settings for the named object.</summary>
			<param name="name">Name can represent the full name of the object or it can be the name of a collection or sub-object of the Server (for example, PlanManager).</param>
			<param name="diagnosticSettings">Diagnostic settings for the object.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Server.Applications">
			<summary>Gets the collection of applications that are registered in the server.</summary>
			<returns>The collection of applications that are registered in the server.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Server.IsEmbedded">
			<summary>Gets a flag indicating whether the server is running in process or is a remote server.</summary>
			<returns>true if the server is running in-process; false if the server is a remote server.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration">
			<summary>Represents configuration information specific to the SqlCe metadata provider.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration" /> class. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.DefaultCreateDataSourceIfMissing">
			<summary>Default relative location of the file that holds the SqlCe metadata database.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.DefaultDataSource">
			<summary>Returns the default location of the file that holds the SQL Server CE metadata database.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.CreateDataSourceIfMissing">
			<summary>Gets or sets a flag indicating if the data source file should be created if missing.</summary>
			<returns>A boolean value that indicates whether data source files should be created if they are found to be missing.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.SqlCeMetadataProviderConfiguration.DataSource">
			<summary>Gets or sets the path to the database file used by the provider.</summary>
			<returns>The path to the database file.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.StreamEventOrder">
			<summary>Specifies the event order in a query output stream.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.StreamEventOrder.ChainOrdered">
			<summary>In a ChainOrdered output stream each CTI releases all interval events with an end time before the CTI to the output.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.StreamEventOrder.FullyOrdered">
			<summary>In a FullyOrdered output stream each CTI releases interval events to the output only if all other events with an earlier start time have been released to the output already.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.TypeCreationException">
			<summary>Txception thrown when creating a type fails. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.TypeCreationException" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.TypeCreationException" /> class with the specified error message. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.TypeCreationException" /> class with serialized data. </summary>
			<param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</param>
			<param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.TypeCreationException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.TypeCreationException" /> class with the specified error message and a reference to the inner exception that is the cause of this exception. </summary>
			<param name="message">Error message that explains the reason for the exception.</param>
			<param name="innerException">Exception that is the cause of the current exception.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.TypedEvent`1">
			<summary>Represents a typed event.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.TypedEvent`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.TypedEvent`1" /> class. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.TypedEvent`1.EventKind">
			<summary>Gets the kind of the event.</summary>
			<returns>The kind of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.TypedEvent`1.Payload">
			<summary>Gets or sets the payload of the event.</summary>
			<returns>The event payload.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.UntypedEvent">
			<summary>Represents an untyped event.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.UntypedEvent" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.GetField(System.Int32)">
			<summary>Returns the value of the specified field, regardless of its type.</summary>
			<returns>An object that represents the field value.</returns>
			<param name="ordinal">The ordinal of the field to get.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.GetField``1(System.Int32)">
			<summary>Gets a field value by its ordinal.</summary>
			<returns>An object containing the field value.</returns>
			<param name="ordinal">Field ordinal, as defined by the event type.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.SetField(System.Int32,System.Object)">
			<summary>Sets the value of the specified field, regardless of its type.</summary>
			<param name="ordinal">Field ordinal, as defined by the event type.</param>
			<param name="value">Value to be set.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.UntypedEvent.SetField``1(System.Int32,``0)">
			<summary>Sets the field value specified by its ordinal.</summary>
			<param name="ordinal">field ordinal, as defined by the event type.</param>
			<param name="value">Value to be set.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.UntypedEvent.EventKind">
			<summary>Gets the kind of the event.</summary>
			<returns>The kind of the event.</returns>
		</member>
		<member name="N:Microsoft.ComplexEventProcessing.Extensibility">
			<summary>Exposes the APIs used for user-defined aggregates and operators. For more information, see User-defined Aggregates and Operators.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepAggregate`2">
			<summary>The base class for a user-defined non-incremental, time-insensitive aggregate.</summary>
			<param name="TInput">Payload type of the input events.</param>
			<param name="TOutput">Type of the scalar aggregation result.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepAggregate`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Extensibility.CepAggregate`2" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepAggregate`2.GenerateOutput(System.Collections.Generic.IEnumerable{`0})">
			<summary>Generates a single scalar value as a result of the aggregate computation over a collection of input event payloads.</summary>
			<returns>Scalar result of the aggregation.</returns>
			<param name="payloads">Collection of input event payloads.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepModule`2">
			<summary>The base class for a user-defined non-incremental, time-insensitive operator or aggregate.</summary>
			<param name="TInput">Payload type of the input events.</param>
			<param name="TOutput">Type of the result.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepModule`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Extensibility.CepModule`2" /> class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Extensibility.CepModule`2.InputEventType">
			<summary>Gets theevent type that is input to the CEP operator or aggregate.</summary>
			<returns>The CEP representation of the input event type.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepOperator`2">
			<summary>The base class for a user-defined non-incremental, time-insensitive operator.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepOperator`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Extensibility.CepOperator`2" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepOperator`2.GenerateOutput(System.Collections.Generic.IEnumerable{`0})">
			<summary>The GenerateOutput method generates a collection of output event payloads as a result of the operator computation over a collection of input event payloads.</summary>
			<returns>A collection of output event payloads.</returns>
			<param name="payloads">Collection of input event payloads..</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveAggregate`2">
			<summary>The base class for a user-defined non-incremental, time-sensitive aggregate. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveAggregate`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveAggregate`2" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveAggregate`2.GenerateOutput(System.Collections.Generic.IEnumerable{Microsoft.ComplexEventProcessing.IntervalEvent{`0}},Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor)">
			<summary>Generates a single scalar value as a result of the aggregate computation over a collection of input events.</summary>
			<returns>Scalar result of the aggregation.</returns>
			<param name="events">Collection of input events.</param>
			<param name="windowDescriptor">Window descriptor of the window that contains the input events.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveModule`2">
			<summary>The base class for a user-defined non-incremental, time-sensitive operator or aggregate.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveModule`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveModule`2" /> class.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2">
			<summary>The base class for a user-defined non-incremental, time-sensitive operator.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2.CreateIntervalEvent">
			<summary>Creates an event to be contained in the returned result of the user-defined operator.</summary>
			<returns>An interval event.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.CepTimeSensitiveOperator`2.GenerateOutput(System.Collections.Generic.IEnumerable{Microsoft.ComplexEventProcessing.IntervalEvent{`0}},Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor)">
			<summary>Generates a collection of output events as a result of the operator computation over a collection of input event payloads. </summary>
			<returns>A collection of output events.</returns>
			<param name="events">Collection of input events.</param>
			<param name="windowDescriptor">Window descriptor of the window that contains the input events.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.IDeclareEventProperties">
			<summary>Defines properties for user defined operators or aggregates to provide additional information about the event field, such as the culture information for a string field in the result.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Extensibility.IDeclareEventProperties.DeclareEventProperties(Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Declares additional properties of the result event type.</summary>
			<returns>A decorated outputEventType that contains additional event fields information.</returns>
			<param name="outputEventType">CEP representation of the event type that is output from the user defined module.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor">
			<summary>The window descriptor provides information about the temporal properties of the window that contains the events that are input to a user-defined time-sensitive operator or aggregate.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor.EndTime">
			<summary>Gets or sets the end time of the window.</summary>
			<returns>The end time of the time window.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Extensibility.WindowDescriptor.StartTime">
			<summary>Gets or sets the start time of the window.</summary>
			<returns>The start time of the time window.</returns>
		</member>
		<member name="N:Microsoft.ComplexEventProcessing.Linq">
			<summary>Exposes the StreamInsight query template language. For more information, see Writing Query Templates in LINQ.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepEvent">
			<summary>Provides access to the start time with expressions that can only refer to the start time of an event.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepEvent.StartTime">
			<summary>Gets the start time of the event.</summary>
			<returns>The start time of the event. </returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepEvent`1">
			<summary>Allows to specify lambda expressions for event duration changes. It provides access to start time, end time, and event payload.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepEvent`1.EndTime">
			<summary>Gets the end time of the event.</summary>
			<returns>A <see cref="T:DateTime" /> object that represents the end time of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepEvent`1.Payload">
			<summary>Gets the event payload.</summary>
			<returns>An object that represents the event payload.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2">
			<summary>Represents a group of streams.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2.ApplyWithUnion``1(System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{`0},Microsoft.ComplexEventProcessing.Linq.CepStream{``0}}})">
			<summary>Applies the query logic specified by the applybranch parameter to a grouped stream. Produces a result stream per group and unions all result streams together.</summary>
			<returns>Stream with TApplyOutput as the event payload type.</returns>
			<param name="applybranch">Query to be applied to each group.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2.ApplyWithUnion``2(System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{`0},Microsoft.ComplexEventProcessing.Linq.CepStream{``1}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.KeyedPayload{`1,``1},``0}})">
			<summary>Supplies the query logic specified by the applybranch parameter to a grouped stream. Produces a result stream per group and unions all result streams together. The selector parameter is a lambda expression that allows additional project operations on the output and provides access to grouping fields.</summary>
			<returns>A stream with TApplyOutput as event payload type.</returns>
			<param name="applybranch">Query to be applied to each group.</param>
			<param name="selector">Lambda expression for projections of the output.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams`2.Key">
			<summary>Gets the grouping key.</summary>
			<returns>The grouping key.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepOrderableStream`1">
			<summary>Represents a stream of events that can be ordered.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepOrderedStream`1">
			<summary>An ordered stream is the result of an "order by" or one of its variants in the query. It helps constrain subsequent query specification to operations that are allowed on an ordered stream, such as Take.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepRankedEvent`1">
			<summary>Exposes a rank along with the event payload over a ranked stream using Take. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepRankedEvent`1.Payload">
			<summary>Gets the payload of the event.</summary>
			<returns>The payload of the event.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepRankedEvent`1.Rank">
			<summary>Gets the rank of the event.</summary>
			<returns>The rank of the event.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepStream">
			<summary>Provides the extension methods used for writing LINQ queries over a stream of CEP events. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.AlterEventDuration``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent{``0},System.TimeSpan}})">
			<summary> Changes the duration of the input events. This method does not change the start time of an event.</summary>
			<returns>A stream with new event durations.</returns>
			<param name="source">Input stream.</param>
			<param name="eventDurationFunc">Expression that defines the new event duration.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.AlterEventLifetime``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent,System.DateTime}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent{``0},System.TimeSpan}})">
			<summary>Alters the lifetime of the events in the stream. This method can change both the start time and end time of an event.</summary>
			<returns>A new stream with changed event lifetimes. </returns>
			<param name="source">Input stream.</param>
			<param name="startTimeFunc">Function that defines the new event start time given an event.</param>
			<param name="lifeTimeFunc">Function that defines the new event life time given an event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.CountByStartTimeWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.UInt32,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Groups input stream events into windows of events based on a given number of unique event start times. The window slides when a new event arrives that starts at a different time.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied.</returns>
			<param name="source">CepStream to apply window operation against.</param>
			<param name="numberOfEventStartTime">Window size by number of unique event start times.</param>
			<param name="outputPolicy">Indicates how output events of the window operation are altered or defined before they are introduced back into the stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.CountByStartTimeWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.UInt32,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Groups input stream events into windows of events based on a given number of unique event start times. The window slides when new event arrives that starts at a different time.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied.</returns>
			<param name="source">CepStream to apply window operation against. </param>
			<param name="numberOfEventStartTime">Window size by number of unique event start times.</param>
			<param name="inputPolicy">Indicates how events are altered before being input into the window operation.</param>
			<param name="outputPolicy">Indicates how output events of the window operation are altered or defined before they are introduced back into the stream. </param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.GroupBy``2(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Partitions the input stream by the specified grouping key. </summary>
			<returns>Groups of streams.</returns>
			<param name="source">Input stream</param>
			<param name="keySelector">Expressions for projecting the grouping key.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.GroupBy``3(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
			<summary>Groups the source stream by the specified key selector functions and projects results using the element selector function.</summary>
			<returns>Groups of streams.</returns>
			<param name="source">Input stream.</param>
			<param name="keySelector">Expression that defines key value.</param>
			<param name="selector">Expression that projects the results.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. The window is defined by constant window size and hop size timespans. </summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied to.</returns>
			<param name="source">CepStream to apply the HoppingWindow operation against.</param>
			<param name="windowSize">Length of the window. </param>
			<param name="hopSize">Hop size of the window.</param>
			<param name="outputPolicy">Indicate how output events of the window operation are altered.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>The window is defined by constant window size and hop size timespans. You can also provide an alignment time as a reference for the starting point of the window.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied to.</returns>
			<param name="source">CepStream to apply the HoppingWindow operation against.</param>
			<param name="windowSize">Length of the window. </param>
			<param name="hopSize">Hop size of the window.</param>
			<param name="alignment">Reference time to align window start times. </param>
			<param name="outputPolicy">Indicate how output events of the window operation are altered.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. The window is defined by constant window size and hop size timespans. You can also provide an alignment time as a reference for the starting point for the window.</summary>
			<returns>A window stream to which aggregates, TopK or UDO can be applied to.</returns>
			<param name="source">CepStream to apply the HoppingWindow operation against.</param>
			<param name="windowSize">Length of the window. </param>
			<param name="hopSize">Hop size of the window.</param>
			<param name="inputPolicy">Indicate how events are altered before being input into the window operation.</param>
			<param name="outputPolicy">Indicate how output events of the window operation are altered before they are introduced back into the stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.HoppingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>The window is defined by constant window size and hop size timespans. You can also provide an alignment time as a reference for the starting point of the window.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied to. </returns>
			<param name="source">CepStream to apply the HoppingWindow operation against.</param>
			<param name="windowSize">Length of the window. </param>
			<param name="hopSize">Hop size of the window.</param>
			<param name="alignment">Reference time to align window start times. </param>
			<param name="inputPolicy">Indicates how events are altered before being input into the window operation.</param>
			<param name="outputPolicy">Indicates how output events of the window operation are altered before they are introduced back into the stream. </param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.IsEmpty``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
			<summary>Function used in queries to indicate left anti-semi-join (LASJ).</summary>
			<returns>Anew stream with events' time changed</returns>
			<param name="source">Input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Join``4(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
			<summary>Joins the events from the outer stream with events from the inner stream on the given join key.</summary>
			<returns>A stream of joined events.</returns>
			<param name="outer">The outer stream.</param>
			<param name="inner">The inner stream.</param>
			<param name="outerKeySelector">Selector to select the key values from outer stream event.</param>
			<param name="innerKeySelector">Selector to select the key value from inner stream event.</param>
			<param name="selector">Mapping expression that defines a projection on the output.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.OrderBy``2(Microsoft.ComplexEventProcessing.Linq.CepOrderableStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Orders the input stream by the rankSelector.</summary>
			<returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
			<param name="source">Stream source to order against.</param>
			<param name="rankSelector">Ranking expression whose value is used to compare events against each other.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.OrderByDescending``2(Microsoft.ComplexEventProcessing.Linq.CepOrderableStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Orders the input stream by the 'rankSelector' in descending order.</summary>
			<returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
			<param name="source">stream source to order against.</param>
			<param name="rankSelector">expression whose value is used to compare events against each other.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Select``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Given an ordered stream, this method produces an ordered stream that can be used for ranking.</summary>
			<returns>An ordered stream.</returns>
			<param name="source">Input stream.</param>
			<param name="selector">Mapping to produce the result event type.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Select``2(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Projects events from input stream using a projections expression.</summary>
			<returns>The stream of projected input events. </returns>
			<param name="source">Input stream.</param>
			<param name="selector">Mapping to produce the result event type.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Select``2(Microsoft.ComplexEventProcessing.Linq.CepWindowStream{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},``1}})">
			<summary>Maps a window stream to a stream based on a given mapping expression.</summary>
			<returns>A stream which is the union of all window streams.</returns>
			<param name="source">Stream of windows.</param>
			<param name="selector">Eefines the mapping expression.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``2(Microsoft.ComplexEventProcessing.Linq.CepWindowStream{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},``0,``1}})">
			<summary>Supports order by operation against a windowed stream.</summary>
			<returns>A stream that can be ordered. </returns>
			<param name="source">stream source.</param>
			<param name="bind">Bind expression to bind elements in the two "from" clauses.</param>
			<param name="selector">Result selector. </param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``3(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
			<summary>Produces a stream based on the cross join of two input streams.</summary>
			<returns>A stream where the result is a cross join of the outer and inner stream. </returns>
			<param name="source">Outer input stream.</param>
			<param name="bind">Inner nput stream.</param>
			<param name="selector">mapping expression that defines a projection on the output.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``4(Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams{``0,``1},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``2}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.IKey{``1},``2,``3}})">
			<summary>Supports adding query logic inside a Group and Apply.</summary>
			<returns>A stream that can be used for further apply logic in the Group and Apply.</returns>
			<param name="source">Stream source.</param>
			<param name="bind">Bind information that binds the second stream to the first stream.</param>
			<param name="selector">Mapping expression that defines a projection on the output.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SelectMany``4(Microsoft.ComplexEventProcessing.Linq.CepGroupingStreams{``0,``1},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepWindowStream{``2}}},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.IKey{``1},``2,``3}})">
			<summary>Produces a stream based on the cross join of two input streams.</summary>
			<returns>A stream where the result is a cross join of the outer and inner stream.</returns>
			<param name="source">Outer input stream.</param>
			<param name="bind">Inner input stream.</param>
			<param name="selector">Mapping expression that defines a projection on the output.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ShiftEventTime``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepEvent,System.DateTime}})">
			<summary>Shift event times by the amount specified by the shiftExpr parameter. The shift value can be positive or negative. The method does not change event life times.</summary>
			<returns>A stream with shifted event start times.</returns>
			<param name="source">Input stream.</param>
			<param name="shiftExpr">Expression that defines the time span to shift.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SnapshotWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. Each window is a snapshot window that is defined by the closest event endpoints in the stream.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied.</returns>
			<param name="source">CepStream to apply the Snapshot operation against.</param>
			<param name="outputPolicy">Indicate how the output events of the window operation are altered they are introduced back into the stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.SnapshotWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. Each window is a snapshot window that is defined by the closest event endpoints in the stream.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied.</returns>
			<param name="source">CepStream to apply the Snapshot operation against.</param>
			<param name="inputPolicy">Indicate how events are altered before being fed into the window operation.</param>
			<param name="outputPolicy">Indicate how the output events of the window operation are altered they are introduced back into the stream. </param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Take``1(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.UInt32)">
			<summary>Given an ordered stream, takes a given number of events from each window.</summary>
			<returns>A stream with a given number of events taken from each window.</returns>
			<param name="source">Input stream.</param>
			<param name="numberOfElements">Number of elements to take from each window.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Take``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.UInt32,System.Linq.Expressions.Expression{System.Func{Microsoft.ComplexEventProcessing.Linq.CepRankedEvent{``0},``1}})">
			<summary>Takes a given number of events from each window and also evaluate the given expression. This is used for cases in which you want to project the rank into the result of Take().</summary>
			<returns>A stream that is the result of Take.</returns>
			<param name="source">Input stream to take events from.</param>
			<param name="numberOfElements">Number of elements to take.</param>
			<param name="resultSelector">Project expression to project the ranking into the result.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ThenBy``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Orders an ordered stream by another orderKey as indicated by rankSelector.</summary>
			<returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
			<param name="source">Stream source to order against.</param>
			<param name="rankSelector">Expression whose value is used to compare events against each other.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ThenByDescending``2(Microsoft.ComplexEventProcessing.Linq.CepOrderedStream{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Orders an ordered stream by another orderKey as indicated by rankSelector.</summary>
			<returns>An ordered stream that can furthur be ranked, for example, by using Take().</returns>
			<param name="source">Stream source to order against.</param>
			<param name="rankSelector">Expression whose value is used to compare events against each other.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.ToPointEventStream``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
			<summary>Changes the events in input stream to point events by keeping only the event start times.</summary>
			<returns>A stream with events converted to point events.</returns>
			<param name="source">Input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. A tumbling window is a special kind of hopping window where window size and hop size are the same.</summary>
			<returns>A window stream to which aggregates, ranking or uder-defined operations can be applied.</returns>
			<param name="source">CepStream to apply TumblingWindow operation against.</param>
			<param name="windowSize">Length and hop size of the window. </param>
			<param name="outputPolicy">Indicates how output events coming output of window operation are altered. </param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. A tumbling window is a special kind of hopping window where window size and hop size are the same. You can also provide an alignment time as a reference for the starting point of the window.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied.</returns>
			<param name="source">CepStream to apply window operation against.</param>
			<param name="windowSize">Length and hop size of the window. </param>
			<param name="alignment">Reference time to align window start times.</param>
			<param name="outputPolicy">Indicate how output events of the window operation are altered.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. A tumbling window is a special kind of hopping window where window size and hop size are the same. You can also provide an alignment time as a reference for the starting point of the window.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied. </returns>
			<param name="source">epStream to apply window operation against.</param>
			<param name="windowSize">Length and hop size of the window. </param>
			<param name="inputPolicy">Indicates how events are altered before being input into the window operation.</param>
			<param name="outputPolicy">Indicates how output events of the window operation are altered. </param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.TumblingWindow``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.TimeSpan,System.DateTime,Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy,Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy)">
			<summary>Transforms a stream to a window stream where each member is a CepWindow. A tumbling window is a special kind of hopping window where window size and hop size are the same. You can also provide an alignment time as a reference for the starting point of the window.</summary>
			<returns>A window stream to which aggregates, ranking or user-defined operations can be applied.</returns>
			<param name="source">epStream to apply window operation against.</param>
			<param name="windowSize">Length and hop size of the window.</param>
			<param name="alignment">Reference time to align window start times. </param>
			<param name="inputPolicy">Indicates how events are altered before being input into the window operation. </param>
			<param name="outputPolicy">Indicates how output events of the window operation are altered.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Union``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},Microsoft.ComplexEventProcessing.Linq.CepStream{``0})">
			<summary>Unions two streams together into one stream.</summary>
			<returns>A stream that unions the two input streams.</returns>
			<param name="outer">First stream for the union.</param>
			<param name="inner">Second stream for the union.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream.Where``1(Microsoft.ComplexEventProcessing.Linq.CepStream{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
			<summary>Filters events from an input stream using a given filter function.</summary>
			<returns>The stream of filtered events.</returns>
			<param name="source">Source stream.</param>
			<param name="filter">Filter function.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepStream`1">
			<summary>Represents a stream of events from any user specified payload type.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.String)">
			<summary>Creates an unbound stream with event payload of type 'TPayload'.</summary>
			<returns>An input stream with given name and type.</returns>
			<param name="streamName">Name of the stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.Uri,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Creates a bound stream over an input from a given published stream.</summary>
			<returns>A bound input stream for the events in a given published stream.</returns>
			<param name="publishedStreamName">Name of the published stream.</param>
			<param name="eventShape">Shape of the events in the stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.Uri,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary> Creates a bound stream for input from a given published stream.</summary>
			<returns>A bound input stream for the events in a given published stream.</returns>
			<param name="publishedStreamName">Name of the published stream. </param>
			<param name="eventShape">Shape of the events in the stream.</param>
			<param name="advanceTimeSettings">Advance time settings for this stream.&lt;</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Creates a bound stream from a given input adapter factory.</summary>
			<returns>A bound stream whose events come from an instance of an input adapter that is generated by the input adapter factory.</returns>
			<param name="streamName">Name of the input stream.</param>
			<param name="adapterFactoryType">Input adapter factory type.</param>
			<param name="configInfo">Input adapter factory configuration.</param>
			<param name="eventShape">Event shape of the input stream.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.Create(System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings)">
			<summary>Creates a bound stream from a given input adapter factory.</summary>
			<returns>A bound stream whose events come from an instance of the input adapter that is generated by the input adapter factory.</returns>
			<param name="streamName">Name of the input stream.</param>
			<param name="adapterFactoryType">Input adapter factory type.</param>
			<param name="configInfo">Input adapter factory configuration.</param>
			<param name="eventShape">Event shape of the input stream.</param>
			<param name="advanceTimeSettings">Advance time setting for the adapter.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ExtractInputStreams">
			<summary>Retrieves a list with information about input streams from a given stream definition.</summary>
			<returns>All input streams used in the query</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToPublishedStreamQuery(System.Uri,System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Creates a query bound to one or more input queries and with an output bound to an explicitly named published stream. At least one input to the query must be a query. If there are multiple queries as input, all input queries must be part of the same server and application Only one query bound to the same published stream can be running at any given time.</summary>
			<returns>The newly created query.</returns>
			<param name="publishedStreamName">Name of the published stream.</param>
			<param name="queryName">Name of the query.</param>
			<param name="description">Description of the query.&lt;</param>
			<param name="eventShape">Shape of the query output stream.</param>
			<param name="eventOrder">Expected event order.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToPublishedStreamQuery(System.Uri,Microsoft.ComplexEventProcessing.Application,System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Creates a query with an output bound to an explicitly named published stream. The output of the query can be consumed through dynamic query composition. Only one query bound to the same published stream can be running at any given time.</summary>
			<returns>The newly created query.</returns>
			<param name="publishedStreamName">Name of the published stream.</param>
			<param name="application">Application which will host the query.</param>
			<param name="queryName">Name of the query.</param>
			<param name="description">Name of the query.</param>
			<param name="eventShape">Expected event shape that is going to be sent to the output adapter.</param>
			<param name="eventOrder">Expected event order.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Creates a query bound to one or more input queries and with an unbound output. At least one input to the query must be a query. If there are multiple queries as input, all input queries must be part of the same server and application. The output of the query can be consumed through dynamic query composition only</summary>
			<returns>Te newly created query.</returns>
			<param name="queryName">Name of the query.</param>
			<param name="description">Description of the query.</param>
			<param name="eventShape">Expected event shape that is going to be sent to the output stream.</param>
			<param name="eventOrder">Expected event order.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(Microsoft.ComplexEventProcessing.Application,System.String,System.String,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Creates a query with an unbound output running in the specified application. The output of the query can be consumed through dynamic query composition only.</summary>
			<returns>The newly created query.</returns>
			<param name="application">Application which will host the query.&lt;</param>
			<param name="queryName">Name of the query.&lt;</param>
			<param name="description">Description of the query.</param>
			<param name="eventShape">Shape of the query output stream.</param>
			<param name="eventOrder">Expected event order.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(System.String,System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Creates a query bound to one or more input queries. At least one input to the query must be a query. If there are multiple queries as input, all input queries must be part of the same server and application.</summary>
			<returns>A runnable query that the user can then start, stop, or otherwise manage.</returns>
			<param name="queryName">Name of the query.</param>
			<param name="description">Description of the query.</param>
			<param name="adapterFactoryType">Type of the output adapter factory</param>
			<param name="adapterConfig">Configuration for the output adapter factory.</param>
			<param name="eventShape">expected event shape that is going to be sent to the output adapter.</param>
			<param name="eventOrder">Expected event order.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStream`1.ToQuery(Microsoft.ComplexEventProcessing.Application,System.String,System.String,System.Type,System.Object,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.StreamEventOrder)">
			<summary>Convert the defined LINQ query into a CEP query that runs in the specified application.</summary>
			<returns>A runnable query that user can then start, stop, or otherwise manage.</returns>
			<param name="application">Application which will host the query.</param>
			<param name="queryName">Name of the query.</param>
			<param name="description">Description of the query.</param>
			<param name="adapterFactoryType">Type of the output adapter factory.</param>
			<param name="adapterConfig">Configuration for the output adapter factory</param>
			<param name="eventShape">Expected event shape that is going to be sent to the output adapter.</param>
			<param name="eventOrder">Expected event order.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepStreamConsumer`1">
			<summary>CepStreamConsumer represents a specific stream consumer information. It will be translated to actual output binding for a query.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext">
			<summary>This class represents the context in which a CepStream was created.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext.#ctor">
			<summary>Initializes a new instance of the CepStreamCreationContext class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext.Query">
			<summary>Gets or sets the query from which the CepStream was created.</summary>
			<returns>Null if the CepStream was not created from a query.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedAggregateAttribute">
			<summary>Decorates the user-defined aggregate extension method.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedAggregateAttribute.#ctor(System.Type)">
			<summary>Initializes a new instance of the user-defined attribute.</summary>
			<param name="udaType">Type that implements the user-defined attribute.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedOperatorAttribute">
			<summary>Decorates the user-defined operator extension method.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepUserDefinedOperatorAttribute.#ctor(System.Type)">
			<summary>Initializes a new instance of the user-defined opreator attribute.</summary>
			<param name="udoType">Type that implements the user-defined operator.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepUtility">
			<summary>Utility class used by user defined operator, aggregate and functions.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepUtility.DoNotCall">
			<summary>ndicates that a given method is not supposed to be called and executed. This is used to decorate the extension methods for user-defined operators and user-defined aggregates so that the user will not accidentally execute it.</summary>
			<returns>An InvalidOperationException object.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepUtility.GetEventFieldCulture(System.String)">
			<summary>Creates an object that describes culture by using the culture of a specific field from input stream event.</summary>
			<returns>An object that describes the culture of the specified input field. </returns>
			<param name="inputFieldExpression">Member access expression on input stream event. </param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindow`1">
			<summary>A window is a finite collection of events that results from applying a windowing operator on a stream of events..</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods">
			<summary>Extension methods for built-in aggregates.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>Value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt64}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Byte}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int16}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.SByte}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt32}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt16}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.SByte}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Byte}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt32}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt16}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt64}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int16}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Avg``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
			<summary>Computes the average over all events in a window. The value to average over is defined in the input expression parameter.</summary>
			<returns>The nullable value that contains the average over the events in the input window.</returns>
			<param name="window">Window with the input events to which the average is applied to.</param>
			<param name="input">Lambda expression which specifies the value that the average is computed over.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Count``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0})">
			<summary>Computes the count of events in the window.</summary>
			<returns>A value that contains the count of events.</returns>
			<param name="window">Window containing the events to be counted.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Max``2(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Computes the maximum of the values specified by the input parameter over a window of events.</summary>
			<returns>A value that contains the maximum.</returns>
			<param name="window">Window with the input events to which the maximum calculation is applied to.</param>
			<param name="input">Lambda expression that defines the value that the maximum is going to operate against.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Min``2(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
			<summary>Computes the minimum of the values specified by the input parameter over a window of events.</summary>
			<returns>A value that contains the minimum.</returns>
			<param name="window">Window with the input events to which the minimum calculation is applied to.</param>
			<param name="input">Lambda expression that defines the value that the minimum is going to operate against.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Byte}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int16}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt64}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Byte}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt16}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.UInt32}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.SByte}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int16}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter. </summary>
			<returns>A nullable value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.SByte}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt16}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt32}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.Sum``1(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,System.UInt64}})">
			<summary>Computes the sum of all events in a window. The value to compute the sum over is defined in the input expression parameter.  </summary>
			<returns>A value that contains the result of the summation.</returns>
			<param name="window">The window that the sum is computed over.</param>
			<param name="input">Lambda expression which defines the input value for the summation based on an input event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.UserDefinedAggregate``3(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Object)">
			<summary>Calls a user-defined aggregate (UDA) in which the UDA does not take an additional expression to map the input event to the input that the UDA expects. </summary>
			<returns>The output of the user-defined aggregate.</returns>
			<param name="window">Window that the aggregate is applied to.</param>
			<param name="configInfo">Initialization information for the aggregate.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowExtensionMethods.UserDefinedAggregateWithMapping``4(Microsoft.ComplexEventProcessing.Linq.CepWindow{``0},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Object)">
			<summary>Calls a user-defined aggregate. </summary>
			<returns>The output of the user-defined aggregate.</returns>
			<param name="window">Window that aggregate is applied to.</param>
			<param name="aggregateInputExpr">Expression that transform the input event type to the aggregate input event type.</param>
			<param name="configInfo">Initialization information for the aggregate.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.CepWindowStream`1">
			<summary>Results from applying a windowing operator to a stream.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.CepWindowStream`1.ApplyWindowFunction``1(System.Linq.Expressions.Expression{System.Func{`0,Microsoft.ComplexEventProcessing.Linq.CepWindow{``0}}})">
			<summary>Applies the specified window function.</summary>
			<returns>The specified window function.</returns>
			<param name="WindowFunction">Window function to perform.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.CepWindowStream`1.Expression">
			<summary>Gets the lambda expression that is associated with this object.</summary>
			<returns>The lambda expression that is associated with this object.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.IKey`1">
			<summary>Provides access to the grouping key.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.IKey`1.Key">
			<summary>Gets the grouping key.</summary>
			<returns>The grouping key.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo">
			<summary>Contains all information extracted from a stream definition.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.#ctor(System.String,System.Object,System.Object,System.Type,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.AdvanceTimeSettings,Microsoft.ComplexEventProcessing.Linq.CepStreamCreationContext)">
			<summary>Initalizes a new instance of the input stream info.</summary>
			<param name="streamName">Name of the input stream.</param>
			<param name="streamSource">Input stream provider.</param>
			<param name="streamSourceConfig">Configuration for the input stream provider.</param>
			<param name="eventType">Event payload type of the input stream.</param>
			<param name="eventShape">Event shape of the input stream.</param>
			<param name="advanceTimeSettings">Advance time settings.</param>
			<param name="context">The context in which the stream was created.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.AdvanceTimeSettings">
			<summary>Gets the advance time settings.</summary>
			<returns>The advance time settings.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.Context">
			<summary>Gets an object that represents the context in which the stream was created.</summary>
			<returns>The object that represents the context in which the stream was created.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.EventShape">
			<summary>Gets the event shape the stream source is going to provide.</summary>
			<returns>The event shape the stream source is going to provide.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.EventType">
			<summary>Gets the event payload type in the stream.</summary>
			<returns>The event payload type in the stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.StreamName">
			<summary>Gets the name of the stream.</summary>
			<returns>The name of the stream.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.StreamSource">
			<summary>Gets the stream provider.</summary>
			<returns>The stream provider.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.InputStreamInfo.StreamSourceConfig">
			<summary>Gets the configuration information for the stream provider.</summary>
			<returns>The configuration information for the stream provider.</returns>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.KeyedPayload`2.Key">
			<summary>Gets the grouping key that is associated with this object.</summary>
			<returns>An object that represents the grouping key that is associated with this object.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException">
			<summary>Exception thrown from LINQ provider when the query cannot be correctly produced.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor">
			<summary>Initializes a new instance of the QueryGenerateException class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor(System.String)">
			<summary>Initializes a new instance of the QueryGenerateException class.</summary>
			<param name="message">Error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the QueryGenerationException class.</summary>
			<param name="info">The SerializationInfo object that holds the serialized object data.</param>
			<param name="context">The StreamingContext object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.QueryGenerationException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the QueryGenerateException class.</summary>
			<param name="message">Error message that explains the reason for the exception.</param>
			<param name="innerException">Exception that is the cause of the current exception.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy">
			<summary>Defines the output policies that are applicable to snapshot windows.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind)">
			<summary>Initializes a new instance of the class.</summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicy.Clip">
			<summary>Gets a snapshot window output policy instance that clips end times of output events to window end.</summary>
			<returns>A snapshot window output policy instance that clips end times of output events to window end.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicyClip">
			<summary>Defines a specific snapshot window output policy that clips the end time of the output events to the window end.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.SnapshotWindowOutputPolicyClip.#ctor">
			<summary>Initializes a new instance of the class. </summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy">
			<summary>The window input policy describes how the timestamps of events that fall into a given window are changed before processing the window operation.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipKind)">
			<summary>Initializes a new instance of the class.</summary>
			<param name="clipKind">Clip kind.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipToWindow">
			<summary>Gets a window input policy that clips input event start and end time to the window boundaries.</summary>
			<returns>A window input policy that clips input event start and end time to the window boundaries.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipKind">
			<summary>The kind of clip for the input events that falls into the same window.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Linq.WindowInputPolicy.ClipKind.ClipToWindow">
			<summary>Clips both start and end time of the event and align it with the window.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy">
			<summary>Describes how the CEP engine modifies the timestamp of events that are resulting from a set-based operation on top of the window. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy" /> class.</summary>
			<param name="kind">Window output policy.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.ClipToWindowEnd">
			<summary>Gets a window output policy instance for generic windows that clips the end time of the output events to the window end.</summary>
			<returns>A window output policy that clips the end time of the output events to the window end.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind">
			<summary>Enumerates the policies for changing the timestamps of the events that are resulting from a set-based operation on top of the window.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicy.PolicyKind.Clip">
			<summary>Clips the timestamps of output events to window-related boundaries.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip">
			<summary>Output policy that allows events generated from window operations to be clipped as desired.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.#ctor(Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.ClipKind)">
			<summary>Initializes a new instance of the WindowOutputPolicyClip class.</summary>
			<param name="kind">Output clip kind.</param>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.OutputClipKind">
			<summary>Gets the output clip kind.</summary>
			<returns>The output clip kind.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.ClipKind">
			<summary>Policies to clip events in the window output.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Linq.WindowOutputPolicyClip.ClipKind.ClipToWindowEnd">
			<summary>The end time of the event is set to the window end boundary if the original end time of the end would stretch beyond the window boundary.</summary>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\CTP3\amd64\Readme.txt ===
========================================
Release Information 
Microsoft SQL Server StreamInsight, November Community Technology Preview
========================================
This file contains late-breaking or other important information that supplements the product documentation. Read this file completely when installing this software. This file includes the following sections:

    * What's included in this release
    * Prerequisites
    * References
    * Post-Installation Steps
    * Known Issues 

-------------------------------
What's included in this release
-------------------------------
The Microsoft SQL Server StreamInsight installation program installs the following on your machine: 
* The runtime libraries for StreamInsight.
* The SDK to develop StreamInsight applications and adapters. The SDK includes a LINQ provider whose functionality and scope is subject to change in future versions. We encourage you to provide feedback on the current version of the StreamInsight query development experience through LINQ.
* The StreamInsight Event Flow Debugger for debugging StreamInsight applications.
* An alpha version of the StreamInsight libraries for development using the IObservable/IObserver programming paradigm.
* An alpha version of the stand-alone StreamInsight host process for development with a shared CEP server.

-------------------------------
Prerequisites
-------------------------------
1. Install .NET Framework version 3.5 SP1. 
2. Uninstall all previous versions of Microsoft StreamInsight.

-------------------------------
References
-------------------------------
1. The Microsoft SQL Server StreamInsight documentation and samples provide detailed information about the product. The documentation and samples can also be downloaded independent of the installation as a separate download file. You can go to the download page to get the documentation and samples using this URL

http://go.microsoft.com/fwlink/?LinkId=160598


2. Refer to the StreamInsight blog as a reference for late-breaking information about the product which might include additional information and product details. The StreamInsight blog URL is 

http://blogs.msdn.com/streaminsight/

3. The StreamInsight MSDN portal contains further pointers to the forum and other documentation:

http://msdn.microsoft.com/en-us/ee476990.aspx

-------------------------------
Post-Installation Steps
-------------------------------
After successful installation, you need to perform the following steps in order to use the full functionality of the product:
* You need to install a new version of Microsoft SQL Server Compact. Please follow these steps to do so:
1. Please un-install all prior versions of SQL Server Compact using Programs -> Add/Remove Programs
2. Please install the new version of SQL Server Compact. You can find the installation file of the required version in the redist folder in the installation directory of Microsoft StreamInsight (C:\Program Files\Microsoft StreamInsight\redist for most installations).


-------------------------------
Known Issues
-------------------------------
Please refer to the StreamInsight blog for late-breaking known issues. 

1. On 64bit systems, previous SQL CE versions need to be removed and both x86 as well as amd64 SQL CE MSIs need to be installed. See above for installation instructions.

2. The current version of the LINQ provider has some limitations. Note that these issues as well as other aspects of the LINQ provider are being worked on and subject to change in future versions.

  a. Inside the Group and Apply, the Key field(s) of the grouped streams cannot be accessed. The Key field(s) are accessible only in the final projection of the Group and Apply. Note that all original payload fields are still visible inside the Group and Apply.

  b. Primitive types as event payload types are not supported. They have to be modeled as structs or classes with a single field.

  c. UDF input or output parameters need to be of CEP primitive types.
  
3. The debugging tool is not functional on Windows XP and Windows Server 2003 (x86 and x64).


-------------------------------
Security Notes
-------------------------------

The executable StreamInsightHost does not allow remote connections by default. In order to remove this restriction, the app.config file needs to be edited. If this is desired, the user is strongly advised to also enable transport or message level security through the config file.

Please refer to the documentation for further security-related information.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\amd64\Bin\en\Microsoft.ComplexEventProcessing.Adapters.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.ComplexEventProcessing.Adapters</name>
	</assembly>
	<members>
		<member name="N:Microsoft.ComplexEventProcessing.Adapters">
			<summary>Exposes the StreamInsight adapters classes. Adapters are software transformers that deliver events into or out of a StreamInsight server. For more information, see Creating Input and Output Adapters.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.Adapter">
			<summary>Defines the methods and properties that must be implemented by input and output adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.#ctor">
			<summary>Initializes a new instance of the Adapter class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.CleanupResources">
			<summary>Internal virtual function that does cleanup of resources. To be overridden by the input and output adapter base classes.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Dispose">
			<summary>Releases all of the resources owned by the adapter host. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Dispose(System.Boolean)">
			<summary>Implements the Dispose pattern. To be overridden by derived classes </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.OnStopAdapter">
			<summary>This function is called when the adapter is stopped by the plan manager or when the end-of-stream from the output adapter is encountered.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.OnStopped">
			<summary>This function is called when the adapter invokes Stopped to stop itself. It allows derived classes to implement additional behavior besides what the base class does.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Ready">
			<summary>Invoked by the adapter to signal to the engine that it is ready to be resumed. The engine will invoke Resume() only after the adapter has called Ready().</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Resume">
			<summary>Calls Resume() on its own worker thread. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Start">
			<summary>Calls Start() on its own worker thread.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.Adapter.Stopped">
			<summary>Invoked by the adapter to notify the runtime that the adapter has shut down. </summary>
		</member>
		<member name="P:Microsoft.ComplexEventProcessing.Adapters.Adapter.AdapterState">
			<summary>Gets the state of the adapter.</summary>
			<returns>The state of the adapter.</returns>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterException">
			<summary>The exception that is raised when an error occurs during an input or output adapter operation.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.AdapterException" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.AdapterException" /> class with the specified error message.</summary>
			<param name="message">Message describing the exception.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.AdapterException" /> class with serialized data. </summary>
			<param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</param>
			<param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.AdapterException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.AdapterException" /> class with the specified message and inner exception.</summary>
			<param name="message">Error message describing the exception.</param>
			<param name="innerException">Message that specifies the inner exception.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.AdapterState">
			<summary>Enumeration of possible adapter states.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Created">
			<summary>The adapter has just been created, but has not yet been started.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Running">
			<summary>The adapter is running and producing events. </summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Stopped">
			<summary>The adapter has finished running and will not be used again.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Stopping">
			<summary>The adapter has been asked to stop producing events because the query is being shut down.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.AdapterState.Suspended">
			<summary>The adapter is suspended and cannot enqueue events.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.DequeueOperationResult">
			<summary>Represents the result of an Dequeue operation.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.DequeueOperationResult.Empty">
			<summary>The operation failed. The caller needs to suspend itself and wait to be notified that they can do more work with the queue.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.DequeueOperationResult.Success">
			<summary>Operation succeeded.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter">
			<summary>Base class for an input adapter that produces untyped edge events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter.CreateInsertEvent(Microsoft.ComplexEventProcessing.EdgeType)">
			<summary>Creates an edge insert event.</summary>
			<returns>An instance of an edge event.</returns>
			<param name="edgeType">Edge type (start or end).</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.EdgeEvent@)">
			<summary>Enqueues an event into the stream associated with this adapter.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the operation did not succeed because the queue is full.</returns>
			<param name="eventInstance">Event instance.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.EdgeOutputAdapter">
			<summary>Represents the base class for an output adapter that receives edge events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeOutputAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.EdgeOutputAdapter" /> class.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.EdgeOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.EdgeEvent@)">
			<summary>Dequeues events from the stream associated with this adapter.</summary>
			<returns>DequeueOperationResult.Success if the operation succeeded.DequeueOperationResult.Empty if the operation did not succeed and the adapter needs to wait with further Dequeue calls.</returns>
			<param name="eventInstance">Event that is dequeued.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.EnqueueOperationResult">
			<summary>Represents the result of an Enqueue operation.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.EnqueueOperationResult.Full">
			<summary>The queue is full, and the engine did not accept the event. Further calls to Enqueue will not succeed until the Resume method has been called.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.EnqueueOperationResult.Success">
			<summary>The operation succeeded.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.IDeclareAdvanceTimeProperties`1">
			<summary>Interface that must be implemented by the factory classes that (optionally) want to specify AdvanceTimeSettings for the adapter instances that they produce.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IDeclareAdvanceTimeProperties`1.DeclareAdvanceTimeProperties(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Declares the AdvanceTime properties given configuration information and the shape of the event. Factory classes that implement this interface tell the runtime that it should produce current time increment (Cti) events that have the properties described by the AdvanceTimeSettings class returned by this method.</summary>
			<returns>An instance of the AdvanceTimeSettings.</returns>
			<param name="configInfo">Configuration information for the adapter.</param>
			<param name="eventShape">shape of the events that must be produced by the adapter.</param>
			<param name="cepEventType">Type of event that is expected from the adapter.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.IDeclareEventProperties`1">
			<summary>Optional interface to be implemented by input adapter factory to provide additional information for the event field, such as the culture of a string field.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IDeclareEventProperties`1.DeclareEventProperties(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Declares the additional properties of the cepEventType given the adapter factory configuration and event shape information. </summary>
			<returns>A decorated CepEventType that contains additional event fields information.</returns>
			<param name="configInfo">Configuration information for the adapter factory.</param>
			<param name="eventShape">The shape of the events that must be produced by the adapter.</param>
			<param name="inputEventType">Event type CEP engine expects the input adapter to provide.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.IInputAdapterFactory`1">
			<summary>This interface must be implemented by factory classes that produce untyped input adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IInputAdapterFactory`1.Create(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Creates an input adapter.</summary>
			<returns>An instance of the input adapter.</returns>
			<param name="configInfo">Configuration information for the adapter.</param>
			<param name="eventShape">Shape of the events that the adapter produces.</param>
			<param name="cepEventType">Type of event that is expected from the adapter.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase">
			<summary>Base class for input adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.CleanupResources">
			<summary>Cleans up engine resources that are used by the adapter host.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.EnqueueCtiEvent(System.DateTimeOffset)">
			<summary>Enqueues a Current Time Increment (CTI) event.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the queue is full and the operation did not succeed.</returns>
			<param name="startTime">Start time of the CTI event.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.OnStopAdapter">
			<summary>This function is called when the adapter is stopped by the plan manager. Enqueue the EndOfStream event and detach from the query instance. After this point, the plan manager is free to shut down the query independently of the adapter.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.InputAdapterBase.OnStopped">
			<summary>This function is called when the adapter invokes Stopped() to stop itself. Enqueue the EndOfStream event and detach from query instance. After this point, the plan manager is free to shut down the query independently of the adapter.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter">
			<summary>Base class for an input adapter that produces untyped interval events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter.CreateInsertEvent">
			<summary>Creates an interval insert event.</summary>
			<returns>An instance of an interval event.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.IntervalEvent@)">
			<summary>Enqueues an event into the stream associated with this adapter.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the operation did not succeed because the queue is full.</returns>
			<param name="eventInstance">Event instance.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.IntervalOutputAdapter">
			<summary>Represents the base class for an output adapter that receives interval events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalOutputAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.IntervalOutputAdapter" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IntervalOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.IntervalEvent@)">
			<summary>Dequeues events from the stream associated with this adapter.</summary>
			<returns>DequeueOperationResult.Success if the operation succeeded.DequeueOperationResult.Empty if the operation did not succeed and the adapter needs to wait with further Dequeue calls. After this the adapter can be resumed at any moment by the runtime. </returns>
			<param name="eventInstance">Event that is dequeued.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.IOutputAdapterFactory`1">
			<summary>This interface must be implemented by factory classes that produce untyped output adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.IOutputAdapterFactory`1.Create(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Creates an output adapter.</summary>
			<returns>An instance of the output adapter.</returns>
			<param name="configInfo">Configuration information for the adapter.</param>
			<param name="eventShape">Shape of the events that the adapter produces.</param>
			<param name="cepEventType">Type of event that will be received by the adapter.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareAdvanceTimeProperties`1">
			<summary>Interface that must be implemented by typed input factory classes that (optionally) want to specify AdvanceTimeSettings for the adapter instances that they produce.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareAdvanceTimeProperties`1.DeclareAdvanceTimeProperties``1(`0,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Declares the AdvanceTime properties given configuration information and the shape of the event. Factory classes that implement this interface tell the runtime that it should produce Current Time Increment (Cti) events that have the properties described by the AdvanceTimeSettings class returned by this method.</summary>
			<returns>An instance of the advance time settings.</returns>
			<param name="configInfo">Configuration information for the adapter.</param>
			<param name="eventShape">Shape of the events that must be produced by the adapter.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareEventProperties`1">
			<summary>Optional interface to be implemented by a typed input adapter factory to provide additional information for the event field, such as the culture  of a string field.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedDeclareEventProperties`1.DeclareEventProperties``1(`0,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Declares the additional properties of the cepEventType given the adapter factory configuration and event shape information.</summary>
			<returns>A decorated CepEventType that contains additional event fields information.</returns>
			<param name="configInfo">Configuration information for the adapter factory.</param>
			<param name="eventShape">Shape of the events that must be produced by the adapter.</param>
			<param name="inputEventType">Event type CEP engine expects the input adapter to provide.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedInputAdapterFactory`1">
			<summary>This interface must be implemented by factory classes that produce typed input adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedInputAdapterFactory`1.Create``1(`0,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>This interface must be implemented by factory classes that produce typed input adapters.</summary>
			<returns>An instance of the input adapter. </returns>
			<param name="configInfo">Configuration information for the adapter.</param>
			<param name="eventShape">Shape of the events that must be produced by the adapter.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.ITypedOutputAdapterFactory`1">
			<summary>This interface must be implemented by factory classes that produce typed output adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.ITypedOutputAdapterFactory`1.Create``1(`0,Microsoft.ComplexEventProcessing.EventShape)">
			<summary>Creates an output adapter.t.</summary>
			<returns>An instance of the output adapter.</returns>
			<param name="configInfo">Configuration information for the adapter.</param>
			<param name="eventShape">Shape of the events that will be received by the adapter.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase">
			<summary>Base class for output adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.CleanupResources">
			<summary>Cleans up engine resources that are used by the adapter host.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.OnStopAdapter">
			<summary>This function is called when the adapter has dequeued the end-of-stream.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.OutputAdapterBase.OnStopped">
			<summary>This function is called when the adapter invokes Stopped() to stop itself.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter">
			<summary>Base class for an input adapter that produces untyped point events</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter.CreateInsertEvent">
			<summary>Creates a point insert event.</summary>
			<returns>An instance of a point event allocated in the internal memory.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PointInputAdapter.Enqueue(Microsoft.ComplexEventProcessing.PointEvent@)">
			<summary>Enqueues an event into the stream associated with this adapter.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the operation did not succeed because the queue is full.</returns>
			<param name="eventInstance">Event instance.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.PointOutputAdapter">
			<summary>Represents the base class for an output adapter that receives point events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PointOutputAdapter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.PointOutputAdapter" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PointOutputAdapter.Dequeue(Microsoft.ComplexEventProcessing.PointEvent@)">
			<summary>Dequeues events from the stream associated with this adapter.</summary>
			<returns>DequeueOperationResult.Success if the operation succeeded.DequeueOperationResult.Empty if the operation did not succeed and the adapter needs to wait with further Dequeue calls. After this the adapter can be resumed at any moment by the runtime adapter had been stopped.</returns>
			<param name="eventInstance">Event that is dequeued.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory">
			<summary>Adapter factory for the published stream input and output adapters.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory.Create(Microsoft.ComplexEventProcessing.Adapters.PublishedStreamInputAdapterConfiguration,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Creates a new input adapter. This method should not be called directly.</summary>
			<returns>The new adapter instance.</returns>
			<param name="configInfo">Adapter configuration information.</param>
			<param name="eventShape">Event shape.</param>
			<param name="cepEventType">Event type.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory.Create(Microsoft.ComplexEventProcessing.Adapters.PublishedStreamOutputAdapterConfiguration,Microsoft.ComplexEventProcessing.EventShape,Microsoft.ComplexEventProcessing.CepEventType)">
			<summary>Creates a new output adapter. This method should not be called directly.</summary>
			<returns>The new adapter instance.</returns>
			<param name="configInfo">Adapter configuration information.</param>
			<param name="eventShape">Event shape.</param>
			<param name="cepEventType">Event type.</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamAdapterFactory.Dispose">
			<summary>Disposes the adapter factory instance.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamInputAdapterConfiguration">
			<summary>The configuration for published stream input adapters.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamInputAdapterConfiguration.PublishedStreamName">
			<summary>Name of the published stream which will be the event source for the input adapter.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamOutputAdapterConfiguration">
			<summary>The configuration for published stream output adapters.</summary>
		</member>
		<member name="F:Microsoft.ComplexEventProcessing.Adapters.PublishedStreamOutputAdapterConfiguration.PublishedStreamName">
			<summary>The name of the published stream which will be the event sink for the output adapter.</summary>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1">
			<summary>Base class for an input adapter that produces edge events which have a payload structure.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1.CreateInsertEvent(Microsoft.ComplexEventProcessing.EdgeType)">
			<summary>Creates an edge Insert event.</summary>
			<returns>An instance of an edge event.</returns>
			<param name="edgeType">Type of edge event to create (start edge or end edge event).</param>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeInputAdapter`1.Enqueue(Microsoft.ComplexEventProcessing.EdgeEvent{`0}@)">
			<summary>Enqueues the specified event into the stream that is associated with this adapter.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the operation did not succeed because the queue is full.</returns>
			<param name="eventInstance">Event instance.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeOutputAdapter`1">
			<summary>Represents the base class for an output adapter that receives edge events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeOutputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeOutputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedEdgeOutputAdapter`1.Dequeue(Microsoft.ComplexEventProcessing.EdgeEvent{`0}@)">
			<summary>Dequeues events from the stream associated with this adapter.</summary>
			<returns>DequeueOperationResult.Success if the operation succeeded.DequeueOperationResult.Empty if the operation did not succeed and the adapter needs to wait with further Dequeue calls.</returns>
			<param name="eventInstance">Event instance</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2">
			<summary>Base class for a typed input adapter.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedInputAdapter`2.ReleaseEvent(`0@)">
			<summary>Releases the memory occupied by an event.</summary>
			<param name="eventInstance">Event instance</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1">
			<summary>Base class for an input adapter that produces interval events which have a payload structure.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1.CreateInsertEvent">
			<summary>Creates an interval insert event.</summary>
			<returns>An instance of an edge event.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalInputAdapter`1.Enqueue(Microsoft.ComplexEventProcessing.IntervalEvent{`0}@)">
			<summary>Enqueues an event into the stream associated with this adapter.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the operation did not succeed because the queue is full.</returns>
			<param name="eventInstance">Event instance</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalOutputAdapter`1">
			<summary>Represents the base class for an output adapter that receives interval events.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalOutputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalOutputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedIntervalOutputAdapter`1.Dequeue(Microsoft.ComplexEventProcessing.IntervalEvent{`0}@)">
			<summary>Dequeues events from the stream associated with this adapter.</summary>
			<returns>DequeueOperationResult.Success if the operation succeeded.DequeueOperationResult.Empty if the operation did not succeed and the adapter needs to wait with further Dequeue() calls. After this the adapter can be resumed at any moment by the runtime. </returns>
			<param name="eventInstance">Event that is dequeued.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedOutputAdapter`2">
			<summary>Represents the base class for a typed output adapter.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedOutputAdapter`2.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedOutputAdapter`2" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedOutputAdapter`2.ReleaseEvent(`0@)">
			<summary>Releases the memory occupied by an event.</summary>
			<param name="eventInstance">Event instance. </param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1">
			<summary>Base class for an input adapter that produces point events that have a payload structure.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1.CreateInsertEvent">
			<summary>Creates a point insert event.</summary>
			<returns>An instance of an edge event.</returns>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointInputAdapter`1.Enqueue(Microsoft.ComplexEventProcessing.PointEvent{`0}@)">
			<summary>Enqueues the specified event into the stream that is associated with this adapter.</summary>
			<returns>EnqueueOperationResult.Success if the operation succeeded.EnqueueOperationResult.Full if the operation did not succeed because the queue is full.</returns>
			<param name="eventInstance">Event instance.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.TypedPointOutputAdapter`1">
			<summary>Represents the base class for an output adapter that receives point events that have a payload structure.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointOutputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.TypedPointOutputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.TypedPointOutputAdapter`1.Dequeue(Microsoft.ComplexEventProcessing.PointEvent{`0}@)">
			<summary>Dequeues events from the stream associated with this adapter.</summary>
			<returns>DequeueOperationResult.Success if the operation succeeded.DequeueOperationResult.Empty if the operation did not succeed and the adapter needs to wait with further Dequeue calls. After this the adapter can be resumed at any moment by the runtime.</returns>
			<param name="eventInstance">Event that is dequeued.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1">
			<summary>Base class for a untyped input adapter.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedInputAdapter`1.ReleaseEvent(`0@)">
			<summary>Release the memory occupied by an event.</summary>
			<param name="eventInstance">Event instance.</param>
		</member>
		<member name="T:Microsoft.ComplexEventProcessing.Adapters.UntypedOutputAdapter`1">
			<summary>Base class for an untyped input adapter.</summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedOutputAdapter`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.ComplexEventProcessing.Adapters.UntypedOutputAdapter`1" /> class. </summary>
		</member>
		<member name="M:Microsoft.ComplexEventProcessing.Adapters.UntypedOutputAdapter`1.ReleaseEvent(`0@)">
			<summary>Releases the memory occupied by an event.</summary>
			<param name="eventInstance">Event instance </param>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\10.50.1426.04\Documentation\en\Readme.txt ===
========================================
Release Information 
Microsoft SQL Server 2008 R2 StreamInsight 1.0
========================================
This file contains late-breaking or other important information that supplements the product documentation. Read this file completely when installing this software. This file includes the following sections:

    * What's included in this release
    * Prerequisites
    * References
    * Post-Installation Steps
    * Known Issues 

-------------------------------
What's included in this release
-------------------------------
The Microsoft SQL Server 2008 R2 StreamInsight installation program installs the following on your machine: 
* The SDK to develop StreamInsight applications and adapters. 
* The StreamInsight Event Flow Debugger for debugging StreamInsight applications.
* The runtime libraries for StreamInsight.

-------------------------------
Prerequisites
-------------------------------
1. Install .NET Framework version 3.5 SP1. 
2. Uninstall all previous versions of Microsoft StreamInsight.

-------------------------------
References
-------------------------------
1. The Microsoft SQL Server 2008 R2 StreamInsight documentation provides detailed information about the product. The documentation is updated periodically. To view the latest verison online, use 

http://msdn.microsoft.com/en-us/library/dd631799(SQL.10).aspx. 

You can also download the latest documentation from the StreamInsight download site 

http://go.microsoft.com/fwlink/?LinkID=161910 

2. The Microsoft SQL Server 2008 R2 StreamInsight samples provide hands-on Visual Studio projects that illustrate the key concepts of Microsoft StreamInsight in runnigng code. You can download the samples from CodePlex at 

http://streaminsight.codeplex.com/

3. Refer to the StreamInsight blog for late-breaking information. The StreamInsight blog URL is  

http://blogs.msdn.com/streaminsight/

4. The StreamInsight MSDN portal contains further pointers to the forum and other documentation:

http://msdn.microsoft.com/en-us/sqlserver/ee476990.aspx

-------------------------------
Post-Installation Steps
-------------------------------
After successful installation, you need to perform the following steps in order to use the full functionality of the product:
* You need to install a new version of Microsoft SQL Server Compact. Please follow these steps to do so:
1. Please un-install all prior versions of Microsoft SQL Server Compact using Programs -> Add/Remove Programs
2. Please install the latest version of Microsoft SQL Server Compact. You can find the installation file of the required version in the redist folder in the installation directory of Microsoft StreamInsight (C:\Program Files\Microsoft StreamInsight\redist for most installations).


-------------------------------
Known Issues
-------------------------------
Please refer to the Microsoft StreamInsight blog for late-breaking known issues. 

1. On 64-bit systems, previous versions of Microsoft SQL Server Compact must be removed and both the x86 and the amd64 SQL Server Compact must be installed. See above for installation instructions.
  
2. The Event Flow Debugger is not supported on Windows XP and Windows Server 2003 (x86 and x64).

-------------------------------
Security Notes
-------------------------------

Please refer to the documentation or the Microsoft StreamInsight blog for further security-related information.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\tools\readme.txt ===
Add tools that need to be available for everyone in the build environment here.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\StreamInsight\CTP3\Documentation\StreamInsight Event Flow Debugger.doc ===
Microsoft Office Word 97-2003 Document MSWordDoc Word.Document.8Microsoft Final Introducing the StreamInsight Event Flow Debugger Title _PID_HLINKS Mtps.Key.AssetId Mtps.Key.ShortId Mtps.Key.ContentGuid Mtps.Key.Locale Mtps.Key.Version Mtps.SystemInfo.ContentType Mtps.SystemInfo.DisplayType Mtps.SystemInfo.TocTitle Mtps.Transform ContentTypeId 04463e1d-7bb6-499c-9450-58fd10a83507 cc707815 04463e1d-7bb6-499c-9450-58fd10a83507 en-us MSDN.10 mtpsPagePlanner HomePageType SQL Server White Paper Template 0x01010069FED0E6157F0241956DBC3BA02AD166Introducing the StreamInsight Event Flow Debugger StreamInsight CEP application debugging Ramkumar Krishnan Normal.dotm Roman Schindlauer Microsoft Office Word[Content_Types].xml _rels/.rels theme/theme/themeManager.xml theme/theme/theme1.xml w toc'v 3Vq%'#q :\TZaG IqbJ#x T[XF64 theme/theme/_rels/themeManager.xml.rels K(M&$R(.1 [Content_Types].xmlPK _rels/.relsPK theme/theme/themeManager.xmlPK theme/theme/theme1.xmlPK theme/theme/_rels/themeManager.xml.relsPK <?xml version="1.0" encoding="UTF-8" standalone="yes"?> <a:clrMap xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" bg1="lt1" tx1="dk1" bg2="lt2" tx2="dk2" accent1="accent1" accent2="accent2" accent3="accent3" accent4="accent4" accent5="accent5" accent6="accent6" hlink="hlink" folHlink="folHlink"/> yLG7HIDATx^ xM^fv DZ~^~ '{a|i +w/No|U Cxc!Q Q$ $/ 4p<`2 _>/1s QmTi+ CH :p $bX=p 7!1/N H8B9x cM~"3 wIBpf #7'/7 &{?I5 qJ$&z ix6gO` c#wY@ 4"X@<$ &zV*% D"jk[ P\bi7B ?<gv*z >C|Hw RSfMk! #+#+3=++ 3=gF  WuK8J JS`g5tYC k1KV'!") UAg W -a!a@@ 4Gvmt LFF:w (0q-2ww,-! $dG)3n RWuhqc 7wnyc lxx$/ oDXPx TV^RFn 6r3ss3` 2f>}3w BE|Uv FBxh<4Y\ #*bSd #*2 2* 2 ^_}'-[ #vC^k <:y7v 0H#b?r ";UE3 q B.Qx`XXp4 XN~~f^ ejm}Z FBtr#T }xhHB\|dxT >#`m= w\\hl\p, U7Fo\ hVt?bu DEx+A BXtlhtlXttHLtX eyyqU ~{~iU ^wq74G LCv!J)" #,F%i &UniZ. k\"8h 0u@Cc ;2vNj [Uhh' T6vLn uzt7&no0 uNV@L wydhs U7*:U Bd0-u QQcL>[ a=(2~V ||tU3Q,5sb YT2Q2R6 LzvD. $D-jE ynB/? s<N]5gPr,F$ zWMnl C^9@C ,>y5C F1oQu 5XQ%\ F`voj, SvhS\ <X:V-2- l9Dp' FBxgf \ZB)B g1ATi S}}GO $4B&) yL@-U^ B{+`s $Qz-; s~IvB s~IvB f5?\v .J1QXB ;S~^\ _<{=[ K^k5; xBL|lTxX bA ((("""22 ~_,EJr sb%^0 XrfVN LnffPHHpTTpDDX "@l0x ;(88$228<,8$47+3'#3; LvFfL 9eF60 KLlLLttLddLXDLHXLp wHXX| |`S|> y9pgeg C@No- 3(/   VBBBHh(h? \(8!@ M:v4) PMr3b 7//)) 2W[je{ .]*6< ,,#.* \(,!@ <b E) !YF~V`@ gfg3sl P}HC{an &B0mc+ r'mYyl ?;vlO9 Kdj?# 3 ;/;7' QpGEDF (Q""" &LMe7 3Zy1C I%;Z!3'?G ;O=3Cr4 %?<*"4,,(( S^znFj ~r33SS  W@``Db TZnnHt lzfVZz&Ly= pJ7<,<2<R #'/3= <qdWR`HLxB9?? q&3-=cj *_221. <l?SN ^hQ) !@ L8$_S ~&=+3 Zzf:<W =v4$4 dgg/] xF}*% g}pkse C;]qqq `{aYw BKtX| x"B/# )r \o !p!!p| qw^F@ u^S/$ PP@$u \%bFe}. uo1G[ -/;FJ %YC(S JUKG' [7~:tT >?l\} I'Tm8 n5v&I Sbgo^ /@5<bN[ It53q_ h_\ae errl3 &7TN` DPl7Q _x(q/ kx\3(=;#o r:fP96 m+N9  |5,abb >] eo qJ4 `K Sa~$! Gr)[R s6l6g /ktd? bT};t/ b*#'&bm m_9:8- m9q %KPP b#V-[>d |DI2t +'ZCn t b/, `$9!@ t`@ . ;=Wa] *ic ?O <u Cg  ge/, ,`dR a xH%3z ^X;7o <(u \ 'y{~j }s^~u UUd^K 2Wly. <&H?6 Vs-X5 C\36^? 6{}`- jGk{@j -:.4n(G ujYw#N OVfge 1R]z3 2322r 5Ln0w FC8jR \6Kx$ F;]Mi mm l/^ Ms1:g  uf&qU dDq@9 4vtCQ H&5NTGw yeL*>} vM`>j 1k1R* IIIINN> W>S4@ i{ayc0P CQ@4C XIrrr , [r_}P Q#=o{ CCslQ R<OtK 4#&MR< 6Ss#p O~|LL }Xl b+^ -X0W< tx@o6 w" bQ H;!D9y ;wNJJJrrr jpKHq9 +{_V6 Y>x0w ev|9;0 )^p$0/L ;n9xqi ?|`W:S) PA~_5~J3 L&5@L w3p/k /1dWB q+IpWY?"Vm 5Ln0w {$7;zd 7-MQE5 N@8e_ V\8W5 }`AW| _VeV2 s|y{/ p_-f"Q. W*Po* vh,0` hIR5R< (P[fmxQ &49hs pK 55u }xkMZ NeKL^Z #>4o- K, 5$B9 PTCJWo ns1;? tE_*t^z ud;$Sww DT:/J rT@@U9 >nN)" \Fx$z w-(%$ 5Ln0w L1DRX @IRz"@ yw0w! .=4B-[ ;Vo!VQ IBS,  o;&4e U"4n1 c0=>b A;lc^ A ,*K<0 D;'DRr8 TMDJH \tBT' q^NQq c+7l{sg xowH, ]!A+i .Ymax a(Lv( "`Qbb :|;*Y{A IIIINN>z pHFeD DQ@\d, +teJ}\JM^b[u\ }f$5( |fVAp |eTXB yv)n%0 5FQn,]k %leum s!{XA5 =mM^Xj IIIINN>zL ]QBlw } '\uc ;bMfP `T(hNT> .?yyBHty N?w7[ ?Kx{- pqO2i cngqK f)x;/ ( =8H~Y 4j@h" BQ2CC zQCP+<vu1- %L=BHY6 tj2_a Ax%fH (oqS7dT JxaYF pzQl-@ 5Ln0w *5ykx M{aEw l"6x]X( ;]*ZL T nPaU \fFFFn^^^n. ;'%%%99 Gl6m>9\T A:7*n;P *bsJ8 DrQZLM~( I0]@y ]1MzB *?cPl r7OS5 z)Q-| IIIINN>~B Q pZCQ5 gFC/{c k=WA2 ,n],{ E[YhI  _|!S@ CnTBJ BG,fJ B 55u 2322r ;vMOb nt:6WKg mG<SZ %I2nl t~`8p jH)l& }333a 2322r _;`~| -^X,,$ FnKH2"@ 7}5IF @7)U* :"c`*T  PR"@ `*kp Cg', 3G>95 .dand D 55u {eA=7_ RSq&i ?{'"Gi kT cG"- Y,h]q Z4lwq vP>"@ 2322r [9uHr [H("@ %wRB- R!D Z 5Ln0w LNN>} m7^uH _~iU? ~CbP<@ ?<\D> Tzzz@ YdB(| PID " O[DK{ .I('] {e`/,_ =ezpt O^\Y^ ~pRQ."@ ISB!v "iR4T L0@ECsIF"@ uW$4$ vrB3aB pF0|1Be *:L:a JyqY! `G8u9 r"*/, "<8*b1 SuiL- c.0U7 c+V*S S'a}G UraiQ S'Oc^Hw!;' anb|Lp rc2Ny />9s> l|,xs LN\\> (o057 " &v^M3 (777?? Qks:m S0&/\ %_575 vcoNXT &?A7  M dJeLY _222l` 6$d({^ Q"!(! |qjB8| NZZZ^} .*/8X e-BY$ CG46J DO,^zrBlw KN0-,4& u[t\PF -5|'(: cA%XB ,XxjT `8d1@ hTJ,X$ u)#PRR IdX=d C68<z SZF^H \(o@o 6-(D&e0 Le` & mfRA}V ysXXXWW r#Pid %Kbbb AddDR|tr\DZ F?(DABV- }d Xax rNleES :?1xE Zy0,M -:9<* bYrJL !!1Lro 3>i~\D _~yjj |$8#" mlU[  Ee #: &h`Lt GKb{m 45Lovf Us~;Z jS4'E E$T%u g n]' GnZ1H e20'x rq sq Kg@F6 MFSWw =uS9\ ]|E{\GNm  <d*# HT2/< GgCXk zK=0tuu _O5n?# B'38`- p{@dS a@ H| [J *EFi G_w}Gi X_Oljr9 L&?z! !!RXL %t|@w 8%%%4 bqxx8 B($**2).&1& /:p:] ZBY), %Kd&# E!z5JEUyiGG IDAT-j |`y0x ?3mfZrJ =ZX^/ =8t*@ a9ME4 wtZ]QQQ~^~W{ @j6Fu 4C PY 5`vR8\ ^zM&sYi @F_x; cFQ=DC 112haJTBx $j es 49Ygr Te][Gc PQCiaI Am1*@ Uqq1H toGyyaA^ ?r\ms -^6wVi >svG~ gk,[>~ iii0@ qi,?a mk.>r4# ;|,#W x]JbzT|txD jsq~~ &xBRgD eBNiF cbeARFwS ,2:>:HF@ (...:: o^5sA Z[^g! lMh9u '!j$H S@#Phl #BD|" 1Xl"n s8*>y ^s*/[ ~8$[;  >g/M sUEas _8'Z^f d B>'59Q g}*su2G >mw`  hw9;2 hf8]n; FgggPP xQCE` o={w? a566644 h2 00 ,(-RYz 4vv[m} 8M$&b LzHdXp  (~Fj $,61u bx'.) hbzwM .]ciE p9,Jy jMeC3X '{*@3 g&EAD<Y KGGolfsGk ?T,o: 5fc6U H%!qI {+#h]t6 tZ\.p ^5{Qu  D2s~Tx It47p% ^Mqtq 7'\<o :eGCq /".ifJ*Y[ bo-W> :-56d u 37ILP:E ;_]=$ i4"1&< \NwMu ReA,2 huU4t R&j6{ b6*;. V%W$&D ~wkFEl c mmm I@'uVli *;utKa Xz|a= ^oii) PiDdT 5fZdp %4h`LXXh ''%E] &SBAq#a^  4!)Zy MW]%fR -PYMiYi @P45n ,GkEyM U]:g\ f:_bl K!o-h @@!S\ Df\Lh *5MmZ0r |0y]6 retZ|z E!Prs;5Dv{G >Zwdo g*KJkY< )8$!\h e:t{v qGG{NN -_ZZ( OBnjB /!'9E A_Osk $Jdz-&? i5yYBA p.+5E k}),sy  ;G|< `Yk0CB wvTUjj- w?)wKd e3rDr o^o0uv h$td_ PcggG< |V2+# %II=G j)t.05 Z;{*u^ 8-'>oN tIfaAbZZ TfbJ^~ nZqcQ Y,^YV "A433shNB d"i8x =v"l, uul>(7 4(-5m{j4 !a!yuG[ 9iD0$ rEHh$ 8tee=* =zuWc Q,=Q" Fs.#r ookQ: mM]Fec bAKs}G %@I0uu jiVjz 9|Fm]G {+kz- 1ArRq ;L%38 =RR%  xC33193[ iFV:X -csY, <#+gF* FYbn  .f1"6 ^oDIt KJ3<v bQzjbj )N/Lw{ FNLbn ]euw< \lk5a4  \2'-? c_cxf2 ^GO$Be [\^ws Y^:{v 'K%BN\vNI '@qZZz WX0/M  I,]~ ONHdn Dz{z[ tMw_C %`3T7 B~gc} !o1Jx CH&D{ =yvbV yl:Nc 5kfiky -Io9Zs iVYqL c}7)U Y4?OF fn~nQ ,I8!9 izqqky'7.U cmM]*w L^da\ lI$&/!7# 'S=.Ge D/>Xkt9 b7;G;' J=)']  8RIA~bJ bJdIsgg lYJR~V tIb|A^ ??/5N OKILK >3-7% qGG{NN B_]S_^[s 1Q?@m 1wVvI pXC:H ~Qnl+ '5U4Vh ^YTHG N}O{P LR^PlH ,15)! xwhVIbRzR LfF*Wm tN0B) f%G|^ XdZbF^$D BARB| /_<?+>^V0 ?oP[JJ AAe`# P[SGe YcPu~ h+/oi x1$\s sR_/7* /+bb2 Pp23kf: 5X._h /;%l2V U'.5e k}h7No tirr2T? Gz4b0 w+4z]yY P_cys MgwYy} XX1%d R0+Yau 5h$A*f /qFqZ xd nJi 9?]spc A:chFB vk|~O` Ia"%  }s1mvn< +&?(g I&l / $Gn(f$IX 7+?9!! Eeg09 =@F[+, -VwxqQB^v ._hCy {SSSEE }X+$0 `8bqz ff%K~~ Z?yjS8 |^_AQ! r7#Y@ 0bSU| #=eMG6 dX]6' $YJzA^ JriQM ,)BQlGY K$X/$p ;vL1  OJJJFX @yN!0^ /*7@!^~ FO`HX qY|.k4 AgAN>8 =Ap;r eKcc#p `Ue{` 8%/>$ HL!!Gm Cc 0< p_ _<t[$L X-xPo danfVbJ +/KO/ '._4W* W`'xN Z}=zW v1P_* O]dn7 xaKNv e-o3UwY /S}sPy coR:@+ *aKSr t+*kz# qGG{NN ouzM67x  /;3# ARRRNvv^^nvv6 bqZZjVVVFzzrr 0vfna \VBZB eHR6N $<.'^* Y@OHIJ LOOOKK />fxu s,DUl' [tdq"# jop)$ >ss8n7i -J_2+ C<X'$ a #!9 @lqI,/! og #!95 ngck} uIDAT* o'P6>_ |>S1: m&Ucc |Fkb&S] v>vf|Tb xm\xDLh ZB0 $0 ,,(N} )+Z[j nuyiQ O?:v2 2Fxa2 ,\vEsiEq >+<"j #IIIV L}X'$ OcZf`E ?Th`SudUk W_{w-X 322^} QQQ#" )mmm$ Cb0J3h4:0 3A#km"Z w'yq#.@ i6[ZZZuz= _]Kiqu -fcEAN}+e fCYAV I]VYc" LFUE~ ;8qPk hnTjer9 R^Rpr s{vVZD fksijJ ^o0[, W,_~&# )'23O +nn.m 8979/ ((/'+} &S0n\eiuS 37hee ?,""\* yU|]}=Ok :ABDpX >TsvkaY "(",vB lo[Tu c',!aa PP@tp ,080$*,.) OhdXh jjn\0 [XuMm A#C*b Z Sx{y .uSHf? DH51i+O<+ f#,)5kj pK#p. 2/'[( R/oyA Z%2[v }-ki[Xx  5jUaMEU^zsmMsu JK[nu 4}\dP a^=|:L VuMz~ ?^Pm4 e*S`pB E]u!-g =$)&h` c cG\< oX4M* FchCo f%:;<Bi& O?eff aStj!: ]{>xo dMm}^ai f6[ZZZuz= zm 5$ [+Sw| e FwF -<cSnN^c C~744 &eiay[k =(0 77'!!!00 ?^HNM r4''m 5_~YX :21.f :q!)i .YYWSs 3h+=,f ;,*&<*f ha;L<1 MuuZC }0jq` H-*9udwE ,(((***++mjjP JfV)EC( KP3bbb aKB?? ?~<|m er?_o/ 0s*><` =z4'; #BCw< v0tA/ V|P2O @FU&cb Zkhi1 noM`N]P^ P~]2Y1. ?1Fd5([Z% Wf%:, (*/-I 4iARpD |"g^>)` U48|| }}}BB ;l6_^F /$&&R6 @Sb\dPlD N77Nz -,,'#V $&<(:* 4~\l|| %@ZUBz gj|hhh CFvNc \eEFF 5..6<< 6mZLL >Z[Za~vKs UmH)l W>TD| Ye]+l Y{&hL %:, >* bWw0E $//oBb" ss`'Rp zuAAA A/#|2 k:y0G v{CUiJjz - 26@ gcccmm-8 >a[Yr YYYYff&8 %<^UU mx*-- _!DH/ JII `A599 +Hujj* . &$+ y.ZntK#  kkUf_ 84"&. 4<2:*" rEDTLLt ;f1sJ] WhICS pEv3? -,I;[X_o W9\8a< E5JO$ 'X7O< N9Wp9 LoWvH X$RNM vBn:}RX 4OHP= ,4Z=h F{F?@ HbI5@] B@W4TU iaK2# `{-,] -Sy3-- mkZ)%odVMf 4wYC0> mG*)ts B>\P: 9CY7Nn qvxAH!" ~k/-.= tEXtSoftware Microsoft Office IDATx ZFhh( {{{z0hh }[[[XXX 11 5&N0? 0(Yb5 Pa)B( e'_ji 1HT$H (FHzS J0%T0T4 GNB^v) 'B4Iy ,LJ"6 Gtz!)9 ~X?{2 MCPj! {<bpd O+Ar^ .@iOR ()FLZ."3 (aOL> {hDu3 5GTk; i]:-q S6}wc I!B9<\ x'V4I7 /UI%! IBv}Y VB 'eO u4Beu$ FT!EQ wIY4b )|;w< 3f:6Y D1d)) yz`>syQ IDATx^ 8fvQK $=,+0 }eL {=V www-sf -uj-U* /ER"4\v d>Xtb ++Vu\oO $~cD&I )C2ee Xka(SY CYs#= 1u:tyv V[{:L N,J]& IGTtt Kx=4I D+kSh $llx.@ @(%Q<#l B[ACb 2Dm@M- hs#[g t>i]l #*:2:*2 84^u\ 9g.]b y;g:F3 @Lya= z<<wJ_* ]/(:t GDXDxhDD8 &7Dk% Dd9hi 8 !t! Owxf+ d}dE$ Bz;yV 4Dl&@D +{E2E J%!<* A8GHX(p `@OHfeHd| eH3qV$ ?g*qsO lSzx2<t J@2Hggx /CmqZ4q 9I,oIy wo/w// CFz2] n^>ni `V7:R ?mr]r iBIZ3W{ `H5p)S~ ?"!Jh 8Od<< {Wrd1$ l`/dR{^g$ Nn7oO BmKw\ I5X)r l\r0p 6]yD] /nA?x ~R@&- eAIhz8 gVONH WPVIe uCJC. N#M:x -:2<<"] E#ZkW +Ys6lK !;x1{ kd,W#C nX"O6 #+h{F5]C ^Wqpc o7b\} 74<,4," bulm? B1:f  C%],F :n$65 o[,[zVZ QsJ.J tY./h> 4&.XT YmFH2 Cwd>9 L9kJe V>vdI fN` ^w 7AcfZd Bi(2zV xc`Y)B _|{{: #N8ycC %N$ y` b1s,R=L TV` !" iJJN4 Ik9VM5eP fuTM2 ?G{[;(X ^g tB [a1H9 yk,;S >S;) q wB[]6 YSDt  IH<$pI T@QlV MI6fANd a&!JeT+ <U)#a  DJ%xp 3vDAh A[)&[w 'e D9L 5q<zsA  !$6N T-,2% HX^-dY e3R|U"S ,RcZ,R ]),.E ;(D(! zaEc* KBc@5f #7^w) |b%f{p Xo`S= gH"mZ `5U$ - +t[}]) XAU!D g rC^ VXd#,k =u*3WO9_6 mHvAx y3"2"22 bblk7m Sb\a  'QqJ?zF *?&*2:* )_>O7 rF_&e mm;tl Y?au= <<]= /o6 .<9s/ !`"!d/,X {a}6q m[57C .Q=MZ <UOBc wLLxLtx4 m0DKe 9rgh2 qJ'zF ~CPb8 pGEGE e28L7l ~20KV8 9o4-Fg i9txc Ew('K +u=:Y Yvy(W /c hB 5Kf8+ $",":2 -&22$" W}DD< ()K,w za?{L8" \isvn JvRZa g*o/o #;.xz |3c"a%T 'IScz T+L)" byruh^ $!$~a GX|G*7 J6Z|sukm< 8!a#G ={<<<n >4Xmu -H,`5k +/iL- Jg-Y[ H8nIz CCCYhx Fp;xI 5?J=k #(((O ^;0DK  LcyS  $FhR D///p }!Yo!d _$o",8 f q)Te$ Db S' H5+iS =6xbR n{.j? sl<^9+f` pD?dF cy~b~C%l *SBcW M01s:1 xBswb 9uu_XDH Os'bd H@\@u R o`: hkXpr l>Y+t wuvVV& r6N!I/ qzy+\ ^LcCW (I,.2 yxxxzz 8w>c   |v$!3 7G1xH  PzSct: +g[\  81G8% u3*=RaR M1N|x| >x=Oe ^Wfo*6 .n;}f| 3KGpOS K;,y"! M$[K+ SszqBB R o L" X~|9G \ZLLLTT -7gm%w dA 0} C_bT1k W(;a)+ `%yQ` Nu#x! @K9.=A ???{N d2/Ci 0|`GD w&?#! m B0: G4x@{ D7h7 s} +Ng(D ypujq vZrV>  *1l? l|:zX {d*&P z#@g$ [EbFg HIZv3t Ll&\= d|[yrq W9G,~ p{s|j 9>o8;C[s )#1))k &ASm\ *4Vz:+ m9:ex VkA6L} e9/.vG m/.Qg& C1<Ct\ $:]]d "1qp% >N?xO Km!t@,, ` oBJ<6 p+"6. 'w-C? i\tl% p.qP* >grx4 [sM{7 i/9<<<S &H .h 2!T]^= <(58_A~ *C\ch 8Wdm6 &*;%! >mLe, 2)o]~> n@^~e !Y83I 5jX[# eY =4 8V+[$ @X~~~^^^qqq$ io0rHG zW =' =~<Q } S tNt+:&/'B Hao"9 YB03: Iir"[k Qv7~pujq CK]?U[q HF{(z 36NU{z TM%j2 /zju^w 0LbXw &6xM_b %f^Xt YRr|j y+9\ir ?jw:B 7d<=$ ]qNtv1 ]xw:* i)Kr*3" Dzh^l .;:V[K JfL0hU $q&\A4 T#j3$q db :b]%rC !9lrV nnnb~ ,mVP: d#V;]Zj T$HC. AfU?B }ObVI /_bb> .yl3/,n 2\-S*?D %Ocf" w=cGv b#4Y?xe ~)Kzwz NTBuU 2,zQc z7-"? H-;nTm*Eb wQ!f] bJ#EK uXU{H T.^{p 5uw]kr r4%g - 5/? B, W\\\bb" p@-;E Rq"N1) rZ|Hj &F@u,, "N B, K#`%KRg kkkX?RJ Fi'0k |PKJJ"? Fll\LLL|BB `@-;A -M.Qr M(M{qb UJbXA_ NEW;a j)%6`k F>F @ $$f^X D%?(W 8sh^IY ]xw:* i)Kr*3" 8T&+[ Vt%ix =$ dzCEA c$%cau fC << +...11 Fll\LLL|BBB|< Cn'Qv ^z$'? fCfU?B D}$P! dFv2F r/,*> !?#.hu !g6;] 9dEWp IJ>S| '.yV& yx5.J L~}iJO CGHRi z!|vP4w$/? HN~(Ns T+Sdl PU lj D@T p "5{(xaA 6m"""R j.uF=A@ Y3gN\ @zNZ[ 3^/RG JCSI~ PG uf |:bzs @F! w QbX(M W**hu Ly8,.+ _ B2rg 3{n]R t'`*o !&P-T! Bn^&: BE{M^8x Uih~sO SmG ?aH fP4:5 Ht\K&F yYy,, VIdFt,  C}%SX 5spt42 W\\\bbbRR \P ft B@.B8 /ek[r . Ap] QKPU} p???// iS777 tz>=jb M+::: FHOd9 f$L"/[|@ UyB ='|_ +iWwN iNtxde Os%S\ 0_8W"):{ uA++k XYU]v a{H~7 KAAAD~ *(Q'J! o*!qS +k#Kr u">n{ liO,? 85_{k 6M6pK nnfQUTR d#66.&& 7, `X o#gLE$ sH}25] _qK^N QwHm= 3QwH]= J1G*r |N"-< #3/Ta PIfQWJ PIfQW |HMA) QwH]=Y LYWW7 9r$$$ ZJ3:< ai$;% &)/1| ^wwwOO :GN+[ ILL$_F :DgnH sH}25] _qK^J cvQ&: oyTcj} 2sphNe /t+HM d^J%Y <,t:oBi a$&[gT Wtpb>T nw9w). bE&FD QwH]=Y %`oiv #/KM) Y_.ma 2222** yILLL p???// 5166.&&& |gK1w _qK^T cW^~;| }[}j" {GujHJ8v y['+"- Om[6a E{*cH\  a!I^C ]aHrx Kox=[t UkKy( rQOUr 0}QnX sRRs; /I4TF 83hn@ dy Y2 :;=\x T|+reD'EvTmI jD !!a FJFGG r6IyMu AQ=UCB &y)-x 7Eu#`` W'5);; QLJ&2- r#>rU fD77nj EeF&< h.w!5E Wp~_#Z) euti?q db:Qk l7o2/ 8NI21 4daH| %?VN} ANbe" 1ZpQYH q8>>>999---=== _MMM#% ,(6-$ G 111  ` {.Gtm /&14r _x)GyMur Ycvx4 R6#uI {%.;9jol ^IyV2 }[}j" {GujHJ8v aZu?8x )9Ag9Xt %Rm0L -%,(5R 14iYe 3Kn - fjs#r DmCtl _GvlL )YAw$ WJcq\ g$4.k 83hn@ 3/}IW n>dyYZ _Lbhd tOt^q0) K@P 4 v@~{9 3vFUQ jHh]h 67< AF+% +V%rw /l7cw qGvFUQ v[T:/ "u$ZQ &tJYE h8)6e r7,>' cW^~;| 6,:=7- "gbG6 z7d&$N 4!HXH 7lyIa S(C"X8 8NI21 YljP! ?bA/q tI+"? FNJjn %Tpg|\ 5'TJ9 ANbe" WkBhcE u"VyN WWrhIR ?NOK{ G 111  ` HG*:nF q]h6; r6IyMu AQ=UCB n9CQW qGvFUQ YO'CuB g/9KeI cW^~;| {+gq}$ toS7< 0 :QiD r#>rU cwZjFts =})"Q4 jo)aA  a!I^C UkKy( 8NI21 LY4?l 8NI21 /g(gEj 83hn@ ;-vD@81 CQ-%P r>0A}Q, _Lbhd q>>>K> O 111  ` WtGte, (+=]z C]xW} LWW+Z 0 :QiD y['+"- %Rm0L  a!I^C h.w!5E h.2'SJ` 4daH| IDAT0m WkBhcE u"VyN WWrhIR ir,Ub ?NOK{ r6IyMu AQ=UCB n9CQW qGvFUQ R6#uI )BUD= cW^~;| r#>rU j<F+  cwZjFts =})"Q4 jo)aA  a!I^C _GvlL 8NI21 LY4?l 8NI21 WJcq\ :;=\x QJ0N{G2U zsC[/s e3N{G2U lWY_~ @bbb@@ 8yQdGB QUTkUe +V%rw /l7cw qGvFUQ ezpQXt <M:=u |O>?uD A^qyx NjRvv {V3zPm` mXtznZ r#>rU y['+"- 5$Q,2^chJ Bzn8_ O<bxL S(n[X `''TJ9 _5ngf rB//~ DM~px4 ANbe" n>dyYZ r>0A}Q, _Lbhd &i{8q eAAA>wXXX @-'Pd+B -!@2A q]h6; r6IyMu AQ=UCB 9)8TF /&14rF /q5gk {%.;9jol ^IyVr }[}j" {GujHJ8v ~9q/5 8+>&- N7<3G ]>O&? %V?'%5 /I4TF ?6]Cn ANbe" UN&:}@? 99ttJ J<LLLLMMI <9  ` ((((,,$_ @M!P! I^'qXd" BDHaQ n"Dy0 "frrr yyy3f HKzp7 P SF~`lbR ZS0#X nUCvp #TEeU Vc.=* X@U/'zg xUaXEvL Fvx<y 9 42K 4l;:(; eQ[iQ ~.f?j inkS\{ 6OiG" (,U&:{7A*Hm 7N@:VA Vc.=z#] !ZsKT @_.{# q#;<>; iq8<> !=_Q) Ckn=t !?*cTa Pfs@~ N 11QOO XXXj3 d9_=] xzz.Y hee:cT_- yAAA^^ zTQ{h iV:Q AP  C)?TI Y!t.D=7 jJ/40 m;XT]p? ,9;.{# jAS8V 9;^Dn x|; P K\%+\ M\h\U( 5y+@~ P 5}`k s ol  T ,JKxi% Kt0-x: 5+_~H }({S$ o_>|~ _ilL^) j5"@2 U$Y][ n9kH;. hqaZ,e (Y~hLn@~ ,K[ 2 ;D#H& Q9 02 wFx!B< Z(X#h  !l5>0A l)+FH ?sv8* oAHv!H '6!W< 3K*oZo U5OOo KVnXg Jt1DX @0C:O-H1 V_v1H o^|qY C_Kh_ ._sKH 'NYal zG7uR >:R_%i Nj0n4QM Tmb=Mu &*})C j"Le^ :R):6 @R&eF v&JR/ @A19% Vi,B6 _22eE 1OU]ghW I1!Za} g>Bt. Ee**K "QVS3h i15t:] 9r5!j" /N=l{ \g&Jc !oltw IDATx^  "VB)~h WQYSY Km}LBY `&-ah VyJB7 4mDm3 2IAJa[ rSwZl Oc!}S ?dXJl >~axn xhq0-%J@ .Xu#y *g~Yc D7^(-] g0ZB{ GtTLt$ ^vsBx 0k<+X twFBd  dFZ?<i ^.#!l wOOOf ZOA_D @h#&J SnbCD b&'4"F7 y;g:F3 n8dtz- d45a  *O<Zw! j%R2n }iYsTs X/_4< %m_uNbe tX5|O CGgQw xyp`D *fP"0 GDXxXHxxhXxHx &_~R=yTf (|"m. ^Y:hHX C<\XT CGx$p yWscJ7 *kOH9 >-DE[ { y$i# sC#1` X|[<V? tywd- <yGf4k 3Uj8i5gc ad{$Y %SiSK? 40SG) H[Fe  I$$QP mG1|H AcQ6[xL 0.{?x ?fxTR ~?_k[ l"a4\ Y/wzsL $nTM' FG7cV DM;tT!{ Hj$yHk& ITlK> %Sd@( DuiYg tzx6L kd,W#C 3yz\ZV @Q`[t8 L2{q= 1ru_B 3MoT# 8}=]!!R C@7mW ljIhH Ox3C}r $Wam? o-kvx /N[zJ -P0Ws !caww Dp%*8 $%?4qf O5,q# 3Vy7z +gSAh cIBH! w+Y|:51 NYXzYv 5KQAju %1XKd ,IXeR qz@d1 UmPt8 XfL-@N Rxj\*  }')` ;:dKL k2(,B zI5){ 5m$62y <V/ > y0(VE `22c: -!Q(j Pr-.@ @dEQ{n k !2n C} cWt xrU1z t4<Uc4 T`]=]K .gP9, ~/l F y bi[ 8k&M( C/\&1 *kFTNO u7]N( <+7yzg kT.Z; e~}g{ 5~8g6 ?mu9  *~1a(D xxxx{{ fDdDdd$ ,wwsO Sb\a  DEFGE 8r;;; 6_lk5t[ }vsAo #g!i{| +c0U~D #kFo' ^y=Sg ka}<vn& tiJ<b 7[`zO' )}:'Y^ `&zx$L EGED<: &Z[|_ Jv{hh67[ c7nZm (V ?\ dy_X9 y[>-|qO |p!8] d`b0m# Yvy(W iE&L* i}[4k wn\|| w7w[T %^/a) wf1 " 2Q@bC llGt !v[ m@)72l K&wi&[| :|Ku$n, rRBqB ^yIc: 7[x:J>8 ]-F2)A Z@"dG fCNX? aOt>7 [7vkK x!1r88 Z:^M_ n|M*> K~~~>>> /e t~: |D,:|D+ , 2)vB: ]?0>D  7/***A nWZ G i,oj: #kV4i f q)T Db S' DRtj_ jbOt`"n H?Xp92 48=0s AWvwz-]" oeLt| o*IR7P(" O/'{E *SBcW xBswb ejw7| T6IJ?d |r6~B 8u+a9 ~xG_OC 0Lpgy |oynY aRxk:w| vjY8g m@g0$' IydTx _!b(D  ID?E^/U ~75Qd& a&!i1 B?XXu< PlE(b ]7fw/8{ CK^"Fe #\J*CL /58wx RE=85 @zrv# /K@t  LE[,?? 3KGpOS dki%axvm bB:]" z_%`0 Mr V\c _QL<" []`f9 2lA,v rX:9Ix d-^FH, L?dry DNN'f Hgd ) Sd*;6k aGB`& 7   k /Q^1+ zzz"F 1ND E  H(\,V :%5~[ 6O@W~h [~HO$ +^ghD *EI ` %SFI/7ZKyWZ gzA^/D M7?\]V ?r?d/ l|[uri B, `Y d/N7T ..2-$ kfn;`~ rTjXL bN_|t qvq-X y/.vG <62d[ oWs4^ =X*mG,M =Nl=h O@W~h 3I{h} XiXtx ,<.88nA bq:C]A~ yweg/ U.+Wg i\rl% ca,,NhhE |v->VD OOOO) 98dq_ &:;e! ^tHq*I U+`,, <yKW) #-lFt a*BqjtNy XX|l: D=Wa2g Y#&6&: ?EEG% 6mZ+4 lYV~I [%@"d AuJJ.|Zb_ \<wzq *hI{o ^h,=% %`^X|F9F Vex,, L\p:TE Rq{,a Tw/>5 1'O<  OZgG+ [4wpJf ~F-!Y pS(LSo Y;<|iL n.Y|F 6Es8e)C d*Ey. ak8nm +IoSb3 =@n=> .444   ?222&& b.i5&@K Z0$T~ ?GD>} .j\qb )XbUo w3cGq C||i< ]e2$? CIcP`I yL& F p@NiL H-<tP%N w8~fi &d~Oa o4,dN uD_.? 2CT \ J?h#""2<<<*:: R;9s@ (J$Q! O ?p! S lFt \<wzq O&H4G Wcyuh ~27'11 nNw'W FdA/d $^3Qsr! |rf=qnR )CPe/ 3E![X uHopG) vC 444   ?222&& i?=@KA /k1%) xW.oX 7a{Vlz{ \~PRn,,> =__h{ 9"o-i .<,$v zgH~H lH^, ` ]o+Q1 2uaP~h 9@m `M @@P l GEGGGE E@R p "7{hxaA 7Hw@z$ 1jO,V 9Y3gN ###cb8 A?h#""2<<<*:::* n]/// r88pA m=wO( "y_:: |x?XIg=3g!a0k lEiP[1 \\=kW "`/Jc BzW:T *!uvq!mph h~:hO 9*&:E 3YJzC $I@[[ hH+6kG f$:7  G$:.3[#` PG%f" bL `C/u6 } ycB @`SbPG =zPQ) !ABYV/ V, `E mGFDPKI 04m p Z2$0y g/Q~= }UHH' a3fK;} b+O/[i b/?~C &`9/,A <=2&ix P vwU S \$:} [7$$$ @r# i J`g/^ 374': WJFNV bfa%' *UX-Z+ 6m"-AH 5+i*r 2e&yS SzEfg ku?00p <>yh? 5rTML* lFtZF K'W t yliqrr Ln4^&? L **v BXki=~6 7h!uA{BBBF E^;e< A^U,; 5~6tk! ZH/Im CD_,C $,:&6 5S:&c er?%C !o.)8DauHf C`Iq , ',a ^ 0//ia %cnZZ 9.=[%0v` ;e3~i OE^U> M:JcU5 K{O]t JK~PJz s{yxz:;;GGG ///__ 7ZzsR iSygw '/?G| [x$DH BBB""" w]~qi L9H;i +RrrY WOaF$ {Ho;Yz /ofVT f //f- l$<XpH 0//ia ARD+; ;InK, PS"@X OE^U> @HK(, d4P/sg 7#~=B. *U*///__ R"Lv@|$ CB#in m \U4V: &mg{.] y#u[+ 5R8+G L9H;i ZH/Im Sa!J*B k#}B3 G-?%C%PK* S.-G) -J;M*DyuH m=\:4? (M59q ?ssjAq !y .O -ZHt5 Gx-.\ F+dtHP 6i->b ?jQQZ ~y<0P ;$"K*  -[6?? {yreJ+3 qJ/.Oy0 DWsyi <jWz( e/jljR gq<jCO DWsyi A\pzH! &C_m2 %k~Sg M ?j?;i 1/Tk1 GT}`@ n?V,8 G5kl{i @M<Fcm+ Lt<:# K`I5, d\f'F '*F 00 J<*rX @}5*U q} ~6n ;|^JVl e/jljR YpbHx m=\:4? uMB[9 HBi%q\(4 gnN-^N !y .O Lt<:# 2UdvS GzqF7o %s'4O m9,zA| >/%+6 +(gVc+s/ G8@FL^ 3^.g' BzjT..1T 'm'Nt JbOlN *qGH& TM)qY 5K&y"7 865)i sGV.. Q| xgw S{w`sy |-T@/ uMB[9 SE@)# b$T8e bp}pA^ HscPY !SEf7 i5^s/ }).OI 'm'Nt G/:::&& zXj-^z@x Xz=Fa `=:'ia tH@so Bu@*H[ 8-ZHt5 oKHn$ <jWz( +(gVc+s/ USJ\V 7|@S<y;u |-T@/ :GaIs TC2V6 %k~Sg sDT}`@ n?V,8 G5kl{i em,.j9 18X06x3$ -ZHt5 RZ*vK ZV-\}H !e:e/$@ <jWz( S{w`sy =IDAT |-T@/ sP_oW; YpbHx aRR,8 $M8Y< .{)U< X(5a_5Q 18X06x3$ +8DEi aGB]n H(z#Zs <jWz( e/jljR utiAF  -*>T$ Q1Am;w #(GV8( #4VCp <t)b? RZ*vK #X)K2 {U&:J K`I5, d\f'F wh[wD {yreJ >/%+6 `bqxI I!^A9 ,rDFFn /Z4<44 ti+=& NXXXppp :5+G\ b$T8e Yo+S0 G5kl{i 18X06x3$ 4V~edG i5^s/ }).OI 2a5F8v kP#"6 >H ""b  jOtm+t +0-_f E\p:B DFv:E /W.ov@[$@ -{vMu dw{hL H2z\) c1^%R V&uLlO ]$7F=x /P 9FK XK+0;[ J@$A| SwJ=WV B%T~(<N EJ<^"2 wkMl$@ [{g6Q Fxy,h b%N^< ,b)>*wp ._W0[H ;[LY# K;uzo N """   00 QX>|Op y >zCp P =_x: 36Q$v ki5oM RF~8x8 Kesze }]84.o OfHDV ?~=/b 8}4E[ %*bwL ]U8(9m 3V`\8 bF}R:" j82s`V_ ve'4} 8yE.o 2C$7] @F' QV ?<x?\97 >N@wn {#GN_ ^W >K <NLtLL aVHRQ C{ibD 9sPPP 5d?$@ YlP~d pappp {DGGGEE $FW)T >w }gt=1] D_-y  Z3yB' f4Bcl1?w +Vt)? L>4Nka "3d-,%B <!T ) %@.DF PoVmz @Z!pr ^pZ$@ Lt%=4 I:sZ  N*DC > _]7]L$ 3rwOt w51wVE ODhbS ~\O7< {H~zN O?.?X?|J 6x*>" }o11Pv|  ;Lyv0 )f(x6h *?ozg r'i.nC Mdk>+ ~b1Ht E)Vd- \IX(e) [{s3B ,8?4SKo= HKyFY G]|t8 Oy'e{ V5I;M 4o#MHj _DI$M h5MJ;R" B*q2.k6_ ay@C:d) tEXtSoftware Microsoft Office GIDATx S~LWr baaAnL 0??/7 DLls0 bb~O$ #&b"&bb tEXtSoftware Microsoft Office IDATx aIJJJJJJJJJ \2,IIIIIIIIII %))))))))) $%%%%%%%%% XXX`ggG _n ))))))))) %))))))) $%%%%%%%% *$y$> &y=v4 %)))))))) %)))))))) KRRRRRRRRR nTpjbo %)))))))) 2,IIIIIIIII 2,IIIIIIIII (,)k) hHz,( ^pXJ) lxRRRRRRRRR j,BQD ZBR`-! :KRRRRRRRRR? %)))))))) %)))))))) [ATNi- KRRRRRRRRR aIJJJJJJJJ ,]-V\*## -#68c aIJJJJJJJJ $%%%%%%%% AJJJJJJJ ))))))))) RRRRRRRRRR/P2, $%%%%%%%%% KRRRRRRRRRR aIJJJJJJJJJ \2,IIIIIIIIII %))))))))) aaarcHIIIIIIIII 5NNN\ [[[\\\ 8::2z OGGGGn 8q";w KRRu# KRRu' }rCHI -"99Yn ) *''G= 0RR?C -[6W6v ?ie{% O75<eJ $+Oco \tG|h $3/GX ~saI4P SZ9>q c+jGz )\|GL Q#HKtg rClr@ b|2DX U6n"0 Xk+=> X2a$_6 rlw-bH t>+w. a}'3z o3m?l No<C\ -_~@K r&uoF_ ZsS=r  Fhyq q?CG/a RNk-F]l76 ,]UO? 2rCY3k4 Xv1.v T0XAd^ n=SQ7 _;,)g2x `Qwb/ QcOkx 'WM#~ NK\}q j4vUV O9CH<V9b R^eX*T LzduE ZxRXR&7 q9X]0c ixJX: f?]Hz etMYd )xJ-%0 zvEm<= xz|`<JYNC U/2,)EEY 5-j\@[X j-xjKS #P/2, BZuV<e +TPr5EH WYD6I <%_Vx 6}*O" G$bpD S&bPNE :qCpJ4 uQ3KT ZF.1a |ztTx w0}\o Yzp.3< !OA~? aIeB]# #q8yy 'L9y@ ;\q.* bblYp Jpqra E?-g,. w*SI?Y R ;g9 L6N%<3 u\.Z1 #&a7p9= E,b.c as>k8 cvp*$M <Q$.z s`2vA O">qb qO.!0> QSgL\ :'jP` Zxz x (Y<gF. zr^9-V <=r-< O-<y%? p!8RsD Ox%K5z KRRu# KRRu' \2,II N2,II KRRu' F2,II KRRu# KRRu' \2,II N2,II KRRu' F2,II KRRu# 4w))) QxRjSrr R=THH #55Un ) :J.%% gC(5KJJ \f.\- \"r9f +DA*{i ^hX:j RLem~ Poy*Q RU}*y E$<|^ }K|nZ[ G%Gpxz dfffff p$P*{ Im"3/ c9(*b ?Sn1V |Cff0 ~X_XB bO%O~9 X^\M} K2n}MFz0 .NzFstF JLN[2k@ ~E|jL c]juY i=d;V }J|I6; cDCz/ zZCY{ fW-Y0 shE|J -Y:q( ?@hV1)% m8Cg, ^( D$  ukh_w 'rKxD Iu5jk e'.2[] "!zr8 P[{2Gc k<Ts: R9NdgO %lq*$<_ {8ZLE \l.LA qea{u 3K%&<S c"|.2ZW %'.1K] OFCs( Hi>Dt UN;E` e\s=z .3CC[5 EpA$9 '/K,x L#jhL`_ 8Eea# < "%Uf L~_Dr: rO5D;V0 ri]|i -"7&' n~GFy! T~>Fx .>CZv28K {EYO){N [xR1&- 2n>}c w$D:0_K T<}-3 $Np%M 4w6<_ li)bV I/{*/ {2OOD w%OQ" z\7ej }W;6K;0 ,xJ-y LU5<T YKUq+ yz"'{2O <W/BN XJ)~&/ 8`>&%; L'T|Fx _R)~i k@'qm 8/V64 R0II^T %ixPj CchRC m]M>7 5;L&/c c>X^Z V'19} XE,Ua 9h%sWz 8,)Ip EkKV/ -!@jXH w4V~) PTn([ x*~!o VR/Q] xB+<X RkSJ9f YwH/{ px^E| dLLLx WXbb" ci,kii J+((` 0E,UQ 3OG%v, [xJUx #b%/Py q?hAxBB g2O?I 7_/xr {\1a" -h:t# vEOSIE r+$R\Ot [3t4t VR=PK  L\g@ |Ozq) z=:"T =9e%\ ti6d) 7ztT# pilhJ DH|VA &nQY\ E@Kbu A7E] *?i (X3?H' >{%fc)b tIIDAT Sp6niB 9wx*] )$^uL iiR]g 5o#Sz 54ti8x ]C44& s/'fui $V$h* y~ROl f|Nuu!"k~ lAmQ/ IC6E|J }&.bX 4t;.e JUI,I efpvk} B(">% SYwa' a"wZe qCh=; &c/cv~+}4 i7f/s 13]&1 ru=]{ "DTD+ L_f8Nd Ul<jB sq\]:,: DmkGj +^N{hQs +,8~E f+DR/f bnasf z]bX=] PrOL` )~IRa6 1g.0sHg qS:M? ^OX6| h{l_;VX N]S?1U ];vl3?u Db?l[3 jtf)B +G@x< ~*ExF W |i:q? ]#q/8 2_p?y Tf'{/ wAS?5| #C$gkB ~1QP9 y\|p\6|/v f<Eh| }}CXjn$<^(" g~z(42 3hTvs !fmWR) MjY-| Y5!@5 MMG8Z {|:kd Lq]q34D CdR.\=Y >{p0`/v >m%v8 o^h^/ ;T]p3 *j{qEG $,54, z?I<V IB$kkR aqf7T fo1#Q 8vh/. quk?t f$A]q#k *%E0sj )?qi0S? @Dn%k r,@Hv +47RCq l?|[Dv T\3mTL3mTt =7+'l9~ >@eee8r @yyyCX A|D(, 3,1,, \P S@jSI Mck\5 CpF9| BG\R, #"S3` !0QX" X9m${ [wO`X Y?!Pm1FNZ Wm0QF `{i:F 7i-dNm :v4&n znA0s gE,,= g+AI_ FUhG= H)}!Q >El^5 }SYg? DuHyT (QT8, Da5<Z: DjU.TO C*, ) %!$5*(+ JY<,U b!)TP%B2* wWf9" 0Y7#+ IDATx^ LLq]O hYMi( CG@ogx 7V:n~ ((iRr ]WVs{f 9 z88(h ~~&9OkWRk 2IAJf[  v!+%z /_}u&%Q >)-"LY@C Pgf !. o<DM2 HZBxsE N,J]& r+Zu: l<c p 7#*^_)3 ".X{! rS}}* p<xbx` XIt/TR7+ 9K`H+ 2D jz RGaQ14 f3@|0 )L^yO c!FQY Ca&b&: GJRJrbJJ29 +B?`4{ UAR,U '^k|{ IGgQwQ iQ*Lf xq]C/ GJRrRBrrbRrBr r+32eb t3g3" *^gwt%&S 2Ujto` @]rXH( nY[)u sC#1` o``!r  GXH@xH@Xh@h p-4< $ U7=UKONOO Wq|mm, `w~.& Jxx@Xx` i $"" ,"Gp0t K%..' Ecvt_ /xyWX. H[Fe  "02* : pt`ttPdT  OXsA; *I*<>. zZKy#! [Bx*h pLxhD +F~o* a\7XR -!5!% Q *$*"8: 'ZzjrrJT _v\2w jF[g: @y$n$ 0"@_o fmnjv{ ~ tFn xwb[6 ~M{vb Myz}b &&'%& @Q`[t8 65avZ] y7Zo/YN ,o$<D7 s`#B. vE>V4V*\v) U9"!j5B |6jm9FHI o?tZ" T2+^O )*A"a n7.@1 ljIhHR {^i\DU d zn{N >W@54 TI)}lf  $Wam? Nw!S> 6^q24 l65a$| in&i. B?dtt rH^:xu S*BZ = 2zRD)m \2o^ti3 _zz$?Gs 5#|po /M-1B Em"jA T6&A~ S'!B/ W/2q, k !2n Tr[De /y\]U ]"QaD ]"QaD 2{I<0i ?qz?` kQTxt: 3N"Fa =\n3h m+Df&  /c s f t)^8 HTLtDhH HOOOIIIHH qzZzzj cO\BBzff ~V`H@ HJZ:| :4J<@CJ? cUj`T Pz@!'9 ,QBz T j|-,2 /JOeS 3=%9$ xY+d6\ CCs9\I by4il= CBB`z D o  W dDVjjR2 zXQ75!%" |=1i^ rZZRb Rbb"pmX j@L#" F{^#n U|bRPr jORfo 9g39~ "!#BBC\ 0}$&%\ M[65jhN p%&%&&' wea.@ ?g[JC q:A}h K]}?Y n<va3E `s>TG III,g .YE?r@g L%']w O,'kO (KbA! Wm=s!65-= 't1^d y<; a]@B/] ig.\) a?i`9  LciS S@41^ n`#7X Y-*-, 0-=-1))55 n>r<A ,G7%% _OLLI5 $0J$$$ YT/$0 '$@V2 z5 !@? 1)I,+ &JOKKI NKRRzjrJR2  @  <"! HjzjBb"l{3 MNIvW>5 eHH;  vM wL g_|CN=7  @[o: BljZz~O2 W:.pd xA %%e @AF )))***111 ~=-===- We 0E "pc#@x Wr=^`) ?/$P9 f<=y  vm9+f @n"@m  D o ` @d0=Vx- J3\l&: 0D ?"  g.d<=y  {6]\> Jwva3F & tKt {^5hx it0>D O!@ *|0U8! ~=-===- YF``@`  &B7,$[ ?O  ' F.F/; 72-_h I2z`a ZXlE, 6ay4cP 38c,y vPB?7. sXcLy  7Hnb22 Qkd 9 *&L!|.: D _"  (s:>{y I?/Z0 9"l:z 8wQu+ Ze_!)h  JQ@:*]z wq@H&tl $@QW$,X bo.\/ c<2K~ zS7,x >>;0&W }R='/ -^|\) Vv|N>7 Y+r31 ^E>HN Q3.lY crt(r pJG?~t ;F5lM /(RJ[J{ 7#jp`*s zuhhhl, ={F?E S";mlz oMa=8 #l.,l  \OaUipz yDnPs tf^S1 U7jWl zE5L\ }]=;} yhkK@~P={ /'pUD ;1H-S ^8.f74.\ z,m9h m:W=a lN^.B mEGIm #f_o\@ Yg2K& #_?$I@ Wa*6r 8!r[l +1aoP F<9x5g WD>:KY DaHQt o2mPM amh8C xLd|l9 zbg`3 QSS\k g.YhU(W B?pLn >Zs({ AP"<,K DxX%?{ .W)KR T^ra] ]PWGI CCCcccIH tf8#C z $A,k FIo2KF xc\||< Buh}  IRDQ  A/!B2 ) `bK sA,QXL| 9 f#K  `!@. G;S & tz__? <<xTa: KF@g; Ig4IF J&:W% &6tz_y# ^L@oQ CCCcccM& "&&6:: A@Q < `Ut\2  h,qL, @o\"0 NV8T !# V.]$3 -0QIZ rT0ipI H@V X CD1l  XjU"" `\8x3 d2$hB j&:s~@z xq_?? ]fQg: AQ[5( BNMhUTI 7.X1w reK/_ ?l($) v)Q;: A],P0 xPG`j: ,>h%F U\-Xow JToWn ]2Fj-> 6vYxXU eEB:$|! b6shl X-7,8kY >w$,\I ?T5<d D <<| reK/_ e6^yB, l!@ C  `G@U  zuhhhll   {?\ ]3^?X bN-jU )v.l\ *,fg/T O$@7]&4 `v){@ ;ZD0) kTjh= viQ  @k Es^E?{ i:,&B  `G@G Dg#Q35 (~}zH bs'4. eK7n\ $Y|b,e ~Y0(N 3  @- ]e&,s xulIt hCXVJ @hc:D c=S L{ 3  @- J7mn: .n+Vw nCVw"q3bw" H=lqSh ?(~$I{ F{<<> r.7Tf_ "YCzp <a->:8 8vhyKI 9HJa5 .5(_"{ %Qh7q tn)<C;3 L&C2:R>80 oR+'o }Zj8x }*CuF x;,y  yd~xp k'5pJ ]$i1m n[w~y ~im+3 hwzX+Z `imv- hy"&v jS| " m\ Lp D`E74 LI[87 9[2|p KI4n7 :%^n\ d!S r kNMhU 6#v>zt =4Ka[; EjTn' `Qa9J +kc,> "v_/S, ,zJ*T i_/hW 2ZEDS %&-MA%*?Tk T]jLZ NLYQW rUv1W O `fk -QXr~ O%`%BH ,QXj4 9sFDD )$@a,i 1V:I'~ PTBu' S]Y{Z MK12; *v{.8 ~$a Q 91lR2 /m=sxx `v){@ Ut8O8 FMIrH H/RBhR Z7~oa "g>QN sk(DD6 g$ok& Sz#?\ y3,,,<< 1A`l7 y|nH- ^Sw}X+ 5=&K^ "At/,m2^] k3&Sb 'O=vu 7q<Sd Ur6^m&, 7xax5 /o\:v C:b]= 3`&\>t 2YE4I! 6h2p- >46~2 _'N:M fo1]P(_ 0m.,Q #44,,$,\4! fXXXxx8 \L~edw iBOnQ :T.H^ nKp~z 8vhob bYBl  ~-b#&& & DHDD [oQ'J (_<2W V.]$m XaoJ@ )$@n,i yIR/= XbB,zG [h"=% dP )g kEeu^ y]@KF _ctO- ?JnDv .-JF4j9 GZ.Xu< dO"7, -U.oN n:-0{T }g.]8 xqSr- 7gy9Z vak:{ `Q#r&gd \NiTop @>ZSx `1-T>M^, 6,U"f ?T1Rm7% E?|(%- ,}<eD oJKbq fXXXxx8 3=h)X p9rnw 7#`Y7 c)4y_ _n4{M U<&KI u"L>W n%_{p R{huK ?~$d} _?Qn( 'v"?\ V$}[f iC@7~ XHD:z -u#Ir Cz@%G{ E{PijL 3SsClv> ERD?^ ,+bW~ V.]$m 7**JO9i k:W!P i} @f"@w @R yB O-G1   @~Vv EW \yh; .v.H` F >>>,,,<< 7**JO9i Y?BlB adQ3# a#ws:: #^\,4 ic%oZ3 7,I>TQUz \.Qy#?t +ZHX! C ?|? &M$E7 :v1$4 49yhU x#?<z[yZ| ee&Nn\ d>cQUz m8y=U; *b0\l >x#?, /_Na7 |!@+8`S  f/,c e!@QD z$:9b KoKbbb SN28K _U "d-W J -[|(+ LE@,j CKg5oo @()TGj ig:4C,8( |2^2~H# jq J% DW7cEB  $?>.w@ =Z0sSG 1l$dc #gI,? \_ixsC /,g.Q ^9>r$JY C)N<bD <&P){s 3xQ-u No*'# S~P$1Q9 C13>? 47R^w XtZ6G` D?55( mfhx( 6j}aghs `<'w3 ,*zvM_ FXh8i ACf0ZitF6Lo HbJU* IDATx^ SQ@Pl(*U@iJ D3K<V 37c6W yPT.d> x3e^v -NZJ: s,zmyM (IEVt, `E$+0 KWVj2C `AjsAuo I)+RL lR~Z]H e(u:, $1L:lo E+;=x HK94v mh[A`Y \q|(1 -y,=t 7w8~$ Ul~YD "Dt}8 m)ek_ %KO>q v>3d_ CDF<, |T A6 #)919)1 SR \\ !Kpq? RJXRQ* S?,jS J3_>Q V37wL% NQ4GU u*.((*[ ?|;=p vJuiN ?m:CF@ '3:r~ ap Wb65 NPHxr) w^<P/v+0 ,$,<<"K Y`gVv 6""+O 1ghrKf CDI`) tEdue 7qAa8 ;KhX8 `is0P }#[VW J01rh e^e(- SyH%!M hUi h JUjUj? B=P9y b'gy@L0  Ixxp TDS(+ Z$/;o #'s3:gX (p0<;s v5*Uy} }K@u<\ XBx0" O3 xh L?|&n O8lCD Cp}]5 32KxT Ahsz? k0bj`  a~K~+ *r}_B =FlY" M{X;` N |St cJ9%px f2T"p2@ HO,.XJ `~rQ  P#x!JN {]Ri"D '\z`V kZ>;E) n,V*K ep0EE Ho3giE lCtdS S!jIk^jy ;>dKN `FYd] NhQic e!,JSQ YYhM[la K7}n:w xd{#r' T2ob9 U(a-  Des[# GvG+( |]lLSt^ wj2}0 YKs+8 >Zpae k7OM@= #{O]Lq 'TWv. 4aZ$" uR 8B -F 999!! XBbBbb" [8}!)U ?NNJNNL6< $%&'% AG!n7(@P8 =qqpz ;{6HLY m6iJ0x I(];{ HNNbg Ga%$' `&z|"L CC\a!! ^~6*W <w.Uq QX"!} \v_OI <HsH' 6"+11. LX_0g gG|5"@ ;2kdT $.f(6 A>`S0 '2aka .V(kD mWH}  Vyf:B >Q3]c o!11q ,\{r+> -4C'}=6 -Fa9x GDDD\\ h5D+# 5a}}G69$# -2J~\ ZMfWmg p =@o ]iLnU |vv/% f[$%% b= |F: -F !!a ,***k 8d@eK KE/<< ]@XgG ?>Q$3 0aD,=u +g~h[ wN^SO* '%cwO P} ^6 Q\$@2 9"li^ A*jGB a92'# jX$?( !$@2c yZ~mZ xnBg0 B} 7S ->H{d U>_yf MODIa 9Q\DW r$P,_ 7h*z& >;]<(L1@ CLU7{Z, }es7( -X8<o ?<S1O wXFaq# w"""t III6/\ tqxai] t{{t& =kdxf c3Chi WDuw( Fg][X |K&+E }!|&;~G Ttsz{F#$ Da1u\ 0d7$Q {{!pT ~b,1' mu+i'X. HtisA I#uAt Is.CB 'lSR; BG${Mj@`^  tsptvtq z|<S * r4.66 ,6)%[ yf`eX A~7/7m( C}F,\ !YKt/ FvGfa IvPsyAA XdAty( ,x^#'* #>66> %K^X(? K {|< U{{{# SP #zsd OOOGG E p|W ,-QT w Z6W5} @F' :H ;x?rf $9.Ro( nTG7u -!6L4y ].X96S?1R -6&&6 x.kNU =\1uW ^w;<N Lx0pU XwbfD +-=XQ P5?+^ IDATW #M~%4 Dx$oK QzD){ G2JIm !v'Qu!\ 2F966 mia_3~f:T {:C6AwY kID~h R38D\ HWHpy 6q.,f ?lv={ pRphl kNmmB 0s$"?4~ ?XsD+H" caH # H^XD| .?Ach Y$K.oW c%/G_/ ot.Il #D#+X$ Ay-0#V s\|||\ a@$)? a|ll, =!..& 2A#sK }2A"W) ;|[;K  rAi( OB{Py, @:"`emm @BB||B|llLl\L\, [t.,x /ChmcmeMv !B`H: 3MKBN 4ua-H # +888   :: tH<Bl M!&V  caH m A{pV* CxwbRQ [[[*@ z[{KD{ :l >lmml }gv[h .d}~x d@`^R T2{5"QxG,j l,2G, *.N\% T5`O8 -$z"i N8D0pc6 s\|||\ yx>~}3 [Et7J R-`YW va=F!  VO&l7 #f,-Y n&sP{$y I*KIg /"xlZ ]3G5o +Y {z !^X_A sL=};{ \m7hr ,K!yW mz|X# uIY~P IOm4r /Y_1Ll PT go<6Ss2b DA{;6 ;''G7 z/,9+m/, 1B%X$ l lEB\ C@k*, {aY[a,z )^Ka1 4ua-H # |19)G IJ{0+ taIE{ a.oW'={ =XUWt* Ew-'+ (u?+Y OOj>  &BtoC  x+Xc Kot)i' G9pTS cB-=kVO& ;9mINZ3 *{ry:DTw H,C|<F PnpHG F39mIN ".]ixC{ ,.YK$ DGG'$$ OV7'k 'K|t| b3Y/% $:ZBR< &U}KU z'6@W {$ #` _^PZYPy v(DBc[ CW6'J r3OQs ILP-V LI#W(l Fmdd. |yrX" mk~)t ?Gipd 9888   :::!!A s\|||\ .U}KUf {naiH {BaiH }"A@M ~yzfe d||D` {u`)xCj 7__^> Q9^&2 vwkv0 ]Kpk8' 'O<== N=KHy2 fo;oC  vEN:77 08iO4 >Rj'_g J^2&z {sMlN <[LoY .^wfn E</D~ rg>Tl |>Pw) l<!R|B`F$ d>1=KHy2 LuUf; bS`:`  Vbggg yppp@@@tttBB J^2&z6/ M ihP F/#NY Z^F\{ ZI~C0 d9EKgO  9GY2 e5oOK 45---5 @Q  X =!EUa 3CZ9hO= &B.nMY +2lz( Lj&zJ bQWF& lldD\ x<_0d g4EjQhY ,$Dgi /t:<EMC 5sv[f B+[]WV 15y.dz GGMRGT 1<8J, ThveO. ,8J:3$K ]\\"## @FFRrrll, ;m[Hq aQ"HJ vG-m5 v.Vg~ 87)rgG XBWDa 72Ta~ "#J(J D/pY4 6ePK' $G?Lp BPPOI nXFB15 eaVFF <o`Uw Ruzm|[F kW76n P'!!*NP)9 fM!YV x5TKJ sc_S>J ZEjSq *er4C) 43y2SO j~y/_ &@){| P~Glll [ ))) lrr2Y 16Q_\ @1'@^ $=C%] 3CZ9h ftjSv \5<4> (0en_a O5[rQ YA>!>>>  Am#%E Y6Pcrt d9(Vf dq"aqQ SRLL' U}qXd ijLBp 1hP.D iii...5k *T011 hQ2@^L ?kP01 s=2$w |sg'Q S=jV  RS#kf` EOv7?7n ltjSv m&me3 lW[2H miKU6M O5[rQ O$d!X t54(T E~@@@ niGMb :bA\c q!ERq ])2Mw dQIOg) y/ub:7? P{^9r cH oId 3/{_w zTTT6 ANHQ} uogRx OKKsqq yQJ])0, f iti  k[O>Hb- ]+333 f"]^Zkl \5<4> ~=r'. (0en_ mB_({ t54(T \=_0d /T5jT z%{ki *9XtWG ;6Ur= W:V*9 QF/+V 51-[^Sen^ |yzza~d Fqq1qB z{Z-= qE-Cv ]]TMk XvGScZc +h"^- PHjSm }uneHS 4u~"ao I x6@ ~i/Tj lldD\ Y6Pcrt zSgi"u# lu]Yv y/ub:7? w|[^9y LLLLMM LOOOMM VI~n07 Hg6H:} Y6VwM8 o0|^Jp?_3Y $?XC& (EjQLZ x9e#!!26 f!!:K ;q/P)( 5sv[; "~0Wg W<3n;< Epike 3U?o] 'tuQ5 mV+h"^ |<m]W_ 311155 "F )h 7o6kK }qrK[>K \5<4> (0en_a O5[rQ ]#S2? P>)*, BPP/R /t:,F@IBX4 G0T^Q e5oOK A;w-S )S&oR ik~b~ H{ae: ;X}OS f iti 6\ H]tuS _M/cm (zF$p [K>nP -{4,OU KaZf-7 fq-IAb t54(T Nx}WY8 5Bhl` O)[]W (T[Z6Rl <NI11 G0T^Q ,noo+ ;{n>g. N4d!^n <}SmP ThveO. {nnnt fbbbjjJ? "h6` Y  $`ccC X,2C` $$$,Y JZzZ:] IIIr# fbbbjjJ? Z*uf{d HEX x /J9)a URsy% sCJ3$ +Y`UF b.gn? vic.u/ Ju2(*] (ezd]lk .u1"&M w_,;tWP8d B>oRF O7>b1Q h=twdf3 b(Uc][fhxt9qj oW!!dX Y)$0c aaa&&& n%K6=Z "n;Wuy lhRB4 ly+-*V bk[{;G {n(g^!{ dhR>t {:^:mP !:5X] N-[:U B&H)z ~dpCv 8EiW+ !wFd: HA7:K *Sfld >$Z \4 )= 0S } R5R 34H`` } 5kfjj 8$OOOww P~4a>i VzzZj*.- Gk/,y&z #_'X 9 +Z qqqy A&I'9 ]d{p# HJJ*[ lzzzZj ?uSGx }7=T^x %?NH[ NrAF^ # SN{ 0 o.]2{ !iJt$g Mv8+> UsS!:4 DEA2M" Qe@QA n40N&wXs5 ?2Kvd SL^Y4 8z&)c f^a4y Q*NE93 jK4JG 0TR{Z I*Yn/q 4oPF9 Jrf Q 5$3O9 OVUS; y_1\6 !s6zZ 2H@wZ IDATx^ *(`Wl Lz//4's ,KD"xV &)D-4 Km}LBY !]_h:q HdR&%WDGrA HHrGSG {S,x^R lpqj! =oKYV ?zX=1B +]cy+; ~q!]D, >~axn K<4;X-%r@ IG|BB< r+Zu: g0ZB{ KwO$D h^Wso J3\mQ :CHZF Yk!FX ~O}R{ *Z~J9 w,1WEAyI/ hQE*$@O WLEAa  TW}T8 |-d.bz ujO%8 4"S=( |-3&M QZ82'c R-*bD uFu+G 2s3bb Xl1b* 96xF_ ++Q<Nf y"!z@ ?t,Ce EppHpp .!!vHa AA!4wh1N u0%Q5F fEM}J ghROz Wb>kT ] /ap PS$+h)#, ,"[` t "rBZKt l1hiM:kP2 /Fx8m /-l^n p m>Kb` &70v>$(k Y?S48 $xh&"3s w]#rU PdeNx ))qWS YT]1d th;%$ ,t.%) 5j^"+ HTlK> WR28q jF[g: tzx2L mzi?.k @Q`[t8 *3S-s Zj#*[Y |0f=  u@bh& %G-]R ud<E%H$ )@3p- ]n][) jh2\d !r_BZ ]MF0  DQ&Vd Z4&OJ %N$ kWy J=XQd{" -^|x, UH(lh Hoxt4N=M z+K[Z:;E2 B2ITA jkgIBX W?>\3'a  F(*Z+ `Im 0 zgQj$ 2c(@^ fQ*-j ]e_Pv 5m$62y wiAQ  =DU/[D>t :i:c5 \0L>= +}w=6 )Wh|K ?c ;7 |t?bd Vb*xw\Y KT 8r H`#'vL N:x+1 >!phf )D@V._ (,qD( >c ,V #O]Ibb r#2rU R%aNyTT XA<x7 *?08C 8clYo 7x;]&} #`&:c  =ku;* l 0;; Q:^fv Ol)~v m~@?N 6.d I ]9|(G l/}mOo QX<#]2 7rWz5 *M+1bT / 4(K .Fd i ;8$8ch P}GB26 EOYEP i/U _ Vf 9^ <oO^Vb xsyJL |&lDD }Qu$n, Kwc0s *wdu> 3il&z x(PBQ -SmBs/ ~`*q82U UN',p .$lNBa4 YjV(Q rbo2u "w_LV ~dWE< :I$-$:e D%j]% 7Cy 2' kinX_ =Gyf' 2(fN8d Ko\(gM 4&,g91TSJ H*a&z W~tA^> y,l$pi9 RPa2<L D m#@6@ W:NDO e t?Br D U @ ~0]q V oj-9* kgVo; uzQC/wM bmG6F N}5fP(> [HR$? GM+Q'ft  I/>( /OHVa2<vn i3^mT5% +X;}: p&zby a l&:9 v??y2 ztRgf$ SSB0Z <@6=!AR- "Bu$< at-,> #Y A! T+?YFa &!...   ?mi$N yedm} Fc!c"' lP0!| w7}\b 8z}mu ~iQ$p ua@QB( ukm]q yG9nol=` Nu\]Uf G-~~` g^)3z {fO|v i\FQG ,>r"b vO>\<{ PZf[h xJ:(> g9E1y DUY@< >s+1! |)R,H y}hH^ Ih Nx 4QHUc EIL.' ;+k.[F =2_2N& UtO>S o%hz7 (67\4x |JQ^( l>Q)9 Oov =C. 0j9P% m;(}Y yg- naq iF}) 9_S%s ~>,( Eq ',q6^ )S8%D /uy^H/ t:rreM~~) c<w[U EIL.' =2_2N& U7vO;P{X (7\4x Bkp[" I@c}! (%WHb @U_A&-) @C1_eG uy, X7 naq iF}) W={)C HLLtsssww XRNt2x ,;a2K# `\K.g $I-$g L2<eg\ :{\Y~ UtO>S Nep[" ~#.aEh #16)] .?RF6 ~9tK( IDATb ^O<)E Sk}k^a W={)C HLLtsssww :~BZY[L y`1/, REx$:}P$zIW m7xa9 "j :Q /,+ G S@Lh 6 Cpq%S G {^Aq2^  :eNtRF z.,$Ew +(!Ev GVffV l~,8d9 7wwW77 t:i., p',}3 B3c)m ,R 3Q\\D KRXxB $ Z>XBt n]:X2 S@\'2 APk # C3 `D .avpM 2n]:/ v{l>}` TjjB8R?z zoL>He *n##a /5dNY kOc*DY i Zh  ii6,q., uZG+  EK 11q l bjB _t-_2 @Vl:t Qn?|v ^y7:zuo wi]34 |[&+A :U)+;n ;&6+fL \J:eQ? 3n]:O 1M)#V DO PL |l=Ds? ;w=t% rV;yh 'w|'P Fd7 ]bd G94zlH H?+&G `e()/+ d7 ]b f7YWRbW_z BW6.n{?e .Xbja_ K49{1G l-:U(d *222--M deei4 \\\RSS ?\\\]E= X6B,  d# i  B}4YYY -WjW} q*dP0 @q"`N 6t(B> FlE@T<d%D #ZQI>L bL 3)z ;RI>L g/WW,Q# gE|^^vi y6^v! jxY'6Q _,UU|$ 8yZ^3 1n{&p v\([? 2o]=* ~BQ"I _wbAvI< >\4D* bNb$- Y+N2W._ 517Mea R=n\;.< l eYL 9bEgv l eYL %eEz%$ EoEQT |adx]Tp x9gd< $&&*5 P(HVV dddP4 jUdddZZ rR1}i %"D.B %u\8w M:"\;r jXGTI ryT"5I4z B2zl>}` @xa~[E d=P{g Kb!v02 y-oEQ f1R+"BSJ "ozvQ3 D:wC6| X&>J9 |aNsP v4eCFe [Kw_b?p /'Jo. m>ULb b&ydq $`z., ! yaE jUdddZZ Hym2o" Wk Ln ~.,6g G| p{ B>U:!~ x5< ) O$I>Xl/ l_v@V ~>P.g 6?Vu9 yT~nZ ,uc,k 9v|xC "yg*{FB5' m bnr /vlU{ }[]so cw%[6 ),cfG= :\{7;j*_ W\ylS r~Dy5 WD"=n }b(3G =4d,! (.>l?T /PR"b G@L}. !_a<H a ivT As7^k :eF U U/`G r 9 ],^ m )qX ^X%j8z HtqW^ Y" G{ u/,mc Y,`n~ nv%{a RykR@ qXsrr G&M~d 4m\_<bY fLQm  %D-fe ;W~;` oz/x` [ESN:{@ )Hl{-s x~wx:rDG IK<9Y <rDau {XG*}. @s}^P? _7,|c :i4_I *((8g dzA)_ $\@LB $@@4} zY(0v @ P\\,~ 0RN'. 9#~?` G}yE/ 9#n,h mB?T@BC 2*$n[6(W nic/aW! 3^*?z< ^YLg~N[O GvW:J wwv9{ E7OX7 c'<4j Up^^^ &LRNH6C $??_< :9g_J '-2L& q/,W( 1!FIIIvqD/ a&+U%0v 1fWE  xc4d5 6`j0H 4U/,; D-fFB ,,;EF JIDAT Uvo)9 AO<+)" ?8%daEaT Z9tVNk :VEpg rTXYg Q?b,f HZ=T( Zh*<p iWWy^Q XKoX* *;Ve3 Boa71 :`E#rkCm h87vW D\!eX> hyF}/ F@n!/- s&5om zW*I} .3}9> j!q_2Z-* Ucd.C 860-- ~szd{ OKf{> ?lQ9vZ  &"V.%  &"V.% IDATx^ }U@xEy p2:<T "pwnv <z|tvn :7?WK6 i26jxC% ('b^kt ^A`~65 i:q-=  [x^| ahFOO {Enpl St64| 3ym:: d3g?L v6v8vw >r6vx &eg"@ cGbuQ :|(6tp Y#ZJQ C]G___  n~=3t tlzZF Bu)P|^ I|xJf P-/rg E@^T; khp=D A(iZ6 \Nm$[  zV(| y ~fy C^xO_8h>!|v gRdv1 ]p"K.<  rqcZ60 n+k[! e"Ba> BwdG_ sT&3w )|lYaw :P]"H .//{W @W!P7o X{d_x /<~t0 hL\J8D 86rL& LfhpH> 0q1188x ~3xpp~n |AHB~t` TM=p+/ wsk;? <}q3jB" lD`[ 0 \Hn@O I^/'F -rp7o JFYp) oD4eA Z4;JZ;xCG- +7mRNT/ xY'^=^\  o8w0 |k^!X 0vrLJ M-\{' >e%\^#D RhPC} ^;4eO FF^<_ `n11Q" 9\.r1skA > .H} %uo)v _[0E=  .\Ro! JW>!e [J|p, NmC v0 Q5;q& ^;4U3 jfbl`G G  z0\]& 16A7N Ahx*} 6o?8Sg @ Z\JJR )1%}T >"MGi DZv\Z ~38qrh exO?ZB d`xO( >!M<z ?HA*l< @  z0\]& #&Hqqd 2vtHb+ D($Z! C%w1@T 'i@#b $'C[0]hw Ahx*} ;+EnLu fRsKZ xal@` xMzmW Hl-mS H[<,=b Qe{K4 D`[ @ p%j[@ l`"Y2> JXy4%{ GLDI] bE#!q #@ gS OZN]O F_Z`G JqB"@ ?Kk{b AJRsK Du(|j ;;_ajH Uk7~" .mPXr 0 <i9u= 74<5s-. /_Ir[ :D&*@60 ,=@&P ZQ*z.< R`w!@ Fr)N! g7|@y7 E}pe$6 )z[ok" #3\$T T08PS3Xe {|`HtE yCGlC  n"2O] >?rx? J@A0q Acn11u >s>0t  G'z"y VV^TA j4Bl`G eB2 J jDO&[q Sj{,` xT3"E Ahx*} j$#rk :i-+)P hUx^D Acn11u JUn=0 ANd_HZ 'Dl<9 yCOoo+ #G"p- ?s-.~ <t|Zh #T!-@i p6WfZ e)?Eri xz6?L v.$tC 6`;aA g/HCa x)ujnY IgwI- :ywzG qSb^QB >!M<z /drBJ^;<% .@[A  BB7DXp (@$$1 rLAZ` %[8Eg D;R"D  n!w:B3 U[Je[ ]mUO+ KII*= Fak(9 -8%ZU: dTxO( 4BZLt a8qV,+ B"#v> ,Pnja``zaE` Cd`R0 KSgF` D($Z! $'C[0]hw "wFJy Ahx*} D:a'l Ckb9J@u Y%eP7Rv\ :Ae)i xUl@@^ 2"!~f (ZP5;q& tFf)F`7 |QepJ$ KoCui~ q{*gS ~7L0K [Z 6z2) %CbJ3 y=`,v >0s{q VdoH9A IQlX\ B@M`J G:!?zp? 4]Ql- ,ATEB n_H&TQ" #(S)$T ^Y]Sl P,drb B{E~.z pkRFa MYT08 Y{ Ir T1LW3 2skIo $j0ufd 7MWNT/ 2*eDJvaW 'Q|O* 8PG[+_O <a`%dD =>44b Q-(f6 o}M(a uTi % Xf-%n +e):\ L:HFx &1qr( J#L;~ ^;cGpI y`G>x n\5u& +Gm*tH ~FT@h BFy3cK4 :g/zY t(u]e S0\|h\;< M/<gA P#~fF< n.UE% &d"X} ZfGtC )y~A_ 1s-.j OoTEZ ?z $F SsKhI] r@\0; /<2:x <%@2@nF8 C0QrJ v(#zJg >6\*Md&>O ukb_' [p,fq.u U!Y{~ 3:Wy#r% qk(be LJ7XM ~LzbF $c^GAj ~X;itg  cK6e po2p# ~{m[q :VnsaA *+ml. QEr]r !*9j|{ UJtVR[V CC#&N Uj>A~ \)b:X>&5 {=iEQ ZR6EW) baU^a 6$~$ B9 &I@HO(Q 1^eui ~p]#| uj@*R @7d%E; oVV6k U_P8Q #C/m< tCWO_ O>Garo P-)PZ k}X4= a]Dp@ O*s^u| <B7GW 3MG83 y1*R, !ARk  ?o9mPg] ?j+E_k^ %NY+P 2rxsI @7d%E; J+++]b,fB e~Z4hU nh-oF wuRzB u>T.: termmm tEXtSoftware Adobe ImageReadyq CIDATx ?D0%@~ d@az: >%GJC Kh5?L @Ge@=EF Vd id.-FD CX^ 3 ~` oG2- ]0L*9B W>J Q= 7E .d &uRG$ ,~@G" :~huI/ PKz5L Q|R#}Introducing the StreamInsight Event Flow Debugger Microsoft  StreamInsight Technical Article Writer: Ramkumar Krishnan Technical Reviewers: Tiho Tarnavski Published: August 2009 Applies to: StreamInsight Summary: This paper introduces the Microsoft StreamInsight Event Flow Debugger. It describes the features of the debugger and explains how you can use these components to analyze, diagnosis, and troubleshoot the queries used in your complex event processing (CEP) applications. The paper describes how to use the debugger to inspect, debug, and reason about the flow of events through a CEP query by using such features as Root Cause Analysis and Step Through Time. In addition, the steps required to run the debugger in both the offline and monitoring dashboard modes are provided along with references to samples that you can use to quickly implement these procedures. Copyright This is a preliminary document and may be changed substantially prior to final commercial release of the software described herein.  The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. This white paper is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS, IMPLIED, OR STATUTORY, AS TO THE INFORMATION IN THIS DOCUMENT. Complying with all applicable copyright laws is the responsibility of the user. Without limiting the rights under copyright, no part of this document may be reproduced, stored in, or introduced into a retrieval system, or transmitted in any form or by any means (electronic, mechanical, photocopying, recording, or otherwise), or for any purpose, without the express written permission of Microsoft Corporation.  Microsoft may have patents, patent applications, trademarks, copyrights, or other intellectual property rights covering subject matter in this document. Except as expressly provided in any written license agreement from Microsoft, the furnishing of this document does not give you any license to these patents, trademarks, copyrights, or other intellectual property.  2009 Microsoft Corporation. All rights reserved. Microsoft and Visual Studio are trademarks of the Microsoft group of companies. All other trademarks are property of their respective owners. Contents  TOC \o "1-3" \h \z \u   HYPERLINK \l "_Toc237774356"  Introduction  PAGEREF _Toc237774356 \h   HYPERLINK \l "_Toc237774357"  Understanding Event Flow Debugging  PAGEREF _Toc237774357 \h   HYPERLINK \l "_Toc237774358"  Debugging Modes  PAGEREF _Toc237774358 \h   HYPERLINK \l "_Toc237774359"  Offline Debugging  PAGEREF _Toc237774359 \h   HYPERLINK \l "_Toc237774360"  Monitoring Dashboard  PAGEREF _Toc237774360 \h   HYPERLINK \l "_Toc237774361"  Event Flow Debugger Features  PAGEREF _Toc237774361 \h   HYPERLINK \l "_Toc237774362"  Operators  PAGEREF _Toc237774362 \h   HYPERLINK \l "_Toc237774363"  Special Operator - Group and Apply  PAGEREF _Toc237774363 \h   HYPERLINK \l "_Toc237774364"  Event Streams  PAGEREF _Toc237774364 \h   HYPERLINK \l "_Toc237774365"  Step Through Time  PAGEREF _Toc237774365 \h   HYPERLINK \l "_Toc237774366"  Root Cause Analysis  PAGEREF _Toc237774366 \h   HYPERLINK \l "_Toc237774367"  Event Propagation Analysis  PAGEREF _Toc237774367 \h   HYPERLINK \l "_Toc237774368"  Stacking of Analysis  PAGEREF _Toc237774368 \h   HYPERLINK \l "_Toc237774369"  GUI Convenience Features  PAGEREF _Toc237774369 \h   HYPERLINK \l "_Toc237774370"  Using the Debugger  PAGEREF _Toc237774370 \h   HYPERLINK \l "_Toc237774371"  Debugging in the Offline Mode  PAGEREF _Toc237774371 \h   HYPERLINK \l "_Toc237774372"  Offline Mode Sample  PAGEREF _Toc237774372 \h   HYPERLINK \l "_Toc237774373"  Using the Monitoring Dashboard  PAGEREF _Toc237774373 \h   HYPERLINK \l "_Toc237774374"  Conclusion  PAGEREF _Toc237774374 \h  Introduction Microsoft StreamInsight provides a stand-alone event flow debugger graphical user interface (GUI). The StreamInsight Event Flow Debugger enables you, as a developer or administrator of a complex event processing (CEP) application, to inspect, debug, and reason about the flow of events through a CEP query. In this paper, we describe the Event Flow Debugger features and provide the procedures you need to quickly get started using this rich debugging and analysis tool. For information about StreamInsight, its CEP server and related objects, refer to Microsoft StreamInsight Books Online. In particular, we recommend reviewing the topics found in the section 'Planning and Architecture' to gain familiarity with the basic concepts that are associated with StreamInsight and referenced throughout this paper. Understanding Event Flow Debugging Before discussing the Event Flow Debugger, it is important to note the fundamental difference between a control flow debugger (for example, a C# or C++ debugger) and an event/data flow debugger. In the former, the developer "builds" a program written in a specific language in debug mode, enables breakpoints at specific statements or junctions in the control flow of the program, "runs" the program up and until these specific breakpoints, reasons about the code and the state of the system, steps into or over functions and procedures, watches variables and so on until the completion of execution. Typically, temporal reasoning of "data" variables   that is, analyzing the transformation of these variables through the passage of time - is limited or non-existent. In contrast, event flow debugging involves analyzing an event through the passage of time, as it proceeds from one stage of the CEP query to the next; and within a query stage, from one operator to the next. Here, debugging involves understanding the effects an event has on a stream as it enters and exits from a given operator over time, and how new events are generated as a result of computations on events input into an operator. The emphasis in event flow debugging is on how the operator s semantics (FILTER, PROJECT, JOIN, AGGREGATE, MULTICAST and so on) affect the event, rather than on the (control flow) execution of the operators themselves. As a consequence, the debugger helps understand the impact that a given event has on other events, and the impact of other events on the event being analyzed. Debugging and Monitoring Modes The Event Flow Debugger is a log-based debugging tool. As a prerequisite to using the debugger, you enable the CEP server for tracing the execution of a CEP query of interest, and then run the CEP query for a specific duration. In this release, all queries are enabled for tracing by default. The server generates Event Tracing for Windows (ETW) events that can be written to a log file by using the ETW tools. From these trace logs, the debugger constructs a query graph that displays the algebraic operators used in the query plan. The debugger serves two purposes: Offline debugging based on a trace log file. In this mode, you can examine the events and event flows in one or more queries contained in the trace log file. Monitoring dashboard. In this mode, you can enumerate the applications and queries on the server and display query diagnostic views.  Offline Debugging In this mode, the debugger works independently of any CEP server, using only the trace log as the source. When you open the trace log file in the debugger, it loads the query graph and you can begin analyzing the events contained in the file. In the section "Using the Debugger", we provide the instructions you need to create the trace log file and open the file in the debugger. Monitoring Dashboard The monitoring dashboard provides a tree view to show all the applications deployed on the CEP server and the set of queries that compose a given CEP application. You can browse through the queries and select the query or queries you want to analyze. In the offline debugging mode, the tree view is generated from the trace logs .You can also connect to a running CEP server and retrieve this information. The dashboard can be enabled in both the embedded and stand-alone configurations of the CEP server. The debugger uses the StreamInsight (CEP Engine) API to enumerate objects in the CEP server and to obtain diagnostic views on individual objects. The API communicates with the CEP server via a manageability Web service. Regardless of the CEP server configuration, for this mode to work you must enable the manageability Web service that is part of the CEP server.  When the query is run, the CEP server generates Event Tracing for Windows (ETW) traces for the query execution. You can then load the trace log corresponding to the query into the debugger. In the section "Using the Debugger", we provide the instructions you need to perform these tasks.  Event Flow Debugger Features The Event Flow Debugger provides the following key functionalities. Ability to view the query plan for a given query; the query operators and the event streams. This can help you understand the performance of the query. Ability to inspect all events produced on all streams and search for specific events. Ability to step through the trace of a query execution and understand how events propagate through a streaming query. Ability to analyze events and understand how they reached a given state - that is, how other events or operators impacted their event times and payloads. Ability to analyze the impact that any given event has on events that are downstream from the current operator - essentially to look ahead into the future processing of the events until the event finally affects the output. View the query execution statistics in terms of the events that are consumed and produced, their latency and throughput characteristics and memory requirements.  To implement these functionalities, the debugger provides three features for analysis: Step Through Time - Using this feature, you can step through the event stream one event at a time and watch its progress from one operator to the next. Root Cause Analysis - Using this feature, you can "look back" at the "root cause" - or the sequence of operations or changes that caused the event to reach its present condition.  Event Propagation Analysis   Using this feature, you can analyze the effects of this event down the stream either in terms of the changes the particular event itself goes through, or in terms of how it impacts other events, or causes the generation of new events. This feature is the reverse of Root Cause Analysis. In addition, the monitoring dashboard allows you to select various query execution statistics to analyze the latency and throughout characteristics of the events that are consumed and produced and to understand their memory requirements. The GUI features of the debugger are explained on the Start page of the tool as shown in Figure 1. You can use the information on this page to quickly get started using the debugger and its features.   INCLUDEPICTURE "cid:image001.png@01CA1A9E.2034DA10" \* MERGEFORMAT  Figure   SEQ Figure \* ARABIC  : StreamInsight Event Flow Debugger Start page In the following section, we explore the additional features that are not described on the Start page - beginning with the operators that are displayed in the query graph. Operators Each rectangular box in the query graph represents an operator. As described earlier, the debugger displays the query graph in terms of the query plan generated by the CEP server for queries that are submitted by CEP applications. The supported operators are SELECT (FILTER), PROJECT, IMPORT, EXPORT, GROUP-AND-APPLY, JOIN, MULTICAST, UNION, TOP-K, ALTERLIFETIME, ADVANCETIME, CLEANSE. Similar to viewing SQL query plans, there may not be a perfect 1:1 mapping between a functionality in the surface language and its operational manifestation in the query plan. However, you can intuitively make that mapping between the query graph shown in the debugger and the intended event processing by the LINQ query. Each operator is labeled with its given name in the server metadata along with the kind of operator it is. Figure 2 shows a Project operator labeled as 'Project.4.3' with an operator type of 'Project'.  INCLUDEPICTURE  "cid:image003.png@01CA1A9F.8ACDDD30" \* MERGEFORMATINET  Figure 2: Operator label Click the inverted triangle to expand the event grid for that operator. Figure 3 shows the events displayed in an event grid for the Project operator for a given query.  INCLUDEPICTURE "cid:image005.png@01CA1A9E.6F926320" \* MERGEFORMAT  Figure 3: Events displayed in the event grid Each event grid has the following three sections. Operator Label The title of the grid is the operator name provided by the query and the operator type.   Filter In this text box you can specify a conditional C# expression to filter the events of interest. For example, you may want to examine only events that meet or exceed a certain value or time. Event Fields The rest of the event grid window shows the fields of an event. The fields include the event kind specified by the user (Insert or Cti), along with internal events (Retract and Expand). The field columns displayed by default are EventKind, StartTime, EndTime, and the payload fields of the event. Figure 4 shows the event payload fields SensorId, AverageSpeed, and VehicularCount from the 'ObjectModel' sample available in the StreamInsight samples SDK. You can add or remove fields from the event grid by right-clicking the header bar or, click View, click Columns and then select or clear the field names. Note that all timestamp fields are displayed in UTC.  INCLUDEPICTURE "cid:image006.png@01CA1A9E.6F926320" \* MERGEFORMAT  Figure 4: Selecting fields to display in the event grid The available fields appear in the order listed in Table 1. Field Name Description EventKind Insert, Cti, Retract, or Expand. StartTime Start time of the event. EndTime End time of the event. NewEndTime The modified end time of the event for Event Kinds Retract and Expand. Latency The system latency of the event at the given point in time. This is the span of time between the time the incoming event that caused this event to be produced entered the system and the time this event was produced by the system.  EnqueueTime The system time when the event was produced by the operator. DequeueTime The system time when the event was processed by the next operator. Payload Fields The user-defined data fields available in the event.    Table 1: Available fields in the event grid The events in any given operator can be exported to a file by right-clicking the operator title bar and choosing the option 'Dump events to file'. Typically, you would do this to export events for further processing by another program. Special Operator - Group and Apply The Group-and-Apply operator consists of a Grouping operator as the entry point, a set of Apply branch operators, and a Group Union operator as the bounding operator at exit. You can expand (or collapse) the operator by clicking the   sign located in the operator label, as shown in Figure 5.  INCLUDEPICTURE  "cid:image008.png@01CA1A9F.8ACDDD30" \* MERGEFORMATINET  Figure 5: Expand/collapse icon Expanding the Group-and-Apply operator displays all of the branch operators, each of which can be expanded or collapsed individually as shown in Figure 6. The expanded branches show a placeholder operator that represents the events that flow into a specific branch from the top level Grouping operator.  INCLUDEPICTURE "cid:image010.png@01CA1A9F.8ACDDD30" \* MERGEFORMAT  Figure 6: Group-and-Apply branch operators Event Streams Event streams are represented in the query graph as lines connecting the operators. Step Through Time  From the query graph view, you can start Step Through Time by clicking Step Through Time from the tool bar. This shows the query graph as before, and in addition, an event player, as shown in Figure 7. Click the breakpoint (circle) icon to the left of the operator name to set or release a breakpoint on the operator. Right-click the breakpoint to set a condition.  INCLUDEPICTURE "cid:image011.png@01CA1A9E.E1EDBF50" \* MERGEFORMAT  Figure 7: Step Through Time feature The event player provides the following operations: Step to Previous Breakpoint, Step Back, Play, Step Forward, Step to next Breakpoint. Once Play is selected, it changes to Pause. The typical usage pattern is to set a breakpoint at a specific operator, and then step through the events until they hit the breakpoint in a given operator. Step Through Time is useful to understand the transitioning of events from one operator to the next, and as a starting point for further analysis. Root Cause Analysis From the event grid of any operator, you can start the Root Cause Analysis by right-clicking the event of concern and selecting Root Cause Analysis. Using Root Cause Analysis, you can analyze how the event got to its current state. In Figure 8, the event of concern is an Insert event with avg = 9 and StartTime = 2009-06-25 00:00:20.000000 in the Grouping.5.2.Aggregate.1.1 aggregation operator.  INCLUDEPICTURE "cid:image014.png@01CA1A9F.467C6480" \* MERGEFORMAT  Figure 8: Root Cause Analysis Choosing Root Cause Analysis causes the debugger to show an expanded view of all operators containing the events that can potentially have contributed to the current state of the event that is being analyzed. For example, Figure 9 shows three events from the AlterLifetime operator preceding this branch. Note that the Grouping node (Grouping5.2) above the Input-To-Grouping-5.2 represents the entire Group-and-Apply operator view of all the branches, and will have all the events that were output to all the branches. The expanded view for Group-And-Apply can be collapsed by clicking the '-' (minus) sign, at which point, this single node will show all the events from all the branches interleaved. In addition, the operators will collapse into one representative branch. For example, when the minus sign is clicked, the graph will contain Grouping 5.2, followed by one InputTo-Grouping.5.2 node, one Grouping5.2.Aggregate1.1 node and so on.  INCLUDEPICTURE "cid:image015.png@01CA1A9F.8ACDDD30" \* MERGEFORMAT  Figure 9: Three events from the AlterLifeTime operator in the InputTo-Grouping.5.2 operator Event Propagation Analysis From the event grid of any operator, you can start Event Propagation Analysis by right-clicking the event of concern and selecting Event Propagation Analysis. While root cause analysis is about understanding the impact of other events or processing steps on an event, event propagation analysis is a forward looking analysis to understand the impact that the current event has on events downstream. Stacking of Analysis Analyses can be stacked on top of each other. For example, you can start debugging by using Step Through Time. At some point during in this analysis, you can start a root cause analysis for a particular event. From this view, you can potentially pick another event for propagation analysis. In this manner, you can stack the analysis one on top of the other. You can also open the same query in multiple tabs and have different analyses and views in the different tabs, giving you the flexibility to compare the same or different segments of the query under different analyses. GUI Convenience Features In addition to the features already described, the Event Flow Debugger GUI offers the following convenience features. The Start page offers "getting started" guidance on the main screen features and navigation.  The main window that displays the query graph supports zoom in and out capability by using one of the following methods: Use the slider. Rotate the mouse wheel while pressing the Ctrl key. You can pan the query graph in the main window by using Ctrl + left-click and moving the mouse. Using the Debugger Now that you are familiar with the features of the Event Flow Debugger, you can begin using it. This section provides the procedures you need to create trace log files and start the debugger in both the offline and dashboard mode. The Event Flow Debugger is installed as part of the Microsoft StreamInsight product installation. You can start the debugger from the Windows Start menu, or by starting the executable located at <Program Files location>\Microsoft Stream Insight CTP2\Tools. Debugging in the Offline Mode As discussed in the section "Debugging Modes", the offline mode requires that you create a trace log of the query and open that trace log in the debugger. Use the following steps to perform these tasks. From a command prompt, navigate to the Microsoft Stream Insight CTP2\Tools directory and type trace.cmd start <filename>.etl. Note that this command is provided for convenience; you can use any ETW tracing tool to collect the trace log. If you use Windows ETW tools, the ETW provider is "Microsoft-ComplexEventProcessing". It is important that the trace collection be started before the query that is to be debugged is started. Run the CEP application containing the query of interest for the duration of your choice, or to completion.  Once you have captured enough tracing information from the query to reproduce a problem, shut off tracing by typing trace.cmd stop from the command prompt session started in step 1. This will result in the generation of a trace log file in the directory where the trace command was started - with an extension .etl. A few pragmatic points to consider here. The debugger does not impose any limitations on the size of the trace log and is limited only by the available memory on the system. However, the duration of tracing impacts the size of the trace log and the memory required by the debugger to load the events and other debugging information. So it is pragmatic to launch the debugger against smaller snapshots of the event stream to localize the issue or problem. The full scope of techniques for localizing the problem area in a continuous stream is beyond the scope of this paper. But effectively, you need to track the events being enqueued in the input adapter and the events that are dequeued in the output adapter. In the case of an exception, or wrong result at the output, you can use these logs to compare results at a macro level and replay the log representing the problem area in the debugger for a finer grain analysis. Start the debugger from a command prompt by typing start EventFlowDebugger.exe, or from the Start menu. From the debugger, click File, click Open and then select the .etl file. This loads the tree view, which displays all CEP applications and queries that are available in the log file.  To open the query graph in the main window, double-click a query name. You can then proceed to analyze the events using the features discussed in the previous section.  Offline Mode Sample To generate a sample .etl file, you can use the sample project, 'ObjectModel', that is available in the Samples SDK. Following the steps above, start a trace, run this application to completion, stop the trace, and then open the resulting .etl file in the debugger. Using the Monitoring Dashboard You can obtain diagnostics on a query deployed in a stand-alone CEP server by implementing the following steps. If the CEP server is not started, start the server from a command prompt by typing start StreamInsightHost or StreamInsightHost.exe The executable is located at Host\StreamInsightHost.exe. The default connection end point provided by the stand-alone host is http://localhost/StreamInsight. From the debugger, click Connect to Server and then type the host address. The debugger displays a tree view of all the CEP applications running in the stand-alone server, and all the queries in an application. Double-click the query of interest to obtain the runtime statistics of the query at that point in time. A tree view is displayed showing the runtime diagnostics of the query in the main window, as shown in Figure 11. In the figure,  query  is the name of the query, and the application name is ObjectModelSample. For more information about the query diagnostics see the topic "Monitoring the CEP Server and Queries" in the StreamInsight Books Online. An alternative deployment strategy is to start up explicit CEP server   in a local or remote host   programmatically, and deploy queries against this server. In this case, you must also add the code required to configure a Web service end point for the server. The debugger can connect to this end point using the same steps discussed above. See the Samples SDK for an example. Figure 10: Query tree view and query diagnostics Conclusion In this paper, we have discussed in detail the features available in the StreamInsight Event Flow Debugger tool and how you can use this powerful tool to debug and analyze the queries in your CEP applications. In addition, the steps required to run the debugger in both the offline and Dashboard mode are provided along with references to samples that you can use to quickly implement these procedures. Did this paper help you? Please give us your feedback. Tell us on a scale of 1 (poor) to 5 (excellent), how would you rate this paper and why have you given it this rating? For example: Are you rating it high due to having good examples, excellent screen shots, clear writing, or another reason?  Are you rating it low due to poor examples, fuzzy screen shots, or unclear writing? This feedback will help us improve the quality of white papers we release.  HYPERLINK "mailto:sqlfback@microsoft.com?subject=White%20Paper%20Feedback:%20[Title%20of%20White%20Paper]" Send feedback  PAGE   \* MERGEFORMAT  gdj_g gd!8" e\UQMQ gdO"8 gdj_g gdiT} gdj_g
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\JobFrameworkCoordinator.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JobFrameworkCoordinator</name>
    </assembly>
    <members>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\JobFrameworkAgent.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JobFrameworkAgent</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkAgentCategoryInstaller">
            <summary>
            Category installer for the JobFrameworkAgent event source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentCategoryInstaller.EventSource">
            <summary>
            The event source for which to install the category strings.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents">
            <summary>
            Events in the JobFrameworkAgent module.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.log">
            <summary>
            MSN Runtime's event logger 
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.#ctor">
            <summary>
            Private constructor prevents instantiation.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobFrameworkStartupFailureValue">
            <summary>
            EventDefinition for JobFrameworkStartupFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobFrameworkStartupFailure(System.String)">
            <summary>
            Method to log an event of type JobFrameworkStartupFailure.
            </summary>
            <param name="stackTrace">Argument stackTrace for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobFrameworkStartupFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type JobFrameworkStartupFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="stackTrace">Argument stackTrace for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobEngineHeartBeatFailureValue">
            <summary>
            EventDefinition for JobEngineHeartBeatFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobEngineHeartBeatFailure">
            <summary>
            Method to log an event of type JobEngineHeartBeatFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobEngineHeartBeatFailure(System.Exception)">
            <summary>
            Method to log an event of type JobEngineHeartBeatFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.CreateNewJobStepFailureValue">
            <summary>
            EventDefinition for CreateNewJobStepFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogCreateNewJobStepFailure(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Method to log an event of type CreateNewJobStepFailure.
            </summary>
            <param name="assemblyName">Argument assemblyName for formatting the event text.</param>
            <param name="Version">Argument Version for formatting the event text.</param>
            <param name="jobStepFullName">Argument jobStepFullName for formatting the event text.</param>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogCreateNewJobStepFailure(System.String,System.String,System.String,System.Boolean,System.Exception)">
            <summary>
            Method to log an event of type CreateNewJobStepFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="assemblyName">Argument assemblyName for formatting the event text.</param>
            <param name="Version">Argument Version for formatting the event text.</param>
            <param name="jobStepFullName">Argument jobStepFullName for formatting the event text.</param>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.HeartBeatThreadFailureValue">
            <summary>
            EventDefinition for HeartBeatThreadFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogHeartBeatThreadFailure">
            <summary>
            Method to log an event of type HeartBeatThreadFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogHeartBeatThreadFailure(System.Exception)">
            <summary>
            Method to log an event of type HeartBeatThreadFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.AppDomainUnloadErrorValue">
            <summary>
            EventDefinition for AppDomainUnloadError
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogAppDomainUnloadError(System.Boolean)">
            <summary>
            Method to log an event of type AppDomainUnloadError.
            </summary>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogAppDomainUnloadError(System.Boolean,System.Exception)">
            <summary>
            Method to log an event of type AppDomainUnloadError with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.EventLogger">
            <summary>
            Gets the EventLogger used to report events from this source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.EventSource">
            <summary>
            Gets the event source for events defined in this module.
            </summary>
            <value>
            The event source for events defined in this module.
            </value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobFrameworkStartupFailure">
            <summary>
              Gets the EventDefinition for the JobFrameworkStartupFailure.
            </summary>
            <value>The EventDefinition for the JobFrameworkStartupFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobEngineHeartBeatFailure">
            <summary>
              Gets the EventDefinition for the JobEngineHeartBeatFailure.
            </summary>
            <value>The EventDefinition for the JobEngineHeartBeatFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.CreateNewJobStepFailure">
            <summary>
              Gets the EventDefinition for the CreateNewJobStepFailure.
            </summary>
            <value>The EventDefinition for the CreateNewJobStepFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.HeartBeatThreadFailure">
            <summary>
              Gets the EventDefinition for the HeartBeatThreadFailure.
            </summary>
            <value>The EventDefinition for the HeartBeatThreadFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.AppDomainUnloadError">
            <summary>
              Gets the EventDefinition for the AppDomainUnloadError.
            </summary>
            <value>The EventDefinition for the AppDomainUnloadError</value>
        </member>
        <member name="T:Microsoft.Webstore.Common.ServiceInstaller">
            <summary>
             A common installer class for installing Webstore services.
             </summary>
             <remarks>This class can only be invoked by a caller with unrestricted RegistryPermission.
             </remarks>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.#ctor(System.String)">
            <summary>
            Instantiates an instance of the ServiceInstaller.
            </summary>
            <param name="serviceName">The name of the service to be installed.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Install(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, performs the installation.
            </summary>
            <param name="stateSaver">An System.Collections.IDictionary used to save information needed to perform a commit, rollback, or uninstall operation.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, removes an installation.
            </summary>
            <param name="savedState">An System.Collections.IDictionary that contains the state of the computer after the installation was complete.</param>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller">
            <summary>
            JobServiceInstaller for installing JobFrameworkAgent service.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.#ctor">
            <summary>
            Default constructor, initializes new instance of the JobFrameworkAgentInstaller by InstallUtil.exe.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobStepProxy">
            <summary>
            The JobStepProxy is the jobstep from the agent app domain that we can return to the client through
            remoting. It forwards all call to the JobStep from the job appdomain. This allows us to have a single
            network sink.
            </summary>    
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobStepProxy.Add(Microsoft.Webstore.JobEngine.IPartitionSet,Microsoft.Webstore.JobEngine.IPartitionSet)">
            <summary>
            Allows the Job Agent to add new partitions if it notices that there is
            currently a worker running of the same type.
            It is a performance optimization.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobStepProxy.AcceptAdd">
            <summary>
            If true, the Job Agent is allowed to pass in new partitions
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgent.CreateNewAsyncExecuteBatch(Microsoft.Webstore.JobEngine.IJobEngine,System.String,Microsoft.Webstore.JobEngine.Location,System.Int32,System.String,System.String,System.Version,System.Object,System.Boolean)">
            <summary>
            Create the ASyncExecuteBatch that will host the worker in the Job Agent machine
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgent.UpdateStatus(System.Int32,System.String)">
            <summary>
            Called by the worker to update status (human readable)
            This status ultimately gets logged to the jobDetails table
            in the jobStatus deployment
            </summary>
            <param name="batchId">JobAgent issues batchId</param>
            <param name="status"></param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgent.InitializeLifetimeService">
            <summary>
            Make the JobAgent lease eternal so that JobAgent doesn't get GCed
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobAgent.IsListenerInitialized">
            <summary>
            Has the listner for commands been initialized?
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgentService.OnStart(System.String[])">
            <summary>
            Set things in motion so your service can do its work.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgentService.OnStop">
            <summary>
            Stop this service.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\velocity\1.0.0.0\client\ClientLibrary.XML ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>ClientLibrary</name>
	</assembly>
	<members>
		<member name="N:Microsoft.Data.Caching">
			<summary>The <see cref="N:MIcrosoft.Data.Caching" /> namespace provides access to an in-memory application cache application for developing scalable, high-performance applications. This namespace can be used to cache any common language runtime (CLR) object and provides access through simple APIs.</summary>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCache">
			<summary>The object that is used by cache-enabled applications for storing and retrieving objects from the cache cluster. An instance of this object is referred to as the cache client. </summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object)">
			<summary>Adds an object to the cache.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Adds an object to the cache. This method enables associating tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="tags">An array of <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> objects to associate with the cached object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.String)">
			<summary>Adds an object to a region in the cache.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="region">The name of the region to save the object in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.TimeSpan)">
			<summary>Adds an object to the cache. This method provides the ability to specify when the object should be expired.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Adds an object to a region in the cache. This method enables associating tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="tags">An array of <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> objects to associate with the cached object.</param>
			<param name="region">The name of the region to save the object in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Adds an object to the cache. This method enables associating tags with the cached object and specifying when the object should be expired.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">An array of <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> objects to associate with the cached object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.TimeSpan,System.String)">
			<summary>Adds an object to a region in the cache. This method provides the ability to specify when the object should be expired.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="region">The name of the region to save the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Add(System.String,System.Object,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Adds an object to a region in the cache. This method enables associating tags with the cached object and specifying when the object should be expired.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">A unique value that is used to store and retrieve the object from the cache.</param>
			<param name="value">The object saved to the cache cluster.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">An array of <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> objects to associate with the cached object.</param>
			<param name="region">The name of the region to save the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.AddCacheLevelCallback(Microsoft.Data.Caching.DataCacheOperation,Microsoft.Data.Caching.DataCacheNotificationCallback)">
			<summary>Adds a cache notification callback for cache operations occurring on all regions and items.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object used to identify the cache notification callback. </returns>
			<param name="filter">The type of cache operation(s) that will trigger cache notifications.</param>
			<param name="clientCallback">The name of the method you want to invoke when these notifications occur.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.AddFailureNotificationCallback(Microsoft.Data.Caching.DataCacheFailureNotificationCallback)">
			<summary>Adds a failure notification callback, for notifications indicating that a client has missed one or more cache notifications.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object used to identify the cache notification callback.</returns>
			<param name="failureCallback">The name of the method that you want to invoke when the failure notification occurs.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.AddItemLevelCallback(System.String,Microsoft.Data.Caching.DataCacheOperation,Microsoft.Data.Caching.DataCacheNotificationCallback)">
			<summary>Adds a cache notification callback for cache operations occurring on one specific item that is not stored in a region.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object used to identify the cache notification callback.</returns>
			<param name="key">The key used to store the object in the cache.</param>
			<param name="filter">The type of cache operation(s) that will trigger cache notifications.</param>
			<param name="clientCallback">The name of the method you want to invoke when these notifications occur.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.AddItemLevelCallback(System.String,Microsoft.Data.Caching.DataCacheOperation,Microsoft.Data.Caching.DataCacheNotificationCallback,System.String)">
			<summary>Adds a cache notification callback for cache operations occurring on one specific item that is stored in region.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object used to identify the cache notification callback.</returns>
			<param name="key">The key used to store the object in the cache.</param>
			<param name="filter">The type of cache operation(s) that will trigger cache notifications.</param>
			<param name="clientCallback">The name of the method you want to invoke when these notifications occur.</param>
			<param name="regionName">The name of the region where the object is stored.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.AddRegionLevelCallback(System.String,Microsoft.Data.Caching.DataCacheOperation,Microsoft.Data.Caching.DataCacheNotificationCallback)">
			<summary>Adds a cache notification callback for cache operations occurring on one specific region.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object used to identify the cache notification callback.</returns>
			<param name="regionName">The name of the region for which the specified item or region operations can trigger cache notifications.</param>
			<param name="filter">The type of cache operation(s) that will trigger cache notifications.</param>
			<param name="clientCallback">The name of the method you want to invoke when these notifications occur.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.ClearRegion(System.String)">
			<summary>Deletes all objects in the specified region.</summary>
			<param name="region">The name of the region whose objects are removed.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.CreateRegion(System.String,System.Boolean)">
			<summary>Creates a region and specifies if resident objects may be evicted.</summary>
			<param name="region">The name of the region that is created.</param>
			<param name="evictionOn">True if objects in the region can be evicted.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Get(System.String)">
			<summary>Gets an object from the cache using the specified key.</summary>
			<returns>The object that was cached by using the specified key. Null is returned if the key does not exist.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Get(System.String,Microsoft.Data.Caching.DataCacheItemVersion@)">
			<summary>Gets an object from the cache using the specified key. You may also provide the version to obtain the specific version of a key, if that version is still the most current in the cache.</summary>
			<returns>The object that was cached by using the specified key. Null is returned if the key does not exist. Even if the key does exist, null may also be returned because the object has been updated to a new version.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="version">The version of the desired object. If this parameter is null, the version of the current object is retrieved.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Get(System.String,System.String)">
			<summary>Gets an object from the specified region by using the specified key.</summary>
			<returns>The object that was cached by using the specified key. Null is returned if the key does not exist.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Get(System.String,Microsoft.Data.Caching.DataCacheItemVersion@,System.String)">
			<summary>Gets an object from the specified region by using the specified key. You may also provide the version to obtain the specific version of a key, if that version is still the most current in the region.</summary>
			<returns>The object that was cached by using the specified key. Null is returned if the key does not exist. Even if the key does exist, null may also be returned because the object has been updated to a new version.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="version">The version of the desired object. If this parameter is null, the version of the current object is retrieved.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetAndLock(System.String,System.TimeSpan,Microsoft.Data.Caching.DataCacheLockHandle@)">
			<summary>Returns and locks the cached object (if present).</summary>
			<returns>The object that was cached by using the specified key. Null is returned if the object has already been locked or the key does not exist.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="timeout">A non-zero value indicating how many minutes the object remains locked.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object required to unlock the object. The lockHandle output parameter is passed by reference.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetAndLock(System.String,System.TimeSpan,Microsoft.Data.Caching.DataCacheLockHandle@,System.String)">
			<summary>Returns and locks the cached object (if present). For objects stored in regions.</summary>
			<returns>The object that was cached by using the specified key. Null is returned if the object has already been locked or the key does not exist.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="timeout">A non-zero value indicating how many minutes the object remains locked.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object required to unlock the object. The lockHandle output parameter is passed by reference.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetCacheItem(System.String)">
			<summary>Gets a <see cref="T:Microsoft.Data.Caching.DataCacheItem" /> object to retrieve all information associated with your cached object in the cluster.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItem" /> object that contains all information associated with your cached object. Null is returned if the key does not exist.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetCacheItem(System.String,System.String)">
			<summary>Gets a <see cref="T:Microsoft.Data.Caching.DataCacheItem" /> object to retrieve all information associated with your cached object in the cluster. For objects stored in regions.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItem" /> object that contains all information associated with your cached object. Null is returned if the key does not exist.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetIfNewer(System.String,Microsoft.Data.Caching.DataCacheItemVersion@)">
			<summary>Gets an object from the cache, but only if a newer version of the object resides in the cache.</summary>
			<returns>If the version in the cache differs from the version parameter, the corresponding cached object is returned. If the version in the cache is the same as the version parameter, null is returned.</returns>
			<param name="key">The unique value that is used to identify the object in the cache. If this parameter is null, an exception is thrown.</param>
			<param name="version">The version of the desired object, passed by reference. If this parameter is null, an exception is thrown.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetIfNewer(System.String,Microsoft.Data.Caching.DataCacheItemVersion@,System.String)">
			<summary>Gets an object from the specified region, but only if a newer version of the object resides in the region. </summary>
			<returns>If the version in the region differs from the version parameter, the corresponding cached object is returned. If the version in the region is the same as the version parameter, null is returned.</returns>
			<param name="key">The unique value that is used to identify the object in the cache. If this parameter is null, an exception is thrown.</param>
			<param name="version">The version of the desired object, passed by reference. If this parameter is null, an exception is thrown.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetObjectsByAllTags(System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Gets an enumerable list of all cached objects in the specified region that have all the same tags in common.</summary>
			<returns>An enumerable list of all cached objects in the specified region that have all the same tags in common. Null is returned if no objects in the specified region have all the tags specified.</returns>
			<param name="tags">A list of tags for which to search.</param>
			<param name="region">The name of the region to search. Tags are not supported outside regions. Therefore, a region name is required.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetObjectsByAnyTag(System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Gets an enumerable list of all cached objects in the specified region that have any of the same tags in common.</summary>
			<returns>An enumerable list of all cached objects in the specified region that have any of the same tags in common. Null is returned if no objects in the specified region have any of the tags specified.</returns>
			<param name="tags">A list of tags for which to search.</param>
			<param name="region">The name of the region to search. Tags are not supported outside regions. Therefore, a region name is required.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetObjectsByTag(Microsoft.Data.Caching.DataCacheTag,System.String)">
			<summary>Gets an enumerable list of all cached objects in the specified region that have the specified tag.</summary>
			<returns>An enumerable list of all cached objects in the specified region that have the specified tag. Null is returned if no objects in the specified region have the tag specified.</returns>
			<param name="tag">The tag for which to search.</param>
			<param name="region">The name of the region to search. Tags are not supported outside regions. Therefore, a region name is required.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.GetObjectsInRegion(System.String)">
			<summary>Gets an enumerable list of all cached objects in the specified region.</summary>
			<returns>An enumerable list of all cached objects in the specified region.</returns>
			<param name="region">The name of the region for which to return a list of all resident objects.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object)">
			<summary>Adds or replaces an object in the cache. </summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion)">
			<summary>Adds or replaces an object in the cache if it is at the specified version.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Adds or replaces an object in the cache. Associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="tags">A list of tags to associate with the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.String)">
			<summary>Adds or replaces an object in the specified region.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.TimeSpan)">
			<summary>Adds or replaces an object in the cache. Specifies the timeout value of the cached object. </summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Adds or replaces an object in the cache if it is at the specified version. Associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="tags">A list of tags to associate with the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.String)">
			<summary>Adds or replaces an object in the specified region if it is at the specified version.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.TimeSpan)">
			<summary>Adds or replaces an object in the cache if it is at the specified version. Specifies the timeout value of the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Adds or replaces an object in the specified region. Associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="tags">A list of tags to associate with the object.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Adds or replaces an object in the cache. Specifies the timeout value and associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">A list of tags to associate with the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.TimeSpan,System.String)">
			<summary>Adds or replaces an object in the specified region. Specifies the timeout value of the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Adds or replaces an object in the specified region if it is at the specified version. Associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="tags">A list of tags to associate with the object.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Adds or replaces an object in the cache if it is at the specified version. Specifies the timeout value and associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">A list of tags to associate with the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.TimeSpan,System.String)">
			<summary>Adds or replaces an object in the specified region if it is at the specified version. Specifies the timeout value of the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Adds or replaces an object in the specified region. Specifies the timeout value and associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">A list of tags to associate with the object.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Put(System.String,System.Object,Microsoft.Data.Caching.DataCacheItemVersion,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Adds or replaces an object in the specified region if it is at the specified version. Specifies the timeout value and associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the object saved to the cache under the key value.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="oldVersion">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be replaced.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">A list of tags to associate with the object.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle)">
			<summary>Replaces and unlocks an object in the cache.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Replaces and unlocks an object in the cache. Associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="tags">A list of tags to associate with the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.String)">
			<summary>Replaces and unlocks an object in the specified region.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.TimeSpan)">
			<summary>Replaces and unlocks an object in the cache. Specifies the timeout value of the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Replaces and unlocks an object in the specified region. Associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="tags">A list of tags to associate with the object.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag})">
			<summary>Replaces and unlocks an object in the cache. Specifies the timeout value and associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the cache.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">A list of tags to associate with the object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.TimeSpan,System.String)">
			<summary>Replaces and unlocks an object in the specified region. Specifies the timeout value of the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.The timeout value associated with the cached object overrides expiration settings specified in the named cache configuration. For more information, see Expiration and Eviction (Velocity).</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.PutAndUnlock(System.String,System.Object,Microsoft.Data.Caching.DataCacheLockHandle,System.TimeSpan,System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheTag},System.String)">
			<summary>Replaces and unlocks an object in the specified region. Specifies the timeout value and associates tags with the cached object.</summary>
			<returns>A <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object after it has been updated by this method. If the lockHandle parameter is not equal to the <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object obtained from the method that is used to lock the object, null is returned and the object is not updated.</returns>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="value">The object to add or replace.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="tags">A list of tags to associate with the object.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Remove(System.String)">
			<summary>Removes an object from the cache.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Remove(System.String,Microsoft.Data.Caching.DataCacheItemVersion)">
			<summary>Removes an object from the cache if it is at the specified version.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="version">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be removed.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Remove(System.String,System.String)">
			<summary>Removes an object from the specified region.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Remove(System.String,Microsoft.Data.Caching.DataCacheItemVersion,System.String)">
			<summary>Removes an object from the specified region if it is at the specified version.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="version">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object that represents the version of the cached object that is to be removed.</param>
			<param name="region">The name of the region the object resides in.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.RemoveCallback(Microsoft.Data.Caching.DataCacheNotificationDescriptor)">
			<summary>Removes a cache notification callback.</summary>
			<param name="nd">The <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object that identifies the callback that should be removed.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.RemoveRegion(System.String)">
			<summary>Deletes a region. All cached objects inside the region are also removed.</summary>
			<param name="region">The name of the region.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.ResetObjectTimeout(System.String,System.TimeSpan)">
			<summary>Resets the object timeout value, defining how long objects reside in the cache before expiring. The value specified for the object overrides the default settings for the cache.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="newTimeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.ResetObjectTimeout(System.String,System.TimeSpan,System.String)">
			<summary>Resets the object timeout value, defining how long objects reside in the region before expiring. The value specified for the object overrides the default settings for the cache.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="newTimeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Unlock(System.String,Microsoft.Data.Caching.DataCacheLockHandle)">
			<summary>Releases objects locked in the cache. This method supports pessimistic concurrency by making sure that the appropriate <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> is used for unlocking the object.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Unlock(System.String,Microsoft.Data.Caching.DataCacheLockHandle,System.String)">
			<summary>Releases objects locked in the specified region. This method supports pessimistic concurrency by making sure that the appropriate <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> is used for unlocking the object.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Unlock(System.String,Microsoft.Data.Caching.DataCacheLockHandle,System.TimeSpan)">
			<summary>Releases objects locked in the cache. This method supports pessimistic concurrency by making sure that the appropriate <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> is used for unlocking the object. Specifies a new timeout value for the cached object.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCache.Unlock(System.String,Microsoft.Data.Caching.DataCacheLockHandle,System.TimeSpan,System.String)">
			<summary>Releases objects locked in the specified region. This method supports pessimistic concurrency by making sure that the appropriate <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> is used for unlocking the object. Specifies a new timeout value for the cached object.</summary>
			<param name="key">The unique value that is used to identify the object in the region.</param>
			<param name="lockHandle">The <see cref="T:Microsoft.Data.Caching.DataCacheLockHandle" /> object that was returned when the object was locked.</param>
			<param name="timeout">A non-zero value that is used to specify how many minutes the object should reside in the cache before expiration.</param>
			<param name="region">The name of the region where the object resides.</param>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCache.Item(System.String)">
			<summary>Allows for the use of array notation to access cached objects.</summary>
			<returns>A deserialized object that was saved to the cache cluster that uses the key.</returns>
			<param name="key">The key that is used to save the cached object.</param>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheFactory">
			<summary>Provides methods to return <see cref="T:Microsoft.Data.Caching.DataCache" /> objects that are mapped to a named cache. This class also enables programmatic configuration of the cache client.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.#ctor">
			<summary>Used for configuring a cache client based on the application configuration file.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.#ctor(Microsoft.Data.Caching.DataCacheServerEndpoint[],System.Boolean,System.Boolean)">
			<summary>Used for configuring a cache client programmatically, based on the parameter values provided.</summary>
			<param name="servers">The cache host configuration for the cache client, for an array of <see cref="T:Microsoft.Data.Caching.DataCacheServerEndpoint" /> objects.</param>
			<param name="routingClient">True when the <see cref="M:Microsoft.Data.Caching.DataCacheFactory.GetCache(System.String)" /> method returns routing clients; otherwise, it returns simple clients.</param>
			<param name="localCache">True when local cache is enabled on the cache client; otherwise, local cache is disabled.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.#ctor(Microsoft.Data.Caching.DataCacheServerEndpoint[],System.Boolean,System.Boolean,Microsoft.Data.Caching.DataCacheLocalCacheSyncPolicy,System.Int32,System.Int32)">
			<summary>Used for configuring a cache client programmatically, based on the parameter values provided. Additional parameters provided for working with cache notifications.</summary>
			<param name="servers">The cache host configuration for the cache client, for an array of <see cref="T:Microsoft.Data.Caching.DataCacheServerEndpoint" /> objects.</param>
			<param name="routingClient">True when the <see cref="M:Microsoft.Data.Caching.DataCacheFactory.GetCache(System.String)" /> method returns routing clients; otherwise, it returns simple clients.</param>
			<param name="localCache">True when local cache is enabled on the cache client; otherwise, local cache is disabled.</param>
			<param name="syncPolicy">Specifies the way locally cached objects should be invalidated, as defined by the <see cref="T:Microsoft.Data.Caching.LocalCacheSyncPolicy" /> enumeration.</param>
			<param name="localCacheTimeout">The number of seconds that objects will remain in local cache before they are invalidated. Not applicable to notification-based invalidation. For more information, see Expiration and Eviction (Velocity).</param>
			<param name="pollInterval">The interval, in seconds, in which the cache client checks with the cache cluster for new notifications. Default value is 300 seconds. For more information, see Cache Notifications (Velocity).</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.CreateLogSinks(System.Collections.Generic.List{Microsoft.Data.Caching.DataCacheLogSink})">
			<summary>Allows you to set the log levels on one or more log sinks for the cache client.</summary>
			<param name="sinkList">Log level settings for one or more log sinks.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.DisableLogSinks">
			<summary>Disables all log sinks on the cache client.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.Dispose">
			<summary>Closes the <see cref="T:Microsoft.Data.Caching.DataCacheFactory" /> object and releases all associated resources.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.EnableAllAvailableSinks">
			<summary>Enables all available log sinks on the cache client, with the EventTrace level equal to Warning.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.GetCache(System.String)">
			<summary>Returns the cache client, an instance of the <see cref="T:Microsoft.Data.Caching.DataCache" /> object.</summary>
			<returns>The cache client, an instance of the <see cref="T:Microsoft.Data.Caching.DataCache" /> object.</returns>
			<param name="cacheName">The named cache to use for cache operations.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheFactory.GetDefaultCache">
			<summary>Returns the cache client corresponding to the default cache; an instance of the <see cref="T:Microsoft.Data.Caching.DataCache" /> object.</summary>
			<returns>The cache client, an instance of the <see cref="T:Microsoft.Data.Caching.DataCache" /> object.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheFactory.Timeout">
			<summary>The duration of time, in milliseconds, that the cache client will wait to communicate with the cache cluster before it throws a timeout exception.</summary>
			<returns>A System.Timespan object that represents the duration of time, in milliseconds, that the cache client will wait to communicate with the cache cluster before it throws a timeout exception.</returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheFailureNotificationCallback">
			<summary>Specifies the parameters required for a method to be invoked by a failure notification when the cache client misses cache notifications. </summary>
			<param name="cacheName">The name of the cache associated with the missing notifications.</param>
			<param name="nd">The <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object associated with the failure notification that invoked the delegate method.</param>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheLocalCacheSyncPolicy">
			<summary>Specifies the way locally cached objects should be invalidated.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheLocalCacheSyncPolicy.NotificationBased">
			<summary>Specifies that objects will stay in local cache until they are automatically invalidated by a cache notification.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheLocalCacheSyncPolicy.TimeoutBased">
			<summary>Specifies that objects will stay in local cache until their lifetime reaches the localCacheTimeout duration specified in the <see cref="Overload:Microsoft.Data.Caching.DataCacheCacheFactory.#ctor" /> constructor.</summary>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheNotificationCallback">
			<summary>Specifies the parameters required for a method to be invoked by a cache notification.</summary>
			<param name="CacheName">The name of the cache associated with the cache operation.</param>
			<param name="regionName">The name of the region associated with the cache operation. A zero-length string indicates that a specific region is not associated with the cache operation.</param>
			<param name="key">The name of the key associated with the cache operation. A zero-length string indicates that a specific cached item is not associated with the cache operation.</param>
			<param name="version">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> of the cached object associated with the cache operation that triggered the notification. A null version indicates that a specific cached item is not associated with the cache operation.</param>
			<param name="cacheOperation">The <see cref="T:Microsoft.Data.Caching.DataCacheOperation" /> enumeration specifying which cache event triggered the cache notification.</param>
			<param name="nd">The <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object associated with the cache notification that invoked the delegate method.</param>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor">
			<summary>Identifies a cache notification callback. This identifier is required to remove the corresponding cache notification callback.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheNotificationDescriptor.ToString">
			<summary>Creates a copy of the <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object.</summary>
			<returns>A string value representing the <see cref="P:Microsoft.Data.Caching.DataCacheNotificationDescriptor.CacheName" /> and <see cref="P:Microsoft.Data.Caching.DataCacheNotificationDescriptor.DelegateID" /> property values.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheNotificationDescriptor.CacheName">
			<summary>he name of the cache triggering the cache notification.</summary>
			<returns>A string value represents the name of the cache triggering the cache notification.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheNotificationDescriptor.DelegateID">
			<summary>Identifier for the <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> object. Used to distinguish between <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> objects.</summary>
			<returns>A System.Int64 value used to identify <see cref="T:Microsoft.Data.Caching.DataCacheNotificationDescriptor" /> objects.</returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheOperation">
			<summary>An enumeration used to specify specific item or region events that can trigger a cache notification.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheOperation.AddItem">
			<summary>Indicates that an object was added to the cache.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheOperation.ClearRegion">
			<summary>Indicates that a region in the cache was cleared with the <see cref="M:Microsoft.Data.Caching.DataCache.ClearRegion(System.String)" /> method.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheOperation.CreateRegion">
			<summary>Indicates that a region in the cache was created with the <see cref="M:Microsoft.Data.Caching.DataCache.CreateRegion(System.String,System.Boolean)" /> method.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheOperation.RemoveItem">
			<summary>Indicates that an object was removed from the cache.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheOperation.RemoveRegion">
			<summary>Indicates that a region in the cache was removed with the <see cref="M:Microsoft.Data.Caching.DataCache.RemoveRegion(System.String)" /> method.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheOperation.ReplaceItem">
			<summary>Indicates that an object was replaced in the cache.</summary>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheServerEndpoint">
			<summary>Used to specify an individual cache host when programmatically configuring the cache client.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheServerEndpoint.#ctor(System.String,System.Int32,System.String)">
			<summary>Used to define a cache host in the cache cluster for programmatic configuration of the cache client.</summary>
			<param name="hostName">The computer name of the cache server.</param>
			<param name="cachePort">The cache port number of the cache host.</param>
			<param name="cacheHostName">The Windows service name of the cache host service that is running on the cache server.</param>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheServerEndpoint.CacheHostName">
			<summary>The Windows service name of the cache host service that is  running on the cache server.</summary>
			<returns>A string representing the Windows service name of the cache host service that is running on the cache server. The installation default value is DistributedCacheService.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheServerEndpoint.CachePort">
			<summary>The cache port on the cache server.</summary>
			<returns>A System.Int32 value that represents the cache port number on the cache server.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheServerEndpoint.HostName">
			<summary>The computer name of the cache server.</summary>
			<returns>A string representing the computer name of the cache server.</returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheSessionStoreProvider">
			<summary>A session storage provider that enables Web applications to store session-state data to a distributed cache system.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.#ctor">
			<summary>Initializes a new instance of the <see cref="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider" /> class.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.CreateNewStoreData(System.Web.HttpContext,System.Int32)">
			<summary>Creates a new data storage object for the current request.</summary>
			<returns>A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object, used for storing session data in the distributed cache.</returns>
			<param name="context">The HttpContext for the current request.</param>
			<param name="timeout">The session state Timeout value for the new <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)">
			<summary>Adds a new session state to the distributed cache.</summary>
			<param name="context">The HttpContext for the current request.</param>
			<param name="id">The session identifier for the current request.</param>
			<param name="timeout">The session Timeout for the current request.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.Dispose">
			<summary>Releases all resources used by the <see cref="T:Microsoft.Data.Caching.DataCacheSessionStoreProvider" /> class.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.EndRequest(System.Web.HttpContext)">
			<summary>Called by the <see cref="T:System.Web.SessionState.SessionStateModule" /> class at the end of a request.</summary>
			<param name="context">The HttpContext for the current request.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)">
			<summary>Returns read-only session-state data from the cache.</summary>
			<returns>A SessionStateStoreData object populated with session values and information from the cache.</returns>
			<param name="context">The HttpContext of the current request.</param>
			<param name="id">The session identifier for the current request.</param>
			<param name="locked">When this method returns, contains a Boolean value that is set to true if the requested session item is locked in the cache; otherwise, false.</param>
			<param name="lockAge">When this method returns, contains a TimeSpan object that is set to the period of time that an item in the cache has been locked.</param>
			<param name="lockId">When this method returns, contains an object that is set to the lock identifier for the current request. </param>
			<param name="actions">When this method returns, contains one of the SessionStateActions values. This indicates whether the current session is an uninitialized, cookieless session.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)">
			<summary>Returns and locks the read-only session-state data from the cache. </summary>
			<returns>A SessionStateStoreData object populated with session values and information from the cache.</returns>
			<param name="context">The HttpContext of the current request.</param>
			<param name="id">The session identifier for the current request.</param>
			<param name="locked">When this method returns, contains a Boolean value that is set to true if a lock in the cache is successfully obtained; otherwise, false.</param>
			<param name="lockAge">When this method returns, contains a TimeSpan object that is set to the period of time that an item in the cache has been locked.</param>
			<param name="lockId">When this method returns, contains an object that is set to the lock identifier for the current request. </param>
			<param name="actions">When this method returns, contains one of the SessionStateActions values. This indicates whether the current session is an uninitialized, cookieless session.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
			<summary>Initializes the distributed cache provider.</summary>
			<param name="name">The name of the application.</param>
			<param name="config">The configuration details specified in the application configuration file for cacheName and regionName.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.InitializeRequest(System.Web.HttpContext)">
			<summary>Called by the SessionStateModule object for per-request initialization.</summary>
			<param name="context">The HttpContext for the current request.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)">
			<summary>Releases a lock on the session data in the cache.</summary>
			<param name="context">The HttpContext of the current request.</param>
			<param name="id">The session identifier of the current request.</param>
			<param name="lockId">The lock identifier of the current request.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)">
			<summary>Deletes session data from the cache.</summary>
			<param name="context">The HttpContext of the current request.</param>
			<param name="id">The session identifier of the current request.</param>
			<param name="lockId">The lock identifier of the current request.</param>
			<param name="item">The SessionStateStoreData that represents the item to delete from the cache.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.ResetItemTimeout(System.Web.HttpContext,System.String)">
			<summary>Updates the expiration date and time of session data in the cache.</summary>
			<param name="context">The HttpContext of the current request.</param>
			<param name="id">The session identifier of the current request.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)">
			<summary>Updates the session item information in the cache with values from the current request and clears the lock on the session item.</summary>
			<param name="context">The HttpContext of the current request.</param>
			<param name="id">The session identifier of the current request.</param>
			<param name="item">The SessionStateStoreData object that contains the current session values to be stored.</param>
			<param name="lockId">The lock identifier for the current request.</param>
			<param name="newItem">If true, identifies the session item as a new item if true; otherwise, identifies the session item as an existing item.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheSessionStoreProvider.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)">
			<summary>Sets a reference to the SessionStateItemExpireCallback delegate for the Session_OnEnd event defined in the Global.asax file.</summary>
			<returns>Cache does not support notification of the expiration; therefore this method always returns false.</returns>
			<param name="expireCallback">The SessionStateItemExpireCallback delegate for the Session_OnEnd event defined in the Global.asax file.</param>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheSessionStoreProvider.ApplicationName">
			<summary>The name of the application, used to differentiate sessions in the cache cluster.</summary>
			<returns>A string value that represents the name of the application that uses the distributed cache to store session state.</returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\velocity\1.0.0.0\client\CacheBaseLibrary.XML ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>CacheBaseLibrary</name>
	</assembly>
	<members>
		<member name="T:Microsoft.Data.Caching.DataCacheErrorCode">
			<summary>A static class used to store global error codes.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.CacheItemVersionMismatch">
			<summary>The object in the cache does not match with the specified version; integer value equals 1.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.CacheServerUnavailable">
			<summary>One or more specified cache servers are unavailable; integer value equals 19.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.ClientServerVersionMismatch">
			<summary>The cache client assemblies are a different version than the cache host assemblies; integer value equals 24.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.InvalidArgument">
			<summary>The argument is not valid; integer value equals 5.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.InvalidCacheLockHandle">
			<summary>The specified lock handle is not valid; integer value equals 15.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.InvalidEnumerator">
			<summary>An invalid enumerator is specified; integer value equals 16.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.KeyAlreadyExists">
			<summary>The key is already present in the cache or region; integer value equals 10.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.KeyDoesNotExist">
			<summary>An object cached with the specified key does not exist in the cache or region; integer value equals 8.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.MaxNamedCacheCountExceeded">
			<summary>The named cache count exceeded the maximum value; integer value equals 12.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.NamedCacheDoesNotExist">
			<summary>The named cache does not exist; integer value equals 11.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.NotificationNotSupported">
			<summary>Cache notifications are not supported because the cache client is a simple client or the named cache has been created without notifications enabled; integer value equals 20.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.NotPermittedForDefaultRegions">
			<summary>The operation is only supported in regions that you explicitly create with the <see cref="M:Microsoft.Data.Caching.DataCache.CreateRegion(System.String,System.Boolean)" /> method; integer value equals 18.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.NullArgument">
			<summary>A null has been specified as an argument; integer value equals 3.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.ObjectLocked">
			<summary>The cached object has already been locked; integer value equals 13.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.ObjectNotLocked">
			<summary>The object is not locked; integer value equals 14.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.RegionAlreadyExists">
			<summary>The region already exists; integer value equals 9.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.RegionDoesNotExist">
			<summary>The region does not exist; integer value equals 7.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.RetryLater">
			<summary>Temporary failure, retry the operation later; integer value equals 22.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.SerializationException">
			<summary>An exception was encountered during object serialization; integer value equals 25.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.ServerNull">
			<summary>The servers parameter of the <see cref="Overload:Microsoft.Data.Caching.DataCacheFactory.#ctor" /> constructor or one of the items in the array is null; integer value equals 26.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.Timeout">
			<summary>Communications with the cache cluster have experienced a delay past the timeout value; integer value equals 23.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheErrorCode.UndefinedError">
			<summary>Unknown error; integer value equals 6. </summary>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheException">
			<summary>Used for cache-related exceptions.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Caching.DataCacheException" /> class.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Caching.DataCacheException" /> class; allows you to provide a message with the exception.</summary>
			<param name="message">The message describing the exception.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Caching.DataCacheException" /> class; allows you to provide serialization information with the exception.</summary>
			<param name="info">Stores serialization information about an object.</param>
			<param name="context">Describes the source, destination, and context of a serialized stream.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Caching.DataCacheException" /> class; allows you to provide a message and another exception with the exception.</summary>
			<param name="message">The message describing the exception.</param>
			<param name="innerException">Another exception related to this exception.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>The interface that is used for serialization.</summary>
			<param name="info">The SerializationInfo class used to store all the data that you need to serialize the exception.</param>
			<param name="context">The StreamingContext class used to describe the source and destination of the exception.</param>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheException.ErrorCode">
			<summary>The integer used to identify the type of exception encountered.</summary>
			<returns>An integer specifying the type of exception encountered.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheException.Message">
			<summary>The description of the exception encountered.</summary>
			<returns>A string that describes the type of exception encountered.</returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheItem">
			<summary>Used to retrieve all information associated with the cached object in the cluster.</summary>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheItem.CacheName">
			<summary>The name of the cache where the object is stored.</summary>
			<returns>A string value that represents the name of the cache where the object is stored.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheItem.Key">
			<summary>The identifier that is used to distinguish the cached object in the cache or region.</summary>
			<returns>A string value that represents the identifier that is used to distinguish the cached object in the cache or region.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheItem.RegionName">
			<summary>If applicable, the name of the region where the object is stored.</summary>
			<returns>A string value that represents, if applicable, the name of the region where the object is stored.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheItem.Tags">
			<summary>A generic list of tags associated with the cached object.</summary>
			<returns>An generic list of <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> objects associated with the cached object.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheItem.Value">
			<summary>The object stored in cache.</summary>
			<returns>An object representing the deserialized form of the cached object.</returns>
		</member>
		<member name="P:Microsoft.Data.Caching.DataCacheItem.Version">
			<summary>The version of the cached object.</summary>
			<returns>The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> is updated every time the object is updated. Only the latest version of the object is stored on the cache cluster. Due to the distributed nature of the cluster, the cache client may not have the latest copy of the object. For this reason, the <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> class is essential for concurrency operations. For more information, see Concurrency Models (Velocity) and Concurrency Methods (Velocity).When using cache notifications, the <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object corresponding to an item-related cache operation can be returned to your application with the version parameter of the <see cref="T:Microsoft.Data.Caching.DataCacheNotificationCallback" /> delegate method. For more information, see <see cref="Cache Notifications (Velocity)" />.Version comparisons are only meaningful when comparing versions of the same item specified with the same key. Comparison methods may return a result, but the result is only valid for versions of the same key. </returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheItemVersion">
			<summary>Used to represent the version of a cached object.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheItemVersion.CompareTo(Microsoft.Data.Caching.DataCacheItemVersion)">
			<summary>Used to compare two versions of the same item, specified with the same key.</summary>
			<returns>An integer value: 0 if the versions are equal, greater than zero if the instance is greater than the version parameter value, or less than zero if the instance is less than the version parameter value.</returns>
			<param name="version">The <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> to be compared.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheItemVersion.Equals(System.Object)">
			<summary>Used to determine whether another object is the same.</summary>
			<returns>A Boolean value: true, if the objects are the same; false, if they are different.</returns>
			<param name="obj">Another object for comparison.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheItemVersion.GetHashCode">
			<summary>Returns the hash code of the <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object.</summary>
			<returns>An integer value that represents the hash code of the <see cref="T:Microsoft.Data.Caching.DataCacheItemVersion" /> object. </returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheLockHandle">
			<summary>The structure used as a key to lock and unlock cached objects in a pessimistic concurency scenario.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheLockHandle.ToString">
			<summary>Returns the string representation of the lock handle.</summary>
			<returns>A string representing the lock handle.</returns>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheLogSink">
			<summary>Used to specify an individual log sink.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheLogSink.#ctor(Microsoft.Data.Caching.DataCacheSinkType)">
			<summary>Defines the type of log sink and assigns a TraceLevel of Warning.</summary>
			<param name="sinkType">The type of log sink, represented by the <see cref="T:Microsoft.Data.Caching.DataCacheSinkType" /> enumeration.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheLogSink.#ctor(Microsoft.Data.Caching.DataCacheSinkType,System.Diagnostics.TraceLevel)">
			<summary>Defines the type of log sink and assigns the specified TraceLevel.</summary>
			<param name="sinkType">The type of log sink, represented by the <see cref="T:Microsoft.Data.Caching.DataCacheSinkType" /> enumeration.</param>
			<param name="logLevel">The TraceLevel of the log sink, represented by the <see cref="T:System.Diagnostics.TraceLevel" /> enumeration. Available options include: No tracing, Error, Warning, Information, and Verbose.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheLogSink.#ctor(Microsoft.Data.Caching.DataCacheSinkType,System.Diagnostics.TraceLevel,System.String)">
			<summary>Defines the type of log sink and assigns the specified TraceLevel. This overload also enables setting additional log sink parameters.</summary>
			<param name="sinkType">The type of log sink, represented by the <see cref="T:Microsoft.Data.Caching.DataCacheSinkType" /> enumeration.</param>
			<param name="logLevel">The TraceLevel of the log sink, represented by the <see cref="T:System.Diagnostics.TraceLevel" /> enumeration. Available options include: No tracing, Error, Warning, Information, and Verbose.</param>
			<param name="sinkParam">Only used for file-based logging to specify the file naming convention of the log file.</param>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheSinkType">
			<summary>Used to specify the type of log sink used to trace events on the cache client.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheSinkType.CONSOLE">
			<summary>Used to specify console-based log sinks. </summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheSinkType.ETW">
			<summary>Used to specify Event Tracing for Windows (ETW)-based log sinks.</summary>
		</member>
		<member name="F:Microsoft.Data.Caching.DataCacheSinkType.FILE">
			<summary>Used to specify file-based log sinks.</summary>
		</member>
		<member name="T:Microsoft.Data.Caching.DataCacheTag">
			<summary>Represents an optional string-based identifier that you can associate with a cached object.</summary>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheTag.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> class.</summary>
			<param name="tag">The string-based identifier to associate with a cached object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheTag.Equals(System.Object)">
			<summary>Compares the current <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object for equality with the specified <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object.</summary>
			<returns>True if the object implements the ToString method and its value is the same as the string representation of the current <see cref="T:Microsoft.Data.Caching.DataCacheTag" />; otherwise, false.</returns>
			<param name="obj">The object whose string representation is compared for equality to the current <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object.</param>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheTag.GetHashCode">
			<summary>Returns the hash code for the current <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object.</summary>
			<returns>An integer representing the hash code for the current <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object.</returns>
		</member>
		<member name="M:Microsoft.Data.Caching.DataCacheTag.ToString">
			<summary>Returns the string representation of the current <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object.</summary>
			<returns>A string representing the current value of the <see cref="T:Microsoft.Data.Caching.DataCacheTag" /> object. </returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\Microsoft.WstSqlStub.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WstSqlStub</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.Data.Common.DbDataAdapter">
            <summary>
            Aids implementation of the Microsoft.Webstore.Data.IDbDataAdapter interface. Inheritorsof Microsoft.Webstore.Data.Common.DbDataAdapter implement a set of functions to providestrong typing, but inherit most of the functionality needed to fully implementa DataAdapter.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatedEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow used to update the data source.</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand executed during the Microsoft.Webstore.Data.IDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
            <param name="tableMapping">A Microsoft.Webstore.Data.Common.DataTableMapping object.</param>
            <returns>A new instance of the Microsoft.Webstore.Data.Common.RowUpdatedEventArgs class.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatingEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow that updates the data source.</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand to execute during the Microsoft.Webstore.Data.IDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
            <param name="tableMapping">A Microsoft.Webstore.Data.Common.DataTableMapping object.</param>
            <returns>A new instance of the Microsoft.Webstore.Data.Common.RowUpdatingEventArgs class.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.OnRowUpdated(Microsoft.Webstore.Data.Common.RowUpdatedEventArgs)">
            <summary>
            Raises the RowUpdated event of a .NET Framework data provider.
            </summary>
            <param name="value">A Microsoft.Webstore.Data.Common.RowUpdatedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.OnRowUpdating(Microsoft.Webstore.Data.Common.RowUpdatingEventArgs)">
            <summary>
            Raises the RowUpdating event of a .NET Framework data provider.
            </summary>
            <param name="value">An Microsoft.Webstore.Data.Common.DbRowUpdatingEventArgs that contains the event data.</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.DeleteCommand">
            <summary>
            Gets or sets a command for deleting records from the data set.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.InsertCommand">
            <summary>
            Gets or sets a command used to insert new records into the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.SelectCommand">
            <summary>
            Gets or sets a command used to select records in the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.UpdateCommand">
            <summary>
            Gets or sets a command used to update records in the data source.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DbDataReader">
            <summary>
            Reads a forward-only stream of rows from a data source.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDataReader">
            <summary>
            Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataReader.Dispose">
            <summary>
            Releases the resources consumed by this Microsoft.Webstore.Data.Common.DbDataReader.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataReader.GetData(System.Int32)">
            <summary>
            Returns a Microsoft.Webstore.Data.Common.DbDataReader object for the requested column ordinal.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.Common.DbDataReader object.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DbTransaction">
            <summary>
            The base class for a transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbTransaction">
            <summary>
            Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbTransaction.Connection">
            <summary>
            Specifies the Connection object to associate with the transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbTransaction.Dispose">
            <summary>
            Releases the unmanaged resources used by the Microsoft.Webstore.Data.Common.DbTransaction.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbTransaction.Connection">
            <summary>
            Specifies the Microsoft.Webstore.Data.Common.DbConnection object associated with the transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.CommandType">
            <summary>
            Specifies how a command string is interpreted.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandType.Text">
            <summary>
            An SQL text command. (Default.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandType.StoredProcedure">
            <summary>
            The name of a stored procedure.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandType.TableDirect">
            <summary>
            The name of a table.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.CommandBehavior">
            <summary>
            Provides a description of the results of the query and its effect on the database.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.Default">
            <summary>
            The query may return multiple result sets. Execution of the query may effect the database state. Default sets no Microsoft.Webstore.Data.CommandBehavior flags, so calling ExecuteReader(CommandBehavior.Default) is functionally equivalent to calling ExecuteReader().
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SingleResult">
            <summary>
            The query returns a single result set.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SchemaOnly">
            <summary>
            The query returns column information only. When using Microsoft.Webstore.Data.CommandBehavior.SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.KeyInfo">
            <summary>
            The query returns column and primary key information.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SingleRow">
            <summary>
            The query is expected to return a single row. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify Microsoft.Webstore.Data.CommandBehavior.SingleRow with the Microsoft.Webstore.Data.OleDb.OleDbCommand.ExecuteReader() method of the Microsoft.Webstore.Data.OleDb.OleDbCommand object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB IRow interface if it is available. Otherwise, it uses the IRowset interface. If your SQL statement is expected to return only a single row, specifying Microsoft.Webstore.Data.CommandBehavior.SingleRow can also improve application performance. It is possible to specify SingleRow when executing queries that return multiple result sets. In that case, multiple result sets are still returned, but each result set has a single row.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SequentialAccess">
            <summary>
            Provides a way for the DataReader to handle rows that contain columns with large binary values. Rather than loading the entire row, SequentialAccess enables the DataReader to load data as a stream. You can then use the GetBytes or GetChars method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.CloseConnection">
            <summary>
            When the command is executed, the associated Connection object is closed when the associated DataReader object is closed.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.ConnectionState">
            <summary>
            Describes the current state of the connection to a data source.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Closed">
            <summary>
            The connection is closed.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Open">
            <summary>
            The connection is open.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Connecting">
            <summary>
            The connection object is connecting to the data source. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Executing">
            <summary>
            The connection object is executing a command. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Fetching">
            <summary>
            The connection object is retrieving data. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Broken">
            <summary>
            The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.) 
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IsolationLevel">
            <summary>
                Specifies the transaction locking behavior for the connection.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Unspecified">
            <summary>
                A different isolation level than the one specified is being used, but the level cannot be determined.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Chaos">
            <summary>
                The pending changes from more highly isolated transactions cannot be overwritten.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.ReadUncommitted">
            <summary>
                A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.ReadCommitted">
            <summary>
                Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.RepeatableRead">
            <summary>
                Locks are placed on all data that is used in a query, preventing other usersfrom updating the data. Prevents non-repeatable reads but phantom rows are still possible.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Serializable">
            <summary>
                A range lock is placed on the Microsoft.Webstore.Data.DataSet, preventing other usersfrom updating or inserting rows into the dataset until the transaction is complete.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Snapshot">
            <summary>
                Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.ParameterDirection">
            <summary>
            Specifies the type of a parameter within a query relative to the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.Input">
            <summary>
            The parameter is an input parameter.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.Output">
            <summary>
            The parameter is an output parameter.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.InputOutput">
            <summary>
            The parameter is capable of both input and output.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.ReturnValue">
            <summary>
            The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlDbType">
            <summary>
            Specifies SQL Server-specific data type of a field, property, for use in a Microsoft.Webstore.Data.SqlClient.SqlParameter.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.BigInt">
            <summary>
            System.Int64. A 64-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Binary">
            <summary>
            System.Array of type System.Byte. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Bit">
            <summary>
            System.Boolean. An unsigned numeric value that can be 0, 1, or null.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Char">
            <summary>
            System.String. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.DateTime">
            <summary>
            System.DateTime. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Decimal">
            <summary>
            System.Decimal. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Float">
            <summary>
            System.Double. A floating point number within the range of -1.79E +308 through 1.79E +308.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Image">
            <summary>
            System.Array of type System.Byte. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Int">
            <summary>
            System.Int32. A 32-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Money">
            <summary>
            System.Decimal. A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.NChar">
            <summary>
            System.String. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.NText">
            <summary>
            System.String. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.NVarChar">
            <summary>
            System.String. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Real">
            <summary>
            System.Single. A floating point number within the range of -3.40E +38 through 3.40E +38.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.UniqueIdentifier">
            <summary>
            System.Guid. A globally unique identifier (or GUID).
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.SmallDateTime">
            <summary>
            System.DateTime. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.SmallInt">
            <summary>
            System.Int16. A 16-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.SmallMoney">
            <summary>
            System.Decimal. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Text">
            <summary>
            System.String. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Timestamp">
            <summary>
            System.Array of type System.Byte. Automatically generated binary numbers, which are guaranteed to be unique within a database. timestamp is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.TinyInt">
            <summary>
            System.Byte. An 8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.VarBinary">
            <summary>
            System.Array of type System.Byte. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.VarChar">
            <summary>
            System.String. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Variant">
            <summary>
            System.Object. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Xml">
            <summary>
            An XML value. Obtain the XML as a string using the Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetValue(System.Int32) method or Microsoft.Webstore.Data.SqlTypes.SqlXml.Value property, or as an System.Xml.XmlReader by calling the Microsoft.Webstore.Data.SqlTypes.SqlXml.CreateReader() method.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Udt">
            <summary>
            A SQL Server 2005 user-defined type (UDT).
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.StatementType">
            <summary>
            Specifies the type of SQL query to be used by the Microsoft.Webstore.Data.OleDb.OleDbRowUpdatedEventArgs, Microsoft.Webstore.Data.OleDb.OleDbRowUpdatingEventArgs, Microsoft.Webstore.Data.SqlClient.SqlRowUpdatedEventArgs, or Microsoft.Webstore.Data.SqlClient.SqlRowUpdatingEventArgs class.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Select">
            <summary>
            An SQL query that is a SELECT statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Insert">
            <summary>
            An SQL query that is an INSERT statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Update">
            <summary>
            An SQL query that is an UPDATE statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Delete">
            <summary>
            An SQL query that is a DELETE statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Batch">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.UpdateRowSource">
            <summary>
            Specifies how query command results are applied to the row being updated.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.None">
            <summary>
            Any returned parameters or rows are ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.OutputParameters">
            <summary>
            Output parameters are mapped to the changed row in the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.FirstReturnedRecord">
            <summary>
            The data in the first returned row is mapped to the changed row in the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.Both">
            <summary>
            Both the output parameters and the first returned row are mapped to the changed row in the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDataRecord">
            <summary>
            Provides access to the column values within each row for a DataReader, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDataRecord.GetData(System.Int32)">
            <summary>
            Gets an Microsoft.Webstore.Data.IDataReader to be used when the field points to more remote structured data.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>An Microsoft.Webstore.Data.IDataReader to be used when the field points to more remote structured data.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbCommand">
            <summary>
            Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbCommand.CreateParameter">
            <summary>
            Creates a new instance of an Microsoft.Webstore.Data.IDbDataParameter object.
            </summary>
            <returns>An IDbDataParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbCommand.ExecuteReader">
            <summary>
            Executes the Microsoft.Webstore.Data.IDbCommand.CommandText against the Microsoft.Webstore.Data.IDbCommand.Connection and builds an Microsoft.Webstore.Data.IDataReader.
            </summary>
            <returns>An Microsoft.Webstore.Data.IDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbCommand.ExecuteReader(Microsoft.Webstore.Data.CommandBehavior)">
            <summary>
            Executes the Microsoft.Webstore.Data.IDbCommand.CommandText against the Microsoft.Webstore.Data.IDbCommand.Connection, and builds an Microsoft.Webstore.Data.IDataReader using one of the Microsoft.Webstore.Data.CommandBehavior values
            </summary>
            <param name="behavior">One of the Microsoft.Webstore.Data.CommandBehavior values.</param>
            <returns>An Microsoft.Webstore.Data.IDataReader object.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbCommand.Connection">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.IDbConnection used by this instance of the Microsoft.Webstore.Data.IDbCommand.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbCommand.Parameters">
            <summary>
            Gets the Microsoft.Webstore.Data.IDataParameterCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbCommand.Transaction">
            <summary>
            Gets or sets the transaction within which the Command object of a .NET Framework data provider executes.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbConnection">
            <summary>
            Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.BeginTransaction(Microsoft.Webstore.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified Microsoft.Webstore.Data.IsolationLevel value.
            </summary>
            <param name="il">One of the Microsoft.Webstore.Data.IsolationLevel values.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.ChangeDatabase(System.String)">
            <summary>
            Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">The name of the database to use in place of the current database.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.CreateCommand">
            <summary>
            Creates and returns a Command object associated with the connection.
            </summary>
            <returns>A Command object associated with the connection.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbDataAdapter">
            <summary>
            Represents a set of command-related properties that are used to fill the Microsoft.Webstore.Data.DataSet and update a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.DeleteCommand">
            <summary>
            Gets or sets an SQL statement for deleting records from the data set.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.InsertCommand">
            <summary>
            Gets or sets an SQL statement used to insert new records into the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.SelectCommand">
            <summary>
            Gets or sets an SQL statement used to select records in the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.UpdateCommand">
            <summary>
            Gets or sets an SQL statement used to update records in the data source.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.RowUpdatedEventArgs">
            <summary>
            Provides data for the RowUpdated event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.RowUpdatedEventArgs.#ctor(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatedEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow sent through an Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand executed when Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) is called.</param>
            <param name="statementType">The type of SQL statement executed.</param>
            <param name="tableMapping">The Microsoft.Webstore.Data.Common.DataTableMapping sent through an Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.RowUpdatedEventArgs.Command">
            <summary>
            Gets the Microsoft.Webstore.Data.IDbCommand executed when Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) is called.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.RowUpdatingEventArgs">
            <summary>
            Provides the data for the RowUpdating event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.RowUpdatingEventArgs.#ctor(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatingEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow to Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand to execute when Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) is called.</param>
            <param name="statementType">The type of SQL statement to execute.</param>
            <param name="tableMapping">The Microsoft.Webstore.Data.Common.DataTableMapping to send through an Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.RowUpdatingEventArgs.Command">
            <summary>
            Gets the Microsoft.Webstore.Data.IDbCommand to execute during the Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) operation.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlCommand">
            <summary>
            Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.#ctor">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlCommand class.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlCommand class with the text of the query.
            </summary>
            <param name="cmdText">The text of the query.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.Cancel">
            <summary>
            Tries to cancel the execution of a Microsoft.Webstore.Data.SqlClient.SqlCommand.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this Microsoft.Webstore.Data.SqlClient.SqlCommand, given a callback procedure and state information.
            </summary>
            <param name="callback">An System.AsyncCallback delegate that is invoked when the command's execution has completed. Pass null (Nothing in Microsoft Visual Basic) to indicate that no callback is required.</param>
            <param name="stateObject"> A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the System.IAsyncResult.AsyncState property.</param>
            <returns>An System.IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking Microsoft.Webstore.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult), which returns the number of affected rows.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.Clone">
            <summary>
            Creates a new Microsoft.Webstore.Data.SqlClient.SqlCommand object that is a copy of the current instance.
            </summary>
            <returns>A new Microsoft.Webstore.Data.SqlClient.SqlCommand object that is a copy of this instance.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.CreateParameter">
            <summary>
            Creates a new instance of a Microsoft.Webstore.Data.SqlClient.SqlParameter object.
            </summary>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
            <summary>
            Finishes asynchronous execution of a Transact-SQL statement.
            </summary>
            <param name="asyncResult">The System.IAsyncResult returned by the call to Microsoft.Webstore.Data.SqlClient.SqlCommand.BeginExecuteNonQuery().</param>
            <returns>The number of rows affected (the same behavior as Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteNonQuery()).</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteNonQuery">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteReader(Microsoft.Webstore.Data.CommandBehavior)">
            <summary>
            Sends the Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText to the Microsoft.Webstore.Data.SqlClient.SqlCommand.Connection, and builds a Microsoft.Webstore.Data.SqlClient.SqlDataReader using one of the Microsoft.Webstore.Data.CommandBehavior values.
            </summary>
            <param name="behavior">One of the Microsoft.Webstore.Data.CommandBehavior values.</param>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteScalar">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteXmlReader">
            <summary>
            Sends the Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText to the Microsoft.Webstore.Data.SqlClient.SqlCommand.Connection and builds an System.Xml.XmlReader object.
            </summary>
            <returns>An System.Xml.XmlReader object.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText">
            <summary>
            Gets or sets the Transact-SQL statement or stored procedure to execute at the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandTimeout">
            <summary>
            Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandType">
            <summary>
            Gets or sets a value indicating how the Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText property is to be interpreted.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.Connection">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlClient.SqlConnection used by this instance of the Microsoft.Webstore.Data.SqlClient.SqlCommand.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.Parameters">
            <summary>
            Gets the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.UpdatedRowSource">
            <summary>
            Gets or sets how command results are applied to the Microsoft.Webstore.Data.DataRow when used by the Update method of the Microsoft.Webstore.Data.Common.DbDataAdapter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.Transaction">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlClient.SqlTransaction within which the Microsoft.Webstore.Data.SqlClient.SqlCommand executes.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlConnection">
            <summary>
            Represents an open connection to a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlConnection class when given a string that contains the connection string.
            </summary>
            <param name="connectionString">The connection used to open the SQL Server database.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.BeginTransaction(Microsoft.Webstore.Data.IsolationLevel)">
            <summary>
            Starts a database transaction with the specified isolation level.
            </summary>
            <param name="iso">The isolation level under which the transaction should run.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.ClearPool(Microsoft.Webstore.Data.SqlClient.SqlConnection)">
            <summary>
            Empties the connection pool associated with the specified connection.
            </summary>
            <param name="connection">The Microsoft.Webstore.Data.SqlClient.SqlConnection to be cleared from the pool.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.Close">
            <summary>
            Closes the connection to the database. This is the preferred method of closing any open connection.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.CreateCommand">
            <summary>
            Creates and returns a Microsoft.Webstore.Data.SqlClient.SqlCommand object associated with the Microsoft.Webstore.Data.SqlClient.SqlConnection.
            </summary>
            <returns>A SqlCommand object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.Dispose">
            <summary>
            Releases all resources used by the System.ComponentModel.Component.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
            <summary>
            Enlists in the specified transaction as a distributed transaction.
            </summary>
            <param name="transaction">A reference to an existing System.EnterpriseServices.ITransaction in which to enlist.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.Open">
            <summary>
            Opens a database connection with the property settings specified by the Microsoft.Webstore.Data.SqlClient.SqlConnection.ConnectionString.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.ConnectionString">
            <summary>
            Gets or sets the string used to open a SQL Server database.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.DataSource">
            <summary>
            Gets the name of the instance of SQL Server to which to connect.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors property.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.State">
            <summary>
            Indicates the state of the Microsoft.Webstore.Data.SqlClient.SqlConnection.
            </summary>
        </member>
        <member name="E:Microsoft.Webstore.Data.SqlClient.SqlConnection.InfoMessage">
            <summary>
            Occurs when SQL Server returns a warning or informational message.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlDataReader">
            <summary>
            Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Close">
            <summary>
            Closes the Microsoft.Webstore.Data.SqlClient.SqlDataReader object.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a byte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a byte.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferIndex">The index for buffer to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
            <summary>
            Gets the value of the specified column as a single character.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferIndex">The index for buffer to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the value of the specified column as a System.DateTime object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the value of the specified column as a System.Decimal object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a double-precision floating point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the value of the specified column as a single-precision floating point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
            <summary>
            Gets the value of the specified column as a globally unique identifier (GUID).
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
            <summary>
            Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlBinary.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlBinary.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlBoolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlByte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlByte.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlDateTime.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlDateTime.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlDecimal.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlDecimal.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlDouble.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlDouble.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlGuid.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlGuid.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlInt16.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlInt16.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlInt32.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlInt32.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlInt64.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlInt64.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlMoney.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlMoney.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlSingle.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlSingle.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlString.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlString</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
            <summary>
            Gets an System.Object that is a representation of the underlying Microsoft.Webstore.Data.SqlDbType Variant.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>An System.Object that is a representation of the underlying Microsoft.Webstore.Data.SqlDbType variant.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
            <summary>
            Gets all the attribute columns in the current row.
            </summary>
            <param name="values">An array of System.Object to copy the attribute columns into.</param>
            <returns>The number of instances of System.Object in the array.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
            <summary>
            Gets the value of the specified column as a string.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the name of the source data type.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the back-end data type.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the System.Type that is the data type of the object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The System.Type that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, GetFieldType returns null.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
            <summary>
            Gets the name of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal, given the name of the column.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSchemaTable">
            <summary>
            Returns a Microsoft.Webstore.Data.DataTable that describes the column metadata of the Microsoft.Webstore.Data.SqlClient.SqlDataReader.
            </summary>
            <returns>A Microsoft.Webstore.Data.DataTable that describes the column metadata.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
            <summary>
            Gets the value of the specified column in its native format.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>This method returns System.DBNull for null database columns.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
            <summary>
             Gets all attribute columns in the collection for the current row.
            </summary>
            <param name="values">An array of System.Object into which to copy the attribute columns.</param>
            <returns>The number of instances of System.Object in the array.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
            <summary>
            Gets a value that indicates whether the column contains non-existent or missing values.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>true if the specified column value is equivalent to System.DBNull; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.
            </summary>
            <returns>true if there are more result sets{ throw new NotImplementedException(); } otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Read">
            <summary>
            Advances the Microsoft.Webstore.Data.SqlClient.SqlDataReader to the next record.
            </summary>
            <returns>true if there are more rows{ throw new NotImplementedException(); } otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Depth">
            <summary>
            Gets a value that indicates the depth of nesting for the current row.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.HasRows">
            <summary>
            Gets a value that indicates whether the Microsoft.Webstore.Data.SqlClient.SqlDataReader contains one or more rows.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.IsClosed">
            <summary>
            Retrieves a Boolean value that indicates whether the specified Microsoft.Webstore.Data.SqlClient.SqlDataReader instance has been closed.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Item(System.Int32)">
            <summary>
            Gets the value of the specified column in its native format given the column ordinal.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column in its native format.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Item(System.String)">
            <summary>
            Gets the value of the specified column in its native format given the column name.
            </summary>
            <param name="name">The column name.</param>
            <returns>The value of the specified column in its native format.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlError">
            <summary>
            Collects information relevant to a warning or error returned by SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlError.Number">
            <summary>
            Gets a number that identifies the type of error.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlErrorCollection">
            <summary>
            Collects all errors generated by the .NET Framework Data Provider for SQL Server. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlErrorCollection.Count">
            <summary>
            Gets the number of errors in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
            <summary>
            Gets the error at the specified index.
            </summary>
            <param name="index">The zero-based index of the error to retrieve.</param>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlError that contains the error at the specified index.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlException">
            <summary>
            The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DbException">
            <summary>
            The base class for all exceptions thrown on behalf of the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlException.Class">
            <summary>
            Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlException.Number">
            <summary>
            Gets a number that identifies the type of error.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlException.Errors">
            <summary>
            Gets a collection of one or more Microsoft.Webstore.Data.SqlClient.SqlError objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlParameter">
            <summary>
            Represents a parameter to a Microsoft.Webstore.Data.SqlClient.SqlCommand and optionally its mapping to Microsoft.Webstore.Data.DataSet columns. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbDataParameter">
            <summary>
            Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to Microsoft.Webstore.Data.DataSet columns.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameter.#ctor">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlParameter class that uses the parameter name and a value of the new Microsoft.Webstore.Data.SqlClient.SqlParameter.
            </summary>
            <param name="parameterName">An System.Object that is the value of the Microsoft.Webstore.Data.SqlClient.SqlParameter.</param>
            <param name="value">The name of the parameter to map.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameter.#ctor(System.String,Microsoft.Webstore.Data.SqlDbType)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlParameter class that uses the parameter name and the data type.
            </summary>
            <param name="parameterName">One of the Microsoft.Webstore.Data.SqlDbType values.</param>
            <param name="dbType">The value supplied in the dbType parameter is an invalid back-end data type.</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.Direction">
            <summary>
            Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.ParameterName">
            <summary>
            Gets or sets the name of the Microsoft.Webstore.Data.SqlClient.SqlParameter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.SqlDbType">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlDbType of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection">
            <summary>
            Represents a collection of parameters associated with a Microsoft.Webstore.Data.SqlClient.SqlCommand and their respective mappings to columns in a Microsoft.Webstore.Data.DataSet. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDataParameterCollection">
            <summary>
            Collects all parameters relevant to a Command object and their mappings to Microsoft.Webstore.Data.DataSet columns, and is implemented by .NET Framework data providers that access data sources.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
            <summary>
            Adds the specified Microsoft.Webstore.Data.SqlClient.SqlParameter object to the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.
            </summary>
            <param name="value">An System.Object.</param>
            <returns>The index of the new Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.Add(System.String,Microsoft.Webstore.Data.SqlDbType)">
            <summary>
            Adds a Microsoft.Webstore.Data.SqlClient.SqlParameter to the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection given the parameter name and the data type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sqlDbType">One of the Microsoft.Webstore.Data.SqlDbType values.</param>
            <returns>The index of the new Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Adds a value to the end of the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.
            </summary>
            <param name="parameterName">The value to be added.</param>
            <param name="value">The name of the parameter.</param>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlTransaction">
            <summary>
            Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlTransaction.Commit">
            <summary>
            Commits the database transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlTransaction.Rollback">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlBinary">
            <summary>
            Represents a variable-length stream of binary data to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlBoolean">
            <summary>
            Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlByte">
            <summary>
            Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlDateTime">
            <summary>
            Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The Microsoft.Webstore.Data.SqlTypes.SqlDateTime structure has a different underlying data structure from its corresponding .NET Framework type, System.DateTime, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. Microsoft.Webstore.Data.SqlTypes.SqlDateTime actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from "00:00:00 AM 1/1/1900" to an integer will return 0.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlDecimal">
            <summary>
            Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlDouble">
            <summary>
            Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlGuid">
            <summary>
            Represents a GUID to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlInt16">
            <summary>
            Represents a 16-bit signed integer to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlInt32">
            <summary>
            Represents a 32-bit signed integer to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlInt64">
            <summary>
            Represents a 64-bit signed integer to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlMoney">
            <summary>
            Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlSingle">
            <summary>
            Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlString">
            <summary>
            Represents a variable-length stream of characters to be stored in or retrievedfrom the database. Microsoft.Webstore.Data.SqlTypes.SqlString has a different underlying data structure from its corresponding .NET Framework System.String data type. System.String always uses the default System.Globalization.CultureInfo from the current thread, but Microsoft.Webstore.Data.SqlTypes.SqlString contains its own locale Id and compare flags. The comparison result of two Microsoft.Webstore.Data.SqlTypes.SqlString structures is independent of operating system and current thread locale.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.DataRow">
            <summary>
            Represents a row of data in a Microsoft.Webstore.Data.DataTable.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.DataTable">
            <summary>
            Represents one table of in-memory data.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DataTableMapping">
            <summary>
            Contains a description of a mapped relationship between a source table and a Microsoft.Webstore.Data.DataTable. This class is used by a Microsoft.Webstore.Data.Common.DataAdapter when populating a Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlInfoMessageEventHandler">
            <summary>
            Represents the method that will handle the Microsoft.Webstore.Data.SqlClient.SqlConnection.InfoMessage event of a Microsoft.Webstore.Data.SqlClient.SqlConnection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlInfoMessageEventArgs">
            <summary>
            Provides data for the Microsoft.Webstore.Data.SqlClient.SqlConnection.InfoMessage event.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.StubExecutor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubExecutor.LoadDriverXml(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry">
            <summary>
                Writes a message to the log indicating a method has been entered.
            </summary>
            Tell the compiler not to inline this, so that our stack trace will
            continue to be accurate.
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry(System.Object)">
            <summary>
                Writes a message to the log indicating a method has been entered.
            </summary>
            <param name="inputParameter">
                Optional parameter value to include in the log message.
            </param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry(System.Object,System.Object)">
             <summary>
                 Writes a message to the log indicating a method has been entered.
             </summary>
             <param name="inputParameter1">
                 Optional parameter value to include in the log message.
             </param>
             <param name="inputParameter2">
                 Optional parameter value to include in the log message.
            </param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry(System.Object[])">
            <summary>
                Writes a message to the log indicating a method has been entered.
            </summary>
            <param name="inputParameters">
                Optional list of parameter values to include in the log message.
            </param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodExit">
            <summary>
                Writes a message to the log indicating a method has been exited.
            </summary>
            Tell the compiler not to inline this, so that our stack trace will
            continue to be accurate.
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodExit(System.Object)">
            <summary>
                Writes a message to the log indicating a method has been exited.
            </summary>
            <param name="returnValue">
                Optional value that will be returned from the method.
            </param>
            Tell the compiler not to inline this, so that our stack trace will
            continue to be accurate.
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\JobFrameworkManager.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JobFrameworkManager</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Webstore.JobFramework.Common.QueryExecute.WspBulkUpdateBatchExpirationInterval(System.Guid,System.String,System.Int32)">
            <summary>
            WspBulkUpdateBatchExpirationInterval
            </summary>
            <param name="statusId"></param>
            <param name="csvBatchIdsStr"></param>
            <param name="heartbeatInterval"></param>
        </member>
        <member name="T:Microsoft.Webstore.Common.ServiceInstaller">
            <summary>
             A common installer class for installing Webstore services.
             </summary>
             <remarks>This class can only be invoked by a caller with unrestricted RegistryPermission.
             </remarks>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.#ctor(System.String)">
            <summary>
            Instantiates an instance of the ServiceInstaller.
            </summary>
            <param name="serviceName">The name of the service to be installed.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Install(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, performs the installation.
            </summary>
            <param name="stateSaver">An System.Collections.IDictionary used to save information needed to perform a commit, rollback, or uninstall operation.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, removes an installation.
            </summary>
            <param name="savedState">An System.Collections.IDictionary that contains the state of the computer after the installation was complete.</param>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkManagerCategoryInstaller">
            <summary>
            Category installer for the JobFrameworkManager event source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerCategoryInstaller.EventSource">
            <summary>
            The event source for which to install the category strings.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents">
            <summary>
            Events in the JobFrameworkManager module.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.log">
            <summary>
            MSN Runtime's event logger 
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.#ctor">
            <summary>
            Private constructor prevents instantiation.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.ScheduleJobFailureValue">
            <summary>
            EventDefinition for ScheduleJobFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogScheduleJobFailure(System.String,System.String)">
            <summary>
            Method to log an event of type ScheduleJobFailure.
            </summary>
            <param name="jobName">Argument jobName for formatting the event text.</param>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogScheduleJobFailure(System.String,System.String,System.Exception)">
            <summary>
            Method to log an event of type ScheduleJobFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="jobName">Argument jobName for formatting the event text.</param>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.UpdateLeaseFailureValue">
            <summary>
            EventDefinition for UpdateLeaseFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogUpdateLeaseFailure">
            <summary>
            Method to log an event of type UpdateLeaseFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogUpdateLeaseFailure(System.Exception)">
            <summary>
            Method to log an event of type UpdateLeaseFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.PoolJobInfoFailureValue">
            <summary>
            EventDefinition for PoolJobInfoFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogPoolJobInfoFailure(System.String)">
            <summary>
            Method to log an event of type PoolJobInfoFailure.
            </summary>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogPoolJobInfoFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type PoolJobInfoFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.TryBecomeJobManagerFailureValue">
            <summary>
            EventDefinition for TryBecomeJobManagerFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogTryBecomeJobManagerFailure(System.String)">
            <summary>
            Method to log an event of type TryBecomeJobManagerFailure.
            </summary>
            <param name="serverName">Argument serverName for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogTryBecomeJobManagerFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type TryBecomeJobManagerFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="serverName">Argument serverName for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobStatusUpdateFailedValue">
            <summary>
            EventDefinition for JobStatusUpdateFailed
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobStatusUpdateFailed">
            <summary>
            Method to log an event of type JobStatusUpdateFailed.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobStatusUpdateFailed(System.Exception)">
            <summary>
            Method to log an event of type JobStatusUpdateFailed with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobFrameworkCoordinatorThreadFailureValue">
            <summary>
            EventDefinition for JobFrameworkCoordinatorThreadFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobFrameworkCoordinatorThreadFailure">
            <summary>
            Method to log an event of type JobFrameworkCoordinatorThreadFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobFrameworkCoordinatorThreadFailure(System.Exception)">
            <summary>
            Method to log an event of type JobFrameworkCoordinatorThreadFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobCoordinatorExtractionFailedValue">
            <summary>
            EventDefinition for JobCoordinatorExtractionFailed
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobCoordinatorExtractionFailed">
            <summary>
            Method to log an event of type JobCoordinatorExtractionFailed.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobCoordinatorExtractionFailed(System.Exception)">
            <summary>
            Method to log an event of type JobCoordinatorExtractionFailed with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.CoordinatorAssemblyInfoReadFailureValue">
            <summary>
            EventDefinition for CoordinatorAssemblyInfoReadFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogCoordinatorAssemblyInfoReadFailure(System.String)">
            <summary>
            Method to log an event of type CoordinatorAssemblyInfoReadFailure.
            </summary>
            <param name="jcFullName">Argument jcFullName for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogCoordinatorAssemblyInfoReadFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type CoordinatorAssemblyInfoReadFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="jcFullName">Argument jcFullName for formatting the event text.</param>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.EventLogger">
            <summary>
            Gets the EventLogger used to report events from this source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.EventSource">
            <summary>
            Gets the event source for events defined in this module.
            </summary>
            <value>
            The event source for events defined in this module.
            </value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.ScheduleJobFailure">
            <summary>
              Gets the EventDefinition for the ScheduleJobFailure.
            </summary>
            <value>The EventDefinition for the ScheduleJobFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.UpdateLeaseFailure">
            <summary>
              Gets the EventDefinition for the UpdateLeaseFailure.
            </summary>
            <value>The EventDefinition for the UpdateLeaseFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.PoolJobInfoFailure">
            <summary>
              Gets the EventDefinition for the PoolJobInfoFailure.
            </summary>
            <value>The EventDefinition for the PoolJobInfoFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.TryBecomeJobManagerFailure">
            <summary>
              Gets the EventDefinition for the TryBecomeJobManagerFailure.
            </summary>
            <value>The EventDefinition for the TryBecomeJobManagerFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobStatusUpdateFailed">
            <summary>
              Gets the EventDefinition for the JobStatusUpdateFailed.
            </summary>
            <value>The EventDefinition for the JobStatusUpdateFailed</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobFrameworkCoordinatorThreadFailure">
            <summary>
              Gets the EventDefinition for the JobFrameworkCoordinatorThreadFailure.
            </summary>
            <value>The EventDefinition for the JobFrameworkCoordinatorThreadFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobCoordinatorExtractionFailed">
            <summary>
              Gets the EventDefinition for the JobCoordinatorExtractionFailed.
            </summary>
            <value>The EventDefinition for the JobCoordinatorExtractionFailed</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.CoordinatorAssemblyInfoReadFailure">
            <summary>
              Gets the EventDefinition for the CoordinatorAssemblyInfoReadFailure.
            </summary>
            <value>The EventDefinition for the CoordinatorAssemblyInfoReadFailure</value>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller">
            <summary>
            JobServiceInstaller for installing JobFrameworkManagerInstaller service.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.#ctor">
            <summary>
            Default constructor, initializes new instance of the JobFrameworkManagerInstaller by InstallUtil.exe.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobServiceBase">
            <summary>
            Service provides a mechanism for ensuring that we have one and only instance
            of a service running among a group of machines
            We install and run the service on all the machines but only the one which has its name
            in the serviceTG will run
            At startup, they will look for the entry which has the right Service ID (a GUID) and that is
            either expired (lease_expiration) or unassigned (machine null)
            They will try to update such entry with the local machine name. Only one will succeed
            Then they query the table and check that they are the winner before proceeding further
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.Service.OnStart(System.String[])">
            <summary>
            Set things in motion so your service can do its work.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.Service.OnStop">
            <summary>
            Stop this service.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\JobFrameworkCoordinator.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JobFrameworkCoordinator</name>
    </assembly>
    <members>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\WstConfigUnitTest.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WstConfigUnitTest</name>
    </assembly>
    <members>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\JobFrameworkManager.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JobFrameworkManager</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Webstore.JobFramework.Common.QueryExecute.WspBulkUpdateBatchExpirationInterval(System.Guid,System.String,System.Int32)">
            <summary>
            WspBulkUpdateBatchExpirationInterval
            </summary>
            <param name="statusId"></param>
            <param name="csvBatchIdsStr"></param>
            <param name="heartbeatInterval"></param>
        </member>
        <member name="T:Microsoft.Webstore.Common.ServiceInstaller">
            <summary>
             A common installer class for installing Webstore services.
             </summary>
             <remarks>This class can only be invoked by a caller with unrestricted RegistryPermission.
             </remarks>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.#ctor(System.String)">
            <summary>
            Instantiates an instance of the ServiceInstaller.
            </summary>
            <param name="serviceName">The name of the service to be installed.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Install(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, performs the installation.
            </summary>
            <param name="stateSaver">An System.Collections.IDictionary used to save information needed to perform a commit, rollback, or uninstall operation.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, removes an installation.
            </summary>
            <param name="savedState">An System.Collections.IDictionary that contains the state of the computer after the installation was complete.</param>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkManagerCategoryInstaller">
            <summary>
            Category installer for the JobFrameworkManager event source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerCategoryInstaller.EventSource">
            <summary>
            The event source for which to install the category strings.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents">
            <summary>
            Events in the JobFrameworkManager module.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.log">
            <summary>
            MSN Runtime's event logger 
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.#ctor">
            <summary>
            Private constructor prevents instantiation.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.ScheduleJobFailureValue">
            <summary>
            EventDefinition for ScheduleJobFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogScheduleJobFailure(System.String,System.String)">
            <summary>
            Method to log an event of type ScheduleJobFailure.
            </summary>
            <param name="jobName">Argument jobName for formatting the event text.</param>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogScheduleJobFailure(System.String,System.String,System.Exception)">
            <summary>
            Method to log an event of type ScheduleJobFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="jobName">Argument jobName for formatting the event text.</param>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.UpdateLeaseFailureValue">
            <summary>
            EventDefinition for UpdateLeaseFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogUpdateLeaseFailure">
            <summary>
            Method to log an event of type UpdateLeaseFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogUpdateLeaseFailure(System.Exception)">
            <summary>
            Method to log an event of type UpdateLeaseFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.PoolJobInfoFailureValue">
            <summary>
            EventDefinition for PoolJobInfoFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogPoolJobInfoFailure(System.String)">
            <summary>
            Method to log an event of type PoolJobInfoFailure.
            </summary>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogPoolJobInfoFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type PoolJobInfoFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="exceptionString">Argument exceptionString for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.TryBecomeJobManagerFailureValue">
            <summary>
            EventDefinition for TryBecomeJobManagerFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogTryBecomeJobManagerFailure(System.String)">
            <summary>
            Method to log an event of type TryBecomeJobManagerFailure.
            </summary>
            <param name="serverName">Argument serverName for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogTryBecomeJobManagerFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type TryBecomeJobManagerFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="serverName">Argument serverName for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobStatusUpdateFailedValue">
            <summary>
            EventDefinition for JobStatusUpdateFailed
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobStatusUpdateFailed">
            <summary>
            Method to log an event of type JobStatusUpdateFailed.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobStatusUpdateFailed(System.Exception)">
            <summary>
            Method to log an event of type JobStatusUpdateFailed with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobFrameworkCoordinatorThreadFailureValue">
            <summary>
            EventDefinition for JobFrameworkCoordinatorThreadFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobFrameworkCoordinatorThreadFailure">
            <summary>
            Method to log an event of type JobFrameworkCoordinatorThreadFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobFrameworkCoordinatorThreadFailure(System.Exception)">
            <summary>
            Method to log an event of type JobFrameworkCoordinatorThreadFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobCoordinatorExtractionFailedValue">
            <summary>
            EventDefinition for JobCoordinatorExtractionFailed
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobCoordinatorExtractionFailed">
            <summary>
            Method to log an event of type JobCoordinatorExtractionFailed.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogJobCoordinatorExtractionFailed(System.Exception)">
            <summary>
            Method to log an event of type JobCoordinatorExtractionFailed with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.CoordinatorAssemblyInfoReadFailureValue">
            <summary>
            EventDefinition for CoordinatorAssemblyInfoReadFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogCoordinatorAssemblyInfoReadFailure(System.String)">
            <summary>
            Method to log an event of type CoordinatorAssemblyInfoReadFailure.
            </summary>
            <param name="jcFullName">Argument jcFullName for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.LogCoordinatorAssemblyInfoReadFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type CoordinatorAssemblyInfoReadFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="jcFullName">Argument jcFullName for formatting the event text.</param>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.EventLogger">
            <summary>
            Gets the EventLogger used to report events from this source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.EventSource">
            <summary>
            Gets the event source for events defined in this module.
            </summary>
            <value>
            The event source for events defined in this module.
            </value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.ScheduleJobFailure">
            <summary>
              Gets the EventDefinition for the ScheduleJobFailure.
            </summary>
            <value>The EventDefinition for the ScheduleJobFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.UpdateLeaseFailure">
            <summary>
              Gets the EventDefinition for the UpdateLeaseFailure.
            </summary>
            <value>The EventDefinition for the UpdateLeaseFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.PoolJobInfoFailure">
            <summary>
              Gets the EventDefinition for the PoolJobInfoFailure.
            </summary>
            <value>The EventDefinition for the PoolJobInfoFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.TryBecomeJobManagerFailure">
            <summary>
              Gets the EventDefinition for the TryBecomeJobManagerFailure.
            </summary>
            <value>The EventDefinition for the TryBecomeJobManagerFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobStatusUpdateFailed">
            <summary>
              Gets the EventDefinition for the JobStatusUpdateFailed.
            </summary>
            <value>The EventDefinition for the JobStatusUpdateFailed</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobFrameworkCoordinatorThreadFailure">
            <summary>
              Gets the EventDefinition for the JobFrameworkCoordinatorThreadFailure.
            </summary>
            <value>The EventDefinition for the JobFrameworkCoordinatorThreadFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.JobCoordinatorExtractionFailed">
            <summary>
              Gets the EventDefinition for the JobCoordinatorExtractionFailed.
            </summary>
            <value>The EventDefinition for the JobCoordinatorExtractionFailed</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkManagerEvents.CoordinatorAssemblyInfoReadFailure">
            <summary>
              Gets the EventDefinition for the CoordinatorAssemblyInfoReadFailure.
            </summary>
            <value>The EventDefinition for the CoordinatorAssemblyInfoReadFailure</value>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller">
            <summary>
            JobServiceInstaller for installing JobFrameworkManagerInstaller service.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.#ctor">
            <summary>
            Default constructor, initializes new instance of the JobFrameworkManagerInstaller by InstallUtil.exe.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkManagerInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobServiceBase">
            <summary>
            Service provides a mechanism for ensuring that we have one and only instance
            of a service running among a group of machines
            We install and run the service on all the machines but only the one which has its name
            in the serviceTG will run
            At startup, they will look for the entry which has the right Service ID (a GUID) and that is
            either expired (lease_expiration) or unassigned (machine null)
            They will try to update such entry with the local machine name. Only one will succeed
            Then they query the table and check that they are the winner before proceeding further
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.Service.OnStart(System.String[])">
            <summary>
            Set things in motion so your service can do its work.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.Service.OnStop">
            <summary>
            Stop this service.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\SampleJob.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SampleJob</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Init(Microsoft.Webstore.JobEngine.IJobAgent,System.String,Microsoft.Webstore.JobEngine.Location,System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="ja"></param>
            <param name="localMachine"></param>
            <param name="location"></param>
            <param name="userArgs"></param>
            <param name="batchId"></param>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Run(Microsoft.Webstore.JobEngine.IPartitionSet,Microsoft.Webstore.JobEngine.IPartitionSet,System.Int32@)">
            <summary>
            
            </summary>
            <param name="inputSet"></param>
            <param name="outputSet"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Microsoft#Webstore#JobEngine#IJobStep#Add(Microsoft.Webstore.JobEngine.IPartitionSet,Microsoft.Webstore.JobEngine.IPartitionSet)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Microsoft#Webstore#JobEngine#IJobStep#get_AcceptAdd">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobFramework.Testing.SampleJob.EventLogHelper">
            <summary>
            This class is used to log events over given period of time.  Call StartListening
            to begin listening to the specified event log.  If a file name is provided, then 
            the events will be saved to a file.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobFramework.Testing.SampleJob.EventLog_Reader">
            <summary>
            This is a helper class that is used to read
            the EventLog for webstore related events.
            The events are read form the ApplicationLog, 
            and are filtered on webstore.
            All the members of this class are static.
            </summary>
            
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\Microsoft.WstSqlStub.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.WstSqlStub</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.Data.Common.DbDataAdapter">
            <summary>
            Aids implementation of the Microsoft.Webstore.Data.IDbDataAdapter interface. Inheritorsof Microsoft.Webstore.Data.Common.DbDataAdapter implement a set of functions to providestrong typing, but inherit most of the functionality needed to fully implementa DataAdapter.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatedEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow used to update the data source.</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand executed during the Microsoft.Webstore.Data.IDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
            <param name="tableMapping">A Microsoft.Webstore.Data.Common.DataTableMapping object.</param>
            <returns>A new instance of the Microsoft.Webstore.Data.Common.RowUpdatedEventArgs class.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatingEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow that updates the data source.</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand to execute during the Microsoft.Webstore.Data.IDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
            <param name="tableMapping">A Microsoft.Webstore.Data.Common.DataTableMapping object.</param>
            <returns>A new instance of the Microsoft.Webstore.Data.Common.RowUpdatingEventArgs class.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.OnRowUpdated(Microsoft.Webstore.Data.Common.RowUpdatedEventArgs)">
            <summary>
            Raises the RowUpdated event of a .NET Framework data provider.
            </summary>
            <param name="value">A Microsoft.Webstore.Data.Common.RowUpdatedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataAdapter.OnRowUpdating(Microsoft.Webstore.Data.Common.RowUpdatingEventArgs)">
            <summary>
            Raises the RowUpdating event of a .NET Framework data provider.
            </summary>
            <param name="value">An Microsoft.Webstore.Data.Common.DbRowUpdatingEventArgs that contains the event data.</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.DeleteCommand">
            <summary>
            Gets or sets a command for deleting records from the data set.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.InsertCommand">
            <summary>
            Gets or sets a command used to insert new records into the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.SelectCommand">
            <summary>
            Gets or sets a command used to select records in the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbDataAdapter.UpdateCommand">
            <summary>
            Gets or sets a command used to update records in the data source.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DbDataReader">
            <summary>
            Reads a forward-only stream of rows from a data source.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDataReader">
            <summary>
            Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataReader.Dispose">
            <summary>
            Releases the resources consumed by this Microsoft.Webstore.Data.Common.DbDataReader.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbDataReader.GetData(System.Int32)">
            <summary>
            Returns a Microsoft.Webstore.Data.Common.DbDataReader object for the requested column ordinal.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.Common.DbDataReader object.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DbTransaction">
            <summary>
            The base class for a transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbTransaction">
            <summary>
            Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbTransaction.Connection">
            <summary>
            Specifies the Connection object to associate with the transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.DbTransaction.Dispose">
            <summary>
            Releases the unmanaged resources used by the Microsoft.Webstore.Data.Common.DbTransaction.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.DbTransaction.Connection">
            <summary>
            Specifies the Microsoft.Webstore.Data.Common.DbConnection object associated with the transaction.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.CommandType">
            <summary>
            Specifies how a command string is interpreted.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandType.Text">
            <summary>
            An SQL text command. (Default.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandType.StoredProcedure">
            <summary>
            The name of a stored procedure.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandType.TableDirect">
            <summary>
            The name of a table.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.CommandBehavior">
            <summary>
            Provides a description of the results of the query and its effect on the database.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.Default">
            <summary>
            The query may return multiple result sets. Execution of the query may effect the database state. Default sets no Microsoft.Webstore.Data.CommandBehavior flags, so calling ExecuteReader(CommandBehavior.Default) is functionally equivalent to calling ExecuteReader().
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SingleResult">
            <summary>
            The query returns a single result set.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SchemaOnly">
            <summary>
            The query returns column information only. When using Microsoft.Webstore.Data.CommandBehavior.SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.KeyInfo">
            <summary>
            The query returns column and primary key information.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SingleRow">
            <summary>
            The query is expected to return a single row. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify Microsoft.Webstore.Data.CommandBehavior.SingleRow with the Microsoft.Webstore.Data.OleDb.OleDbCommand.ExecuteReader() method of the Microsoft.Webstore.Data.OleDb.OleDbCommand object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB IRow interface if it is available. Otherwise, it uses the IRowset interface. If your SQL statement is expected to return only a single row, specifying Microsoft.Webstore.Data.CommandBehavior.SingleRow can also improve application performance. It is possible to specify SingleRow when executing queries that return multiple result sets. In that case, multiple result sets are still returned, but each result set has a single row.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.SequentialAccess">
            <summary>
            Provides a way for the DataReader to handle rows that contain columns with large binary values. Rather than loading the entire row, SequentialAccess enables the DataReader to load data as a stream. You can then use the GetBytes or GetChars method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.CommandBehavior.CloseConnection">
            <summary>
            When the command is executed, the associated Connection object is closed when the associated DataReader object is closed.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.ConnectionState">
            <summary>
            Describes the current state of the connection to a data source.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Closed">
            <summary>
            The connection is closed.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Open">
            <summary>
            The connection is open.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Connecting">
            <summary>
            The connection object is connecting to the data source. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Executing">
            <summary>
            The connection object is executing a command. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Fetching">
            <summary>
            The connection object is retrieving data. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ConnectionState.Broken">
            <summary>
            The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.) 
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IsolationLevel">
            <summary>
                Specifies the transaction locking behavior for the connection.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Unspecified">
            <summary>
                A different isolation level than the one specified is being used, but the level cannot be determined.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Chaos">
            <summary>
                The pending changes from more highly isolated transactions cannot be overwritten.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.ReadUncommitted">
            <summary>
                A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.ReadCommitted">
            <summary>
                Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.RepeatableRead">
            <summary>
                Locks are placed on all data that is used in a query, preventing other usersfrom updating the data. Prevents non-repeatable reads but phantom rows are still possible.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Serializable">
            <summary>
                A range lock is placed on the Microsoft.Webstore.Data.DataSet, preventing other usersfrom updating or inserting rows into the dataset until the transaction is complete.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.IsolationLevel.Snapshot">
            <summary>
                Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.ParameterDirection">
            <summary>
            Specifies the type of a parameter within a query relative to the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.Input">
            <summary>
            The parameter is an input parameter.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.Output">
            <summary>
            The parameter is an output parameter.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.InputOutput">
            <summary>
            The parameter is capable of both input and output.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.ParameterDirection.ReturnValue">
            <summary>
            The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlDbType">
            <summary>
            Specifies SQL Server-specific data type of a field, property, for use in a Microsoft.Webstore.Data.SqlClient.SqlParameter.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.BigInt">
            <summary>
            System.Int64. A 64-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Binary">
            <summary>
            System.Array of type System.Byte. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Bit">
            <summary>
            System.Boolean. An unsigned numeric value that can be 0, 1, or null.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Char">
            <summary>
            System.String. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.DateTime">
            <summary>
            System.DateTime. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Decimal">
            <summary>
            System.Decimal. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Float">
            <summary>
            System.Double. A floating point number within the range of -1.79E +308 through 1.79E +308.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Image">
            <summary>
            System.Array of type System.Byte. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Int">
            <summary>
            System.Int32. A 32-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Money">
            <summary>
            System.Decimal. A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.NChar">
            <summary>
            System.String. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.NText">
            <summary>
            System.String. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.NVarChar">
            <summary>
            System.String. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Real">
            <summary>
            System.Single. A floating point number within the range of -3.40E +38 through 3.40E +38.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.UniqueIdentifier">
            <summary>
            System.Guid. A globally unique identifier (or GUID).
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.SmallDateTime">
            <summary>
            System.DateTime. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.SmallInt">
            <summary>
            System.Int16. A 16-bit signed integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.SmallMoney">
            <summary>
            System.Decimal. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Text">
            <summary>
            System.String. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Timestamp">
            <summary>
            System.Array of type System.Byte. Automatically generated binary numbers, which are guaranteed to be unique within a database. timestamp is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.TinyInt">
            <summary>
            System.Byte. An 8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.VarBinary">
            <summary>
            System.Array of type System.Byte. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.VarChar">
            <summary>
            System.String. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Variant">
            <summary>
            System.Object. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Xml">
            <summary>
            An XML value. Obtain the XML as a string using the Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetValue(System.Int32) method or Microsoft.Webstore.Data.SqlTypes.SqlXml.Value property, or as an System.Xml.XmlReader by calling the Microsoft.Webstore.Data.SqlTypes.SqlXml.CreateReader() method.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.SqlDbType.Udt">
            <summary>
            A SQL Server 2005 user-defined type (UDT).
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.StatementType">
            <summary>
            Specifies the type of SQL query to be used by the Microsoft.Webstore.Data.OleDb.OleDbRowUpdatedEventArgs, Microsoft.Webstore.Data.OleDb.OleDbRowUpdatingEventArgs, Microsoft.Webstore.Data.SqlClient.SqlRowUpdatedEventArgs, or Microsoft.Webstore.Data.SqlClient.SqlRowUpdatingEventArgs class.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Select">
            <summary>
            An SQL query that is a SELECT statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Insert">
            <summary>
            An SQL query that is an INSERT statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Update">
            <summary>
            An SQL query that is an UPDATE statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Delete">
            <summary>
            An SQL query that is a DELETE statement.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.StatementType.Batch">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.UpdateRowSource">
            <summary>
            Specifies how query command results are applied to the row being updated.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.None">
            <summary>
            Any returned parameters or rows are ignored.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.OutputParameters">
            <summary>
            Output parameters are mapped to the changed row in the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.FirstReturnedRecord">
            <summary>
            The data in the first returned row is mapped to the changed row in the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Data.UpdateRowSource.Both">
            <summary>
            Both the output parameters and the first returned row are mapped to the changed row in the Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDataRecord">
            <summary>
            Provides access to the column values within each row for a DataReader, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDataRecord.GetData(System.Int32)">
            <summary>
            Gets an Microsoft.Webstore.Data.IDataReader to be used when the field points to more remote structured data.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>An Microsoft.Webstore.Data.IDataReader to be used when the field points to more remote structured data.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbCommand">
            <summary>
            Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbCommand.CreateParameter">
            <summary>
            Creates a new instance of an Microsoft.Webstore.Data.IDbDataParameter object.
            </summary>
            <returns>An IDbDataParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbCommand.ExecuteReader">
            <summary>
            Executes the Microsoft.Webstore.Data.IDbCommand.CommandText against the Microsoft.Webstore.Data.IDbCommand.Connection and builds an Microsoft.Webstore.Data.IDataReader.
            </summary>
            <returns>An Microsoft.Webstore.Data.IDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbCommand.ExecuteReader(Microsoft.Webstore.Data.CommandBehavior)">
            <summary>
            Executes the Microsoft.Webstore.Data.IDbCommand.CommandText against the Microsoft.Webstore.Data.IDbCommand.Connection, and builds an Microsoft.Webstore.Data.IDataReader using one of the Microsoft.Webstore.Data.CommandBehavior values
            </summary>
            <param name="behavior">One of the Microsoft.Webstore.Data.CommandBehavior values.</param>
            <returns>An Microsoft.Webstore.Data.IDataReader object.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbCommand.Connection">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.IDbConnection used by this instance of the Microsoft.Webstore.Data.IDbCommand.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbCommand.Parameters">
            <summary>
            Gets the Microsoft.Webstore.Data.IDataParameterCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbCommand.Transaction">
            <summary>
            Gets or sets the transaction within which the Command object of a .NET Framework data provider executes.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbConnection">
            <summary>
            Represents an open connection to a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.BeginTransaction(Microsoft.Webstore.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified Microsoft.Webstore.Data.IsolationLevel value.
            </summary>
            <param name="il">One of the Microsoft.Webstore.Data.IsolationLevel values.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.ChangeDatabase(System.String)">
            <summary>
            Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">The name of the database to use in place of the current database.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.IDbConnection.CreateCommand">
            <summary>
            Creates and returns a Command object associated with the connection.
            </summary>
            <returns>A Command object associated with the connection.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbDataAdapter">
            <summary>
            Represents a set of command-related properties that are used to fill the Microsoft.Webstore.Data.DataSet and update a data source, and is implemented by .NET Framework data providers that access relational databases.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.DeleteCommand">
            <summary>
            Gets or sets an SQL statement for deleting records from the data set.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.InsertCommand">
            <summary>
            Gets or sets an SQL statement used to insert new records into the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.SelectCommand">
            <summary>
            Gets or sets an SQL statement used to select records in the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.IDbDataAdapter.UpdateCommand">
            <summary>
            Gets or sets an SQL statement used to update records in the data source.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.RowUpdatedEventArgs">
            <summary>
            Provides data for the RowUpdated event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.RowUpdatedEventArgs.#ctor(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatedEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow sent through an Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand executed when Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) is called.</param>
            <param name="statementType">The type of SQL statement executed.</param>
            <param name="tableMapping">The Microsoft.Webstore.Data.Common.DataTableMapping sent through an Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.RowUpdatedEventArgs.Command">
            <summary>
            Gets the Microsoft.Webstore.Data.IDbCommand executed when Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) is called.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.RowUpdatingEventArgs">
            <summary>
            Provides the data for the RowUpdating event of a .NET Framework data provider.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.Common.RowUpdatingEventArgs.#ctor(Microsoft.Webstore.Data.DataRow,Microsoft.Webstore.Data.IDbCommand,Microsoft.Webstore.Data.StatementType,Microsoft.Webstore.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.Common.RowUpdatingEventArgs class.
            </summary>
            <param name="dataRow">The Microsoft.Webstore.Data.DataRow to Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
            <param name="command">The Microsoft.Webstore.Data.IDbCommand to execute when Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) is called.</param>
            <param name="statementType">The type of SQL statement to execute.</param>
            <param name="tableMapping">The Microsoft.Webstore.Data.Common.DataTableMapping to send through an Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet).</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.Common.RowUpdatingEventArgs.Command">
            <summary>
            Gets the Microsoft.Webstore.Data.IDbCommand to execute during the Microsoft.Webstore.Data.Common.DbDataAdapter.Update(Microsoft.Webstore.Data.DataSet) operation.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlCommand">
            <summary>
            Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.#ctor">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlCommand class.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlCommand class with the text of the query.
            </summary>
            <param name="cmdText">The text of the query.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.Cancel">
            <summary>
            Tries to cancel the execution of a Microsoft.Webstore.Data.SqlClient.SqlCommand.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
            <summary>
            Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this Microsoft.Webstore.Data.SqlClient.SqlCommand, given a callback procedure and state information.
            </summary>
            <param name="callback">An System.AsyncCallback delegate that is invoked when the command's execution has completed. Pass null (Nothing in Microsoft Visual Basic) to indicate that no callback is required.</param>
            <param name="stateObject"> A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the System.IAsyncResult.AsyncState property.</param>
            <returns>An System.IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking Microsoft.Webstore.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult), which returns the number of affected rows.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.Clone">
            <summary>
            Creates a new Microsoft.Webstore.Data.SqlClient.SqlCommand object that is a copy of the current instance.
            </summary>
            <returns>A new Microsoft.Webstore.Data.SqlClient.SqlCommand object that is a copy of this instance.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.CreateParameter">
            <summary>
            Creates a new instance of a Microsoft.Webstore.Data.SqlClient.SqlParameter object.
            </summary>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
            <summary>
            Finishes asynchronous execution of a Transact-SQL statement.
            </summary>
            <param name="asyncResult">The System.IAsyncResult returned by the call to Microsoft.Webstore.Data.SqlClient.SqlCommand.BeginExecuteNonQuery().</param>
            <returns>The number of rows affected (the same behavior as Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteNonQuery()).</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteNonQuery">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteReader(Microsoft.Webstore.Data.CommandBehavior)">
            <summary>
            Sends the Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText to the Microsoft.Webstore.Data.SqlClient.SqlCommand.Connection, and builds a Microsoft.Webstore.Data.SqlClient.SqlDataReader using one of the Microsoft.Webstore.Data.CommandBehavior values.
            </summary>
            <param name="behavior">One of the Microsoft.Webstore.Data.CommandBehavior values.</param>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteScalar">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <returns>The first column of the first row in the result set, or a null reference if the result set is empty.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlCommand.ExecuteXmlReader">
            <summary>
            Sends the Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText to the Microsoft.Webstore.Data.SqlClient.SqlCommand.Connection and builds an System.Xml.XmlReader object.
            </summary>
            <returns>An System.Xml.XmlReader object.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText">
            <summary>
            Gets or sets the Transact-SQL statement or stored procedure to execute at the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandTimeout">
            <summary>
            Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandType">
            <summary>
            Gets or sets a value indicating how the Microsoft.Webstore.Data.SqlClient.SqlCommand.CommandText property is to be interpreted.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.Connection">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlClient.SqlConnection used by this instance of the Microsoft.Webstore.Data.SqlClient.SqlCommand.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.Parameters">
            <summary>
            Gets the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.UpdatedRowSource">
            <summary>
            Gets or sets how command results are applied to the Microsoft.Webstore.Data.DataRow when used by the Update method of the Microsoft.Webstore.Data.Common.DbDataAdapter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlCommand.Transaction">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlClient.SqlTransaction within which the Microsoft.Webstore.Data.SqlClient.SqlCommand executes.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlConnection">
            <summary>
            Represents an open connection to a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlConnection class when given a string that contains the connection string.
            </summary>
            <param name="connectionString">The connection used to open the SQL Server database.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.BeginTransaction(Microsoft.Webstore.Data.IsolationLevel)">
            <summary>
            Starts a database transaction with the specified isolation level.
            </summary>
            <param name="iso">The isolation level under which the transaction should run.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.ClearPool(Microsoft.Webstore.Data.SqlClient.SqlConnection)">
            <summary>
            Empties the connection pool associated with the specified connection.
            </summary>
            <param name="connection">The Microsoft.Webstore.Data.SqlClient.SqlConnection to be cleared from the pool.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.Close">
            <summary>
            Closes the connection to the database. This is the preferred method of closing any open connection.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.CreateCommand">
            <summary>
            Creates and returns a Microsoft.Webstore.Data.SqlClient.SqlCommand object associated with the Microsoft.Webstore.Data.SqlClient.SqlConnection.
            </summary>
            <returns>A SqlCommand object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.Dispose">
            <summary>
            Releases all resources used by the System.ComponentModel.Component.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
            <summary>
            Enlists in the specified transaction as a distributed transaction.
            </summary>
            <param name="transaction">A reference to an existing System.EnterpriseServices.ITransaction in which to enlist.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlConnection.Open">
            <summary>
            Opens a database connection with the property settings specified by the Microsoft.Webstore.Data.SqlClient.SqlConnection.ConnectionString.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.ConnectionString">
            <summary>
            Gets or sets the string used to open a SQL Server database.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.DataSource">
            <summary>
            Gets the name of the instance of SQL Server to which to connect.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors property.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlConnection.State">
            <summary>
            Indicates the state of the Microsoft.Webstore.Data.SqlClient.SqlConnection.
            </summary>
        </member>
        <member name="E:Microsoft.Webstore.Data.SqlClient.SqlConnection.InfoMessage">
            <summary>
            Occurs when SQL Server returns a warning or informational message.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlDataReader">
            <summary>
            Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Close">
            <summary>
            Closes the Microsoft.Webstore.Data.SqlClient.SqlDataReader object.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a byte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a byte.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferIndex">The index for buffer to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
            <summary>
            Gets the value of the specified column as a single character.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index within the field from which to begin the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferIndex">The index for buffer to begin the write operation.</param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the value of the specified column as a System.DateTime object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the value of the specified column as a System.Decimal object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a double-precision floating point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the value of the specified column as a single-precision floating point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
            <summary>
            Gets the value of the specified column as a globally unique identifier (GUID).
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
            <summary>
            Gets the value of the specified column as a 16-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the value of the specified column as a 32-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the value of the specified column as a 64-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlBinary.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlBinary.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlBoolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlByte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlByte.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlDateTime.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlDateTime.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlDecimal.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlDecimal.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlDouble.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlDouble.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlGuid.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlGuid.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlInt16.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlInt16.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlInt32.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlInt32.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlInt64.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlInt64.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlMoney.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlMoney.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlSingle.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlSingle.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
            <summary>
            Gets the value of the specified column as a Microsoft.Webstore.Data.SqlTypes.SqlString.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Microsoft.Webstore.Data.SqlTypes.SqlString</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
            <summary>
            Gets an System.Object that is a representation of the underlying Microsoft.Webstore.Data.SqlDbType Variant.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>An System.Object that is a representation of the underlying Microsoft.Webstore.Data.SqlDbType variant.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
            <summary>
            Gets all the attribute columns in the current row.
            </summary>
            <param name="values">An array of System.Object to copy the attribute columns into.</param>
            <returns>The number of instances of System.Object in the array.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
            <summary>
            Gets the value of the specified column as a string.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the name of the source data type.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the back-end data type.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the System.Type that is the data type of the object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The System.Type that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, GetFieldType returns null.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
            <summary>
            Gets the name of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the specified column.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal, given the name of the column.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetSchemaTable">
            <summary>
            Returns a Microsoft.Webstore.Data.DataTable that describes the column metadata of the Microsoft.Webstore.Data.SqlClient.SqlDataReader.
            </summary>
            <returns>A Microsoft.Webstore.Data.DataTable that describes the column metadata.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
            <summary>
            Gets the value of the specified column in its native format.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>This method returns System.DBNull for null database columns.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
            <summary>
             Gets all attribute columns in the collection for the current row.
            </summary>
            <param name="values">An array of System.Object into which to copy the attribute columns.</param>
            <returns>The number of instances of System.Object in the array.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
            <summary>
            Gets a value that indicates whether the column contains non-existent or missing values.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>true if the specified column value is equivalent to System.DBNull; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.NextResult">
            <summary>
            Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.
            </summary>
            <returns>true if there are more result sets{ throw new NotImplementedException(); } otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Read">
            <summary>
            Advances the Microsoft.Webstore.Data.SqlClient.SqlDataReader to the next record.
            </summary>
            <returns>true if there are more rows{ throw new NotImplementedException(); } otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Depth">
            <summary>
            Gets a value that indicates the depth of nesting for the current row.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.HasRows">
            <summary>
            Gets a value that indicates whether the Microsoft.Webstore.Data.SqlClient.SqlDataReader contains one or more rows.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.IsClosed">
            <summary>
            Retrieves a Boolean value that indicates whether the specified Microsoft.Webstore.Data.SqlClient.SqlDataReader instance has been closed.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Item(System.Int32)">
            <summary>
            Gets the value of the specified column in its native format given the column ordinal.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column in its native format.</returns>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlDataReader.Item(System.String)">
            <summary>
            Gets the value of the specified column in its native format given the column name.
            </summary>
            <param name="name">The column name.</param>
            <returns>The value of the specified column in its native format.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlError">
            <summary>
            Collects information relevant to a warning or error returned by SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlError.Number">
            <summary>
            Gets a number that identifies the type of error.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlErrorCollection">
            <summary>
            Collects all errors generated by the .NET Framework Data Provider for SQL Server. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlErrorCollection.Count">
            <summary>
            Gets the number of errors in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
            <summary>
            Gets the error at the specified index.
            </summary>
            <param name="index">The zero-based index of the error to retrieve.</param>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlError that contains the error at the specified index.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlException">
            <summary>
            The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DbException">
            <summary>
            The base class for all exceptions thrown on behalf of the data source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlException.Class">
            <summary>
            Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlException.Number">
            <summary>
            Gets a number that identifies the type of error.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlException.Errors">
            <summary>
            Gets a collection of one or more Microsoft.Webstore.Data.SqlClient.SqlError objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlParameter">
            <summary>
            Represents a parameter to a Microsoft.Webstore.Data.SqlClient.SqlCommand and optionally its mapping to Microsoft.Webstore.Data.DataSet columns. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDbDataParameter">
            <summary>
            Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to Microsoft.Webstore.Data.DataSet columns.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameter.#ctor">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlParameter class.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlParameter class that uses the parameter name and a value of the new Microsoft.Webstore.Data.SqlClient.SqlParameter.
            </summary>
            <param name="parameterName">An System.Object that is the value of the Microsoft.Webstore.Data.SqlClient.SqlParameter.</param>
            <param name="value">The name of the parameter to map.</param>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameter.#ctor(System.String,Microsoft.Webstore.Data.SqlDbType)">
            <summary>
            Initializes a new instance of the Microsoft.Webstore.Data.SqlClient.SqlParameter class that uses the parameter name and the data type.
            </summary>
            <param name="parameterName">One of the Microsoft.Webstore.Data.SqlDbType values.</param>
            <param name="dbType">The value supplied in the dbType parameter is an invalid back-end data type.</param>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.Direction">
            <summary>
            Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.ParameterName">
            <summary>
            Gets or sets the name of the Microsoft.Webstore.Data.SqlClient.SqlParameter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.SqlDbType">
            <summary>
            Gets or sets the Microsoft.Webstore.Data.SqlDbType of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Data.SqlClient.SqlParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection">
            <summary>
            Represents a collection of parameters associated with a Microsoft.Webstore.Data.SqlClient.SqlCommand and their respective mappings to columns in a Microsoft.Webstore.Data.DataSet. This class cannot be inherited.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.IDataParameterCollection">
            <summary>
            Collects all parameters relevant to a Command object and their mappings to Microsoft.Webstore.Data.DataSet columns, and is implemented by .NET Framework data providers that access data sources.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
            <summary>
            Adds the specified Microsoft.Webstore.Data.SqlClient.SqlParameter object to the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.
            </summary>
            <param name="value">An System.Object.</param>
            <returns>The index of the new Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.Add(System.String,Microsoft.Webstore.Data.SqlDbType)">
            <summary>
            Adds a Microsoft.Webstore.Data.SqlClient.SqlParameter to the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection given the parameter name and the data type.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sqlDbType">One of the Microsoft.Webstore.Data.SqlDbType values.</param>
            <returns>The index of the new Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Adds a value to the end of the Microsoft.Webstore.Data.SqlClient.SqlParameterCollection.
            </summary>
            <param name="parameterName">The value to be added.</param>
            <param name="value">The name of the parameter.</param>
            <returns>A Microsoft.Webstore.Data.SqlClient.SqlParameter object.</returns>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlTransaction">
            <summary>
            Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlTransaction.Commit">
            <summary>
            Commits the database transaction.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.SqlClient.SqlTransaction.Rollback">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlBinary">
            <summary>
            Represents a variable-length stream of binary data to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlBoolean">
            <summary>
            Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlByte">
            <summary>
            Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlDateTime">
            <summary>
            Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The Microsoft.Webstore.Data.SqlTypes.SqlDateTime structure has a different underlying data structure from its corresponding .NET Framework type, System.DateTime, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. Microsoft.Webstore.Data.SqlTypes.SqlDateTime actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from "00:00:00 AM 1/1/1900" to an integer will return 0.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlDecimal">
            <summary>
            Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlDouble">
            <summary>
            Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlGuid">
            <summary>
            Represents a GUID to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlInt16">
            <summary>
            Represents a 16-bit signed integer to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlInt32">
            <summary>
            Represents a 32-bit signed integer to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlInt64">
            <summary>
            Represents a 64-bit signed integer to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlMoney">
            <summary>
            Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlSingle">
            <summary>
            Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlTypes.SqlString">
            <summary>
            Represents a variable-length stream of characters to be stored in or retrievedfrom the database. Microsoft.Webstore.Data.SqlTypes.SqlString has a different underlying data structure from its corresponding .NET Framework System.String data type. System.String always uses the default System.Globalization.CultureInfo from the current thread, but Microsoft.Webstore.Data.SqlTypes.SqlString contains its own locale Id and compare flags. The comparison result of two Microsoft.Webstore.Data.SqlTypes.SqlString structures is independent of operating system and current thread locale.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.DataRow">
            <summary>
            Represents a row of data in a Microsoft.Webstore.Data.DataTable.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.DataTable">
            <summary>
            Represents one table of in-memory data.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.Common.DataTableMapping">
            <summary>
            Contains a description of a mapped relationship between a source table and a Microsoft.Webstore.Data.DataTable. This class is used by a Microsoft.Webstore.Data.Common.DataAdapter when populating a Microsoft.Webstore.Data.DataSet.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlInfoMessageEventHandler">
            <summary>
            Represents the method that will handle the Microsoft.Webstore.Data.SqlClient.SqlConnection.InfoMessage event of a Microsoft.Webstore.Data.SqlClient.SqlConnection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Microsoft.Webstore.Data.SqlClient.SqlInfoMessageEventArgs">
            <summary>
            Provides data for the Microsoft.Webstore.Data.SqlClient.SqlConnection.InfoMessage event.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Data.StubExecutor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubExecutor.LoadDriverXml(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry">
            <summary>
                Writes a message to the log indicating a method has been entered.
            </summary>
            Tell the compiler not to inline this, so that our stack trace will
            continue to be accurate.
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry(System.Object)">
            <summary>
                Writes a message to the log indicating a method has been entered.
            </summary>
            <param name="inputParameter">
                Optional parameter value to include in the log message.
            </param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry(System.Object,System.Object)">
             <summary>
                 Writes a message to the log indicating a method has been entered.
             </summary>
             <param name="inputParameter1">
                 Optional parameter value to include in the log message.
             </param>
             <param name="inputParameter2">
                 Optional parameter value to include in the log message.
            </param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodEntry(System.Object[])">
            <summary>
                Writes a message to the log indicating a method has been entered.
            </summary>
            <param name="inputParameters">
                Optional list of parameter values to include in the log message.
            </param>
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodExit">
            <summary>
                Writes a message to the log indicating a method has been exited.
            </summary>
            Tell the compiler not to inline this, so that our stack trace will
            continue to be accurate.
        </member>
        <member name="M:Microsoft.Webstore.Data.StubTrace.MethodExit(System.Object)">
            <summary>
                Writes a message to the log indicating a method has been exited.
            </summary>
            <param name="returnValue">
                Optional value that will be returned from the method.
            </param>
            Tell the compiler not to inline this, so that our stack trace will
            continue to be accurate.
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\WebstoreWrapper.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebstoreWrapper</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.Wrapper.WrapperWstConnection">
            <summary>
            Class that effective wraps the WstConnection for the express purpose of callings its 
            properties that return generic collections
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWstConnection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWstConnection.Open">
            <summary>
            Open a connection to the Webstore resource)
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWstConnection.ConnectionString">
            <summary>
            Connection String (deployment name)
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWstConnection.SqlPartitions">
            <summary>
            Returns a collection WrapperWebstoreSQLFss objects (which wrap the generic WebstoreSQLFss object) 
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss">
            <summary>
            Class that effective wraps the WebstoreSQLFss object for the express purpose of callings its 
            properties that return generic collections
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss.FssId">
            <summary>
            Fail Safe Set ID
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss.Databases">
            <summary>
            Returns a collection WrapperWebstoreDatabase objects (which wrap the generic WebstoreDatabase object) 
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase">
            <summary>
            Class that effective wraps the WebstoreDatabase object for the express purpose of callings its 
            properties that return generic collections
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.Server">
            <summary>
            Name of the server 
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.Name">
            <summary>
            Name of the database 
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.IsPrimary">
            <summary>
            boolean value indicating if the database is primary or not 
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.Status">
            <summary>
            Status of the database
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\WstConfigUnitTest.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WstConfigUnitTest</name>
    </assembly>
    <members>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\JobFrameworkAgent.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JobFrameworkAgent</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkAgentCategoryInstaller">
            <summary>
            Category installer for the JobFrameworkAgent event source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentCategoryInstaller.EventSource">
            <summary>
            The event source for which to install the category strings.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents">
            <summary>
            Events in the JobFrameworkAgent module.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.log">
            <summary>
            MSN Runtime's event logger 
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.#ctor">
            <summary>
            Private constructor prevents instantiation.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobFrameworkStartupFailureValue">
            <summary>
            EventDefinition for JobFrameworkStartupFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobFrameworkStartupFailure(System.String)">
            <summary>
            Method to log an event of type JobFrameworkStartupFailure.
            </summary>
            <param name="stackTrace">Argument stackTrace for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobFrameworkStartupFailure(System.String,System.Exception)">
            <summary>
            Method to log an event of type JobFrameworkStartupFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="stackTrace">Argument stackTrace for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobEngineHeartBeatFailureValue">
            <summary>
            EventDefinition for JobEngineHeartBeatFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobEngineHeartBeatFailure">
            <summary>
            Method to log an event of type JobEngineHeartBeatFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogJobEngineHeartBeatFailure(System.Exception)">
            <summary>
            Method to log an event of type JobEngineHeartBeatFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.CreateNewJobStepFailureValue">
            <summary>
            EventDefinition for CreateNewJobStepFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogCreateNewJobStepFailure(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Method to log an event of type CreateNewJobStepFailure.
            </summary>
            <param name="assemblyName">Argument assemblyName for formatting the event text.</param>
            <param name="Version">Argument Version for formatting the event text.</param>
            <param name="jobStepFullName">Argument jobStepFullName for formatting the event text.</param>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogCreateNewJobStepFailure(System.String,System.String,System.String,System.Boolean,System.Exception)">
            <summary>
            Method to log an event of type CreateNewJobStepFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="assemblyName">Argument assemblyName for formatting the event text.</param>
            <param name="Version">Argument Version for formatting the event text.</param>
            <param name="jobStepFullName">Argument jobStepFullName for formatting the event text.</param>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.HeartBeatThreadFailureValue">
            <summary>
            EventDefinition for HeartBeatThreadFailure
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogHeartBeatThreadFailure">
            <summary>
            Method to log an event of type HeartBeatThreadFailure.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogHeartBeatThreadFailure(System.Exception)">
            <summary>
            Method to log an event of type HeartBeatThreadFailure with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.AppDomainUnloadErrorValue">
            <summary>
            EventDefinition for AppDomainUnloadError
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogAppDomainUnloadError(System.Boolean)">
            <summary>
            Method to log an event of type AppDomainUnloadError.
            </summary>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.LogAppDomainUnloadError(System.Boolean,System.Exception)">
            <summary>
            Method to log an event of type AppDomainUnloadError with Exception information.
            </summary>
            <param name="exception">The exception corresponding to this event.</param>
            <param name="isSafeMode">Argument isSafeMode for formatting the event text.</param>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.EventLogger">
            <summary>
            Gets the EventLogger used to report events from this source.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.EventSource">
            <summary>
            Gets the event source for events defined in this module.
            </summary>
            <value>
            The event source for events defined in this module.
            </value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobFrameworkStartupFailure">
            <summary>
              Gets the EventDefinition for the JobFrameworkStartupFailure.
            </summary>
            <value>The EventDefinition for the JobFrameworkStartupFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.JobEngineHeartBeatFailure">
            <summary>
              Gets the EventDefinition for the JobEngineHeartBeatFailure.
            </summary>
            <value>The EventDefinition for the JobEngineHeartBeatFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.CreateNewJobStepFailure">
            <summary>
              Gets the EventDefinition for the CreateNewJobStepFailure.
            </summary>
            <value>The EventDefinition for the CreateNewJobStepFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.HeartBeatThreadFailure">
            <summary>
              Gets the EventDefinition for the HeartBeatThreadFailure.
            </summary>
            <value>The EventDefinition for the HeartBeatThreadFailure</value>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobFrameworkAgentEvents.AppDomainUnloadError">
            <summary>
              Gets the EventDefinition for the AppDomainUnloadError.
            </summary>
            <value>The EventDefinition for the AppDomainUnloadError</value>
        </member>
        <member name="T:Microsoft.Webstore.Common.ServiceInstaller">
            <summary>
             A common installer class for installing Webstore services.
             </summary>
             <remarks>This class can only be invoked by a caller with unrestricted RegistryPermission.
             </remarks>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.#ctor(System.String)">
            <summary>
            Instantiates an instance of the ServiceInstaller.
            </summary>
            <param name="serviceName">The name of the service to be installed.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Install(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, performs the installation.
            </summary>
            <param name="stateSaver">An System.Collections.IDictionary used to save information needed to perform a commit, rollback, or uninstall operation.</param>
        </member>
        <member name="M:Microsoft.Webstore.Common.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
            <summary>
            When overridden in a derived class, removes an installation.
            </summary>
            <param name="savedState">An System.Collections.IDictionary that contains the state of the computer after the installation was complete.</param>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller">
            <summary>
            JobServiceInstaller for installing JobFrameworkAgent service.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.#ctor">
            <summary>
            Default constructor, initializes new instance of the JobFrameworkAgentInstaller by InstallUtil.exe.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobFrameworkAgentInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobEngine.JobStepProxy">
            <summary>
            The JobStepProxy is the jobstep from the agent app domain that we can return to the client through
            remoting. It forwards all call to the JobStep from the job appdomain. This allows us to have a single
            network sink.
            </summary>    
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobStepProxy.Add(Microsoft.Webstore.JobEngine.IPartitionSet,Microsoft.Webstore.JobEngine.IPartitionSet)">
            <summary>
            Allows the Job Agent to add new partitions if it notices that there is
            currently a worker running of the same type.
            It is a performance optimization.
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobStepProxy.AcceptAdd">
            <summary>
            If true, the Job Agent is allowed to pass in new partitions
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgent.CreateNewAsyncExecuteBatch(Microsoft.Webstore.JobEngine.IJobEngine,System.String,Microsoft.Webstore.JobEngine.Location,System.Int32,System.String,System.String,System.Version,System.Object,System.Boolean)">
            <summary>
            Create the ASyncExecuteBatch that will host the worker in the Job Agent machine
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgent.UpdateStatus(System.Int32,System.String)">
            <summary>
            Called by the worker to update status (human readable)
            This status ultimately gets logged to the jobDetails table
            in the jobStatus deployment
            </summary>
            <param name="batchId">JobAgent issues batchId</param>
            <param name="status"></param>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgent.InitializeLifetimeService">
            <summary>
            Make the JobAgent lease eternal so that JobAgent doesn't get GCed
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Webstore.JobEngine.JobAgent.IsListenerInitialized">
            <summary>
            Has the listner for commands been initialized?
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgentService.OnStart(System.String[])">
            <summary>
            Set things in motion so your service can do its work.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobEngine.JobAgentService.OnStop">
            <summary>
            Stop this service.
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\SampleJob.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SampleJob</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Init(Microsoft.Webstore.JobEngine.IJobAgent,System.String,Microsoft.Webstore.JobEngine.Location,System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="ja"></param>
            <param name="localMachine"></param>
            <param name="location"></param>
            <param name="userArgs"></param>
            <param name="batchId"></param>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Run(Microsoft.Webstore.JobEngine.IPartitionSet,Microsoft.Webstore.JobEngine.IPartitionSet,System.Int32@)">
            <summary>
            
            </summary>
            <param name="inputSet"></param>
            <param name="outputSet"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Microsoft#Webstore#JobEngine#IJobStep#Add(Microsoft.Webstore.JobEngine.IPartitionSet,Microsoft.Webstore.JobEngine.IPartitionSet)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.JobFramework.Testing.SampleJob.SampleJobWorker.Microsoft#Webstore#JobEngine#IJobStep#get_AcceptAdd">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobFramework.Testing.SampleJob.EventLogHelper">
            <summary>
            This class is used to log events over given period of time.  Call StartListening
            to begin listening to the specified event log.  If a file name is provided, then 
            the events will be saved to a file.
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.JobFramework.Testing.SampleJob.EventLog_Reader">
            <summary>
            This is a helper class that is used to read
            the EventLog for webstore related events.
            The events are read form the ApplicationLog, 
            and are filtered on webstore.
            All the members of this class are static.
            </summary>
            
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\fre\doc\WebstoreWrapper.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebstoreWrapper</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Webstore.Wrapper.WrapperWstConnection">
            <summary>
            Class that effective wraps the WstConnection for the express purpose of callings its 
            properties that return generic collections
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWstConnection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWstConnection.Open">
            <summary>
            Open a connection to the Webstore resource)
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWstConnection.ConnectionString">
            <summary>
            Connection String (deployment name)
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWstConnection.SqlPartitions">
            <summary>
            Returns a collection WrapperWebstoreSQLFss objects (which wrap the generic WebstoreSQLFss object) 
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss">
            <summary>
            Class that effective wraps the WebstoreSQLFss object for the express purpose of callings its 
            properties that return generic collections
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss.FssId">
            <summary>
            Fail Safe Set ID
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreSQLFss.Databases">
            <summary>
            Returns a collection WrapperWebstoreDatabase objects (which wrap the generic WebstoreDatabase object) 
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase">
            <summary>
            Class that effective wraps the WebstoreDatabase object for the express purpose of callings its 
            properties that return generic collections
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.Server">
            <summary>
            Name of the server 
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.Name">
            <summary>
            Name of the database 
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.IsPrimary">
            <summary>
            boolean value indicating if the database is primary or not 
            </summary>
        </member>
        <member name="P:Microsoft.Webstore.Wrapper.WrapperWebstoreDatabase.Status">
            <summary>
            Status of the database
            </summary>
        </member>
    </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\xonline-ext\webstore\5.5.2421.0000\SDK\chk\doc\Wmo.xml ===
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wmo</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoUpgradeResource.GetObject(System.String)">
            <summary>
            GetObject
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoResource.GetObject(System.String)">
            <summary>
            GetObject
            </summary>
        </member>
        <member name="T:Microsoft.Webstore.Management.Wmo.WmoErrorHelper">
            <summary>
            Error Helper for getting string resources, IDs and names.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Management.Wmo.WmoErrorHelper.Number">
            <summary>
            The ID Number associated with this error resource.
            </summary>
        </member>
        <member name="F:Microsoft.Webstore.Management.Wmo.WmoErrorHelper.Format">
            <summary>
            The Format string before the parameters are inserted.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoErrorHelper.#ctor(System.String)">
            <summary>
            The constructor for the class requires the Short name.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.XMLValidationFailure">
            <summary>
            XML Validation was not successful. The XmlFileName is not loaded.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.XMLValidationError(System.String)">
            <summary>
            XML Validation Error: {0}
            </summary>
            <param name="ValidationError"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.XMLMissingElement(System.String)">
            <summary>
            The required XML element "{0}" was not found.
            </summary>
            <param name="MissingElement"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.XMLMissingAttribute(System.String,System.String)">
            <summary>
            The required XML attribute "{0}" in the element "{1}" was not found.
            </summary>
            <param name="MissingAttribute"></param>
            <param name="Element"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.XMLMissingNode(System.String)">
            <summary>
            The required XML node "{0}" was not found.
            </summary>
            <param name="MissingNode"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidMinSqlVersion(System.String)">
            <summary>
            Invalid minimum SQL Server version ({0}). It must be in the form M.mm.BBB or MM.mm.BBBB. For example 8.00.760.
            </summary>
            <param name="BadVersion"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotObtainDTCWithWstConfig(System.String,System.Data.SqlClient.SqlException)">
            <summary>
            The WstConfig database on the server {0} could not be accessed. Check net connectivty and MSSqlServer service status. If connectivity cannot be re-established, mark the database offline. The SQL error was \"{1}\".
            </summary>
            <param name="ServerName"></param>
            <param name="se"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DuplicateName(System.String,System.String)">
            <summary>
            {0} "{1}" already exists.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.TooOldWstConfig(System.String,System.String)">
            <summary>
            WstConfig version "{0}" is less than minimum WstConfig version "{1}" supported by Wmo.dll.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MultipleDatabasesWithNoSecondaries(System.String,System.String)">
            <summary>
            Deployment "{0}" has SqlSecondaryType of NoSecondaries but has multiple databases in SqlFailSafeSet "{1}".
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MismatchPartitionCount(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Manifest "{0}" has LogicalPartitionCount = {1} but Deployment "{2}" lists {3} Data Partitions.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.UnexpectedDataPartition(System.String,System.Int16)">
            <summary>
            Expected Data Partition with Number = {0}, found Data Partition with Number = {1}.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotDropWstConfigDeployment">
            <summary>
            Cannot drop deployment "WstConfig".
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.PartitionMappedToInvalidFss(System.Int16,System.String,System.Int16)">
            <summary>
            Data Partition {0} is mapped to invalid {1} FailSafe Set {2}.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoPartitionsSpecified">
            <summary>
            34;No data partitions specified.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoPublication(System.String,System.String)">
            <summary>
            Publication "{0}" not found for manifest "{1}".
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoDistribInfo">
            <summary>
            XML tag "DistributionDirectories" required for replication.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MultipleManifestVersions(System.Int32)">
            <summary>
            There are {0} versions of that manifest stored in the config.  Please specify a specific version to export.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.UnknownDistribServerSetup(System.String,System.String)">
            <summary>
            Server "{0}" is set up as the distribution server for server "{1}" but is not registered as a data server.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DistribDBRegisteredInFss(System.String,System.String)">
            <summary>
            Distribution database "{0}:{1}" is registered in a SQL FailSafe Set.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoDistribDB(System.String)">
            <summary>
            Server "{0}" does not have a distribution database registered.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidPublicationType(System.String)">
            <summary>
            49;Invalid PublicationType: "{0}"
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.AgentException(Microsoft.Webstore.WstChannels.Pipe.PipeIOException)">
            <summary>
            Unexpected Pipe error {0}
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.AgentNotRunning(System.Exception)">
            <summary>
            AgentNotRunning = 19;Webstore agent is not running!
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.AgentAccessDenied(System.Exception)">
            <summary>
            AgentAccessDenied = 20;Webstore agent access is denied!
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DTCException(System.Exception,System.Reflection.MethodBase)">
            <summary>
            Unexpected DTC error {0}
            </summary>
            <param name="e"></param>
            <param name="mb"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DTCException2(System.String,System.Guid,System.EnterpriseServices.TransactionStatus)">
            <summary>
            220;{0} with transaction ID {1} returned {2}.
            </summary>
            <param name="methodName"></param>
            <param name="ts"></param>
            <param name="tranID"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.PrimaryExistsCannotPromote(System.String,System.String,System.String,System.String)">
            <summary>
            Cannot Promote {0}:{1} until {2}:{3} has been demoted.
            </summary>
            <param name="desiredPrimaryServer"></param>
            <param name="desiredPrimaryName"></param>
            <param name="currentPrimaryServer"></param>
            <param name="currentPrimaryName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ErrorWeAreInDTC">
            <summary>
             The Wait For Polling Interval must not be called while we are in a DTC.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DefaultPrimaryNotExist(System.String,System.String)">
            <summary>
             You must have a DefaultPrimary database listed for each partition.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoPrimaryInPartition(System.String)">
            <summary>
             Sql Failsafe Set {0} does not have a Primary database.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InappropriateStatus(System.String,Microsoft.Webstore.Management.Wmo.WmoDatabase,System.String)">
            <summary>
            52;The {0} operation is inappropriate for the database "{1}:{2}" with {3} status.  The database must be in the following state(s) for this operation to complete:  ({4}).
            </summary>
            <param name="op"></param>
            <param name="db"></param>
            <param name="validStates"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InappropriateFileStatus(System.String,Microsoft.Webstore.Management.Wmo.WmoFileShare,System.String)">
            <summary>
            53;The {0} operation is inappropriate for the fileshare "\\\\{1}\\{2}" with {3} status.  The fileshare must be in the following state(s) for this operation to complete:  ({4}).
            </summary>
            <param name="op"></param>
            <param name="fs"></param>
            <param name="validStates"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ReplDrainFailed(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Replication from {0}:{1} cannot be drained.
            </summary>
            <param name="PubSvrName"></param>
            <param name="PubDBName"></param>
            <param name="SubSvrName"></param>
            <param name="SubDBName"></param>
            <param name="Reason"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ReplDrainFailed(System.String,System.String,System.String)">
            <summary>
            Your SqlSecondaryType in your Manifest must be set to LogShipping in order to run this command.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ErrorInApplicationSQL(System.String,System.Data.SqlClient.SqlException)">
            <summary>
            A SQL error was found in the file "{0}". The error was: {1}.
            </summary>
            <param name="Filename"></param>
            <param name="se"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoPermission(System.Data.SqlClient.SqlException)">
            <summary>
            No permission to perform the operation.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidFileShare(System.String,System.String,System.Exception)">
            <summary>
            Invalid FileShare: "\\\\{0}\\{1}".
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotStartJob(System.String,System.String)">
            <summary>
            Job {0}:{1} cannot be started.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotStopJob(System.String,System.String)">
            <summary>
            Job {0}:{1} cannot be stopped.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ChangeNotAllowedInUpdateVersion(System.String)">
            <summary>
            {0} isn't allowed to be changed in Upgrade version.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CouldNotCreateSourceFile(System.String,System.Exception)">
            <summary>
            Could not write to the source file {0}. The error was {1}.
            </summary>
            <param name="FileName"></param>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.FileGroupMissing(System.String,System.String,System.String)">
            <summary>
            65;You have specified the FileGroup "{0}" in your {1}, however, this FileGroup is missing from your {2}. By default, the standard FileGroups "Primary" and "LogFileGroup" are available in your Manifest, but custom FileGroups must be specified.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MustDeclareSqlOrFileFailSafeSetNodes">
            <summary>
            You must declare either SqlFailSafeSet or FileFailSafeSet nodes for adding a partition.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidFailSafeSetNumber">
            <summary>
            All Fail Safe Set numbers must be unique, sequential and start from 0. With add partition, new FSS numbers must resume from the last available FSS Number.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.RequiredParameterMissing(System.String)">
            <summary>
            The required parameter {0} is missing from the command line.
            </summary>
            <param name="Parameter"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoDatabase(System.String,System.String)">
            <summary>
            Database "{0}:{1}" is not registered.
            </summary>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoFileShare(System.String,System.String)">
            <summary>
            FileShare "{0}:{1}" is not registered.
            </summary>
            <param name="ServerName"></param>
            <param name="FileSharePath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotDropPrimary(System.String,System.String,System.String)">
            <summary>
            CannotDropPrimary = "{0}:{1}" is a primary {2}. Please demote before dropping.
            </summary>
            <param name="ServerName"></param>
            <param name="ObjName"></param>
            <param name="ObjType"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotDropDefaultPrimary(System.String,System.String)">
            <summary>
            Database "{0}:{1}" is a default primary database. Cannot drop the default primary.
            </summary>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MustHaveAnOnlineConfig(System.String)">
            <summary>
            Cannot change the status of "{0}:WstConfig" to "{1}" because it is the last online WstConfig database.
            </summary>
            <param name="ServerName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoOnlineDatabaseInFss(System.String,System.String)">
            <summary>
            No databases in the same failsafe set as "{0}:{1}" are online.
            </summary>
            <param name="ServerName"></param>
            <param name="DBName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.SqlException(System.Data.SqlClient.SqlException)">
            <summary>
            SqlException Wrapper
            </summary>
            <param name="se"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.WstConfigAlreadyExists(System.String)">
            <summary>
            The WstConfig database already exists on the server {0}
            </summary>
            <param name="ServerName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NotYetImplemented_NYI(System.String)">
            <summary>
            The function {0} is Not Yet Implemented (NYI)
            </summary>
            <param name="UnimplementedMethod"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoReplSecondary(System.String)">
            <summary>
            NoReplSecondary = Type of Secondary {0} doesn't support replication.
            </summary>
            <param name="TypeOfSqlSecondary"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.PubSubNotInSameFSS">
            <summary>
            Publishing database and subscribing database are not in the same fail safe set.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ConfigChangedForAdminLock">
            <summary>
            Config Databases have changed. Please rerun command.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidValue(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            89;The value {0} for {1} is invalid. Valid values are {2} to {3}.
            </summary>
            <param name="Value"></param>
            <param name="Description"></param>
            <param name="minVal"></param>
            <param name="maxVal"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidValue(System.String,System.String,System.Int32,System.Int32,System.Exception)">
            <summary>
            The value {0} for {1} is invalid. Valid values are {2} to {3}.
            </summary>
            <param name="Value"></param>
            <param name="Description"></param>
            <param name="minVal"></param>
            <param name="maxVal"></param>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ReplicasCannotBeOnSameServer(System.String,System.String,System.String)">
            <summary>
            There are 2 or more {0} in Fail Safe Set {1} on the same server "{2}".
            </summary>
            <param name="fssType"></param>
            <param name="partitionNum"></param>
            <param name="serverName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ErrorGeneratingReplicationStoredProcedures(System.String,System.Exception)">
            <summary>
            Could not create temporary database for generating replication stored procedures. The error occured on server {0}. The error message was {1}
            </summary>
            <param name="Server"></param>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.FixedParCannotHaveFileShare">
            <summary>
            Only non-partitioned or variable partitioning applications are allowed to have file shares.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ErrorReservedWord(System.String)">
            <summary>
            You cannot use the term {0} for the requested action. This is a Webstore reserved word.
            </summary>
            <param name="ReservedWord"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotDropNonEmptyDep(System.String)">
            <summary>
            Deployment {0} is already deployed and can only be dropped with -force option.
            </summary>
            <param name="DeploymentName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotForceRepairWithPrimaryExist">
            <summary>
            Cannot force repair database because there is still primary in the fail safe set. Please demote primary before force repair.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotAddPartition">
            <summary>
            Cannot add partition to fixed or non partitioned application.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.LogReaderJobMissing(System.String,System.String)">
            <summary>
            LogReader Job does not exist for database {1}:{2}.
            </summary>
            <param name="pubSvrName"></param>
            <param name="pubDBName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DistribJobMissing(System.String,System.String,System.String,System.String)">
            <summary>
            98;Distribution Job does not exist for replication from {0}:{1} to {2}:{3}.
            </summary>
            <param name="pubSvrName"></param>
            <param name="pubDBName"></param>
            <param name="subSvrName"></param>
            <param name="subDBName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.DistribJobMissing2(System.String,System.String,System.String)">
            <summary>
            215;Distribution Job {0} does not exist for replication on server {1} for database {2}.
            </summary>
            <param name="JobName"></param>
            <param name="ServerName"></param>
            <param name="DatabaseName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.SqlServerAgentNotRunning(System.String)">
            <summary>
            Sql Server Agent on Server {0} is not running.
            </summary>
            <param name="serverName"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ConfigVersionDifferent">
            <summary>
            WstConfig databases have different versions. Please finish upgrading before running any operation.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.LogError(System.Exception,System.String)">
            <summary>
            {0}\r\n\r\nFor more info see "{1}"
            </summary>
            <param name="e"></param>
            <param name="LogFile"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoFailSafeSetsToSetup">
            <summary>
            There are no Fail Safe Sets to Setup. Run Import first.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CantSetBoth">
            <summary>
            Can't set default primary for SQLFailSafeSet and FileFailSafeSet at the same time.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CantViewBoth">
            <summary>
            Can't view history for SQLFailSafeSet and FileFailSafeSet at the same time.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidFormat(System.String)">
            <summary>
            Invalid format {0}. The -newprimary parameter needs to be of the format Server\\Databasename for database or Server\\Filesharepath for fileshares.
            </summary>
            <param name="BadParm"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.LockException(System.Exception)">
            <summary>
            108;Unexpected SQL error creating Administration Lock {0}
            </summary>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidEnum(System.String,System.String)">
            <summary>
            109;Invalid {0}: "{1}"
            </summary>
            <returns>WmoException</returns>
            <param name="strType"></param>
            <param name="str"></param>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidFailSafeSetCount(System.Int32)">
            <summary>
            119;Invalid Fail Safe Set Count: {0}
            </summary>
            <param name="i"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.UnexpectedFailure(System.Exception)">
            <summary>
            121;Unexpected failure: {0}
            </summary>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.UnexpectedFailure(System.String)">
            <summary>
            121;Unexpected failure: {0}
            </summary>
            <param name="Problem"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.UnexpectedFailure">
            <summary>
            127;Unexpected failure
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidFileShareState">
            <summary>
            122;If you specify a Primary node, the FileShare and DataServer must be in the list of FileShares on this partition.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotSpecifySource">
            <summary>
            124;Validation failure: Cannot specify source for a publication used for Secondaries.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ColumnNamesMissing">
            <summary>
            125;Validation failure: Must specify names for the ChangeDateTime and NeedsReplication columns for MultiMaster publications.
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.FileIOError(System.String,System.Exception)">
            <summary>
            126;Failed to read file {0}
            </summary>
            <param name="Filename"></param>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ReThrow(System.Exception)">
            <summary>
            ReThrow WmoExecption
            </summary>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ProxyCallException(System.String,System.String,System.Exception)">
            <summary>
            128;{0}+{1}: Unexpected proxy call error.
            </summary>
            <param name="objectName"></param>
            <param name="methodName"></param>
            <param name="e"></param>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CommandAbortException(System.Exception)">
            <summary>
            129;Command aborted
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NoPartitionMoveMap(System.String)">
            <summary>
            130;No movedata specified for "{0}" deployment!
            </summary>
            <returns>WmoException</returns>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MoreThanTwoNICsNotAllowed(System.String)">
            <summary>
            More than 2 NICs for server {0} is not allowed.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.OnlyOnePreferredNICAllowed(System.String)">
            <summary>
            Only one preferred NIC is allowed for server {0}.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidArgument(System.String,System.String,System.String)">
            <summary>
            133;Invalid argument "{0} {1}": {2}
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.ColumnNotExist(System.String,System.String)">
            <summary>
            ColumnNotExist = 134;After Manifest import, the required column [{0}] on Table [{1}] does not exist!
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MismatchServerAndIP(System.String,System.String)">
            <summary>
            137;IP "{0}" does not belong to Server "{1}".
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MoveDataNotFinish">
            <summary>
            138;MoveData process is not yet finished!
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidJobName(System.String,System.String)">
            <summary>
            201;The job name {0}, when combined with the database {1} exceeds 128 characters.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.CannotUpdateDeployedDatabase(System.String,System.String)">
            <summary>
            202;Cannot update info of database {0}:{1}. Only databases in the state of NotDeployed or NeedsRepair can be updated.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.MissingReplicationStoredProcedure(System.String)">
            <summary>
            203;The replication stored procedure {0} was not found in the list of registered stored procedures. This is required for replication.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.TooManySecondaries">
            <summary>
            205;Number of replicas per fail safe set has to be less than number of servers per cluster for the deployment.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.NumSqlFssNumFileFssNotDivisible">
            <summary>
            206;Number of SqlFailSafeSet and NumberFileFailSafeSet are not divisible by each other.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.JobWouldNotStop(System.String)">
            <summary>
            207;The job "{0}" was disabled, but would not stop. Investigate the process to see if it is hung.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.InvalidCharacters(System.String,System.String,System.String)">
            <summary>
            208;The {2} with the identifier "{0}" contains an invalid character. The characters {1} are not allowed in identifiers.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.OneParameterOrTheOther(System.String,System.String)">
            <summary>
            210;This command requires either the {0} parameter or the {1} parameter. Specify one or the other, and not both.
            </summary>
        </member>
        <member name="M:Microsoft.Webstore.Management.Wmo.WmoError.SqlServerNotRunning(